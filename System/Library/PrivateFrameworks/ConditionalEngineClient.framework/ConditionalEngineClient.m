uint64_t sub_238434ED0()
{
  return 1;
}

uint64_t sub_238434ED8()
{
  sub_238492D18();
  sub_238492D24();
  return sub_238492D48();
}

uint64_t sub_238434F18()
{
  return sub_238492D24();
}

uint64_t sub_238434F3C()
{
  sub_238492D18();
  sub_238492D24();
  return sub_238492D48();
}

unint64_t sub_238434F78()
{
  return 0xD000000000000025;
}

unint64_t sub_238434FA8()
{
  uint64_t inited;
  uint64_t v1;

  sub_238435C24(&qword_256909BB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_238493540;
  *(_QWORD *)(inited + 32) = sub_23849261C();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = 0xD000000000000025;
  *(_QWORD *)(inited + 56) = 0x8000000238497320;
  return sub_23847E2BC(inited);
}

uint64_t sub_238435030()
{
  sub_238436A6C();
  return sub_238492CC4();
}

uint64_t sub_238435058()
{
  sub_238436A6C();
  return sub_238492CB8();
}

void __swiftcall ScheduledQueryFileManager.init(file:)(ConditionalEngineClient::ScheduledQueryFileManager *__return_ptr retstr, Swift::String file)
{
  void *object;
  uint64_t countAndFlagsBits;

  object = file._object;
  countAndFlagsBits = file._countAndFlagsBits;
  retstr->fileManager.super.isa = (Class)objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  retstr->groupIdentifier._countAndFlagsBits = 0xD000000000000021;
  retstr->groupIdentifier._object = (void *)0x8000000238497260;
  retstr->file._countAndFlagsBits = countAndFlagsBits;
  retstr->file._object = object;
}

uint64_t *sub_2384350F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  void *v14;
  unsigned int v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(char *, uint64_t);
  uint8_t *v23;
  uint64_t v24;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t v28;
  void *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = sub_238491ECC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v26 - v7;
  v9 = *(void **)v0;
  v10 = *(_OWORD *)(v0 + 8);
  v11 = *(_QWORD *)(v0 + 24);
  v12 = *(_QWORD *)(v0 + 32);
  v29 = *(void **)v0;
  v30 = v10;
  v31 = v11;
  v32 = v12;
  v13 = (uint64_t *)&v29;
  sub_2384353E4((uint64_t)&v26 - v7);
  if (!v1)
  {
    sub_238491EA8();
    v14 = (void *)sub_238492610();
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(v9, sel_fileExistsAtPath_, v14);

    if (v15)
    {
      v13 = (uint64_t *)sub_238491ED8();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
    else
    {
      if (qword_2569099F8 != -1)
        swift_once();
      v16 = sub_238492574();
      sub_238435CA4(v16, (uint64_t)qword_256909F48);
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      v17 = sub_23849255C();
      v18 = sub_238492880();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        v28 = swift_slowAlloc();
        v29 = (void *)v28;
        v27 = v19;
        *(_DWORD *)v19 = 136315138;
        v26 = v19 + 4;
        v20 = sub_238491EA8();
        v33 = sub_23843604C(v20, v21, (uint64_t *)&v29);
        sub_238492934();
        swift_bridgeObjectRelease();
        v22 = *(void (**)(char *, uint64_t))(v3 + 8);
        v22(v6, v2);
        v23 = v27;
        _os_log_impl(&dword_238433000, v17, v18, "[ScheduledQueryFileManager] %s doesn't exist", v27, 0xCu);
        v24 = v28;
        swift_arrayDestroy();
        MEMORY[0x23B835AF4](v24, -1, -1);
        MEMORY[0x23B835AF4](v23, -1, -1);

      }
      else
      {

        v22 = *(void (**)(char *, uint64_t))(v3 + 8);
        v22(v6, v2);
      }
      v22(v8, v2);
      return 0;
    }
  }
  return v13;
}

uint64_t sub_2384353E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[4];

  v33 = a1;
  v34 = sub_238491E84();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v31 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_238435C24(&qword_256909AC8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_238491ECC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v30 - v11;
  v14 = *(void **)v1;
  v13 = *(_QWORD *)(v1 + 8);
  v15 = *(_QWORD *)(v1 + 16);
  v30 = *(_QWORD *)(v1 + 24);
  v16 = *(_QWORD *)(v1 + 32);
  v35 = v13;
  v36 = v16;
  v17 = (void *)sub_238492610();
  v18 = objc_msgSend(v14, sel_containerURLForSecurityApplicationGroupIdentifier_, v17);

  if (v18)
  {
    sub_238491E9C();

    v19 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v19(v5, v10, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      v19(v12, v5, v6);
      v20 = v31;
      v37[0] = v30;
      v37[1] = v36;
      v21 = v32;
      v22 = v34;
      (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v31, *MEMORY[0x24BDCD7A0], v34);
      sub_238436638();
      swift_bridgeObjectRetain();
      sub_238491EC0();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v22);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  sub_238435C64((uint64_t)v5);
  if (qword_2569099F8 != -1)
    swift_once();
  v24 = sub_238492574();
  sub_238435CA4(v24, (uint64_t)qword_256909F48);
  v25 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = sub_23849255C();
  v27 = sub_238492868();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v37[0] = v29;
    *(_DWORD *)v28 = 136315138;
    swift_bridgeObjectRetain();
    v37[3] = sub_23843604C(v35, v15, v37);
    sub_238492934();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_238433000, v26, v27, "[ScheduledQueryFileManager] group identifier %s is invalid", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v29, -1, -1);
    MEMORY[0x23B835AF4](v28, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  sub_238435CBC();
  swift_allocError();
  return swift_willThrow();
}

uint64_t ScheduledQueryFileManager.databaseURL()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[4];

  v33 = a1;
  v34 = sub_238491E84();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v31 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_238435C24(&qword_256909AC8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_238491ECC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v30 - v11;
  v14 = *(void **)v1;
  v13 = *(_QWORD *)(v1 + 8);
  v15 = *(_QWORD *)(v1 + 16);
  v30 = *(_QWORD *)(v1 + 24);
  v16 = *(_QWORD *)(v1 + 32);
  v35 = v13;
  v36 = v16;
  v17 = (void *)sub_238492610();
  v18 = objc_msgSend(v14, sel_containerURLForSecurityApplicationGroupIdentifier_, v17);

  if (v18)
  {
    sub_238491E9C();

    v19 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v19(v5, v10, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      v19(v12, v5, v6);
      v20 = v31;
      v37[0] = v30;
      v37[1] = v36;
      v21 = v32;
      v22 = v34;
      (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v31, *MEMORY[0x24BDCD7A0], v34);
      sub_238436638();
      swift_bridgeObjectRetain();
      sub_238491EC0();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v22);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  sub_238435C64((uint64_t)v5);
  if (qword_2569099F8 != -1)
    swift_once();
  v24 = sub_238492574();
  sub_238435CA4(v24, (uint64_t)qword_256909F48);
  v25 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = sub_23849255C();
  v27 = sub_238492868();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v37[0] = v29;
    *(_DWORD *)v28 = 136315138;
    swift_bridgeObjectRetain();
    v37[3] = sub_23843604C(v35, v15, v37);
    sub_238492934();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_238433000, v26, v27, "[ScheduledQueryFileManager] group identifier %s is invalid", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v29, -1, -1);
    MEMORY[0x23B835AF4](v28, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  sub_238435CBC();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_238435C24(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B835A28]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_238435C64(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_238435C24(&qword_256909AC8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_238435CA4(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t sub_238435CBC()
{
  unint64_t result;

  result = qword_256909AD0;
  if (!qword_256909AD0)
  {
    result = MEMORY[0x23B835A40](&unk_2384936BC, &type metadata for ScheduledQueryFileManager.Error);
    atomic_store(result, (unint64_t *)&qword_256909AD0);
  }
  return result;
}

unint64_t default argument 0 of OpenAIClient.init(systemPrompt:apiKey:model:temperature:maxTokens:apiURL:session:inferenceRunStore:)()
{
  return 0xD00000000000005FLL;
}

uint64_t default argument 2 of OpenAIClient.init(systemPrompt:apiKey:model:temperature:maxTokens:apiURL:session:inferenceRunStore:)()
{
  uint64_t v0;
  _OWORD v2[2];
  uint64_t v3;

  if (qword_256909A80 != -1)
    swift_once();
  swift_beginAccess();
  v2[0] = xmmword_25690A828;
  v2[1] = *(_OWORD *)&qword_25690A838;
  v3 = qword_25690A848;
  sub_23843667C((uint64_t)v2);
  v0 = sub_23844B4A8();
  sub_2384366BC((uint64_t)v2);
  return v0;
}

double default argument 3 of OpenAIClient.init(systemPrompt:apiKey:model:temperature:maxTokens:apiURL:session:inferenceRunStore:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  double v4;
  double v5;

  if (qword_256909A70 != -1)
    swift_once();
  swift_beginAccess();
  v0 = qword_25690A7E8;
  v1 = qword_25690A7F0;
  v2 = (void *)qword_25690A7F8;
  swift_bridgeObjectRetain();
  v3 = v2;
  sub_23844B584(v0, v1, v3);
  v5 = v4;

  swift_bridgeObjectRelease();
  return v5;
}

uint64_t default argument 4 of OpenAIClient.init(systemPrompt:apiKey:model:temperature:maxTokens:apiURL:session:inferenceRunStore:)()
{
  __int128 v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;

  if (qword_256909A68 != -1)
    swift_once();
  swift_beginAccess();
  v0 = xmmword_25690A7C0;
  v2 = qword_25690A7D0;
  v1 = (void *)qword_25690A7D8;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_23844B644(v0, *((uint64_t *)&v0 + 1), v2, v3);

  swift_bridgeObjectRelease();
  return v4;
}

unint64_t default argument 5 of OpenAIClient.init(systemPrompt:apiKey:model:temperature:maxTokens:apiURL:session:inferenceRunStore:)()
{
  return 0xD00000000000002ALL;
}

id default argument 6 of OpenAIClient.init(systemPrompt:apiKey:model:temperature:maxTokens:apiURL:session:inferenceRunStore:)()
{
  return objc_msgSend((id)objc_opt_self(), sel_sharedSession);
}

uint64_t default argument 0 of EventStreamClient.init(shoudSanitize:startDate:)()
{
  return 0;
}

uint64_t default argument 0 of EventStreamClient.fetchJasonEvents(shouldConsolidate:)()
{
  return 0;
}

uint64_t sub_238435F74()
{
  return swift_slowAlloc();
}

uint64_t sub_238435F7C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void sub_238435FB0()
{
  JUMPOUT(0x23B835AF4);
}

uint64_t sub_238435FBC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_238435FDC(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_23843604C(v6, v7, a3);
  v8 = *a1 + 8;
  sub_238492934();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_23843604C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_23843611C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_238436B5C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_238436B5C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_238436B3C((uint64_t)v12);
  return v7;
}

uint64_t sub_23843611C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_238492940();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_2384362D4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_238492AC0();
  if (!v8)
  {
    sub_238492B14();
    __break(1u);
LABEL_17:
    result = sub_238492B5C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_2384362D4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_238436368(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2384364DC(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_2384364DC(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_238436368(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23848B6D0(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_238492A84();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_238492B14();
      __break(1u);
LABEL_10:
      v2 = sub_2384926C4();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_238492B5C();
    __break(1u);
LABEL_14:
    result = sub_238492B14();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_2384364DC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_238435C24(&qword_256909BC0);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_238492B5C();
  __break(1u);
  return result;
}

_BYTE **sub_238436628(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

unint64_t sub_238436638()
{
  unint64_t result;

  result = qword_25690A510;
  if (!qword_25690A510)
  {
    result = MEMORY[0x23B835A40](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25690A510);
  }
  return result;
}

uint64_t sub_23843667C(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

uint64_t sub_2384366BC(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for ScheduledQueryFileManager(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ScheduledQueryFileManager(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ScheduledQueryFileManager(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  a1[4] = *(_QWORD *)(a2 + 32);
  v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScheduledQueryFileManager(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ScheduledQueryFileManager(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ScheduledQueryFileManager(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  v6 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledQueryFileManager(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledQueryFileManager(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryFileManager()
{
  return &type metadata for ScheduledQueryFileManager;
}

uint64_t getEnumTagSinglePayload for ScheduledQueryFileManager.Error(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for ScheduledQueryFileManager.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2384369D4 + 4 * byte_238493560[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2384369F4 + 4 * byte_238493565[v4]))();
}

_BYTE *sub_2384369D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2384369F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2384369FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_238436A04(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_238436A0C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_238436A14(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_238436A20()
{
  return 0;
}

ValueMetadata *type metadata accessor for ScheduledQueryFileManager.Error()
{
  return &type metadata for ScheduledQueryFileManager.Error;
}

unint64_t sub_238436A40(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_238436A6C();
  result = sub_238436AB0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_238436A6C()
{
  unint64_t result;

  result = qword_256909BA0;
  if (!qword_256909BA0)
  {
    result = MEMORY[0x23B835A40](&unk_2384935B0, &type metadata for ScheduledQueryFileManager.Error);
    atomic_store(result, (unint64_t *)&qword_256909BA0);
  }
  return result;
}

unint64_t sub_238436AB0()
{
  unint64_t result;

  result = qword_256909BA8;
  if (!qword_256909BA8)
  {
    result = MEMORY[0x23B835A40](&unk_2384935F0, &type metadata for ScheduledQueryFileManager.Error);
    atomic_store(result, (unint64_t *)&qword_256909BA8);
  }
  return result;
}

unint64_t sub_238436AF8()
{
  unint64_t result;

  result = qword_256909BB0;
  if (!qword_256909BB0)
  {
    result = MEMORY[0x23B835A40](&unk_238493694, &type metadata for ScheduledQueryFileManager.Error);
    atomic_store(result, (unint64_t *)&qword_256909BB0);
  }
  return result;
}

uint64_t sub_238436B3C(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_238436B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void type metadata accessor for RTLocationOfInterestType()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_256909BC8)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_256909BC8);
  }
}

void sub_238436BF0(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

unint64_t sub_238436C48()
{
  sub_238492A78();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  return 0xD00000000000001CLL;
}

void sub_238436D40()
{
  uint64_t v0;

  sub_238436BF0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

unint64_t sub_238436D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;

  sub_238436BF0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
  if (!v2)
    return sub_23847E2BC(MEMORY[0x24BEE4AF8]);
  v3 = v1;
  v4 = v2;
  sub_238435C24(&qword_256909BB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_238493540;
  *(_QWORD *)(inited + 32) = sub_23849261C();
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  return sub_23847E2BC(inited);
}

uint64_t sub_238436DF8()
{
  sub_238438E58();
  return sub_238492CC4();
}

uint64_t sub_238436E20()
{
  sub_238438E58();
  return sub_238492CB8();
}

uint64_t sub_238436E4C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v14 = MEMORY[0x24BEE4AF8];
  sub_23848B7AC(0, 3, 0);
  v0 = v14;
  swift_bridgeObjectRetain();
  sub_2384926A0();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v14 + 16);
  v1 = *(_QWORD *)(v14 + 24);
  if (v2 >= v1 >> 1)
  {
    sub_23848B7AC(v1 > 1, v2 + 1, 1);
    v0 = v14;
  }
  *(_QWORD *)(v0 + 16) = v2 + 1;
  v3 = v0 + 16 * v2;
  *(_QWORD *)(v3 + 32) = 96;
  *(_QWORD *)(v3 + 40) = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_2384926A0();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  if (v5 >= v4 >> 1)
    sub_23848B7AC(v4 > 1, v5 + 1, 1);
  *(_QWORD *)(v0 + 16) = v5 + 1;
  v6 = v0 + 16 * v5;
  *(_QWORD *)(v6 + 32) = 96;
  *(_QWORD *)(v6 + 40) = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_2384926A0();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v0 + 16);
  v7 = *(_QWORD *)(v0 + 24);
  if (v8 >= v7 >> 1)
    sub_23848B7AC(v7 > 1, v8 + 1, 1);
  *(_QWORD *)(v0 + 16) = v8 + 1;
  v9 = v0 + 16 * v8;
  *(_QWORD *)(v9 + 32) = 96;
  *(_QWORD *)(v9 + 40) = 0xE100000000000000;
  swift_arrayDestroy();
  sub_238435C24(&qword_256909DD8);
  sub_238438FF4();
  v10 = sub_2384925F8();
  v12 = v11;
  result = swift_release();
  qword_256909D50 = v10;
  qword_256909D58 = v12;
  return result;
}

uint64_t static ScheduledQuerySendMessageRunner.examplePhrases.getter()
{
  uint64_t v0;

  if (qword_2569099E0 != -1)
    swift_once();
  swift_beginAccess();
  v0 = qword_256909D50;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static ScheduledQuerySendMessageRunner.examplePhrases.setter(uint64_t a1, uint64_t a2)
{
  if (qword_2569099E0 != -1)
    swift_once();
  swift_beginAccess();
  qword_256909D50 = a1;
  qword_256909D58 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ScheduledQuerySendMessageRunner.examplePhrases.modify())()
{
  if (qword_2569099E0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ScheduledQuerySendMessageRunner.run(query:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch();
}

uint64_t sub_23843722C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t SendMessageRunnerV07extractfG05querySS4name_SS7messagetSgSS_tFZ_0;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (qword_256909A08 != -1)
    swift_once();
  v1 = sub_238492574();
  sub_238435CA4(v1, (uint64_t)qword_256909F78);
  swift_bridgeObjectRetain_n();
  v2 = sub_23849255C();
  v3 = sub_23849285C();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 32);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 24);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v22 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_23843604C(v6, v5, &v22);
    sub_238492934();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_238433000, v2, v3, "Running Send Message: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v8, -1, -1);
    MEMORY[0x23B835AF4](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  SendMessageRunnerV07extractfG05querySS4name_SS7messagetSgSS_tFZ_0 = _s23ConditionalEngineClient31ScheduledQuerySendMessageRunnerV07extractfG05querySS4name_SS7messagetSgSS_tFZ_0(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  *(_QWORD *)(v0 + 40) = v10;
  if (v10)
  {
    v13 = SendMessageRunnerV07extractfG05querySS4name_SS7messagetSgSS_tFZ_0;
    v14 = v10;
    v15 = v11;
    v16 = v12;
    *(_QWORD *)(v0 + 48) = v12;
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 56) = v17;
    *v17 = v0;
    v17[1] = sub_2384374A4;
    v17[4] = v15;
    v17[5] = v16;
    v17[2] = v13;
    v17[3] = v14;
    return swift_task_switch();
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 24);
    v19 = *(_QWORD *)(v0 + 32);
    sub_238438BD0();
    swift_allocError();
    *(_QWORD *)v21 = v20;
    *(_QWORD *)(v21 + 8) = v19;
    *(_BYTE *)(v21 + 16) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2384374A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 8))(0, 0);
}

uint64_t sub_23843752C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ScheduledQuerySendMessageRunner.send(name:message:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_238437584()
{
  uint64_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;

  if (qword_256909A08 != -1)
    swift_once();
  v1 = sub_238492574();
  v0[6] = sub_238435CA4(v1, (uint64_t)qword_256909F78);
  v2 = sub_23849255C();
  v3 = sub_238492880();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_238433000, v2, v3, "Running Send Message", v4, 2u);
    MEMORY[0x23B835AF4](v4, -1, -1);
  }

  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_238437688;
  return sub_2384378F8(v0[2], v0[3]);
}

uint64_t sub_238437688(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[8] = a1;
  v4[9] = a2;
  v4[10] = v2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2384376F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 72);
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v2;
    *v2 = v0;
    v2[1] = sub_2384377CC;
    v3 = *(_QWORD *)(v0 + 64);
    v4 = *(_QWORD *)(v0 + 40);
    v2[21] = *(_QWORD *)(v0 + 32);
    v2[22] = v4;
    v2[19] = v3;
    v2[20] = v1;
    return swift_task_switch();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 16);
    v6 = *(_QWORD *)(v0 + 24);
    sub_238438BD0();
    swift_allocError();
    *(_QWORD *)v8 = v7;
    *(_QWORD *)(v8 + 8) = v6;
    *(_BYTE *)(v8 + 16) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2384377CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23843783C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_23849255C();
  v2 = sub_238492880();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_238433000, v1, v2, "Running plan: finished", v3, 2u);
    MEMORY[0x23B835AF4](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2384378E0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2384378EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2384378F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[12] = a1;
  v2[13] = a2;
  v3 = sub_238435C24(&qword_256909DA0);
  v2[14] = v3;
  v2[15] = *(_QWORD *)(v3 - 8);
  v2[16] = swift_task_alloc();
  v4 = sub_2384923E8();
  v2[17] = v4;
  v2[18] = *(_QWORD *)(v4 - 8);
  v2[19] = swift_task_alloc();
  v5 = sub_238435C24((uint64_t *)&unk_25690AAB0);
  v2[20] = v5;
  v2[21] = *(_QWORD *)(v5 - 8);
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2384379B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[18];
  v1 = v0[19];
  v3 = v0[17];
  type metadata accessor for ConversationEntityRepresentation();
  sub_2384923DC();
  sub_238438F50(&qword_256909DA8, (uint64_t)&unk_238495D34);
  sub_2384923B8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultEnvironment);
  v5 = sub_238438F14();
  v6 = MEMORY[0x24BE04080];
  v0[5] = v5;
  v0[6] = v6;
  v0[2] = v4;
  v0[23] = sub_2384923D0();
  sub_238436B3C((uint64_t)(v0 + 2));
  swift_getObjectType();
  v7 = (_QWORD *)swift_task_alloc();
  v0[24] = v7;
  sub_238438F50(&qword_256909DB0, (uint64_t)&unk_238495D64);
  *v7 = v0;
  v7[1] = sub_238437B54;
  return sub_2384923AC();
}

uint64_t sub_238437B54()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_238437BB8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = sub_2384923A0();
  if (!(v1 >> 62))
  {
    result = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_3;
LABEL_8:
    v10 = *(_QWORD *)(v0 + 176);
    v11 = *(_QWORD *)(v0 + 160);
    v12 = *(_QWORD *)(v0 + 168);
    v14 = *(_QWORD *)(v0 + 120);
    v13 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    v7 = 0;
    v9 = 0;
    goto LABEL_9;
  }
  result = sub_238492B2C();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x23B835200](0, v1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_6:
    v3 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 160);
    v17 = *(_QWORD *)(v0 + 176);
    v4 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 128);
    v6 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRelease();
    sub_238492328();
    swift_release();
    sub_238438F90((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
    v7 = sub_238492394();
    v9 = v8;
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v17, v16);
    sub_238436B3C(v0 + 56);
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v7, v9);
  }
  __break(1u);
  return result;
}

uint64_t sub_238437D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 168);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238437DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[21] = a3;
  v4[22] = a4;
  v4[19] = a1;
  v4[20] = a2;
  return swift_task_switch();
}

uint64_t sub_238437E04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t inited;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t);

  v2 = v0[21];
  v1 = v0[22];
  v3 = objc_allocWithZone(MEMORY[0x24BE5FC68]);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_238492610();
  v5 = (void *)sub_238492610();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_initWithTypeIdentifier_instanceIdentifier_, v4, v5);

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE5FC78]), sel_init);
  v8 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v9 = v6;
  v10 = objc_msgSend(v8, sel_initWithValue_valueType_, v9, v7);
  v0[23] = v10;

  sub_238435C24((uint64_t *)&unk_25690AAA0);
  inited = swift_initStackObject();
  v0[24] = inited;
  *(_OWORD *)(inited + 16) = xmmword_2384938A0;
  strcpy((char *)(inited + 32), "conversation");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(_QWORD *)(inited + 48) = v10;
  v12 = (void *)objc_opt_self();
  v13 = v10;
  swift_bridgeObjectRetain();
  v14 = objc_msgSend(v12, sel_stringValueType);
  v15 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v0[17] = v2;
  v0[18] = v1;
  swift_bridgeObjectRetain();
  v16 = objc_msgSend(v15, sel_initWithValue_valueType_, sub_238492C94(), v14);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = 0x746E65746E6F63;
  *(_QWORD *)(inited + 64) = 0xE700000000000000;
  *(_QWORD *)(inited + 72) = v16;
  *(_QWORD *)&xmmword_256911CE0 = 0xD000000000000013;
  *((_QWORD *)&xmmword_256911CE0 + 1) = 0x8000000238497690;
  swift_bridgeObjectRelease();
  v0[15] = &type metadata for ActionExecutionOptions;
  v0[16] = &off_250A27C50;
  v17 = swift_allocObject();
  v0[12] = v17;
  *(_QWORD *)(v17 + 16) = 0xD000000000000013;
  *(_QWORD *)(v17 + 24) = 0x8000000238497690;
  *(_WORD *)(v17 + 32) = 513;
  *(_QWORD *)(v17 + 40) = 0;
  *(_BYTE *)(v17 + 48) = 1;
  *(_OWORD *)(v17 + 56) = 0u;
  *(_OWORD *)(v17 + 72) = 0u;
  v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_25690B2D0 + dword_25690B2D0);
  v18 = (_QWORD *)swift_task_alloc();
  v0[25] = v18;
  *v18 = v0;
  v18[1] = sub_238438110;
  return v20(0x6C706552646E6553, 0xEF746E65746E4979, inited, 0, 1, (uint64_t)(v0 + 12), 0, 0);
}

uint64_t sub_238438110()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 208) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0)
    sub_238436B3C(v2 + 96);
  return swift_task_switch();
}

uint64_t sub_23843818C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2384381C0()
{
  uint64_t v0;

  sub_238436B3C(v0 + 96);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238438200(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_238438264;
  v5[3] = a1;
  v5[4] = a2;
  return swift_task_switch();
}

uint64_t sub_238438264(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

uint64_t _s23ConditionalEngineClient31ScheduledQuerySendMessageRunnerV07extractfG05querySS4name_SS7messagetSgSS_tFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  _BOOL4 v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  char *v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v70 = a2;
  sub_238435C24(&qword_256909DB8);
  v3 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v60 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v62 = (char *)&v58 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v58 - v7;
  v9 = sub_238435C24(&qword_256909DC0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v58 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v59 = (char *)&v58 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v58 - v15;
  v17 = sub_238435C24(&qword_256909DC8);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v61 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v69 = (char *)&v58 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v58 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v58 - v26;
  v67 = sub_238435C24(&qword_256909DD0);
  sub_2384922BC();
  sub_2384922D4();
  v63 = *(void (**)(char *, uint64_t))(v18 + 8);
  v63(v25, v17);
  v68 = a1;
  v64 = v17;
  v65 = v27;
  sub_2384922C8();
  v66 = v10;
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v29 = v9;
  if (v28(v8, 1, v9) == 1)
  {
    sub_238438FB4((uint64_t)v8);
    sub_2384922BC();
    v30 = v64;
    sub_2384922D4();
    v31 = v63;
    v63(v25, v30);
    v32 = (uint64_t)v62;
    sub_2384922C8();
    v33 = v66;
    v34 = v29;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v32, 1, v29) == 1)
    {
      sub_238438FB4(v32);
      sub_2384922BC();
      v35 = v61;
      sub_2384922D4();
      v31(v25, v30);
      v36 = (uint64_t)v60;
      sub_2384922C8();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v36, 1, v34) == 1)
      {
        v31(v35, v30);
        v31(v69, v30);
        v31(v65, v30);
        sub_238438FB4(v36);
        return 0;
      }
      v52 = v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v58, v36, v34);
      if (qword_256909A08 != -1)
        swift_once();
      v53 = sub_238492574();
      sub_238435CA4(v53, (uint64_t)qword_256909F78);
      v54 = sub_23849255C();
      v55 = sub_238492880();
      if (os_log_type_enabled(v54, v55))
      {
        v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v56 = 0;
        _os_log_impl(&dword_238433000, v54, v55, "Matched text message", v56, 2u);
        MEMORY[0x23B835AF4](v56, -1, -1);
      }

      swift_getKeyPath();
      sub_2384922F8();
      swift_release();
      v37 = MEMORY[0x23B834DE0](v71, v72, v73, v74);
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      sub_2384922F8();
      swift_release();
      MEMORY[0x23B834DE0](v71, v72, v73, v74);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v52, v34);
      v31(v61, v30);
    }
    else
    {
      v46 = v32;
      v47 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v59, v46, v29);
      if (qword_256909A08 != -1)
        swift_once();
      v48 = sub_238492574();
      sub_238435CA4(v48, (uint64_t)qword_256909F78);
      v49 = sub_23849255C();
      v50 = sub_238492880();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v51 = 0;
        _os_log_impl(&dword_238433000, v49, v50, "Matched text message with comma", v51, 2u);
        MEMORY[0x23B835AF4](v51, -1, -1);
      }

      swift_getKeyPath();
      sub_2384922F8();
      swift_release();
      v37 = MEMORY[0x23B834DE0](v71, v72, v73, v74);
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      sub_2384922F8();
      swift_release();
      MEMORY[0x23B834DE0](v71, v72, v73, v74);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v47, v29);
    }
    v31(v69, v30);
    v31(v65, v30);
    return v37;
  }
  v38 = v16;
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v16, v8, v9);
  v39 = v63;
  if (qword_256909A08 != -1)
    swift_once();
  v40 = sub_238492574();
  sub_238435CA4(v40, (uint64_t)qword_256909F78);
  v41 = sub_23849255C();
  v42 = sub_238492880();
  v43 = os_log_type_enabled(v41, v42);
  v44 = v64;
  if (v43)
  {
    v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v45 = 0;
    _os_log_impl(&dword_238433000, v41, v42, "Matched send message", v45, 2u);
    MEMORY[0x23B835AF4](v45, -1, -1);
  }

  swift_getKeyPath();
  sub_2384922F8();
  swift_release();
  v37 = MEMORY[0x23B834DE0](v71, v72, v73, v74);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_2384922F8();
  swift_release();
  MEMORY[0x23B834DE0](v71, v72, v73, v74);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v38, v9);
  v39(v65, v44);
  return v37;
}

unint64_t sub_238438BD0()
{
  unint64_t result;

  result = qword_256909D68;
  if (!qword_256909D68)
  {
    result = MEMORY[0x23B835A40](&unk_23849381C, &type metadata for SendMessageRunnerError);
    atomic_store(result, (unint64_t *)&qword_256909D68);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQuerySendMessageRunner()
{
  return &type metadata for ScheduledQuerySendMessageRunner;
}

uint64_t sub_238438C28(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for SendMessageRunnerError(uint64_t a1)
{
  return sub_238438C50(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_238438C50(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s23ConditionalEngineClient22SendMessageRunnerErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_238438C28(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SendMessageRunnerError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_238438C28(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_238438C50(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for SendMessageRunnerError(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SendMessageRunnerError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_238438C50(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SendMessageRunnerError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SendMessageRunnerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_238438DE8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_238438E00(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SendMessageRunnerError()
{
  return &type metadata for SendMessageRunnerError;
}

unint64_t sub_238438E2C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_238438E58();
  result = sub_238438E9C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_238438E58()
{
  unint64_t result;

  result = qword_256909D90;
  if (!qword_256909D90)
  {
    result = MEMORY[0x23B835A40](&unk_238493778, &type metadata for SendMessageRunnerError);
    atomic_store(result, (unint64_t *)&qword_256909D90);
  }
  return result;
}

unint64_t sub_238438E9C()
{
  unint64_t result;

  result = qword_256909D98;
  if (!qword_256909D98)
  {
    result = MEMORY[0x23B835A40](&unk_2384937B8, &type metadata for SendMessageRunnerError);
    atomic_store(result, (unint64_t *)&qword_256909D98);
  }
  return result;
}

uint64_t sub_238438EE0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_238438F14()
{
  unint64_t result;

  result = qword_25690AAC0;
  if (!qword_25690AAC0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25690AAC0);
  }
  return result;
}

uint64_t sub_238438F50(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ConversationEntityRepresentation();
    result = MEMORY[0x23B835A40](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_238438F90(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_238438FB4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_238435C24(&qword_256909DB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_238438FF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25690AB00;
  if (!qword_25690AB00)
  {
    v1 = sub_238439040(&qword_256909DD8);
    result = MEMORY[0x23B835A40](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_25690AB00);
  }
  return result;
}

uint64_t sub_238439040(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B835A34](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

const char *FeatureFlag.domain.getter()
{
  return "ConditionalEngine";
}

const char *FeatureFlag.feature.getter()
{
  return "conditionalEngine";
}

uint64_t FeatureFlag.isEnabled.getter()
{
  char v0;
  _BYTE v2[24];
  ValueMetadata *v3;
  unint64_t v4;

  v3 = &type metadata for FeatureFlag;
  v4 = sub_2384390F8();
  v0 = sub_238492058();
  sub_238436B3C((uint64_t)v2);
  return v0 & 1;
}

unint64_t sub_2384390F8()
{
  unint64_t result;

  result = qword_256909DE0;
  if (!qword_256909DE0)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for FeatureFlag, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_256909DE0);
  }
  return result;
}

uint64_t static FeatureFlag.== infix(_:_:)()
{
  return 1;
}

uint64_t FeatureFlag.hash(into:)()
{
  return sub_238492D24();
}

uint64_t FeatureFlag.hashValue.getter()
{
  sub_238492D18();
  sub_238492D24();
  return sub_238492D48();
}

unint64_t sub_2384391AC()
{
  unint64_t result;

  result = qword_256909DE8;
  if (!qword_256909DE8)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for FeatureFlag, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_256909DE8);
  }
  return result;
}

const char *sub_2384391F0()
{
  return "ConditionalEngine";
}

const char *sub_238439204()
{
  return "conditionalEngine";
}

uint64_t storeEnumTagSinglePayload for FeatureFlag(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_238439258 + 4 * asc_2384938D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_238439278 + 4 * byte_2384938D5[v4]))();
}

_BYTE *sub_238439258(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_238439278(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_238439280(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_238439288(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_238439290(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_238439298(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlag()
{
  return &type metadata for FeatureFlag;
}

void sub_2384392B4(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

unint64_t sub_23843930C()
{
  sub_238492A78();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  return 0xD00000000000001CLL;
}

void sub_238439404()
{
  uint64_t v0;

  sub_2384392B4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

unint64_t sub_238439410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;

  sub_2384392B4(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
  if (!v2)
    return sub_23847E2BC(MEMORY[0x24BEE4AF8]);
  v3 = v1;
  v4 = v2;
  sub_238435C24(&qword_256909BB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_238493540;
  *(_QWORD *)(inited + 32) = sub_23849261C();
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  return sub_23847E2BC(inited);
}

uint64_t sub_2384394BC()
{
  sub_23843AF7C();
  return sub_238492CC4();
}

uint64_t sub_2384394E4()
{
  sub_23843AF7C();
  return sub_238492CB8();
}

uint64_t sub_238439510()
{
  uint64_t i;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v8 = MEMORY[0x24BEE4AF8];
  sub_23848B7AC(0, 5, 0);
  for (i = 0; i != 80; i += 16)
  {
    swift_bridgeObjectRetain();
    sub_2384926A0();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    v2 = *(_QWORD *)(v8 + 16);
    v1 = *(_QWORD *)(v8 + 24);
    if (v2 >= v1 >> 1)
      sub_23848B7AC(v1 > 1, v2 + 1, 1);
    *(_QWORD *)(v8 + 16) = v2 + 1;
    v3 = v8 + 16 * v2;
    *(_QWORD *)(v3 + 32) = 96;
    *(_QWORD *)(v3 + 40) = 0xE100000000000000;
  }
  swift_arrayDestroy();
  sub_238435C24(&qword_256909DD8);
  sub_238438FF4();
  v4 = sub_2384925F8();
  v6 = v5;
  result = swift_release();
  qword_256909DF0 = v4;
  qword_256909DF8 = v6;
  return result;
}

uint64_t static ScheduledQuerySetFocusRunner.examplePhrases.getter()
{
  uint64_t v0;

  if (qword_2569099E8 != -1)
    swift_once();
  swift_beginAccess();
  v0 = qword_256909DF0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static ScheduledQuerySetFocusRunner.examplePhrases.setter(uint64_t a1, uint64_t a2)
{
  if (qword_2569099E8 != -1)
    swift_once();
  swift_beginAccess();
  qword_256909DF0 = a1;
  qword_256909DF8 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ScheduledQuerySetFocusRunner.examplePhrases.modify())()
{
  if (qword_2569099E8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ScheduledQuerySetFocusRunner.run(query:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch();
}

uint64_t sub_238439884()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t SetFocusRunnerV07extractG4Type5querySSSgSS_tFZ_0;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (qword_256909A08 != -1)
    swift_once();
  v1 = sub_238492574();
  sub_238435CA4(v1, (uint64_t)qword_256909F78);
  swift_bridgeObjectRetain_n();
  v2 = sub_23849255C();
  v3 = sub_23849285C();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 32);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 24);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v18 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_23843604C(v6, v5, &v18);
    sub_238492934();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_238433000, v2, v3, "Running Set Focus: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v8, -1, -1);
    MEMORY[0x23B835AF4](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  SetFocusRunnerV07extractG4Type5querySSSgSS_tFZ_0 = _s23ConditionalEngineClient28ScheduledQuerySetFocusRunnerV07extractG4Type5querySSSgSS_tFZ_0();
  *(_QWORD *)(v0 + 40) = v10;
  if (v10)
  {
    v11 = SetFocusRunnerV07extractG4Type5querySSSgSS_tFZ_0;
    v12 = v10;
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v13;
    *v13 = v0;
    v13[1] = sub_238439AEC;
    v13[2] = v11;
    v13[3] = v12;
    return swift_task_switch();
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 24);
    v15 = *(_QWORD *)(v0 + 32);
    sub_23843AE68();
    swift_allocError();
    *(_QWORD *)v17 = v16;
    *(_QWORD *)(v17 + 8) = v15;
    *(_BYTE *)(v17 + 16) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_238439AEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 8))(0, 0);
}

uint64_t sub_238439B68()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ScheduledQuerySetFocusRunner.setFocus(focusType:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_238439B8C()
{
  uint64_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;

  if (qword_256909A08 != -1)
    swift_once();
  v1 = sub_238492574();
  v0[4] = sub_238435CA4(v1, (uint64_t)qword_256909F78);
  v2 = sub_23849255C();
  v3 = sub_238492880();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_238433000, v2, v3, "Running Set Focus", v4, 2u);
    MEMORY[0x23B835AF4](v4, -1, -1);
  }

  v5 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_238439C90;
  return sub_238439EEC(v0[2], v0[3]);
}

uint64_t sub_238439C90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[6] = a1;
  v4[7] = a2;
  v4[8] = v2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_238439D00()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 56);
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v2;
    *v2 = v0;
    v2[1] = sub_238439DCC;
    v2[18] = *(_QWORD *)(v0 + 48);
    v2[19] = v1;
    return swift_task_switch();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    sub_23843AE68();
    swift_allocError();
    *(_QWORD *)v6 = v5;
    *(_QWORD *)(v6 + 8) = v4;
    *(_BYTE *)(v6 + 16) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_238439DCC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_238439E3C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_23849255C();
  v2 = sub_238492880();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_238433000, v1, v2, "Running plan: finished", v3, 2u);
    MEMORY[0x23B835AF4](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238439EE0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238439EEC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[12] = a1;
  v2[13] = a2;
  v3 = sub_238435C24(&qword_256909EF0);
  v2[14] = v3;
  v2[15] = *(_QWORD *)(v3 - 8);
  v2[16] = swift_task_alloc();
  v4 = sub_2384923E8();
  v2[17] = v4;
  v2[18] = *(_QWORD *)(v4 - 8);
  v2[19] = swift_task_alloc();
  v5 = sub_238435C24(&qword_256909EF8);
  v2[20] = v5;
  v2[21] = *(_QWORD *)(v5 - 8);
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_238439FA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  type metadata accessor for FocusEntityRepresentation();
  if (qword_2569099F0 != -1)
    swift_once();
  v2 = v0[18];
  v1 = v0[19];
  v3 = v0[17];
  swift_bridgeObjectRetain();
  sub_2384923DC();
  swift_bridgeObjectRelease();
  sub_23843B158(&qword_256909ED8, (uint64_t)&unk_238493C2C);
  sub_2384923B8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultEnvironment);
  v5 = sub_238438F14();
  v6 = MEMORY[0x24BE04080];
  v0[5] = v5;
  v0[6] = v6;
  v0[2] = v4;
  v0[23] = sub_2384923D0();
  sub_238436B3C((uint64_t)(v0 + 2));
  swift_getObjectType();
  v7 = (_QWORD *)swift_task_alloc();
  v0[24] = v7;
  sub_23843B158(&qword_256909F00, (uint64_t)&unk_238493C5C);
  *v7 = v0;
  v7[1] = sub_238437B54;
  return sub_2384923AC();
}

uint64_t sub_23843A17C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 144) = a1;
  *(_QWORD *)(v2 + 152) = a2;
  return swift_task_switch();
}

uint64_t sub_23843A194()
{
  _QWORD *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t inited;
  id v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t);

  v1 = objc_allocWithZone(MEMORY[0x24BE5FC68]);
  swift_bridgeObjectRetain();
  v2 = (void *)sub_238492610();
  v3 = (void *)sub_238492610();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_initWithTypeIdentifier_instanceIdentifier_, v2, v3);

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE5FC78]), sel_init);
  v6 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v7 = v4;
  v8 = objc_msgSend(v6, sel_initWithValue_valueType_, v7, v5);
  v0[20] = v8;

  v9 = objc_msgSend((id)objc_opt_self(), sel_BOOLValueType);
  v10 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v0[17] = 1;
  v11 = objc_msgSend(v10, sel_initWithValue_valueType_, sub_238492C94(), v9);
  v0[21] = v11;

  swift_unknownObjectRelease();
  sub_238435C24((uint64_t *)&unk_25690AAA0);
  inited = swift_initStackObject();
  v0[22] = inited;
  *(_OWORD *)(inited + 16) = xmmword_2384938A0;
  *(_QWORD *)(inited + 32) = 0x7375636F66;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  *(_QWORD *)(inited + 48) = v8;
  *(_QWORD *)(inited + 56) = 0x656C62616E65;
  *(_QWORD *)(inited + 64) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = v11;
  *(_QWORD *)&xmmword_256911CE0 = 0xD000000000000015;
  *((_QWORD *)&xmmword_256911CE0 + 1) = 0x8000000238497800;
  v13 = v8;
  v14 = v11;
  swift_bridgeObjectRelease();
  v0[15] = &type metadata for ActionExecutionOptions;
  v0[16] = &off_250A27C50;
  v15 = swift_allocObject();
  v0[12] = v15;
  *(_QWORD *)(v15 + 16) = 0xD000000000000015;
  *(_QWORD *)(v15 + 24) = 0x8000000238497800;
  *(_WORD *)(v15 + 32) = 513;
  *(_QWORD *)(v15 + 40) = 0;
  *(_BYTE *)(v15 + 48) = 1;
  *(_OWORD *)(v15 + 56) = 0u;
  *(_OWORD *)(v15 + 72) = 0u;
  v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_25690B2D0 + dword_25690B2D0);
  v16 = (_QWORD *)swift_task_alloc();
  v0[23] = v16;
  *v16 = v0;
  v16[1] = sub_23843A46C;
  return v18(0x7375636F46746553, 0xED00006574617453, inited, 0, 1, (uint64_t)(v0 + 12), 0, 0);
}

uint64_t sub_23843A46C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 192) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0)
    sub_238436B3C(v2 + 96);
  return swift_task_switch();
}

uint64_t sub_23843A4E8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 160);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23843A520()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 168);

  sub_238436B3C(v0 + 96);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23843A564(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_238438264;
  v5[3] = a1;
  v5[4] = a2;
  return swift_task_switch();
}

void sub_23843A5C8()
{
  qword_256909E00 = 0x746E457375636F46;
  *(_QWORD *)algn_256909E08 = 0xEB00000000797469;
}

uint64_t sub_23843A5F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_23849234C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = sub_238492388();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t sub_23843A6A4()
{
  sub_23849237C();
  return swift_deallocClassInstance();
}

unint64_t sub_23843A6C0()
{
  return 0xD000000000000015;
}

uint64_t sub_23843A6DC()
{
  uint64_t v0;

  if (qword_2569099F0 != -1)
    swift_once();
  v0 = qword_256909E00;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_23843A738()
{
  return sub_238492328();
}

uint64_t sub_23843A758()
{
  return sub_238492340() & 1;
}

uint64_t sub_23843A77C()
{
  return sub_238492334();
}

uint64_t sub_23843A79C()
{
  sub_23843B158(&qword_256909EE8, (uint64_t)&unk_238493B5C);
  return sub_238492400();
}

uint64_t sub_23843A7D8()
{
  sub_23843B158(&qword_256909ED8, (uint64_t)&unk_238493C2C);
  return sub_2384923C4();
}

uint64_t sub_23843A804()
{
  return sub_238492370();
}

uint64_t sub_23843A824()
{
  sub_23843B158(&qword_256909EE8, (uint64_t)&unk_238493B5C);
  return sub_2384923F4();
}

uint64_t sub_23843A860@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_238492358();
  *a1 = result;
  return result;
}

uint64_t sub_23843A884()
{
  return sub_238492364();
}

uint64_t _s23ConditionalEngineClient28ScheduledQuerySetFocusRunnerV07extractG4Type5querySSSgSS_tFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  char *v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v0 = sub_238435C24(&qword_256909F08);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_238435C24(&qword_256909F10);
  v4 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  v40 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_238435C24(&qword_256909F18);
  v38 = *(_QWORD *)(v43 - 8);
  v6 = MEMORY[0x24BDAC7A8](v43);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v44 = (char *)&v36 - v9;
  v10 = sub_238435C24(&qword_256909F20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_238435C24(&qword_256909F28);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v36 - v18;
  sub_238435C24(&qword_256909F30);
  sub_2384922BC();
  sub_2384922D4();
  v42 = *(void (**)(char *, uint64_t))(v14 + 8);
  v42(v17, v13);
  v41 = v19;
  sub_2384922C8();
  v20 = sub_238435C24(&qword_256909F38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v12, 1, v20) == 1)
  {
    sub_23843B198((uint64_t)v12, &qword_256909F20);
    sub_238435C24(&qword_256909F40);
    sub_2384922BC();
    v21 = v43;
    sub_2384922D4();
    v22 = *(void (**)(char *, uint64_t))(v38 + 8);
    v22(v8, v21);
    sub_2384922C8();
    v24 = v39;
    v23 = v40;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v2, 1, v39) == 1)
    {
      v22(v44, v43);
      v42(v41, v13);
      sub_23843B198((uint64_t)v2, &qword_256909F08);
      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v37, v2, v24);
      if (qword_256909A08 != -1)
        swift_once();
      v30 = sub_238492574();
      sub_238435CA4(v30, (uint64_t)qword_256909F78);
      v31 = sub_23849255C();
      v32 = sub_238492880();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v33 = 0;
        _os_log_impl(&dword_238433000, v31, v32, "Matched set focus", v33, 2u);
        MEMORY[0x23B835AF4](v33, -1, -1);
      }

      swift_getKeyPath();
      v34 = v37;
      sub_2384922F8();
      swift_release();
      v25 = MEMORY[0x23B834DE0](v45, v46, v47, v48);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v24);
      v22(v44, v43);
      v42(v41, v13);
    }
  }
  else
  {
    sub_23843B198((uint64_t)v12, &qword_256909F20);
    if (qword_256909A08 != -1)
      swift_once();
    v26 = sub_238492574();
    sub_238435CA4(v26, (uint64_t)qword_256909F78);
    v27 = sub_23849255C();
    v28 = sub_238492880();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_238433000, v27, v28, "Matched set focus", v29, 2u);
      MEMORY[0x23B835AF4](v29, -1, -1);
    }

    v42(v41, v13);
    return 0x6420746F6E206F64;
  }
  return v25;
}

unint64_t sub_23843AE68()
{
  unint64_t result;

  result = qword_256909E18;
  if (!qword_256909E18)
  {
    result = MEMORY[0x23B835A40](&unk_238493C9C, &type metadata for SetFocusRunnerError);
    atomic_store(result, (unint64_t *)&qword_256909E18);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQuerySetFocusRunner()
{
  return &type metadata for ScheduledQuerySetFocusRunner;
}

uint64_t type metadata accessor for FocusEntityRepresentation()
{
  uint64_t result;

  result = qword_256909E50;
  if (!qword_256909E50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23843AEF8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23843AF34()
{
  return type metadata accessor for FocusEntityRepresentation();
}

ValueMetadata *type metadata accessor for SetFocusRunnerError()
{
  return &type metadata for SetFocusRunnerError;
}

unint64_t sub_23843AF50(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23843AF7C();
  result = sub_23843AFC0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_23843AF7C()
{
  unint64_t result;

  result = qword_256909EA0;
  if (!qword_256909EA0)
  {
    result = MEMORY[0x23B835A40](&unk_238493A34, &type metadata for SetFocusRunnerError);
    atomic_store(result, (unint64_t *)&qword_256909EA0);
  }
  return result;
}

unint64_t sub_23843AFC0()
{
  unint64_t result;

  result = qword_256909EA8;
  if (!qword_256909EA8)
  {
    result = MEMORY[0x23B835A40](&unk_238493A74, &type metadata for SetFocusRunnerError);
    atomic_store(result, (unint64_t *)&qword_256909EA8);
  }
  return result;
}

uint64_t sub_23843B004()
{
  return sub_23843B158(&qword_256909EB0, (uint64_t)&unk_238493AD8);
}

uint64_t sub_23843B028()
{
  return sub_23843B158(&qword_256909EB8, (uint64_t)&unk_238493B8C);
}

uint64_t sub_23843B04C()
{
  return sub_23843B158(&qword_256909EC0, (uint64_t)&unk_238493B1C);
}

uint64_t sub_23843B070()
{
  return sub_23843B158(&qword_256909EC8, (uint64_t)&unk_238493AF4);
}

uint64_t sub_23843B094()
{
  return sub_23843B158(&qword_256909ED0, (uint64_t)&unk_238493BE4);
}

uint64_t sub_23843B0B8()
{
  return sub_23843B158(&qword_256909ED8, (uint64_t)&unk_238493C2C);
}

uint64_t sub_23843B0DC()
{
  return sub_23843B158(&qword_256909EE0, (uint64_t)&unk_238493BBC);
}

uint64_t sub_23843B100()
{
  return sub_23843B158(&qword_256909EE8, (uint64_t)&unk_238493B5C);
}

uint64_t sub_23843B124()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23843B158(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FocusEntityRepresentation();
    result = MEMORY[0x23B835A40](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23843B198(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_238435C24(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23843B1D4()
{
  uint64_t v0;

  if (qword_256909A08 != -1)
    swift_once();
  v0 = sub_238492574();
  return sub_238435CA4(v0, (uint64_t)qword_256909F78);
}

uint64_t sub_23843B21C(uint64_t a1)
{
  return sub_23843B3EC(a1, qword_256909F48);
}

uint64_t static Logger.main.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23843B284(&qword_2569099F8, (uint64_t)qword_256909F48, a1);
}

uint64_t sub_23843B250(uint64_t a1)
{
  return sub_23843B3EC(a1, qword_256909F60);
}

uint64_t static Logger.xpc.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23843B284(&qword_256909A00, (uint64_t)qword_256909F60, a1);
}

uint64_t sub_23843B284@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_238492574();
  v6 = sub_238435CA4(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_23843B2EC(uint64_t a1)
{
  return sub_23843B3EC(a1, qword_256909F78);
}

uint64_t static Logger.runner.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23843B284(&qword_256909A08, (uint64_t)qword_256909F78, a1);
}

uint64_t sub_23843B324(uint64_t a1)
{
  return sub_23843B3EC(a1, qword_256909F90);
}

uint64_t static Logger.app.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23843B284(&qword_256909A10, (uint64_t)qword_256909F90, a1);
}

uint64_t sub_23843B358(uint64_t a1)
{
  return sub_23843B3EC(a1, qword_256909FA8);
}

uint64_t static Logger.intent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23843B284(&qword_256909A18, (uint64_t)qword_256909FA8, a1);
}

uint64_t sub_23843B390(uint64_t a1)
{
  return sub_23843B3EC(a1, qword_256909FC0);
}

uint64_t static Logger.history.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23843B284(&qword_256909A20, (uint64_t)qword_256909FC0, a1);
}

uint64_t sub_23843B3CC(uint64_t a1)
{
  return sub_23843B3EC(a1, qword_256909FD8);
}

uint64_t sub_23843B3EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_238492574();
  sub_23843B47C(v3, a2);
  sub_238435CA4(v3, (uint64_t)a2);
  return sub_238492568();
}

uint64_t static Logger.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23843B284(&qword_256909A28, (uint64_t)qword_256909FD8, a1);
}

uint64_t *sub_23843B47C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_23843B4BC()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ScheduledQueryHistory();
  v0 = swift_allocObject();
  type metadata accessor for ScheduledQueryHistoryStore();
  result = swift_allocObject();
  *(_QWORD *)(v0 + 16) = result;
  qword_256909FF0 = v0;
  return result;
}

uint64_t static ScheduledQueryHistory.shared.getter()
{
  if (qword_256909A30 != -1)
    swift_once();
  return swift_retain();
}

BOOL static ScheduledQueryHistory.Event.EventType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ScheduledQueryHistory.Event.EventType.hash(into:)()
{
  return sub_238492D24();
}

uint64_t sub_23843B584(char a1)
{
  return *(_QWORD *)&aCreate_0[8 * a1];
}

BOOL sub_23843B5A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23843B5BC()
{
  return sub_238492D24();
}

uint64_t sub_23843B5E8()
{
  char *v0;

  return sub_23843B584(*v0);
}

uint64_t sub_23843B5F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23843D4E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23843B614()
{
  return 0;
}

void sub_23843B620(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_23843B62C()
{
  sub_23843BAEC();
  return sub_238492D78();
}

uint64_t sub_23843B654()
{
  sub_23843BAEC();
  return sub_238492D84();
}

uint64_t sub_23843B67C()
{
  return 0;
}

void sub_23843B688(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23843B694()
{
  sub_23843BBFC();
  return sub_238492D78();
}

uint64_t sub_23843B6BC()
{
  sub_23843BBFC();
  return sub_238492D84();
}

uint64_t sub_23843B6E4()
{
  sub_23843BBB8();
  return sub_238492D78();
}

uint64_t sub_23843B70C()
{
  sub_23843BBB8();
  return sub_238492D84();
}

uint64_t sub_23843B734@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_23843B760()
{
  sub_23843BB74();
  return sub_238492D78();
}

uint64_t sub_23843B788()
{
  sub_23843BB74();
  return sub_238492D84();
}

uint64_t sub_23843B7B0()
{
  sub_23843BB30();
  return sub_238492D78();
}

uint64_t sub_23843B7D8()
{
  sub_23843BB30();
  return sub_238492D84();
}

void ScheduledQueryHistory.Event.EventType.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = sub_238435C24(&qword_256909FF8);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_238435C24(&qword_25690A000);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v15 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_238435C24(&qword_25690A008);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v12 = sub_238435C24(&qword_25690A010);
  MEMORY[0x24BDAC7A8](v12);
  v9 = sub_238435C24(&qword_25690A018);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = *v2;
  sub_238438F90(a1, a1[3]);
  sub_23843BAEC();
  sub_238492D60();
  __asm { BR              X9 }
}

uint64_t sub_23843B9B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_23843BBFC();
  sub_238492C04();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

unint64_t sub_23843BAEC()
{
  unint64_t result;

  result = qword_25690A020;
  if (!qword_25690A020)
  {
    result = MEMORY[0x23B835A40](&unk_2384943F4, &type metadata for ScheduledQueryHistory.Event.EventType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A020);
  }
  return result;
}

unint64_t sub_23843BB30()
{
  unint64_t result;

  result = qword_25690A028;
  if (!qword_25690A028)
  {
    result = MEMORY[0x23B835A40](&unk_2384943A4, &type metadata for ScheduledQueryHistory.Event.EventType.RunErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A028);
  }
  return result;
}

unint64_t sub_23843BB74()
{
  unint64_t result;

  result = qword_25690A030;
  if (!qword_25690A030)
  {
    result = MEMORY[0x23B835A40](&unk_238494354, &type metadata for ScheduledQueryHistory.Event.EventType.RunCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A030);
  }
  return result;
}

unint64_t sub_23843BBB8()
{
  unint64_t result;

  result = qword_25690A038;
  if (!qword_25690A038)
  {
    result = MEMORY[0x23B835A40](&unk_238494304, &type metadata for ScheduledQueryHistory.Event.EventType.DeleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A038);
  }
  return result;
}

unint64_t sub_23843BBFC()
{
  unint64_t result;

  result = qword_25690A040;
  if (!qword_25690A040)
  {
    result = MEMORY[0x23B835A40](&unk_2384942B4, &type metadata for ScheduledQueryHistory.Event.EventType.CreateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A040);
  }
  return result;
}

uint64_t ScheduledQueryHistory.Event.EventType.hashValue.getter()
{
  sub_238492D18();
  sub_238492D24();
  return sub_238492D48();
}

uint64_t ScheduledQueryHistory.Event.EventType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v23 = a2;
  v3 = sub_238435C24(&qword_25690A048);
  v21[5] = *(_QWORD *)(v3 - 8);
  v21[6] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_238435C24(&qword_25690A050);
  v21[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_238435C24(&qword_25690A058);
  v21[2] = *(_QWORD *)(v6 - 8);
  v21[3] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_238435C24(&qword_25690A060);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = sub_238435C24(&qword_25690A068);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v27 = a1;
  sub_238438F90(a1, v14);
  sub_23843BAEC();
  v15 = v28;
  sub_238492D54();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v28 = v11;
    v16 = sub_238492BF8();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X9 }
    v17 = sub_238492AB4();
    swift_allocError();
    v19 = v18;
    sub_238435C24(&qword_25690A070);
    *v19 = &type metadata for ScheduledQueryHistory.Event.EventType;
    sub_238492B98();
    sub_238492AA8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  }
  return sub_238436B3C((uint64_t)v27);
}

uint64_t sub_23843C108@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ScheduledQueryHistory.Event.EventType.init(from:)(a1, a2);
}

void sub_23843C11C(_QWORD *a1)
{
  ScheduledQueryHistory.Event.EventType.encode(to:)(a1);
}

uint64_t ScheduledQueryHistory.Event.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_238491F98();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ScheduledQueryHistory.Event.timestamp.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_238491F98();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ScheduledQueryHistory.Event.timestamp.modify())()
{
  return nullsub_1;
}

uint64_t ScheduledQueryHistory.Event.eventType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ScheduledQueryHistory.Event();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for ScheduledQueryHistory.Event()
{
  uint64_t result;

  result = qword_25690A1D0;
  if (!qword_25690A1D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ScheduledQueryHistory.Event.eventType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for ScheduledQueryHistory.Event();
  *(_BYTE *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*ScheduledQueryHistory.Event.eventType.modify())(_QWORD)
{
  type metadata accessor for ScheduledQueryHistory.Event();
  return nullsub_1;
}

uint64_t ScheduledQueryHistory.Event.scheduledQuery.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ScheduledQueryHistory.Event() + 24);
  return sub_23843C2A0(v3, a1);
}

uint64_t sub_23843C2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_238435C24(&qword_25690A078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ScheduledQueryHistory.Event.scheduledQuery.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ScheduledQueryHistory.Event() + 24);
  return sub_23843C318(a1, v3);
}

uint64_t sub_23843C318(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_238435C24(&qword_25690A078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ScheduledQueryHistory.Event.scheduledQuery.modify())(_QWORD)
{
  type metadata accessor for ScheduledQueryHistory.Event();
  return nullsub_1;
}

uint64_t ScheduledQueryHistory.Event.error.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ScheduledQueryHistory.Event() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScheduledQueryHistory.Event.error.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ScheduledQueryHistory.Event() + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ScheduledQueryHistory.Event.error.modify())(_QWORD)
{
  type metadata accessor for ScheduledQueryHistory.Event();
  return nullsub_1;
}

uint64_t ScheduledQueryHistory.Event.result.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ScheduledQueryHistory.Event() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScheduledQueryHistory.Event.result.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ScheduledQueryHistory.Event() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ScheduledQueryHistory.Event.result.modify())(_QWORD)
{
  type metadata accessor for ScheduledQueryHistory.Event();
  return nullsub_1;
}

uint64_t sub_23843C4E0(char a1)
{
  return *(_QWORD *)&aTimestameventt[8 * a1];
}

uint64_t sub_23843C500()
{
  sub_238492D18();
  sub_238492D24();
  return sub_238492D48();
}

uint64_t sub_23843C544()
{
  sub_238492D18();
  sub_238492D24();
  return sub_238492D48();
}

uint64_t sub_23843C584()
{
  char *v0;

  return sub_23843C4E0(*v0);
}

uint64_t sub_23843C58C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23843D668(a1, a2);
  *a3 = result;
  return result;
}

void sub_23843C5B0(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_23843C5BC()
{
  sub_23843D41C();
  return sub_238492D78();
}

uint64_t sub_23843C5E4()
{
  sub_23843D41C();
  return sub_238492D84();
}

uint64_t ScheduledQueryHistory.Event.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = sub_238435C24(&qword_25690A080);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_238438F90(a1, a1[3]);
  sub_23843D41C();
  sub_238492D60();
  v10[15] = 0;
  sub_238491F98();
  sub_23843E8CC(&qword_25690A090, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_238492C4C();
  if (!v2)
  {
    v10[14] = *(_BYTE *)(v3 + *(int *)(type metadata accessor for ScheduledQueryHistory.Event() + 20));
    v10[13] = 1;
    sub_23843D460();
    sub_238492C4C();
    v10[12] = 2;
    type metadata accessor for ScheduledQuery();
    sub_23843E8CC(&qword_25690A0A0, (uint64_t (*)(uint64_t))type metadata accessor for ScheduledQuery, (uint64_t)&protocol conformance descriptor for ScheduledQuery);
    sub_238492C1C();
    v10[11] = 3;
    sub_238492C10();
    v10[10] = 4;
    sub_238492C10();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ScheduledQueryHistory.Event.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;

  v35 = a2;
  v3 = sub_238435C24(&qword_25690A078);
  MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_238491F98();
  v36 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v39 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_238435C24(&qword_25690A0A8);
  v6 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for ScheduledQueryHistory.Event();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t)&v12[*(int *)(v10 + 24)];
  v14 = type metadata accessor for ScheduledQuery();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v43 = v13;
  v15(v13, 1, 1, v14);
  v16 = &v12[v9[7]];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v42 = v16;
  v17 = &v12[v9[8]];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v44 = v17;
  sub_238438F90(a1, a1[3]);
  sub_23843D41C();
  v40 = v8;
  v18 = (uint64_t)v45;
  sub_238492D54();
  if (v18)
  {
    sub_238436B3C((uint64_t)a1);
    sub_23843B198(v43, &qword_25690A078);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v19 = v6;
    v21 = v36;
    v20 = v37;
    v45 = a1;
    v51 = 0;
    sub_23843E8CC(&qword_25690A0B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v22 = v38;
    sub_238492BEC();
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v12, v39, v22);
    v49 = 1;
    sub_23843D4A4();
    sub_238492BEC();
    v12[v9[5]] = v50;
    v48 = 2;
    sub_23843E8CC(&qword_25690A0C0, (uint64_t (*)(uint64_t))type metadata accessor for ScheduledQuery, (uint64_t)&protocol conformance descriptor for ScheduledQuery);
    v23 = (uint64_t)v20;
    sub_238492BBC();
    v24 = (uint64_t)v12;
    sub_23843C318(v23, v43);
    v47 = 3;
    v25 = sub_238492BA4();
    v27 = v26;
    v28 = (uint64_t *)v42;
    swift_bridgeObjectRelease();
    *v28 = v25;
    v28[1] = v27;
    v46 = 4;
    v29 = sub_238492BA4();
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v40, v41);
    v32 = (uint64_t *)v44;
    swift_bridgeObjectRelease();
    *v32 = v29;
    v32[1] = v31;
    sub_238440118(v24, v35, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQueryHistory.Event);
    sub_238436B3C((uint64_t)v45);
    return sub_23843F2AC(v24, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQueryHistory.Event);
  }
}

uint64_t sub_23843CC6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ScheduledQueryHistory.Event.init(from:)(a1, a2);
}

uint64_t sub_23843CC80(_QWORD *a1)
{
  return ScheduledQueryHistory.Event.encode(to:)(a1);
}

BOOL sub_23843CC98()
{
  return (_s23ConditionalEngineClient21ScheduledQueryHistoryC5EventV1loiySbAE_AEtFZ_0() & 1) == 0;
}

BOOL sub_23843CCC0()
{
  return (_s23ConditionalEngineClient21ScheduledQueryHistoryC5EventV1loiySbAE_AEtFZ_0() & 1) == 0;
}

uint64_t sub_23843CCDC()
{
  return _s23ConditionalEngineClient21ScheduledQueryHistoryC5EventV1loiySbAE_AEtFZ_0();
}

unint64_t ScheduledQueryHistory.get()()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  unint64_t result;

  if (qword_256909A20 != -1)
    swift_once();
  v1 = sub_238492574();
  sub_238435CA4(v1, (uint64_t)qword_256909FC0);
  v2 = sub_23849255C();
  v3 = sub_238492880();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_238433000, v2, v3, "[History] get", v4, 2u);
    MEMORY[0x23B835AF4](v4, -1, -1);
  }

  result = sub_23844B030();
  if (!v0)
  {
    if (!result)
      result = MEMORY[0x24BEE4AF8];
    return sub_23843CDE8(result);
  }
  return result;
}

uint64_t sub_23843CDE8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = type metadata accessor for ScheduledQueryHistory.Event();
  v17 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v3);
  v18 = (uint64_t)&v15 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8 < 2)
    return a1;
  v9 = 0;
  v10 = v8 >> 1;
  v11 = v8 - 1;
  v16 = v8 >> 1;
  while (1)
  {
    if (v9 == v11)
      goto LABEL_4;
    v12 = *(_QWORD *)(a1 + 16);
    if (v9 >= v12)
      break;
    v13 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v14 = *(_QWORD *)(v17 + 72);
    result = sub_238440118(a1 + v13 + v14 * v9, v18, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQueryHistory.Event);
    if (v11 >= v12)
      goto LABEL_14;
    sub_238440118(a1 + v13 + v14 * v11, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQueryHistory.Event);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_23844810C(a1);
      a1 = result;
    }
    if (v9 >= *(_QWORD *)(a1 + 16))
      goto LABEL_15;
    result = sub_23844015C((uint64_t)v5, a1 + v13 + v14 * v9);
    if (v11 >= *(_QWORD *)(a1 + 16))
      goto LABEL_16;
    result = sub_23844015C(v18, a1 + v13 + v14 * v11);
    v10 = v16;
LABEL_4:
    ++v9;
    --v11;
    if (v10 == v9)
      return a1;
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t ScheduledQueryHistory.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t ScheduledQueryHistory.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t _s23ConditionalEngineClient21ScheduledQueryHistoryC5EventV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t result;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  BOOL v43;
  char v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v4 = type metadata accessor for ScheduledQuery();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_238435C24(&qword_25690A298);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_238435C24(&qword_25690A078);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v50 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v50 - v18;
  if ((sub_238491F68() & 1) == 0)
    return 0;
  v20 = type metadata accessor for ScheduledQueryHistory.Event();
  if (*(unsigned __int8 *)(a1 + *(int *)(v20 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v20 + 20)))
    return 0;
  v21 = v20;
  v22 = *(int *)(v20 + 24);
  v50 = a1;
  v23 = a1 + v22;
  v24 = a2;
  v25 = v21;
  sub_23843C2A0(v23, (uint64_t)v19);
  v51 = v25;
  v26 = *(int *)(v25 + 24);
  v27 = v24;
  sub_23843C2A0(v24 + v26, (uint64_t)v17);
  v28 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23843C2A0((uint64_t)v19, (uint64_t)v10);
  sub_23843C2A0((uint64_t)v17, v28);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v29((uint64_t)v10, 1, v4) == 1)
  {
    sub_23843B198((uint64_t)v17, &qword_25690A078);
    sub_23843B198((uint64_t)v19, &qword_25690A078);
    if (v29(v28, 1, v4) == 1)
    {
      sub_23843B198((uint64_t)v10, &qword_25690A078);
      goto LABEL_6;
    }
    goto LABEL_14;
  }
  sub_23843C2A0((uint64_t)v10, (uint64_t)v14);
  if (v29(v28, 1, v4) == 1)
  {
    sub_23843B198((uint64_t)v17, &qword_25690A078);
    sub_23843B198((uint64_t)v19, &qword_25690A078);
    sub_23843F2AC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
LABEL_14:
    v40 = &qword_25690A298;
    v41 = (uint64_t)v10;
LABEL_31:
    sub_23843B198(v41, v40);
    return 0;
  }
  sub_2384401A0(v28, (uint64_t)v7);
  v42 = *v14 == *v7 && v14[1] == v7[1];
  if (!v42 && (sub_238492C7C() & 1) == 0
    || (v14[2] == v7[2] ? (v43 = v14[3] == v7[3]) : (v43 = 0),
        !v43 && (sub_238492C7C() & 1) == 0 || (v14[4] != v7[4] || v14[5] != v7[5]) && (sub_238492C7C() & 1) == 0))
  {
    sub_23843F2AC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
    sub_23843B198((uint64_t)v17, &qword_25690A078);
    sub_23843B198((uint64_t)v19, &qword_25690A078);
    sub_23843F2AC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
    v41 = (uint64_t)v10;
    v40 = &qword_25690A078;
    goto LABEL_31;
  }
  v44 = _s23ConditionalEngineClient17TriggerParametersO2eeoiySbAC_ACtFZ_0((uint64_t)v14 + *(int *)(v4 + 28), (uint64_t)v7 + *(int *)(v4 + 28));
  sub_23843F2AC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  sub_23843B198((uint64_t)v17, &qword_25690A078);
  sub_23843B198((uint64_t)v19, &qword_25690A078);
  sub_23843F2AC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  sub_23843B198((uint64_t)v10, &qword_25690A078);
  if ((v44 & 1) == 0)
    return 0;
LABEL_6:
  v31 = v50;
  v30 = v51;
  v32 = *(int *)(v51 + 28);
  v33 = (_QWORD *)(v50 + v32);
  v34 = *(_QWORD *)(v50 + v32 + 8);
  v35 = (_QWORD *)(v27 + v32);
  v36 = v35[1];
  if (!v34)
  {
    if (!v36)
      goto LABEL_35;
    return 0;
  }
  if (!v36)
    return 0;
  if (*v33 == *v35 && v34 == v36 || (v37 = sub_238492C7C(), v30 = v51, v38 = v37, result = 0, (v38 & 1) != 0))
  {
LABEL_35:
    v45 = *(int *)(v30 + 32);
    v46 = (_QWORD *)(v31 + v45);
    v47 = *(_QWORD *)(v31 + v45 + 8);
    v48 = (_QWORD *)(v27 + v45);
    v49 = v48[1];
    if (v47)
    {
      if (v49 && (*v46 == *v48 && v47 == v49 || (sub_238492C7C() & 1) != 0))
        return 1;
    }
    else if (!v49)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_23843D41C()
{
  unint64_t result;

  result = qword_25690A088;
  if (!qword_25690A088)
  {
    result = MEMORY[0x23B835A40](&unk_238494264, &type metadata for ScheduledQueryHistory.Event.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A088);
  }
  return result;
}

unint64_t sub_23843D460()
{
  unint64_t result;

  result = qword_25690A098;
  if (!qword_25690A098)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for ScheduledQueryHistory.Event.EventType, &type metadata for ScheduledQueryHistory.Event.EventType);
    atomic_store(result, (unint64_t *)&qword_25690A098);
  }
  return result;
}

unint64_t sub_23843D4A4()
{
  unint64_t result;

  result = qword_25690A0B8;
  if (!qword_25690A0B8)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for ScheduledQueryHistory.Event.EventType, &type metadata for ScheduledQueryHistory.Event.EventType);
    atomic_store(result, (unint64_t *)&qword_25690A0B8);
  }
  return result;
}

uint64_t sub_23843D4E8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x657461657263 && a2 == 0xE600000000000000;
  if (v3 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656C6564 && a2 == 0xE600000000000000 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7239026 && a2 == 0xE300000000000000 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F7272456E7572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_238492C7C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23843D668(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x707954746E657665 && a2 == 0xE900000000000065 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C756465686373 && a2 == 0xEE00797265755164 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_238492C7C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23843D87C(uint64_t a1)
{
  return sub_23843D89C(a1, "[History] create %s", 0);
}

uint64_t sub_23843D88C(uint64_t a1)
{
  return sub_23843D89C(a1, "[History] delete %s", 1);
}

uint64_t sub_23843D89C(uint64_t a1, const char *a2, int a3)
{
  unint64_t v3;
  int *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _BYTE v31[12];
  int v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  LODWORD(v3) = a3;
  v35 = a2;
  v5 = (int *)type metadata accessor for ScheduledQueryHistory.Event();
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_238491F98();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for ScheduledQuery();
  v39 = *(_QWORD *)(v12 - 8);
  v40 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)&v31[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_256909A20 != -1)
    swift_once();
  v15 = sub_238492574();
  v16 = sub_238435CA4(v15, (uint64_t)qword_256909FC0);
  v41 = a1;
  sub_238440118(a1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  v38 = v16;
  v17 = sub_23849255C();
  v18 = sub_238492880();
  if (os_log_type_enabled(v17, v18))
  {
    v33 = v8;
    v19 = swift_slowAlloc();
    v37 = v11;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc();
    v34 = v9;
    v22 = v21;
    v43 = v21;
    v36 = v7;
    *(_DWORD *)v20 = 136315138;
    v32 = v3;
    v23 = *v14;
    v3 = v14[1];
    swift_bridgeObjectRetain();
    v24 = v23;
    v8 = v33;
    v42 = sub_23843604C(v24, v3, &v43);
    v7 = v36;
    sub_238492934();
    LOBYTE(v3) = v32;
    swift_bridgeObjectRelease();
    sub_23843F2AC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
    _os_log_impl(&dword_238433000, v17, v18, v35, v20, 0xCu);
    swift_arrayDestroy();
    v25 = v22;
    v9 = v34;
    MEMORY[0x23B835AF4](v25, -1, -1);
    v26 = v20;
    v11 = v37;
    MEMORY[0x23B835AF4](v26, -1, -1);
  }
  else
  {
    sub_23843F2AC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  }

  sub_238491F8C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v7, v11, v8);
  v27 = (uint64_t)&v7[v5[6]];
  sub_238440118(v41, v27, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v27, 0, 1, v40);
  v7[v5[5]] = v3;
  v28 = &v7[v5[7]];
  *v28 = 0;
  v28[1] = 0;
  v29 = &v7[v5[8]];
  *v29 = 0;
  v29[1] = 0;
  sub_23844A880((uint64_t)v7);
  sub_23843F2AC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQueryHistory.Event);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_23843DD50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v42 = a2;
  v41 = type metadata accessor for ScheduledQueryHistory.Event();
  MEMORY[0x24BDAC7A8](v41);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_238491F98();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ScheduledQuery();
  v38 = *(_QWORD *)(v11 - 8);
  v39 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)((char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_256909A20 != -1)
    swift_once();
  v14 = sub_238492574();
  v15 = sub_238435CA4(v14, (uint64_t)qword_256909FC0);
  v40 = a1;
  sub_238440118(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  v37 = v15;
  v16 = sub_23849255C();
  v17 = sub_238492880();
  if (os_log_type_enabled(v16, v17))
  {
    v34 = v7;
    v18 = swift_slowAlloc();
    v33 = a3;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v35 = v8;
    v21 = v20;
    v44 = v20;
    *(_DWORD *)v19 = 136315138;
    v36 = v10;
    v22 = *v13;
    v23 = v13[1];
    swift_bridgeObjectRetain();
    v24 = v22;
    v7 = v34;
    v43 = sub_23843604C(v24, v23, &v44);
    sub_238492934();
    v10 = v36;
    swift_bridgeObjectRelease();
    sub_23843F2AC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
    _os_log_impl(&dword_238433000, v16, v17, "[History] run %s", v19, 0xCu);
    swift_arrayDestroy();
    v25 = v21;
    v8 = v35;
    MEMORY[0x23B835AF4](v25, -1, -1);
    v26 = v19;
    a3 = v33;
    MEMORY[0x23B835AF4](v26, -1, -1);
  }
  else
  {
    sub_23843F2AC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  }

  sub_238491F8C();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v6, v10, v7);
  v27 = (int *)v41;
  v28 = (uint64_t)&v6[*(int *)(v41 + 24)];
  sub_238440118(v40, v28, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v28, 0, 1, v39);
  v6[v27[5]] = 2;
  v29 = &v6[v27[7]];
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v30 = &v6[v27[8]];
  *(_QWORD *)v30 = v42;
  *((_QWORD *)v30 + 1) = a3;
  swift_bridgeObjectRetain();
  sub_23844A880((uint64_t)v6);
  sub_23843F2AC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQueryHistory.Event);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_23843E210(uint64_t a1, void *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *);
  id v21;
  id v22;
  NSObject *v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t *v40;
  char *v41;
  _QWORD *v43;
  os_log_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;

  v49 = type metadata accessor for ScheduledQueryHistory.Event();
  MEMORY[0x24BDAC7A8](v49);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_238491F98();
  v6 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_238435C24(&qword_25690A078);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v43 - v13;
  v15 = sub_238492574();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256909A20 != -1)
    swift_once();
  v19 = sub_238435CA4(v15, (uint64_t)qword_256909FC0);
  v20 = *(void (**)(char *))(v16 + 16);
  v48 = v19;
  v20(v18);
  v50 = a1;
  sub_23843C2A0(a1, (uint64_t)v14);
  v21 = a2;
  v22 = a2;
  v23 = sub_23849255C();
  v46 = sub_238492880();
  v24 = os_log_type_enabled(v23, (os_log_type_t)v46);
  v52 = v8;
  if (v24)
  {
    v44 = v23;
    v45 = v16;
    v47 = v6;
    v25 = swift_slowAlloc();
    v43 = (_QWORD *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v54 = v26;
    *(_DWORD *)v25 = 136315394;
    sub_23843C2A0((uint64_t)v14, (uint64_t)v12);
    v27 = type metadata accessor for ScheduledQuery();
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v12, 1, v27) == 1)
    {
      sub_23843B198((uint64_t)v12, &qword_25690A078);
      v28 = 0xE300000000000000;
      v29 = 7104878;
    }
    else
    {
      v29 = *v12;
      v28 = v12[1];
      swift_bridgeObjectRetain();
      sub_23843F2AC((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
    }
    v53 = sub_23843604C(v29, v28, &v54);
    sub_238492934();
    swift_bridgeObjectRelease();
    sub_23843B198((uint64_t)v14, &qword_25690A078);
    *(_WORD *)(v25 + 12) = 2112;
    v31 = a2;
    v32 = _swift_stdlib_bridgeErrorToNSError();
    v53 = v32;
    sub_238492934();
    v33 = v43;
    *v43 = v32;

    v34 = v44;
    _os_log_impl(&dword_238433000, v44, (os_log_type_t)v46, "[History] run error %s: %@", (uint8_t *)v25, 0x16u);
    sub_238435C24(&qword_25690A290);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v33, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v26, -1, -1);
    MEMORY[0x23B835AF4](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v18, v15);
    v30 = v51;
    v8 = v52;
    v6 = v47;
  }
  else
  {
    sub_23843B198((uint64_t)v14, &qword_25690A078);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v30 = v51;
  }
  sub_238491F8C();
  swift_getErrorValue();
  v35 = sub_238492CD0();
  v37 = v36;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v5, v8, v30);
  v39 = (int *)v49;
  v38 = v50;
  v5[*(int *)(v49 + 20)] = 3;
  sub_23843C2A0(v38, (uint64_t)&v5[v39[6]]);
  v40 = (uint64_t *)&v5[v39[7]];
  *v40 = v35;
  v40[1] = v37;
  v41 = &v5[v39[8]];
  *(_QWORD *)v41 = 0;
  *((_QWORD *)v41 + 1) = 0;
  sub_23844A880((uint64_t)v5);
  sub_23843F2AC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQueryHistory.Event);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v30);
}

unint64_t sub_23843E85C()
{
  unint64_t result;

  result = qword_25690A0C8;
  if (!qword_25690A0C8)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for ScheduledQueryHistory.Event.EventType, &type metadata for ScheduledQueryHistory.Event.EventType);
    atomic_store(result, (unint64_t *)&qword_25690A0C8);
  }
  return result;
}

uint64_t sub_23843E8A0()
{
  return sub_23843E8CC(&qword_25690A0D0, (uint64_t (*)(uint64_t))type metadata accessor for ScheduledQueryHistory.Event, (uint64_t)&protocol conformance descriptor for ScheduledQueryHistory.Event);
}

uint64_t sub_23843E8CC(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23B835A40](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ScheduledQueryHistory()
{
  return objc_opt_self();
}

uint64_t method lookup function for ScheduledQueryHistory()
{
  return swift_lookUpClassMethod();
}

char *initializeBufferWithCopyOfBuffer for ScheduledQueryHistory.Event(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  char *v35;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_238491F98();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for ScheduledQuery();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = sub_238435C24(&qword_25690A078);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v32 = v8;
      v34 = v13;
      v16 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v16;
      v17 = *((_QWORD *)v11 + 3);
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      *((_QWORD *)v10 + 3) = v17;
      v18 = *((_QWORD *)v11 + 5);
      *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
      *((_QWORD *)v10 + 5) = v18;
      v19 = *(int *)(v12 + 28);
      v33 = &v10[v19];
      v35 = &v11[v19];
      type metadata accessor for TriggerParameters();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v22 = *((_QWORD *)v35 + 1);
        *(_QWORD *)v33 = *(_QWORD *)v35;
        *((_QWORD *)v33 + 1) = v22;
        *((_OWORD *)v33 + 1) = *((_OWORD *)v35 + 1);
        *((_QWORD *)v33 + 4) = *((_QWORD *)v35 + 4);
        *((_WORD *)v33 + 20) = *((_WORD *)v35 + 20);
        swift_bridgeObjectRetain();
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v21 = sub_238491E24();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v33, v35, v21);
      }
      else
      {
        v32(v33, v35, v7);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v10, 0, 1, v12);
    }
    v23 = a3[7];
    v24 = a3[8];
    v25 = &a1[v23];
    v26 = &a2[v23];
    v27 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    v28 = &a1[v24];
    v29 = &a2[v24];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ScheduledQueryHistory.Event(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;

  v4 = sub_238491F98();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for ScheduledQuery();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v6 + *(int *)(v7 + 28);
    type metadata accessor for TriggerParameters();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        swift_bridgeObjectRelease();
        break;
      case 1:
        v11 = sub_238491E24();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
        break;
      case 0:
        v5(v9, v4);
        break;
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScheduledQueryHistory.Event(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;

  v6 = sub_238491F98();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = type metadata accessor for ScheduledQuery();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v31 = (void (*)(char *, char *, uint64_t))v7;
    v34 = v12;
    v14 = v10[1];
    *v9 = *v10;
    v9[1] = v14;
    v15 = v10[3];
    v9[2] = v10[2];
    v9[3] = v15;
    v16 = v10[5];
    v9[4] = v10[4];
    v9[5] = v16;
    v17 = *(int *)(v11 + 28);
    v33 = (char *)v9 + v17;
    v32 = (char *)v10 + v17;
    type metadata accessor for TriggerParameters();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v20 = *((_QWORD *)v32 + 1);
      *(_QWORD *)v33 = *(_QWORD *)v32;
      *((_QWORD *)v33 + 1) = v20;
      *((_OWORD *)v33 + 1) = *((_OWORD *)v32 + 1);
      *((_QWORD *)v33 + 4) = *((_QWORD *)v32 + 4);
      *((_WORD *)v33 + 20) = *((_WORD *)v32 + 20);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v21 = v34;
        v31(v33, v32, v6);
        goto LABEL_9;
      }
      v19 = sub_238491E24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v33, v32, v19);
    }
    v21 = v34;
LABEL_9:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v9, 0, 1, v11);
    goto LABEL_10;
  }
  v13 = sub_238435C24(&qword_25690A078);
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_10:
  v22 = a3[7];
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v22);
  v25 = (_QWORD *)(a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = (_QWORD *)(a1 + v23);
  v28 = (_QWORD *)(a2 + v23);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScheduledQueryHistory.Event(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  char *v31;
  char *v32;
  uint64_t v33;

  v6 = sub_238491F98();
  v33 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for ScheduledQuery();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      *v8 = *v9;
      v8[1] = v9[1];
      v8[2] = v9[2];
      v8[3] = v9[3];
      v8[4] = v9[4];
      v8[5] = v9[5];
      v15 = *(int *)(v10 + 28);
      v31 = (char *)v8 + v15;
      v32 = (char *)v9 + v15;
      type metadata accessor for TriggerParameters();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(_QWORD *)v31 = *(_QWORD *)v32;
        *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
        *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
        *((_QWORD *)v31 + 3) = *((_QWORD *)v32 + 3);
        *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
        v31[40] = v32[40];
        v31[41] = v32[41];
        swift_bridgeObjectRetain();
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v17 = sub_238491E24();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v31, v32, v17);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v31, v32, v6);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_17;
    }
LABEL_8:
    v18 = sub_238435C24(&qword_25690A078);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_17;
  }
  if (v14)
  {
    sub_23843F2AC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
    goto LABEL_8;
  }
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  v8[5] = v9[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v19 = *(int *)(v10 + 28);
    v20 = (uint64_t)v8 + v19;
    v21 = (char *)v9 + v19;
    sub_23843F2AC(v20, (uint64_t (*)(_QWORD))type metadata accessor for TriggerParameters);
    type metadata accessor for TriggerParameters();
    v22 = swift_getEnumCaseMultiPayload();
    if (v22 == 2)
    {
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *(_QWORD *)(v20 + 8) = *((_QWORD *)v21 + 1);
      *(_QWORD *)(v20 + 16) = *((_QWORD *)v21 + 2);
      *(_QWORD *)(v20 + 24) = *((_QWORD *)v21 + 3);
      *(_QWORD *)(v20 + 32) = *((_QWORD *)v21 + 4);
      *(_BYTE *)(v20 + 40) = v21[40];
      *(_BYTE *)(v20 + 41) = v21[41];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v22 == 1)
      {
        v23 = sub_238491E24();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v20, v21, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_17:
  v24 = a3[7];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = a3[8];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23843F2AC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for ScheduledQueryHistory.Event(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  char *__dst;

  v6 = sub_238491F98();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  v11 = type metadata accessor for ScheduledQuery();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = sub_238435C24(&qword_25690A078);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v10[1];
    *v9 = *v10;
    v9[1] = v14;
    v9[2] = v10[2];
    v15 = *(int *)(v11 + 28);
    __dst = (char *)v9 + v15;
    v16 = (char *)v10 + v15;
    v17 = type metadata accessor for TriggerParameters();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v19 = sub_238491E24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(__dst, v16, v19);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v7((uint64_t)__dst, (uint64_t)v16, v6);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v20 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v20) = *(_OWORD *)(a2 + v20);
  return a1;
}

uint64_t assignWithTake for ScheduledQueryHistory.Event(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  int v20;
  size_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;

  v6 = sub_238491F98();
  v45 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for ScheduledQuery();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      v24 = *((_QWORD *)v9 + 1);
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *((_QWORD *)v8 + 1) = v24;
      swift_bridgeObjectRelease();
      v25 = *((_QWORD *)v9 + 3);
      *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
      *((_QWORD *)v8 + 3) = v25;
      swift_bridgeObjectRelease();
      v26 = *((_QWORD *)v9 + 5);
      *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
      *((_QWORD *)v8 + 5) = v26;
      swift_bridgeObjectRelease();
      if (a1 == a2)
        goto LABEL_17;
      v27 = *(int *)(v10 + 28);
      v28 = (uint64_t)&v8[v27];
      v29 = &v9[v27];
      sub_23843F2AC(v28, (uint64_t (*)(_QWORD))type metadata accessor for TriggerParameters);
      v30 = type metadata accessor for TriggerParameters();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v44 = sub_238491E24();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v28, v29, v44);
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      if (!EnumCaseMultiPayload)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v28, v29, v6);
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64);
      v22 = (void *)v28;
      v23 = v29;
      goto LABEL_9;
    }
    sub_23843F2AC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
LABEL_8:
    v21 = *(_QWORD *)(*(_QWORD *)(sub_238435C24(&qword_25690A078) - 8) + 64);
    v22 = v8;
    v23 = v9;
LABEL_9:
    memcpy(v22, v23, v21);
    goto LABEL_17;
  }
  if (v14)
    goto LABEL_8;
  v15 = *((_OWORD *)v9 + 1);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *((_OWORD *)v8 + 1) = v15;
  *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
  v16 = *(int *)(v10 + 28);
  v17 = &v8[v16];
  v18 = &v9[v16];
  v19 = type metadata accessor for TriggerParameters();
  v20 = swift_getEnumCaseMultiPayload();
  if (v20 == 1)
  {
    v32 = sub_238491E24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v17, v18, v32);
    swift_storeEnumTagMultiPayload();
  }
  else if (v20)
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v17, v18, v6);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_17:
  v33 = a3[7];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (uint64_t *)(a2 + v33);
  v37 = *v35;
  v36 = v35[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  v38 = a3[8];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (uint64_t *)(a2 + v38);
  v42 = *v40;
  v41 = v40[1];
  *v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledQueryHistory.Event()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23843F79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = sub_238491F98();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_238435C24(&qword_25690A078);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledQueryHistory.Event()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23843F864(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_238491F98();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_238435C24(&qword_25690A078);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  return result;
}

void sub_23843F910()
{
  unint64_t v0;
  unint64_t v1;

  sub_238491F98();
  if (v0 <= 0x3F)
  {
    sub_23843F9A8();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23843F9A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25690A1E0)
  {
    type metadata accessor for ScheduledQuery();
    v0 = sub_23849291C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25690A1E0);
  }
}

_BYTE *initializeBufferWithCopyOfBuffer for ScheduledQueryHistory.Event.EventType(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryHistory.Event.EventType()
{
  return &type metadata for ScheduledQueryHistory.Event.EventType;
}

uint64_t getEnumTagSinglePayload for ScheduledQueryHistory.Event.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledQueryHistory.Event.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23843FAFC + 4 * byte_238493D0D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23843FB30 + 4 * byte_238493D08[v4]))();
}

uint64_t sub_23843FB30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23843FB38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23843FB40);
  return result;
}

uint64_t sub_23843FB4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23843FB54);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23843FB58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23843FB60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryHistory.Event.CodingKeys()
{
  return &type metadata for ScheduledQueryHistory.Event.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ScheduledQueryLocation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s23ConditionalEngineClient21ScheduledQueryHistoryC5EventV9EventTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23843FC58 + 4 * byte_238493D17[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23843FC8C + 4 * byte_238493D12[v4]))();
}

uint64_t sub_23843FC8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23843FC94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23843FC9CLL);
  return result;
}

uint64_t sub_23843FCA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23843FCB0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23843FCB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23843FCBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23843FCC8(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23843FCD0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryHistory.Event.EventType.CodingKeys()
{
  return &type metadata for ScheduledQueryHistory.Event.EventType.CodingKeys;
}

ValueMetadata *type metadata accessor for ScheduledQueryHistory.Event.EventType.CreateCodingKeys()
{
  return &type metadata for ScheduledQueryHistory.Event.EventType.CreateCodingKeys;
}

ValueMetadata *type metadata accessor for ScheduledQueryHistory.Event.EventType.DeleteCodingKeys()
{
  return &type metadata for ScheduledQueryHistory.Event.EventType.DeleteCodingKeys;
}

ValueMetadata *type metadata accessor for ScheduledQueryHistory.Event.EventType.RunCodingKeys()
{
  return &type metadata for ScheduledQueryHistory.Event.EventType.RunCodingKeys;
}

ValueMetadata *type metadata accessor for ScheduledQueryHistory.Event.EventType.RunErrorCodingKeys()
{
  return &type metadata for ScheduledQueryHistory.Event.EventType.RunErrorCodingKeys;
}

unint64_t sub_23843FD2C()
{
  unint64_t result;

  result = qword_25690A220;
  if (!qword_25690A220)
  {
    result = MEMORY[0x23B835A40](&unk_238494184, &type metadata for ScheduledQueryHistory.Event.EventType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A220);
  }
  return result;
}

unint64_t sub_23843FD74()
{
  unint64_t result;

  result = qword_25690A228;
  if (!qword_25690A228)
  {
    result = MEMORY[0x23B835A40](&unk_23849423C, &type metadata for ScheduledQueryHistory.Event.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A228);
  }
  return result;
}

unint64_t sub_23843FDBC()
{
  unint64_t result;

  result = qword_25690A230;
  if (!qword_25690A230)
  {
    result = MEMORY[0x23B835A40](&unk_2384941AC, &type metadata for ScheduledQueryHistory.Event.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A230);
  }
  return result;
}

unint64_t sub_23843FE04()
{
  unint64_t result;

  result = qword_25690A238;
  if (!qword_25690A238)
  {
    result = MEMORY[0x23B835A40](&unk_2384941D4, &type metadata for ScheduledQueryHistory.Event.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A238);
  }
  return result;
}

unint64_t sub_23843FE4C()
{
  unint64_t result;

  result = qword_25690A240;
  if (!qword_25690A240)
  {
    result = MEMORY[0x23B835A40](&unk_2384940A4, &type metadata for ScheduledQueryHistory.Event.EventType.CreateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A240);
  }
  return result;
}

unint64_t sub_23843FE94()
{
  unint64_t result;

  result = qword_25690A248;
  if (!qword_25690A248)
  {
    result = MEMORY[0x23B835A40](&unk_2384940CC, &type metadata for ScheduledQueryHistory.Event.EventType.CreateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A248);
  }
  return result;
}

unint64_t sub_23843FEDC()
{
  unint64_t result;

  result = qword_25690A250;
  if (!qword_25690A250)
  {
    result = MEMORY[0x23B835A40](&unk_238494054, &type metadata for ScheduledQueryHistory.Event.EventType.DeleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A250);
  }
  return result;
}

unint64_t sub_23843FF24()
{
  unint64_t result;

  result = qword_25690A258;
  if (!qword_25690A258)
  {
    result = MEMORY[0x23B835A40](&unk_23849407C, &type metadata for ScheduledQueryHistory.Event.EventType.DeleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A258);
  }
  return result;
}

unint64_t sub_23843FF6C()
{
  unint64_t result;

  result = qword_25690A260;
  if (!qword_25690A260)
  {
    result = MEMORY[0x23B835A40](&unk_238494004, &type metadata for ScheduledQueryHistory.Event.EventType.RunCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A260);
  }
  return result;
}

unint64_t sub_23843FFB4()
{
  unint64_t result;

  result = qword_25690A268;
  if (!qword_25690A268)
  {
    result = MEMORY[0x23B835A40](&unk_23849402C, &type metadata for ScheduledQueryHistory.Event.EventType.RunCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A268);
  }
  return result;
}

unint64_t sub_23843FFFC()
{
  unint64_t result;

  result = qword_25690A270;
  if (!qword_25690A270)
  {
    result = MEMORY[0x23B835A40](&unk_238493FB4, &type metadata for ScheduledQueryHistory.Event.EventType.RunErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A270);
  }
  return result;
}

unint64_t sub_238440044()
{
  unint64_t result;

  result = qword_25690A278;
  if (!qword_25690A278)
  {
    result = MEMORY[0x23B835A40](&unk_238493FDC, &type metadata for ScheduledQueryHistory.Event.EventType.RunErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A278);
  }
  return result;
}

unint64_t sub_23844008C()
{
  unint64_t result;

  result = qword_25690A280;
  if (!qword_25690A280)
  {
    result = MEMORY[0x23B835A40](&unk_2384940F4, &type metadata for ScheduledQueryHistory.Event.EventType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A280);
  }
  return result;
}

unint64_t sub_2384400D4()
{
  unint64_t result;

  result = qword_25690A288;
  if (!qword_25690A288)
  {
    result = MEMORY[0x23B835A40](&unk_23849411C, &type metadata for ScheduledQueryHistory.Event.EventType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A288);
  }
  return result;
}

uint64_t sub_238440118(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23844015C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScheduledQueryHistory.Event();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2384401A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScheduledQuery();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t static BundleIdentifiers.conditionalEngineAppIntentsExtension.getter()
{
  return 0xD000000000000040;
}

unint64_t static BundleIdentifiers.conditionalApp.getter()
{
  return 0xD00000000000002ALL;
}

unint64_t static BundleIdentifiers.userDefaultsSuiteName.getter()
{
  return 0xD00000000000001BLL;
}

ValueMetadata *type metadata accessor for BundleIdentifiers()
{
  return &type metadata for BundleIdentifiers;
}

uint64_t static PromptTemplates.TemplateType.== infix(_:_:)()
{
  return 1;
}

uint64_t PromptTemplates.TemplateType.hash(into:)()
{
  return sub_238492D24();
}

uint64_t PromptTemplates.TemplateType.hashValue.getter()
{
  sub_238492D18();
  sub_238492D24();
  return sub_238492D48();
}

uint64_t static PromptTemplates.getTemplate(for:)()
{
  return 0x10000000000004F0;
}

unint64_t sub_2384402E8()
{
  unint64_t result;

  result = qword_25690A2A0;
  if (!qword_25690A2A0)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for PromptTemplates.TemplateType, &type metadata for PromptTemplates.TemplateType);
    atomic_store(result, (unint64_t *)&qword_25690A2A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for PromptTemplates()
{
  return &type metadata for PromptTemplates;
}

uint64_t storeEnumTagSinglePayload for PromptTemplates.TemplateType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23844037C + 4 * asc_238494500[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23844039C + 4 * byte_238494505[v4]))();
}

_BYTE *sub_23844037C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23844039C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2384403A4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2384403AC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2384403B4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2384403BC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PromptTemplates.TemplateType()
{
  return &type metadata for PromptTemplates.TemplateType;
}

uint64_t OpenAIClient.apiKey.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OpenAIClient.model.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double OpenAIClient.temperature.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t OpenAIClient.maxTokens.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t OpenAIClient.apiURL.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

id OpenAIClient.session.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 64);
}

uint64_t OpenAIClient.inferenceRunStore.getter()
{
  return swift_retain();
}

uint64_t OpenAIClient.systemPrompt.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OpenAIClient.init(systemPrompt:apiKey:model:temperature:maxTokens:apiURL:session:inferenceRunStore:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, __int128 a11, uint64_t a12)
{
  *(_QWORD *)a9 = a3;
  *(_QWORD *)(a9 + 8) = a4;
  *(_QWORD *)(a9 + 16) = a5;
  *(_QWORD *)(a9 + 24) = a6;
  *(double *)(a9 + 32) = a10;
  *(_QWORD *)(a9 + 40) = a7;
  *(_QWORD *)(a9 + 48) = a8;
  *(_OWORD *)(a9 + 56) = a11;
  *(_QWORD *)(a9 + 72) = a12;
  *(_QWORD *)(a9 + 80) = result;
  *(_QWORD *)(a9 + 88) = a2;
  return result;
}

uint64_t OpenAIClient.buildFullPrompt(injecting:into:)(uint64_t a1)
{
  return sub_2384404EC(a1, 0x10000000000004F0);
}

uint64_t sub_2384404EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;

  v12 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v9 >= v6)
      goto LABEL_21;
    v10 = *(_QWORD *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v6)
        goto LABEL_21;
      v10 = *(_QWORD *)(v12 + 8 * v8);
      if (!v10)
      {
        v8 = v9 + 2;
        if (v9 + 2 >= v6)
          goto LABEL_21;
        v10 = *(_QWORD *)(v12 + 8 * v8);
        if (!v10)
          break;
      }
    }
LABEL_20:
    v5 = (v10 - 1) & v10;
LABEL_5:
    sub_238436638();
    swift_bridgeObjectRetain();
    a2 = sub_238492964();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v11 = v9 + 3;
  if (v11 >= v6)
  {
LABEL_21:
    swift_release();
    return a2;
  }
  v10 = *(_QWORD *)(v12 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v6)
      goto LABEL_21;
    v10 = *(_QWORD *)(v12 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t OpenAIClient.sendPrompt(injecting:into:group:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 824) = a4;
  *(_QWORD *)(v5 + 816) = a3;
  *(_QWORD *)(v5 + 808) = a1;
  v6 = sub_238492640();
  *(_QWORD *)(v5 + 832) = v6;
  *(_QWORD *)(v5 + 840) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 848) = swift_task_alloc();
  v7 = sub_238492574();
  *(_QWORD *)(v5 + 856) = v7;
  *(_QWORD *)(v5 + 864) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 872) = swift_task_alloc();
  v8 = sub_238491D10();
  *(_QWORD *)(v5 + 880) = v8;
  *(_QWORD *)(v5 + 888) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 896) = swift_task_alloc();
  sub_238435C24(&qword_256909AC8);
  *(_QWORD *)(v5 + 904) = swift_task_alloc();
  v9 = sub_238491ECC();
  *(_QWORD *)(v5 + 912) = v9;
  *(_QWORD *)(v5 + 920) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v5 + 928) = swift_task_alloc();
  *(_QWORD *)(v5 + 936) = swift_task_alloc();
  *(_QWORD *)(v5 + 944) = *(_QWORD *)v4;
  *(_OWORD *)(v5 + 952) = *(_OWORD *)(v4 + 8);
  *(_QWORD *)(v5 + 968) = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v5 + 976) = *(_QWORD *)(v4 + 32);
  *(_QWORD *)(v5 + 984) = *(_QWORD *)(v4 + 40);
  *(_QWORD *)(v5 + 992) = *(_QWORD *)(v4 + 64);
  *(_OWORD *)(v5 + 1000) = *(_OWORD *)(v4 + 72);
  *(_QWORD *)(v5 + 1016) = *(_QWORD *)(v4 + 88);
  return swift_task_switch();
}

uint64_t sub_238440890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  _QWORD *v42;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[3];

  v58[2] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(v0 + 920);
  v2 = *(_QWORD *)(v0 + 912);
  v3 = *(_QWORD *)(v0 + 904);
  v4 = sub_2384404EC(*(_QWORD *)(v0 + 808), 0x10000000000004F0);
  v6 = v5;
  *(_QWORD *)(v0 + 1024) = v4;
  *(_QWORD *)(v0 + 1032) = v5;
  sub_238491EB4();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    v7 = *(_QWORD *)(v0 + 904);
    swift_bridgeObjectRelease();
    sub_23843B198(v7, &qword_256909AC8);
    sub_238441D5C();
    swift_allocError();
    *v8 = 0;
    swift_willThrow();
  }
  else
  {
    v51 = v4;
    v56 = v6;
    v53 = *(_QWORD *)(v0 + 1016);
    v52 = *(_QWORD *)(v0 + 1008);
    v55 = *(_QWORD *)(v0 + 984);
    v9 = *(_QWORD *)(v0 + 976);
    v10 = *(_QWORD *)(v0 + 968);
    v11 = *(_QWORD *)(v0 + 960);
    v12 = *(_QWORD *)(v0 + 936);
    v13 = *(_QWORD *)(v0 + 928);
    v14 = *(_QWORD *)(v0 + 920);
    v15 = *(_QWORD *)(v0 + 912);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 32))(v12, *(_QWORD *)(v0 + 904), v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13, v12, v15);
    sub_238491CEC();
    sub_238491CE0();
    sub_238491D04();
    v58[0] = 0x20726572616542;
    v58[1] = 0xE700000000000000;
    swift_bridgeObjectRetain();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    sub_238491D04();
    swift_bridgeObjectRelease();
    sub_238435C24(&qword_256909BB8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2384945B0;
    *(_QWORD *)(inited + 32) = 0x6C65646F6DLL;
    *(_QWORD *)(inited + 40) = 0xE500000000000000;
    v17 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = v11;
    *(_QWORD *)(inited + 56) = v10;
    *(_QWORD *)(inited + 72) = v17;
    *(_QWORD *)(inited + 80) = 0x736567617373656DLL;
    *(_QWORD *)(inited + 88) = 0xE800000000000000;
    sub_238435C24(&qword_25690A2B8);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_2384938A0;
    sub_238435C24(&qword_25690A2C0);
    v19 = swift_initStackObject();
    *(_OWORD *)(v19 + 16) = xmmword_2384938A0;
    *(_QWORD *)(v19 + 32) = 1701605234;
    *(_QWORD *)(v19 + 40) = 0xE400000000000000;
    *(_QWORD *)(v19 + 48) = 0x6D6574737973;
    *(_QWORD *)(v19 + 56) = 0xE600000000000000;
    *(_QWORD *)(v19 + 64) = 0x746E65746E6F63;
    *(_QWORD *)(v19 + 72) = 0xE700000000000000;
    *(_QWORD *)(v19 + 80) = v52;
    *(_QWORD *)(v19 + 88) = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(_QWORD *)(v18 + 32) = sub_23847E3E4(v19);
    v20 = swift_initStackObject();
    *(_OWORD *)(v20 + 16) = xmmword_2384938A0;
    *(_QWORD *)(v20 + 32) = 1701605234;
    *(_QWORD *)(v20 + 40) = 0xE400000000000000;
    *(_QWORD *)(v20 + 48) = 1919251317;
    *(_QWORD *)(v20 + 56) = 0xE400000000000000;
    *(_QWORD *)(v20 + 64) = 0x746E65746E6F63;
    *(_QWORD *)(v20 + 72) = 0xE700000000000000;
    *(_QWORD *)(v20 + 80) = v51;
    *(_QWORD *)(v20 + 88) = v56;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v18 + 40) = sub_23847E3E4(v20);
    v21 = sub_238435C24(&qword_25690A2C8);
    *(_QWORD *)(inited + 96) = v18;
    *(_QWORD *)(inited + 120) = v21;
    *(_QWORD *)(inited + 128) = 0x656B6F745F78616DLL;
    v22 = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 136) = 0xEA0000000000736ELL;
    *(_QWORD *)(inited + 144) = v55;
    *(_QWORD *)(inited + 168) = v22;
    *(_QWORD *)(inited + 176) = 0x74617265706D6574;
    *(_QWORD *)(inited + 184) = 0xEB00000000657275;
    *(_QWORD *)(inited + 216) = MEMORY[0x24BEE13C8];
    *(_QWORD *)(inited + 192) = v9;
    sub_23847E2BC(inited);
    if (qword_2569099F8 != -1)
      swift_once();
    v23 = *(_QWORD *)(v0 + 872);
    v24 = *(_QWORD *)(v0 + 864);
    v25 = *(_QWORD *)(v0 + 856);
    v26 = sub_238435CA4(v25, (uint64_t)qword_256909F48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v23, v26, v25);
    swift_bridgeObjectRetain_n();
    v27 = sub_23849255C();
    v28 = sub_23849285C();
    v29 = os_log_type_enabled(v27, v28);
    v30 = *(_QWORD *)(v0 + 872);
    v31 = *(_QWORD *)(v0 + 864);
    v32 = *(_QWORD *)(v0 + 856);
    if (v29)
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v57 = v30;
      v34 = swift_slowAlloc();
      v58[0] = v34;
      *(_DWORD *)v33 = 136315138;
      swift_bridgeObjectRetain();
      v54 = v31;
      v35 = sub_2384925E0();
      v37 = v36;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 776) = sub_23843604C(v35, v37, v58);
      sub_238492934();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_238433000, v27, v28, "Body: %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B835AF4](v34, -1, -1);
      MEMORY[0x23B835AF4](v33, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v57, v32);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
    }
    v38 = (void *)objc_opt_self();
    *(_QWORD *)(v0 + 1040) = v38;
    v39 = (void *)sub_2384925C8();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 800) = 0;
    v40 = objc_msgSend(v38, sel_dataWithJSONObject_options_error_, v39, 0, v0 + 800);

    v41 = *(id *)(v0 + 800);
    if (v40)
    {
      sub_238491EFC();

      sub_238491CF8();
      v42 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1048) = v42;
      *v42 = v0;
      v42[1] = sub_2384410A4;
      return sub_238492850();
    }
    v44 = v41;
    v45 = *(_QWORD *)(v0 + 936);
    v46 = *(_QWORD *)(v0 + 920);
    v47 = *(_QWORD *)(v0 + 912);
    v48 = *(_QWORD *)(v0 + 896);
    v49 = *(_QWORD *)(v0 + 888);
    v50 = *(_QWORD *)(v0 + 880);
    swift_bridgeObjectRelease();
    sub_238491E6C();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2384410A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[132] = a1;
  v5[133] = a2;
  v5[134] = a3;
  v5[135] = v3;
  swift_task_dealloc();
  if (v3)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_238441170()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  _OWORD *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  void *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  void *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  void *v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unint64_t v63;
  char v64;
  id v65;
  void *v66;
  void *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  objc_opt_self();
  v1 = swift_dynamicCastObjCClass();
  if (!v1)
    goto LABEL_9;
  v2 = (void *)v1;
  v3 = *(id *)(v0 + 1072);
  if (objc_msgSend(v2, sel_statusCode) != (id)200)
  {

LABEL_9:
    v13 = *(void **)(v0 + 1072);
    v14 = *(_QWORD *)(v0 + 1064);
    v15 = *(_QWORD *)(v0 + 1056);
    v87 = *(_QWORD *)(v0 + 936);
    v16 = *(_QWORD *)(v0 + 920);
    v17 = *(_QWORD *)(v0 + 912);
    v18 = *(_QWORD *)(v0 + 896);
    v19 = *(_QWORD *)(v0 + 888);
    v20 = *(_QWORD *)(v0 + 880);
    swift_bridgeObjectRelease();
    sub_238441D5C();
    swift_allocError();
    *v21 = 2;
    swift_willThrow();
    sub_2384420D4(v15, v14);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v87, v17);
LABEL_33:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(void **)(v0 + 1040);
  v5 = (void *)sub_238491EF0();
  *(_QWORD *)(v0 + 784) = 0;
  v6 = objc_msgSend(v4, sel_JSONObjectWithData_options_error_, v5, 0, v0 + 784);

  v7 = *(void **)(v0 + 784);
  if (!v6)
  {
    v22 = *(void **)(v0 + 1072);
    v23 = *(_QWORD *)(v0 + 1064);
    v24 = *(_QWORD *)(v0 + 1056);
    v85 = *(_QWORD *)(v0 + 920);
    v86 = *(_QWORD *)(v0 + 912);
    v88 = *(_QWORD *)(v0 + 936);
    v25 = *(_QWORD *)(v0 + 896);
    v26 = *(_QWORD *)(v0 + 888);
    v27 = *(_QWORD *)(v0 + 880);
    v28 = v7;
    swift_bridgeObjectRelease();
    sub_238491E6C();

    swift_willThrow();
    sub_2384420D4(v24, v23);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v88, v86);
    goto LABEL_33;
  }
  v8 = v7;
  sub_238492988();
  swift_unknownObjectRelease();
  sub_238435C24(&qword_25690A2D0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_31;
  v9 = (_OWORD *)(v0 + 600);
  v10 = *(_QWORD *)(v0 + 768);
  if (*(_QWORD *)(v10 + 16) && (v11 = sub_238442128(0x736563696F6863, 0xE700000000000000), (v12 & 1) != 0))
  {
    sub_238436B5C(*(_QWORD *)(v10 + 56) + 32 * v11, v0 + 600);
  }
  else
  {
    *v9 = 0u;
    *(_OWORD *)(v0 + 616) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 624))
    goto LABEL_25;
  v29 = v0 + 752;
  sub_238435C24(&qword_25690A2D8);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_31;
  v9 = (_OWORD *)(v0 + 664);
  if (!*(_QWORD *)(*(_QWORD *)v29 + 16))
  {
    swift_bridgeObjectRelease();
    *v9 = 0u;
    *(_OWORD *)(v0 + 680) = 0u;
LABEL_25:
    swift_bridgeObjectRelease();
    sub_23843B198((uint64_t)v9, (uint64_t *)&unk_25690B7F0);
LABEL_32:
    v44 = *(void **)(v0 + 1072);
    v45 = *(_QWORD *)(v0 + 1064);
    v46 = *(_QWORD *)(v0 + 1056);
    v47 = *(_QWORD *)(v0 + 936);
    v48 = *(_QWORD *)(v0 + 920);
    v89 = *(_QWORD *)(v0 + 912);
    v49 = *(_QWORD *)(v0 + 896);
    v50 = *(_QWORD *)(v0 + 888);
    v51 = *(_QWORD *)(v0 + 880);
    sub_238441D5C();
    swift_allocError();
    *v52 = 4;
    swift_willThrow();
    sub_2384420D4(v46, v45);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v89);
    goto LABEL_33;
  }
  v30 = *(_QWORD *)(*(_QWORD *)v29 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v30 + 16) && (v31 = sub_238442128(0x6567617373656DLL, 0xE700000000000000), (v32 & 1) != 0))
  {
    sub_238436B5C(*(_QWORD *)(v30 + 56) + 32 * v31, v0 + 664);
  }
  else
  {
    *v9 = 0u;
    *(_OWORD *)(v0 + 680) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 688))
    goto LABEL_25;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  v9 = (_OWORD *)(v0 + 536);
  v33 = *(_QWORD *)(v0 + 736);
  if (*(_QWORD *)(v33 + 16) && (v34 = sub_238442128(0x746E65746E6F63, 0xE700000000000000), (v35 & 1) != 0))
  {
    sub_238436B5C(*(_QWORD *)(v33 + 56) + 32 * v34, v0 + 536);
  }
  else
  {
    *v9 = 0u;
    *(_OWORD *)(v0 + 552) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 560))
    goto LABEL_25;
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_31;
  v36 = *(_QWORD *)(v0 + 848);
  v37 = *(_QWORD *)(v0 + 840);
  v38 = *(_QWORD *)(v0 + 832);
  v39 = *(_QWORD *)(v0 + 720);
  v40 = *(_QWORD *)(v0 + 728);
  sub_238492634();
  v90 = v39;
  v41 = sub_238492628();
  v43 = v42;
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
  if (v43 >> 60 == 15)
    goto LABEL_45;
  v54 = *(void **)(v0 + 1040);
  v55 = (void *)sub_238491EF0();
  *(_QWORD *)(v0 + 744) = 0;
  v56 = objc_msgSend(v54, sel_JSONObjectWithData_options_error_, v55, 0, v0 + 744);

  v57 = *(void **)(v0 + 744);
  if (v56)
  {
    v58 = v57;
    sub_238492988();
    swift_unknownObjectRelease();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v59 = *(_QWORD *)(v0 + 760);
      if (!*(_QWORD *)(v59 + 16)
        || (v60 = sub_238442128(0x65736E6F70736572, 0xE800000000000000), (v61 & 1) == 0)
        || (sub_238436B5C(*(_QWORD *)(v59 + 56) + 32 * v60, v0 + 568), (swift_dynamicCast() & 1) == 0))
      {
        sub_23844218C(v41, v43);
        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
      v62 = *(_BYTE *)(v0 + 1088);
      if (*(_QWORD *)(v59 + 16) && (v63 = sub_238442128(0x6E656469666E6F63, 0xEA00000000006563), (v64 & 1) != 0))
      {
        sub_238436B5C(*(_QWORD *)(v59 + 56) + 32 * v63, v0 + 504);
      }
      else
      {
        *(_OWORD *)(v0 + 504) = 0u;
        *(_OWORD *)(v0 + 520) = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v0 + 528))
      {
        sub_23844218C(v41, v43);
        swift_bridgeObjectRelease();
        sub_23843B198(v0 + 504, (uint64_t *)&unk_25690B7F0);
        goto LABEL_46;
      }
      if (swift_dynamicCast())
      {
        if (*(_QWORD *)(v0 + 1000))
        {
          v74 = *(double *)(v0 + 792);
          if (*(_QWORD *)(v0 + 824))
          {
            v75 = *(_QWORD *)(v0 + 816);
            v76 = *(_QWORD *)(v0 + 824);
          }
          else
          {
            if (qword_256909A78 != -1)
              swift_once();
            swift_beginAccess();
            v77 = *(_OWORD *)&qword_25690A810;
            *(_OWORD *)(v0 + 432) = xmmword_25690A800;
            *(_OWORD *)(v0 + 448) = v77;
            *(_QWORD *)(v0 + 464) = qword_25690A820;
            sub_23843667C(v0 + 432);
            v75 = sub_23844B4A8();
            v76 = v78;
            sub_2384366BC(v0 + 432);
          }
          v79 = *(_QWORD *)(v0 + 1032);
          v80 = *(_QWORD *)(v0 + 1024);
          swift_bridgeObjectRetain();
          sub_238474558(v62, v74, v90, v40, v80, v79, v75, v76);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v81 = *(void **)(v0 + 1072);
        v82 = *(_QWORD *)(v0 + 1064);
        v83 = *(_QWORD *)(v0 + 1056);
        sub_238435C24((uint64_t *)&unk_25690AA80);
        v84 = swift_allocObject();
        *(_OWORD *)(v84 + 16) = xmmword_238493540;
        sub_2384926A0();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v84 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v84 + 32) = 0x203A4449206E7552;
        *(_QWORD *)(v84 + 40) = 0xE800000000000000;
        sub_238492D0C();
        sub_23844218C(v41, v43);
        sub_2384420D4(v83, v82);
        swift_bridgeObjectRelease();

        goto LABEL_47;
      }
    }
    sub_23844218C(v41, v43);
LABEL_45:
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  v65 = v57;
  swift_bridgeObjectRelease();
  v66 = (void *)sub_238491E6C();

  swift_willThrow();
  sub_23844218C(v41, v43);

LABEL_46:
  v67 = *(void **)(v0 + 1072);
  v68 = *(_QWORD *)(v0 + 1064);
  v69 = *(_QWORD *)(v0 + 1056);
  sub_238435C24((uint64_t *)&unk_25690AA80);
  v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = xmmword_238493540;
  *(_QWORD *)(v70 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v70 + 32) = 0xD000000000000036;
  *(_QWORD *)(v70 + 40) = 0x8000000238497F10;
  sub_238492D0C();
  sub_2384420D4(v69, v68);

  swift_bridgeObjectRelease();
LABEL_47:
  v71 = *(_QWORD *)(v0 + 936);
  v72 = *(_QWORD *)(v0 + 920);
  v73 = *(_QWORD *)(v0 + 912);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 888) + 8))(*(_QWORD *)(v0 + 896), *(_QWORD *)(v0 + 880));
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v90, v40);
}

uint64_t sub_238441C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 936);
  v2 = *(_QWORD *)(v0 + 920);
  v3 = *(_QWORD *)(v0 + 912);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 888) + 8))(*(_QWORD *)(v0 + 896), *(_QWORD *)(v0 + 880));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238441D44()
{
  return 32;
}

uint64_t sub_238441D50()
{
  return 10;
}

unint64_t sub_238441D5C()
{
  unint64_t result;

  result = qword_25690A2B0;
  if (!qword_25690A2B0)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for OpenAIClient.APIError, &type metadata for OpenAIClient.APIError);
    atomic_store(result, (unint64_t *)&qword_25690A2B0);
  }
  return result;
}

BOOL static OpenAIClient.APIError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t OpenAIClient.APIError.hash(into:)()
{
  return sub_238492D24();
}

uint64_t OpenAIClient.APIError.hashValue.getter()
{
  sub_238492D18();
  sub_238492D24();
  return sub_238492D48();
}

uint64_t sub_238441E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_238438264;
  return OpenAIClient.sendPrompt(injecting:into:group:)(a1, v9, a3, a4);
}

Swift::String __swiftcall OpenAIClient.getCurrentDate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  Swift::String result;
  uint64_t v14;

  v0 = sub_238491F98();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238491F8C();
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v5 = (void *)sub_238492610();
  objc_msgSend(v4, sel_setDateFormat_, v5);

  v6 = (void *)sub_238491F38();
  v7 = objc_msgSend(v4, sel_stringFromDate_, v6);

  v8 = sub_23849261C();
  v10 = v9;

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v11 = v8;
  v12 = v10;
  result._object = v12;
  result._countAndFlagsBits = v11;
  return result;
}

uint64_t PromptReplacementKey.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aUserPrUserDaCu[8 * *v0];
}

uint64_t NoopClient.sendPrompt(injecting:into:group:)()
{
  uint64_t v0;

  return sub_2384421A0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8), v0, 0xD000000000000026, 0x8000000238497F70);
}

uint64_t sub_238442000()
{
  uint64_t v0;

  return sub_2384421A0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8), v0, 0xD000000000000026, 0x8000000238497F70);
}

ConditionalEngineClient::PromptReplacementKey_optional __swiftcall PromptReplacementKey.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ConditionalEngineClient::PromptReplacementKey_optional result;
  char v5;

  v2 = v1;
  v3 = sub_238492B80();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_238442080(char *a1, char *a2)
{
  return sub_23847EC14(*a1, *a2);
}

uint64_t sub_23844208C()
{
  return sub_23847EC98();
}

uint64_t sub_238442094()
{
  return sub_23847EEA0();
}

uint64_t sub_23844209C()
{
  return sub_23847EEE0();
}

ConditionalEngineClient::PromptReplacementKey_optional sub_2384420A4(Swift::String *a1)
{
  return PromptReplacementKey.init(rawValue:)(*a1);
}

uint64_t sub_2384420B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PromptReplacementKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2384420D4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_238442118(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = 2 * a2;
  return result;
}

unint64_t sub_238442128(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_238492D18();
  sub_238492694();
  v4 = sub_238492D48();
  return sub_2384429AC(a1, a2, v4);
}

uint64_t sub_23844218C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2384420D4(a1, a2);
  return a1;
}

uint64_t sub_2384421A0(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

unint64_t sub_2384421BC()
{
  unint64_t result;

  result = qword_25690A2E8;
  if (!qword_25690A2E8)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for OpenAIClient.APIError, &type metadata for OpenAIClient.APIError);
    atomic_store(result, (unint64_t *)&qword_25690A2E8);
  }
  return result;
}

unint64_t sub_238442204()
{
  unint64_t result;

  result = qword_25690A300;
  if (!qword_25690A300)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for PromptReplacementKey, &type metadata for PromptReplacementKey);
    atomic_store(result, (unint64_t *)&qword_25690A300);
  }
  return result;
}

uint64_t destroy for OpenAIClient(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for OpenAIClient(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v7 = *(void **)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v6;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for OpenAIClient(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[8];
  v5 = (void *)a1[8];
  a1[8] = v4;
  v6 = v4;

  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for OpenAIClient(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for OpenAIClient(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OpenAIClient(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OpenAIClient(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenAIClient()
{
  return &type metadata for OpenAIClient;
}

uint64_t getEnumTagSinglePayload for OpenAIClient.APIError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for OpenAIClient.APIError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_238442634 + 4 * byte_2384945C5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_238442668 + 4 * byte_2384945C0[v4]))();
}

uint64_t sub_238442668(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_238442670(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x238442678);
  return result;
}

uint64_t sub_238442684(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23844268CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_238442690(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_238442698(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OpenAIClient.APIError()
{
  return &type metadata for OpenAIClient.APIError;
}

uint64_t dispatch thunk of LLMClient.sendPrompt(injecting:into:group:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 8)
                                                                                     + *(_QWORD *)(a6 + 8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_238442750;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_238442750(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

ValueMetadata *type metadata accessor for NoopClient()
{
  return &type metadata for NoopClient;
}

uint64_t getEnumTagSinglePayload for PromptReplacementKey(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PromptReplacementKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23844289C + 4 * byte_2384945CF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2384428D0 + 4 * byte_2384945CA[v4]))();
}

uint64_t sub_2384428D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2384428D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2384428E0);
  return result;
}

uint64_t sub_2384428EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2384428F4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2384428F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_238442900(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PromptReplacementKey()
{
  return &type metadata for PromptReplacementKey;
}

unint64_t sub_23844291C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_238492D18();
  sub_238492D30();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_238492694();
    swift_bridgeObjectRelease();
  }
  v4 = sub_238492D48();
  return sub_238442A8C(a1, a2, v4);
}

unint64_t sub_2384429AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_238492C7C() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_238492C7C() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_238442A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = ~v5;
    v10 = *(_QWORD *)(v3 + 48);
    do
    {
      v11 = (_QWORD *)(v10 + 16 * v6);
      v12 = v11[1];
      if (v12)
      {
        if (a2)
        {
          v13 = *v11 == a1 && v12 == a2;
          if (v13 || (sub_238492C7C() & 1) != 0)
            return v6;
        }
      }
      else if (!a2)
      {
        return v6;
      }
      v6 = (v6 + 1) & v9;
    }
    while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

uint64_t ScheduledQueryLocation.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScheduledQueryLocation.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ScheduledQueryLocation.id.modify())()
{
  return nullsub_1;
}

uint64_t ScheduledQueryLocation.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScheduledQueryLocation.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ScheduledQueryLocation.name.modify())()
{
  return nullsub_1;
}

double ScheduledQueryLocation.latitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void ScheduledQueryLocation.latitude.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*ScheduledQueryLocation.latitude.modify())()
{
  return nullsub_1;
}

double ScheduledQueryLocation.longitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

void ScheduledQueryLocation.longitude.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 40) = a1;
}

uint64_t (*ScheduledQueryLocation.longitude.modify())()
{
  return nullsub_1;
}

void __swiftcall ScheduledQueryLocation.init(id:name:latitude:longitude:)(ConditionalEngineClient::ScheduledQueryLocation *__return_ptr retstr, Swift::String id, Swift::String name, Swift::Double latitude, Swift::Double longitude)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v10;
  void *v11;
  void *v12;

  object = name._object;
  countAndFlagsBits = name._countAndFlagsBits;
  v10 = sub_238492658();
  v12 = v11;
  swift_bridgeObjectRelease();
  retstr->id._countAndFlagsBits = v10;
  retstr->id._object = v12;
  retstr->name._countAndFlagsBits = countAndFlagsBits;
  retstr->name._object = object;
  retstr->latitude = latitude;
  retstr->longitude = longitude;
}

uint64_t ScheduledQueryLocation.description.getter()
{
  sub_238492A78();
  sub_2384926A0();
  swift_bridgeObjectRetain();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  swift_bridgeObjectRetain();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  sub_2384927FC();
  sub_2384926A0();
  sub_2384927FC();
  sub_2384926A0();
  return 0;
}

uint64_t static ScheduledQueryLocation.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 0;
  else
    return sub_238492C7C();
}

uint64_t sub_238442E88(char a1)
{
  return qword_238494A50[a1];
}

uint64_t sub_238442EA8()
{
  char *v0;

  return sub_238442E88(*v0);
}

uint64_t sub_238442EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2384438E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_238442ED4()
{
  sub_2384434CC();
  return sub_238492D78();
}

uint64_t sub_238442EFC()
{
  sub_2384434CC();
  return sub_238492D84();
}

uint64_t ScheduledQueryLocation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[4];
  char v11;
  char v12;
  char v13;
  char v14;

  v3 = sub_238435C24(&qword_25690A310);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v10[1] = *(_QWORD *)(v1 + 24);
  v10[2] = v7;
  sub_238438F90(a1, a1[3]);
  sub_2384434CC();
  sub_238492D60();
  v14 = 0;
  v8 = v10[3];
  sub_238492C28();
  if (!v8)
  {
    v13 = 1;
    sub_238492C28();
    v12 = 2;
    sub_238492C40();
    v11 = 3;
    sub_238492C40();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ScheduledQueryLocation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;

  v5 = sub_238435C24(&qword_25690A320);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238438F90(a1, a1[3]);
  sub_2384434CC();
  sub_238492D54();
  if (v2)
    return sub_238436B3C((uint64_t)a1);
  v28 = 0;
  v9 = sub_238492BC8();
  v11 = v10;
  v24 = v9;
  v27 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_238492BC8();
  v14 = v13;
  v22 = v12;
  v26 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  sub_238492BE0();
  v16 = v15;
  v25 = 3;
  sub_238492BE0();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v20 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v20;
  a2[4] = v16;
  a2[5] = v19;
  sub_238436B3C((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2384432F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ScheduledQueryLocation.init(from:)(a1, a2);
}

uint64_t sub_23844330C(_QWORD *a1)
{
  return ScheduledQueryLocation.encode(to:)(a1);
}

uint64_t sub_238443324(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 0;
  else
    return sub_238492C7C();
}

uint64_t sub_238443354(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (v4 == v2 && v5 == v3)
    v7 = 1;
  else
    v7 = sub_238492C7C() ^ 1;
  return v7 & 1;
}

uint64_t sub_238443390(_QWORD *a1, _QWORD *a2)
{
  char v3;

  if (*a1 == *a2 && a1[1] == a2[1])
    v3 = 1;
  else
    v3 = sub_238492C7C() ^ 1;
  return v3 & 1;
}

uint64_t sub_2384433D8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (v4 == v2 && v5 == v3)
    return 0;
  else
    return sub_238492C7C();
}

BOOL _s23ConditionalEngineClient22ScheduledQueryLocationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  char v10;
  _BOOL8 result;
  char v12;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = *(double *)(a1 + 32);
  v4 = *(double *)(a1 + 40);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v9 = *(double *)(a2 + 32);
  v8 = *(double *)(a2 + 40);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v10 = sub_238492C7C(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v3 == v7)
    {
      if (v5 != v9)
        return 0;
      return v4 == v8;
    }
    v12 = sub_238492C7C();
    result = 0;
    if ((v12 & 1) != 0 && v5 == v9)
      return v4 == v8;
  }
  return result;
}

unint64_t sub_2384434CC()
{
  unint64_t result;

  result = qword_25690A318;
  if (!qword_25690A318)
  {
    result = MEMORY[0x23B835A40](&unk_2384949FC, &type metadata for ScheduledQueryLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A318);
  }
  return result;
}

unint64_t sub_238443514()
{
  unint64_t result;

  result = qword_25690A328;
  if (!qword_25690A328)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for ScheduledQueryLocation, &type metadata for ScheduledQueryLocation);
    atomic_store(result, (unint64_t *)&qword_25690A328);
  }
  return result;
}

uint64_t destroy for ScheduledQueryLocation()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScheduledQueryLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ScheduledQueryLocation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

__n128 initializeWithTake for ScheduledQueryLocation(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ScheduledQueryLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledQueryLocation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledQueryLocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryLocation()
{
  return &type metadata for ScheduledQueryLocation;
}

uint64_t storeEnumTagSinglePayload for ScheduledQueryLocation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_238443790 + 4 * byte_238494815[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2384437C4 + 4 * byte_238494810[v4]))();
}

uint64_t sub_2384437C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2384437CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2384437D4);
  return result;
}

uint64_t sub_2384437E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2384437E8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2384437EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2384437F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryLocation.CodingKeys()
{
  return &type metadata for ScheduledQueryLocation.CodingKeys;
}

unint64_t sub_238443814()
{
  unint64_t result;

  result = qword_25690A330;
  if (!qword_25690A330)
  {
    result = MEMORY[0x23B835A40](&unk_2384949D4, &type metadata for ScheduledQueryLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A330);
  }
  return result;
}

unint64_t sub_23844385C()
{
  unint64_t result;

  result = qword_25690A338;
  if (!qword_25690A338)
  {
    result = MEMORY[0x23B835A40](&unk_238494944, &type metadata for ScheduledQueryLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A338);
  }
  return result;
}

unint64_t sub_2384438A4()
{
  unint64_t result;

  result = qword_25690A340;
  if (!qword_25690A340)
  {
    result = MEMORY[0x23B835A40](&unk_23849496C, &type metadata for ScheduledQueryLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690A340);
  }
  return result;
}

uint64_t sub_2384438E8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_238492C7C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

ValueMetadata *type metadata accessor for ScheduleQueryEmptyRunner()
{
  return &type metadata for ScheduleQueryEmptyRunner;
}

uint64_t sub_238443A78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_25690A350 + dword_25690A350);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_238438264;
  return v7(a1, a2);
}

uint64_t sub_238443AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch();
}

uint64_t sub_238443AFC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v10;

  if (qword_256909A08 != -1)
    swift_once();
  v1 = sub_238492574();
  sub_238435CA4(v1, (uint64_t)qword_256909F78);
  swift_bridgeObjectRetain_n();
  v2 = sub_23849255C();
  v3 = sub_23849285C();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 32);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 24);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v10 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_23843604C(v6, v5, &v10);
    sub_238492934();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_238433000, v2, v3, "EmptyRunner finished running plan: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v8, -1, -1);
    MEMORY[0x23B835AF4](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

void sub_238443CC0(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

unint64_t sub_238443D18()
{
  sub_238492A78();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  return 0xD00000000000001CLL;
}

void sub_238443E10()
{
  uint64_t v0;

  sub_238443CC0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

unint64_t sub_238443E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;

  sub_238443CC0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
  if (!v2)
    return sub_23847E2BC(MEMORY[0x24BEE4AF8]);
  v3 = v1;
  v4 = v2;
  sub_238435C24(&qword_256909BB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_238493540;
  *(_QWORD *)(inited + 32) = sub_23849261C();
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  return sub_23847E2BC(inited);
}

uint64_t sub_238443EC8()
{
  sub_238444F68();
  return sub_238492CC4();
}

uint64_t sub_238443EF0()
{
  sub_238444F68();
  return sub_238492CB8();
}

uint64_t ScheduledQueryHomeAccessoryToggleRunner.run(query:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch();
}

uint64_t sub_238443F38()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t HomeAccessoryToggleRunnerV07extracthG05querySSSgSS_tFZ_0;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (qword_256909A08 != -1)
    swift_once();
  v1 = sub_238492574();
  sub_238435CA4(v1, (uint64_t)qword_256909F78);
  swift_bridgeObjectRetain_n();
  v2 = sub_23849255C();
  v3 = sub_23849285C();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 32);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 24);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v18 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_23843604C(v6, v5, &v18);
    sub_238492934();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_238433000, v2, v3, "Running toggle accessory: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v8, -1, -1);
    MEMORY[0x23B835AF4](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  HomeAccessoryToggleRunnerV07extracthG05querySSSgSS_tFZ_0 = _s23ConditionalEngineClient39ScheduledQueryHomeAccessoryToggleRunnerV07extracthG05querySSSgSS_tFZ_0();
  *(_QWORD *)(v0 + 40) = v10;
  if (v10)
  {
    v11 = HomeAccessoryToggleRunnerV07extracthG05querySSSgSS_tFZ_0;
    v12 = v10;
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v13;
    *v13 = v0;
    v13[1] = sub_238439AEC;
    v13[2] = v11;
    v13[3] = v12;
    return swift_task_switch();
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 24);
    v15 = *(_QWORD *)(v0 + 32);
    sub_238444E54();
    swift_allocError();
    *(_QWORD *)v17 = v16;
    *(_QWORD *)(v17 + 8) = v15;
    *(_BYTE *)(v17 + 16) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t ScheduledQueryHomeAccessoryToggleRunner.toggle(accessory:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_2384441B8()
{
  uint64_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;

  if (qword_256909A08 != -1)
    swift_once();
  v1 = sub_238492574();
  v0[4] = sub_238435CA4(v1, (uint64_t)qword_256909F78);
  v2 = sub_23849255C();
  v3 = sub_238492880();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_238433000, v2, v3, "Toggling accessory", v4, 2u);
    MEMORY[0x23B835AF4](v4, -1, -1);
  }

  v5 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_2384442BC;
  return sub_2384443F8(v0[2], v0[3]);
}

uint64_t sub_2384442BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[6] = a1;
  v4[7] = a2;
  v4[8] = v2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23844432C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 56);
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v2;
    *v2 = v0;
    v2[1] = sub_238439DCC;
    v2[14] = *(_QWORD *)(v0 + 48);
    v2[15] = v1;
    return swift_task_switch();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    sub_238444E54();
    swift_allocError();
    *(_QWORD *)v6 = v5;
    *(_QWORD *)(v6 + 8) = v4;
    *(_BYTE *)(v6 + 16) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2384443F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[12] = a1;
  v2[13] = a2;
  v3 = sub_238435C24(&qword_25690A448);
  v2[14] = v3;
  v2[15] = *(_QWORD *)(v3 - 8);
  v2[16] = swift_task_alloc();
  v4 = sub_2384923E8();
  v2[17] = v4;
  v2[18] = *(_QWORD *)(v4 - 8);
  v2[19] = swift_task_alloc();
  v5 = sub_238435C24(&qword_25690A450);
  v2[20] = v5;
  v2[21] = *(_QWORD *)(v5 - 8);
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2384444B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[18];
  v1 = v0[19];
  v3 = v0[17];
  type metadata accessor for AccessoryEntityRepresentation();
  sub_2384923DC();
  sub_238445144(&qword_25690A430, (uint64_t)&unk_238494D64);
  sub_2384923B8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultEnvironment);
  v5 = sub_238438F14();
  v6 = MEMORY[0x24BE04080];
  v0[5] = v5;
  v0[6] = v6;
  v0[2] = v4;
  v0[23] = sub_2384923D0();
  sub_238436B3C((uint64_t)(v0 + 2));
  swift_getObjectType();
  v7 = (_QWORD *)swift_task_alloc();
  v0[24] = v7;
  sub_238445144(&qword_25690A458, (uint64_t)&unk_238494D94);
  *v7 = v0;
  v7[1] = sub_238437B54;
  return sub_2384923AC();
}

uint64_t sub_238444650(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return swift_task_switch();
}

uint64_t sub_238444668()
{
  _QWORD *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t inited;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t);

  v1 = objc_allocWithZone(MEMORY[0x24BE5FC68]);
  swift_bridgeObjectRetain();
  v2 = (void *)sub_238492610();
  v3 = (void *)sub_238492610();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_initWithTypeIdentifier_instanceIdentifier_, v2, v3);

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE5FC78]), sel_init);
  v6 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v7 = v4;
  v8 = objc_msgSend(v6, sel_initWithValue_valueType_, v7, v5);
  v0[16] = v8;

  sub_238435C24((uint64_t *)&unk_25690AAA0);
  inited = swift_initStackObject();
  v0[17] = inited;
  *(_OWORD *)(inited + 16) = xmmword_238493540;
  *(_QWORD *)(inited + 32) = 0x797469746E65;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 48) = v8;
  xmmword_256911CE0 = xmmword_238494E40;
  v10 = v8;
  swift_bridgeObjectRelease();
  v0[12] = &type metadata for ActionExecutionOptions;
  v0[13] = &off_250A27C50;
  v11 = swift_allocObject();
  v0[9] = v11;
  *(_OWORD *)(v11 + 16) = xmmword_238494E40;
  *(_WORD *)(v11 + 32) = 513;
  *(_QWORD *)(v11 + 40) = 0;
  *(_BYTE *)(v11 + 48) = 1;
  *(_OWORD *)(v11 + 56) = 0u;
  *(_OWORD *)(v11 + 72) = 0u;
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_25690B2D0 + dword_25690B2D0);
  v12 = (_QWORD *)swift_task_alloc();
  v0[18] = v12;
  *v12 = v0;
  v12[1] = sub_2384448A0;
  return v14(0x6E49656C67676F54, 0xEC000000746E6574, inited, 0, 1, (uint64_t)(v0 + 9), 0, 0);
}

uint64_t sub_2384448A0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0)
    sub_238436B3C(v2 + 72);
  return swift_task_switch();
}

uint64_t sub_23844491C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238444950()
{
  uint64_t v0;

  sub_238436B3C(v0 + 72);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238444990(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_238438264;
  v5[3] = a1;
  v5[4] = a2;
  return swift_task_switch();
}

void sub_2384449F4()
{
  strcpy((char *)&qword_25690A358, "com.apple.Home");
  unk_25690A367 = -18;
}

uint64_t sub_238444A24()
{
  uint64_t v0;

  if (qword_256909A38 != -1)
    swift_once();
  v0 = qword_25690A358;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_238444A80()
{
  return 0xD000000000000017;
}

uint64_t sub_238444A9C()
{
  sub_238445144(&qword_25690A440, (uint64_t)&unk_238494C94);
  return sub_238492400();
}

uint64_t sub_238444AD8()
{
  sub_238445144(&qword_25690A430, (uint64_t)&unk_238494D64);
  return sub_2384923C4();
}

uint64_t sub_238444B04()
{
  sub_238445144(&qword_25690A440, (uint64_t)&unk_238494C94);
  return sub_2384923F4();
}

uint64_t _s23ConditionalEngineClient39ScheduledQueryHomeAccessoryToggleRunnerV07extracthG05querySSSgSS_tFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD v21[6];

  v0 = sub_238435C24(&qword_25690A460);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_238435C24(&qword_25690A468);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_238435C24(&qword_25690A470);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v21 - v12;
  sub_238435C24(qword_25690A478);
  sub_2384922BC();
  sub_2384922D4();
  v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v11, v7);
  sub_2384922C8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    v14(v13, v7);
    sub_238445184((uint64_t)v2);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    if (qword_256909A08 != -1)
      swift_once();
    v17 = sub_238492574();
    sub_238435CA4(v17, (uint64_t)qword_256909F78);
    v18 = sub_23849255C();
    v19 = sub_238492880();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_238433000, v18, v19, "Matched toggle accessory", v20, 2u);
      MEMORY[0x23B835AF4](v20, -1, -1);
    }

    swift_getKeyPath();
    sub_2384922F8();
    swift_release();
    v15 = MEMORY[0x23B834DE0](v21[1], v21[2], v21[3], v21[4]);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v14(v13, v7);
  }
  return v15;
}

unint64_t sub_238444E54()
{
  unint64_t result;

  result = qword_25690A370;
  if (!qword_25690A370)
  {
    result = MEMORY[0x23B835A40](&unk_238494DD4, &type metadata for SendAccessoryToggleError);
    atomic_store(result, (unint64_t *)&qword_25690A370);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryHomeAccessoryToggleRunner()
{
  return &type metadata for ScheduledQueryHomeAccessoryToggleRunner;
}

uint64_t type metadata accessor for AccessoryEntityRepresentation()
{
  uint64_t result;

  result = qword_25690A3A8;
  if (!qword_25690A3A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_238444EE4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_238444F20()
{
  return type metadata accessor for AccessoryEntityRepresentation();
}

ValueMetadata *type metadata accessor for SendAccessoryToggleError()
{
  return &type metadata for SendAccessoryToggleError;
}

unint64_t sub_238444F3C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_238444F68();
  result = sub_238444FAC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_238444F68()
{
  unint64_t result;

  result = qword_25690A3F8;
  if (!qword_25690A3F8)
  {
    result = MEMORY[0x23B835A40](&unk_238494B6C, &type metadata for SendAccessoryToggleError);
    atomic_store(result, (unint64_t *)&qword_25690A3F8);
  }
  return result;
}

unint64_t sub_238444FAC()
{
  unint64_t result;

  result = qword_25690A400;
  if (!qword_25690A400)
  {
    result = MEMORY[0x23B835A40](&unk_238494BAC, &type metadata for SendAccessoryToggleError);
    atomic_store(result, (unint64_t *)&qword_25690A400);
  }
  return result;
}

uint64_t sub_238444FF0()
{
  return sub_238445144(&qword_25690A408, (uint64_t)&unk_238494C10);
}

uint64_t sub_238445014()
{
  return sub_238445144(&qword_25690A410, (uint64_t)&unk_238494CC4);
}

uint64_t sub_238445038()
{
  return sub_238445144(&qword_25690A418, (uint64_t)&unk_238494C54);
}

uint64_t sub_23844505C()
{
  return sub_238445144(&qword_25690A420, (uint64_t)&unk_238494C2C);
}

uint64_t sub_238445080()
{
  return sub_238445144(&qword_25690A428, (uint64_t)&unk_238494D1C);
}

uint64_t sub_2384450A4()
{
  return sub_238445144(&qword_25690A430, (uint64_t)&unk_238494D64);
}

uint64_t sub_2384450C8()
{
  return sub_238445144(&qword_25690A438, (uint64_t)&unk_238494CF4);
}

uint64_t sub_2384450EC()
{
  return sub_238445144(&qword_25690A440, (uint64_t)&unk_238494C94);
}

uint64_t sub_238445110()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_238445144(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AccessoryEntityRepresentation();
    result = MEMORY[0x23B835A40](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_238445184(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_238435C24(&qword_25690A460);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t UserDefault.defaultValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t UserDefault.key.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

id UserDefault.container.getter(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(v1 + *(int *)(a1 + 32));
}

uint64_t UserDefault.projectedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2);
}

uint64_t UserDefault.init(key:defaultValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t result;
  uint64_t v23;

  v10 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v14);
  v15 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v16 = (void *)sub_238492610();
  v17 = objc_msgSend(v15, sel_initWithSuiteName_, v16);

  if (v17)
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a3, a4);
    v20 = type metadata accessor for UserDefault(0, a4, v18, v19);
    v21 = (_QWORD *)(a5 + *(int *)(v20 + 28));
    *v21 = a1;
    v21[1] = a2;
    result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a5, v12, a4);
    *(_QWORD *)(a5 + *(int *)(v20 + 32)) = v17;
  }
  else
  {
    result = sub_238492B20();
    __break(1u);
  }
  return result;
}

uint64_t static NSUserDefaults.makeConditionalEngineUserDefaults()()
{
  id v0;
  void *v1;
  id v2;
  uint64_t result;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_238492610();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
    return (uint64_t)v2;
  result = sub_238492B20();
  __break(1u);
  return result;
}

uint64_t UserDefault.init(key:defaultValue:container:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;

  v12 = type metadata accessor for UserDefault(0, a5, a3, a4);
  v13 = (_QWORD *)(a6 + *(int *)(v12 + 28));
  *v13 = a1;
  v13[1] = a2;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a6, a3, a5);
  *(_QWORD *)(a6 + *(int *)(v12 + 32)) = a4;
  return result;
}

uint64_t type metadata accessor for UserDefault(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23844602C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UserDefault);
}

uint64_t UserDefault.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  int v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  _OWORD v23[2];

  v3 = v2;
  v21 = a2;
  v5 = *(_QWORD *)(a1 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v6 + 16);
  v10 = sub_23849291C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v20 - v12;
  v14 = *(void **)(v3 + *(int *)(a1 + 32));
  v15 = (void *)sub_238492610();
  v16 = objc_msgSend(v14, sel_objectForKey_, v15);

  if (v16)
  {
    sub_238492988();
    swift_unknownObjectRelease();
    sub_2384456FC(&v22, v23);
  }
  else
  {
    memset(v23, 0, sizeof(v23));
  }
  sub_238435C24((uint64_t *)&unk_25690B7F0);
  v17 = swift_dynamicCast();
  v18 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, v17 ^ 1u, 1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v3, a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v13, 1, v9) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(v21, v8, v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v21, v13, v9);
  }
}

_OWORD *sub_2384456FC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t UserDefault.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_2384458C4(a1, a2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(a1);
}

void (*UserDefault.wrappedValue.modify(_QWORD *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v9 = malloc(v8);
  v5[5] = v9;
  UserDefault.wrappedValue.getter(a2, (uint64_t)v9);
  return sub_2384457CC;
}

void sub_2384457CC(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, uint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[4];
  v4 = (void *)(*a1)[5];
  v5 = (*a1)[2];
  v6 = (*a1)[3];
  v7 = **a1;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    sub_2384458C4((uint64_t)v3, v7);
    v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
  }
  else
  {
    sub_2384458C4((*a1)[5], v7);
    v8 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v8(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

Swift::Void __swiftcall UserDefault.removeObject()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(v0 + 32));
  v3 = (id)sub_238492610();
  objc_msgSend(v2, sel_removeObjectForKey_, v3);

}

void sub_2384458C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)(v2 + *(int *)(a2 + 32));
  v4 = sub_238492C70();
  v5 = (id)sub_238492610();
  objc_msgSend(v3, sel_setObject_forKey_, v4, v5);
  swift_unknownObjectRelease();

}

uint64_t sub_23844593C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;

  v5 = type metadata accessor for UserDefault(0, *(_QWORD *)(a2 + a1 - 8), a2, a3);
  return UserDefault.wrappedValue.getter(v5, a4);
}

void sub_238445974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = type metadata accessor for UserDefault(0, *(_QWORD *)(a4 + a3 - 8), a3, a4);
  sub_2384458C4(a1, v5);
}

uint64_t sub_2384459B0()
{
  return 8;
}

_QWORD *sub_2384459BC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2384459C8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2384459D0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_238445A54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  void **v12;
  void *v13;
  id v14;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    v12 = (void **)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFF8);
    v13 = *v12;
    *(_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8) = *v12;
    swift_bridgeObjectRetain();
    v14 = v13;
  }
  return v4;
}

void sub_238445B34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();

}

uint64_t sub_238445B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void *v10;
  id v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = (void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  v10 = *v9;
  *(_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8) = *v9;
  swift_bridgeObjectRetain();
  v11 = v10;
  return a1;
}

uint64_t sub_238445C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void *v10;
  void *v11;
  id v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = *(void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  v11 = *v9;
  *v9 = v10;
  v12 = v10;

  return a1;
}

uint64_t sub_238445CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_238445D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = *v9;
  *v9 = *(void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_238445D98(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_238445E1C + 4 * byte_238494E50[v10]))();
  }
}

void sub_238445EA0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_238445F9C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x238446014);
}

void sub_238445FA4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x238445FACLL);
  JUMPOUT(0x238446014);
}

void sub_238445FF0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x238446014);
}

void sub_238445FF8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x238446014);
}

uint64_t sub_238446000(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x23844600CLL);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x238446014);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t sub_23844602C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x23B8359EC](a1, v6, a5);
}

uint64_t EventStreamClient.init(shoudSanitize:startDate:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  _BYTE *v6;
  uint64_t v7;

  v6 = &a3[*(int *)(type metadata accessor for EventStreamClient() + 20)];
  sub_238491F5C();
  *a3 = a1;
  v7 = sub_238491F98();
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v6, a2, v7);
}

uint64_t type metadata accessor for EventStreamClient()
{
  uint64_t result;

  result = qword_25690A588;
  if (!qword_25690A588)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static EventStreamClient.minStartDate.getter()
{
  return sub_238491F5C();
}

uint64_t static EventStreamClient.aWeekAgo.getter()
{
  return sub_238491F5C();
}

uint64_t EventStreamClient.readStreams()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t aBlock;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;

  v0 = type metadata accessor for EventStreamClient();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 64);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)BiomeLibrary(), sel_Location);
  swift_unknownObjectRelease();
  v5 = objc_msgSend(v4, sel_PointOfInterest);
  swift_unknownObjectRelease();
  v6 = objc_msgSend(v5, sel_Category);
  v29 = v6;
  swift_unknownObjectRelease();
  v7 = (void *)sub_238492610();
  v8 = objc_msgSend(v6, sel_publisherWithUseCase_, v7);

  v9 = objc_msgSend((id)BiomeLibrary(), sel_Location);
  swift_unknownObjectRelease();
  v10 = objc_msgSend(v9, sel_Semantic);
  v28 = v10;
  swift_unknownObjectRelease();
  v11 = (void *)sub_238492610();
  v12 = objc_msgSend(v10, sel_publisherWithUseCase_, v11);

  sub_238435C24(&qword_25690A500);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_238494ED0;
  *(_QWORD *)(v13 + 32) = v12;
  aBlock = v13;
  sub_238492784();
  v27 = v12;
  sub_238435C24(&qword_25690A508);
  v14 = (void *)sub_238492760();
  swift_bridgeObjectRelease();
  v35 = sub_23844653C;
  v36 = 0;
  v15 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v32 = 1107296256;
  v33 = sub_238446610;
  v34 = &unk_250A250A8;
  v16 = _Block_copy(&aBlock);
  v17 = objc_msgSend(v8, sel_orderedMergeWithOthers_comparator_, v14, v16);
  _Block_release(v16);

  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = MEMORY[0x24BEE4AF8];
  v35 = sub_2384466E8;
  v36 = 0;
  aBlock = v15;
  v32 = 1107296256;
  v33 = sub_2384467F8;
  v34 = &unk_250A250F8;
  v19 = _Block_copy(&aBlock);
  sub_238446C94(v30, (uint64_t)v3);
  v20 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v21 = (v2 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject();
  sub_238446D6C((uint64_t)v3, v22 + v20);
  *(_QWORD *)(v22 + v21) = v18;
  v35 = sub_238446DB0;
  v36 = v22;
  aBlock = v15;
  v32 = 1107296256;
  v33 = sub_238447334;
  v34 = &unk_250A25148;
  v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v24 = objc_msgSend(v17, sel_sinkWithCompletion_receiveInput_, v19, v23);

  _Block_release(v23);
  _Block_release(v19);

  swift_beginAccess();
  v25 = *(_QWORD *)(v18 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v25;
}

uint64_t sub_23844653C(uint64_t a1, uint64_t a2)
{
  double v3;
  double v4;
  double v5;
  double v6;
  void *v8;
  _BYTE v9[32];

  sub_238436B5C(a1, (uint64_t)v9);
  sub_238435C24(&qword_25690A638);
  swift_dynamicCast();
  sub_238436B5C(a2, (uint64_t)v9);
  swift_dynamicCast();
  objc_msgSend(v8, sel_timestamp);
  v4 = v3;
  objc_msgSend(v8, sel_timestamp);
  v6 = v5;

  if (v4 >= v6)
    return 1;
  else
    return -1;
}

uint64_t sub_238446610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(_QWORD *, _QWORD *);
  uint64_t v6;
  _QWORD v8[4];
  _QWORD v9[4];

  v5 = *(uint64_t (**)(_QWORD *, _QWORD *))(a1 + 32);
  v9[3] = swift_getObjectType();
  v9[0] = a2;
  v8[3] = swift_getObjectType();
  v8[0] = a3;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v6 = v5(v9, v8);
  swift_release();
  sub_238436B3C((uint64_t)v8);
  sub_238436B3C((uint64_t)v9);
  return v6;
}

uint64_t sub_2384466AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2384466BC()
{
  return swift_release();
}

uint64_t sub_2384466C4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_2384466E8(void *a1)
{
  id result;
  void *v2;
  uint64_t v3;

  result = objc_msgSend(a1, sel_error);
  if (result)
  {
    v2 = result;
    sub_238435C24((uint64_t *)&unk_25690AA80);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_238493540;
    sub_238492A78();
    sub_2384926A0();
    sub_238435C24(&qword_25690A630);
    sub_238492B08();
    *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v3 + 32) = 0;
    *(_QWORD *)(v3 + 40) = 0xE000000000000000;
    sub_238492D0C();

    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2384467F8(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_238446848(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  _QWORD **v11;
  SEL *v12;
  void *v13;
  _QWORD *v14;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  unsigned __int8 v47;

  v5 = sub_238491F98();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectRetain();
  objc_opt_self();
  v9 = (void *)swift_dynamicCastObjCClass();
  if (v9)
    objc_msgSend(v9, sel_timestamp);
  swift_unknownObjectRelease();
  swift_unknownObjectRetain();
  objc_opt_self();
  v10 = (void *)swift_dynamicCastObjCClass();
  if (v10)
    objc_msgSend(v10, sel_timestamp);
  swift_unknownObjectRelease();
  sub_238491F20();
  type metadata accessor for EventStreamClient();
  if ((sub_238491F44() & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = (_QWORD **)(a3 + 16);
  objc_opt_self();
  v12 = (SEL *)&unk_250A29000;
  if (swift_dynamicCastObjCClass()
    && (objc_msgSend(a1, sel_respondsToSelector_, sel_eventBody) & 1) != 0
    && objc_msgSend(a1, sel_eventBody))
  {
    objc_opt_self();
    v13 = (void *)swift_dynamicCastObjCClass();
    if (v13 && (EventStreamClient.locationPOIEvent(body:date:)(v13, (uint64_t)v8, (uint64_t)&v42), v43))
    {
      *(_QWORD *)&v40 = v43;
      v38 = v46;
      v39 = v45;
      v37 = v47;
      v35 = v42;
      v36 = v44;
      swift_beginAccess();
      v14 = v11;
      v15 = *v11;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v41 = v14;
      *v14 = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v15 = sub_238474FB8(0, v15[2] + 1, 1, v15);
        *v41 = v15;
      }
      v18 = v15[2];
      v17 = v15[3];
      v19 = v18 + 1;
      if (v18 >= v17 >> 1)
      {
        v34 = v18 + 1;
        v33 = sub_238474FB8((_QWORD *)(v17 > 1), v18 + 1, 1, v15);
        v19 = v34;
        v15 = v33;
        *v41 = v33;
      }
      v15[2] = v19;
      v20 = &v15[8 * v18];
      v21 = v40;
      v20[4] = v35;
      v20[5] = v21;
      *((_BYTE *)v20 + 48) = v36 & 1;
      *(_OWORD *)(v20 + 7) = v39;
      *(_OWORD *)(v20 + 9) = v38;
      *((_BYTE *)v20 + 88) = v37;
      swift_endAccess();
      swift_unknownObjectRelease();
      v11 = (_QWORD **)v41;
      v12 = (SEL *)&unk_250A29000;
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  objc_opt_self();
  if (!swift_dynamicCastObjCClass()
    || (objc_msgSend(a1, v12[261], sel_eventBody) & 1) == 0
    || !objc_msgSend(a1, sel_eventBody))
  {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  objc_opt_self();
  v22 = (void *)swift_dynamicCastObjCClass();
  if (!v22)
  {
LABEL_27:
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v23 = EventStreamClient.semanticLocationEvent(body:date:)(v22, (uint64_t)v8, (uint64_t)&v42);
  v24 = v43;
  if (v43)
  {
    v39 = v46;
    v40 = v45;
    LODWORD(v38) = v47;
    v25 = v42;
    v26 = v44;
    swift_beginAccess();
    v27 = *v11;
    v28 = swift_isUniquelyReferenced_nonNull_native();
    *v11 = v27;
    v41 = v11;
    if ((v28 & 1) == 0)
    {
      v27 = sub_238474FB8(0, v27[2] + 1, 1, v27);
      *v11 = v27;
    }
    v30 = v27[2];
    v29 = v27[3];
    if (v30 >= v29 >> 1)
    {
      v27 = sub_238474FB8((_QWORD *)(v29 > 1), v30 + 1, 1, v27);
      *v41 = v27;
    }
    v27[2] = v30 + 1;
    v31 = &v27[8 * v30];
    v31[4] = v25;
    v31[5] = v24;
    *((_BYTE *)v31 + 48) = v26 & 1;
    *(_OWORD *)(v31 + 7) = v40;
    *(_OWORD *)(v31 + 9) = v39;
    *((_BYTE *)v31 + 88) = v38;
    swift_endAccess();
    goto LABEL_27;
  }
  (*(void (**)(char *, uint64_t, double))(v6 + 8))(v8, v5, v23);
  return swift_unknownObjectRelease();
}

uint64_t sub_238446C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventStreamClient();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_238446CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for EventStreamClient();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + *(int *)(v1 + 20) + ((v2 + 16) & ~v2);
  v4 = sub_238491F98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_238446D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventStreamClient();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_238446DB0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for EventStreamClient() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_238446848(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

id EventStreamClient.locationPOIEvent(body:date:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  id result;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  char v32[16];
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  __int128 v36;
  __int128 v37;
  char v38;

  v7 = sub_238491F98();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v3;
  if (v11 == 1)
  {
    if (objc_msgSend(a1, sel_hasRank))
    {
      result = objc_msgSend(a1, sel_rank);
      if ((_DWORD)result)
        goto LABEL_10;
    }
  }
  result = objc_msgSend(a1, sel_poiCategory);
  if (result)
  {
    v13 = result;
    v14 = sub_23849261C();
    v16 = v15;

    if (v11)
    {
      v17 = sub_23844737C(v14, v16, qword_250A23B38);
      swift_arrayDestroy();
      if ((v17 & 1) != 0)
      {
        result = (id)swift_bridgeObjectRelease();
LABEL_10:
        *(_OWORD *)(a3 + 41) = 0u;
        *(_OWORD *)(a3 + 16) = 0u;
        *(_OWORD *)(a3 + 32) = 0u;
        *(_OWORD *)a3 = 0u;
        return result;
      }
    }
    v33 = v14;
    v34 = v16;
    strcpy(v32, "GEOPOICategory");
    v32[15] = -18;
    v31[0] = 0;
    v31[1] = 0xE000000000000000;
    sub_238436638();
    v18 = sub_238492964();
    v20 = v19;
    swift_bridgeObjectRelease();
    v33 = v18;
    v34 = v20;
    v21 = sub_23849294C();
    v23 = v22;
    swift_bridgeObjectRelease();
    v32[0] = 0;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
    result = (id)sub_23847F034(v32, (uint64_t)v10, v21, v23, (uint64_t)&v33);
    v24 = v34;
    v25 = v35;
    v26 = v38;
    v27 = v36;
    v28 = v37;
    *(_QWORD *)a3 = v33;
    *(_QWORD *)(a3 + 8) = v24;
    *(_QWORD *)(a3 + 16) = v25;
    *(_OWORD *)(a3 + 24) = v27;
    *(_OWORD *)(a3 + 40) = v28;
  }
  else
  {
    if (v11)
      goto LABEL_10;
    v32[0] = 0;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
    result = (id)sub_23847F034(v32, (uint64_t)v10, 0, 0, (uint64_t)&v33);
    v29 = v34;
    v30 = v35;
    v26 = v38;
    *(_QWORD *)a3 = v33;
    *(_QWORD *)(a3 + 8) = v29;
    *(_QWORD *)(a3 + 16) = v30;
    *(_OWORD *)(a3 + 24) = v36;
    *(_OWORD *)(a3 + 40) = v37;
  }
  *(_BYTE *)(a3 + 56) = v26;
  return result;
}

double EventStreamClient.semanticLocationEvent(body:date:)@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  double result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _BYTE v31[15];
  char v32;
  _QWORD v33[2];
  unsigned __int8 v34;
  __int128 v35;
  char v36;

  v6 = sub_238435C24(&qword_25690A518);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = &v31[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v31[-v10];
  v12 = sub_238491F98();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = &v31[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_238447440((int)objc_msgSend(a1, sel_placeType), (int)objc_msgSend(a1, sel_userSpecificPlaceType));
  if (v17)
  {
    v18 = v16;
    v19 = v17;
    v32 = 1;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
    sub_23847F034(&v32, (uint64_t)v15, v18, v19, (uint64_t)v33);
    if (objc_msgSend(a1, sel_hasStarting))
      v36 = objc_msgSend(a1, sel_starting) ^ 1;
    v20 = objc_msgSend(a1, sel_loiIdentifier);
    if (v20)
    {
      v21 = v20;
      sub_238491FBC();

      v22 = sub_238491FD4();
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 0, 1, v22);
    }
    else
    {
      v22 = sub_238491FD4();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 1, 1, v22);
    }
    sub_238447550((uint64_t)v9, (uint64_t)v11);
    sub_238491FD4();
    v24 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v24 + 48))(v11, 1, v22) == 1)
    {
      sub_23843B198((uint64_t)v11, &qword_25690A518);
      v25 = 0;
      v26 = 0;
    }
    else
    {
      v25 = sub_238491FA4();
      v26 = v27;
      (*(void (**)(_BYTE *, uint64_t))(v24 + 8))(v11, v22);
    }
    swift_bridgeObjectRelease();
    v28 = v33[1];
    v29 = v34;
    v30 = v36;
    *(_QWORD *)a3 = v33[0];
    *(_QWORD *)(a3 + 8) = v28;
    *(_QWORD *)(a3 + 16) = v29;
    *(_QWORD *)(a3 + 24) = v25;
    *(_QWORD *)(a3 + 32) = v26;
    result = *(double *)&v35;
    *(_OWORD *)(a3 + 40) = v35;
    *(_BYTE *)(a3 + 56) = v30;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)(a3 + 41) = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  return result;
}

uint64_t sub_238447334(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_23844737C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_238492C7C();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_238492C7C() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_238447440(int a1, int a2)
{
  _BYTE *v2;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  v5 = (id)BMLocationSemanticUserSpecificPlaceTypeAsString();
  v6 = sub_23849261C();

  v7 = (id)BMLocationSemanticPlaceTypeAsString();
  v8 = sub_23849261C();

  if (a2)
  {
    if (a1 && a1 != 3)
    {
      sub_2384926A0();
      sub_2384926A0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (*v2 == 1 && !a1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v8;
}

uint64_t sub_238447550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_238435C24(&qword_25690A518);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t EventStreamClient.consolidate(events:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  int v11;
  _QWORD *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  char v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  unint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *inited;
  _OWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t result;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _QWORD *v65;

  v2 = sub_238491FD4();
  v60 = *(_QWORD *)(v2 - 8);
  v61 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v59 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v4 = sub_23847E3E4(MEMORY[0x24BEE4AF8]);
  v5 = a1[2];
  if (!v5)
  {
LABEL_65:
    swift_bridgeObjectRelease();
    return (uint64_t)a1;
  }
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = 0;
  v10 = a1;
  *(_QWORD *)&v63 = a1;
  *(_QWORD *)&v62 = v5;
  do
  {
    if (LOBYTE(a1[v6 + 6]) == 1)
    {
      if (v9 >= v10[2])
        goto LABEL_68;
      v11 = LOBYTE(a1[v6 + 11]);
      if (v10[v6 + 8])
      {
        if (v11 == 2)
          goto LABEL_4;
LABEL_25:
        swift_bridgeObjectRelease();
        if ((v11 & 1) != 0)
        {
          v7 = 0;
          v8 = 0;
        }
        else
        {
          if (a1[v6 + 8])
          {
            v7 = a1[v6 + 7];
            v8 = a1[v6 + 8];
          }
          else
          {
            v33 = v59;
            _s23ConditionalEngineClient0A5EventV2id10Foundation4UUIDVvg_0();
            v7 = sub_238491FA4();
            v8 = v34;
            (*(void (**)(char *, uint64_t))(v60 + 8))(v33, v61);
          }
          swift_bridgeObjectRetain();
        }
        goto LABEL_4;
      }
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_238448120(v10);
      if (v9 >= v10[2])
        goto LABEL_71;
      v26 = &v10[v6];
      v26[7] = v7;
      v26[8] = v8;
      swift_bridgeObjectRelease();
      if (v11 != 2)
        goto LABEL_25;
    }
    else
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_238448120(v10);
      if (v9 >= v10[2])
        goto LABEL_67;
      v12 = &v10[v6];
      v12[7] = v7;
      v12[8] = v8;
      swift_bridgeObjectRelease();
      if (v8)
      {
        if (v9 >= v10[2])
          goto LABEL_69;
        v13 = v10[v6 + 10];
        if (v13)
        {
          *(_QWORD *)&v64 = v10[v6 + 9];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v65 = (_QWORD *)v4;
          v15 = v7;
          v17 = sub_238442128(v7, v8);
          v18 = v4;
          v19 = *(_QWORD *)(v4 + 16);
          v20 = (v16 & 1) == 0;
          v21 = v19 + v20;
          if (__OFADD__(v19, v20))
            goto LABEL_70;
          v22 = v16;
          if (*(_QWORD *)(v18 + 24) >= v21)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              v25 = v65;
              if ((v16 & 1) == 0)
                goto LABEL_39;
            }
            else
            {
              sub_238449384();
              v25 = v65;
              if ((v22 & 1) == 0)
                goto LABEL_39;
            }
          }
          else
          {
            sub_238448460(v21, isUniquelyReferenced_nonNull_native);
            v23 = sub_238442128(v15, v8);
            if ((v22 & 1) != (v24 & 1))
              goto LABEL_75;
            v17 = v23;
            v25 = v65;
            if ((v22 & 1) == 0)
            {
LABEL_39:
              v25[(v17 >> 6) + 8] |= 1 << v17;
              v35 = (uint64_t *)(v25[6] + 16 * v17);
              *v35 = v15;
              v35[1] = v8;
              v36 = (_QWORD *)(v25[7] + 16 * v17);
              *v36 = v64;
              v36[1] = v13;
              v37 = v25[2];
              v38 = __OFADD__(v37, 1);
              v39 = v37 + 1;
              if (v38)
                goto LABEL_73;
              v7 = v15;
              v4 = (unint64_t)v25;
              v25[2] = v39;
              swift_bridgeObjectRetain();
              goto LABEL_41;
            }
          }
          v32 = (_QWORD *)(v25[7] + 16 * v17);
          swift_bridgeObjectRelease();
          *v32 = v64;
          v32[1] = v13;
          v4 = (unint64_t)v25;
          v7 = v15;
LABEL_41:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a1 = (_QWORD *)v63;
          v5 = v62;
          goto LABEL_4;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v27 = v7;
        v28 = sub_238442128(v7, v8);
        v30 = v29;
        swift_bridgeObjectRelease();
        if ((v30 & 1) != 0)
        {
          v31 = swift_isUniquelyReferenced_nonNull_native();
          v65 = (_QWORD *)v4;
          if ((v31 & 1) == 0)
          {
            sub_238449384();
            v4 = (unint64_t)v65;
          }
          swift_bridgeObjectRelease();
          sub_238448E1C(v28, v4);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v7 = v27;
      }
    }
LABEL_4:
    ++v9;
    v6 += 8;
  }
  while (v5 != v9);
  swift_bridgeObjectRelease();
  v40 = v10[2];
  if (!v40)
  {
LABEL_64:
    a1 = v10;
    goto LABEL_65;
  }
  v41 = 0;
  v42 = 0;
  v64 = xmmword_2384938A0;
  v63 = xmmword_238494EE0;
  v62 = xmmword_238494EF0;
  v61 = v40;
  while (v42 < v10[2])
  {
    v43 = v10[v41 + 8];
    if (v43 && *(_QWORD *)(v4 + 16))
    {
      v44 = v10[v41 + 7];
      swift_bridgeObjectRetain();
      v45 = sub_238442128(v44, v43);
      if ((v46 & 1) != 0)
      {
        v47 = v4;
        v48 = (uint64_t *)(*(_QWORD *)(v4 + 56) + 16 * v45);
        v50 = *v48;
        v49 = v48[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_238435C24(&qword_25690A520);
        inited = (_OWORD *)swift_initStackObject();
        inited[1] = v64;
        inited[2] = v63;
        inited[3] = v62;
        if (v42 >= v10[2])
          goto LABEL_72;
        v52 = inited;
        v53 = v10[v41 + 10];
        if (v53
          && ((v54 = v10[v41 + 9], v54 == 1701670728) && v53 == 0xE400000000000000
           || (sub_238492C7C() & 1) != 0
           || (v55 = *((_QWORD *)v52 + 7)) != 0
           && (*((_QWORD *)v52 + 6) == v54 && v55 == v53 || (sub_238492C7C() & 1) != 0)))
        {
          swift_setDeallocating();
          sub_238435C24(&qword_25690A528);
          swift_arrayDestroy();
          swift_bridgeObjectRelease();
          v4 = v47;
          v40 = v61;
        }
        else
        {
          swift_setDeallocating();
          sub_238435C24(&qword_25690A528);
          swift_arrayDestroy();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v10 = sub_238448120(v10);
          v40 = v61;
          if (v42 >= v10[2])
            goto LABEL_74;
          v56 = &v10[v41];
          v56[9] = v50;
          v56[10] = v49;
          swift_bridgeObjectRelease();
          v4 = v47;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    ++v42;
    v41 += 8;
    if (v40 == v42)
      goto LABEL_64;
  }
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  result = sub_238492CAC();
  __break(1u);
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> EventStreamClient.fetchJasonEvents(shouldConsolidate:)(Swift::Bool shouldConsolidate)
{
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  Swift::String result;

  v2 = (_QWORD *)EventStreamClient.readStreams()();
  if (shouldConsolidate)
  {
    EventStreamClient.consolidate(events:)(v2);
    swift_bridgeObjectRelease();
  }
  v3 = sub_238447C80();
  v5 = v4;
  swift_bridgeObjectRelease();
  v6 = v3;
  v7 = v5;
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

uint64_t sub_238447C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_238491D58();
  MEMORY[0x24BDAC7A8](v1);
  sub_238491D88();
  swift_allocObject();
  v2 = sub_238491D7C();
  sub_238435C24(&qword_25690A5D8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_2384938A0;
  sub_238491D40();
  sub_238491D4C();
  sub_238449CB0();
  sub_238435C24(&qword_25690A5E8);
  sub_238449CF8();
  sub_238492994();
  sub_238491D64();
  sub_238435C24(&qword_25690A5F8);
  sub_238449D44();
  sub_238491D70();
  if (!v0)
    __asm { BR              X10 }
  swift_release();
  return v2;
}

uint64_t sub_23844810C(unint64_t a1)
{
  return sub_238474FA4(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_238448120(_QWORD *a1)
{
  return sub_238474FB8(0, a1[2], 0, a1);
}

uint64_t sub_238448134(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  uint64_t v34;
  __int128 v35;

  v3 = v2;
  v5 = *v2;
  sub_238435C24(&qword_25690A5D0);
  v6 = sub_238492B44();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_42;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v32 = v2;
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v17 >= v33)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_35;
      v19 = *(_QWORD *)(v34 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_35:
          swift_release();
          v3 = v32;
          if ((a2 & 1) == 0)
            goto LABEL_42;
          goto LABEL_38;
        }
        v19 = *(_QWORD *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_44;
            if (v13 >= v33)
              goto LABEL_35;
            v19 = *(_QWORD *)(v34 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_21;
          }
        }
        v13 = v20;
      }
    }
LABEL_21:
    v10 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    v21 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v16);
    v35 = *(_OWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16 + 8);
    if ((a2 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v23 = v21;
    }
    sub_238492D18();
    sub_238492D30();
    if (v22)
    {
      swift_bridgeObjectRetain();
      sub_238492694();
      swift_bridgeObjectRelease();
    }
    result = sub_238492D48();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v14 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_OWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14) = v35;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v21;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v32;
  v18 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_42;
LABEL_38:
  v31 = 1 << *(_BYTE *)(v5 + 32);
  if (v31 >= 64)
    bzero(v18, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v31;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_238448460(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  sub_238435C24((uint64_t *)&unk_25690A620);
  v42 = a2;
  v6 = sub_238492B44();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_238492D18();
    sub_238492694();
    result = sub_238492D48();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_238448784(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  char v38;
  __int128 v39;
  __int128 v40;

  v3 = v2;
  v5 = *v2;
  sub_238435C24(&qword_25690A5C8);
  v38 = a2;
  v6 = sub_238492B44();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v37 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v36)
          goto LABEL_33;
        v23 = v37[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v36)
            goto LABEL_33;
          v23 = v37[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v38 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v5 + 32);
                if (v35 >= 64)
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v35;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v37[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v36)
                  goto LABEL_33;
                v23 = v37[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 48 * v21;
      v33 = *(_QWORD *)v32;
      v34 = *(_QWORD *)(v32 + 24);
      v39 = *(_OWORD *)(v32 + 32);
      v40 = *(_OWORD *)(v32 + 8);
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_238492D18();
      sub_238492694();
      result = sub_238492D48();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = *(_QWORD *)(v7 + 56) + 48 * v17;
      *(_QWORD *)v19 = v33;
      *(_OWORD *)(v19 + 8) = v40;
      *(_QWORD *)(v19 + 24) = v34;
      *(_OWORD *)(v19 + 32) = v39;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_238448AC8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  char v42;
  uint64_t v43;
  __int128 v44;

  v3 = v2;
  v5 = *v2;
  sub_238435C24(&qword_25690A5C0);
  v42 = a2;
  v6 = sub_238492B44();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v38 = v2;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_33;
      v24 = v40[v13];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v39)
              goto LABEL_33;
            v24 = v40[v13];
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 48 * v21;
    v34 = *(_QWORD *)v33;
    v35 = *(_QWORD *)(v33 + 8);
    v36 = *(_QWORD *)(v33 + 24);
    v43 = *(_QWORD *)(v33 + 16);
    v44 = *(_OWORD *)(v33 + 32);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_238492D18();
    sub_238492694();
    result = sub_238492D48();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 48 * v17;
    *(_QWORD *)v19 = v34;
    *(_QWORD *)(v19 + 8) = v35;
    *(_QWORD *)(v19 + 16) = v43;
    *(_QWORD *)(v19 + 24) = v36;
    *(_OWORD *)(v19 + 32) = v44;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_238448E1C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2384929A0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_238492D18();
        swift_bridgeObjectRetain();
        sub_238492694();
        v9 = sub_238492D48();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_238448FF0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  __int128 *v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2384929A0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_238492D18();
        swift_bridgeObjectRetain();
        sub_238492694();
        v11 = sub_238492D48();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (__int128 *)(v16 + 48 * v3);
          v18 = (__int128 *)(v16 + 48 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= v18 + 3))
          {
            v9 = *v18;
            v10 = v18[2];
            v17[1] = v18[1];
            v17[2] = v10;
            *v17 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

id sub_2384491D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_238435C24(&qword_25690A5D0);
  v2 = *v0;
  v3 = sub_238492B38();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    swift_bridgeObjectRetain();
    result = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_238449384()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_238435C24((uint64_t *)&unk_25690A620);
  v2 = *v0;
  v3 = sub_238492B38();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for EventStreamClient(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_238491F98();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for EventStreamClient(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_238491F98();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *initializeWithCopy for EventStreamClient(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_238491F98();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithCopy for EventStreamClient(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_238491F98();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *initializeWithTake for EventStreamClient(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_238491F98();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithTake for EventStreamClient(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_238491F98();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventStreamClient()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_238449778(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_238491F98();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for EventStreamClient()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_238449800(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = sub_238491F98();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_238449870()
{
  uint64_t result;
  unint64_t v1;

  result = sub_238491F98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_2384498E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;

  v1 = v0;
  sub_238435C24(&qword_25690A5C8);
  v2 = *v0;
  v3 = sub_238492B38();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 48 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 24);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v25 = *(_OWORD *)(v21 + 32);
    v26 = *(_OWORD *)(v21 + 8);
    *v24 = v18;
    v24[1] = v19;
    v27 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v27 = v22;
    *(_OWORD *)(v27 + 8) = v26;
    *(_QWORD *)(v27 + 24) = v23;
    *(_OWORD *)(v27 + 32) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_238449AD0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  __int128 v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;

  v1 = v0;
  sub_238435C24(&qword_25690A5C0);
  v2 = *v0;
  v3 = sub_238492B38();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      v9 = v29 + 1;
      if (v29 + 1 >= v13)
        goto LABEL_26;
      v30 = *(_QWORD *)(v6 + 8 * v9);
      if (!v30)
        break;
    }
LABEL_25:
    v12 = (v30 - 1) & v30;
    v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 48 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v27 = *(_OWORD *)(v21 + 32);
    *v26 = v19;
    v26[1] = v18;
    v28 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v28 = v22;
    *(_QWORD *)(v28 + 8) = v23;
    *(_QWORD *)(v28 + 16) = v24;
    *(_QWORD *)(v28 + 24) = v25;
    *(_OWORD *)(v28 + 32) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v31 = v29 + 2;
  if (v31 >= v13)
    goto LABEL_26;
  v30 = *(_QWORD *)(v6 + 8 * v31);
  if (v30)
  {
    v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v9);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_238449CB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25690A5E0;
  if (!qword_25690A5E0)
  {
    v1 = sub_238491D58();
    result = MEMORY[0x23B835A40](MEMORY[0x24BDCB2C8], v1);
    atomic_store(result, (unint64_t *)&qword_25690A5E0);
  }
  return result;
}

unint64_t sub_238449CF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25690A5F0;
  if (!qword_25690A5F0)
  {
    v1 = sub_238439040(&qword_25690A5E8);
    result = MEMORY[0x23B835A40](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_25690A5F0);
  }
  return result;
}

unint64_t sub_238449D44()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25690A600;
  if (!qword_25690A600)
  {
    v1 = sub_238439040(&qword_25690A5F8);
    v2 = sub_238449DA8();
    result = MEMORY[0x23B835A40](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25690A600);
  }
  return result;
}

unint64_t sub_238449DA8()
{
  unint64_t result;

  result = qword_25690A608;
  if (!qword_25690A608)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for ConditionalEvent, &type metadata for ConditionalEvent);
    atomic_store(result, (unint64_t *)&qword_25690A608);
  }
  return result;
}

uint64_t sub_238449DEC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_238449E30(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_238449E58()
{
  uint64_t v0;

  sub_238435C24((uint64_t *)&unk_25690AA80);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_238493540;
  sub_2384926A0();
  sub_2384926A0();
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 32) = 0x6D31333B305B1BLL;
  *(_QWORD *)(v0 + 40) = 0xE700000000000000;
  sub_238492D0C();
  swift_bridgeObjectRelease();
  exit(-1);
}

id sub_238449F18()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  *(_QWORD *)&xmmword_25690A640 = result;
  *((_QWORD *)&xmmword_25690A640 + 1) = 0xD000000000000021;
  qword_25690A650 = 0x8000000238497260;
  unk_25690A658 = 0xD000000000000015;
  qword_25690A660 = 0x8000000238498200;
  return result;
}

uint64_t sub_238449F88()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ScheduledQueryHistoryStore()
{
  return objc_opt_self();
}

uint64_t sub_238449FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  if (qword_256909A40 != -1)
    swift_once();
  v14 = xmmword_25690A640;
  v15 = *(_OWORD *)&qword_25690A650;
  v16 = qword_25690A660;
  v2 = sub_2384350F8();
  if (!v0)
  {
    v4 = v3;
    if (v3 >> 60 == 15)
    {
      return 0;
    }
    else
    {
      v5 = (uint64_t)v2;
      if (qword_256909A20 != -1)
        swift_once();
      v6 = sub_238492574();
      sub_238435CA4(v6, (uint64_t)qword_256909FC0);
      v7 = sub_23849255C();
      v8 = sub_238492880();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_238433000, v7, v8, "[HistoryStore] readQueriesFromCache success", v9, 2u);
        MEMORY[0x23B835AF4](v9, -1, -1);
      }

      sub_238491D34();
      swift_allocObject();
      sub_238491D28();
      sub_238435C24(&qword_25690A700);
      sub_23844AF74(&qword_25690A718, &qword_25690A720, (uint64_t)&protocol conformance descriptor for ScheduledQueryHistory.Event, MEMORY[0x24BEE12D0]);
      sub_238491D1C();
      v1 = v14;
      swift_bridgeObjectRetain();
      v10 = sub_23849255C();
      v11 = sub_238492880();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v12 = 134217984;
        *(_QWORD *)&v14 = *(_QWORD *)(v1 + 16);
        sub_238492934();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_238433000, v10, v11, "[HistoryStore] readQueriesFromCache %ld queries", v12, 0xCu);
        MEMORY[0x23B835AF4](v12, -1, -1);
        swift_release();
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
      }
      sub_23844218C(v5, v4);

    }
  }
  return v1;
}

uint64_t sub_23844A3F0(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_238474FA4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(type metadata accessor for ScheduledQueryHistory.Event() - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_238492B5C();
  __break(1u);
  return result;
}

uint64_t sub_23844A598(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  uint64_t v14;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v3 = sub_238491ECC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238491D88();
  swift_allocObject();
  sub_238491D7C();
  *(_QWORD *)&v17 = a1;
  sub_238435C24(&qword_25690A700);
  sub_23844AF74(&qword_25690A708, &qword_25690A710, (uint64_t)&protocol conformance descriptor for ScheduledQueryHistory.Event, MEMORY[0x24BEE12A0]);
  v7 = sub_238491D70();
  if (!v1)
  {
    v16 = v7;
    v21 = v8;
    if (qword_256909A20 != -1)
      swift_once();
    v9 = sub_238492574();
    sub_238435CA4(v9, (uint64_t)qword_256909FC0);
    swift_bridgeObjectRetain();
    v10 = sub_23849255C();
    v11 = sub_238492880();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v12 = 134217984;
      *(_QWORD *)&v17 = *(_QWORD *)(a1 + 16);
      sub_238492934();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_238433000, v10, v11, "[HistoryStore] storeQueriesToCache for %ld queries", v12, 0xCu);
      MEMORY[0x23B835AF4](v12, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
    if (qword_256909A40 != -1)
      swift_once();
    v17 = xmmword_25690A640;
    v18 = qword_25690A650;
    v19 = unk_25690A658;
    v20 = qword_25690A660;
    v13 = (id)xmmword_25690A640;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2384353E4((uint64_t)v6);
    v14 = v16;
    sub_238491F08();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_2384420D4(v14, v21);
  }
  return swift_release();
}

uint64_t sub_23844A880(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *);
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  os_log_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[3];
  unint64_t v59;

  v2 = sub_238435C24(&qword_25690A078);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v53 = type metadata accessor for ScheduledQueryHistory.Event();
  v55 = *(_QWORD *)(v53 - 8);
  v5 = MEMORY[0x24BDAC7A8](v53);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v54 = (uint64_t)&v45 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v45 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v45 - v13;
  v15 = sub_238492574();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256909A20 != -1)
    swift_once();
  v19 = sub_238435CA4(v15, (uint64_t)qword_256909FC0);
  v20 = *(void (**)(char *))(v16 + 16);
  v51 = v19;
  v20(v18);
  sub_23844AEAC(a1, (uint64_t)v14);
  sub_23844AEAC(a1, (uint64_t)v12);
  v21 = sub_23849255C();
  v52 = sub_238492880();
  if (!os_log_type_enabled(v21, (os_log_type_t)v52))
  {
    sub_23843F2AC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQueryHistory.Event);
    sub_23843F2AC((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQueryHistory.Event);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v28 = v55;
    goto LABEL_14;
  }
  v47 = v21;
  v48 = v16;
  v49 = a1;
  v50 = v7;
  v22 = swift_slowAlloc();
  v46 = swift_slowAlloc();
  v58[0] = v46;
  *(_DWORD *)v22 = 136315394;
  v23 = v53;
  LOBYTE(v57) = v14[*(int *)(v53 + 20)];
  v24 = sub_23849264C();
  v57 = sub_23843604C(v24, v25, v58);
  sub_238492934();
  swift_bridgeObjectRelease();
  sub_23843F2AC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQueryHistory.Event);
  *(_WORD *)(v22 + 12) = 2080;
  sub_23843C2A0((uint64_t)&v12[*(int *)(v23 + 24)], (uint64_t)v4);
  v26 = type metadata accessor for ScheduledQuery();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v4, 1, v26) == 1)
  {
    sub_23844AF34((uint64_t)v4);
    v27 = v54;
    sub_23844AEAC((uint64_t)v12, v54);
LABEL_9:
    v32 = (uint64_t *)(v27 + *(int *)(v23 + 28));
    v31 = v27;
    if (v32[1])
    {
      v30 = *v32;
      v29 = v32[1];
    }
    else
    {
      v29 = 0xE300000000000000;
      v30 = 7104878;
    }
    v28 = v55;
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  v30 = *v4;
  v29 = v4[1];
  swift_bridgeObjectRetain();
  sub_23843F2AC((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  v27 = v54;
  sub_23844AEAC((uint64_t)v12, v54);
  if (!v29)
    goto LABEL_9;
  v28 = v55;
  v31 = v27;
LABEL_13:
  sub_23843F2AC(v31, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQueryHistory.Event);
  v57 = sub_23843604C(v30, v29, v58);
  sub_238492934();
  swift_bridgeObjectRelease();
  sub_23843F2AC((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQueryHistory.Event);
  v33 = v47;
  _os_log_impl(&dword_238433000, v47, (os_log_type_t)v52, "[HistoryStore] append %s item %s", (uint8_t *)v22, 0x16u);
  v34 = v46;
  swift_arrayDestroy();
  MEMORY[0x23B835AF4](v34, -1, -1);
  MEMORY[0x23B835AF4](v22, -1, -1);

  (*(void (**)(char *, uint64_t))(v48 + 8))(v18, v15);
  a1 = v49;
  v7 = v50;
LABEL_14:
  v35 = v56;
  result = sub_238449FB8();
  if (!v35)
  {
    v37 = MEMORY[0x24BEE4AF8];
    if (result)
      v37 = result;
    v59 = v37;
    if (*(_QWORD *)(v37 + 16) >= 0xC9uLL)
    {
      sub_23844A3F0(0, 10);
      v38 = sub_23849255C();
      v39 = sub_238492880();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v40 = 134217984;
        swift_beginAccess();
        v58[0] = *(_QWORD *)(v59 + 16);
        sub_238492934();
        _os_log_impl(&dword_238433000, v38, v39, "[HistoryStore] trim items to %ld", v40, 0xCu);
        MEMORY[0x23B835AF4](v40, -1, -1);
      }

    }
    sub_23844AEAC(a1, (uint64_t)v7);
    swift_beginAccess();
    v41 = v59;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v41 = sub_238474FA4(0, *(_QWORD *)(v41 + 16) + 1, 1, v41);
    v43 = *(_QWORD *)(v41 + 16);
    v42 = *(_QWORD *)(v41 + 24);
    if (v43 >= v42 >> 1)
      v41 = sub_238474FA4(v42 > 1, v43 + 1, 1, v41);
    *(_QWORD *)(v41 + 16) = v43 + 1;
    sub_23844AEF0((uint64_t)v7, v41+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v43);
    swift_endAccess();
    v44 = swift_bridgeObjectRetain();
    sub_23844A598(v44);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_23844AEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScheduledQueryHistory.Event();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23844AEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScheduledQueryHistory.Event();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23844AF34(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_238435C24(&qword_25690A078);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23844AF74(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = sub_238439040(&qword_25690A700);
    v10 = sub_23844AFF0(a2, a3);
    result = MEMORY[0x23B835A40](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23844AFF0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ScheduledQueryHistory.Event();
    result = MEMORY[0x23B835A40](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23844B030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = sub_238449FB8();
  if (!v0)
  {
    if (qword_256909A20 != -1)
      swift_once();
    v2 = sub_238492574();
    sub_238435CA4(v2, (uint64_t)qword_256909FC0);
    swift_bridgeObjectRetain();
    v3 = sub_23849255C();
    v4 = sub_238492880();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v5 = 134217984;
      sub_238492934();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_238433000, v3, v4, "[HistoryStore] getItems count = %ld", v5, 0xCu);
      MEMORY[0x23B835AF4](v5, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  return v1;
}

uint64_t static NSUserDefaults.runner.getter()
{
  uint64_t v0;
  _OWORD v2[2];
  uint64_t v3;

  if (qword_256909A48 != -1)
    swift_once();
  swift_beginAccess();
  v2[0] = xmmword_25690A728;
  v2[1] = *(_OWORD *)&qword_25690A738;
  v3 = qword_25690A748;
  sub_23843667C((uint64_t)v2);
  v0 = sub_23844B4A8();
  sub_2384366BC((uint64_t)v2);
  return v0;
}

uint64_t static NSUserDefaults.model.getter()
{
  uint64_t v0;
  _OWORD v2[2];
  uint64_t v3;

  if (qword_256909A80 != -1)
    swift_once();
  swift_beginAccess();
  v2[0] = xmmword_25690A828;
  v2[1] = *(_OWORD *)&qword_25690A838;
  v3 = qword_25690A848;
  sub_23843667C((uint64_t)v2);
  v0 = sub_23844B4A8();
  sub_2384366BC((uint64_t)v2);
  return v0;
}

double static NSUserDefaults.temperature.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  double v4;
  double v5;

  if (qword_256909A70 != -1)
    swift_once();
  swift_beginAccess();
  v0 = qword_25690A7E8;
  v1 = qword_25690A7F0;
  v2 = (void *)qword_25690A7F8;
  swift_bridgeObjectRetain();
  v3 = v2;
  sub_23844B584(v0, v1, v3);
  v5 = v4;

  swift_bridgeObjectRelease();
  return v5;
}

uint64_t static NSUserDefaults.maxTokens.getter()
{
  __int128 v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;

  if (qword_256909A68 != -1)
    swift_once();
  swift_beginAccess();
  v0 = xmmword_25690A7C0;
  v2 = qword_25690A7D0;
  v1 = (void *)qword_25690A7D8;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_23844B644(v0, *((uint64_t *)&v0 + 1), v2, v3);

  swift_bridgeObjectRelease();
  return v4;
}

uint64_t static NSUserDefaults.group.getter()
{
  uint64_t v0;
  _OWORD v2[2];
  uint64_t v3;

  if (qword_256909A78 != -1)
    swift_once();
  swift_beginAccess();
  v2[0] = xmmword_25690A800;
  v2[1] = *(_OWORD *)&qword_25690A810;
  v3 = qword_25690A820;
  sub_23843667C((uint64_t)v2);
  v0 = sub_23844B4A8();
  sub_2384366BC((uint64_t)v2);
  return v0;
}

uint64_t sub_23844B4A8()
{
  uint64_t *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  __int128 v6;
  _OWORD v7[2];

  v1 = (void *)v0[4];
  v2 = (void *)sub_238492610();
  v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_238492988();
    swift_unknownObjectRelease();
    sub_2384456FC(&v6, v7);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_238435C24((uint64_t *)&unk_25690B7F0);
  if (swift_dynamicCast() && *((_QWORD *)&v6 + 1))
    return v6;
  v4 = *v0;
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_23844B584(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;
  __int128 v7;
  _OWORD v8[2];

  v4 = (void *)sub_238492610();
  v5 = objc_msgSend(a3, sel_objectForKey_, v4);

  if (v5)
  {
    sub_238492988();
    swift_unknownObjectRelease();
    sub_2384456FC(&v7, v8);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_238435C24((uint64_t *)&unk_25690B7F0);
  return swift_dynamicCast();
}

uint64_t sub_23844B644(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  id v7;
  __int128 v9;
  _OWORD v10[2];

  v6 = (void *)sub_238492610();
  v7 = objc_msgSend(a4, sel_objectForKey_, v6);

  if (v7)
  {
    sub_238492988();
    swift_unknownObjectRelease();
    sub_2384456FC(&v9, v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_238435C24((uint64_t *)&unk_25690B7F0);
  if (swift_dynamicCast())
    return v9;
  else
    return a1;
}

uint64_t sub_23844B70C(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  id v7;
  __int128 v9;
  _OWORD v10[2];

  v6 = (void *)sub_238492610();
  v7 = objc_msgSend(a4, sel_objectForKey_, v6);

  if (v7)
  {
    sub_238492988();
    swift_unknownObjectRelease();
    sub_2384456FC(&v9, v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_238435C24((uint64_t *)&unk_25690B7F0);
  if (swift_dynamicCast() && v9 != 2)
    a1 = v9 & 1;
  return a1 & 1;
}

uint64_t sub_23844B7E4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  void *v4;
  id v5;
  uint64_t result;
  uint64_t v7;
  _OWORD v8[2];
  __int128 v9;
  _OWORD v10[2];

  v3 = *(void **)(v1 + 32);
  v4 = (void *)sub_238492610();
  v5 = objc_msgSend(v3, sel_objectForKey_, v4);

  if (v5)
  {
    sub_238492988();
    swift_unknownObjectRelease();
    sub_2384456FC(v8, v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_238435C24((uint64_t *)&unk_25690B7F0);
  sub_238435C24(&qword_25690A868);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v7 = *((_QWORD *)&v9 + 1);
    if (*((_QWORD *)&v9 + 1) >> 60 != 11)
    {
      *a1 = v9;
      a1[1] = v7;
      return result;
    }
  }
  else
  {
    v9 = xmmword_238494F80;
  }
  sub_23844DB2C(v1, (uint64_t)v8);
  sub_23844DB2C((uint64_t)v8, (uint64_t)a1);
  return sub_23844DB74((uint64_t)v8);
}

void static NSUserDefaults.runner.setter()
{
  void *v0;
  uint64_t v1;
  void *v2;

  if (qword_256909A48 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (void *)qword_25690A748;
  swift_bridgeObjectRetain();
  v1 = sub_238492C94();
  v2 = (void *)sub_238492610();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

}

void (*static NSUserDefaults.runner.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _OWORD *v2;
  __int128 v3;
  uint64_t v4;

  v2 = malloc(0x60uLL);
  *a1 = v2;
  if (qword_256909A48 != -1)
    swift_once();
  swift_beginAccess();
  v3 = *(_OWORD *)&qword_25690A738;
  *v2 = xmmword_25690A728;
  v2[1] = v3;
  *((_QWORD *)v2 + 4) = qword_25690A748;
  *((_QWORD *)v2 + 8) = sub_23844B4A8();
  *((_QWORD *)v2 + 9) = v4;
  return sub_23844BA60;
}

void sub_23844BA60(uint64_t a1, char a2)
{
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = *(_QWORD **)a1;
  *(_QWORD *)(*(_QWORD *)a1 + 80) = *(_QWORD *)(*(_QWORD *)a1 + 64);
  v4 = (void *)qword_25690A748;
  v3[11] = v3[9];
  swift_bridgeObjectRetain();
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v5 = sub_238492C94();
    v6 = (void *)sub_238492610();
    objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    v7 = sub_238492C94();
    v8 = (void *)sub_238492610();
    objc_msgSend(v4, sel_setObject_forKey_, v7, v8);
    swift_endAccess();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  free(v3);
}

void sub_23844BB90()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_238492610();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    *(_QWORD *)&xmmword_25690A728 = 0x647261646E617473;
    *((_QWORD *)&xmmword_25690A728 + 1) = 0xE800000000000000;
    strcpy((char *)&qword_25690A738, "config.runner");
    unk_25690A746 = -4864;
    qword_25690A748 = (uint64_t)v2;
  }
  else
  {
    sub_238492B20();
    __break(1u);
  }
}

id static NSUserDefaults.$runner.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v7;

  if (qword_256909A48 != -1)
    swift_once();
  swift_beginAccess();
  v2 = *((_QWORD *)&xmmword_25690A728 + 1);
  v3 = qword_25690A738;
  v4 = unk_25690A740;
  v7 = (id)qword_25690A748;
  v5 = qword_25690A748;
  *a1 = xmmword_25690A728;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v7;
}

uint64_t static NSUserDefaults.createAppIntentConfirmation.getter()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  char v5;

  if (qword_256909A50 != -1)
    swift_once();
  swift_beginAccess();
  v0 = byte_25690A750;
  v1 = qword_25690A758;
  v2 = unk_25690A760;
  v3 = (void *)qword_25690A768;
  swift_bridgeObjectRetain();
  v4 = v3;
  v5 = sub_23844B70C(v0, v1, v2, v4);

  swift_bridgeObjectRelease();
  return v5 & 1;
}

void static NSUserDefaults.createAppIntentConfirmation.setter()
{
  void *v0;
  uint64_t v1;
  void *v2;

  if (qword_256909A50 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (void *)qword_25690A768;
  v1 = sub_238492C94();
  v2 = (void *)sub_238492610();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_unknownObjectRelease();

}

uint64_t (*static NSUserDefaults.createAppIntentConfirmation.modify(uint64_t a1))(uint64_t a1, char a2)
{
  if (qword_256909A50 != -1)
    swift_once();
  swift_beginAccess();
  *(_BYTE *)(a1 + 24) = sub_23844B70C(byte_25690A750, qword_25690A758, unk_25690A760, (void *)qword_25690A768) & 1;
  return sub_23844BF38;
}

uint64_t sub_23844BF38(uint64_t a1, char a2)
{
  void *v3;
  uint64_t v4;
  void *v5;

  v3 = (void *)qword_25690A768;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a1 + 24);
  v4 = sub_238492C94();
  v5 = (void *)sub_238492610();
  objc_msgSend(v3, sel_setObject_forKey_, v4, v5);
  if ((a2 & 1) != 0)
  {

    swift_unknownObjectRelease();
    return swift_endAccess();
  }
  else
  {
    swift_endAccess();

    return swift_unknownObjectRelease();
  }
}

void sub_23844BFE8()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_238492610();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    byte_25690A750 = 0;
    qword_25690A758 = 0xD00000000000001BLL;
    unk_25690A760 = 0x8000000238498260;
    qword_25690A768 = (uint64_t)v2;
  }
  else
  {
    sub_238492B20();
    __break(1u);
  }
}

id static NSUserDefaults.$createAppIntentConfirmation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v6;

  if (qword_256909A50 != -1)
    swift_once();
  swift_beginAccess();
  v3 = qword_25690A758;
  v2 = unk_25690A760;
  v6 = (id)qword_25690A768;
  v4 = qword_25690A768;
  *(_BYTE *)a1 = byte_25690A750;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain();
  return v6;
}

void sub_23844C160()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_238492610();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    xmmword_25690A770 = xmmword_238494F90;
    qword_25690A780 = 0xD000000000000012;
    unk_25690A788 = 0x8000000238498220;
    qword_25690A790 = (uint64_t)v2;
  }
  else
  {
    sub_238492B20();
    __break(1u);
  }
}

uint64_t static NSUserDefaults.openAIKey.getter()
{
  uint64_t v0;
  _OWORD v2[2];
  uint64_t v3;

  if (qword_256909A60 != -1)
    swift_once();
  swift_beginAccess();
  v2[0] = xmmword_25690A798;
  v2[1] = *(_OWORD *)&qword_25690A7A8;
  v3 = qword_25690A7B8;
  sub_23843667C((uint64_t)v2);
  v0 = sub_23844B4A8();
  sub_2384366BC((uint64_t)v2);
  return v0;
}

void static NSUserDefaults.openAIKey.setter()
{
  void *v0;
  uint64_t v1;
  void *v2;

  if (qword_256909A60 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (void *)qword_25690A7B8;
  swift_bridgeObjectRetain();
  v1 = sub_238492C94();
  v2 = (void *)sub_238492610();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

}

void (*static NSUserDefaults.openAIKey.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _OWORD *v2;
  __int128 v3;
  uint64_t v4;

  v2 = malloc(0x60uLL);
  *a1 = v2;
  if (qword_256909A60 != -1)
    swift_once();
  swift_beginAccess();
  v3 = *(_OWORD *)&qword_25690A7A8;
  *v2 = xmmword_25690A798;
  v2[1] = v3;
  *((_QWORD *)v2 + 4) = qword_25690A7B8;
  *((_QWORD *)v2 + 8) = sub_23844B4A8();
  *((_QWORD *)v2 + 9) = v4;
  return sub_23844C45C;
}

void sub_23844C45C(uint64_t a1, char a2)
{
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = *(_QWORD **)a1;
  *(_QWORD *)(*(_QWORD *)a1 + 80) = *(_QWORD *)(*(_QWORD *)a1 + 64);
  v4 = (void *)qword_25690A7B8;
  v3[11] = v3[9];
  swift_bridgeObjectRetain();
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v5 = sub_238492C94();
    v6 = (void *)sub_238492610();
    objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    v7 = sub_238492C94();
    v8 = (void *)sub_238492610();
    objc_msgSend(v4, sel_setObject_forKey_, v7, v8);
    swift_endAccess();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  free(v3);
}

void sub_23844C58C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_238492610();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    *(_QWORD *)&xmmword_25690A798 = 0;
    *((_QWORD *)&xmmword_25690A798 + 1) = 0xE000000000000000;
    qword_25690A7A8 = 0xD000000000000010;
    unk_25690A7B0 = 0x8000000238498240;
    qword_25690A7B8 = (uint64_t)v2;
  }
  else
  {
    sub_238492B20();
    __break(1u);
  }
}

id static NSUserDefaults.$openAIKey.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v7;

  if (qword_256909A60 != -1)
    swift_once();
  swift_beginAccess();
  v2 = *((_QWORD *)&xmmword_25690A798 + 1);
  v3 = qword_25690A7A8;
  v4 = unk_25690A7B0;
  v7 = (id)qword_25690A7B8;
  v5 = qword_25690A7B8;
  *a1 = xmmword_25690A798;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v7;
}

void static NSUserDefaults.maxTokens.setter(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  if (qword_256909A68 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_25690A7D8;
  v5 = a1;
  v3 = sub_238492C94();
  v4 = (void *)sub_238492610();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4, v5);
  swift_endAccess();
  swift_unknownObjectRelease();

}

void (*static NSUserDefaults.maxTokens.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  if (qword_256909A68 != -1)
    swift_once();
  swift_beginAccess();
  v2[3] = sub_23844B644(xmmword_25690A7C0, *((uint64_t *)&xmmword_25690A7C0 + 1), qword_25690A7D0, (void *)qword_25690A7D8);
  return sub_23844C868;
}

void sub_23844C868(uint64_t a1, char a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v3 = *(void **)a1;
  v4 = (void *)qword_25690A7D8;
  *(_QWORD *)(*(_QWORD *)a1 + 32) = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = sub_238492C94();
  v6 = (void *)sub_238492610();
  objc_msgSend(v4, sel_setObject_forKey_, v5, v6);
  if ((a2 & 1) != 0)
  {

    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();

    swift_unknownObjectRelease();
  }
  free(v3);
}

void sub_23844C91C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_238492610();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    xmmword_25690A7C0 = xmmword_238494FA0;
    qword_25690A7D0 = 0x8000000238498280;
    qword_25690A7D8 = (uint64_t)v2;
  }
  else
  {
    sub_238492B20();
    __break(1u);
  }
}

id static NSUserDefaults.$maxTokens.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v5;

  if (qword_256909A68 != -1)
    swift_once();
  swift_beginAccess();
  v2 = qword_25690A7D0;
  v5 = (id)qword_25690A7D8;
  v3 = qword_25690A7D8;
  *(_OWORD *)a1 = xmmword_25690A7C0;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return v5;
}

void static NSUserDefaults.temperature.setter(double a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  if (qword_256909A70 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_25690A7F8;
  v3 = sub_238492C94();
  v4 = (void *)sub_238492610();
  objc_msgSend(v2, sel_setObject_forKey_, v3, v4, *(_QWORD *)&a1);
  swift_endAccess();
  swift_unknownObjectRelease();

}

void (*static NSUserDefaults.temperature.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  if (qword_256909A70 != -1)
    swift_once();
  swift_beginAccess();
  sub_23844B584(qword_25690A7E8, qword_25690A7F0, (void *)qword_25690A7F8);
  v2[3] = v3;
  return sub_23844CBEC;
}

void sub_23844CBEC(uint64_t a1, char a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v3 = *(void **)a1;
  v4 = (void *)qword_25690A7F8;
  *(_QWORD *)(*(_QWORD *)a1 + 32) = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = sub_238492C94();
  v6 = (void *)sub_238492610();
  objc_msgSend(v4, sel_setObject_forKey_, v5, v6);
  if ((a2 & 1) != 0)
  {

    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();

    swift_unknownObjectRelease();
  }
  free(v3);
}

void sub_23844CCA0()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_238492610();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    qword_25690A7E0 = 0;
    qword_25690A7E8 = 0xD000000000000012;
    qword_25690A7F0 = 0x80000002384982A0;
    qword_25690A7F8 = (uint64_t)v2;
  }
  else
  {
    sub_238492B20();
    __break(1u);
  }
}

id static NSUserDefaults.$temperature.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v6;

  if (qword_256909A70 != -1)
    swift_once();
  swift_beginAccess();
  v3 = qword_25690A7E8;
  v2 = qword_25690A7F0;
  v6 = (id)qword_25690A7F8;
  v4 = qword_25690A7F8;
  *a1 = qword_25690A7E0;
  a1[1] = v3;
  a1[2] = v2;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return v6;
}

void static NSUserDefaults.group.setter()
{
  void *v0;
  uint64_t v1;
  void *v2;

  if (qword_256909A78 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (void *)qword_25690A820;
  swift_bridgeObjectRetain();
  v1 = sub_238492C94();
  v2 = (void *)sub_238492610();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

}

void (*static NSUserDefaults.group.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _OWORD *v2;
  __int128 v3;
  uint64_t v4;

  v2 = malloc(0x60uLL);
  *a1 = v2;
  if (qword_256909A78 != -1)
    swift_once();
  swift_beginAccess();
  v3 = *(_OWORD *)&qword_25690A810;
  *v2 = xmmword_25690A800;
  v2[1] = v3;
  *((_QWORD *)v2 + 4) = qword_25690A820;
  *((_QWORD *)v2 + 8) = sub_23844B4A8();
  *((_QWORD *)v2 + 9) = v4;
  return sub_23844CF80;
}

void sub_23844CF80(uint64_t a1, char a2)
{
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = *(_QWORD **)a1;
  *(_QWORD *)(*(_QWORD *)a1 + 80) = *(_QWORD *)(*(_QWORD *)a1 + 64);
  v4 = (void *)qword_25690A820;
  v3[11] = v3[9];
  swift_bridgeObjectRetain();
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v5 = sub_238492C94();
    v6 = (void *)sub_238492610();
    objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    v7 = sub_238492C94();
    v8 = (void *)sub_238492610();
    objc_msgSend(v4, sel_setObject_forKey_, v7, v8);
    swift_endAccess();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  free(v3);
}

void sub_23844D0B0()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_238492610();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    *(_QWORD *)&xmmword_25690A800 = 0x746C7561666564;
    *((_QWORD *)&xmmword_25690A800 + 1) = 0xE700000000000000;
    strcpy((char *)&qword_25690A810, "config.group");
    unk_25690A81D = 0;
    unk_25690A81E = -5120;
    qword_25690A820 = (uint64_t)v2;
  }
  else
  {
    sub_238492B20();
    __break(1u);
  }
}

id static NSUserDefaults.$group.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v7;

  if (qword_256909A78 != -1)
    swift_once();
  swift_beginAccess();
  v2 = *((_QWORD *)&xmmword_25690A800 + 1);
  v3 = qword_25690A810;
  v4 = unk_25690A818;
  v7 = (id)qword_25690A820;
  v5 = qword_25690A820;
  *a1 = xmmword_25690A800;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v7;
}

void static NSUserDefaults.model.setter()
{
  void *v0;
  uint64_t v1;
  void *v2;

  if (qword_256909A80 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (void *)qword_25690A848;
  swift_bridgeObjectRetain();
  v1 = sub_238492C94();
  v2 = (void *)sub_238492610();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

}

void (*static NSUserDefaults.model.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _OWORD *v2;
  __int128 v3;
  uint64_t v4;

  v2 = malloc(0x60uLL);
  *a1 = v2;
  if (qword_256909A80 != -1)
    swift_once();
  swift_beginAccess();
  v3 = *(_OWORD *)&qword_25690A838;
  *v2 = xmmword_25690A828;
  v2[1] = v3;
  *((_QWORD *)v2 + 4) = qword_25690A848;
  *((_QWORD *)v2 + 8) = sub_23844B4A8();
  *((_QWORD *)v2 + 9) = v4;
  return sub_23844D3C4;
}

void sub_23844D3C4(uint64_t a1, char a2)
{
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = *(_QWORD **)a1;
  *(_QWORD *)(*(_QWORD *)a1 + 80) = *(_QWORD *)(*(_QWORD *)a1 + 64);
  v4 = (void *)qword_25690A848;
  v3[11] = v3[9];
  swift_bridgeObjectRetain();
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v5 = sub_238492C94();
    v6 = (void *)sub_238492610();
    objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    v7 = sub_238492C94();
    v8 = (void *)sub_238492610();
    objc_msgSend(v4, sel_setObject_forKey_, v7, v8);
    swift_endAccess();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  free(v3);
}

void sub_23844D4F4()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v1 = (void *)sub_238492610();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    *(_QWORD *)&xmmword_25690A828 = 0x342D747067;
    *((_QWORD *)&xmmword_25690A828 + 1) = 0xE500000000000000;
    strcpy((char *)&qword_25690A838, "config.model");
    unk_25690A845 = 0;
    unk_25690A846 = -5120;
    qword_25690A848 = (uint64_t)v2;
  }
  else
  {
    sub_238492B20();
    __break(1u);
  }
}

id static NSUserDefaults.$model.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v7;

  if (qword_256909A80 != -1)
    swift_once();
  swift_beginAccess();
  v2 = *((_QWORD *)&xmmword_25690A828 + 1);
  v3 = qword_25690A838;
  v4 = unk_25690A840;
  v7 = (id)qword_25690A848;
  v5 = qword_25690A848;
  *a1 = xmmword_25690A828;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v7;
}

uint64_t sub_23844D698()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _OWORD v6[2];
  uint64_t v7;

  if (qword_256909A58 != -1)
    swift_once();
  swift_beginAccess();
  v6[0] = xmmword_25690A770;
  v6[1] = *(_OWORD *)&qword_25690A780;
  v7 = qword_25690A790;
  sub_23844D9D8((uint64_t *)v6);
  sub_23844B7E4(&v4);
  sub_23844DA30((uint64_t *)v6);
  v1 = v5;
  if (v5 >> 60 == 15)
    return sub_23847E504(MEMORY[0x24BEE4AF8]);
  v3 = v4;
  sub_238491D34();
  swift_allocObject();
  sub_238491D28();
  sub_238435C24(&qword_25690A850);
  sub_23844DA74(&qword_25690A870, (uint64_t (*)(void))sub_23844DAE8, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
  sub_238491D1C();
  swift_release();
  result = sub_23844218C(v3, v1);
  if (!v0)
  {
    result = v4;
    if (!v4)
      return sub_23847E504(MEMORY[0x24BEE4AF8]);
  }
  return result;
}

uint64_t sub_23844D800()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  void *v7;

  sub_238491D88();
  swift_allocObject();
  sub_238491D7C();
  sub_238435C24(&qword_25690A850);
  sub_23844DA74(&qword_25690A858, (uint64_t (*)(void))sub_23844D994, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
  v1 = sub_238491D70();
  v3 = v2;
  result = swift_release();
  if (!v0)
  {
    if (qword_256909A58 != -1)
      swift_once();
    swift_beginAccess();
    v5 = (void *)qword_25690A790;
    sub_238449DEC(v1, v3);
    sub_238449DEC(v1, v3);
    sub_238435C24(&qword_25690A868);
    v6 = sub_238492C94();
    v7 = (void *)sub_238492610();
    objc_msgSend(v5, sel_setObject_forKey_, v6, v7);
    swift_endAccess();
    swift_unknownObjectRelease();

    sub_2384420D4(v1, v3);
    return sub_2384420D4(v1, v3);
  }
  return result;
}

unint64_t sub_23844D994()
{
  unint64_t result;

  result = qword_25690A860;
  if (!qword_25690A860)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for ScheduledQueryLocation, &type metadata for ScheduledQueryLocation);
    atomic_store(result, (unint64_t *)&qword_25690A860);
  }
  return result;
}

uint64_t *sub_23844D9D8(uint64_t *a1)
{
  void *v2;
  id v3;

  v2 = (void *)a1[4];
  sub_23844DA1C(*a1, a1[1]);
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

uint64_t sub_23844DA1C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_238449DEC(a1, a2);
  return a1;
}

uint64_t *sub_23844DA30(uint64_t *a1)
{
  void *v2;

  v2 = (void *)a1[4];
  sub_23844218C(*a1, a1[1]);

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23844DA74(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = sub_238439040(&qword_25690A850);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x23B835A40](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23844DAE8()
{
  unint64_t result;

  result = qword_25690A878;
  if (!qword_25690A878)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for ScheduledQueryLocation, &type metadata for ScheduledQueryLocation);
    atomic_store(result, (unint64_t *)&qword_25690A878);
  }
  return result;
}

uint64_t sub_23844DB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_238435C24(&qword_25690A868);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23844DB74(uint64_t a1)
{
  sub_23844DA1C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

void sub_23844DBA0(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

unint64_t sub_23844DBF8()
{
  sub_238492A78();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  return 0xD00000000000001CLL;
}

void sub_23844DD98()
{
  uint64_t v0;

  sub_23844DBA0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

unint64_t sub_23844DDA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;

  sub_23844DBA0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
  if (!v2)
    return sub_23847E2BC(MEMORY[0x24BEE4AF8]);
  v3 = v1;
  v4 = v2;
  sub_238435C24(&qword_256909BB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_238493540;
  *(_QWORD *)(inited + 32) = sub_23849261C();
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  return sub_23847E2BC(inited);
}

uint64_t sub_23844DE50()
{
  sub_23845517C();
  return sub_238492CC4();
}

uint64_t sub_23844DE78()
{
  sub_23845517C();
  return sub_238492CB8();
}

id ScheduledQueryETARunner.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ScheduledQueryETARunner.init()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  objc_super v4;

  v1 = OBJC_IVAR____TtC23ConditionalEngineClient23ScheduledQueryETARunner_dispatchGroup;
  v2 = v0;
  *(_QWORD *)&v0[v1] = dispatch_group_create();
  *(_QWORD *)&v2[OBJC_IVAR____TtC23ConditionalEngineClient23ScheduledQueryETARunner_currentLocation] = 0;

  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for ScheduledQueryETARunner();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for ScheduledQueryETARunner()
{
  return objc_opt_self();
}

uint64_t sub_23844DFB4()
{
  uint64_t i;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v8 = MEMORY[0x24BEE4AF8];
  sub_23848B7AC(0, 5, 0);
  for (i = 0; i != 80; i += 16)
  {
    swift_bridgeObjectRetain();
    sub_2384926A0();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    v2 = *(_QWORD *)(v8 + 16);
    v1 = *(_QWORD *)(v8 + 24);
    if (v2 >= v1 >> 1)
      sub_23848B7AC(v1 > 1, v2 + 1, 1);
    *(_QWORD *)(v8 + 16) = v2 + 1;
    v3 = v8 + 16 * v2;
    *(_QWORD *)(v3 + 32) = 96;
    *(_QWORD *)(v3 + 40) = 0xE100000000000000;
  }
  swift_arrayDestroy();
  sub_238435C24(&qword_256909DD8);
  sub_238455270((unint64_t *)&qword_25690AB00, &qword_256909DD8, MEMORY[0x24BEE12B0]);
  v4 = sub_2384925F8();
  v6 = v5;
  result = swift_release();
  qword_25690A880 = v4;
  qword_25690A888 = v6;
  return result;
}

uint64_t static ScheduledQueryETARunner.examplePhrases.getter()
{
  uint64_t v0;

  if (qword_256909A88 != -1)
    swift_once();
  swift_beginAccess();
  v0 = qword_25690A880;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static ScheduledQueryETARunner.examplePhrases.setter(uint64_t a1, uint64_t a2)
{
  if (qword_256909A88 != -1)
    swift_once();
  swift_beginAccess();
  qword_25690A880 = a1;
  qword_25690A888 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ScheduledQueryETARunner.examplePhrases.modify())()
{
  if (qword_256909A88 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

double static ScheduledQueryETARunner.extractActionType(query:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  int v48;
  _QWORD *v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  _BOOL4 v73;
  void (*v74)(char *, uint64_t);
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double result;
  uint64_t v83;
  uint64_t v84;
  int v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  uint64_t *v89;
  char *v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  char *v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  uint8_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  char *v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint8_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  NSObject *v121;
  os_log_type_t v122;
  _BOOL4 v123;
  uint64_t v124;
  uint8_t *v125;
  uint8_t *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(char *, uint64_t);
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  _QWORD *v154;
  _QWORD *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t *v160;
  char *v161;
  void (*v162)(char *, uint64_t);
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;

  v165 = a2;
  v166 = a1;
  v160 = a3;
  v3 = sub_238435C24(&qword_25690A8A0);
  MEMORY[0x24BDAC7A8](v3);
  v140 = (char *)&v133 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_238435C24(&qword_25690A8A8);
  v141 = *(_QWORD *)(v142 - 8);
  MEMORY[0x24BDAC7A8](v142);
  v137 = (char *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_238435C24(&qword_25690A8B0);
  v139 = *(_QWORD *)(v158 - 8);
  v6 = MEMORY[0x24BDAC7A8](v158);
  v138 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v157 = (char *)&v133 - v8;
  v9 = sub_238435C24(&qword_25690A8B8);
  MEMORY[0x24BDAC7A8](v9);
  v145 = (char *)&v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = (_QWORD *)sub_238435C24(&qword_25690A8C0);
  v146 = *(v155 - 1);
  MEMORY[0x24BDAC7A8](v155);
  v134 = (char *)&v133 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_238435C24(&qword_25690A8C8);
  v144 = *(_QWORD *)(v150 - 8);
  v12 = MEMORY[0x24BDAC7A8](v150);
  v143 = (char *)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v156 = (char *)&v133 - v14;
  v15 = sub_238435C24(&qword_25690A8D0);
  MEMORY[0x24BDAC7A8](v15);
  v149 = (char *)&v133 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = (_QWORD *)sub_238435C24(&qword_25690A8D8);
  v152 = *(v154 - 1);
  MEMORY[0x24BDAC7A8](v154);
  v135 = (char *)&v133 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_238435C24(&qword_25690A8E0);
  v148 = *(_QWORD *)(v151 - 8);
  v18 = MEMORY[0x24BDAC7A8](v151);
  v147 = (char *)&v133 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v161 = (char *)&v133 - v20;
  v21 = sub_238435C24(&qword_25690A8E8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v153 = (char *)&v133 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v133 - v24;
  v26 = sub_238435C24(&qword_25690A8F0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v136 = (char *)&v133 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v133 - v30;
  v32 = sub_238435C24(&qword_25690A8F8);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = MEMORY[0x24BDAC7A8](v32);
  v164 = (char *)&v133 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)&v133 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v133 - v39;
  sub_238435C24(&qword_25690A900);
  sub_2384922BC();
  sub_2384922D4();
  v162 = *(void (**)(char *, uint64_t))(v33 + 8);
  v162(v38, v32);
  v163 = v32;
  v159 = v40;
  sub_2384922C8();
  v41 = v31;
  v42 = v27;
  v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v44 = v26;
  if (v43(v25, 1, v26) != 1)
  {
    v69 = v41;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v25, v26);
    if (qword_256909A08 != -1)
      swift_once();
    v70 = sub_238492574();
    sub_238435CA4(v70, (uint64_t)qword_256909F78);
    v71 = sub_23849255C();
    v72 = sub_238492880();
    v73 = os_log_type_enabled(v71, v72);
    v74 = v162;
    if (v73)
    {
      v75 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v75 = 0;
      _os_log_impl(&dword_238433000, v71, v72, "Matched send to", v75, 2u);
      MEMORY[0x23B835AF4](v75, -1, -1);
    }

    swift_getKeyPath();
    sub_2384922F8();
    swift_release();
    v76 = MEMORY[0x23B834DE0](v167, v168, v169, v170);
    v78 = v77;
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    sub_2384922F8();
    swift_release();
    v79 = MEMORY[0x23B834DE0](v167, v168, v169, v170);
    v81 = v80;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v69, v44);
    v74(v159, v163);
    goto LABEL_18;
  }
  sub_23843B198((uint64_t)v25, &qword_25690A8E8);
  sub_2384922BC();
  v45 = v163;
  sub_2384922D4();
  v46 = v162;
  v162(v38, v45);
  v47 = (uint64_t)v153;
  sub_2384922C8();
  v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v47, 1, v26);
  v50 = v154;
  v49 = v155;
  if (v48 != 1)
  {
    v90 = v136;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v136, v47, v44);
    if (qword_256909A08 != -1)
      swift_once();
    v91 = sub_238492574();
    sub_238435CA4(v91, (uint64_t)qword_256909F78);
    v92 = sub_23849255C();
    v93 = sub_238492880();
    if (os_log_type_enabled(v92, v93))
    {
      v94 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v94 = 0;
      _os_log_impl(&dword_238433000, v92, v93, "Matched text ETA", v94, 2u);
      MEMORY[0x23B835AF4](v94, -1, -1);
    }

    swift_getKeyPath();
    sub_2384922F8();
    swift_release();
    v76 = MEMORY[0x23B834DE0](v167, v168, v169, v170);
    v78 = v95;
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    sub_2384922F8();
    swift_release();
    v79 = MEMORY[0x23B834DE0](v167, v168, v169, v170);
    v81 = v96;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v90, v44);
    v46(v164, v45);
    v46(v159, v45);
LABEL_18:
    v97 = v160;
    *v160 = v76;
    v97[1] = v78;
    v97[2] = v79;
    v97[3] = v81;
    return result;
  }
  sub_23843B198(v47, &qword_25690A8E8);
  sub_238435C24(&qword_25690A908);
  v51 = v147;
  sub_2384922BC();
  v52 = v151;
  sub_2384922D4();
  v155 = *(_QWORD **)(v148 + 8);
  ((void (*)(char *, uint64_t))v155)(v51, v52);
  v53 = v149;
  sub_2384922C8();
  v54 = v152;
  v55 = (*(uint64_t (**)(char *, uint64_t, _QWORD *))(v152 + 48))(v53, 1, v50);
  v56 = (uint64_t)v53;
  v57 = v150;
  v58 = v156;
  if (v55 == 1)
  {
    v59 = v46;
    sub_23843B198(v56, &qword_25690A8D0);
    sub_238435C24(&qword_25690A910);
    v60 = v143;
    sub_2384922BC();
    sub_2384922D4();
    v154 = *(_QWORD **)(v144 + 8);
    ((void (*)(char *, uint64_t))v154)(v60, v57);
    v61 = (uint64_t)v145;
    sub_2384922C8();
    v62 = v146;
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v146 + 48))(v61, 1, v49) == 1)
    {
      v63 = v52;
      v64 = (void (*)(char *, uint64_t))v155;
      sub_23843B198(v61, &qword_25690A8B8);
      sub_238435C24(&qword_25690A918);
      v65 = v138;
      sub_2384922BC();
      v66 = v158;
      sub_2384922D4();
      v67 = *(void (**)(char *, uint64_t))(v139 + 8);
      v67(v65, v66);
      v68 = (uint64_t)v140;
      sub_2384922C8();
      v83 = v141;
      v84 = v142;
      v85 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v68, 1, v142);
      v86 = v64;
      if (v85 == 1)
      {
        v67(v157, v158);
        ((void (*)(char *, uint64_t))v154)(v58, v57);
        v64(v161, v63);
        v87 = v163;
        v88 = v162;
        v162(v164, v163);
        v88(v159, v87);
        sub_23843B198(v68, &qword_25690A8A0);
        result = 0.0;
        v89 = v160;
        *(_OWORD *)v160 = 0u;
        *((_OWORD *)v89 + 1) = 0u;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v83 + 32))(v137, v68, v84);
        v119 = v63;
        if (qword_256909A08 != -1)
          swift_once();
        v120 = sub_238492574();
        sub_238435CA4(v120, (uint64_t)qword_256909F78);
        v121 = sub_23849255C();
        v122 = sub_238492880();
        v123 = os_log_type_enabled(v121, v122);
        v124 = v163;
        if (v123)
        {
          v125 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v125 = 0;
          _os_log_impl(&dword_238433000, v121, v122, "Matched leave", v125, 2u);
          v126 = v125;
          v84 = v142;
          MEMORY[0x23B835AF4](v126, -1, -1);
        }

        swift_getKeyPath();
        v127 = v137;
        sub_2384922F8();
        swift_release();
        v128 = MEMORY[0x23B834DE0](v167, v168, v169, v170);
        v166 = v129;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v83 + 8))(v127, v84);
        v67(v157, v158);
        ((void (*)(char *, uint64_t))v154)(v156, v57);
        v86(v161, v119);
        v130 = v162;
        v162(v164, v124);
        v130(v159, v124);
        result = 0.0;
        v131 = v160;
        *(_OWORD *)v160 = xmmword_2384951F0;
        v132 = v166;
        v131[2] = v128;
        v131[3] = v132;
      }
    }
    else
    {
      v110 = v134;
      (*(void (**)(char *, uint64_t, _QWORD *))(v62 + 32))(v134, v61, v49);
      if (qword_256909A08 != -1)
        swift_once();
      v111 = sub_238492574();
      sub_238435CA4(v111, (uint64_t)qword_256909F78);
      v112 = sub_23849255C();
      v113 = sub_238492880();
      if (os_log_type_enabled(v112, v113))
      {
        v114 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v114 = 0;
        _os_log_impl(&dword_238433000, v112, v113, "Matched notify", v114, 2u);
        MEMORY[0x23B835AF4](v114, -1, -1);
      }

      swift_getKeyPath();
      sub_2384922F8();
      swift_release();
      v115 = MEMORY[0x23B834DE0](v167, v168, v169, v170);
      v117 = v116;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, _QWORD *))(v146 + 8))(v110, v49);
      ((void (*)(char *, uint64_t))v154)(v156, v57);
      ((void (*)(char *, uint64_t))v155)(v161, v52);
      v59(v164, v45);
      v59(v159, v45);
      v118 = v160;
      *v160 = 0;
      v118[1] = 0;
      v118[2] = v115;
      v118[3] = v117;
    }
  }
  else
  {
    v98 = v135;
    (*(void (**)(char *, uint64_t, _QWORD *))(v54 + 32))(v135, v56, v50);
    if (qword_256909A08 != -1)
      swift_once();
    v99 = sub_238492574();
    sub_238435CA4(v99, (uint64_t)qword_256909F78);
    v100 = sub_23849255C();
    v101 = sub_238492880();
    if (os_log_type_enabled(v100, v101))
    {
      v102 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v102 = 0;
      _os_log_impl(&dword_238433000, v100, v101, "Matched share ETA", v102, 2u);
      MEMORY[0x23B835AF4](v102, -1, -1);
    }

    swift_getKeyPath();
    sub_2384922F8();
    swift_release();
    v103 = MEMORY[0x23B834DE0](v167, v168, v169, v170);
    v105 = v104;
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    sub_2384922F8();
    swift_release();
    v106 = MEMORY[0x23B834DE0](v167, v168, v169, v170);
    v108 = v107;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD *))(v152 + 8))(v98, v50);
    ((void (*)(char *, uint64_t))v155)(v161, v52);
    v46(v164, v45);
    v46(v159, v45);
    v109 = v160;
    *v160 = v103;
    v109[1] = v105;
    v109[2] = v106;
    v109[3] = v108;
  }
  return result;
}

uint64_t sub_23844F3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v3[8] = swift_getObjectType();
  return swift_task_switch();
}

uint64_t sub_23844F40C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18[3];
  uint64_t v19;

  if (qword_256909A08 != -1)
    swift_once();
  v1 = sub_238492574();
  sub_238435CA4(v1, (uint64_t)qword_256909F78);
  swift_bridgeObjectRetain_n();
  v2 = sub_23849255C();
  v3 = sub_23849285C();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 48);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 40);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v18[0] = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 32) = sub_23843604C(v6, v5, v18);
    sub_238492934();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_238433000, v2, v3, "Calculating ETA: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v8, -1, -1);
    MEMORY[0x23B835AF4](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  static ScheduledQueryETARunner.extractActionType(query:)(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v18);
  v9 = v18[0];
  v10 = v18[1];
  *(_QWORD *)(v0 + 72) = v18[0];
  *(_QWORD *)(v0 + 80) = v10;
  v11 = v19;
  *(_QWORD *)(v0 + 88) = v19;
  if (v11)
  {
    v12 = v18[2];
    *(_QWORD *)(v0 + 16) = v9;
    *(_QWORD *)(v0 + 24) = v10;
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v13;
    *v13 = v0;
    v13[1] = sub_23844F684;
    return sub_23844F764((_OWORD *)(v0 + 16), v12, v11);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 40);
    v15 = *(_QWORD *)(v0 + 48);
    sub_238451784();
    swift_allocError();
    *(_QWORD *)v17 = v16;
    *(_QWORD *)(v17 + 8) = v15;
    *(_BYTE *)(v17 + 16) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23844F684(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;

  v6 = *v3;
  *(_QWORD *)(v6 + 104) = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
  else
  {
    v8 = *(_QWORD *)(v6 + 80);
    v9 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRelease();
    sub_2384517C8(v9, v8);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  }
}

uint64_t sub_23844F730()
{
  uint64_t v0;

  sub_2384517C8(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23844F764(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  *(_QWORD *)(v4 + 120) = a3;
  *(_QWORD *)(v4 + 128) = v3;
  *(_QWORD *)(v4 + 112) = a2;
  v6 = sub_2384928A4();
  *(_QWORD *)(v4 + 136) = v6;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 152) = swift_task_alloc();
  *(_QWORD *)(v4 + 160) = sub_238492898();
  *(_QWORD *)(v4 + 168) = swift_task_alloc();
  sub_238492598();
  *(_QWORD *)(v4 + 176) = swift_task_alloc();
  *(_OWORD *)(v4 + 184) = *a1;
  return swift_task_switch();
}

uint64_t sub_23844F84C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  void *v18;

  if (qword_256909A08 != -1)
    swift_once();
  v1 = sub_238492574();
  *(_QWORD *)(v0 + 200) = sub_238435CA4(v1, (uint64_t)qword_256909F78);
  v2 = sub_23849255C();
  v3 = sub_238492880();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_238433000, v2, v3, "Processing ETA Action", v4, 2u);
    MEMORY[0x23B835AF4](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 144);
  v17 = *(_QWORD *)(v0 + 136);
  v18 = *(void **)(v0 + 128);

  sub_238455238(0, (unint64_t *)&unk_25690B950);
  sub_238492580();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BEE4AF8];
  sub_23843E8CC((unint64_t *)&qword_25690A940, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  sub_238435C24((uint64_t *)&unk_25690B960);
  sub_238455270((unint64_t *)&qword_25690A950, (uint64_t *)&unk_25690B960, MEMORY[0x24BEE12C8]);
  sub_238492994();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x24BEE5750], v17);
  v7 = (void *)sub_2384928B0();
  *(_QWORD *)(v0 + 208) = v7;
  v8 = objc_allocWithZone(MEMORY[0x24BDBFA88]);
  v9 = v18;
  v10 = (void *)sub_238492610();
  v11 = objc_msgSend(v8, sel_initWithEffectiveBundleIdentifier_delegate_onQueue_, v10, v9, v7);
  *(_QWORD *)(v0 + 216) = v11;

  if (v11)
  {
    v12 = *(_QWORD *)(v0 + 128);
    dispatch_group_enter(*(dispatch_group_t *)(v12
                                             + OBJC_IVAR____TtC23ConditionalEngineClient23ScheduledQueryETARunner_dispatchGroup));
    objc_msgSend(v11, sel_setDesiredAccuracy_, *MEMORY[0x24BDBFB28]);
    objc_msgSend(v11, sel_requestAlwaysAuthorization);
    objc_msgSend(v11, sel_requestLocation);
    v13 = swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v13;
    *(_QWORD *)(v13 + 16) = v12;
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v14;
    *v14 = v0;
    v14[1] = sub_23844FC58;
    return sub_238492C88();
  }
  else
  {
    sub_238451784();
    swift_allocError();
    *(_QWORD *)v16 = 0xD000000000000020;
    *(_QWORD *)(v16 + 8) = 0x8000000238498410;
    *(_BYTE *)(v16 + 16) = 5;
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23844FC58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23844FD10()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  unint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[2];

  v44[1] = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(*(_QWORD *)(v0 + 128)
                + OBJC_IVAR____TtC23ConditionalEngineClient23ScheduledQueryETARunner_currentLocation);
  *(_QWORD *)(v0 + 248) = v1;
  if (!v1)
  {
    v4 = *(id *)(v0 + 208);
    v31 = *(void **)(v0 + 216);
    sub_238451784();
    swift_allocError();
    *(_QWORD *)v32 = 0xD000000000000025;
    *(_QWORD *)(v32 + 8) = 0x8000000238498460;
    *(_BYTE *)(v32 + 16) = 5;
    swift_willThrow();
LABEL_10:

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = (void *)objc_opt_self();
  v3 = v1;
  v4 = objc_msgSend(v2, sel_placemarkWithLocation_name_postalAddress_, v3, 0, 0);
  *(_QWORD *)(v0 + 256) = v4;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBACF8]), sel_init);
  *(_QWORD *)(v0 + 264) = v5;
  sub_238435C24(&qword_25690A500);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_238494ED0;
  v7 = (void *)*MEMORY[0x24BDBA378];
  *(_QWORD *)(v6 + 32) = *MEMORY[0x24BDBA378];
  v44[0] = v6;
  sub_238492784();
  v8 = v7;
  sub_238435C24(&qword_25690A960);
  v9 = (void *)sub_238492760();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 88) = 0;
  v10 = objc_msgSend(v5, sel__crossPlatformUnifiedMeContactWithKeysToFetch_error_, v9, v0 + 88);
  *(_QWORD *)(v0 + 272) = v10;

  v11 = *(void **)(v0 + 88);
  if (!v10)
  {
    v33 = *(void **)(v0 + 208);
    v31 = *(void **)(v0 + 216);
    v34 = v11;
    sub_238491E6C();

    swift_willThrow();
LABEL_9:

    goto LABEL_10;
  }
  v12 = v11;
  v13 = objc_msgSend(v10, sel_postalAddresses);
  sub_238435C24((uint64_t *)&unk_25690A968);
  v14 = sub_23849276C();

  swift_bridgeObjectRetain();
  v15 = sub_238451BA4(v14);
  *(_QWORD *)(v0 + 280) = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v15)
  {
    v35 = *(void **)(v0 + 208);
    v31 = *(void **)(v0 + 216);
    v37 = *(_QWORD *)(v0 + 112);
    v36 = *(_QWORD *)(v0 + 120);
    sub_238451784();
    swift_allocError();
    *(_QWORD *)v38 = v37;
    *(_QWORD *)(v38 + 8) = v36;
    *(_BYTE *)(v38 + 16) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();

    goto LABEL_9;
  }
  v16 = objc_msgSend(v15, sel_value);
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBAD98]), sel_init);
  v18 = objc_msgSend(v17, sel_stringFromPostalAddress_, v16);
  v19 = sub_23849261C();
  v21 = v20;

  *(_QWORD *)(v0 + 48) = v19;
  *(_QWORD *)(v0 + 56) = v21;
  *(_QWORD *)(v0 + 64) = 10;
  *(_QWORD *)(v0 + 72) = 0xE100000000000000;
  *(_QWORD *)(v0 + 16) = 8236;
  *(_QWORD *)(v0 + 24) = 0xE200000000000000;
  sub_238436638();
  v22 = sub_238492964();
  v24 = v23;

  swift_bridgeObjectRelease();
  v25 = v22;
  *(_QWORD *)(v0 + 288) = v22;
  *(_QWORD *)(v0 + 296) = v24;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v26 = sub_23849255C();
  v27 = sub_238492880();
  v28 = os_log_type_enabled(v26, v27);
  v29 = *(_QWORD *)(v0 + 120);
  if (v28)
  {
    v42 = *(_QWORD *)(v0 + 112);
    v30 = swift_slowAlloc();
    v43 = swift_slowAlloc();
    v44[0] = v43;
    *(_DWORD *)v30 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 96) = sub_23843604C(v42, v29, v44);
    sub_238492934();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 104) = sub_23843604C(v25, v24, v44);
    sub_238492934();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_238433000, v26, v27, "Destination (%s) address: %s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v43, -1, -1);
    MEMORY[0x23B835AF4](v30, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v40 = dword_25690A978;
  v41 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 304) = v41;
  *v41 = v0;
  v41[1] = sub_238450324;
  return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_25690A978 + v40))(v25, v24);
}

uint64_t sub_238450324(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 312) = a1;
  *(_QWORD *)(v3 + 320) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2384503E4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  void *v17;
  void *v18;
  void *v19;

  v1 = *(void **)(v0 + 312);
  if (v1)
  {
    v2 = *(void **)(v0 + 280);
    v3 = *(_QWORD *)(v0 + 192);
    swift_bridgeObjectRelease();
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB160]), sel_initWithPlacemark_, v1);
    *(_QWORD *)(v0 + 328) = v4;

    if (v3 == 1)
    {
      v5 = dword_25690A988;
      v6 = v4;
      v7 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 336) = v7;
      *v7 = v0;
      v7[1] = sub_238450780;
      return ((uint64_t (*)(uint64_t, uint64_t))((char *)&dword_25690A988 + v5))(*(_QWORD *)(v0 + 256), (uint64_t)v6);
    }
    else
    {
      *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 184);
      v14 = dword_25690A980;
      v15 = v4;
      v16 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 368) = v16;
      *v16 = v0;
      v16[1] = sub_2384509DC;
      return ((uint64_t (*)(_OWORD *, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_25690A980 + v14))((_OWORD *)(v0 + 32), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 256), (uint64_t)v15);
    }
  }
  else
  {
    v10 = *(void **)(v0 + 264);
    v9 = *(void **)(v0 + 272);
    v11 = *(void **)(v0 + 248);
    v18 = *(void **)(v0 + 256);
    v19 = *(void **)(v0 + 280);
    v12 = *(void **)(v0 + 208);
    v17 = *(void **)(v0 + 216);
    sub_238492A78();
    swift_bridgeObjectRelease();
    sub_2384926A0();
    sub_2384926A0();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    sub_238451784();
    swift_allocError();
    *(_QWORD *)v13 = 0xD000000000000012;
    *(_QWORD *)(v13 + 8) = 0x8000000238498490;
    *(_BYTE *)(v13 + 16) = 5;
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2384506C8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(void **)(v0 + 272);
  v2 = *(void **)(v0 + 280);
  v4 = *(void **)(v0 + 256);
  v3 = *(void **)(v0 + 264);
  v5 = *(void **)(v0 + 248);
  v6 = *(void **)(v0 + 216);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238450780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 344) = v2;
  swift_task_dealloc();

  if (!v2)
  {
    *(_QWORD *)(v6 + 352) = a2;
    *(_QWORD *)(v6 + 360) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_23845084C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(void **)(v0 + 208);

  v3 = *(_QWORD *)(v0 + 360);
  v4 = *(void **)(v0 + 264);
  v6 = *(void **)(v0 + 248);
  v5 = *(void **)(v0 + 256);
  v7 = *(void **)(v0 + 216);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v1);
}

uint64_t sub_238450924()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(void **)(v0 + 264);
  v2 = *(void **)(v0 + 272);
  v4 = *(void **)(v0 + 248);
  v3 = *(void **)(v0 + 256);
  v6 = *(void **)(v0 + 208);
  v5 = *(void **)(v0 + 216);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2384509DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 376) = v2;
  swift_task_dealloc();

  if (!v2)
  {
    *(_QWORD *)(v6 + 384) = a2;
    *(_QWORD *)(v6 + 392) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_238450AB0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v1 = *(void **)(v0 + 208);

  v2 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 392);
  v4 = *(void **)(v0 + 264);
  v6 = *(void **)(v0 + 248);
  v5 = *(void **)(v0 + 256);
  v7 = *(void **)(v0 + 216);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v2);
}

uint64_t sub_238450B84()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(void **)(v0 + 264);
  v2 = *(void **)(v0 + 272);
  v4 = *(void **)(v0 + 248);
  v3 = *(void **)(v0 + 256);
  v6 = *(void **)(v0 + 208);
  v5 = *(void **)(v0 + 216);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238450C3C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 216);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238450CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  void (*v11)(char *, uint64_t);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];

  v3 = sub_2384925B0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v19 - v8;
  v10 = *(id *)(a2 + OBJC_IVAR____TtC23ConditionalEngineClient23ScheduledQueryETARunner_dispatchGroup);
  sub_2384925A4();
  MEMORY[0x23B834D2C](v7, 15.0);
  v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v7, v3);
  LOBYTE(v7) = sub_23849288C();

  v11(v9, v3);
  if ((v7 & 1) != 0)
  {
    if (qword_256909A08 != -1)
      swift_once();
    v13 = sub_238492574();
    sub_238435CA4(v13, (uint64_t)qword_256909F78);
    v14 = sub_23849255C();
    v15 = sub_238492880();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_238433000, v14, v15, "Timed out getting location. Make sure the Conditional app has always-allow location permissions.", v16, 2u);
      MEMORY[0x23B835AF4](v16, -1, -1);
    }

    sub_238451784();
    v17 = swift_allocError();
    *(_QWORD *)v18 = 0;
    *(_QWORD *)(v18 + 8) = 0;
    *(_BYTE *)(v18 + 16) = 6;
    v19[1] = v17;
    sub_238435C24((uint64_t *)&unk_25690AAF0);
    return sub_2384927B4();
  }
  else
  {
    sub_238435C24((uint64_t *)&unk_25690AAF0);
    return sub_2384927C0();
  }
}

uint64_t sub_238450EC8(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    sub_238435C24(&qword_25690A630);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_238450F54(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    sub_238435C24(&qword_25690A630);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_238455238(0, &qword_25690AAE8);
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = sub_23849276C();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_238450FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_25690A998 + dword_25690A998);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_238451080;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_238451080()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2384510C8()
{
  return swift_task_switch();
}

uint64_t sub_2384510DC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;

  if (qword_256909A08 != -1)
    swift_once();
  v1 = sub_238492574();
  *(_QWORD *)(v0 + 16) = sub_238435CA4(v1, (uint64_t)qword_256909F78);
  v2 = sub_23849255C();
  v3 = sub_238492880();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_238433000, v2, v3, "Running Notify", v4, 2u);
    MEMORY[0x23B835AF4](v4, -1, -1);
  }

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v5;
  *v5 = v0;
  v5[1] = sub_2384511EC;
  return swift_task_switch();
}

uint64_t sub_2384511EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_238451258()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  v1 = sub_23849255C();
  v2 = sub_238492880();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_238433000, v1, v2, "Running notify: finished", v3, 2u);
    MEMORY[0x23B835AF4](v3, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id ScheduledQueryETARunner.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScheduledQueryETARunner();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_238451364(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_238438264;
  v7[6] = a2;
  v7[7] = v6;
  v7[5] = a1;
  v7[8] = swift_getObjectType();
  return swift_task_switch();
}

Swift::Void __swiftcall ScheduledQueryETARunner.locationManager(_:didUpdateLocations:)(CLLocationManager _, Swift::OpaquePointer didUpdateLocations)
{
  uint64_t v2;
  uint64_t v3;
  id internal;
  Class isa;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  objc_class *v22;
  uint64_t v23;

  v3 = v2;
  internal = _._internal;
  isa = _.super.isa;
  if (qword_256909A08 != -1)
    swift_once();
  v6 = sub_238492574();
  sub_238435CA4(v6, (uint64_t)qword_256909F78);
  swift_bridgeObjectRetain_n();
  v7 = sub_23849255C();
  v8 = sub_238492880();
  if (os_log_type_enabled(v7, v8))
  {
    v22 = isa;
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v23 = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_238455238(0, (unint64_t *)&unk_25690A9B0);
    v12 = swift_bridgeObjectRetain();
    v13 = MEMORY[0x23B834EE8](v12, v11);
    v15 = v14;
    swift_bridgeObjectRelease();
    sub_23843604C(v13, v15, &v23);
    sub_238492934();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_238433000, v7, v8, "Location manager did update location: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v10, -1, -1);
    v16 = v9;
    isa = v22;
    MEMORY[0x23B835AF4](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v17 = OBJC_IVAR____TtC23ConditionalEngineClient23ScheduledQueryETARunner_currentLocation;
  if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC23ConditionalEngineClient23ScheduledQueryETARunner_currentLocation))
  {
    if ((unint64_t)internal >> 62)
    {
      swift_bridgeObjectRetain();
      v18 = sub_238492B2C();
      if (!v18)
        goto LABEL_15;
    }
    else
    {
      v18 = *(_QWORD *)(((unint64_t)internal & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v18)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        v21 = *(void **)(v3 + v17);
        *(_QWORD *)(v3 + v17) = v18;

        -[objc_class stopUpdatingLocation](isa, sel_stopUpdatingLocation);
        dispatch_group_leave(*(dispatch_group_t *)(v3
                                                 + OBJC_IVAR____TtC23ConditionalEngineClient23ScheduledQueryETARunner_dispatchGroup));
        return;
      }
    }
    v19 = v18 - 1;
    if (__OFSUB__(v18, 1))
    {
      __break(1u);
    }
    else if (((unint64_t)internal & 0xC000000000000001) == 0)
    {
      if ((v19 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v19 < *(_QWORD *)(((unint64_t)internal & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v20 = *((id *)internal + v19 + 4);
LABEL_14:
        v18 = (uint64_t)v20;
        goto LABEL_15;
      }
      __break(1u);
      return;
    }
    v20 = (id)MEMORY[0x23B835200](v19, internal);
    goto LABEL_14;
  }
}

uint64_t ScheduledQueryETARunner.locationManager(_:didFailWithError:)()
{
  return sub_2384549D0();
}

unint64_t sub_238451784()
{
  unint64_t result;

  result = qword_25690A928;
  if (!qword_25690A928)
  {
    result = MEMORY[0x23B835A40](&unk_2384951A4, &type metadata for ETARunnerError);
    atomic_store(result, &qword_25690A928);
  }
  return result;
}

uint64_t sub_2384517C8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_2384517DC(uint64_t a1)
{
  uint64_t v1;

  return sub_238450CD0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2384517E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  int64_t v10;
  int v11;
  unint64_t v12;
  _BOOL4 v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _BOOL4 v22;
  _BOOL4 v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  const void *v40;
  BOOL v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _BOOL4 v46;
  int v47;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  result = sub_238451AF8(a1, a2, a3);
  v7 = result;
  v8 = v3 >> 63;
  if (result > 0)
  {
    sub_238435C24(&qword_25690AAE0);
    v9 = (uint64_t *)swift_allocObject();
    v10 = j__malloc_size(v9);
    v11 = 0;
    v12 = 0;
    LOBYTE(v13) = 0;
    v15 = v10 - 32;
    v14 = v10 < 32;
    v16 = v10 - 25;
    result = (uint64_t)v9;
    if (v14)
      v15 = v16;
    v17 = v15 >> 3;
    v9[2] = v7;
    v9[3] = 2 * v17;
    v18 = v9 + 4;
    v19 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v7;
    while (v7)
    {
      v21 = v5;
      v22 = v5 <= v4;
      if (v3 > 0)
        v22 = v5 >= v4;
      if (v22)
      {
        if (v11 & 1 | (v5 != v4))
          goto LABEL_61;
        if (v13)
        {
          v11 = 1;
          v5 = v4;
          v13 = 1;
        }
        else
        {
          if (v12 == 0x8000000000000000)
            goto LABEL_62;
          v13 = 0;
          v11 = 1;
          v5 = v4;
        }
      }
      else
      {
        v20 = __OFADD__(v5, v3);
        if (v20)
          v5 = v8 ^ 0x7FFFFFFFFFFFFFFFLL;
        else
          v5 += v3;
        if (v20)
          v12 = 0x8000000000000000;
        else
          v12 = 0;
        v13 = !v20;
      }
      *v18++ = v21;
      if (!--v7)
        goto LABEL_27;
    }
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (result < 0)
    goto LABEL_63;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  result = MEMORY[0x24BEE4AF8];
  v19 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 24) >> 1;
  v18 = (uint64_t *)(MEMORY[0x24BEE4AF8] + 32);
LABEL_27:
  v45 = v8 ^ 0x7FFFFFFFFFFFFFFFLL;
  while (1)
  {
    v23 = v5 <= v4;
    if (v3 > 0)
      v23 = v5 >= v4;
    if (v23)
      break;
    v24 = v5 + v3;
    if (__OFADD__(v5, v3))
    {
      v13 = 0;
      v12 = 0x8000000000000000;
      v24 = v45;
      if (v19)
      {
        v24 = v45;
        goto LABEL_52;
      }
    }
    else
    {
      v12 = 0;
      v13 = 1;
      if (v19)
        goto LABEL_52;
    }
LABEL_40:
    v25 = *(_QWORD *)(result + 24);
    if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0)
      goto LABEL_59;
    v46 = v13;
    v47 = v11;
    v26 = v4;
    v27 = v3;
    v28 = v12;
    v29 = v25 & 0xFFFFFFFFFFFFFFFELL;
    if (v29 <= 1)
      v30 = 1;
    else
      v30 = v29;
    v31 = (_QWORD *)result;
    sub_238435C24(&qword_25690AAE0);
    v32 = (_QWORD *)swift_allocObject();
    v33 = j__malloc_size(v32);
    v34 = v33 - 32;
    v14 = v33 < 32;
    v35 = v33 - 25;
    v36 = v31;
    if (v14)
      v34 = v35;
    v37 = v34 >> 3;
    v32[2] = v30;
    v32[3] = 2 * (v34 >> 3);
    v38 = (unint64_t)(v32 + 4);
    v39 = v31[3] >> 1;
    if (v31[2])
    {
      v40 = v31 + 4;
      if (v32 != v31 || v38 >= (unint64_t)v40 + 8 * v39)
      {
        memmove(v32 + 4, v40, 8 * v39);
        v36 = v31;
      }
      v36[2] = 0;
    }
    v18 = (uint64_t *)(v38 + 8 * v39);
    v19 = (v37 & 0x7FFFFFFFFFFFFFFFLL) - v39;
    swift_release();
    result = (uint64_t)v32;
    v12 = v28;
    v3 = v27;
    v4 = v26;
    v13 = v46;
    v11 = v47;
LABEL_52:
    v41 = __OFSUB__(v19--, 1);
    if (v41)
    {
      __break(1u);
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    *v18++ = v5;
    v5 = v24;
  }
  if (!((v5 != v4) | v11 & 1) && (v13 || v12 != 0x8000000000000000))
  {
    v11 = 1;
    v24 = v5;
    if (v19)
    {
      v24 = v5;
      goto LABEL_52;
    }
    goto LABEL_40;
  }
  v42 = *(_QWORD *)(result + 24);
  if (v42 < 2)
    return result;
  v43 = v42 >> 1;
  v41 = __OFSUB__(v43, v19);
  v44 = v43 - v19;
  if (!v41)
  {
    *(_QWORD *)(result + 16) = v44;
    return result;
  }
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_238451AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  char v5;
  unint64_t v6;
  char v7;
  BOOL v8;
  char v9;
  BOOL v10;
  _BOOL4 v11;

  result = 0;
  v5 = 0;
  v6 = 0;
  v7 = 0;
  do
  {
    v11 = a1 <= a2;
    if (a3 > 0)
      v11 = a1 >= a2;
    if (v11)
    {
      if ((a1 != a2) | v5 & 1)
        return result;
      if ((v7 & 1) != 0)
      {
        v5 = 1;
        a1 = a2;
        v7 = 1;
      }
      else
      {
        if (v6 == 0x8000000000000000)
          return result;
        v7 = 0;
        v5 = 1;
        a1 = a2;
      }
    }
    else
    {
      v8 = __OFADD__(a1, a3);
      a1 += a3;
      v9 = v8;
      v10 = (v9 & 1) == 0;
      if ((v9 & 1) != 0)
      {
        a1 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
        v6 = 0x8000000000000000;
      }
      else
      {
        v6 = 0;
      }
      v7 = v10;
    }
    v8 = __OFADD__(result++, 1);
  }
  while (!v8);
  __break(1u);
  return result;
}

void *sub_238451BA4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  char v9;

  if (a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_238492B2C())
  {
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x23B835200](v3 - 4, a1) : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v7 = objc_msgSend(v4, sel_label);
      if (v7)
      {
        v8 = v7;
        sub_23849261C();

        sub_238492658();
        swift_bridgeObjectRelease();
        sub_238436638();
        v9 = sub_238492970();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return v5;
        }
      }

      ++v3;
      if (v6 == v2)
        goto LABEL_15;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_15:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_238451D48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = a2;
  return swift_task_switch();
}

uint64_t sub_238451D60()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBFA68]), sel_init);
  v0[18] = v1;
  v2 = sub_238492610();
  v0[19] = v2;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_238451E3C;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_238450F54;
  v4[3] = &unk_250A252F8;
  v4[4] = v3;
  objc_msgSend(v1, sel_geocodeAddressString_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_238451E3C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

void sub_238451E9C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 120);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_238492B2C();
    swift_bridgeObjectRelease();
    if (!v2)
      goto LABEL_7;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
    {
LABEL_7:

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))(v0 + 8))(v2);
      return;
    }
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = (id)MEMORY[0x23B835200](0, v1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(id *)(v1 + 32);
LABEL_6:
    v2 = (uint64_t)v3;
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_238451F64()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 152);
  v2 = *(void **)(v0 + 144);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238451FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  return swift_task_switch();
}

uint64_t sub_238451FC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;

  v1 = v0[17];
  v2 = v0[16];
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB058]), sel_init);
  v0[19] = v3;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB0F0]), sel_initWithPlacemark_, v2);
  objc_msgSend(v3, sel_setSource_, v4);

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB0F0]), sel_initWithPlacemark_, v1);
  objc_msgSend(v3, sel_setDestination_, v5);

  objc_msgSend(v3, sel_setRequestsAlternateRoutes_, 1);
  objc_msgSend(v3, sel_setTransportType_, 0xFFFFFFFLL);
  v6 = (void *)sub_238491F38();
  objc_msgSend(v3, sel_setDepartureDate_, v6);

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB050]), sel_initWithRequest_, v3);
  v0[20] = v7;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_238452170;
  v8 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v0[11] = 0x40000000;
  v0[12] = sub_238450EC8;
  v0[13] = &unk_250A252E0;
  v0[14] = v8;
  objc_msgSend(v7, sel_calculateDirectionsWithCompletionHandler_, v0 + 10);
  return swift_continuation_await();
}

uint64_t sub_238452170()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 168) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2384521D0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  v2 = *(void **)(v0 + 152);
  v1 = *(void **)(v0 + 160);
  v3 = *(void **)(v0 + 120);
  v4 = objc_msgSend(v3, sel_routes);
  sub_238455238(0, &qword_25690AAD8);
  v5 = sub_23849276C();

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_23845226C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 160);
  v2 = *(void **)(v0 + 152);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2384522B4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[15] = a1;
  v2[16] = a2;
  v3 = sub_238491F98();
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_238452330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v1 = sub_2384517E4(0, 90, 5);
  *(_QWORD *)(v0 + 176) = v1;
  result = sub_238491F80();
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 184) = v3;
  if (v3)
  {
    *(_QWORD *)(v0 + 192) = 0;
    *(_QWORD *)(v0 + 200) = 0;
    v4 = *(_QWORD *)(v0 + 176);
    if (*(_QWORD *)(v4 + 16))
    {
      v5 = *(_QWORD *)(v4 + 32);
      *(_QWORD *)(v0 + 208) = v5;
      if ((unsigned __int128)(v5 * (__int128)60) >> 64 == (60 * v5) >> 63)
      {
        *(_QWORD *)(v0 + 216) = 60 * v5;
        sub_238491F5C();
        v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_25690AAD0 + dword_25690AAD0);
        v6 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 224) = v6;
        *v6 = v0;
        v6[1] = sub_238452514;
        return v11(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 160));
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    swift_release();
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
    v8 = (void *)sub_238492610();
    objc_msgSend(v7, sel_setDateFormat_, v8);

    v9 = *(_QWORD *)(v0 + 144);
    sub_238451784();
    swift_allocError();
    *(_QWORD *)v10 = 0xD000000000000013;
    *(_QWORD *)(v10 + 8) = 0x80000002384985F0;
    *(_BYTE *)(v10 + 16) = 5;
    swift_willThrow();

    (*(void (**)(_QWORD, _QWORD))(v9 + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 136));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_238452514(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v3 = (_QWORD *)*v2;
  v3[29] = a1;
  v3[30] = v1;
  swift_task_dealloc();
  v4 = v3[20];
  v5 = v3[17];
  v6 = *(void (**)(uint64_t, uint64_t))(v3[18] + 8);
  if (v1)
  {
    v3[32] = v6;
    v6(v4, v5);
    swift_release();
  }
  else
  {
    v3[31] = v6;
    v6(v4, v5);
  }
  return swift_task_switch();
}

void sub_2384525B4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  double v31;
  double v32;
  double v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  id v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 232);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_238492B2C();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (v2)
  {
    v3 = v1 & 0xC000000000000001;
    if ((v1 & 0xC000000000000001) != 0)
    {
      v4 = (id)MEMORY[0x23B835200](0, *(_QWORD *)(v0 + 232));
    }
    else
    {
      if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_41;
      }
      v4 = *(id *)(*(_QWORD *)(v0 + 232) + 32);
    }
    v5 = v4;
    v6 = v2 - 1;
    if (v2 != 1)
    {
      if (v2 < 2)
      {
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        return;
      }
      if (!v3)
      {
        v25 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v25 < 2 || v6 >= v25)
          goto LABEL_44;
      }
      v27 = 0;
      v28 = *(_QWORD *)(v0 + 232) + 40;
      do
      {
        if (v3)
          v29 = (id)MEMORY[0x23B835200](v27 + 1, *(_QWORD *)(v0 + 232));
        else
          v29 = *(id *)(v28 + 8 * v27);
        v30 = v29;
        objc_msgSend(v29, sel_expectedTravelTime);
        v32 = v31;
        objc_msgSend(v5, sel_expectedTravelTime);
        if (v32 >= v33)
          v34 = v30;
        else
          v34 = v5;
        if (v32 < v33)
          v5 = v30;

        ++v27;
      }
      while (v6 != v27);
    }
    v7 = *(_QWORD *)(v0 + 208);
    v8 = *(_QWORD *)(v0 + 192);
    swift_bridgeObjectRelease_n();
    sub_238435C24((uint64_t *)&unk_25690AA80);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_238493540;
    *(_QWORD *)(v0 + 32) = 0;
    *(_QWORD *)(v0 + 40) = 0xE000000000000000;
    sub_238492A78();
    v10 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v0 + 24) = v10;
    sub_2384926A0();
    *(_QWORD *)(v0 + 112) = v7;
    sub_238492C64();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    sub_2384926A0();
    objc_msgSend(v5, sel_expectedTravelTime);
    sub_2384927FC();
    v11 = *(_QWORD *)(v0 + 16);
    v12 = *(_QWORD *)(v0 + 24);
    v13 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 40) = v12;
    sub_238492D0C();
    swift_bridgeObjectRelease();
    if (!v8)
    {
      v35 = v13;
      v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_238493540;
      *(_QWORD *)(v0 + 48) = 0;
      *(_QWORD *)(v0 + 56) = 0xE000000000000000;
      sub_238492A78();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 96) = 0xD000000000000015;
      *(_QWORD *)(v0 + 104) = 0x8000000238498670;
      v37 = objc_msgSend(v5, sel_description);
      sub_23849261C();

      sub_2384926A0();
      swift_bridgeObjectRelease();
      v38 = *(_QWORD *)(v0 + 96);
      v39 = *(_QWORD *)(v0 + 104);
      *(_QWORD *)(v36 + 56) = v35;
      *(_QWORD *)(v36 + 32) = v38;
      *(_QWORD *)(v36 + 40) = v39;
      sub_238492D0C();
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    v14 = *(void **)(v0 + 192);
    objc_msgSend(v5, sel_expectedTravelTime);
    v16 = v15;
    objc_msgSend(v14, sel_expectedTravelTime);
    if (v16 < v17)
    {
      v64 = *(void (**)(uint64_t, uint64_t))(v0 + 248);
      v18 = *(_QWORD *)(v0 + 168);
      v19 = *(_QWORD *)(v0 + 152);
      v63 = *(_QWORD *)(v0 + 144);
      v20 = *(_QWORD *)(v0 + 136);
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_238493540;
      *(_QWORD *)(v0 + 80) = 0;
      *(_QWORD *)(v0 + 88) = 0xE000000000000000;
      sub_238492A78();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 64) = 0xD000000000000015;
      *(_QWORD *)(v0 + 72) = 0x8000000238498670;
      v22 = objc_msgSend(v5, sel_description);
      sub_23849261C();

      sub_2384926A0();
      swift_bridgeObjectRelease();
      v23 = *(_QWORD *)(v0 + 64);
      v24 = *(_QWORD *)(v0 + 72);
      *(_QWORD *)(v21 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v21 + 32) = v23;
      *(_QWORD *)(v21 + 40) = v24;
      sub_238492D0C();

      swift_bridgeObjectRelease();
      sub_238491F5C();
      v64(v18, v20);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32))(v18, v19, v20);
      goto LABEL_31;
    }

  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  v5 = *(void **)(v0 + 192);
LABEL_31:
  v40 = *(_QWORD *)(v0 + 200) + 1;
  if (v40 != *(_QWORD *)(v0 + 184))
  {
    *(_QWORD *)(v0 + 192) = v5;
    *(_QWORD *)(v0 + 200) = v40;
    v54 = *(_QWORD *)(v0 + 176);
    if (v40 < *(_QWORD *)(v54 + 16))
    {
      v55 = *(_QWORD *)(v54 + 8 * v40 + 32);
      *(_QWORD *)(v0 + 208) = v55;
      if ((unsigned __int128)(v55 * (__int128)60) >> 64 == (60 * v55) >> 63)
      {
        *(_QWORD *)(v0 + 216) = 60 * v55;
        sub_238491F5C();
        v66 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_25690AAD0 + dword_25690AAD0);
        v56 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 224) = v56;
        *v56 = v0;
        v56[1] = sub_238452514;
        v66(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 160));
        return;
      }
      goto LABEL_42;
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  swift_release();
  v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v42 = (void *)sub_238492610();
  objc_msgSend(v41, sel_setDateFormat_, v42);

  if (v5)
  {
    v43 = *(_QWORD *)(v0 + 168);
    v65 = *(_QWORD *)(v0 + 152);
    v44 = *(_QWORD *)(v0 + 136);
    v59 = *(_QWORD *)(v0 + 144);
    v61 = v44;
    sub_238435C24((uint64_t *)&unk_25690AA80);
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_238493540;
    v62 = v5;
    sub_238492A78();
    sub_2384926A0();
    v46 = (void *)sub_238491F38();
    v47 = objc_msgSend(v41, sel_stringFromDate_, v46);

    sub_23849261C();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    sub_2384926A0();
    objc_msgSend(v62, sel_expectedTravelTime);
    sub_238491F2C();
    v48 = (void *)sub_238491F38();
    v60 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
    v60(v65, v44);
    v49 = objc_msgSend(v41, sel_stringFromDate_, v48);

    sub_23849261C();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    sub_2384926A0();
    *(_QWORD *)(v45 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v45 + 32) = 0;
    *(_QWORD *)(v45 + 40) = 0xE000000000000000;
    sub_238492D0C();
    swift_bridgeObjectRelease();
    sub_238492A78();
    sub_2384926A0();
    v50 = (void *)sub_238491F38();
    v51 = objc_msgSend(v41, sel_stringFromDate_, v50);

    sub_23849261C();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    sub_2384926A0();
    objc_msgSend(v62, sel_expectedTravelTime);
    sub_238491F2C();
    v52 = (void *)sub_238491F38();
    v60(v65, v61);
    v53 = objc_msgSend(v41, sel_stringFromDate_, v52);

    sub_23849261C();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    sub_2384926A0();

    v60(v43, v61);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xE000000000000000);
  }
  else
  {
    v57 = *(_QWORD *)(v0 + 144);
    sub_238451784();
    swift_allocError();
    *(_QWORD *)v58 = 0xD000000000000013;
    *(_QWORD *)(v58 + 8) = 0x80000002384985F0;
    *(_BYTE *)(v58 + 16) = 5;
    swift_willThrow();

    (*(void (**)(_QWORD, _QWORD))(v57 + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 136));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
}

uint64_t sub_238452FB4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 256))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238453020(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[12] = a1;
  v2[13] = a2;
  v3 = sub_238435C24(&qword_256909DA0);
  v2[14] = v3;
  v2[15] = *(_QWORD *)(v3 - 8);
  v2[16] = swift_task_alloc();
  v4 = sub_2384923E8();
  v2[17] = v4;
  v2[18] = *(_QWORD *)(v4 - 8);
  v2[19] = swift_task_alloc();
  v5 = sub_238435C24((uint64_t *)&unk_25690AAB0);
  v2[20] = v5;
  v2[21] = *(_QWORD *)(v5 - 8);
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2384530D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[18];
  v1 = v0[19];
  v3 = v0[17];
  type metadata accessor for ConversationEntityRepresentation();
  sub_2384923DC();
  sub_23843E8CC(&qword_256909DA8, (uint64_t (*)(uint64_t))type metadata accessor for ConversationEntityRepresentation, (uint64_t)&unk_238495D34);
  sub_2384923B8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultEnvironment);
  v5 = sub_238455238(0, (unint64_t *)&qword_25690AAC0);
  v6 = MEMORY[0x24BE04080];
  v0[5] = v5;
  v0[6] = v6;
  v0[2] = v4;
  v0[23] = sub_2384923D0();
  sub_238436B3C((uint64_t)(v0 + 2));
  swift_getObjectType();
  v7 = (_QWORD *)swift_task_alloc();
  v0[24] = v7;
  sub_23843E8CC(&qword_256909DB0, (uint64_t (*)(uint64_t))type metadata accessor for ConversationEntityRepresentation, (uint64_t)&unk_238495D64);
  *v7 = v0;
  v7[1] = sub_238437B54;
  return sub_2384923AC();
}

uint64_t sub_2384532A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[21] = a3;
  v4[22] = a4;
  v4[19] = a1;
  v4[20] = a2;
  return swift_task_switch();
}

uint64_t sub_2384532C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t inited;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t);

  v2 = v0[21];
  v1 = v0[22];
  v3 = objc_allocWithZone(MEMORY[0x24BE5FC68]);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_238492610();
  v5 = (void *)sub_238492610();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_initWithTypeIdentifier_instanceIdentifier_, v4, v5);

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE5FC78]), sel_init);
  v8 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v9 = v6;
  v10 = objc_msgSend(v8, sel_initWithValue_valueType_, v9, v7);
  v0[23] = v10;

  sub_238435C24((uint64_t *)&unk_25690AAA0);
  inited = swift_initStackObject();
  v0[24] = inited;
  *(_OWORD *)(inited + 16) = xmmword_2384938A0;
  strcpy((char *)(inited + 32), "conversation");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(_QWORD *)(inited + 48) = v10;
  v12 = (void *)objc_opt_self();
  v13 = v10;
  swift_bridgeObjectRetain();
  v14 = objc_msgSend(v12, sel_stringValueType);
  v15 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v0[17] = v2;
  v0[18] = v1;
  swift_bridgeObjectRetain();
  v16 = objc_msgSend(v15, sel_initWithValue_valueType_, sub_238492C94(), v14);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = 0x746E65746E6F63;
  *(_QWORD *)(inited + 64) = 0xE700000000000000;
  *(_QWORD *)(inited + 72) = v16;
  *(_QWORD *)&xmmword_256911CE0 = 0xD000000000000013;
  *((_QWORD *)&xmmword_256911CE0 + 1) = 0x8000000238497690;
  swift_bridgeObjectRelease();
  v0[15] = &type metadata for ActionExecutionOptions;
  v0[16] = &off_250A27C50;
  v17 = swift_allocObject();
  v0[12] = v17;
  *(_QWORD *)(v17 + 16) = 0xD000000000000013;
  *(_QWORD *)(v17 + 24) = 0x8000000238497690;
  *(_WORD *)(v17 + 32) = 513;
  *(_QWORD *)(v17 + 40) = 0;
  *(_BYTE *)(v17 + 48) = 1;
  *(_OWORD *)(v17 + 56) = 0u;
  *(_OWORD *)(v17 + 72) = 0u;
  v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_25690B2D0 + dword_25690B2D0);
  v18 = (_QWORD *)swift_task_alloc();
  v0[25] = v18;
  *v18 = v0;
  v18[1] = sub_238438110;
  return v20(0x6C706552646E6553, 0xEF746E65746E4979, inited, 0, 1, (uint64_t)(v0 + 12), 0, 0);
}

uint64_t sub_2384535CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_2384535E8()
{
  uint64_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;

  if (qword_256909A08 != -1)
    swift_once();
  v1 = sub_238492574();
  v0[6] = sub_238435CA4(v1, (uint64_t)qword_256909F78);
  v2 = sub_23849255C();
  v3 = sub_238492880();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_238433000, v2, v3, "Running Send Message", v4, 2u);
    MEMORY[0x23B835AF4](v4, -1, -1);
  }

  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_2384536EC;
  return sub_238453020(v0[2], v0[3]);
}

uint64_t sub_2384536EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v4 = *v3;
  *(_QWORD *)(v4 + 64) = a1;
  *(_QWORD *)(v4 + 72) = a2;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v4 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_238453760()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 72);
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v2;
    *v2 = v0;
    v2[1] = sub_238453834;
    v3 = *(_QWORD *)(v0 + 64);
    v4 = *(_QWORD *)(v0 + 40);
    v2[21] = *(_QWORD *)(v0 + 32);
    v2[22] = v4;
    v2[19] = v3;
    v2[20] = v1;
    return swift_task_switch();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 16);
    v6 = *(_QWORD *)(v0 + 24);
    sub_238451784();
    swift_allocError();
    *(_QWORD *)v8 = v7;
    *(_QWORD *)(v8 + 8) = v6;
    *(_BYTE *)(v8 + 16) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_238453834()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_2384538A8(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;

  *(_QWORD *)(v5 + 56) = a4;
  *(_QWORD *)(v5 + 64) = a5;
  *(_QWORD *)(v5 + 40) = a2;
  *(_QWORD *)(v5 + 48) = a3;
  v7 = sub_238491F98();
  *(_QWORD *)(v5 + 72) = v7;
  *(_QWORD *)(v5 + 80) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 88) = swift_task_alloc();
  *(_QWORD *)(v5 + 96) = swift_task_alloc();
  *(_QWORD *)(v5 + 104) = swift_task_alloc();
  *(_OWORD *)(v5 + 112) = *a1;
  return swift_task_switch();
}

uint64_t sub_238453934()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  sub_238491F80();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_25690AAD0 + dword_25690AAD0);
  v1 = (_QWORD *)swift_task_alloc();
  v0[16] = v1;
  *v1 = v0;
  v1[1] = sub_2384539A0;
  return v3(v0[7], v0[8], v0[13]);
}

uint64_t sub_2384539A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 104);
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 72);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v3[17] = a1;
  v3[18] = v1;
  swift_task_dealloc();
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v3[19] = v7;
  v7(v4, v5);
  return swift_task_switch();
}

void sub_238453A38()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  void *v21;
  void *v22;
  unint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  double v31;
  double v32;
  long double v33;
  double v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void *v51;
  double v52;
  double v53;
  double v54;
  void *v55;
  id v56;
  void *v57;
  void *v58;
  id v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  id v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  unint64_t v80;

  v1 = *(_QWORD *)(v0 + 136);
  if (v1 >> 62)
    goto LABEL_67;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2)
  {
LABEL_68:
    swift_bridgeObjectRelease();
    v25 = 0.0;
    v8 = 0.0;
LABEL_69:
    swift_bridgeObjectRelease();
    sub_238491F5C();
    sub_238491F5C();
    v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
    *(_QWORD *)(v0 + 160) = v56;
    v57 = (void *)sub_238492610();
    objc_msgSend(v56, sel_setDateFormat_, v57);

    if (v8 >= v25)
    {
      v79 = 2128226;
      v80 = 0xE300000000000000;
    }
    else
    {
      v79 = 0;
      v80 = 0xE000000000000000;
      sub_238492A78();
      swift_bridgeObjectRelease();
      v79 = 0x206E656577746562;
      v80 = 0xE800000000000000;
      v58 = (void *)sub_238491F38();
      v59 = objc_msgSend(v56, sel_stringFromDate_, v58);

      sub_23849261C();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_2384926A0();
    }
    v60 = (void *)sub_238491F38();
    v61 = objc_msgSend(v56, sel_stringFromDate_, v60);

    sub_23849261C();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    v62 = *(_QWORD *)(v0 + 120);
    if (v62)
    {
      if (v62 != 1)
      {
        v79 = 0;
        v80 = 0xE000000000000000;
        sub_238492A78();
        swift_bridgeObjectRelease();
        v79 = 0xD000000000000024;
        v80 = 0x80000002384986E0;
        sub_2384926A0();
        sub_2384926A0();
        sub_2384926A0();
        swift_bridgeObjectRelease();
        sub_2384926A0();
        v69 = v79;
        v68 = v80;
        *(_QWORD *)(v0 + 168) = v80;
        v78 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_25690A998 + dword_25690A998);
        v70 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 176) = v70;
        *v70 = v0;
        v70[1] = sub_238454690;
        v78(*(_QWORD *)(v0 + 112), v62, v69, v68);
        return;
      }

      swift_bridgeObjectRelease();
      v63 = 0;
      v64 = 0;
    }
    else
    {
      v79 = 0;
      v80 = 0xE000000000000000;
      sub_238492A78();
      swift_bridgeObjectRelease();
      v79 = 0xD000000000000015;
      v80 = 0x80000002384986C0;
      sub_2384926A0();
      sub_2384926A0();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_2384926A0();

      v63 = v79;
      v64 = v80;
    }
    v65 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
    v66 = *(_QWORD *)(v0 + 96);
    v67 = *(_QWORD *)(v0 + 72);
    v65(*(_QWORD *)(v0 + 88), v67);
    v65(v66, v67);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(uint64_t, unint64_t))(v0 + 8))(v63, v64);
    return;
  }
  while (1)
  {
    v3 = v1 & 0xC000000000000001;
    if ((v1 & 0xC000000000000001) == 0)
      break;
    v4 = (id)MEMORY[0x23B835200](0, *(_QWORD *)(v0 + 136));
LABEL_6:
    v5 = v4;
    v6 = v2 - 1;
    if (v2 != 1)
    {
      if (v2 < 2)
        goto LABEL_80;
      if (!v3)
      {
        v11 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v11 < 2 || v6 >= v11)
          goto LABEL_82;
      }
      v13 = 0;
      v14 = *(_QWORD *)(v0 + 136) + 40;
      do
      {
        if (v3)
          v15 = (id)MEMORY[0x23B835200](v13 + 1, *(_QWORD *)(v0 + 136));
        else
          v15 = *(id *)(v14 + 8 * v13);
        v16 = v15;
        objc_msgSend(v15, sel_expectedTravelTime);
        v18 = v17;
        objc_msgSend(v5, sel_expectedTravelTime);
        if (v18 >= v19)
          v20 = v16;
        else
          v20 = v5;
        if (v18 < v19)
          v5 = v16;

        ++v13;
      }
      while (v6 != v13);
    }
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_expectedTravelTime);
    v8 = v7;

    if (v3)
    {
      v9 = *(_QWORD *)(v0 + 136);
      swift_bridgeObjectRetain();
      v10 = (id)MEMORY[0x23B835200](0, v9);
    }
    else
    {
      if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_81;
      v21 = *(void **)(*(_QWORD *)(v0 + 136) + 32);
      swift_bridgeObjectRetain();
      v10 = v21;
    }
    v22 = v10;
    v23 = v2 - 1;
    if (v2 != 1)
    {
      if (!v3)
      {
        v47 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v47 < 2 || v23 >= v47)
          goto LABEL_83;
      }
      v48 = 0;
      v49 = *(_QWORD *)(v0 + 136) + 40;
      do
      {
        if (v3)
          v50 = (id)MEMORY[0x23B835200](v48 + 1, *(_QWORD *)(v0 + 136));
        else
          v50 = *(id *)(v49 + 8 * v48);
        v51 = v50;
        objc_msgSend(v22, sel_expectedTravelTime);
        v53 = v52;
        objc_msgSend(v51, sel_expectedTravelTime);
        if (v53 >= v54)
          v55 = v51;
        else
          v55 = v22;
        if (v53 < v54)
          v22 = v51;

        ++v48;
      }
      while (v23 != v48);
    }
    swift_bridgeObjectRelease();
    objc_msgSend(v22, sel_expectedTravelTime);
    v25 = v24;

    v26 = 0;
    v72 = (uint64_t *)(v0 + 24);
    v73 = (uint64_t *)(v0 + 32);
    v27 = v0;
    v71 = *(_QWORD *)(v0 + 136) + 32;
    v1 = 0x7FF0000000000000;
    v0 = 0xC3E0000000000001;
    v74 = v3;
    v75 = v27;
    while (1)
    {
      v29 = v3 ? (id)MEMORY[0x23B835200](v26, *(_QWORD *)(v27 + 136)) : *(id *)(v71 + 8 * v26);
      v30 = v29;
      objc_msgSend(v29, sel_expectedTravelTime, v71);
      v32 = v31;
      if ((~*(_QWORD *)&v31 & 0x7FF0000000000000) == 0)
        break;
      if (v31 <= -9.22337204e18)
        goto LABEL_62;
      if (v31 >= 9.22337204e18)
        goto LABEL_63;
      objc_msgSend(v30, sel_expectedTravelTime);
      v34 = fmod(v33, 3600.0) / 60.0;
      if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) == 0)
        goto LABEL_64;
      if (v34 <= -9.22337204e18)
        goto LABEL_65;
      if (v34 >= 9.22337204e18)
        goto LABEL_66;
      v76 = v30;
      v77 = v26;
      if ((uint64_t)v32 < 3600)
      {
        v36 = 0;
        v37 = 0xE000000000000000;
      }
      else
      {
        *v73 = (uint64_t)v32 / 3600;
        v79 = sub_238492C64();
        v80 = v35;
        sub_2384926A0();
        sub_2384926A0();
        swift_bridgeObjectRelease();
        sub_2384926A0();
        v36 = v79;
        v37 = v80;
      }
      *(_QWORD *)(v27 + 16) = (uint64_t)v34;
      v79 = sub_238492C64();
      v80 = v38;
      sub_2384926A0();
      v79 = v36;
      v80 = v37;
      swift_bridgeObjectRetain();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v79 = 0;
      v80 = 0xE000000000000000;
      sub_238492A78();
      swift_bridgeObjectRelease();
      v79 = 2123337;
      v80 = 0xE300000000000000;
      swift_bridgeObjectRetain();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_2384926A0();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_2384926A0();
      sub_2384926A0();
      sub_2384926A0();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_2384926A0();
      v39 = objc_msgSend(v30, sel_name);
      sub_23849261C();

      sub_2384926A0();
      swift_bridgeObjectRelease();
      v40 = v79;
      v41 = v80;
      if (qword_256909A08 != -1)
        swift_once();
      v42 = sub_238492574();
      sub_238435CA4(v42, (uint64_t)qword_256909F78);
      swift_bridgeObjectRetain_n();
      v43 = sub_23849255C();
      v44 = sub_238492880();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        v46 = swift_slowAlloc();
        v79 = v46;
        *(_DWORD *)v45 = 136315138;
        swift_bridgeObjectRetain();
        *v72 = sub_23843604C(v40, v41, &v79);
        sub_238492934();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_238433000, v43, v44, "%s", v45, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B835AF4](v46, -1, -1);
        MEMORY[0x23B835AF4](v45, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      v27 = v75;
      v3 = v74;
      ++v26;
      sub_238435C24((uint64_t *)&unk_25690AA80);
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_238493540;
      *(_QWORD *)(v28 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v28 + 32) = v40;
      *(_QWORD *)(v28 + 40) = v41;
      sub_238492D0C();

      swift_bridgeObjectRelease();
      v1 = 0x7FF0000000000000;
      v0 = 0xC3E0000000000001;
      if (v2 == v77 + 1)
      {
        v0 = v75;
        goto LABEL_69;
      }
    }
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    swift_bridgeObjectRetain();
    v2 = sub_238492B2C();
    if (!v2)
      goto LABEL_68;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(*(_QWORD *)(v0 + 136) + 32);
    goto LABEL_6;
  }
  __break(1u);
  __break(1u);
LABEL_80:
  __break(1u);
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
}

uint64_t sub_238454640()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238454690()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2384546FC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v1(*(_QWORD *)(v0 + 88), v3);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t sub_238454788()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);

  v1(v2, v4);
  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238454800()
{
  return swift_task_switch();
}

uint64_t sub_238454814()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)&xmmword_256911CE0 = 0xD000000000000013;
  *((_QWORD *)&xmmword_256911CE0 + 1) = 0x80000002384985B0;
  swift_bridgeObjectRelease();
  v0[5] = &type metadata for ActionExecutionOptions;
  v0[6] = &off_250A27C50;
  v1 = swift_allocObject();
  v0[2] = v1;
  *(_QWORD *)(v1 + 16) = 0xD000000000000013;
  *(_QWORD *)(v1 + 24) = 0x80000002384985B0;
  *(_WORD *)(v1 + 32) = 513;
  *(_QWORD *)(v1 + 40) = 0;
  *(_BYTE *)(v1 + 48) = 1;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_25690B2D0 + dword_25690B2D0);
  v2 = (_QWORD *)swift_task_alloc();
  v0[7] = v2;
  *v2 = v0;
  v2[1] = sub_238454928;
  return v4(0xD000000000000014, 0x8000000238498590, MEMORY[0x24BEE4AF8], 0, 1, (uint64_t)(v0 + 2), 0, 0);
}

uint64_t sub_238454928()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  sub_238436B3C(v2 + 16);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23845499C()
{
  uint64_t v0;

  sub_238436B3C(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2384549D0()
{
  uint64_t v0;

  sub_238435C24((uint64_t *)&unk_25690AA80);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_238493540;
  sub_238492A78();
  sub_2384926A0();
  sub_238435C24(&qword_25690A630);
  sub_238492B08();
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  sub_238492D0C();
  return swift_bridgeObjectRelease();
}

uint64_t method lookup function for ScheduledQueryETARunner()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScheduledQueryETARunner.run(query:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x24BEE4EA0] & *v2) + 0x90);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2384552B0;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ScheduledQueryETARunner.processETAAction(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v8 = *(int **)((*MEMORY[0x24BEE4EA0] & *v3) + 0x98);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_238442750;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of ScheduledQueryETARunner.send(name:message:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v10 = *(int **)((*MEMORY[0x24BEE4EA0] & *v4) + 0xC8);
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_238451080;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ScheduledQueryETARunner.notify(message:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x24BEE4EA0] & *v2) + 0xD8);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2384552B4;
  return v9(a1, a2);
}

unint64_t destroy for ScheduledQueryETARunner.ETAAction(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s23ConditionalEngineClient23ScheduledQueryETARunnerC9ETAActionOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for ScheduledQueryETARunner.ETAAction(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ScheduledQueryETARunner.ETAAction(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t assignWithTake for ScheduledQueryETARunner.ETAAction(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledQueryETARunner.ETAAction(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ScheduledQueryETARunner.ETAAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_238454F14(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_238454F2C(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryETARunner.ETAAction()
{
  return &type metadata for ScheduledQueryETARunner.ETAAction;
}

uint64_t sub_238454F60(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 5u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ETARunnerError(uint64_t a1)
{
  return sub_238454F88(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_238454F88(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 5u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s23ConditionalEngineClient14ETARunnerErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_238454F60(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ETARunnerError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_238454F60(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_238454F88(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ETARunnerError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_238454F88(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ETARunnerError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 6)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ETARunnerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23845510C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 5u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_238455124(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(_QWORD *)result = a2 - 6;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 6;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ETARunnerError()
{
  return &type metadata for ETARunnerError;
}

unint64_t sub_238455150(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23845517C();
  result = sub_2384551C0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_23845517C()
{
  unint64_t result;

  result = qword_25690AA68;
  if (!qword_25690AA68)
  {
    result = MEMORY[0x23B835A40](&unk_238495100, &type metadata for ETARunnerError);
    atomic_store(result, (unint64_t *)&qword_25690AA68);
  }
  return result;
}

unint64_t sub_2384551C0()
{
  unint64_t result;

  result = qword_25690AA70;
  if (!qword_25690AA70)
  {
    result = MEMORY[0x23B835A40](&unk_238495140, &type metadata for ETARunnerError);
    atomic_store(result, (unint64_t *)&qword_25690AA70);
  }
  return result;
}

uint64_t sub_238455204()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_238455238(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_238455270(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_238439040(a2);
    result = MEMORY[0x23B835A40](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CoreRoutineManager.Location.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CoreRoutineManager.Location.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CoreRoutineManager.Location.name.modify())()
{
  return nullsub_1;
}

uint64_t CoreRoutineManager.Location.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CoreRoutineManager.Location.type.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*CoreRoutineManager.Location.type.modify())()
{
  return nullsub_1;
}

double CoreRoutineManager.Location.latitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void CoreRoutineManager.Location.latitude.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*CoreRoutineManager.Location.latitude.modify())()
{
  return nullsub_1;
}

double CoreRoutineManager.Location.longitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

void CoreRoutineManager.Location.longitude.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 40) = a1;
}

uint64_t (*CoreRoutineManager.Location.longitude.modify())()
{
  return nullsub_1;
}

id sub_2384553D8()
{
  uint64_t v0;
  id result;

  type metadata accessor for CoreRoutineManager();
  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  result = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  *(_QWORD *)(v0 + 112) = result;
  *(_QWORD *)(v0 + 120) = 0;
  qword_25690AB10 = v0;
  return result;
}

uint64_t static CoreRoutineManager.shared.getter()
{
  if (qword_256909A90 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_238455474()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23845548C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t);

  v1 = *(_QWORD *)(v0[2] + 120);
  v0[3] = v1;
  if (v1)
  {
    v6 = (uint64_t (*)(uint64_t))v0[1];
    v2 = swift_bridgeObjectRetain();
    return v6(v2);
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    v0[4] = v4;
    *v4 = v0;
    v4[1] = sub_238455520;
    v5 = (_QWORD *)v0[2];
    v4[26] = v5;
    v4[27] = *v5;
    return swift_task_switch();
  }
}

uint64_t sub_238455520(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_238455580()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t (*v4)(unint64_t);

  v1 = v0[2];
  *(_QWORD *)(v1 + 120) = v0[5];
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 + 120);
  if (v2)
    swift_bridgeObjectRetain();
  else
    v2 = sub_23847E654(MEMORY[0x24BEE4AF8]);
  v4 = (uint64_t (*)(unint64_t))v0[1];
  swift_bridgeObjectRetain();
  return v4(v2);
}

uint64_t sub_2384555F4()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 208) = v0;
  *(_QWORD *)(v1 + 216) = *v0;
  return swift_task_switch();
}

uint64_t sub_238455614()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  uint64_t v6;

  if (qword_2569099F8 != -1)
    swift_once();
  v1 = sub_238492574();
  sub_238435CA4(v1, (uint64_t)qword_256909F48);
  v2 = sub_23849255C();
  v3 = sub_238492880();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_238433000, v2, v3, "[CRM] Update cached locations", v4, 2u);
    MEMORY[0x23B835AF4](v4, -1, -1);
  }

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v5;
  *v5 = v0;
  v5[1] = sub_238455724;
  v6 = *(_QWORD *)(v0 + 208);
  v5[5] = 0;
  v5[6] = v6;
  return swift_task_switch();
}

uint64_t sub_238455724(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v3 = *v2;
  *(_QWORD *)(v3 + 232) = a1;
  swift_task_dealloc();
  if (v1)
  {

    *(_OWORD *)(v3 + 256) = 0u;
    *(_OWORD *)(v3 + 272) = 0u;
    *(_OWORD *)(v3 + 240) = 0u;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v3 + 288) = v4;
    *v4 = v3;
    v4[1] = sub_238455918;
    v5 = *(_QWORD *)(v3 + 208);
    v4[5] = 1;
    v4[6] = v5;
  }
  return swift_task_switch();
}

void sub_2384557D4()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  id v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v1 = *(_QWORD *)(v0 + 232);
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    v5 = 0;
    v6 = 0;
    v4 = 0uLL;
    v7 = 0uLL;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v8 = sub_238492B2C();
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x23B835200](0, *(_QWORD *)(v0 + 232));
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(id *)(*(_QWORD *)(v0 + 232) + 32);
LABEL_6:
    swift_bridgeObjectRelease();
    v3 = v2;
    sub_238456354(v3, (uint64_t *)&v11);

    v4 = v11;
    v5 = v12;
    v6 = v13;
    v7 = v14;
LABEL_9:
    *(_OWORD *)(v0 + 272) = v7;
    *(_QWORD *)(v0 + 256) = v5;
    *(_QWORD *)(v0 + 264) = v6;
    *(_OWORD *)(v0 + 240) = v4;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v9;
    *v9 = v0;
    v9[1] = sub_238455918;
    v10 = *(_QWORD *)(v0 + 208);
    v9[5] = 1;
    v9[6] = v10;
    swift_task_switch();
    return;
  }
  __break(1u);
}

uint64_t sub_238455918(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v3 = *v2;
  *(_QWORD *)(v3 + 296) = a1;
  swift_task_dealloc();
  if (v1)
  {

    *(_OWORD *)(v3 + 320) = 0u;
    *(_OWORD *)(v3 + 336) = 0u;
    *(_OWORD *)(v3 + 304) = 0u;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v3 + 352) = v4;
    *v4 = v3;
    v4[1] = sub_238455B0C;
    v5 = *(_QWORD *)(v3 + 208);
    v4[5] = 3;
    v4[6] = v5;
  }
  return swift_task_switch();
}

void sub_2384559C8()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  id v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v1 = *(_QWORD *)(v0 + 296);
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    v5 = 0;
    v6 = 0;
    v4 = 0uLL;
    v7 = 0uLL;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v8 = sub_238492B2C();
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x23B835200](0, *(_QWORD *)(v0 + 296));
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(id *)(*(_QWORD *)(v0 + 296) + 32);
LABEL_6:
    swift_bridgeObjectRelease();
    v3 = v2;
    sub_238456354(v3, (uint64_t *)&v11);

    v4 = v11;
    v5 = v12;
    v6 = v13;
    v7 = v14;
LABEL_9:
    *(_OWORD *)(v0 + 336) = v7;
    *(_QWORD *)(v0 + 320) = v5;
    *(_QWORD *)(v0 + 328) = v6;
    *(_OWORD *)(v0 + 304) = v4;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 352) = v9;
    *v9 = v0;
    v9[1] = sub_238455B0C;
    v10 = *(_QWORD *)(v0 + 208);
    v9[5] = 3;
    v9[6] = v10;
    swift_task_switch();
    return;
  }
  __break(1u);
}

uint64_t sub_238455B0C(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v3 = *v2;
  *(_QWORD *)(v3 + 360) = a1;
  swift_task_dealloc();
  if (v1)
  {

    *(_OWORD *)(v3 + 384) = 0u;
    *(_OWORD *)(v3 + 400) = 0u;
    *(_OWORD *)(v3 + 368) = 0u;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v3 + 416) = v4;
    *v4 = v3;
    v4[1] = sub_238455D00;
    v5 = *(_QWORD *)(v3 + 208);
    v4[5] = 2;
    v4[6] = v5;
  }
  return swift_task_switch();
}

void sub_238455BBC()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  id v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v1 = *(_QWORD *)(v0 + 360);
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    v5 = 0;
    v6 = 0;
    v4 = 0uLL;
    v7 = 0uLL;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v8 = sub_238492B2C();
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x23B835200](0, *(_QWORD *)(v0 + 360));
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = *(id *)(*(_QWORD *)(v0 + 360) + 32);
LABEL_6:
    swift_bridgeObjectRelease();
    v3 = v2;
    sub_238456354(v3, (uint64_t *)&v11);

    v4 = v11;
    v5 = v12;
    v6 = v13;
    v7 = v14;
LABEL_9:
    *(_OWORD *)(v0 + 400) = v7;
    *(_QWORD *)(v0 + 384) = v5;
    *(_QWORD *)(v0 + 392) = v6;
    *(_OWORD *)(v0 + 368) = v4;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 416) = v9;
    *v9 = v0;
    v9[1] = sub_238455D00;
    v10 = *(_QWORD *)(v0 + 208);
    v9[5] = 2;
    v9[6] = v10;
    swift_task_switch();
    return;
  }
  __break(1u);
}

uint64_t sub_238455D00(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)v2 + 424) = a1;
  swift_task_dealloc();
  if (v1)

  return swift_task_switch();
}

void sub_238455D78()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[6];

  v1 = *(_QWORD *)(v0 + 424);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_238492B2C();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    v33 = 0;
    v34 = 0;
    v31 = 0;
    v32 = 0;
    v4 = 0;
    v30 = 0;
    goto LABEL_9;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (id)MEMORY[0x23B835200](0, *(_QWORD *)(v0 + 424));
  }
  else
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v2 = *(id *)(*(_QWORD *)(v0 + 424) + 32);
  }
  swift_bridgeObjectRelease();
  v3 = v2;
  sub_238456354(v3, v35);

  v33 = v35[1];
  v34 = v35[0];
  v4 = v35[3];
  v31 = v35[4];
  v32 = v35[2];
  v30 = v35[5];
LABEL_9:
  v6 = *(_QWORD *)(v0 + 264);
  v7 = sub_23847E654(MEMORY[0x24BEE4AF8]);
  if (v6)
  {
    v8 = *(_QWORD *)(v0 + 272);
    v9 = *(_QWORD *)(v0 + 280);
    v11 = *(_QWORD *)(v0 + 256);
    v10 = *(_QWORD *)(v0 + 264);
    v12 = *(_QWORD *)(v0 + 240);
    v13 = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v0 + 16) = v12;
    *(_QWORD *)(v0 + 24) = v13;
    *(_QWORD *)(v0 + 32) = v11;
    *(_QWORD *)(v0 + 40) = v10;
    *(_QWORD *)(v0 + 48) = v8;
    *(_QWORD *)(v0 + 56) = v9;
    swift_bridgeObjectRetain();
    sub_238457040(v12, v13, v11, v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v35[0] = v7;
    sub_238483CCC((__int128 *)(v0 + 16), v11, v10, isUniquelyReferenced_nonNull_native);
    v7 = v35[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_238457070(v12, v13, v11, v10);
  }
  v15 = *(_QWORD *)(v0 + 328);
  if (v15)
  {
    v17 = *(_QWORD *)(v0 + 336);
    v16 = *(_QWORD *)(v0 + 344);
    v19 = *(_QWORD *)(v0 + 312);
    v18 = *(_QWORD *)(v0 + 320);
    v20 = *(_QWORD *)(v0 + 304);
    *(_QWORD *)(v0 + 64) = v20;
    *(_QWORD *)(v0 + 72) = v19;
    *(_QWORD *)(v0 + 80) = v18;
    *(_QWORD *)(v0 + 88) = v15;
    *(_QWORD *)(v0 + 96) = v17;
    *(_QWORD *)(v0 + 104) = v16;
    swift_bridgeObjectRetain();
    sub_238457040(v20, v19, v18, v15);
    v21 = swift_isUniquelyReferenced_nonNull_native();
    v35[0] = v7;
    sub_238483CCC((__int128 *)(v0 + 64), v18, v15, v21);
    v7 = v35[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_238457070(v20, v19, v18, v15);
  }
  v22 = *(_QWORD *)(v0 + 392);
  if (v22)
  {
    v24 = *(_QWORD *)(v0 + 400);
    v23 = *(_QWORD *)(v0 + 408);
    v26 = *(_QWORD *)(v0 + 376);
    v25 = *(_QWORD *)(v0 + 384);
    v27 = *(_QWORD *)(v0 + 368);
    *(_QWORD *)(v0 + 112) = v27;
    *(_QWORD *)(v0 + 120) = v26;
    *(_QWORD *)(v0 + 128) = v25;
    *(_QWORD *)(v0 + 136) = v22;
    *(_QWORD *)(v0 + 144) = v24;
    *(_QWORD *)(v0 + 152) = v23;
    swift_bridgeObjectRetain();
    sub_238457040(v27, v26, v25, v22);
    v28 = swift_isUniquelyReferenced_nonNull_native();
    v35[0] = v7;
    sub_238483CCC((__int128 *)(v0 + 112), v25, v22, v28);
    v7 = v35[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_238457070(v27, v26, v25, v22);
  }
  if (v4)
  {
    *(_QWORD *)(v0 + 160) = v34;
    *(_QWORD *)(v0 + 168) = v33;
    *(_QWORD *)(v0 + 176) = v32;
    *(_QWORD *)(v0 + 184) = v4;
    *(_QWORD *)(v0 + 192) = v31;
    *(_QWORD *)(v0 + 200) = v30;
    swift_bridgeObjectRetain();
    sub_238457040(v34, v33, v32, v4);
    v29 = swift_isUniquelyReferenced_nonNull_native();
    v35[0] = v7;
    sub_238483CCC((__int128 *)(v0 + 160), v32, v4, v29);
    v7 = v35[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_238457070(v34, v33, v32, v4);
  }
  (*(void (**)(unint64_t))(v0 + 8))(v7);
}

uint64_t sub_238456124()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = sub_23847E654(MEMORY[0x24BEE4AF8]);
  if (v1)
  {
    v4 = *(_QWORD *)(v0 + 272);
    v3 = *(_QWORD *)(v0 + 280);
    v6 = *(_QWORD *)(v0 + 256);
    v5 = *(_QWORD *)(v0 + 264);
    v8 = *(_QWORD *)(v0 + 240);
    v7 = *(_QWORD *)(v0 + 248);
    *(_QWORD *)(v0 + 16) = v8;
    *(_QWORD *)(v0 + 24) = v7;
    *(_QWORD *)(v0 + 32) = v6;
    *(_QWORD *)(v0 + 40) = v5;
    *(_QWORD *)(v0 + 48) = v4;
    *(_QWORD *)(v0 + 56) = v3;
    swift_bridgeObjectRetain();
    sub_238457040(v8, v7, v6, v5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_238483CCC((__int128 *)(v0 + 16), v6, v5, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_238457070(v8, v7, v6, v5);
  }
  v10 = *(_QWORD *)(v0 + 328);
  if (v10)
  {
    v12 = *(_QWORD *)(v0 + 336);
    v11 = *(_QWORD *)(v0 + 344);
    v14 = *(_QWORD *)(v0 + 312);
    v13 = *(_QWORD *)(v0 + 320);
    v15 = *(_QWORD *)(v0 + 304);
    *(_QWORD *)(v0 + 64) = v15;
    *(_QWORD *)(v0 + 72) = v14;
    *(_QWORD *)(v0 + 80) = v13;
    *(_QWORD *)(v0 + 88) = v10;
    *(_QWORD *)(v0 + 96) = v12;
    *(_QWORD *)(v0 + 104) = v11;
    swift_bridgeObjectRetain();
    sub_238457040(v15, v14, v13, v10);
    v16 = swift_isUniquelyReferenced_nonNull_native();
    sub_238483CCC((__int128 *)(v0 + 64), v13, v10, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_238457070(v15, v14, v13, v10);
  }
  v17 = *(_QWORD *)(v0 + 392);
  if (v17)
  {
    v19 = *(_QWORD *)(v0 + 400);
    v18 = *(_QWORD *)(v0 + 408);
    v21 = *(_QWORD *)(v0 + 376);
    v20 = *(_QWORD *)(v0 + 384);
    v22 = *(_QWORD *)(v0 + 368);
    *(_QWORD *)(v0 + 112) = v22;
    *(_QWORD *)(v0 + 120) = v21;
    *(_QWORD *)(v0 + 128) = v20;
    *(_QWORD *)(v0 + 136) = v17;
    *(_QWORD *)(v0 + 144) = v19;
    *(_QWORD *)(v0 + 152) = v18;
    swift_bridgeObjectRetain();
    sub_238457040(v22, v21, v20, v17);
    v23 = swift_isUniquelyReferenced_nonNull_native();
    sub_238483CCC((__int128 *)(v0 + 112), v20, v17, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_238457070(v22, v21, v20, v17);
  }
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v2);
}

void sub_238456354(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v4 = objc_msgSend(a1, sel_type);
  if ((unint64_t)v4 + 1 > 4)
  {
    v7 = 0xE700000000000000;
    v6 = 0x746C7561666564;
  }
  else
  {
    v5 = 8 * ((_QWORD)v4 + 1);
    v6 = *(_QWORD *)&aUnknown_0[v5];
    v7 = *(_QWORD *)((char *)&unk_238495300 + v5);
  }
  v8 = objc_msgSend(a1, sel_mapItem);
  v9 = objc_msgSend(v8, sel_name);

  if (v9)
  {
    v10 = sub_23849261C();
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0;
  }
  v13 = objc_msgSend(a1, sel_location);
  objc_msgSend(v13, sel_latitude);
  v15 = v14;

  v16 = objc_msgSend(a1, sel_location);
  objc_msgSend(v16, sel_longitude);
  v18 = v17;

  *a2 = v10;
  a2[1] = v12;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v15;
  a2[5] = v18;
}

uint64_t sub_2384564A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_2384564BC()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  if (qword_2569099F8 != -1)
    swift_once();
  v1 = sub_238492574();
  sub_238435CA4(v1, (uint64_t)qword_256909F48);
  v2 = sub_23849255C();
  v3 = sub_238492880();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = v0[5];
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v14 = v6;
    *(_DWORD *)v5 = 136315138;
    v0[3] = v4;
    type metadata accessor for RTLocationOfInterestType();
    v7 = sub_23849264C();
    v0[4] = sub_23843604C(v7, v8, &v14);
    sub_238492934();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_238433000, v2, v3, "[CRM] fetchLocations: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v6, -1, -1);
    MEMORY[0x23B835AF4](v5, -1, -1);
  }

  v10 = v0[5];
  v9 = v0[6];
  sub_238456D10();
  v11 = swift_task_alloc();
  v0[7] = v11;
  *(_QWORD *)(v11 + 16) = v9;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = (_QWORD *)swift_task_alloc();
  v0[8] = v12;
  sub_238435C24(&qword_25690AC20);
  *v12 = v0;
  v12[1] = sub_2384566E0;
  return sub_238492C88();
}

uint64_t sub_2384566E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_238456750()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23845675C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_238456790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[6];

  v6 = sub_238435C24(&qword_25690AC28);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = *(void **)(a2 + 112);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_238456F9C;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_238456C20;
  aBlock[3] = &unk_250A25458;
  v12 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v9, sel_fetchLocationsOfInterestOfType_withHandler_, a3, v12);
  _Block_release(v12);
}

uint64_t sub_2384568CC(unint64_t a1, id a2)
{
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v19;

  if (a2)
  {
    v3 = a2;
    if (qword_2569099F8 != -1)
      swift_once();
    v4 = sub_238492574();
    sub_238435CA4(v4, (uint64_t)qword_256909F48);
    v5 = a2;
    v6 = a2;
    v7 = sub_23849255C();
    v8 = sub_238492868();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 138412290;
      v11 = a2;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      sub_238492934();
      *v10 = v19;

      _os_log_impl(&dword_238433000, v7, v8, "[CRM] fetchLocations error: %@", v9, 0xCu);
      sub_238435C24(&qword_25690A290);
      swift_arrayDestroy();
      MEMORY[0x23B835AF4](v10, -1, -1);
      MEMORY[0x23B835AF4](v9, -1, -1);
    }
    else
    {

    }
    sub_238435C24(&qword_25690AC28);
    return sub_2384927B4();
  }
  else
  {
    if (a1)
      v12 = a1;
    else
      v12 = MEMORY[0x24BEE4AF8];
    v13 = qword_2569099F8;
    swift_bridgeObjectRetain();
    if (v13 != -1)
      swift_once();
    v14 = sub_238492574();
    sub_238435CA4(v14, (uint64_t)qword_256909F48);
    swift_bridgeObjectRetain();
    v15 = sub_23849255C();
    v16 = sub_238492880();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v17 = 134217984;
      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_238492B2C();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_238492934();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_238433000, v15, v16, "[CRM] fetchLocations received %ld", v17, 0xCu);
      MEMORY[0x23B835AF4](v17, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain();
    sub_238435C24(&qword_25690AC28);
    return sub_2384927C0();
  }
}

uint64_t sub_238456C20(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_238457004();
    v4 = sub_23849276C();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t CoreRoutineManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t CoreRoutineManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t CoreRoutineManager.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_238456D00()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_238456D10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25690AB28;
  if (!qword_25690AB28)
  {
    v1 = type metadata accessor for CoreRoutineManager();
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for CoreRoutineManager, v1);
    atomic_store(result, (unint64_t *)&qword_25690AB28);
  }
  return result;
}

uint64_t type metadata accessor for CoreRoutineManager()
{
  return objc_opt_self();
}

uint64_t sub_238456D74()
{
  if (qword_256909A90 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_238456DB4()
{
  type metadata accessor for CoreRoutineManager();
  return sub_238492A30();
}

uint64_t method lookup function for CoreRoutineManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreRoutineManager.fetchLocations()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 136) + *(_QWORD *)(*(_QWORD *)v0 + 136));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_238456E3C;
  return v4();
}

uint64_t sub_238456E3C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t getEnumTagSinglePayload for CoreRoutineManager.Location(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreRoutineManager.Location(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreRoutineManager.Location()
{
  return &type metadata for CoreRoutineManager.Location;
}

void sub_238456F30(uint64_t a1)
{
  uint64_t v1;

  sub_238456790(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_238456F38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_238435C24(&qword_25690AC28);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_238456F9C(unint64_t a1, void *a2)
{
  sub_238435C24(&qword_25690AC28);
  return sub_2384568CC(a1, a2);
}

uint64_t sub_238456FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_238456FFC()
{
  return swift_release();
}

unint64_t sub_238457004()
{
  unint64_t result;

  result = qword_25690AC30;
  if (!qword_25690AC30)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25690AC30);
  }
  return result;
}

uint64_t sub_238457040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_238457070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_2384570A0(char a1)
{
  unint64_t v1;
  uint64_t inited;
  uint64_t v3;

  if ((a1 & 1) != 0)
    v1 = 0x80000002384987F0;
  else
    v1 = 0x8000000238498820;
  sub_238435C24(&qword_256909BB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_238493540;
  *(_QWORD *)(inited + 32) = sub_23849261C();
  *(_QWORD *)(inited + 40) = v3;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = 0xD000000000000020;
  *(_QWORD *)(inited + 56) = v1;
  return sub_23847E2BC(inited);
}

unint64_t sub_238457140(char a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t inited;
  uint64_t v4;

  v1 = 0xD000000000000014;
  if (a1)
  {
    if (a1 == 1)
      v1 = 0xD000000000000017;
    else
      v1 = 0xD000000000000031;
    if (a1 == 1)
      v2 = 0x8000000238498890;
    else
      v2 = 0x8000000238498850;
  }
  else
  {
    v2 = 0x80000002384988B0;
  }
  sub_238435C24(&qword_256909BB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_238493540;
  *(_QWORD *)(inited + 32) = sub_23849261C();
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v1;
  *(_QWORD *)(inited + 56) = v2;
  return sub_23847E2BC(inited);
}

BOOL sub_238457214(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_23845722C()
{
  return 0xD000000000000020;
}

unint64_t sub_23845725C()
{
  char *v0;

  return sub_2384570A0(*v0);
}

uint64_t sub_238457264()
{
  sub_2384654D8();
  return sub_238492CC4();
}

uint64_t sub_23845728C()
{
  sub_2384654D8();
  return sub_238492CB8();
}

uint64_t ScheduledQueryStandardRunner.run(query:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[8] = a1;
  v2[9] = a2;
  v3 = sub_238492514();
  v2[10] = v3;
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v4 = sub_2384924E4();
  v2[14] = v4;
  v2[15] = *(_QWORD *)(v4 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v5 = sub_238492574();
  v2[20] = v5;
  v2[21] = *(_QWORD *)(v5 - 8);
  v2[22] = swift_task_alloc();
  v6 = sub_238492508();
  v2[23] = v6;
  v2[24] = *(_QWORD *)(v6 - 8);
  v2[25] = swift_task_alloc();
  sub_238435C24(&qword_25690AC40);
  v2[26] = swift_task_alloc();
  sub_238435C24(&qword_25690A518);
  v2[27] = swift_task_alloc();
  sub_238435C24(&qword_25690AC48);
  v2[28] = swift_task_alloc();
  v7 = sub_23849216C();
  v2[29] = v7;
  v2[30] = *(_QWORD *)(v7 - 8);
  v2[31] = swift_task_alloc();
  v8 = sub_2384921A8();
  v2[32] = v8;
  v2[33] = *(_QWORD *)(v8 - 8);
  v2[34] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_238457480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *ETARunner;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t SendMessageRunnerV07extractfG05querySS4name_SS7messagetSgSS_tFZ_0;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t HomeAccessoryToggleRunnerV07extracthG05querySSSgSS_tFZ_0;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t SetFocusRunnerV07extractG4Type5querySSSgSS_tFZ_0;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  unint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_signpost_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, _QWORD, uint64_t);
  uint8_t *v57;
  os_signpost_id_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[2];
  uint64_t v65;
  uint64_t v66;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  ETARunner = (objc_class *)type metadata accessor for ScheduledQueryETARunner();
  static ScheduledQueryETARunner.extractActionType(query:)(v1, v2, v64);
  v4 = v64[0];
  v5 = v64[1];
  *(_QWORD *)(v0 + 280) = v64[0];
  *(_QWORD *)(v0 + 288) = v5;
  v6 = v65;
  v7 = v66;
  *(_QWORD *)(v0 + 296) = v65;
  *(_QWORD *)(v0 + 304) = v7;
  if (v7)
  {
    *(_QWORD *)(v0 + 312) = objc_msgSend(objc_allocWithZone(ETARunner), sel_init);
    *(_QWORD *)(v0 + 16) = v4;
    *(_QWORD *)(v0 + 24) = v5;
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 320) = v8;
    *v8 = v0;
    v8[1] = sub_238457AA4;
    return sub_23844F764((_OWORD *)(v0 + 16), v6, v7);
  }
  else
  {
    SendMessageRunnerV07extractfG05querySS4name_SS7messagetSgSS_tFZ_0 = _s23ConditionalEngineClient31ScheduledQuerySendMessageRunnerV07extractfG05querySS4name_SS7messagetSgSS_tFZ_0(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
    *(_QWORD *)(v0 + 352) = v11;
    if (v11)
    {
      v14 = SendMessageRunnerV07extractfG05querySS4name_SS7messagetSgSS_tFZ_0;
      v15 = v11;
      v16 = v12;
      v17 = v13;
      *(_QWORD *)(v0 + 360) = v13;
      v18 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 368) = v18;
      *v18 = v0;
      v18[1] = sub_238457C1C;
      return ScheduledQuerySendMessageRunner.send(name:message:)(v14, v15, v16, v17);
    }
    else
    {
      HomeAccessoryToggleRunnerV07extracthG05querySSSgSS_tFZ_0 = _s23ConditionalEngineClient39ScheduledQueryHomeAccessoryToggleRunnerV07extracthG05querySSSgSS_tFZ_0();
      *(_QWORD *)(v0 + 384) = v20;
      if (v20)
      {
        v21 = HomeAccessoryToggleRunnerV07extracthG05querySSSgSS_tFZ_0;
        v22 = v20;
        v23 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 392) = v23;
        *v23 = v0;
        v23[1] = sub_238457D64;
        return ScheduledQueryHomeAccessoryToggleRunner.toggle(accessory:)(v21, v22);
      }
      else
      {
        SetFocusRunnerV07extractG4Type5querySSSgSS_tFZ_0 = _s23ConditionalEngineClient28ScheduledQuerySetFocusRunnerV07extractG4Type5querySSSgSS_tFZ_0();
        *(_QWORD *)(v0 + 408) = v25;
        if (v25)
        {
          v26 = SetFocusRunnerV07extractG4Type5querySSSgSS_tFZ_0;
          v27 = v25;
          v28 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 416) = v28;
          *v28 = v0;
          v28[1] = sub_238457EA4;
          return ScheduledQuerySetFocusRunner.setFocus(focusType:)(v26, v27);
        }
        else
        {
          if (qword_256909A08 != -1)
            swift_once();
          *(_QWORD *)(v0 + 432) = sub_238435CA4(*(_QWORD *)(v0 + 160), (uint64_t)qword_256909F78);
          swift_bridgeObjectRetain_n();
          v29 = sub_23849255C();
          v30 = sub_23849285C();
          v31 = os_log_type_enabled(v29, v30);
          v32 = *(_QWORD *)(v0 + 72);
          if (v31)
          {
            v62 = *(_QWORD *)(v0 + 64);
            v33 = (uint8_t *)swift_slowAlloc();
            v34 = swift_slowAlloc();
            v64[0] = v34;
            *(_DWORD *)v33 = 136315138;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v0 + 56) = sub_23843604C(v62, v32, v64);
            sub_238492934();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_238433000, v29, v30, "Running plan: %s", v33, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B835AF4](v34, -1, -1);
            MEMORY[0x23B835AF4](v33, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          v35 = *(_QWORD *)(v0 + 272);
          v36 = *(_QWORD *)(v0 + 248);
          v61 = *(_QWORD *)(v0 + 264);
          v63 = *(_QWORD *)(v0 + 256);
          v38 = *(_QWORD *)(v0 + 232);
          v37 = *(_QWORD *)(v0 + 240);
          v40 = *(_QWORD *)(v0 + 216);
          v39 = *(_QWORD *)(v0 + 224);
          v41 = *(_QWORD *)(v0 + 208);
          v43 = *(_QWORD *)(v0 + 64);
          v42 = *(_QWORD *)(v0 + 72);
          swift_bridgeObjectRetain();
          MEMORY[0x23B8348D0](v43, v42);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v37 + 104))(v36, *MEMORY[0x24BE52800], v38);
          v44 = sub_238492178();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v39, 1, 1, v44);
          v45 = sub_238491FD4();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v40, 1, 1, v45);
          v46 = sub_238492184();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v41, 1, 1, v46);
          sub_238492190();
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v61 + 104))(v35, *MEMORY[0x24BE52D10], v63);
          if (qword_256909A28 != -1)
            swift_once();
          v48 = *(_QWORD *)(v0 + 168);
          v47 = *(_QWORD *)(v0 + 176);
          v49 = *(_QWORD *)(v0 + 160);
          v50 = sub_238435CA4(v49, (uint64_t)qword_256909FD8);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v47, v50, v49);
          sub_2384924F0();
          sub_2384924FC();
          sub_2384924CC();
          v51 = sub_2384924FC();
          v52 = sub_2384928C8();
          if ((sub_238492910() & 1) != 0)
          {
            v53 = *(_QWORD *)(v0 + 144);
            v54 = *(_QWORD *)(v0 + 112);
            v55 = *(_QWORD *)(v0 + 120);
            v56 = *(void (**)(uint64_t, _QWORD, uint64_t))(v55 + 16);
            v56(v53, *(_QWORD *)(v0 + 152), v54);
            v57 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v57 = 0;
            v58 = sub_2384924D8();
            _os_signpost_emit_with_name_impl(&dword_238433000, v51, v52, v58, "CE.Runner.Standard", "", v57, 2u);
            MEMORY[0x23B835AF4](v57, -1, -1);

            (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
          }
          else
          {
            v59 = *(_QWORD *)(v0 + 120);

            v56 = *(void (**)(uint64_t, _QWORD, uint64_t))(v59 + 16);
          }
          *(_QWORD *)(v0 + 440) = v56;
          v56(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 112));
          sub_238492544();
          swift_allocObject();
          *(_QWORD *)(v0 + 448) = sub_238492538();
          v60 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 456) = v60;
          *v60 = v0;
          v60[1] = sub_238457FE4;
          return sub_238458B8C(*(_QWORD *)(v0 + 272));
        }
      }
    }
  }
}

uint64_t sub_238457AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v6 = *(_QWORD **)v3;
  *(_QWORD *)(*(_QWORD *)v3 + 328) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    v7 = v6[37];
    v8 = v6[38];
    v9 = v6[35];
    v10 = v6[36];
    v6[42] = a2;
    v6[43] = a1;
    sub_238464A3C(v9, v10, v7, v8);
  }
  return swift_task_switch();
}

uint64_t sub_238457B28()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 344);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v2);
}

uint64_t sub_238457C1C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 376) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 8))(0, 0);
}

uint64_t sub_238457D64()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 400) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 8))(0, 0);
}

uint64_t sub_238457EA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 424) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 8))(0, 0);
}

uint64_t sub_238457FE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 464) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_238458048()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_signpost_id_t v17;
  void (*v18)(uint64_t, uint64_t);
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;

  sub_2384649E8();
  sub_238464504();
  sub_238464A2C(v1);
  v2 = sub_2384924FC();
  sub_23849252C();
  v3 = sub_2384928BC();
  if ((sub_238492910() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 88);
    swift_retain();
    sub_238492550();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == *MEMORY[0x24BEE7810])
    {
      v7 = 0;
      v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));
      v8 = "error=%{signpost.telemetry:number1,public}ld enableTelemetry=YES";
      v7 = 1;
    }
    v13 = *(_QWORD *)(v0 + 136);
    v12 = *(_QWORD *)(v0 + 144);
    v14 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 120);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 440))(v12, v13, v14);
    v16 = swift_slowAlloc();
    *(_BYTE *)v16 = 0;
    *(_BYTE *)(v16 + 1) = v7;
    *(_WORD *)(v16 + 2) = 2050;
    *(_QWORD *)(v0 + 48) = 0;
    sub_238492934();
    v17 = sub_2384924D8();
    _os_signpost_emit_with_name_impl(&dword_238433000, v2, v3, v17, "CE.Runner.Standard", v8, (uint8_t *)v16, 0xCu);
    MEMORY[0x23B835AF4](v16, -1, -1);

    v18 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v18(v13, v14);
    v30 = v18;
    v18(v12, v14);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 120);

    v30 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v30(v9, v10);
  }
  v19 = sub_23849255C();
  v20 = sub_238492880();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_238433000, v19, v20, "Running plan: finished", v21, 2u);
    MEMORY[0x23B835AF4](v21, -1, -1);
  }
  v22 = *(_QWORD *)(v0 + 264);
  v31 = *(_QWORD *)(v0 + 272);
  v23 = *(_QWORD *)(v0 + 256);
  v24 = *(_QWORD *)(v0 + 192);
  v25 = *(_QWORD *)(v0 + 200);
  v26 = *(_QWORD *)(v0 + 184);
  v27 = *(_QWORD *)(v0 + 152);
  v28 = *(_QWORD *)(v0 + 112);

  swift_release();
  v30(v27, v28);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v26);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v31, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t sub_2384583A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 296);
  v4 = *(_QWORD *)(v0 + 280);

  sub_238464A3C(v4, v3, v2, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2384584A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238458598()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238458678()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238458758()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_signpost_id_t v17;
  void (*v18)(uint64_t, uint64_t);
  void *v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  void *v25;
  uint8_t *v26;
  id v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v38)(uint64_t, uint64_t);
  _QWORD *v39;
  uint64_t v40;

  sub_2384649E8();
  sub_238464504();
  sub_238464A2C(v1);
  v2 = sub_2384924FC();
  sub_23849252C();
  v3 = sub_2384928BC();
  if ((sub_238492910() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 80);
    swift_retain();
    sub_238492550();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v5, v6) == *MEMORY[0x24BEE7810])
    {
      v7 = 0;
      v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
      v8 = "error=%{signpost.telemetry:number1,public}ld enableTelemetry=YES";
      v7 = 1;
    }
    v12 = *(_QWORD *)(v0 + 144);
    v13 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 112);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 440))(v12, v14, v15);
    v16 = swift_slowAlloc();
    *(_BYTE *)v16 = 0;
    *(_BYTE *)(v16 + 1) = v7;
    *(_WORD *)(v16 + 2) = 2050;
    *(_QWORD *)(v0 + 40) = 1;
    sub_238492934();
    v17 = sub_2384924D8();
    _os_signpost_emit_with_name_impl(&dword_238433000, v2, v3, v17, "CE.Runner.Standard", v8, (uint8_t *)v16, 0xCu);
    MEMORY[0x23B835AF4](v16, -1, -1);

    v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v18(v14, v15);
    v38 = v18;
    v18(v12, v15);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 120);
    v10 = *(_QWORD *)(v0 + 128);
    v11 = *(_QWORD *)(v0 + 112);

    v38 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v38(v10, v11);
  }
  v19 = *(void **)(v0 + 464);
  v20 = v19;
  v21 = v19;
  v22 = sub_23849255C();
  v23 = sub_238492868();
  v24 = os_log_type_enabled(v22, v23);
  v25 = *(void **)(v0 + 464);
  if (v24)
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v39 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v26 = 138412290;
    v27 = v25;
    v28 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v28;
    sub_238492934();
    *v39 = v28;

    _os_log_impl(&dword_238433000, v22, v23, "Error: %@", v26, 0xCu);
    sub_238435C24(&qword_25690A290);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v39, -1, -1);
    MEMORY[0x23B835AF4](v26, -1, -1);
  }
  else
  {

  }
  v29 = v22;
  v30 = *(_QWORD *)(v0 + 264);
  v40 = *(_QWORD *)(v0 + 272);
  v31 = *(_QWORD *)(v0 + 256);
  v32 = *(_QWORD *)(v0 + 192);
  v33 = *(_QWORD *)(v0 + 200);
  v34 = *(_QWORD *)(v0 + 184);
  v35 = *(_QWORD *)(v0 + 152);
  v36 = *(_QWORD *)(v0 + 112);

  swift_willThrow();
  swift_release();
  v38(v35, v36);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v34);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v40, v31);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238458B8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1[7] = a1;
  v2 = sub_23849213C();
  v1[8] = v2;
  v1[9] = *(_QWORD *)(v2 - 8);
  v1[10] = swift_task_alloc();
  v3 = sub_2384920B8();
  v1[11] = v3;
  v1[12] = *(_QWORD *)(v3 - 8);
  v1[13] = swift_task_alloc();
  v4 = sub_238492130();
  v1[14] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[15] = v5;
  v1[16] = *(_QWORD *)(v5 + 64);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  v6 = sub_2384920AC();
  v1[19] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[20] = v7;
  v1[21] = *(_QWORD *)(v7 + 64);
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v8 = sub_23849222C();
  v1[25] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[26] = v9;
  v1[27] = *(_QWORD *)(v9 + 64);
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  v10 = sub_2384921D8();
  v1[31] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[32] = v11;
  v1[33] = *(_QWORD *)(v11 + 64);
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v12 = sub_2384922B0();
  v1[37] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v1[38] = v13;
  v1[39] = *(_QWORD *)(v13 + 64);
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  v14 = sub_238492220();
  v1[43] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v1[44] = v15;
  v1[45] = *(_QWORD *)(v15 + 64);
  v1[46] = swift_task_alloc();
  v1[47] = swift_task_alloc();
  v1[48] = swift_task_alloc();
  v16 = sub_2384922A4();
  v1[49] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v1[50] = v17;
  v1[51] = *(_QWORD *)(v17 + 64);
  v1[52] = swift_task_alloc();
  v1[53] = swift_task_alloc();
  v1[54] = swift_task_alloc();
  v18 = sub_238492298();
  v1[55] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v1[56] = v19;
  v1[57] = *(_QWORD *)(v19 + 64);
  v1[58] = swift_task_alloc();
  v1[59] = swift_task_alloc();
  v1[60] = swift_task_alloc();
  v20 = sub_238492214();
  v1[61] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v1[62] = v21;
  v1[63] = *(_QWORD *)(v21 + 64);
  v1[64] = swift_task_alloc();
  v1[65] = swift_task_alloc();
  v1[66] = swift_task_alloc();
  v22 = sub_238492208();
  v1[67] = v22;
  v23 = *(_QWORD *)(v22 - 8);
  v1[68] = v23;
  v1[69] = *(_QWORD *)(v23 + 64);
  v1[70] = swift_task_alloc();
  v1[71] = swift_task_alloc();
  v1[72] = swift_task_alloc();
  v24 = sub_2384921E4();
  v1[73] = v24;
  v25 = *(_QWORD *)(v24 - 8);
  v1[74] = v25;
  v1[75] = *(_QWORD *)(v25 + 64);
  v1[76] = swift_task_alloc();
  v1[77] = swift_task_alloc();
  v1[78] = swift_task_alloc();
  v26 = sub_2384920D0();
  v1[79] = v26;
  v27 = *(_QWORD *)(v26 - 8);
  v1[80] = v27;
  v1[81] = *(_QWORD *)(v27 + 64);
  v1[82] = swift_task_alloc();
  v1[83] = swift_task_alloc();
  v1[84] = swift_task_alloc();
  v28 = sub_2384921CC();
  v1[85] = v28;
  v1[86] = *(_QWORD *)(v28 - 8);
  v1[87] = swift_task_alloc();
  v29 = sub_2384921C0();
  v1[88] = v29;
  v30 = *(_QWORD *)(v29 - 8);
  v1[89] = v30;
  v1[90] = *(_QWORD *)(v30 + 64);
  v1[91] = swift_task_alloc();
  v1[92] = swift_task_alloc();
  v31 = sub_238492070();
  v1[93] = v31;
  v1[94] = *(_QWORD *)(v31 - 8);
  v1[95] = swift_task_alloc();
  v32 = sub_238492154();
  v1[96] = v32;
  v33 = *(_QWORD *)(v32 - 8);
  v1[97] = v33;
  v1[98] = *(_QWORD *)(v33 + 64);
  v1[99] = swift_task_alloc();
  v1[100] = swift_task_alloc();
  v34 = sub_238492574();
  v1[101] = v34;
  v1[102] = *(_QWORD *)(v34 - 8);
  v1[103] = swift_task_alloc();
  v1[104] = swift_task_alloc();
  v1[105] = swift_task_alloc();
  v1[106] = swift_task_alloc();
  v1[107] = swift_task_alloc();
  v1[108] = swift_task_alloc();
  v1[109] = swift_task_alloc();
  v1[110] = swift_task_alloc();
  v1[111] = swift_task_alloc();
  v1[112] = swift_task_alloc();
  v1[113] = swift_task_alloc();
  v1[114] = swift_task_alloc();
  v1[115] = swift_task_alloc();
  v1[116] = swift_task_alloc();
  v1[117] = swift_task_alloc();
  v1[118] = swift_task_alloc();
  v1[119] = swift_task_alloc();
  v1[120] = swift_task_alloc();
  v1[121] = swift_task_alloc();
  v1[122] = swift_task_alloc();
  v1[123] = swift_task_alloc();
  v1[124] = swift_task_alloc();
  v1[125] = swift_task_alloc();
  v1[126] = swift_task_alloc();
  v1[127] = swift_task_alloc();
  v1[128] = swift_task_alloc();
  v1[129] = swift_task_alloc();
  v1[130] = swift_task_alloc();
  v1[131] = swift_task_alloc();
  v1[132] = swift_task_alloc();
  v1[133] = swift_task_alloc();
  v1[134] = swift_task_alloc();
  v1[135] = swift_task_alloc();
  v1[136] = swift_task_alloc();
  v1[137] = swift_task_alloc();
  v1[138] = swift_task_alloc();
  v1[139] = swift_task_alloc();
  v1[140] = swift_task_alloc();
  v1[141] = swift_task_alloc();
  v1[142] = swift_task_alloc();
  v1[143] = swift_task_alloc();
  v1[144] = swift_task_alloc();
  v1[145] = swift_task_alloc();
  v1[146] = swift_task_alloc();
  v1[147] = swift_task_alloc();
  v1[148] = swift_task_alloc();
  v1[149] = swift_task_alloc();
  v1[150] = swift_task_alloc();
  v35 = sub_23849228C();
  v1[151] = v35;
  v36 = *(_QWORD *)(v35 - 8);
  v1[152] = v36;
  v1[153] = *(_QWORD *)(v36 + 64);
  v1[154] = swift_task_alloc();
  v1[155] = swift_task_alloc();
  sub_238435C24(&qword_25690AC68);
  v1[156] = swift_task_alloc();
  v37 = sub_2384921FC();
  v1[157] = v37;
  v1[158] = *(_QWORD *)(v37 - 8);
  v1[159] = swift_task_alloc();
  v38 = sub_2384921A8();
  v1[160] = v38;
  v1[161] = *(_QWORD *)(v38 - 8);
  v1[162] = swift_task_alloc();
  v1[163] = swift_task_alloc();
  v39 = sub_238492244();
  v1[164] = v39;
  v1[165] = *(_QWORD *)(v39 - 8);
  v1[166] = swift_task_alloc();
  v1[167] = swift_task_alloc();
  sub_238435C24(&qword_25690AC70);
  v1[168] = swift_task_alloc();
  v40 = sub_238491FD4();
  v1[169] = v40;
  v1[170] = *(_QWORD *)(v40 - 8);
  v1[171] = swift_task_alloc();
  v1[172] = swift_task_alloc();
  sub_238435C24(&qword_25690AC78);
  v1[173] = swift_task_alloc();
  v41 = sub_238492268();
  v1[174] = v41;
  v1[175] = *(_QWORD *)(v41 - 8);
  v1[176] = swift_task_alloc();
  v42 = sub_2384920A0();
  v1[177] = v42;
  v1[178] = *(_QWORD *)(v42 - 8);
  v1[179] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_238459458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  _DWORD *v18;
  _DWORD *v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;

  sub_238492118();
  *(_QWORD *)(v0 + 1440) = sub_23849210C();
  *(_QWORD *)(v0 + 1448) = sub_238492100();
  v22 = *(_QWORD *)(v0 + 1408);
  v23 = *(_QWORD *)(v0 + 1400);
  v1 = *(_QWORD *)(v0 + 1384);
  v2 = *(_QWORD *)(v0 + 1376);
  v25 = *(_QWORD *)(v0 + 1392);
  v27 = *(_QWORD *)(v0 + 1360);
  v3 = *(_QWORD *)(v0 + 1352);
  v4 = *(_QWORD *)(v0 + 1344);
  sub_23849207C();
  v5 = *MEMORY[0x24BE537F0];
  v6 = sub_238492250();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(v1, v5, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v1, 0, 1, v6);
  sub_238492088();
  sub_23849225C();
  _s23ConditionalEngineClient0A5EventV2id10Foundation4UUIDVvg_0();
  sub_238491FA4();
  v8 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  *(_QWORD *)(v0 + 1456) = v8;
  v8(v2, v3);
  _s23ConditionalEngineClient0A5EventV2id10Foundation4UUIDVvg_0();
  sub_238491FA4();
  v8(v2, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v4, v22, v25);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v4, 0, 1, v25);
  sub_2384920E8();
  v9 = *(_QWORD *)(v0 + 1376);
  v28 = *(_QWORD *)(v0 + 1368);
  v10 = *(_QWORD *)(v0 + 1360);
  v11 = *(_QWORD *)(v0 + 1304);
  v12 = *(_QWORD *)(v0 + 1288);
  v29 = *(_QWORD *)(v0 + 1280);
  v24 = *(_QWORD *)(v0 + 56);
  v26 = *(_QWORD *)(v0 + 1352);
  sub_238464A78(*(_QWORD *)(v0 + 1344));
  swift_bridgeObjectRelease();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  *(_QWORD *)(v0 + 1464) = v13;
  v13(v9, v28, v26);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v24, v29);
  sub_238492238();
  sub_2384920F4();
  v14 = *(_QWORD *)(v0 + 1336);
  v15 = *(_QWORD *)(v0 + 1320);
  v16 = *(_QWORD *)(v0 + 1312);
  swift_bridgeObjectRelease();
  v17 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  *(_QWORD *)(v0 + 1472) = v17;
  v17(v14, v16);
  sub_2384921F0();
  v18 = (_DWORD *)MEMORY[0x24BE52D28];
  *(_DWORD *)(v0 + 1512) = *MEMORY[0x24BE52D30];
  *(_DWORD *)(v0 + 1516) = *v18;
  *(_DWORD *)(v0 + 1520) = *MEMORY[0x24BE52CC0];
  v19 = (_DWORD *)MEMORY[0x24BE52818];
  *(_DWORD *)(v0 + 1524) = *MEMORY[0x24BE52758];
  *(_DWORD *)(v0 + 1528) = *v19;
  *(_DWORD *)(v0 + 1532) = *MEMORY[0x24BE52830];
  v30 = (char *)&dword_25690AC80 + dword_25690AC80;
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1480) = v20;
  *v20 = v0;
  v20[1] = sub_238459E78;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v30)(*(_QWORD *)(v0 + 1248), 0, 0);
}

uint64_t sub_238459E78()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1488) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_238459EDC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(unint64_t, uint64_t, uint64_t);
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  void *v82;
  uint8_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*isa)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  void (*v117)(uint64_t, uint64_t, uint64_t);
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(uint64_t, uint64_t, uint64_t);
  uint64_t v128;
  void (*v129)(uint64_t, uint64_t, uint64_t);
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint8_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(uint64_t, uint64_t, uint64_t);
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void (*v162)(uint64_t, uint64_t, uint64_t);
  uint64_t v163;
  void (*v164)(uint64_t, uint64_t, uint64_t);
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  uint8_t *v179;
  uint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void (*v190)(uint64_t, uint64_t, uint64_t);
  NSObject *v191;
  os_log_type_t v192;
  uint8_t *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t v203;
  NSObject *v204;
  os_log_type_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  uint64_t v212;
  uint64_t v213;
  uint8_t *v214;
  uint64_t v215;
  uint64_t (**v216)(uint64_t, uint64_t, uint64_t);
  uint64_t (**v217)(uint64_t, uint64_t, uint64_t);
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  void (*v230)(uint64_t, uint64_t, uint64_t);
  NSObject *v231;
  os_log_type_t v232;
  uint8_t *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  void (*v242)(uint64_t, uint64_t, uint64_t);
  NSObject *v243;
  os_log_type_t v244;
  uint8_t *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  uint64_t v261;
  NSObject *v262;
  os_log_type_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  _QWORD *v269;
  uint8_t *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  void (*v280)(uint64_t, uint64_t, uint64_t);
  NSObject *v281;
  os_log_type_t v282;
  uint8_t *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  void (*v292)(uint64_t, uint64_t, uint64_t);
  NSObject *v293;
  os_log_type_t v294;
  uint8_t *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  unint64_t v308;
  uint64_t v309;
  NSObject *v310;
  os_log_type_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  _QWORD *v317;
  uint8_t *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  unint64_t v327;
  uint64_t v328;
  NSObject *v329;
  os_log_type_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  _QWORD *v336;
  uint8_t *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  void (*v347)(uint64_t, uint64_t, uint64_t);
  NSObject *v348;
  os_log_type_t v349;
  uint8_t *v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  void (*v359)(uint64_t, uint64_t, uint64_t);
  NSObject *v360;
  os_log_type_t v361;
  uint8_t *v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  unint64_t v380;
  uint64_t v381;
  NSObject *v382;
  os_log_type_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  _QWORD *v389;
  uint8_t *v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  unint64_t v399;
  uint64_t v400;
  NSObject *v401;
  os_log_type_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  _QWORD *v408;
  uint8_t *v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  void (*v419)(uint64_t, uint64_t, uint64_t);
  NSObject *v420;
  os_log_type_t v421;
  uint8_t *v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  void (*v431)(uint64_t, uint64_t, uint64_t);
  NSObject *v432;
  os_log_type_t v433;
  uint8_t *v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  unint64_t v446;
  uint64_t v447;
  NSObject *v448;
  os_log_type_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  _QWORD *v455;
  uint8_t *v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  unint64_t v465;
  uint64_t v466;
  NSObject *v467;
  os_log_type_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  _QWORD *v474;
  uint8_t *v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  void (*v485)(uint64_t, uint64_t, uint64_t);
  NSObject *v486;
  os_log_type_t v487;
  uint8_t *v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  void (*v497)(uint64_t, uint64_t, uint64_t);
  NSObject *v498;
  os_log_type_t v499;
  uint8_t *v500;
  uint64_t v501;
  uint64_t v502;
  _BYTE *v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  _BYTE *v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  unint64_t v517;
  uint64_t v518;
  NSObject *v519;
  os_log_type_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  _QWORD *v526;
  uint8_t *v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  unint64_t v535;
  uint64_t v536;
  NSObject *v537;
  os_log_type_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  _QWORD *v544;
  uint8_t *v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  void (*v553)(uint64_t, uint64_t, uint64_t);
  uint64_t v554;
  void (*v555)(uint64_t, uint64_t, uint64_t);
  NSObject *v556;
  os_log_type_t v557;
  uint8_t *v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  void (*v566)(uint64_t, uint64_t, uint64_t);
  uint64_t v567;
  void (*v568)(uint64_t, uint64_t, uint64_t);
  NSObject *v569;
  os_log_type_t v570;
  uint8_t *v571;
  _QWORD *v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  _BYTE *v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  _BYTE *v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  unint64_t v598;
  uint64_t v599;
  NSObject *v600;
  os_log_type_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  _QWORD *v607;
  uint8_t *v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  unint64_t v616;
  uint64_t v617;
  NSObject *v618;
  os_log_type_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  _QWORD *v625;
  uint8_t *v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  void (*v634)(uint64_t, uint64_t, uint64_t);
  uint64_t v635;
  void (*v636)(uint64_t, uint64_t, uint64_t);
  NSObject *v637;
  os_log_type_t v638;
  uint8_t *v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  void (*v647)(uint64_t, uint64_t, uint64_t);
  uint64_t v648;
  void (*v649)(uint64_t, uint64_t, uint64_t);
  NSObject *v650;
  os_log_type_t v651;
  uint8_t *v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  unint64_t v673;
  uint64_t v674;
  NSObject *v675;
  os_log_type_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  _QWORD *v682;
  uint8_t *v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  unint64_t v691;
  uint64_t v692;
  NSObject *v693;
  os_log_type_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  _QWORD *v700;
  uint8_t *v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  void (*v709)(uint64_t, uint64_t, uint64_t);
  uint64_t v710;
  void (*v711)(uint64_t, uint64_t, uint64_t);
  NSObject *v712;
  os_log_type_t v713;
  uint8_t *v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  void (*v722)(uint64_t, uint64_t, uint64_t);
  uint64_t v723;
  void (*v724)(uint64_t, uint64_t, uint64_t);
  NSObject *v725;
  os_log_type_t v726;
  uint8_t *v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  unint64_t v739;
  uint64_t v740;
  NSObject *v741;
  os_log_type_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  _QWORD *v748;
  uint8_t *v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  unint64_t v757;
  uint64_t v758;
  NSObject *v759;
  os_log_type_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  _QWORD *v766;
  uint8_t *v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  void (*v775)(uint64_t, uint64_t, uint64_t);
  uint64_t v776;
  void (*v777)(uint64_t, uint64_t, uint64_t);
  NSObject *v778;
  os_log_type_t v779;
  uint8_t *v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;
  uint64_t v787;
  void (*v788)(uint64_t, uint64_t, uint64_t);
  uint64_t v789;
  void (*v790)(uint64_t, uint64_t, uint64_t);
  NSObject *v791;
  os_log_type_t v792;
  uint8_t *v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  unint64_t v805;
  uint64_t v806;
  NSObject *v807;
  os_log_type_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  _QWORD *v814;
  uint8_t *v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  unint64_t v823;
  uint64_t v824;
  NSObject *v825;
  os_log_type_t v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t v830;
  uint64_t v831;
  _QWORD *v832;
  uint8_t *v833;
  uint64_t v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  uint64_t v840;
  void (*v841)(uint64_t, uint64_t, uint64_t);
  uint64_t v842;
  void (*v843)(uint64_t, uint64_t, uint64_t);
  NSObject *v844;
  os_log_type_t v845;
  uint8_t *v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  uint64_t v850;
  uint64_t v851;
  uint64_t v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  unint64_t v856;
  uint64_t v857;
  unint64_t v858;
  uint64_t v859;
  os_log_type_t v860;
  uint64_t v861;
  uint64_t v862;
  uint64_t v863;
  uint64_t v864;
  uint64_t v865;
  uint64_t v866;
  uint64_t v867;
  uint64_t v868;
  uint64_t v869;
  _QWORD *v870;
  uint8_t *v871;
  uint64_t v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  uint64_t v876;
  uint64_t v877;
  uint64_t v878;
  uint64_t v879;
  uint64_t v880;
  uint64_t v881;
  uint64_t v882;
  unint64_t v883;
  uint64_t v884;
  NSObject *v885;
  os_log_type_t v886;
  uint64_t v887;
  uint64_t v888;
  uint64_t v889;
  uint64_t v890;
  uint64_t v891;
  _QWORD *v892;
  uint8_t *v893;
  uint64_t v894;
  uint64_t v895;
  uint64_t v896;
  uint64_t v897;
  uint64_t v898;
  uint64_t v899;
  uint64_t v900;
  unint64_t v901;
  uint64_t v902;
  NSObject *v903;
  os_log_type_t v904;
  uint64_t v905;
  uint64_t v906;
  uint64_t v907;
  uint64_t v908;
  uint64_t v909;
  _QWORD *v910;
  uint8_t *v911;
  uint64_t v912;
  uint64_t v913;
  uint64_t v914;
  uint64_t v915;
  uint64_t v916;
  uint64_t v917;
  uint64_t v918;
  uint64_t v919;
  uint64_t v920;
  unint64_t v921;
  uint64_t v922;
  unint64_t v923;
  uint64_t v924;
  os_log_type_t v925;
  uint64_t v926;
  uint64_t v927;
  uint64_t v928;
  uint64_t v929;
  uint64_t v930;
  uint64_t v931;
  uint64_t v932;
  uint64_t v933;
  uint64_t v934;
  _QWORD *v935;
  uint8_t *v936;
  uint64_t v937;
  uint64_t v938;
  uint64_t v939;
  uint64_t v940;
  uint64_t v941;
  uint64_t v942;
  uint64_t v943;
  uint64_t v944;
  uint64_t v945;
  uint64_t v946;
  uint64_t v947;
  uint64_t v948;
  uint64_t v949;
  uint64_t v950;
  uint64_t v951;
  uint64_t v952;
  uint64_t v953;
  _BYTE *v954;
  uint64_t v955;
  uint64_t v956;
  uint64_t v957;
  uint64_t v958;
  uint64_t v959;
  uint64_t v960;
  uint64_t v961;
  unint64_t v962;
  uint64_t v963;
  NSObject *v964;
  os_log_type_t v965;
  uint64_t v966;
  uint64_t v967;
  uint64_t v968;
  uint64_t v969;
  uint64_t v970;
  _QWORD *v971;
  uint8_t *v972;
  uint64_t v973;
  uint64_t v974;
  uint64_t v975;
  _BYTE *v976;
  uint64_t v977;
  uint64_t v978;
  _BYTE *v979;
  uint64_t v980;
  uint64_t v981;
  uint64_t v982;
  uint64_t v983;
  uint64_t v984;
  uint64_t v985;
  uint64_t v986;
  uint64_t v987;
  uint64_t v988;
  uint64_t v989;
  uint64_t v990;
  uint64_t v991;
  uint64_t v992;
  uint64_t v993;
  uint64_t v994;
  uint64_t v995;
  uint64_t v996;
  uint64_t v997;
  uint64_t v998;
  uint64_t v999;
  uint64_t v1000;
  uint64_t v1001;
  uint64_t v1002;
  uint64_t v1003;
  uint64_t v1004;
  uint64_t v1005;
  uint64_t v1006;
  uint64_t v1007;
  uint64_t v1008;
  uint64_t v1009;
  uint64_t v1010;
  uint64_t v1011;
  uint64_t v1012;
  uint64_t v1013;
  uint64_t v1014;
  uint64_t v1015;
  uint64_t v1016;
  uint64_t v1017;
  uint64_t v1018;
  uint64_t v1019;
  uint64_t v1020;
  uint64_t v1021;
  uint64_t v1022;
  uint64_t v1023;
  uint64_t v1024;
  uint64_t v1025;
  uint64_t v1026;
  uint64_t v1027;
  uint64_t v1028;
  uint64_t v1029;
  uint64_t v1030;
  uint64_t v1031;
  uint64_t v1032;
  uint64_t v1033;
  uint64_t v1034;
  uint64_t v1035;
  uint64_t v1036;
  uint64_t v1037;
  uint64_t v1038;
  uint64_t v1039;
  uint64_t v1040;
  uint64_t v1041;
  uint64_t v1042;
  uint64_t v1043;
  uint64_t v1044;
  void (*v1045)(uint64_t, uint64_t);
  uint64_t v1046;
  uint64_t v1047;
  uint64_t v1048;
  uint64_t v1049;
  uint64_t v1050;
  uint64_t v1051;
  uint64_t v1052;
  uint64_t v1053;
  uint64_t v1054;
  uint64_t v1055;
  uint64_t v1056;
  uint64_t v1057;
  uint64_t v1058;
  uint64_t v1059;
  uint64_t v1060;
  uint64_t v1061;
  uint64_t v1062;
  uint64_t v1063;
  void (*v1064)(uint64_t, uint64_t);
  uint64_t v1065;
  void (*v1066)(uint64_t, uint64_t);
  void (*v1067)(uint64_t, uint64_t);
  uint64_t v1068;
  uint64_t v1069;
  uint64_t v1070;
  uint64_t v1071;
  uint64_t v1072;
  uint64_t v1073;
  void (*v1074)(uint64_t, uint64_t);
  uint64_t v1075;
  uint64_t v1076;
  uint64_t v1077;
  uint64_t v1078;
  uint8_t *v1079;
  uint8_t *v1080;
  uint8_t *v1081;
  uint8_t *v1082;
  os_log_type_t v1083;
  os_log_type_t v1084;
  uint8_t *v1085;
  uint8_t *v1086;
  uint8_t *v1087;
  uint8_t *v1088;
  uint8_t *v1089;
  uint8_t *v1090;
  uint8_t *v1091;
  uint8_t *v1092;
  uint8_t *v1093;
  uint8_t *v1094;
  uint8_t *v1095;
  uint8_t *v1096;
  uint8_t *v1097;
  uint8_t *v1098;
  uint8_t *v1099;
  uint8_t *v1100;
  uint8_t *v1101;
  uint8_t *v1102;
  uint8_t *v1103;
  uint8_t *v1104;
  uint8_t *v1105;
  uint8_t *v1106;
  NSObject *v1107;
  NSObject *v1108;
  NSObject *v1109;
  uint64_t v1110;
  NSObject *v1111;
  NSObject *v1112;
  NSObject *v1113;
  os_log_type_t v1114;
  NSObject *v1115;
  NSObject *v1116;
  NSObject *v1117;
  NSObject *v1118;
  NSObject *v1119;
  NSObject *v1120;
  NSObject *v1121;
  NSObject *v1122;
  NSObject *v1123;
  NSObject *v1124;
  NSObject *v1125;
  NSObject *v1126;
  NSObject *v1127;
  NSObject *v1128;
  uint64_t v1129;
  NSObject *v1130;
  uint64_t v1131;
  NSObject *v1132;
  uint64_t v1133;
  uint64_t v1134;
  uint64_t v1135;
  _QWORD *v1136;
  uint64_t v1137;
  _QWORD *v1138;
  _QWORD *v1139;
  uint64_t v1140;
  _QWORD *v1141;
  uint64_t v1142;
  uint64_t v1143;
  char *v1144;
  uint64_t v1145;
  uint64_t v1146;
  uint64_t v1147;
  uint64_t v1148;
  void (*v1149)(uint64_t, uint64_t, uint64_t);
  NSObject *v1150;
  void (*v1151)(uint64_t, uint64_t, uint64_t);
  void (*v1152)(uint64_t, uint64_t, uint64_t);
  uint64_t v1153;
  void (*v1154)(uint64_t, uint64_t, uint64_t);
  void (*v1155)(uint64_t, uint64_t, uint64_t);
  void (*v1156)(uint64_t, uint64_t, uint64_t);
  void (*v1157)(uint64_t, uint64_t, uint64_t);
  void (*v1158)(uint64_t, uint64_t, uint64_t);
  void (*v1159)(uint64_t, uint64_t, uint64_t);
  void (*v1160)(uint64_t, uint64_t, uint64_t);
  void (*v1161)(uint64_t, uint64_t, uint64_t);
  void (*v1162)(uint64_t, uint64_t);
  void (*v1163)(uint64_t, uint64_t);
  void (*v1164)(uint64_t, uint64_t);
  void (*v1165)(uint64_t, uint64_t);
  void (*v1166)(uint64_t, uint64_t);
  void (*v1167)(uint64_t, uint64_t);
  NSObject *v1168;
  void (*v1169)(uint64_t, uint64_t);
  void (*v1170)(uint64_t, uint64_t);
  NSObject *v1171;
  void (*v1172)(uint64_t, uint64_t);
  uint8_t *v1173;
  uint64_t (*v1174)(uint64_t, uint64_t, uint64_t);
  uint64_t v1175;
  uint8_t *v1176;
  _QWORD v1177[3];

  v1 = v0;
  v2 = v0[156];
  v3 = v0[152];
  v4 = v0[151];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4) == 1)
  {
    v5 = v1[103];
    v6 = v1[102];
    v7 = v1[101];
    (*(void (**)(_QWORD, _QWORD))(v1[158] + 8))(v1[159], v1[157]);
    v8 = sub_23843B1D4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
    v9 = sub_23849255C();
    v10 = sub_238492880();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)sub_238435F74();
      v1177[0] = 0;
      v1174 = 0;
      *(_WORD *)v11 = 0;
      v1176 = v11 + 2;
      sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_238433000, v9, v10, "Running plan finished", v11, 2u);
      sub_238435FB0();
    }
    v1079 = (uint8_t *)v1[182];
    v1107 = v1[178];
    v1133 = v1[177];
    v1143 = v1[179];
    v1068 = v1[176];
    v29 = v1[175];
    v30 = v1[174];
    v31 = v1[171];
    v32 = v1[169];
    v33 = v1[103];
    v34 = v1[102];
    v35 = v1[101];
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    ((void (*)(uint64_t, uint64_t))v1079)(v31, v32);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v1068, v30);
    ((void (*)(uint64_t, uint64_t))v1107[1].isa)(v1143, v1133);
    goto LABEL_9;
  }
  v12 = (void (*)(uint64_t, uint64_t))v1[182];
  v13 = v1[172];
  v14 = v1[169];
  v15 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32);
  v15(v1[155], v2, v4);
  sub_238492280();
  v16 = sub_238491FB0();
  v12(v13, v14);
  if ((v16 & 1) == 0)
  {
    v37 = v1[155];
    v38 = v1[152];
    v39 = v1[151];
    goto LABEL_12;
  }
  v17 = *((_DWORD *)v1 + 378);
  v18 = v1[162];
  v19 = v1[161];
  v20 = v1[160];
  sub_238492274();
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 88))(v18, v20);
  if (v21 == v17)
  {
    v22 = v1[150];
    v23 = v1[102];
    v24 = v1[101];
    v25 = sub_23843B1D4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v22, v25, v24);
    v26 = sub_23849255C();
    v27 = sub_238492880();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)sub_238435F74();
      v1177[0] = 0;
      v1174 = 0;
      *(_WORD *)v28 = 0;
      v1176 = v28 + 2;
      sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_238433000, v26, v27, "Got termination", v28, 2u);
      sub_238435FB0();
    }
    v1081 = (uint8_t *)v1[182];
    v1109 = v1[178];
    v1135 = v1[177];
    v1145 = v1[179];
    v1060 = v1[174];
    v1070 = v1[176];
    v1046 = v1[171];
    v1053 = v1[175];
    v1032 = v1[159];
    v1039 = v1[169];
    v54 = v1[158];
    v1025 = v1[157];
    v55 = v1[155];
    v56 = v1[152];
    v57 = v1[151];
    v58 = v1[150];
    v59 = v1[102];
    v60 = v1[101];
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v60);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v1032, v1025);
    ((void (*)(uint64_t, uint64_t))v1081)(v1046, v1039);
    (*(void (**)(uint64_t, uint64_t))(v1053 + 8))(v1070, v1060);
    ((void (*)(uint64_t, uint64_t))v1109[1].isa)(v1145, v1135);
    (*(void (**)(_QWORD, _QWORD))(v1[161] + 8))(v1[162], v1[160]);
    goto LABEL_9;
  }
  if (v21 == *((_DWORD *)v1 + 379))
  {
    v41 = v1[186];
    sub_238435C24((uint64_t *)&unk_25690AA80);
    v42 = swift_allocObject();
    v43 = sub_238442B54(v42, 1);
    v44[3] = MEMORY[0x24BEE0D00];
    *v44 = 0x20646E6520746F47;
    v44[1] = 0xEF6E616C7020666FLL;
    nullsub_1(v43);
    sub_238441D44();
    sub_238441D50();
    sub_238492D0C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2384920DC();
    if (v41)
    {
      v1134 = v1[179];
      v1108 = v1[177];
      v1038 = v1[176];
      v1045 = (void (*)(uint64_t, uint64_t))v1[182];
      v1024 = v1[175];
      v1031 = v1[174];
      v45 = v1[171];
      v46 = v1[169];
      v1069 = v1[178];
      v1080 = (uint8_t *)v1[162];
      v1052 = v1[161];
      v1059 = v1[160];
      v47 = v1[159];
      v48 = v1[158];
      v49 = v1[157];
      v50 = v1[155];
      v51 = v1[152];
      v52 = v1[151];
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
      v1045(v45, v46);
      v53 = v1;
      (*(void (**)(uint64_t, uint64_t))(v1024 + 8))(v1038, v1031);
      (*(void (**)(uint64_t, NSObject *))(v1069 + 8))(v1134, v1108);
      (*(void (**)(uint8_t *, uint64_t))(v1052 + 8))(v1080, v1059);
LABEL_51:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v36 = (void (*)(void))v53[1];
      goto LABEL_10;
    }
    v89 = v1[162];
    v90 = v1[161];
    v91 = v1[160];
    (*(void (**)(_QWORD, _QWORD))(v1[152] + 8))(v1[155], v1[151]);
    (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v89, v91);
    goto LABEL_13;
  }
  if (v21 == *((_DWORD *)v1 + 380))
  {
    v61 = v1[162];
    v62 = v1[149];
    v63 = v1[102];
    v64 = v1[101];
    v65 = v1[100];
    v66 = v1[99];
    v67 = v1[97];
    v68 = v1[96];
    (*(void (**)(uint64_t, _QWORD))(v1[161] + 96))(v61, v1[160]);
    v1136 = v1;
    v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 32);
    v69(v65, v61, v68);
    v70 = sub_23843B1D4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v62, v70, v64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v66, v65, v68);
    v71 = (*(unsigned __int8 *)(v67 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
    v72 = swift_allocObject();
    v69(v72 + v71, v66, v68);
    v73 = sub_23849255C();
    v74 = sub_238492868();
    v75 = swift_allocObject();
    *(_BYTE *)(v75 + 16) = 64;
    v76 = swift_allocObject();
    *(_BYTE *)(v76 + 16) = 8;
    v77 = swift_allocObject();
    *(_QWORD *)(v77 + 16) = sub_238465264;
    *(_QWORD *)(v77 + 24) = v72;
    v78 = swift_allocObject();
    *(_QWORD *)(v78 + 16) = sub_2384652B0;
    *(_QWORD *)(v78 + 24) = v77;
    v79 = swift_allocObject();
    *(_QWORD *)(v79 + 16) = sub_2384652D0;
    *(_QWORD *)(v79 + 24) = v78;
    sub_238435C24(&qword_25690AC88);
    v80 = swift_allocObject();
    sub_238442118(v80, 3);
    *v81 = sub_2384655B0;
    v81[1] = v75;
    v81[2] = sub_2384655B0;
    v81[3] = v76;
    v81[4] = sub_2384652F0;
    v81[5] = v79;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (!os_log_type_enabled(v73, v74))
    {
      v53 = v1136;
      v92 = v1136[149];
      v93 = v1136[102];
      v94 = v1136[101];
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v92, v94);
      v95 = v1136[186];
      v96 = *((unsigned int *)v1136 + 378);
      v97 = v1136[163];
      v98 = v1136[161];
      v99 = v1136[160];
      ((void (*)(_QWORD, _QWORD, _QWORD))v53[183])(v53[172], v53[171], v53[169]);
      sub_23849219C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 104))(v97, v96, v99);
      sub_238492238();
      sub_2384920F4();
      v100 = (void (*)(uint64_t, uint64_t))v1136[184];
      v101 = v1136[179];
      v1082 = (uint8_t *)v1136[182];
      v1111 = v1136[178];
      v1137 = v1136[177];
      v1061 = v53[174];
      v1071 = v53[176];
      v1047 = v53[171];
      v1054 = v53[175];
      v102 = v53[166];
      v103 = v53[164];
      v1033 = v53[159];
      v1040 = v53[169];
      v1019 = v53[158];
      v1026 = v53[157];
      v997 = v53[152];
      v1003 = v53[151];
      v1009 = v53[155];
      v104 = v53[100];
      v105 = v53[97];
      v106 = v53[96];
      if (v95)
      {
        swift_release();
        swift_release();
        v100(v102, v103);
        (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v104, v106);
        (*(void (**)(uint64_t, uint64_t))(v997 + 8))(v1009, v1003);
        (*(void (**)(uint64_t, uint64_t))(v1019 + 8))(v1033, v1026);
        ((void (*)(uint64_t, uint64_t))v1082)(v1047, v1040);
        (*(void (**)(uint64_t, uint64_t))(v1054 + 8))(v1071, v1061);
        isa = (void (*)(uint64_t, uint64_t))v1111[1].isa;
        v108 = v101;
      }
      else
      {
        v993 = v101;
        v180 = v53[95];
        v991 = v53[94];
        v1148 = v53[93];
        swift_bridgeObjectRelease();
        v100(v102, v103);
        sub_238492148();
        sub_238492064();
        (*(void (**)(uint64_t, uint64_t))(v991 + 8))(v180, v1148);
        swift_willThrow();
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v104, v106);
        (*(void (**)(uint64_t, uint64_t))(v997 + 8))(v1009, v1003);
        (*(void (**)(uint64_t, uint64_t))(v1019 + 8))(v1033, v1026);
        ((void (*)(uint64_t, uint64_t))v1082)(v1047, v1040);
        (*(void (**)(uint64_t, uint64_t))(v1054 + 8))(v1071, v1061);
        isa = (void (*)(uint64_t, uint64_t))v1111[1].isa;
        v108 = v993;
      }
      isa(v108, v1137);
      goto LABEL_51;
    }
    v82 = (void *)v1136[186];
    v83 = (uint8_t *)sub_238435F74();
    v1110 = swift_slowAlloc();
    v1176 = (uint8_t *)v1110;
    v1177[0] = 0;
    *(_WORD *)v83 = 258;
    v1173 = v83 + 2;
    v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
    v1175 = v75;
    sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
    if (!v82)
    {
      swift_release();
      v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
      v1175 = v76;
      sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
      swift_release();
      v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384652F0;
      v1175 = v79;
      sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
      swift_release();
      _os_log_impl(&dword_238433000, v73, v74, "Got error: %@", v83, 0xCu);
      sub_238435C24(&qword_25690A290);
      swift_arrayDestroy();
      MEMORY[0x23B835AF4](v1110, -1, -1);
      sub_238435FB0();
    }
    goto LABEL_262;
  }
  if (v21 == *((_DWORD *)v1 + 381))
  {
    v84 = v1[162];
    v85 = v1[9];
    v86 = v1[10];
    v87 = v1[8];
    (*(void (**)(uint64_t, _QWORD))(v1[161] + 96))(v84, v1[160]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 32))(v86, v84, v87);
    v88 = (_QWORD *)swift_task_alloc();
    v1[187] = v88;
    *v88 = v1;
    v88[1] = sub_238463674;
    sub_238492094();
    return;
  }
  if (v21 != *((_DWORD *)v1 + 382))
  {
    if (v21 == *((_DWORD *)v1 + 383))
    {
      v145 = v1[162];
      v146 = v1[92];
      v147 = v1[89];
      v148 = v1[88];
      v149 = v1[87];
      v150 = v1[86];
      v151 = v1[85];
      (*(void (**)(uint64_t, _QWORD))(v1[161] + 96))(v145, v1[160]);
      v116 = v1;
      v152 = *(void (**)(uint64_t, uint64_t, uint64_t))(v147 + 32);
      v152(v146, v145, v148);
      sub_2384921B4();
      v153 = (*(uint64_t (**)(uint64_t, uint64_t))(v150 + 88))(v149, v151);
      if (v153 == *MEMORY[0x24BE53328])
      {
        v154 = v116[148];
        v155 = v116[102];
        v156 = v116[101];
        v157 = v116[87];
        v158 = v116[84];
        v159 = v116[83];
        v160 = v116[80];
        v161 = v116[79];
        (*(void (**)(uint64_t, _QWORD))(v116[86] + 96))(v157, v116[85]);
        v162 = *(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 32);
        v162(v158, v157, v161);
        v163 = sub_23843B1D4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v155 + 16))(v154, v163, v156);
        v164 = *(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 16);
        v164(v159, v158, v161);
        v165 = (*(unsigned __int8 *)(v160 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v160 + 80);
        v166 = swift_allocObject();
        v162(v166 + v165, v159, v161);
        v164(v159, v158, v161);
        v167 = swift_allocObject();
        v162(v167 + v165, v159, v161);
        v1113 = sub_23849255C();
        v1084 = sub_238492880();
        v168 = swift_allocObject();
        *(_BYTE *)(v168 + 16) = 32;
        v169 = swift_allocObject();
        *(_BYTE *)(v169 + 16) = 8;
        v170 = swift_allocObject();
        *(_QWORD *)(v170 + 16) = sub_238464EB4;
        *(_QWORD *)(v170 + 24) = v166;
        v171 = swift_allocObject();
        *(_QWORD *)(v171 + 16) = sub_2384655A8;
        *(_QWORD *)(v171 + 24) = v170;
        v172 = swift_allocObject();
        *(_BYTE *)(v172 + 16) = 32;
        v173 = swift_allocObject();
        *(_BYTE *)(v173 + 16) = 8;
        v174 = swift_allocObject();
        *(_QWORD *)(v174 + 16) = sub_238464EDC;
        *(_QWORD *)(v174 + 24) = v167;
        v175 = swift_allocObject();
        *(_QWORD *)(v175 + 16) = sub_2384655A8;
        *(_QWORD *)(v175 + 24) = v174;
        sub_238435C24(&qword_25690AC88);
        v176 = swift_allocObject();
        sub_238442118(v176, 6);
        *v177 = sub_2384655B0;
        v177[1] = v168;
        v177[2] = sub_2384655B0;
        v177[3] = v169;
        v177[4] = sub_2384655AC;
        v177[5] = v171;
        v177[6] = sub_2384655B0;
        v177[7] = v172;
        v177[8] = sub_2384655B0;
        v177[9] = v173;
        v177[10] = sub_2384655AC;
        v177[11] = v175;
        v1147 = v168;
        v178 = v171;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v1113, v1084))
        {
          v82 = (void *)v116[186];
          v179 = (uint8_t *)sub_238435F74();
          v1176 = 0;
          v1177[0] = swift_slowAlloc();
          v1063 = v1177[0];
          *(_WORD *)v179 = 514;
          v1173 = v179 + 2;
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
          v1175 = v1147;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          if (!v82)
          {
            swift_release();
            v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
            v1175 = v169;
            sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
            swift_release();
            v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
            v1175 = v178;
            sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
            swift_release();
            v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
            v1175 = v172;
            sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
            swift_release();
            v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
            v1175 = v173;
            sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
            swift_release();
            v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
            v1175 = v175;
            sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
            swift_release();
            _os_log_impl(&dword_238433000, v1113, v1084, "Success: result=%s appLaunched=%s", v179, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x23B835AF4](v1063, -1, -1);
            sub_238435FB0();
          }
          goto LABEL_262;
        }
        v1140 = v116[179];
        v1064 = (void (*)(uint64_t, uint64_t))v116[182];
        v1073 = v116[178];
        v1086 = (uint8_t *)v116[177];
        v1048 = v116[174];
        v1055 = v116[176];
        v1034 = v116[171];
        v1041 = v116[175];
        v1020 = v116[159];
        v1027 = v116[169];
        v1010 = v116[158];
        v1015 = v116[157];
        v1004 = v116[155];
        v994 = v116[152];
        v998 = v116[151];
        v987 = v116[148];
        v251 = v116[102];
        v983 = v116[101];
        v992 = v116[92];
        v989 = v116[89];
        v990 = v116[88];
        v985 = v116[84];
        v252 = v116[80];
        v981 = v116[79];
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v251 + 8))(v987, v983);
        (*(void (**)(uint64_t, uint64_t))(v252 + 8))(v985, v981);
        v221 = v989;
LABEL_69:
        (*(void (**)(uint64_t, uint64_t))(v221 + 8))(v992, v990);
        (*(void (**)(uint64_t, uint64_t))(v994 + 8))(v1004, v998);
        (*(void (**)(uint64_t, uint64_t))(v1010 + 8))(v1020, v1015);
        v1064(v1034, v1027);
        (*(void (**)(uint64_t, uint64_t))(v1041 + 8))(v1055, v1048);
        (*(void (**)(uint64_t, uint8_t *))(v1073 + 8))(v1140, v1086);
        v1 = v116;
LABEL_9:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        v36 = (void (*)(void))v1[1];
LABEL_10:
        v36();
        return;
      }
      v1141 = v116;
      if (v153 == *MEMORY[0x24BE532D8])
      {
        v181 = v116;
        v222 = v116[147];
        v223 = v116[102];
        v224 = v116[101];
        v225 = v116[87];
        v226 = v116[78];
        v227 = v116[74];
        v228 = v116[73];
        (*(void (**)(uint64_t, _QWORD))(v116[86] + 96))(v225, v116[85]);
        v1151 = *(void (**)(uint64_t, uint64_t, uint64_t))(v227 + 32);
        v1151(v226, v225, v228);
        v229 = sub_23843B1D4();
        v230 = *(void (**)(uint64_t, uint64_t, uint64_t))(v223 + 16);
        v230(v222, v229, v224);
        v231 = sub_23849255C();
        v232 = sub_238492868();
        if (os_log_type_enabled(v231, v232))
        {
          v233 = (uint8_t *)sub_238435F74();
          v1177[0] = 0;
          v1174 = 0;
          *(_WORD *)v233 = 0;
          v1176 = v233 + 2;
          sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_238433000, v231, v232, "Received actionConfirmation", v233, 2u);
          sub_238435FB0();
        }
        v301 = v116[147];
        v302 = v116[102];
        v303 = v116[101];
        swift_bridgeObjectRelease();

        v1117 = *(NSObject **)(v302 + 8);
        ((void (*)(uint64_t, uint64_t))v1117)(v301, v303);
        v82 = (void *)v116[186];
        v304 = v116[78];
        v305 = v116[77];
        v306 = v116[74];
        v307 = v1141[73];
        v230(v1141[146], v229, v1141[101]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v306 + 16))(v305, v304, v307);
        v308 = (*(unsigned __int8 *)(v306 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v306 + 80);
        v309 = swift_allocObject();
        v1151(v309 + v308, v305, v307);
        v310 = sub_23849255C();
        v311 = sub_23849285C();
        v312 = swift_allocObject();
        *(_BYTE *)(v312 + 16) = 32;
        v313 = swift_allocObject();
        *(_BYTE *)(v313 + 16) = 8;
        v314 = swift_allocObject();
        *(_QWORD *)(v314 + 16) = sub_238464E7C;
        *(_QWORD *)(v314 + 24) = v309;
        v315 = swift_allocObject();
        *(_QWORD *)(v315 + 16) = sub_2384655A8;
        *(_QWORD *)(v315 + 24) = v314;
        sub_238435C24(&qword_25690AC88);
        v316 = swift_allocObject();
        sub_238442118(v316, 3);
        *v317 = sub_2384655B0;
        v317[1] = v312;
        v317[2] = sub_2384655B0;
        v317[3] = v313;
        v317[4] = sub_2384655AC;
        v317[5] = v315;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v310, v311))
        {
          v318 = (uint8_t *)sub_238435F74();
          v319 = swift_slowAlloc();
          v1176 = 0;
          v1177[0] = v319;
          *(_WORD *)v318 = 258;
          v1173 = v318 + 2;
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
          v1175 = v312;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          if (!v82)
          {
            swift_release();
            v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
            v1175 = v313;
            sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
            swift_release();
            v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
            v1175 = v315;
            sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
            swift_release();
            _os_log_impl(&dword_238433000, v310, v311, "%s", v318, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B835AF4](v319, -1, -1);
            sub_238435FB0();
          }
          goto LABEL_262;
        }
        v363 = v1141[146];
        v364 = v1141[101];
        swift_release();
        swift_release();
        swift_release();

        ((void (*)(uint64_t, uint64_t))v1117)(v363, v364);
        v1074 = (void (*)(uint64_t, uint64_t))v1141[182];
        v1087 = (uint8_t *)v1141[178];
        v1116 = v1141[177];
        v1142 = v1141[179];
        v1056 = v181[174];
        v1065 = v181[176];
        v1042 = v181[171];
        v1049 = v181[175];
        v1028 = v181[159];
        v1035 = v181[169];
        v1016 = v181[158];
        v1021 = v181[157];
        v999 = v181[152];
        v1005 = v181[151];
        v1011 = v181[155];
        v365 = v181[92];
        v366 = v181[89];
        v367 = v181[88];
        v368 = v181[78];
        v369 = v181[74];
        v370 = v181[73];
      }
      else if (v153 == *MEMORY[0x24BE532E0])
      {
        v181 = v116;
        v272 = v116[145];
        v273 = v116[102];
        v274 = v116[101];
        v275 = v116[87];
        v276 = v116[72];
        v277 = v116[68];
        v278 = v116[67];
        (*(void (**)(uint64_t, _QWORD))(v116[86] + 96))(v275, v116[85]);
        v1154 = *(void (**)(uint64_t, uint64_t, uint64_t))(v277 + 32);
        v1154(v276, v275, v278);
        v279 = sub_23843B1D4();
        v280 = *(void (**)(uint64_t, uint64_t, uint64_t))(v273 + 16);
        v280(v272, v279, v274);
        v281 = sub_23849255C();
        v282 = sub_238492868();
        if (os_log_type_enabled(v281, v282))
        {
          v283 = (uint8_t *)sub_238435F74();
          v1177[0] = 0;
          v1174 = 0;
          *(_WORD *)v283 = 0;
          v1176 = v283 + 2;
          sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_238433000, v281, v282, "Received toolDisambiguation", v283, 2u);
          sub_238435FB0();
        }
        v373 = v116[145];
        v374 = v116[102];
        v375 = v116[101];
        swift_bridgeObjectRelease();

        v1119 = *(NSObject **)(v374 + 8);
        ((void (*)(uint64_t, uint64_t))v1119)(v373, v375);
        v82 = (void *)v116[186];
        v376 = v116[72];
        v377 = v116[71];
        v378 = v116[68];
        v379 = v1141[67];
        v280(v1141[144], v279, v1141[101]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v378 + 16))(v377, v376, v379);
        v380 = (*(unsigned __int8 *)(v378 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v378 + 80);
        v381 = swift_allocObject();
        v1154(v381 + v380, v377, v379);
        v382 = sub_23849255C();
        v383 = sub_23849285C();
        v384 = swift_allocObject();
        *(_BYTE *)(v384 + 16) = 32;
        v385 = swift_allocObject();
        *(_BYTE *)(v385 + 16) = 8;
        v386 = swift_allocObject();
        *(_QWORD *)(v386 + 16) = sub_238464CD0;
        *(_QWORD *)(v386 + 24) = v381;
        v387 = swift_allocObject();
        *(_QWORD *)(v387 + 16) = sub_2384655A8;
        *(_QWORD *)(v387 + 24) = v386;
        sub_238435C24(&qword_25690AC88);
        v388 = swift_allocObject();
        sub_238442118(v388, 3);
        *v389 = sub_2384655B0;
        v389[1] = v384;
        v389[2] = sub_2384655B0;
        v389[3] = v385;
        v389[4] = sub_2384655AC;
        v389[5] = v387;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v382, v383))
        {
          v390 = (uint8_t *)sub_238435F74();
          v391 = swift_slowAlloc();
          v1176 = 0;
          v1177[0] = v391;
          *(_WORD *)v390 = 258;
          v1173 = v390 + 2;
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
          v1175 = v384;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          if (!v82)
          {
            swift_release();
            v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
            v1175 = v385;
            sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
            swift_release();
            v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
            v1175 = v387;
            sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
            swift_release();
            _os_log_impl(&dword_238433000, v382, v383, "%s", v390, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B835AF4](v391, -1, -1);
            sub_238435FB0();
          }
          goto LABEL_262;
        }
        v435 = v1141[144];
        v436 = v1141[101];
        swift_release();
        swift_release();
        swift_release();

        ((void (*)(uint64_t, uint64_t))v1119)(v435, v436);
        v1074 = (void (*)(uint64_t, uint64_t))v1141[182];
        v1087 = (uint8_t *)v1141[178];
        v1116 = v1141[177];
        v1142 = v1141[179];
        v1056 = v181[174];
        v1065 = v181[176];
        v1042 = v181[171];
        v1049 = v181[175];
        v1028 = v181[159];
        v1035 = v181[169];
        v1016 = v181[158];
        v1021 = v181[157];
        v999 = v181[152];
        v1005 = v181[151];
        v1011 = v181[155];
        v365 = v181[92];
        v366 = v181[89];
        v367 = v181[88];
        v368 = v181[72];
        v369 = v181[68];
        v370 = v181[67];
      }
      else
      {
        if (v153 != *MEMORY[0x24BE532E8])
        {
          if (v153 == *MEMORY[0x24BE53300])
          {
            v411 = v116[141];
            v412 = v116[102];
            v413 = v116[101];
            v414 = v116[87];
            v415 = v116[60];
            v416 = v116[55];
            v417 = v116[56];
            (*(void (**)(uint64_t, _QWORD))(v116[86] + 96))(v414, v116[85]);
            v1158 = *(void (**)(uint64_t, uint64_t, uint64_t))(v417 + 32);
            v1158(v415, v414, v416);
            v418 = sub_23843B1D4();
            v419 = *(void (**)(uint64_t, uint64_t, uint64_t))(v412 + 16);
            v419(v411, v418, v413);
            v420 = sub_23849255C();
            v421 = sub_238492868();
            if (os_log_type_enabled(v420, v421))
            {
              v422 = (uint8_t *)sub_238435F74();
              v1177[0] = 0;
              v1174 = 0;
              *(_WORD *)v422 = 0;
              v1176 = v422 + 2;
              sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_238433000, v420, v421, "Received parameterConfirmation", v422, 2u);
              sub_238435FB0();
            }
            v510 = v116[141];
            v511 = v116[102];
            v512 = v116[101];
            swift_bridgeObjectRelease();

            v1123 = *(NSObject **)(v511 + 8);
            ((void (*)(uint64_t, uint64_t))v1123)(v510, v512);
            v82 = (void *)v116[186];
            v514 = v116[59];
            v513 = v116[60];
            v515 = v116[56];
            v516 = v1141[55];
            v419(v1141[140], v418, v1141[101]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v515 + 16))(v514, v513, v516);
            v517 = (*(unsigned __int8 *)(v515 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v515 + 80);
            v518 = swift_allocObject();
            v1158(v518 + v517, v514, v516);
            v519 = sub_23849255C();
            v520 = sub_23849285C();
            v521 = swift_allocObject();
            *(_BYTE *)(v521 + 16) = 32;
            v522 = swift_allocObject();
            *(_BYTE *)(v522 + 16) = 8;
            v523 = swift_allocObject();
            *(_QWORD *)(v523 + 16) = sub_238464E0C;
            *(_QWORD *)(v523 + 24) = v518;
            v524 = swift_allocObject();
            *(_QWORD *)(v524 + 16) = sub_2384655A8;
            *(_QWORD *)(v524 + 24) = v523;
            sub_238435C24(&qword_25690AC88);
            v525 = swift_allocObject();
            sub_238442118(v525, 3);
            *v526 = sub_2384655B0;
            v526[1] = v521;
            v526[2] = sub_2384655B0;
            v526[3] = v522;
            v526[4] = sub_2384655AC;
            v526[5] = v524;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v519, v520))
            {
              v527 = (uint8_t *)sub_238435F74();
              v1176 = 0;
              v1177[0] = swift_slowAlloc();
              v1088 = (uint8_t *)v1177[0];
              *(_WORD *)v527 = 258;
              v1173 = v527 + 2;
              v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
              v1175 = v521;
              sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
              if (!v82)
              {
                swift_release();
                v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
                v1175 = v522;
                sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                swift_release();
                v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
                v1175 = v524;
                sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                swift_release();
                _os_log_impl(&dword_238433000, v519, v520, "%s", v527, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x23B835AF4](v1088, -1, -1);
                sub_238435FB0();
              }
              goto LABEL_262;
            }
            v572 = v1141;
            v573 = v1141[140];
            v574 = v1141[101];
            swift_release();
            swift_release();
            swift_release();

            ((void (*)(uint64_t, uint64_t))v1123)(v573, v574);
            v1074 = (void (*)(uint64_t, uint64_t))v1141[182];
            v1087 = (uint8_t *)v1141[178];
            v1116 = v1141[177];
            v1142 = v1141[179];
            v1056 = v572[174];
            v1065 = v572[176];
            v1042 = v572[171];
            v1049 = v572[175];
            v1028 = v572[159];
            v1035 = v572[169];
            v1016 = v572[158];
            v1021 = v572[157];
            v1000 = v572[152];
            v1006 = v572[151];
            v1012 = v572[155];
            v575 = v572[92];
            v576 = v572[89];
            v577 = v572[88];
            v578 = v572[60];
            v580 = v572[55];
            v579 = v572[56];
            sub_238464C10();
            swift_allocError();
            *v581 = 1;
            swift_willThrow();
            swift_release();
            swift_release();
            (*(void (**)(uint64_t, uint64_t))(v579 + 8))(v578, v580);
            (*(void (**)(uint64_t, uint64_t))(v576 + 8))(v575, v577);
LABEL_158:
            v53 = v572;
            (*(void (**)(uint64_t, uint64_t))(v1000 + 8))(v1012, v1006);
            goto LABEL_139;
          }
          if (v153 == *MEMORY[0x24BE53308])
          {
            v477 = v116[139];
            v478 = v116[102];
            v479 = v116[101];
            v480 = v116[87];
            v481 = v116[54];
            v482 = v116[49];
            v483 = v116[50];
            (*(void (**)(uint64_t, _QWORD))(v116[86] + 96))(v480, v116[85]);
            v1160 = *(void (**)(uint64_t, uint64_t, uint64_t))(v483 + 32);
            v1160(v481, v480, v482);
            v484 = sub_23843B1D4();
            v485 = *(void (**)(uint64_t, uint64_t, uint64_t))(v478 + 16);
            v485(v477, v484, v479);
            v486 = sub_23849255C();
            v487 = sub_238492868();
            if (os_log_type_enabled(v486, v487))
            {
              v488 = (uint8_t *)sub_238435F74();
              v1177[0] = 0;
              v1174 = 0;
              *(_WORD *)v488 = 0;
              v1176 = v488 + 2;
              sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_238433000, v486, v487, "Received parameterDisambiguation", v488, 2u);
              sub_238435FB0();
            }
            v591 = v116[139];
            v592 = v116[102];
            v593 = v116[101];
            swift_bridgeObjectRelease();

            v1125 = *(NSObject **)(v592 + 8);
            ((void (*)(uint64_t, uint64_t))v1125)(v591, v593);
            v82 = (void *)v116[186];
            v595 = v116[53];
            v594 = v116[54];
            v596 = v116[50];
            v597 = v1141[49];
            v485(v1141[138], v484, v1141[101]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v596 + 16))(v595, v594, v597);
            v598 = (*(unsigned __int8 *)(v596 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v596 + 80);
            v599 = swift_allocObject();
            v1160(v599 + v598, v595, v597);
            v600 = sub_23849255C();
            v601 = sub_23849285C();
            v602 = swift_allocObject();
            *(_BYTE *)(v602 + 16) = 32;
            v603 = swift_allocObject();
            *(_BYTE *)(v603 + 16) = 8;
            v604 = swift_allocObject();
            *(_QWORD *)(v604 + 16) = sub_238464DD4;
            *(_QWORD *)(v604 + 24) = v599;
            v605 = swift_allocObject();
            *(_QWORD *)(v605 + 16) = sub_2384655A8;
            *(_QWORD *)(v605 + 24) = v604;
            sub_238435C24(&qword_25690AC88);
            v606 = swift_allocObject();
            sub_238442118(v606, 3);
            *v607 = sub_2384655B0;
            v607[1] = v602;
            v607[2] = sub_2384655B0;
            v607[3] = v603;
            v607[4] = sub_2384655AC;
            v607[5] = v605;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v600, v601))
            {
              v608 = (uint8_t *)sub_238435F74();
              v1176 = 0;
              v1177[0] = swift_slowAlloc();
              v1090 = (uint8_t *)v1177[0];
              *(_WORD *)v608 = 258;
              v1173 = v608 + 2;
              v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
              v1175 = v602;
              sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
              if (!v82)
              {
                swift_release();
                v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
                v1175 = v603;
                sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                swift_release();
                v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
                v1175 = v605;
                sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                swift_release();
                _os_log_impl(&dword_238433000, v600, v601, "%s", v608, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x23B835AF4](v1090, -1, -1);
                sub_238435FB0();
              }
              goto LABEL_262;
            }
            v653 = v1141[138];
            v654 = v1141[101];
            swift_release();
            swift_release();
            swift_release();

            ((void (*)(uint64_t, uint64_t))v1125)(v653, v654);
            v53 = v1141;
            v1066 = (void (*)(uint64_t, uint64_t))v1141[182];
            v1075 = v1141[178];
            v1092 = (uint8_t *)v1141[177];
            v1127 = v1141[179];
            v1050 = v1141[174];
            v1057 = v1141[176];
            v1036 = v1141[171];
            v1043 = v1141[175];
            v1022 = v1141[159];
            v1029 = v1141[169];
            v1013 = v1141[158];
            v1017 = v1141[157];
            v1007 = v1141[155];
            v995 = v1141[152];
            v1001 = v1141[151];
            v655 = v1141[92];
            v656 = v1141[89];
            v657 = v1141[88];
            v658 = v1141[54];
            v660 = v1141[49];
            v659 = v1141[50];
          }
          else if (v153 == *MEMORY[0x24BE532F0])
          {
            v546 = v116[137];
            v547 = v116[102];
            v548 = v116[101];
            v549 = v116[87];
            v550 = v116[48];
            v551 = v116[43];
            v552 = v116[44];
            (*(void (**)(uint64_t, _QWORD))(v116[86] + 96))(v549, v116[85]);
            v553 = *(void (**)(uint64_t, uint64_t, uint64_t))(v552 + 32);
            v553(v550, v549, v551);
            v554 = sub_23843B1D4();
            v555 = *(void (**)(uint64_t, uint64_t, uint64_t))(v547 + 16);
            v555(v546, v554, v548);
            v556 = sub_23849255C();
            v557 = sub_238492868();
            if (os_log_type_enabled(v556, v557))
            {
              v558 = (uint8_t *)sub_238435F74();
              v1177[0] = 0;
              v1174 = 0;
              *(_WORD *)v558 = 0;
              v1176 = v558 + 2;
              sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_238433000, v556, v557, "Received parameterNotAllowed", v558, 2u);
              sub_238435FB0();
            }
            v666 = v116[137];
            v667 = v116[102];
            v668 = v116[101];
            swift_bridgeObjectRelease();

            v1162 = *(void (**)(uint64_t, uint64_t))(v667 + 8);
            v1162(v666, v668);
            v82 = (void *)v116[186];
            v670 = v116[47];
            v669 = v116[48];
            v671 = v116[44];
            v672 = v1141[43];
            v555(v1141[136], v554, v1141[101]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v671 + 16))(v670, v669, v672);
            v673 = (*(unsigned __int8 *)(v671 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v671 + 80);
            v674 = swift_allocObject();
            v553(v674 + v673, v670, v672);
            v675 = sub_23849255C();
            v676 = sub_23849285C();
            v677 = swift_allocObject();
            *(_BYTE *)(v677 + 16) = 32;
            v678 = swift_allocObject();
            *(_BYTE *)(v678 + 16) = 8;
            v679 = swift_allocObject();
            *(_QWORD *)(v679 + 16) = sub_238464D9C;
            *(_QWORD *)(v679 + 24) = v674;
            v680 = swift_allocObject();
            *(_QWORD *)(v680 + 16) = sub_2384655A8;
            *(_QWORD *)(v680 + 24) = v679;
            sub_238435C24(&qword_25690AC88);
            v681 = swift_allocObject();
            sub_238442118(v681, 3);
            *v682 = sub_2384655B0;
            v682[1] = v677;
            v682[2] = sub_2384655B0;
            v682[3] = v678;
            v682[4] = sub_2384655AC;
            v682[5] = v680;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v675, v676))
            {
              v683 = (uint8_t *)sub_238435F74();
              v1176 = 0;
              v1177[0] = swift_slowAlloc();
              v1093 = (uint8_t *)v1177[0];
              *(_WORD *)v683 = 258;
              v1173 = v683 + 2;
              v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
              v1175 = v677;
              sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
              if (!v82)
              {
                swift_release();
                v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
                v1175 = v678;
                sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                swift_release();
                v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
                v1175 = v680;
                sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                swift_release();
                _os_log_impl(&dword_238433000, v675, v676, "%s", v683, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x23B835AF4](v1093, -1, -1);
                sub_238435FB0();
              }
              goto LABEL_262;
            }
            v728 = v1141[136];
            v729 = v1141[101];
            swift_release();
            swift_release();
            swift_release();

            v1162(v728, v729);
            v53 = v1141;
            v1066 = (void (*)(uint64_t, uint64_t))v1141[182];
            v1075 = v1141[178];
            v1092 = (uint8_t *)v1141[177];
            v1127 = v1141[179];
            v1050 = v1141[174];
            v1057 = v1141[176];
            v1036 = v1141[171];
            v1043 = v1141[175];
            v1022 = v1141[159];
            v1029 = v1141[169];
            v1013 = v1141[158];
            v1017 = v1141[157];
            v1007 = v1141[155];
            v995 = v1141[152];
            v1001 = v1141[151];
            v655 = v1141[92];
            v656 = v1141[89];
            v657 = v1141[88];
            v658 = v1141[48];
            v660 = v1141[43];
            v659 = v1141[44];
          }
          else if (v153 == *MEMORY[0x24BE53310])
          {
            v627 = v116[135];
            v628 = v116[102];
            v629 = v116[101];
            v630 = v116[87];
            v631 = v116[42];
            v632 = v116[37];
            v633 = v116[38];
            (*(void (**)(uint64_t, _QWORD))(v116[86] + 96))(v630, v116[85]);
            v634 = *(void (**)(uint64_t, uint64_t, uint64_t))(v633 + 32);
            v634(v631, v630, v632);
            v635 = sub_23843B1D4();
            v636 = *(void (**)(uint64_t, uint64_t, uint64_t))(v628 + 16);
            v636(v627, v635, v629);
            v637 = sub_23849255C();
            v638 = sub_238492868();
            if (os_log_type_enabled(v637, v638))
            {
              v639 = (uint8_t *)sub_238435F74();
              v1177[0] = 0;
              v1174 = 0;
              *(_WORD *)v639 = 0;
              v1176 = v639 + 2;
              sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_238433000, v637, v638, "Received parameterCandidatesNotFound", v639, 2u);
              sub_238435FB0();
            }
            v732 = v116[135];
            v733 = v116[102];
            v734 = v116[101];
            swift_bridgeObjectRelease();

            v1164 = *(void (**)(uint64_t, uint64_t))(v733 + 8);
            v1164(v732, v734);
            v82 = (void *)v116[186];
            v736 = v116[41];
            v735 = v116[42];
            v737 = v116[38];
            v738 = v1141[37];
            v636(v1141[134], v635, v1141[101]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v737 + 16))(v736, v735, v738);
            v739 = (*(unsigned __int8 *)(v737 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v737 + 80);
            v740 = swift_allocObject();
            v634(v740 + v739, v736, v738);
            v741 = sub_23849255C();
            v742 = sub_23849285C();
            v743 = swift_allocObject();
            *(_BYTE *)(v743 + 16) = 32;
            v744 = swift_allocObject();
            *(_BYTE *)(v744 + 16) = 8;
            v745 = swift_allocObject();
            *(_QWORD *)(v745 + 16) = sub_238464D64;
            *(_QWORD *)(v745 + 24) = v740;
            v746 = swift_allocObject();
            *(_QWORD *)(v746 + 16) = sub_2384655A8;
            *(_QWORD *)(v746 + 24) = v745;
            sub_238435C24(&qword_25690AC88);
            v747 = swift_allocObject();
            sub_238442118(v747, 3);
            *v748 = sub_2384655B0;
            v748[1] = v743;
            v748[2] = sub_2384655B0;
            v748[3] = v744;
            v748[4] = sub_2384655AC;
            v748[5] = v746;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v741, v742))
            {
              v749 = (uint8_t *)sub_238435F74();
              v1176 = 0;
              v1177[0] = swift_slowAlloc();
              v1095 = (uint8_t *)v1177[0];
              *(_WORD *)v749 = 258;
              v1173 = v749 + 2;
              v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
              v1175 = v743;
              sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
              if (!v82)
              {
                swift_release();
                v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
                v1175 = v744;
                sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                swift_release();
                v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
                v1175 = v746;
                sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                swift_release();
                _os_log_impl(&dword_238433000, v741, v742, "%s", v749, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x23B835AF4](v1095, -1, -1);
                sub_238435FB0();
              }
              goto LABEL_262;
            }
            v794 = v1141[134];
            v795 = v1141[101];
            swift_release();
            swift_release();
            swift_release();

            v1164(v794, v795);
            v53 = v1141;
            v1066 = (void (*)(uint64_t, uint64_t))v1141[182];
            v1075 = v1141[178];
            v1092 = (uint8_t *)v1141[177];
            v1127 = v1141[179];
            v1050 = v1141[174];
            v1057 = v1141[176];
            v1036 = v1141[171];
            v1043 = v1141[175];
            v1022 = v1141[159];
            v1029 = v1141[169];
            v1013 = v1141[158];
            v1017 = v1141[157];
            v1007 = v1141[155];
            v995 = v1141[152];
            v1001 = v1141[151];
            v655 = v1141[92];
            v656 = v1141[89];
            v657 = v1141[88];
            v658 = v1141[42];
            v660 = v1141[37];
            v659 = v1141[38];
          }
          else if (v153 == *MEMORY[0x24BE532D0])
          {
            v702 = v116[133];
            v703 = v116[102];
            v704 = v116[101];
            v705 = v116[87];
            v706 = v116[36];
            v707 = v116[31];
            v708 = v116[32];
            (*(void (**)(uint64_t, _QWORD))(v116[86] + 96))(v705, v116[85]);
            v709 = *(void (**)(uint64_t, uint64_t, uint64_t))(v708 + 32);
            v709(v706, v705, v707);
            v710 = sub_23843B1D4();
            v711 = *(void (**)(uint64_t, uint64_t, uint64_t))(v703 + 16);
            v711(v702, v710, v704);
            v712 = sub_23849255C();
            v713 = sub_238492868();
            if (os_log_type_enabled(v712, v713))
            {
              v714 = (uint8_t *)sub_238435F74();
              v1177[0] = 0;
              v1174 = 0;
              *(_WORD *)v714 = 0;
              v1176 = v714 + 2;
              sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_238433000, v712, v713, "Received actionRequirement", v714, 2u);
              sub_238435FB0();
            }
            v798 = v116[133];
            v799 = v116[102];
            v800 = v116[101];
            swift_bridgeObjectRelease();

            v1166 = *(void (**)(uint64_t, uint64_t))(v799 + 8);
            v1166(v798, v800);
            v82 = (void *)v116[186];
            v802 = v116[35];
            v801 = v116[36];
            v803 = v116[32];
            v804 = v1141[31];
            v711(v1141[132], v710, v1141[101]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v803 + 16))(v802, v801, v804);
            v805 = (*(unsigned __int8 *)(v803 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v803 + 80);
            v806 = swift_allocObject();
            v709(v806 + v805, v802, v804);
            v807 = sub_23849255C();
            v808 = sub_23849285C();
            v809 = swift_allocObject();
            *(_BYTE *)(v809 + 16) = 32;
            v810 = swift_allocObject();
            *(_BYTE *)(v810 + 16) = 8;
            v811 = swift_allocObject();
            *(_QWORD *)(v811 + 16) = sub_238464D2C;
            *(_QWORD *)(v811 + 24) = v806;
            v812 = swift_allocObject();
            *(_QWORD *)(v812 + 16) = sub_2384655A8;
            *(_QWORD *)(v812 + 24) = v811;
            sub_238435C24(&qword_25690AC88);
            v813 = swift_allocObject();
            sub_238442118(v813, 3);
            *v814 = sub_2384655B0;
            v814[1] = v809;
            v814[2] = sub_2384655B0;
            v814[3] = v810;
            v814[4] = sub_2384655AC;
            v814[5] = v812;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v807, v808))
            {
              v815 = (uint8_t *)sub_238435F74();
              v1176 = 0;
              v1177[0] = swift_slowAlloc();
              v1097 = (uint8_t *)v1177[0];
              *(_WORD *)v815 = 258;
              v1173 = v815 + 2;
              v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
              v1175 = v809;
              sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
              if (!v82)
              {
                swift_release();
                v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
                v1175 = v810;
                sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                swift_release();
                v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
                v1175 = v812;
                sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                swift_release();
                _os_log_impl(&dword_238433000, v807, v808, "%s", v815, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x23B835AF4](v1097, -1, -1);
                sub_238435FB0();
              }
              goto LABEL_262;
            }
            v872 = v1141[132];
            v873 = v1141[101];
            swift_release();
            swift_release();
            swift_release();

            v1166(v872, v873);
            v53 = v1141;
            v1066 = (void (*)(uint64_t, uint64_t))v1141[182];
            v1075 = v1141[178];
            v1092 = (uint8_t *)v1141[177];
            v1127 = v1141[179];
            v1050 = v1141[174];
            v1057 = v1141[176];
            v1036 = v1141[171];
            v1043 = v1141[175];
            v1022 = v1141[159];
            v1029 = v1141[169];
            v1013 = v1141[158];
            v1017 = v1141[157];
            v1007 = v1141[155];
            v995 = v1141[152];
            v1001 = v1141[151];
            v655 = v1141[92];
            v656 = v1141[89];
            v657 = v1141[88];
            v658 = v1141[36];
            v660 = v1141[31];
            v659 = v1141[32];
          }
          else if (v153 == *MEMORY[0x24BE532F8])
          {
            v768 = v116[131];
            v769 = v116[102];
            v770 = v116[101];
            v771 = v116[87];
            v772 = v116[30];
            v773 = v116[25];
            v774 = v116[26];
            (*(void (**)(uint64_t, _QWORD))(v116[86] + 96))(v771, v116[85]);
            v775 = *(void (**)(uint64_t, uint64_t, uint64_t))(v774 + 32);
            v775(v772, v771, v773);
            v776 = sub_23843B1D4();
            v777 = *(void (**)(uint64_t, uint64_t, uint64_t))(v769 + 16);
            v777(v768, v776, v770);
            v778 = sub_23849255C();
            v779 = sub_238492868();
            if (os_log_type_enabled(v778, v779))
            {
              v780 = (uint8_t *)sub_238435F74();
              v1177[0] = 0;
              v1174 = 0;
              *(_WORD *)v780 = 0;
              v1176 = v780 + 2;
              sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_238433000, v778, v779, "Received valueDisambiguation", v780, 2u);
              sub_238435FB0();
            }
            v876 = v116[131];
            v877 = v116[102];
            v878 = v116[101];
            swift_bridgeObjectRelease();

            v1169 = *(void (**)(uint64_t, uint64_t))(v877 + 8);
            v1169(v876, v878);
            v82 = (void *)v116[186];
            v880 = v116[29];
            v879 = v116[30];
            v881 = v116[26];
            v882 = v1141[25];
            v777(v1141[130], v776, v1141[101]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v881 + 16))(v880, v879, v882);
            v883 = (*(unsigned __int8 *)(v881 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v881 + 80);
            v884 = swift_allocObject();
            v775(v884 + v883, v880, v882);
            v885 = sub_23849255C();
            v886 = sub_23849285C();
            v887 = swift_allocObject();
            *(_BYTE *)(v887 + 16) = 32;
            v888 = swift_allocObject();
            *(_BYTE *)(v888 + 16) = 8;
            v889 = swift_allocObject();
            *(_QWORD *)(v889 + 16) = sub_238464C98;
            *(_QWORD *)(v889 + 24) = v884;
            v890 = swift_allocObject();
            *(_QWORD *)(v890 + 16) = sub_2384655A8;
            *(_QWORD *)(v890 + 24) = v889;
            sub_238435C24(&qword_25690AC88);
            v891 = swift_allocObject();
            sub_238442118(v891, 3);
            *v892 = sub_2384655B0;
            v892[1] = v887;
            v892[2] = sub_2384655B0;
            v892[3] = v888;
            v892[4] = sub_2384655AC;
            v892[5] = v890;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v885, v886))
            {
              v893 = (uint8_t *)sub_238435F74();
              v1176 = 0;
              v1177[0] = swift_slowAlloc();
              v1101 = (uint8_t *)v1177[0];
              *(_WORD *)v893 = 258;
              v1173 = v893 + 2;
              v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
              v1175 = v887;
              sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
              if (!v82)
              {
                swift_release();
                v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
                v1175 = v888;
                sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                swift_release();
                v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
                v1175 = v890;
                sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                swift_release();
                _os_log_impl(&dword_238433000, v885, v886, "%s", v893, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x23B835AF4](v1101, -1, -1);
                sub_238435FB0();
              }
              goto LABEL_262;
            }
            v947 = v1141[130];
            v948 = v1141[101];
            swift_release();
            swift_release();
            swift_release();

            v1169(v947, v948);
            v53 = v1141;
            v1066 = (void (*)(uint64_t, uint64_t))v1141[182];
            v1075 = v1141[178];
            v1092 = (uint8_t *)v1141[177];
            v1127 = v1141[179];
            v1050 = v1141[174];
            v1057 = v1141[176];
            v1036 = v1141[171];
            v1043 = v1141[175];
            v1022 = v1141[159];
            v1029 = v1141[169];
            v1013 = v1141[158];
            v1017 = v1141[157];
            v1007 = v1141[155];
            v995 = v1141[152];
            v1001 = v1141[151];
            v655 = v1141[92];
            v656 = v1141[89];
            v657 = v1141[88];
            v658 = v1141[30];
            v660 = v1141[25];
            v659 = v1141[26];
          }
          else
          {
            if (v153 != *MEMORY[0x24BE53320])
            {
              v912 = v116[155];
              v913 = v116[154];
              v914 = v116[152];
              v915 = v1141[151];
              v916 = v1141[127];
              v917 = v1141[102];
              v918 = v1141[101];
              v1103 = (uint8_t *)v1141[91];
              v1130 = v1141[92];
              v919 = v1141[89];
              v1077 = v1141[88];
              v920 = sub_23843B1D4();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v917 + 16))(v916, v920, v918);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v914 + 16))(v913, v912, v915);
              v921 = (*(unsigned __int8 *)(v914 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v914 + 80);
              v922 = swift_allocObject();
              v15(v922 + v921, v913, v915);
              (*(void (**)(uint8_t *, NSObject *, uint64_t))(v919 + 16))(v1103, v1130, v1077);
              v923 = (*(unsigned __int8 *)(v919 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v919 + 80);
              v924 = swift_allocObject();
              v152(v924 + v923, (uint64_t)v1103, v1077);
              v1171 = sub_23849255C();
              v925 = sub_23849285C();
              v926 = swift_allocObject();
              *(_BYTE *)(v926 + 16) = 32;
              v927 = swift_allocObject();
              *(_BYTE *)(v927 + 16) = 8;
              v928 = swift_allocObject();
              *(_QWORD *)(v928 + 16) = sub_238464AC4;
              *(_QWORD *)(v928 + 24) = v922;
              v929 = swift_allocObject();
              *(_QWORD *)(v929 + 16) = sub_2384655A8;
              *(_QWORD *)(v929 + 24) = v928;
              v930 = swift_allocObject();
              *(_BYTE *)(v930 + 16) = 32;
              v931 = swift_allocObject();
              *(_BYTE *)(v931 + 16) = 8;
              v932 = swift_allocObject();
              *(_QWORD *)(v932 + 16) = sub_238464F38;
              *(_QWORD *)(v932 + 24) = v924;
              v933 = swift_allocObject();
              *(_QWORD *)(v933 + 16) = sub_2384655A8;
              *(_QWORD *)(v933 + 24) = v932;
              sub_238435C24(&qword_25690AC88);
              v934 = swift_allocObject();
              sub_238442118(v934, 6);
              *v935 = sub_2384655B0;
              v935[1] = v926;
              v935[2] = sub_2384655B0;
              v935[3] = v927;
              v935[4] = sub_2384655AC;
              v935[5] = v929;
              v935[6] = sub_2384655B0;
              v935[7] = v930;
              v935[8] = sub_2384655B0;
              v935[9] = v931;
              v935[10] = sub_2384655AC;
              v935[11] = v933;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              v1131 = v931;
              swift_retain();
              swift_retain();
              swift_bridgeObjectRelease();
              if (os_log_type_enabled(v1171, v925))
              {
                v82 = (void *)v1141[186];
                v936 = (uint8_t *)sub_238435F74();
                v1176 = 0;
                v1177[0] = swift_slowAlloc();
                v1104 = (uint8_t *)v1177[0];
                *(_WORD *)v936 = 514;
                v1173 = v936 + 2;
                v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
                v1175 = v926;
                sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                if (!v82)
                {
                  swift_release();
                  v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
                  v1175 = v927;
                  sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                  swift_release();
                  v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
                  v1175 = v929;
                  sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                  swift_release();
                  v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
                  v1175 = v930;
                  sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                  swift_release();
                  v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
                  v1175 = v1131;
                  sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                  swift_release();
                  v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
                  v1175 = v933;
                  sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                  swift_release();
                  _os_log_impl(&dword_238433000, v1171, v925, "Got actionResponse: %s\n%s", v936, 0x16u);
                  swift_arrayDestroy();
                  MEMORY[0x23B835AF4](v1104, -1, -1);
                  sub_238435FB0();
                }
                goto LABEL_262;
              }
              v973 = v1141[127];
              v974 = v1141[102];
              v975 = v1141[101];
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();

              (*(void (**)(uint64_t, uint64_t))(v974 + 8))(v973, v975);
              v53 = v1141;
              v1067 = (void (*)(uint64_t, uint64_t))v1141[182];
              v1078 = v1141[178];
              v1105 = (uint8_t *)v1141[177];
              v1132 = v1141[179];
              v1037 = v1141[175];
              v1051 = v1141[174];
              v1058 = v1141[176];
              v1014 = v1141[169];
              v1018 = v1141[171];
              v1008 = v1141[159];
              v996 = v1141[158];
              v1002 = v1141[157];
              v940 = v1141[155];
              v941 = v1141[152];
              v942 = v1141[151];
              v943 = v1141[92];
              v944 = v1141[89];
              v945 = v1141[88];
              v1044 = v1141[87];
              v1023 = v1141[86];
              v946 = v1141[85];
              goto LABEL_264;
            }
            v834 = v116[129];
            v835 = v116[102];
            v836 = v116[101];
            v837 = v116[87];
            v838 = v116[24];
            v839 = v116[19];
            v840 = v116[20];
            (*(void (**)(uint64_t, _QWORD))(v116[86] + 96))(v837, v116[85]);
            v841 = *(void (**)(uint64_t, uint64_t, uint64_t))(v840 + 32);
            v841(v838, v837, v839);
            v842 = sub_23843B1D4();
            v843 = *(void (**)(uint64_t, uint64_t, uint64_t))(v835 + 16);
            v843(v834, v842, v836);
            v844 = sub_23849255C();
            v845 = sub_238492868();
            if (os_log_type_enabled(v844, v845))
            {
              v846 = (uint8_t *)sub_238435F74();
              v1177[0] = 0;
              v1174 = 0;
              *(_WORD *)v846 = 0;
              v1176 = v846 + 2;
              sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_238433000, v844, v845, "Received failure", v846, 2u);
              sub_238435FB0();
            }
            v955 = v116[129];
            v956 = v116[102];
            v957 = v116[101];
            swift_bridgeObjectRelease();

            v1172 = *(void (**)(uint64_t, uint64_t))(v956 + 8);
            v1172(v955, v957);
            v82 = (void *)v116[186];
            v959 = v116[23];
            v958 = v116[24];
            v960 = v116[20];
            v961 = v1141[19];
            v843(v1141[128], v842, v1141[101]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v960 + 16))(v959, v958, v961);
            v962 = (*(unsigned __int8 *)(v960 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v960 + 80);
            v963 = swift_allocObject();
            v841(v963 + v962, v959, v961);
            v964 = sub_23849255C();
            v965 = sub_23849285C();
            v966 = swift_allocObject();
            *(_BYTE *)(v966 + 16) = 32;
            v967 = swift_allocObject();
            *(_BYTE *)(v967 + 16) = 8;
            v968 = swift_allocObject();
            *(_QWORD *)(v968 + 16) = sub_238464C60;
            *(_QWORD *)(v968 + 24) = v963;
            v969 = swift_allocObject();
            *(_QWORD *)(v969 + 16) = sub_2384655A8;
            *(_QWORD *)(v969 + 24) = v968;
            sub_238435C24(&qword_25690AC88);
            v970 = swift_allocObject();
            sub_238442118(v970, 3);
            *v971 = sub_2384655B0;
            v971[1] = v966;
            v971[2] = sub_2384655B0;
            v971[3] = v967;
            v971[4] = sub_2384655AC;
            v971[5] = v969;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v964, v965))
            {
              v972 = (uint8_t *)sub_238435F74();
              v1176 = 0;
              v1177[0] = swift_slowAlloc();
              v1106 = (uint8_t *)v1177[0];
              *(_WORD *)v972 = 258;
              v1173 = v972 + 2;
              v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
              v1175 = v966;
              sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
              if (!v82)
              {
                swift_release();
                v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
                v1175 = v967;
                sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                swift_release();
                v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
                v1175 = v969;
                sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
                swift_release();
                _os_log_impl(&dword_238433000, v964, v965, "%s", v972, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x23B835AF4](v1106, -1, -1);
                sub_238435FB0();
              }
              goto LABEL_262;
            }
            v977 = v1141[128];
            v978 = v1141[101];
            swift_release();
            swift_release();
            swift_release();

            v1172(v977, v978);
            v53 = v1141;
            v1066 = (void (*)(uint64_t, uint64_t))v1141[182];
            v1075 = v1141[178];
            v1092 = (uint8_t *)v1141[177];
            v1127 = v1141[179];
            v1050 = v1141[174];
            v1057 = v1141[176];
            v1036 = v1141[171];
            v1043 = v1141[175];
            v1022 = v1141[159];
            v1029 = v1141[169];
            v1013 = v1141[158];
            v1017 = v1141[157];
            v1007 = v1141[155];
            v995 = v1141[152];
            v1001 = v1141[151];
            v655 = v1141[92];
            v656 = v1141[89];
            v657 = v1141[88];
            v658 = v1141[24];
            v660 = v1141[19];
            v659 = v1141[20];
          }
          sub_238464C10();
          swift_allocError();
          *v979 = 1;
          swift_willThrow();
          swift_release();
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v659 + 8))(v658, v660);
          (*(void (**)(uint64_t, uint64_t))(v656 + 8))(v655, v657);
          goto LABEL_267;
        }
        v181 = v116;
        v339 = v116[143];
        v340 = v116[102];
        v341 = v116[101];
        v342 = v116[87];
        v343 = v116[66];
        v344 = v116[61];
        v345 = v116[62];
        (*(void (**)(uint64_t, _QWORD))(v116[86] + 96))(v342, v116[85]);
        v1156 = *(void (**)(uint64_t, uint64_t, uint64_t))(v345 + 32);
        v1156(v343, v342, v344);
        v346 = sub_23843B1D4();
        v347 = *(void (**)(uint64_t, uint64_t, uint64_t))(v340 + 16);
        v347(v339, v346, v341);
        v348 = sub_23849255C();
        v349 = sub_238492868();
        if (os_log_type_enabled(v348, v349))
        {
          v350 = (uint8_t *)sub_238435F74();
          v1177[0] = 0;
          v1174 = 0;
          *(_WORD *)v350 = 0;
          v1176 = v350 + 2;
          sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_238433000, v348, v349, "Received parameterNeedsValue", v350, 2u);
          sub_238435FB0();
        }
        v439 = v116[143];
        v440 = v116[102];
        v441 = v116[101];
        swift_bridgeObjectRelease();

        v1121 = *(NSObject **)(v440 + 8);
        ((void (*)(uint64_t, uint64_t))v1121)(v439, v441);
        v82 = (void *)v116[186];
        v442 = v116[66];
        v443 = v116[65];
        v444 = v116[62];
        v445 = v1141[61];
        v347(v1141[142], v346, v1141[101]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v444 + 16))(v443, v442, v445);
        v446 = (*(unsigned __int8 *)(v444 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v444 + 80);
        v447 = swift_allocObject();
        v1156(v447 + v446, v443, v445);
        v448 = sub_23849255C();
        v449 = sub_23849285C();
        v450 = swift_allocObject();
        *(_BYTE *)(v450 + 16) = 32;
        v451 = swift_allocObject();
        *(_BYTE *)(v451 + 16) = 8;
        v452 = swift_allocObject();
        *(_QWORD *)(v452 + 16) = sub_238464E44;
        *(_QWORD *)(v452 + 24) = v447;
        v453 = swift_allocObject();
        *(_QWORD *)(v453 + 16) = sub_2384655A8;
        *(_QWORD *)(v453 + 24) = v452;
        sub_238435C24(&qword_25690AC88);
        v454 = swift_allocObject();
        sub_238442118(v454, 3);
        *v455 = sub_2384655B0;
        v455[1] = v450;
        v455[2] = sub_2384655B0;
        v455[3] = v451;
        v455[4] = sub_2384655AC;
        v455[5] = v453;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v448, v449))
        {
          v456 = (uint8_t *)sub_238435F74();
          v457 = swift_slowAlloc();
          v1176 = 0;
          v1177[0] = v457;
          *(_WORD *)v456 = 258;
          v1173 = v456 + 2;
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
          v1175 = v450;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          if (!v82)
          {
            swift_release();
            v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
            v1175 = v451;
            sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
            swift_release();
            v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
            v1175 = v453;
            sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
            swift_release();
            _os_log_impl(&dword_238433000, v448, v449, "%s", v456, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B835AF4](v457, -1, -1);
            sub_238435FB0();
          }
          goto LABEL_262;
        }
        v501 = v1141[142];
        v502 = v1141[101];
        swift_release();
        swift_release();
        swift_release();

        ((void (*)(uint64_t, uint64_t))v1121)(v501, v502);
        v1074 = (void (*)(uint64_t, uint64_t))v1141[182];
        v1087 = (uint8_t *)v1141[178];
        v1116 = v1141[177];
        v1142 = v1141[179];
        v1056 = v181[174];
        v1065 = v181[176];
        v1042 = v181[171];
        v1049 = v181[175];
        v1028 = v181[159];
        v1035 = v181[169];
        v1016 = v181[158];
        v1021 = v181[157];
        v999 = v181[152];
        v1005 = v181[151];
        v1011 = v181[155];
        v365 = v181[92];
        v366 = v181[89];
        v367 = v181[88];
        v368 = v181[66];
        v370 = v181[61];
        v369 = v181[62];
      }
      sub_238464C10();
      swift_allocError();
      *v503 = 1;
      swift_willThrow();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v369 + 8))(v368, v370);
      (*(void (**)(uint64_t, uint64_t))(v366 + 8))(v365, v367);
LABEL_138:
      v53 = v181;
      (*(void (**)(uint64_t, uint64_t))(v999 + 8))(v1011, v1005);
LABEL_139:
      (*(void (**)(uint64_t, uint64_t))(v1016 + 8))(v1028, v1021);
      v1074(v1042, v1035);
      (*(void (**)(uint64_t, uint64_t))(v1049 + 8))(v1065, v1056);
      (*((void (**)(uint64_t, NSObject *))v1087 + 1))(v1142, v1116);
      goto LABEL_51;
    }
    v194 = v1[155];
    v195 = v1[154];
    v196 = v1[152];
    v197 = v1[151];
    v198 = v1[104];
    v199 = v1[102];
    v200 = v1[101];
    v201 = sub_23843B1D4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v199 + 16))(v198, v201, v200);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v196 + 16))(v195, v194, v197);
    v202 = (*(unsigned __int8 *)(v196 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80);
    v203 = swift_allocObject();
    v15(v203 + v202, v195, v197);
    v204 = sub_23849255C();
    v205 = sub_23849285C();
    v206 = swift_allocObject();
    *(_BYTE *)(v206 + 16) = 32;
    v207 = swift_allocObject();
    *(_BYTE *)(v207 + 16) = 8;
    v208 = swift_allocObject();
    *(_QWORD *)(v208 + 16) = sub_238464AC4;
    *(_QWORD *)(v208 + 24) = v203;
    v209 = swift_allocObject();
    *(_QWORD *)(v209 + 16) = sub_238464B08;
    *(_QWORD *)(v209 + 24) = v208;
    sub_238435C24(&qword_25690AC88);
    v210 = swift_allocObject();
    sub_238442118(v210, 3);
    *v211 = sub_238464AF0;
    v211[1] = v206;
    v211[2] = sub_2384655B0;
    v211[3] = v207;
    v211[4] = sub_238464B10;
    v211[5] = v209;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v204, v205))
    {
      v1114 = v205;
      v1150 = v204;
      v212 = (uint64_t)(v1 + 5);
      v213 = (uint64_t)(v1 + 6);
      v82 = (void *)v1[186];
      v214 = (uint8_t *)sub_238435F74();
      v215 = swift_slowAlloc();
      v1[5] = 0;
      v1[6] = v215;
      v1072 = v215;
      v1085 = v214;
      *(_WORD *)v214 = 258;
      v1[3] = v206;
      v1[4] = v214 + 2;
      v1[2] = sub_238464AF0;
      v1139 = v1;
      v216 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 2);
      v217 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 2);
      v218 = (uint64_t)(v1 + 4);
      sub_238435F7C(v217, v218, v212, v213);
      if (!v82)
      {
        swift_release();
        v1139[2] = sub_2384655B0;
        v1139[3] = v207;
        sub_238435F7C(v216, v218, v212, v213);
        swift_release();
        v1139[2] = sub_238464B10;
        v1139[3] = v209;
        sub_238435F7C(v216, v218, v212, v213);
        swift_release();
        _os_log_impl(&dword_238433000, v1150, v1114, "Got payload: %s", v1085, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B835AF4](v1072, -1, -1);
        sub_238435FB0();
      }
      goto LABEL_262;
    }
    v1153 = v1[155];
    v246 = v1[152];
    v247 = v1[151];
    v248 = v1[104];
    v249 = v1[102];
    v250 = v1[101];

    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v249 + 8))(v248, v250);
    (*(void (**)(uint64_t, uint64_t))(v246 + 8))(v1153, v247);
    v37 = v1[162];
    v38 = v1[161];
    v39 = v1[160];
LABEL_12:
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
LABEL_13:
    v1144 = (char *)&dword_25690AC80 + dword_25690AC80;
    v40 = (_QWORD *)swift_task_alloc();
    v1[185] = v40;
    *v40 = v1;
    v40[1] = sub_238459E78;
    ((void (*)(_QWORD, _QWORD, _QWORD))v1144)(v1[156], 0, 0);
    return;
  }
  v109 = v1[162];
  v110 = v1[18];
  v111 = v1[14];
  v112 = v1[15];
  v114 = v1[12];
  v113 = v1[13];
  v115 = v1[11];
  (*(void (**)(uint64_t, _QWORD))(v1[161] + 96))(v109, v1[160]);
  v116 = v1;
  v117 = *(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 32);
  v117(v110, v109, v111);
  sub_238492124();
  v118 = (*(uint64_t (**)(uint64_t, uint64_t))(v114 + 88))(v113, v115);
  if (v118 != *MEMORY[0x24BE523C0])
  {
    v1138 = v116;
    if (v118 == *MEMORY[0x24BE52370])
    {
      v181 = v116;
      v182 = v116[125];
      v183 = v116[102];
      v184 = v116[101];
      v185 = v116[76];
      v186 = v116[74];
      v187 = v116[73];
      v188 = v116[13];
      (*(void (**)(uint64_t, _QWORD))(v116[12] + 96))(v188, v116[11]);
      v1149 = *(void (**)(uint64_t, uint64_t, uint64_t))(v186 + 32);
      v1149(v185, v188, v187);
      v189 = sub_23843B1D4();
      v190 = *(void (**)(uint64_t, uint64_t, uint64_t))(v183 + 16);
      v190(v182, v189, v184);
      v191 = sub_23849255C();
      v192 = sub_238492868();
      if (os_log_type_enabled(v191, v192))
      {
        v193 = (uint8_t *)sub_238435F74();
        v1177[0] = 0;
        v1174 = 0;
        *(_WORD *)v193 = 0;
        v1176 = v193 + 2;
        sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_238433000, v191, v192, "Received actionConfirmation", v193, 2u);
        sub_238435FB0();
      }
      v253 = v116[125];
      v254 = v116[102];
      v255 = v116[101];
      swift_bridgeObjectRelease();

      v1115 = *(NSObject **)(v254 + 8);
      ((void (*)(uint64_t, uint64_t))v1115)(v253, v255);
      v82 = (void *)v116[186];
      v256 = v116[77];
      v257 = v116[76];
      v258 = v116[74];
      v259 = v1138[73];
      v190(v1138[124], v189, v1138[101]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v258 + 16))(v256, v257, v259);
      v260 = (*(unsigned __int8 *)(v258 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v258 + 80);
      v261 = swift_allocObject();
      v1149(v261 + v260, v256, v259);
      v262 = sub_23849255C();
      v263 = sub_23849285C();
      v264 = swift_allocObject();
      *(_BYTE *)(v264 + 16) = 32;
      v265 = swift_allocObject();
      *(_BYTE *)(v265 + 16) = 8;
      v266 = swift_allocObject();
      *(_QWORD *)(v266 + 16) = sub_238464E7C;
      *(_QWORD *)(v266 + 24) = v261;
      v267 = swift_allocObject();
      *(_QWORD *)(v267 + 16) = sub_2384655A8;
      *(_QWORD *)(v267 + 24) = v266;
      sub_238435C24(&qword_25690AC88);
      v268 = swift_allocObject();
      sub_238442118(v268, 3);
      *v269 = sub_2384655B0;
      v269[1] = v264;
      v269[2] = sub_2384655B0;
      v269[3] = v265;
      v269[4] = sub_2384655AC;
      v269[5] = v267;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v262, v263))
      {
        v270 = (uint8_t *)sub_238435F74();
        v271 = swift_slowAlloc();
        v1176 = 0;
        v1177[0] = v271;
        *(_WORD *)v270 = 258;
        v1173 = v270 + 2;
        v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
        v1175 = v264;
        sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
        if (!v82)
        {
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
          v1175 = v265;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
          v1175 = v267;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          _os_log_impl(&dword_238433000, v262, v263, "%s", v270, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B835AF4](v271, -1, -1);
          sub_238435FB0();
        }
        goto LABEL_262;
      }
      v296 = v1138[124];
      v297 = v1138[101];
      swift_release();
      swift_release();
      swift_release();

      ((void (*)(uint64_t, uint64_t))v1115)(v296, v297);
      v1074 = (void (*)(uint64_t, uint64_t))v1138[182];
      v1087 = (uint8_t *)v1138[178];
      v1116 = v1138[177];
      v1142 = v1138[179];
      v1056 = v181[174];
      v1065 = v181[176];
      v1042 = v181[171];
      v1049 = v181[175];
      v1028 = v181[159];
      v1035 = v181[169];
      v1016 = v181[158];
      v1021 = v181[157];
      v999 = v181[152];
      v1005 = v181[151];
      v1011 = v181[155];
      v298 = v181[76];
      v299 = v181[74];
      v300 = v181[73];
      goto LABEL_137;
    }
    if (v118 == *MEMORY[0x24BE52378])
    {
      v181 = v116;
      v234 = v116[111];
      v235 = v116[102];
      v236 = v116[101];
      v237 = v116[70];
      v238 = v116[68];
      v239 = v116[67];
      v240 = v116[13];
      (*(void (**)(uint64_t, _QWORD))(v116[12] + 96))(v240, v116[11]);
      v1152 = *(void (**)(uint64_t, uint64_t, uint64_t))(v238 + 32);
      v1152(v237, v240, v239);
      v241 = sub_23843B1D4();
      v242 = *(void (**)(uint64_t, uint64_t, uint64_t))(v235 + 16);
      v242(v234, v241, v236);
      v243 = sub_23849255C();
      v244 = sub_238492868();
      if (os_log_type_enabled(v243, v244))
      {
        v245 = (uint8_t *)sub_238435F74();
        v1177[0] = 0;
        v1174 = 0;
        *(_WORD *)v245 = 0;
        v1176 = v245 + 2;
        sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_238433000, v243, v244, "Received toolDisambiguation", v245, 2u);
        sub_238435FB0();
      }
      v320 = v116[111];
      v321 = v116[102];
      v322 = v116[101];
      swift_bridgeObjectRelease();

      v1118 = *(NSObject **)(v321 + 8);
      ((void (*)(uint64_t, uint64_t))v1118)(v320, v322);
      v82 = (void *)v116[186];
      v323 = v116[71];
      v324 = v116[70];
      v325 = v116[68];
      v326 = v1138[67];
      v242(v1138[110], v241, v1138[101]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v325 + 16))(v323, v324, v326);
      v327 = (*(unsigned __int8 *)(v325 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v325 + 80);
      v328 = swift_allocObject();
      v1152(v328 + v327, v323, v326);
      v329 = sub_23849255C();
      v330 = sub_23849285C();
      v331 = swift_allocObject();
      *(_BYTE *)(v331 + 16) = 32;
      v332 = swift_allocObject();
      *(_BYTE *)(v332 + 16) = 8;
      v333 = swift_allocObject();
      *(_QWORD *)(v333 + 16) = sub_238464CD0;
      *(_QWORD *)(v333 + 24) = v328;
      v334 = swift_allocObject();
      *(_QWORD *)(v334 + 16) = sub_2384655A8;
      *(_QWORD *)(v334 + 24) = v333;
      sub_238435C24(&qword_25690AC88);
      v335 = swift_allocObject();
      sub_238442118(v335, 3);
      *v336 = sub_2384655B0;
      v336[1] = v331;
      v336[2] = sub_2384655B0;
      v336[3] = v332;
      v336[4] = sub_2384655AC;
      v336[5] = v334;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v329, v330))
      {
        v337 = (uint8_t *)sub_238435F74();
        v338 = swift_slowAlloc();
        v1176 = 0;
        v1177[0] = v338;
        *(_WORD *)v337 = 258;
        v1173 = v337 + 2;
        v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
        v1175 = v331;
        sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
        if (!v82)
        {
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
          v1175 = v332;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
          v1175 = v334;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          _os_log_impl(&dword_238433000, v329, v330, "%s", v337, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B835AF4](v338, -1, -1);
          sub_238435FB0();
        }
        goto LABEL_262;
      }
      v371 = v1138[110];
      v372 = v1138[101];
      swift_release();
      swift_release();
      swift_release();

      ((void (*)(uint64_t, uint64_t))v1118)(v371, v372);
      v1074 = (void (*)(uint64_t, uint64_t))v1138[182];
      v1087 = (uint8_t *)v1138[178];
      v1116 = v1138[177];
      v1142 = v1138[179];
      v1056 = v181[174];
      v1065 = v181[176];
      v1042 = v181[171];
      v1049 = v181[175];
      v1028 = v181[159];
      v1035 = v181[169];
      v1016 = v181[158];
      v1021 = v181[157];
      v999 = v181[152];
      v1005 = v181[151];
      v1011 = v181[155];
      v298 = v181[70];
      v299 = v181[68];
      v300 = v181[67];
      goto LABEL_137;
    }
    if (v118 == *MEMORY[0x24BE52380])
    {
      v181 = v116;
      v284 = v116[123];
      v285 = v116[102];
      v286 = v116[101];
      v287 = v116[64];
      v288 = v116[61];
      v289 = v116[62];
      v290 = v116[13];
      (*(void (**)(uint64_t, _QWORD))(v116[12] + 96))(v290, v116[11]);
      v1155 = *(void (**)(uint64_t, uint64_t, uint64_t))(v289 + 32);
      v1155(v287, v290, v288);
      v291 = sub_23843B1D4();
      v292 = *(void (**)(uint64_t, uint64_t, uint64_t))(v285 + 16);
      v292(v284, v291, v286);
      v293 = sub_23849255C();
      v294 = sub_238492868();
      if (os_log_type_enabled(v293, v294))
      {
        v295 = (uint8_t *)sub_238435F74();
        v1177[0] = 0;
        v1174 = 0;
        *(_WORD *)v295 = 0;
        v1176 = v295 + 2;
        sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_238433000, v293, v294, "Received parameterNeedsValue", v295, 2u);
        sub_238435FB0();
      }
      v392 = v116[123];
      v393 = v116[102];
      v394 = v116[101];
      swift_bridgeObjectRelease();

      v1120 = *(NSObject **)(v393 + 8);
      ((void (*)(uint64_t, uint64_t))v1120)(v392, v394);
      v82 = (void *)v116[186];
      v395 = v116[65];
      v396 = v116[64];
      v397 = v116[61];
      v398 = v116[62];
      v292(v1138[122], v291, v1138[101]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v398 + 16))(v395, v396, v397);
      v399 = (*(unsigned __int8 *)(v398 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v398 + 80);
      v400 = swift_allocObject();
      v1155(v400 + v399, v395, v397);
      v401 = sub_23849255C();
      v402 = sub_23849285C();
      v403 = swift_allocObject();
      *(_BYTE *)(v403 + 16) = 32;
      v404 = swift_allocObject();
      *(_BYTE *)(v404 + 16) = 8;
      v405 = swift_allocObject();
      *(_QWORD *)(v405 + 16) = sub_238464E44;
      *(_QWORD *)(v405 + 24) = v400;
      v406 = swift_allocObject();
      *(_QWORD *)(v406 + 16) = sub_2384655A8;
      *(_QWORD *)(v406 + 24) = v405;
      sub_238435C24(&qword_25690AC88);
      v407 = swift_allocObject();
      sub_238442118(v407, 3);
      *v408 = sub_2384655B0;
      v408[1] = v403;
      v408[2] = sub_2384655B0;
      v408[3] = v404;
      v408[4] = sub_2384655AC;
      v408[5] = v406;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v401, v402))
      {
        v409 = (uint8_t *)sub_238435F74();
        v410 = swift_slowAlloc();
        v1176 = 0;
        v1177[0] = v410;
        *(_WORD *)v409 = 258;
        v1173 = v409 + 2;
        v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
        v1175 = v403;
        sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
        if (!v82)
        {
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
          v1175 = v404;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
          v1175 = v406;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          _os_log_impl(&dword_238433000, v401, v402, "%s", v409, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B835AF4](v410, -1, -1);
          sub_238435FB0();
        }
        goto LABEL_262;
      }
      v437 = v1138[122];
      v438 = v1138[101];
      swift_release();
      swift_release();
      swift_release();

      ((void (*)(uint64_t, uint64_t))v1120)(v437, v438);
      v1074 = (void (*)(uint64_t, uint64_t))v1138[182];
      v1087 = (uint8_t *)v1138[178];
      v1116 = v1138[177];
      v1142 = v1138[179];
      v1056 = v181[174];
      v1065 = v181[176];
      v1042 = v181[171];
      v1049 = v181[175];
      v1028 = v181[159];
      v1035 = v181[169];
      v1016 = v181[158];
      v1021 = v181[157];
      v999 = v181[152];
      v1005 = v181[151];
      v1011 = v181[155];
      v298 = v181[64];
      v300 = v181[61];
      v299 = v181[62];
      goto LABEL_137;
    }
    if (v118 == *MEMORY[0x24BE52398])
    {
      v181 = v116;
      v351 = v116[121];
      v352 = v116[102];
      v353 = v116[101];
      v354 = v116[58];
      v355 = v116[55];
      v356 = v116[56];
      v357 = v116[13];
      (*(void (**)(uint64_t, _QWORD))(v116[12] + 96))(v357, v116[11]);
      v1157 = *(void (**)(uint64_t, uint64_t, uint64_t))(v356 + 32);
      v1157(v354, v357, v355);
      v358 = sub_23843B1D4();
      v359 = *(void (**)(uint64_t, uint64_t, uint64_t))(v352 + 16);
      v359(v351, v358, v353);
      v360 = sub_23849255C();
      v361 = sub_238492868();
      if (os_log_type_enabled(v360, v361))
      {
        v362 = (uint8_t *)sub_238435F74();
        v1177[0] = 0;
        v1174 = 0;
        *(_WORD *)v362 = 0;
        v1176 = v362 + 2;
        sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_238433000, v360, v361, "Received parameterConfirmation", v362, 2u);
        sub_238435FB0();
      }
      v458 = v116[121];
      v459 = v116[102];
      v460 = v116[101];
      swift_bridgeObjectRelease();

      v1122 = *(NSObject **)(v459 + 8);
      ((void (*)(uint64_t, uint64_t))v1122)(v458, v460);
      v82 = (void *)v116[186];
      v462 = v116[58];
      v461 = v116[59];
      v463 = v116[56];
      v464 = v1138[55];
      v359(v1138[120], v358, v1138[101]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v463 + 16))(v461, v462, v464);
      v465 = (*(unsigned __int8 *)(v463 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v463 + 80);
      v466 = swift_allocObject();
      v1157(v466 + v465, v461, v464);
      v467 = sub_23849255C();
      v468 = sub_23849285C();
      v469 = swift_allocObject();
      *(_BYTE *)(v469 + 16) = 32;
      v470 = swift_allocObject();
      *(_BYTE *)(v470 + 16) = 8;
      v471 = swift_allocObject();
      *(_QWORD *)(v471 + 16) = sub_238464E0C;
      *(_QWORD *)(v471 + 24) = v466;
      v472 = swift_allocObject();
      *(_QWORD *)(v472 + 16) = sub_2384655A8;
      *(_QWORD *)(v472 + 24) = v471;
      sub_238435C24(&qword_25690AC88);
      v473 = swift_allocObject();
      sub_238442118(v473, 3);
      *v474 = sub_2384655B0;
      v474[1] = v469;
      v474[2] = sub_2384655B0;
      v474[3] = v470;
      v474[4] = sub_2384655AC;
      v474[5] = v472;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v467, v468))
      {
        v475 = (uint8_t *)sub_238435F74();
        v476 = swift_slowAlloc();
        v1176 = 0;
        v1177[0] = v476;
        *(_WORD *)v475 = 258;
        v1173 = v475 + 2;
        v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
        v1175 = v469;
        sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
        if (!v82)
        {
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
          v1175 = v470;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
          v1175 = v472;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          _os_log_impl(&dword_238433000, v467, v468, "%s", v475, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B835AF4](v476, -1, -1);
          sub_238435FB0();
        }
        goto LABEL_262;
      }
      v504 = v1138[120];
      v505 = v1138[101];
      swift_release();
      swift_release();
      swift_release();

      ((void (*)(uint64_t, uint64_t))v1122)(v504, v505);
      v1074 = (void (*)(uint64_t, uint64_t))v1138[182];
      v1087 = (uint8_t *)v1138[178];
      v1116 = v1138[177];
      v1142 = v1138[179];
      v1056 = v181[174];
      v1065 = v181[176];
      v1042 = v181[171];
      v1049 = v181[175];
      v1028 = v181[159];
      v1035 = v181[169];
      v1016 = v181[158];
      v1021 = v181[157];
      v999 = v181[152];
      v1005 = v181[151];
      v1011 = v181[155];
      v298 = v181[58];
      v300 = v181[55];
      v299 = v181[56];
LABEL_137:
      v506 = v181[18];
      v508 = v181[14];
      v507 = v181[15];
      sub_238464C10();
      swift_allocError();
      *v509 = 0;
      swift_willThrow();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v299 + 8))(v298, v300);
      (*(void (**)(uint64_t, uint64_t))(v507 + 8))(v506, v508);
      goto LABEL_138;
    }
    if (v118 == *MEMORY[0x24BE523A0])
    {
      v423 = v116[119];
      v424 = v116[102];
      v425 = v116[101];
      v426 = v116[52];
      v427 = v116[49];
      v428 = v116[50];
      v429 = v116[13];
      (*(void (**)(uint64_t, _QWORD))(v116[12] + 96))(v429, v116[11]);
      v1159 = *(void (**)(uint64_t, uint64_t, uint64_t))(v428 + 32);
      v1159(v426, v429, v427);
      v430 = sub_23843B1D4();
      v431 = *(void (**)(uint64_t, uint64_t, uint64_t))(v424 + 16);
      v431(v423, v430, v425);
      v432 = sub_23849255C();
      v433 = sub_238492868();
      if (os_log_type_enabled(v432, v433))
      {
        v434 = (uint8_t *)sub_238435F74();
        v1177[0] = 0;
        v1174 = 0;
        *(_WORD *)v434 = 0;
        v1176 = v434 + 2;
        sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_238433000, v432, v433, "Received parameterDisambiguation", v434, 2u);
        sub_238435FB0();
      }
      v528 = v116[119];
      v529 = v116[102];
      v530 = v116[101];
      swift_bridgeObjectRelease();

      v1124 = *(NSObject **)(v529 + 8);
      ((void (*)(uint64_t, uint64_t))v1124)(v528, v530);
      v82 = (void *)v116[186];
      v532 = v116[52];
      v531 = v116[53];
      v533 = v116[50];
      v534 = v1138[49];
      v431(v1138[118], v430, v1138[101]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v533 + 16))(v531, v532, v534);
      v535 = (*(unsigned __int8 *)(v533 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v533 + 80);
      v536 = swift_allocObject();
      v1159(v536 + v535, v531, v534);
      v537 = sub_23849255C();
      v538 = sub_23849285C();
      v539 = swift_allocObject();
      *(_BYTE *)(v539 + 16) = 32;
      v540 = swift_allocObject();
      *(_BYTE *)(v540 + 16) = 8;
      v541 = swift_allocObject();
      *(_QWORD *)(v541 + 16) = sub_238464DD4;
      *(_QWORD *)(v541 + 24) = v536;
      v542 = swift_allocObject();
      *(_QWORD *)(v542 + 16) = sub_2384655A8;
      *(_QWORD *)(v542 + 24) = v541;
      sub_238435C24(&qword_25690AC88);
      v543 = swift_allocObject();
      sub_238442118(v543, 3);
      *v544 = sub_2384655B0;
      v544[1] = v539;
      v544[2] = sub_2384655B0;
      v544[3] = v540;
      v544[4] = sub_2384655AC;
      v544[5] = v542;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v537, v538))
      {
        v545 = (uint8_t *)sub_238435F74();
        v1176 = 0;
        v1177[0] = swift_slowAlloc();
        v1089 = (uint8_t *)v1177[0];
        *(_WORD *)v545 = 258;
        v1173 = v545 + 2;
        v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
        v1175 = v539;
        sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
        if (!v82)
        {
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
          v1175 = v540;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
          v1175 = v542;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          _os_log_impl(&dword_238433000, v537, v538, "%s", v545, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B835AF4](v1089, -1, -1);
          sub_238435FB0();
        }
        goto LABEL_262;
      }
      v572 = v1138;
      v582 = v1138[118];
      v583 = v1138[101];
      swift_release();
      swift_release();
      swift_release();

      ((void (*)(uint64_t, uint64_t))v1124)(v582, v583);
      v1074 = (void (*)(uint64_t, uint64_t))v1138[182];
      v1087 = (uint8_t *)v1138[178];
      v1116 = v1138[177];
      v1142 = v1138[179];
      v1056 = v572[174];
      v1065 = v572[176];
      v1042 = v572[171];
      v1049 = v572[175];
      v1028 = v572[159];
      v1035 = v572[169];
      v1016 = v572[158];
      v1021 = v572[157];
      v1000 = v572[152];
      v1006 = v572[151];
      v1012 = v572[155];
      v584 = v572[52];
      v586 = v572[49];
      v585 = v572[50];
      v587 = v572[18];
      v589 = v572[14];
      v588 = v572[15];
      sub_238464C10();
      swift_allocError();
      *v590 = 0;
      swift_willThrow();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v585 + 8))(v584, v586);
      (*(void (**)(uint64_t, uint64_t))(v588 + 8))(v587, v589);
      goto LABEL_158;
    }
    if (v118 == *MEMORY[0x24BE52388])
    {
      v489 = v116[117];
      v490 = v116[102];
      v491 = v116[101];
      v492 = v116[46];
      v493 = v116[43];
      v494 = v116[44];
      v495 = v116[13];
      (*(void (**)(uint64_t, _QWORD))(v116[12] + 96))(v495, v116[11]);
      v1161 = *(void (**)(uint64_t, uint64_t, uint64_t))(v494 + 32);
      v1161(v492, v495, v493);
      v496 = sub_23843B1D4();
      v497 = *(void (**)(uint64_t, uint64_t, uint64_t))(v490 + 16);
      v497(v489, v496, v491);
      v498 = sub_23849255C();
      v499 = sub_238492868();
      if (os_log_type_enabled(v498, v499))
      {
        v500 = (uint8_t *)sub_238435F74();
        v1177[0] = 0;
        v1174 = 0;
        *(_WORD *)v500 = 0;
        v1176 = v500 + 2;
        sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_238433000, v498, v499, "Received parameterNotAllowed", v500, 2u);
        sub_238435FB0();
      }
      v609 = v116[117];
      v610 = v116[102];
      v611 = v116[101];
      swift_bridgeObjectRelease();

      v1126 = *(NSObject **)(v610 + 8);
      ((void (*)(uint64_t, uint64_t))v1126)(v609, v611);
      v82 = (void *)v116[186];
      v613 = v116[46];
      v612 = v116[47];
      v614 = v116[44];
      v615 = v1138[43];
      v497(v1138[116], v496, v1138[101]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v614 + 16))(v612, v613, v615);
      v616 = (*(unsigned __int8 *)(v614 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v614 + 80);
      v617 = swift_allocObject();
      v1161(v617 + v616, v612, v615);
      v618 = sub_23849255C();
      v619 = sub_23849285C();
      v620 = swift_allocObject();
      *(_BYTE *)(v620 + 16) = 32;
      v621 = swift_allocObject();
      *(_BYTE *)(v621 + 16) = 8;
      v622 = swift_allocObject();
      *(_QWORD *)(v622 + 16) = sub_238464D9C;
      *(_QWORD *)(v622 + 24) = v617;
      v623 = swift_allocObject();
      *(_QWORD *)(v623 + 16) = sub_2384655A8;
      *(_QWORD *)(v623 + 24) = v622;
      sub_238435C24(&qword_25690AC88);
      v624 = swift_allocObject();
      sub_238442118(v624, 3);
      *v625 = sub_2384655B0;
      v625[1] = v620;
      v625[2] = sub_2384655B0;
      v625[3] = v621;
      v625[4] = sub_2384655AC;
      v625[5] = v623;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v618, v619))
      {
        v626 = (uint8_t *)sub_238435F74();
        v1176 = 0;
        v1177[0] = swift_slowAlloc();
        v1091 = (uint8_t *)v1177[0];
        *(_WORD *)v626 = 258;
        v1173 = v626 + 2;
        v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
        v1175 = v620;
        sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
        if (!v82)
        {
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
          v1175 = v621;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
          v1175 = v623;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          _os_log_impl(&dword_238433000, v618, v619, "%s", v626, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B835AF4](v1091, -1, -1);
          sub_238435FB0();
        }
        goto LABEL_262;
      }
      v661 = v1138[116];
      v662 = v1138[101];
      swift_release();
      swift_release();
      swift_release();

      ((void (*)(uint64_t, uint64_t))v1126)(v661, v662);
      v53 = v1138;
      v1066 = (void (*)(uint64_t, uint64_t))v1138[182];
      v1075 = v1138[178];
      v1092 = (uint8_t *)v1138[177];
      v1127 = v1138[179];
      v1050 = v1138[174];
      v1057 = v1138[176];
      v1036 = v1138[171];
      v1043 = v1138[175];
      v1022 = v1138[159];
      v1029 = v1138[169];
      v1013 = v1138[158];
      v1017 = v1138[157];
      v1007 = v1138[155];
      v995 = v1138[152];
      v1001 = v1138[151];
      v663 = v1138[46];
      v665 = v1138[43];
      v664 = v1138[44];
      goto LABEL_257;
    }
    if (v118 == *MEMORY[0x24BE523A8])
    {
      v559 = v116[115];
      v560 = v116[102];
      v561 = v116[101];
      v562 = v116[40];
      v563 = v116[37];
      v564 = v116[38];
      v565 = v116[13];
      (*(void (**)(uint64_t, _QWORD))(v116[12] + 96))(v565, v116[11]);
      v566 = *(void (**)(uint64_t, uint64_t, uint64_t))(v564 + 32);
      v566(v562, v565, v563);
      v567 = sub_23843B1D4();
      v568 = *(void (**)(uint64_t, uint64_t, uint64_t))(v560 + 16);
      v568(v559, v567, v561);
      v569 = sub_23849255C();
      v570 = sub_238492868();
      if (os_log_type_enabled(v569, v570))
      {
        v571 = (uint8_t *)sub_238435F74();
        v1177[0] = 0;
        v1174 = 0;
        *(_WORD *)v571 = 0;
        v1176 = v571 + 2;
        sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_238433000, v569, v570, "Received parameterCandidatesNotFound", v571, 2u);
        sub_238435FB0();
      }
      v684 = v116[115];
      v685 = v116[102];
      v686 = v116[101];
      swift_bridgeObjectRelease();

      v1163 = *(void (**)(uint64_t, uint64_t))(v685 + 8);
      v1163(v684, v686);
      v82 = (void *)v116[186];
      v688 = v116[40];
      v687 = v116[41];
      v689 = v116[38];
      v690 = v1138[37];
      v568(v1138[114], v567, v1138[101]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v689 + 16))(v687, v688, v690);
      v691 = (*(unsigned __int8 *)(v689 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v689 + 80);
      v692 = swift_allocObject();
      v566(v692 + v691, v687, v690);
      v693 = sub_23849255C();
      v694 = sub_23849285C();
      v695 = swift_allocObject();
      *(_BYTE *)(v695 + 16) = 32;
      v696 = swift_allocObject();
      *(_BYTE *)(v696 + 16) = 8;
      v697 = swift_allocObject();
      *(_QWORD *)(v697 + 16) = sub_238464D64;
      *(_QWORD *)(v697 + 24) = v692;
      v698 = swift_allocObject();
      *(_QWORD *)(v698 + 16) = sub_2384655A8;
      *(_QWORD *)(v698 + 24) = v697;
      sub_238435C24(&qword_25690AC88);
      v699 = swift_allocObject();
      sub_238442118(v699, 3);
      *v700 = sub_2384655B0;
      v700[1] = v695;
      v700[2] = sub_2384655B0;
      v700[3] = v696;
      v700[4] = sub_2384655AC;
      v700[5] = v698;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v693, v694))
      {
        v701 = (uint8_t *)sub_238435F74();
        v1176 = 0;
        v1177[0] = swift_slowAlloc();
        v1094 = (uint8_t *)v1177[0];
        *(_WORD *)v701 = 258;
        v1173 = v701 + 2;
        v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
        v1175 = v695;
        sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
        if (!v82)
        {
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
          v1175 = v696;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
          v1175 = v698;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          _os_log_impl(&dword_238433000, v693, v694, "%s", v701, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B835AF4](v1094, -1, -1);
          sub_238435FB0();
        }
        goto LABEL_262;
      }
      v730 = v1138[114];
      v731 = v1138[101];
      swift_release();
      swift_release();
      swift_release();

      v1163(v730, v731);
      v53 = v1138;
      v1066 = (void (*)(uint64_t, uint64_t))v1138[182];
      v1075 = v1138[178];
      v1092 = (uint8_t *)v1138[177];
      v1127 = v1138[179];
      v1050 = v1138[174];
      v1057 = v1138[176];
      v1036 = v1138[171];
      v1043 = v1138[175];
      v1022 = v1138[159];
      v1029 = v1138[169];
      v1013 = v1138[158];
      v1017 = v1138[157];
      v1007 = v1138[155];
      v995 = v1138[152];
      v1001 = v1138[151];
      v663 = v1138[40];
      v665 = v1138[37];
      v664 = v1138[38];
      goto LABEL_257;
    }
    if (v118 == *MEMORY[0x24BE52368])
    {
      v640 = v116[113];
      v641 = v116[102];
      v642 = v116[101];
      v643 = v116[34];
      v644 = v116[31];
      v645 = v116[32];
      v646 = v116[13];
      (*(void (**)(uint64_t, _QWORD))(v116[12] + 96))(v646, v116[11]);
      v647 = *(void (**)(uint64_t, uint64_t, uint64_t))(v645 + 32);
      v647(v643, v646, v644);
      v648 = sub_23843B1D4();
      v649 = *(void (**)(uint64_t, uint64_t, uint64_t))(v641 + 16);
      v649(v640, v648, v642);
      v650 = sub_23849255C();
      v651 = sub_238492868();
      if (os_log_type_enabled(v650, v651))
      {
        v652 = (uint8_t *)sub_238435F74();
        v1177[0] = 0;
        v1174 = 0;
        *(_WORD *)v652 = 0;
        v1176 = v652 + 2;
        sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_238433000, v650, v651, "Received actionRequirement", v652, 2u);
        sub_238435FB0();
      }
      v750 = v116[113];
      v751 = v116[102];
      v752 = v116[101];
      swift_bridgeObjectRelease();

      v1165 = *(void (**)(uint64_t, uint64_t))(v751 + 8);
      v1165(v750, v752);
      v82 = (void *)v116[186];
      v754 = v116[34];
      v753 = v116[35];
      v755 = v116[32];
      v756 = v1138[31];
      v649(v1138[112], v648, v1138[101]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v755 + 16))(v753, v754, v756);
      v757 = (*(unsigned __int8 *)(v755 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v755 + 80);
      v758 = swift_allocObject();
      v647(v758 + v757, v753, v756);
      v759 = sub_23849255C();
      v760 = sub_23849285C();
      v761 = swift_allocObject();
      *(_BYTE *)(v761 + 16) = 32;
      v762 = swift_allocObject();
      *(_BYTE *)(v762 + 16) = 8;
      v763 = swift_allocObject();
      *(_QWORD *)(v763 + 16) = sub_238464D2C;
      *(_QWORD *)(v763 + 24) = v758;
      v764 = swift_allocObject();
      *(_QWORD *)(v764 + 16) = sub_2384655A8;
      *(_QWORD *)(v764 + 24) = v763;
      sub_238435C24(&qword_25690AC88);
      v765 = swift_allocObject();
      sub_238442118(v765, 3);
      *v766 = sub_2384655B0;
      v766[1] = v761;
      v766[2] = sub_2384655B0;
      v766[3] = v762;
      v766[4] = sub_2384655AC;
      v766[5] = v764;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v759, v760))
      {
        v767 = (uint8_t *)sub_238435F74();
        v1176 = 0;
        v1177[0] = swift_slowAlloc();
        v1096 = (uint8_t *)v1177[0];
        *(_WORD *)v767 = 258;
        v1173 = v767 + 2;
        v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
        v1175 = v761;
        sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
        if (!v82)
        {
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
          v1175 = v762;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
          v1175 = v764;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          _os_log_impl(&dword_238433000, v759, v760, "%s", v767, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B835AF4](v1096, -1, -1);
          sub_238435FB0();
        }
        goto LABEL_262;
      }
      v796 = v1138[112];
      v797 = v1138[101];
      swift_release();
      swift_release();
      swift_release();

      v1165(v796, v797);
      v53 = v1138;
      v1066 = (void (*)(uint64_t, uint64_t))v1138[182];
      v1075 = v1138[178];
      v1092 = (uint8_t *)v1138[177];
      v1127 = v1138[179];
      v1050 = v1138[174];
      v1057 = v1138[176];
      v1036 = v1138[171];
      v1043 = v1138[175];
      v1022 = v1138[159];
      v1029 = v1138[169];
      v1013 = v1138[158];
      v1017 = v1138[157];
      v1007 = v1138[155];
      v995 = v1138[152];
      v1001 = v1138[151];
      v663 = v1138[34];
      v665 = v1138[31];
      v664 = v1138[32];
      goto LABEL_257;
    }
    if (v118 == *MEMORY[0x24BE52390])
    {
      v715 = v116[109];
      v716 = v116[102];
      v717 = v116[101];
      v718 = v116[28];
      v719 = v116[25];
      v720 = v116[26];
      v721 = v116[13];
      (*(void (**)(uint64_t, _QWORD))(v116[12] + 96))(v721, v116[11]);
      v722 = *(void (**)(uint64_t, uint64_t, uint64_t))(v720 + 32);
      v722(v718, v721, v719);
      v723 = sub_23843B1D4();
      v724 = *(void (**)(uint64_t, uint64_t, uint64_t))(v716 + 16);
      v724(v715, v723, v717);
      v725 = sub_23849255C();
      v726 = sub_238492868();
      if (os_log_type_enabled(v725, v726))
      {
        v727 = (uint8_t *)sub_238435F74();
        v1177[0] = 0;
        v1174 = 0;
        *(_WORD *)v727 = 0;
        v1176 = v727 + 2;
        sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_238433000, v725, v726, "Received valueDisambiguation", v727, 2u);
        sub_238435FB0();
      }
      v816 = v116[109];
      v817 = v116[102];
      v818 = v116[101];
      swift_bridgeObjectRelease();

      v1167 = *(void (**)(uint64_t, uint64_t))(v817 + 8);
      v1167(v816, v818);
      v82 = (void *)v116[186];
      v820 = v116[28];
      v819 = v116[29];
      v821 = v116[26];
      v822 = v1138[25];
      v724(v1138[108], v723, v1138[101]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v821 + 16))(v819, v820, v822);
      v823 = (*(unsigned __int8 *)(v821 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v821 + 80);
      v824 = swift_allocObject();
      v722(v824 + v823, v819, v822);
      v825 = sub_23849255C();
      v826 = sub_23849285C();
      v827 = swift_allocObject();
      *(_BYTE *)(v827 + 16) = 32;
      v828 = swift_allocObject();
      *(_BYTE *)(v828 + 16) = 8;
      v829 = swift_allocObject();
      *(_QWORD *)(v829 + 16) = sub_238464C98;
      *(_QWORD *)(v829 + 24) = v824;
      v830 = swift_allocObject();
      *(_QWORD *)(v830 + 16) = sub_2384655A8;
      *(_QWORD *)(v830 + 24) = v829;
      sub_238435C24(&qword_25690AC88);
      v831 = swift_allocObject();
      sub_238442118(v831, 3);
      *v832 = sub_2384655B0;
      v832[1] = v827;
      v832[2] = sub_2384655B0;
      v832[3] = v828;
      v832[4] = sub_2384655AC;
      v832[5] = v830;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v825, v826))
      {
        v833 = (uint8_t *)sub_238435F74();
        v1176 = 0;
        v1177[0] = swift_slowAlloc();
        v1098 = (uint8_t *)v1177[0];
        *(_WORD *)v833 = 258;
        v1173 = v833 + 2;
        v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
        v1175 = v827;
        sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
        if (!v82)
        {
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
          v1175 = v828;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
          v1175 = v830;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          _os_log_impl(&dword_238433000, v825, v826, "%s", v833, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B835AF4](v1098, -1, -1);
          sub_238435FB0();
        }
        goto LABEL_262;
      }
      v874 = v1138[108];
      v875 = v1138[101];
      swift_release();
      swift_release();
      swift_release();

      v1167(v874, v875);
      v53 = v1138;
      v1066 = (void (*)(uint64_t, uint64_t))v1138[182];
      v1075 = v1138[178];
      v1092 = (uint8_t *)v1138[177];
      v1127 = v1138[179];
      v1050 = v1138[174];
      v1057 = v1138[176];
      v1036 = v1138[171];
      v1043 = v1138[175];
      v1022 = v1138[159];
      v1029 = v1138[169];
      v1013 = v1138[158];
      v1017 = v1138[157];
      v1007 = v1138[155];
      v995 = v1138[152];
      v1001 = v1138[151];
      v663 = v1138[28];
      v665 = v1138[25];
      v664 = v1138[26];
      goto LABEL_257;
    }
    if (v118 == *MEMORY[0x24BE523B8])
    {
      v781 = v116[107];
      v782 = v116[102];
      v783 = v116[101];
      v784 = v116[22];
      v785 = v116[19];
      v786 = v116[20];
      v787 = v116[13];
      (*(void (**)(uint64_t, _QWORD))(v116[12] + 96))(v787, v116[11]);
      v788 = *(void (**)(uint64_t, uint64_t, uint64_t))(v786 + 32);
      v788(v784, v787, v785);
      v789 = sub_23843B1D4();
      v790 = *(void (**)(uint64_t, uint64_t, uint64_t))(v782 + 16);
      v790(v781, v789, v783);
      v791 = sub_23849255C();
      v792 = sub_238492868();
      if (os_log_type_enabled(v791, v792))
      {
        v793 = (uint8_t *)sub_238435F74();
        v1177[0] = 0;
        v1174 = 0;
        *(_WORD *)v793 = 0;
        v1176 = v793 + 2;
        sub_2384648A8(MEMORY[0x24BEE4AF8], (uint64_t)&v1176, (uint64_t)v1177, (uint64_t)&v1174);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_238433000, v791, v792, "Received failure", v793, 2u);
        sub_238435FB0();
      }
      v894 = v116[107];
      v895 = v116[102];
      v896 = v116[101];
      swift_bridgeObjectRelease();

      v1170 = *(void (**)(uint64_t, uint64_t))(v895 + 8);
      v1170(v894, v896);
      v82 = (void *)v116[186];
      v898 = v116[22];
      v897 = v116[23];
      v899 = v116[20];
      v900 = v1138[19];
      v790(v1138[106], v789, v1138[101]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v899 + 16))(v897, v898, v900);
      v901 = (*(unsigned __int8 *)(v899 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v899 + 80);
      v902 = swift_allocObject();
      v788(v902 + v901, v897, v900);
      v903 = sub_23849255C();
      v904 = sub_23849285C();
      v905 = swift_allocObject();
      *(_BYTE *)(v905 + 16) = 32;
      v906 = swift_allocObject();
      *(_BYTE *)(v906 + 16) = 8;
      v907 = swift_allocObject();
      *(_QWORD *)(v907 + 16) = sub_238464C60;
      *(_QWORD *)(v907 + 24) = v902;
      v908 = swift_allocObject();
      *(_QWORD *)(v908 + 16) = sub_2384655A8;
      *(_QWORD *)(v908 + 24) = v907;
      sub_238435C24(&qword_25690AC88);
      v909 = swift_allocObject();
      sub_238442118(v909, 3);
      *v910 = sub_2384655B0;
      v910[1] = v905;
      v910[2] = sub_2384655B0;
      v910[3] = v906;
      v910[4] = sub_2384655AC;
      v910[5] = v908;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v903, v904))
      {
        v911 = (uint8_t *)sub_238435F74();
        v1176 = 0;
        v1177[0] = swift_slowAlloc();
        v1102 = (uint8_t *)v1177[0];
        *(_WORD *)v911 = 258;
        v1173 = v911 + 2;
        v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
        v1175 = v905;
        sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
        if (!v82)
        {
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
          v1175 = v906;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
          v1175 = v908;
          sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
          swift_release();
          _os_log_impl(&dword_238433000, v903, v904, "%s", v911, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B835AF4](v1102, -1, -1);
          sub_238435FB0();
        }
        goto LABEL_262;
      }
      v949 = v1138[106];
      v950 = v1138[101];
      swift_release();
      swift_release();
      swift_release();

      v1170(v949, v950);
      v53 = v1138;
      v1066 = (void (*)(uint64_t, uint64_t))v1138[182];
      v1075 = v1138[178];
      v1092 = (uint8_t *)v1138[177];
      v1127 = v1138[179];
      v1050 = v1138[174];
      v1057 = v1138[176];
      v1036 = v1138[171];
      v1043 = v1138[175];
      v1022 = v1138[159];
      v1029 = v1138[169];
      v1013 = v1138[158];
      v1017 = v1138[157];
      v1007 = v1138[155];
      v995 = v1138[152];
      v1001 = v1138[151];
      v663 = v1138[22];
      v665 = v1138[19];
      v664 = v1138[20];
LABEL_257:
      v951 = v53[18];
      v953 = v53[14];
      v952 = v53[15];
      sub_238464C10();
      swift_allocError();
      *v954 = 0;
      swift_willThrow();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v664 + 8))(v663, v665);
      (*(void (**)(uint64_t, uint64_t))(v952 + 8))(v951, v953);
LABEL_267:
      (*(void (**)(uint64_t, uint64_t))(v995 + 8))(v1007, v1001);
      (*(void (**)(uint64_t, uint64_t))(v1013 + 8))(v1022, v1017);
      v1066(v1036, v1029);
      (*(void (**)(uint64_t, uint64_t))(v1043 + 8))(v1057, v1050);
      (*(void (**)(NSObject *, uint8_t *))(v1075 + 8))(v1127, v1092);
      goto LABEL_51;
    }
    v847 = v116[155];
    v848 = v116[154];
    v849 = v116[152];
    v850 = v1138[151];
    v851 = v1138[105];
    v852 = v1138[102];
    v853 = v1138[101];
    v1099 = (uint8_t *)v1138[17];
    v1128 = v1138[18];
    v854 = v1138[15];
    v1076 = v1138[14];
    v855 = sub_23843B1D4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v852 + 16))(v851, v855, v853);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v849 + 16))(v848, v847, v850);
    v856 = (*(unsigned __int8 *)(v849 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v849 + 80);
    v857 = swift_allocObject();
    v15(v857 + v856, v848, v850);
    (*(void (**)(uint8_t *, NSObject *, uint64_t))(v854 + 16))(v1099, v1128, v1076);
    v858 = (*(unsigned __int8 *)(v854 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v854 + 80);
    v859 = swift_allocObject();
    v117(v859 + v858, (uint64_t)v1099, v1076);
    v1168 = sub_23849255C();
    v860 = sub_23849285C();
    v861 = swift_allocObject();
    *(_BYTE *)(v861 + 16) = 32;
    v862 = swift_allocObject();
    *(_BYTE *)(v862 + 16) = 8;
    v863 = swift_allocObject();
    *(_QWORD *)(v863 + 16) = sub_238464AC4;
    *(_QWORD *)(v863 + 24) = v857;
    v864 = swift_allocObject();
    *(_QWORD *)(v864 + 16) = sub_2384655A8;
    *(_QWORD *)(v864 + 24) = v863;
    v865 = swift_allocObject();
    *(_BYTE *)(v865 + 16) = 32;
    v866 = swift_allocObject();
    *(_BYTE *)(v866 + 16) = 8;
    v867 = swift_allocObject();
    *(_QWORD *)(v867 + 16) = sub_238464B84;
    *(_QWORD *)(v867 + 24) = v859;
    v868 = swift_allocObject();
    *(_QWORD *)(v868 + 16) = sub_2384655A8;
    *(_QWORD *)(v868 + 24) = v867;
    sub_238435C24(&qword_25690AC88);
    v869 = swift_allocObject();
    sub_238442118(v869, 6);
    *v870 = sub_2384655B0;
    v870[1] = v861;
    v870[2] = sub_2384655B0;
    v870[3] = v862;
    v870[4] = sub_2384655AC;
    v870[5] = v864;
    v870[6] = sub_2384655B0;
    v870[7] = v865;
    v870[8] = sub_2384655B0;
    v870[9] = v866;
    v870[10] = sub_2384655AC;
    v870[11] = v868;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v1129 = v866;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v1168, v860))
    {
      v82 = (void *)v1138[186];
      v871 = (uint8_t *)sub_238435F74();
      v1176 = 0;
      v1177[0] = swift_slowAlloc();
      v1100 = (uint8_t *)v1177[0];
      *(_WORD *)v871 = 514;
      v1173 = v871 + 2;
      v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
      v1175 = v861;
      sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
      if (!v82)
      {
        swift_release();
        v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
        v1175 = v862;
        sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
        swift_release();
        v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
        v1175 = v864;
        sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
        swift_release();
        v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
        v1175 = v865;
        sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
        swift_release();
        v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
        v1175 = v1129;
        sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
        swift_release();
        v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
        v1175 = v868;
        sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
        swift_release();
        _os_log_impl(&dword_238433000, v1168, v860, "Got actionResponse: %s\n%s", v871, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B835AF4](v1100, -1, -1);
        sub_238435FB0();
      }
      goto LABEL_262;
    }
    v937 = v1138[105];
    v938 = v1138[102];
    v939 = v1138[101];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v938 + 8))(v937, v939);
    v53 = v1138;
    v1067 = (void (*)(uint64_t, uint64_t))v1138[182];
    v1078 = v1138[178];
    v1105 = (uint8_t *)v1138[177];
    v1132 = v1138[179];
    v1037 = v1138[175];
    v1051 = v1138[174];
    v1058 = v1138[176];
    v1014 = v1138[169];
    v1018 = v1138[171];
    v1008 = v1138[159];
    v996 = v1138[158];
    v1002 = v1138[157];
    v940 = v1138[155];
    v941 = v1138[152];
    v942 = v1138[151];
    v943 = v1138[18];
    v945 = v1138[14];
    v944 = v1138[15];
    v1044 = v1138[13];
    v1023 = v1138[12];
    v946 = v1138[11];
LABEL_264:
    v1030 = v946;
    sub_238464C10();
    swift_allocError();
    *v976 = 0;
    swift_willThrow();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v944 + 8))(v943, v945);
    (*(void (**)(uint64_t, uint64_t))(v941 + 8))(v940, v942);
    (*(void (**)(uint64_t, uint64_t))(v996 + 8))(v1008, v1002);
    v1067(v1018, v1014);
    (*(void (**)(uint64_t, uint64_t))(v1037 + 8))(v1058, v1051);
    (*(void (**)(NSObject *, uint8_t *))(v1078 + 8))(v1132, v1105);
    (*(void (**)(uint64_t, uint64_t))(v1023 + 8))(v1044, v1030);
    goto LABEL_51;
  }
  v119 = v116[126];
  v120 = v116[102];
  v121 = v116[101];
  v122 = v116[83];
  v123 = v116[82];
  v124 = v116[80];
  v125 = v116[79];
  v126 = v116[13];
  (*(void (**)(uint64_t, _QWORD))(v116[12] + 96))(v126, v116[11]);
  v127 = *(void (**)(uint64_t, uint64_t, uint64_t))(v124 + 32);
  v127(v123, v126, v125);
  v128 = sub_23843B1D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 16))(v119, v128, v121);
  v129 = *(void (**)(uint64_t, uint64_t, uint64_t))(v124 + 16);
  v129(v122, v123, v125);
  v130 = (*(unsigned __int8 *)(v124 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80);
  v131 = swift_allocObject();
  v127(v131 + v130, v122, v125);
  v129(v122, v123, v125);
  v132 = swift_allocObject();
  v127(v132 + v130, v122, v125);
  v1112 = sub_23849255C();
  v1083 = sub_238492880();
  v133 = swift_allocObject();
  *(_BYTE *)(v133 + 16) = 32;
  v134 = swift_allocObject();
  *(_BYTE *)(v134 + 16) = 8;
  v135 = swift_allocObject();
  *(_QWORD *)(v135 + 16) = sub_238464EB4;
  *(_QWORD *)(v135 + 24) = v131;
  v136 = swift_allocObject();
  *(_QWORD *)(v136 + 16) = sub_2384655A8;
  *(_QWORD *)(v136 + 24) = v135;
  v137 = swift_allocObject();
  *(_BYTE *)(v137 + 16) = 32;
  v138 = swift_allocObject();
  *(_BYTE *)(v138 + 16) = 8;
  v139 = swift_allocObject();
  *(_QWORD *)(v139 + 16) = sub_238464EDC;
  *(_QWORD *)(v139 + 24) = v132;
  v140 = swift_allocObject();
  *(_QWORD *)(v140 + 16) = sub_2384655A8;
  *(_QWORD *)(v140 + 24) = v139;
  sub_238435C24(&qword_25690AC88);
  v141 = swift_allocObject();
  sub_238442118(v141, 6);
  *v142 = sub_2384655B0;
  v142[1] = v133;
  v142[2] = sub_2384655B0;
  v142[3] = v134;
  v142[4] = sub_2384655AC;
  v142[5] = v136;
  v142[6] = sub_2384655B0;
  v142[7] = v137;
  v142[8] = sub_2384655B0;
  v142[9] = v138;
  v142[10] = sub_2384655AC;
  v142[11] = v140;
  v1146 = v133;
  v143 = v136;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (!os_log_type_enabled(v1112, v1083))
  {
    v1140 = v116[179];
    v1064 = (void (*)(uint64_t, uint64_t))v116[182];
    v1073 = v116[178];
    v1086 = (uint8_t *)v116[177];
    v1048 = v116[174];
    v1055 = v116[176];
    v1034 = v116[171];
    v1041 = v116[175];
    v1020 = v116[159];
    v1027 = v116[169];
    v1010 = v116[158];
    v1015 = v116[157];
    v1004 = v116[155];
    v994 = v116[152];
    v998 = v116[151];
    v982 = v116[126];
    v219 = v116[102];
    v220 = v116[101];
    v988 = v116[82];
    v980 = v116[80];
    v984 = v116[79];
    v992 = v116[18];
    v986 = v116[15];
    v990 = v116[14];
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v219 + 8))(v982, v220);
    (*(void (**)(uint64_t, uint64_t))(v980 + 8))(v988, v984);
    v221 = v986;
    goto LABEL_69;
  }
  v82 = (void *)v116[186];
  v144 = (uint8_t *)sub_238435F74();
  v1176 = 0;
  v1177[0] = swift_slowAlloc();
  v1062 = v1177[0];
  *(_WORD *)v144 = 514;
  v1173 = v144 + 2;
  v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
  v1175 = v1146;
  sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
  if (!v82)
  {
    swift_release();
    v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
    v1175 = v134;
    sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
    swift_release();
    v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
    v1175 = v143;
    sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
    swift_release();
    v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
    v1175 = v137;
    sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
    swift_release();
    v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655B0;
    v1175 = v138;
    sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
    swift_release();
    v1174 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2384655AC;
    v1175 = v140;
    sub_238435F7C(&v1174, (uint64_t)&v1173, (uint64_t)&v1176, (uint64_t)v1177);
    swift_release();
    _os_log_impl(&dword_238433000, v1112, v1083, "Success: result=%s appLaunched=%s", v144, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v1062, -1, -1);
    sub_238435FB0();
  }
LABEL_262:

}

void sub_238463668()
{
  void *v0;

  JUMPOUT(0x2384634C0);
}

uint64_t sub_238463674()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1504) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2384636D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);

  v1 = v0[155];
  v2 = v0[152];
  v3 = v0[151];
  (*(void (**)(_QWORD, _QWORD))(v0[9] + 8))(v0[10], v0[8]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_25690AC80 + dword_25690AC80);
  v4 = (_QWORD *)swift_task_alloc();
  v0[185] = v4;
  *v4 = v0;
  v4[1] = sub_238459E78;
  return v6(v0[156], 0, 0);
}

uint64_t sub_238463778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
  v11 = *(_QWORD *)(v0 + 1424);
  v12 = *(_QWORD *)(v0 + 1416);
  v13 = *(_QWORD *)(v0 + 1432);
  v1 = *(_QWORD *)(v0 + 1408);
  v2 = *(_QWORD *)(v0 + 1400);
  v3 = *(_QWORD *)(v0 + 1392);
  v4 = *(_QWORD *)(v0 + 1368);
  v5 = *(_QWORD *)(v0 + 1352);
  v6 = *(_QWORD *)(v0 + 1272);
  v7 = *(_QWORD *)(v0 + 1264);
  v8 = *(_QWORD *)(v0 + 1256);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v10(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238463E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v16 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
  v17 = *(_QWORD *)(v0 + 1424);
  v18 = *(_QWORD *)(v0 + 1416);
  v19 = *(_QWORD *)(v0 + 1432);
  v14 = *(_QWORD *)(v0 + 1392);
  v15 = *(_QWORD *)(v0 + 1408);
  v12 = *(_QWORD *)(v0 + 1368);
  v13 = *(_QWORD *)(v0 + 1400);
  v10 = *(_QWORD *)(v0 + 1272);
  v11 = *(_QWORD *)(v0 + 1352);
  v1 = *(_QWORD *)(v0 + 1264);
  v2 = *(_QWORD *)(v0 + 1256);
  v3 = *(_QWORD *)(v0 + 1240);
  v4 = *(_QWORD *)(v0 + 1216);
  v5 = *(_QWORD *)(v0 + 1208);
  v7 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 64);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v10, v2);
  v16(v12, v11);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238464504()
{
  return sub_238492520();
}

uint64_t sub_238464570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v3[3] = a2;
  v3[4] = a3;
  sub_2384921FC();
  sub_2384652F8();
  v4 = (_QWORD *)swift_task_alloc();
  v3[5] = v4;
  *v4 = v3;
  v4[1] = sub_2384645EC;
  return sub_2384927D8();
}

uint64_t sub_2384645EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  if (*(_QWORD *)(v2 + 24))
  {
    swift_getObjectType();
    sub_2384927A8();
  }
  return swift_task_switch();
}

uint64_t sub_238464684()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 48);
  sub_238435C24(&qword_25690A630);
  swift_willThrowTypedImpl();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2384646DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_238492070();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238492148();
  v4 = sub_238492064();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_238464764(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3 = a2(0);
  MEMORY[0x24BDAC7A8](v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v7 - v5, a1, v3);
  return sub_23849264C();
}

uint64_t sub_2384647E0(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  a3(v5);
  return sub_23849264C();
}

uint64_t sub_238464854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_238438264;
  return ScheduledQueryStandardRunner.run(query:)(a1, a2);
}

uint64_t sub_2384648A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(result + 16);
  if (v4)
  {
    v8 = swift_bridgeObjectRetain() + 40;
    do
    {
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 8);
      swift_retain();
      v9(a2, a3, a4);
      swift_release();
      v8 += 16;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_238464938(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_238492934();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

unint64_t sub_2384649E8()
{
  unint64_t result;

  result = qword_25690AC58;
  if (!qword_25690AC58)
  {
    result = MEMORY[0x23B835A40](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_25690AC58);
  }
  return result;
}

uint64_t sub_238464A2C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_238464A3C(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_2384517C8(result, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryStandardRunner()
{
  return &type metadata for ScheduledQueryStandardRunner;
}

uint64_t sub_238464A78(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_238435C24(&qword_25690AC70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_238464AB8()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE538F0]);
}

uint64_t sub_238464AC4()
{
  return sub_238464B24((uint64_t (*)(_QWORD))MEMORY[0x24BE538F0], (uint64_t (*)(_QWORD))MEMORY[0x24BE52D38], (void (*)(uint64_t))MEMORY[0x24BE538D8]);
}

uint64_t sub_238464AE0()
{
  return swift_deallocObject();
}

_BYTE **sub_238464AF0(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_238436628(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_238464AF8()
{
  return swift_deallocObject();
}

uint64_t sub_238464B08()
{
  uint64_t v0;

  return sub_238435FBC(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_238464B10(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_238435FDC(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_238464B18()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE538F0]);
}

uint64_t sub_238464B24(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD), void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return sub_2384647E0(v3 + ((v6 + 16) & ~v6), a2, a3);
}

uint64_t sub_238464B78()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE525C0]);
}

uint64_t sub_238464B84()
{
  return sub_238464B90((uint64_t (*)(_QWORD))MEMORY[0x24BE525C0]);
}

uint64_t sub_238464B90(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return sub_238464764(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_238464BD0()
{
  return swift_deallocObject();
}

uint64_t sub_238464BE0()
{
  return swift_deallocObject();
}

uint64_t sub_238464BF0()
{
  return swift_deallocObject();
}

uint64_t sub_238464C00()
{
  return swift_deallocObject();
}

unint64_t sub_238464C10()
{
  unint64_t result;

  result = qword_25690AC90;
  if (!qword_25690AC90)
  {
    result = MEMORY[0x23B835A40](&unk_238495490, &type metadata for StandardRunnerError);
    atomic_store(result, (unint64_t *)&qword_25690AC90);
  }
  return result;
}

uint64_t sub_238464C54()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE52340]);
}

uint64_t sub_238464C60()
{
  return sub_238464B90((uint64_t (*)(_QWORD))MEMORY[0x24BE52340]);
}

uint64_t sub_238464C6C()
{
  return swift_deallocObject();
}

uint64_t sub_238464C7C()
{
  return swift_deallocObject();
}

uint64_t sub_238464C8C()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE53778]);
}

uint64_t sub_238464C98()
{
  return sub_238464B90((uint64_t (*)(_QWORD))MEMORY[0x24BE53778]);
}

uint64_t sub_238464CA4()
{
  return swift_deallocObject();
}

uint64_t sub_238464CB4()
{
  return swift_deallocObject();
}

uint64_t sub_238464CC4()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE53628]);
}

uint64_t sub_238464CD0()
{
  return sub_238464B90((uint64_t (*)(_QWORD))MEMORY[0x24BE53628]);
}

uint64_t sub_238464CDC()
{
  return swift_deallocObject();
}

uint64_t sub_238464CEC()
{
  return swift_deallocObject();
}

uint64_t sub_238464CFC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_238464D20()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE53378]);
}

uint64_t sub_238464D2C()
{
  return sub_238464B90((uint64_t (*)(_QWORD))MEMORY[0x24BE53378]);
}

uint64_t sub_238464D38()
{
  return swift_deallocObject();
}

uint64_t sub_238464D48()
{
  return swift_deallocObject();
}

uint64_t sub_238464D58()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE53EE8]);
}

uint64_t sub_238464D64()
{
  return sub_238464B90((uint64_t (*)(_QWORD))MEMORY[0x24BE53EE8]);
}

uint64_t sub_238464D70()
{
  return swift_deallocObject();
}

uint64_t sub_238464D80()
{
  return swift_deallocObject();
}

uint64_t sub_238464D90()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE536C0]);
}

uint64_t sub_238464D9C()
{
  return sub_238464B90((uint64_t (*)(_QWORD))MEMORY[0x24BE536C0]);
}

uint64_t sub_238464DA8()
{
  return swift_deallocObject();
}

uint64_t sub_238464DB8()
{
  return swift_deallocObject();
}

uint64_t sub_238464DC8()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE53AD0]);
}

uint64_t sub_238464DD4()
{
  return sub_238464B90((uint64_t (*)(_QWORD))MEMORY[0x24BE53AD0]);
}

uint64_t sub_238464DE0()
{
  return swift_deallocObject();
}

uint64_t sub_238464DF0()
{
  return swift_deallocObject();
}

uint64_t sub_238464E00()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE53960]);
}

uint64_t sub_238464E0C()
{
  return sub_238464B90((uint64_t (*)(_QWORD))MEMORY[0x24BE53960]);
}

uint64_t sub_238464E18()
{
  return swift_deallocObject();
}

uint64_t sub_238464E28()
{
  return swift_deallocObject();
}

uint64_t sub_238464E38()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE53668]);
}

uint64_t sub_238464E44()
{
  return sub_238464B90((uint64_t (*)(_QWORD))MEMORY[0x24BE53668]);
}

uint64_t sub_238464E50()
{
  return swift_deallocObject();
}

uint64_t sub_238464E60()
{
  return swift_deallocObject();
}

uint64_t sub_238464E70()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE535D0]);
}

uint64_t sub_238464E7C()
{
  return sub_238464B90((uint64_t (*)(_QWORD))MEMORY[0x24BE535D0]);
}

uint64_t sub_238464E88()
{
  return swift_deallocObject();
}

uint64_t sub_238464E98()
{
  return swift_deallocObject();
}

uint64_t sub_238464EA8()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE52458]);
}

uint64_t sub_238464EB4()
{
  return sub_238464B24((uint64_t (*)(_QWORD))MEMORY[0x24BE52458], MEMORY[0x24BEB9A18], MEMORY[0x24BE52430]);
}

uint64_t sub_238464ED0()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE52458]);
}

uint64_t sub_238464EE0()
{
  return swift_deallocObject();
}

uint64_t sub_238464EF0()
{
  return swift_deallocObject();
}

uint64_t sub_238464F00()
{
  return swift_deallocObject();
}

uint64_t sub_238464F10()
{
  return swift_deallocObject();
}

uint64_t sub_238464F20()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE538F0]);
}

uint64_t sub_238464F2C()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE530F8]);
}

uint64_t sub_238464F38()
{
  return sub_238464B90((uint64_t (*)(_QWORD))MEMORY[0x24BE530F8]);
}

uint64_t sub_238464F44()
{
  return swift_deallocObject();
}

uint64_t sub_238464F54()
{
  return swift_deallocObject();
}

uint64_t sub_238464F64()
{
  return swift_deallocObject();
}

uint64_t sub_238464F74()
{
  return swift_deallocObject();
}

uint64_t sub_238464F84()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE52340]);
}

uint64_t sub_238464F90()
{
  return swift_deallocObject();
}

uint64_t sub_238464FA0()
{
  return swift_deallocObject();
}

uint64_t sub_238464FB0()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE53778]);
}

uint64_t sub_238464FBC()
{
  return swift_deallocObject();
}

uint64_t sub_238464FCC()
{
  return swift_deallocObject();
}

uint64_t sub_238464FDC()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE53378]);
}

uint64_t sub_238464FE8()
{
  return swift_deallocObject();
}

uint64_t sub_238464FF8()
{
  return swift_deallocObject();
}

uint64_t sub_238465008()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE53EE8]);
}

uint64_t sub_238465014()
{
  return swift_deallocObject();
}

uint64_t sub_238465024()
{
  return swift_deallocObject();
}

uint64_t sub_238465034()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE536C0]);
}

uint64_t sub_238465040()
{
  return swift_deallocObject();
}

uint64_t sub_238465050()
{
  return swift_deallocObject();
}

uint64_t sub_238465060()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE53AD0]);
}

uint64_t sub_23846506C()
{
  return swift_deallocObject();
}

uint64_t sub_23846507C()
{
  return swift_deallocObject();
}

uint64_t sub_23846508C()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE53960]);
}

uint64_t sub_238465098()
{
  return swift_deallocObject();
}

uint64_t sub_2384650A8()
{
  return swift_deallocObject();
}

uint64_t sub_2384650B8()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE53668]);
}

uint64_t sub_2384650C4()
{
  return swift_deallocObject();
}

uint64_t sub_2384650D4()
{
  return swift_deallocObject();
}

uint64_t sub_2384650E4()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE53628]);
}

uint64_t sub_2384650F0()
{
  return swift_deallocObject();
}

uint64_t sub_238465100()
{
  return swift_deallocObject();
}

uint64_t sub_238465110()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE535D0]);
}

uint64_t sub_23846511C()
{
  return swift_deallocObject();
}

uint64_t sub_23846512C()
{
  return swift_deallocObject();
}

uint64_t sub_23846513C()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE52458]);
}

uint64_t sub_238465148()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE52458]);
}

uint64_t sub_238465154()
{
  sub_2384920D0();
  if ((sub_2384920C4() & 1) != 0)
    return 1702195828;
  else
    return 0x65736C6166;
}

uint64_t sub_2384651B4()
{
  return swift_deallocObject();
}

uint64_t sub_2384651C4()
{
  return swift_deallocObject();
}

uint64_t sub_2384651D4()
{
  return swift_deallocObject();
}

uint64_t sub_2384651E4()
{
  return swift_deallocObject();
}

uint64_t sub_2384651F4()
{
  return sub_238465200((uint64_t (*)(_QWORD))MEMORY[0x24BE52748]);
}

uint64_t sub_238465200(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_238465264()
{
  sub_238492154();
  return sub_2384646DC();
}

uint64_t sub_238465290()
{
  return swift_deallocObject();
}

uint64_t sub_2384652A0()
{
  return swift_deallocObject();
}

uint64_t sub_2384652B0()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_2384652D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_2384652F0(uint64_t *a1, _QWORD **a2, uint64_t a3)
{
  uint64_t v3;

  sub_238464938(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

unint64_t sub_2384652F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25690AC98;
  if (!qword_25690AC98)
  {
    v1 = sub_2384921FC();
    result = MEMORY[0x23B835A40](MEMORY[0x24BE535F0], v1);
    atomic_store(result, (unint64_t *)&qword_25690AC98);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StandardRunnerError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StandardRunnerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23846541C + 4 * byte_238495335[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_238465450 + 4 * byte_238495330[v4]))();
}

uint64_t sub_238465450(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_238465458(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x238465460);
  return result;
}

uint64_t sub_23846546C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x238465474);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_238465478(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_238465480(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23846548C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for StandardRunnerError()
{
  return &type metadata for StandardRunnerError;
}

unint64_t sub_2384654AC(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_2384654D8();
  result = sub_23846551C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_2384654D8()
{
  unint64_t result;

  result = qword_25690ACA0;
  if (!qword_25690ACA0)
  {
    result = MEMORY[0x23B835A40](&unk_238495384, &type metadata for StandardRunnerError);
    atomic_store(result, (unint64_t *)&qword_25690ACA0);
  }
  return result;
}

unint64_t sub_23846551C()
{
  unint64_t result;

  result = qword_25690ACA8;
  if (!qword_25690ACA8)
  {
    result = MEMORY[0x23B835A40](&unk_2384953C4, &type metadata for StandardRunnerError);
    atomic_store(result, (unint64_t *)&qword_25690ACA8);
  }
  return result;
}

unint64_t sub_238465564()
{
  unint64_t result;

  result = qword_25690ACB0;
  if (!qword_25690ACB0)
  {
    result = MEMORY[0x23B835A40](&unk_238495468, &type metadata for StandardRunnerError);
    atomic_store(result, (unint64_t *)&qword_25690ACB0);
  }
  return result;
}

uint64_t TriggerParameters.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char v59;
  BOOL v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;

  v79 = a2;
  v73 = sub_238435C24(&qword_25690ACB8);
  v68 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v74 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_238435C24(&qword_25690ACC0);
  v71 = *(_QWORD *)(v4 - 8);
  v72 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v78 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_238435C24(&qword_25690ACC8);
  v69 = *(_QWORD *)(v6 - 8);
  v70 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v76 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_238435C24(&qword_25690ACD0);
  v75 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TriggerParameters();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v62 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v62 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v62 - v20;
  v22 = a1[3];
  v80 = a1;
  sub_238438F90(a1, v22);
  sub_238465E0C();
  v23 = v81;
  sub_238492D54();
  if (v23)
    goto LABEL_16;
  v64 = v16;
  v65 = v19;
  v24 = v76;
  v81 = 0;
  v25 = v78;
  v63 = (uint64_t *)v13;
  v66 = v21;
  v67 = v10;
  v26 = v79;
  v27 = v77;
  v28 = sub_238492BF8();
  if (*(_QWORD *)(v28 + 16) != 1)
  {
    v36 = sub_238492AB4();
    swift_allocError();
    v38 = v37;
    sub_238435C24(&qword_25690A070);
    *v38 = v67;
    sub_238492B98();
    sub_238492AA8();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v38, *MEMORY[0x24BEE26D0], v36);
    swift_willThrow();
    goto LABEL_15;
  }
  v62 = v28;
  if (*(_BYTE *)(v28 + 32))
  {
    if (*(_BYTE *)(v28 + 32) == 1)
    {
      v29 = v26;
      v83 = 1;
      sub_238465ED8();
      v30 = v81;
      sub_238492B8C();
      if (!v30)
      {
        sub_238491E24();
        sub_23843E8CC(&qword_25690ACF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE20]);
        v31 = (uint64_t)v64;
        v32 = v72;
        v33 = (uint64_t)v66;
        sub_238492BEC();
        (*(void (**)(char *, uint64_t))(v71 + 8))(v25, v32);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v75 + 8))(v9, v27);
        swift_storeEnumTagMultiPayload();
        v34 = v31;
        v35 = (uint64_t)v80;
        goto LABEL_13;
      }
      goto LABEL_15;
    }
    v90 = 2;
    sub_238465E50();
    v44 = v74;
    v45 = v81;
    sub_238492B8C();
    if (v45)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v9, v27);
LABEL_16:
      v43 = (uint64_t)v80;
      return sub_238436B3C(v43);
    }
    v89 = 0;
    v47 = v73;
    v48 = v44;
    v49 = sub_238492BC8();
    v50 = v75;
    v51 = v49;
    v53 = v52;
    v88 = 5;
    LODWORD(v81) = sub_238492BB0();
    v87 = 1;
    sub_238492BE0();
    v55 = v54;
    v86 = 2;
    sub_238492BE0();
    v57 = v56;
    v85 = 3;
    sub_238492BE0();
    v78 = v58;
    v84 = 4;
    LODWORD(v76) = sub_238492BD4();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v48, v47);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v27);
    v59 = v81;
    v60 = v81 == 2;
    v61 = v63;
    *v63 = v51;
    v61[1] = v53;
    v61[2] = v55;
    v61[3] = v57;
    v61[4] = (uint64_t)v78;
    *((_BYTE *)v61 + 40) = v76 & 1;
    *((_BYTE *)v61 + 41) = (v60 | v59) & 1;
    swift_storeEnumTagMultiPayload();
    v34 = (uint64_t)v61;
    v35 = (uint64_t)v80;
    v29 = v26;
  }
  else
  {
    v82 = 0;
    sub_238465F1C();
    v39 = v81;
    sub_238492B8C();
    if (v39)
      goto LABEL_15;
    v29 = v26;
    sub_238491F98();
    sub_23843E8CC(&qword_25690A0B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v40 = (uint64_t)v65;
    v41 = v24;
    v42 = v70;
    sub_238492BEC();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v41, v42);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v9, v27);
    swift_storeEnumTagMultiPayload();
    v35 = (uint64_t)v80;
    v34 = v40;
  }
  v33 = (uint64_t)v66;
LABEL_13:
  sub_238465E94(v34, v33);
  sub_238465E94(v33, v29);
  v43 = v35;
  return sub_238436B3C(v43);
}

uint64_t type metadata accessor for TriggerParameters()
{
  uint64_t result;

  result = qword_25690ADA0;
  if (!qword_25690ADA0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_238465E0C()
{
  unint64_t result;

  result = qword_25690ACD8;
  if (!qword_25690ACD8)
  {
    result = MEMORY[0x23B835A40](&unk_2384959C4, &type metadata for TriggerParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690ACD8);
  }
  return result;
}

unint64_t sub_238465E50()
{
  unint64_t result;

  result = qword_25690ACE0;
  if (!qword_25690ACE0)
  {
    result = MEMORY[0x23B835A40](&unk_238495974, &type metadata for TriggerParameters.LocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690ACE0);
  }
  return result;
}

uint64_t sub_238465E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TriggerParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_238465ED8()
{
  unint64_t result;

  result = qword_25690ACE8;
  if (!qword_25690ACE8)
  {
    result = MEMORY[0x23B835A40](&unk_238495924, &type metadata for TriggerParameters.DailyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690ACE8);
  }
  return result;
}

unint64_t sub_238465F1C()
{
  unint64_t result;

  result = qword_25690ACF8;
  if (!qword_25690ACF8)
  {
    result = MEMORY[0x23B835A40](&unk_2384958D4, &type metadata for TriggerParameters.DateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690ACF8);
  }
  return result;
}

uint64_t TriggerParameters.imageSystemName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v1 = type metadata accessor for TriggerParameters();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238466090(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v5 = sub_238491E24();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
      return 0xD000000000000016;
    }
    else
    {
      v8 = v3[40];
      swift_bridgeObjectRelease();
      if (v8)
        return 0xD000000000000015;
      else
        return 0xD000000000000013;
    }
  }
  else
  {
    v7 = sub_238491F98();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v3, v7);
    return 0x6B636F6C63;
  }
}

uint64_t sub_238466090(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TriggerParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t TriggerParameters.subtitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  char *v30;
  id v31;
  char *v32;
  uint64_t v33;
  void *v34;
  id v35;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;

  v2 = v1;
  v42 = a1;
  v3 = sub_238492040();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_238435C24(&qword_25690AD00);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_238491E24();
  v11 = *(_QWORD *)(v10 - 8);
  v39 = v10;
  v40 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_238491F98();
  v14 = *(_QWORD *)(v41 - 8);
  v15 = MEMORY[0x24BDAC7A8](v41);
  v38 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v37 - v17;
  v19 = type metadata accessor for TriggerParameters();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238466090(v2, (uint64_t)v21);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v23 = v39;
      v24 = v40;
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v13, v21, v39);
      sub_23849201C();
      sub_238492010();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v25 = v41;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v41) == 1)
      {
        sub_23843B198((uint64_t)v9, &qword_25690AD00);
        v43 = 0;
        v44 = 0xE000000000000000;
        sub_238492A78();
        swift_bridgeObjectRelease();
        v43 = 0xD000000000000014;
        v44 = 0x8000000238498930;
        sub_238491DE8();
        sub_2384926A0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v23);
      }
      else
      {
        v30 = v38;
        (*(void (**)(void))(v14 + 32))();
        v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
        objc_msgSend(v31, sel_setDateStyle_, 0);
        objc_msgSend(v31, sel_setTimeStyle_, 1);
        v43 = 0x746120796C696144;
        v44 = 0xE900000000000020;
        v32 = v30;
        v33 = sub_238491F38();
        v37 = v13;
        v34 = (void *)v33;
        v35 = objc_msgSend(v31, sel_stringFromDate_, v33);

        sub_23849261C();
        sub_2384926A0();

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v32, v25);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v37, v23);
      }
    }
    else
    {
      v43 = 0;
      v44 = 0xE000000000000000;
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_2384926A0();
      sub_2384926A0();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v26 = v41;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v21, v41);
    v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
    objc_msgSend(v27, sel_setDateStyle_, 2);
    objc_msgSend(v27, sel_setTimeStyle_, 1);
    v43 = 2125391;
    v44 = 0xE300000000000000;
    v28 = (void *)sub_238491F38();
    v29 = objc_msgSend(v27, sel_stringFromDate_, v28);

    sub_23849261C();
    sub_2384926A0();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v26);
  }
  return sub_238491E78();
}

uint64_t TriggerParameters.runSuccessDialog.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  char *v32;
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;

  v2 = v1;
  v43 = a1;
  v3 = sub_238492040();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_238435C24(&qword_25690AD00);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_238491E24();
  v11 = *(_QWORD *)(v10 - 8);
  v40 = v10;
  v41 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_238491F98();
  v14 = *(_QWORD *)(v42 - 8);
  v15 = MEMORY[0x24BDAC7A8](v42);
  v39 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v38 - v17;
  v19 = type metadata accessor for TriggerParameters();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238466090(v2, (uint64_t)v21);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v23 = v40;
      v24 = v41;
      v25 = v21;
      v26 = v13;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v13, v25, v40);
      sub_23849201C();
      sub_238492010();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v27 = v42;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v42) == 1)
      {
        sub_23843B198((uint64_t)v9, &qword_25690AD00);
        v44 = 0;
        v45 = 0xE000000000000000;
        sub_238492A78();
        swift_bridgeObjectRelease();
        v44 = 0xD000000000000019;
        v45 = 0x8000000238498970;
        sub_238491DE8();
        sub_2384926A0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v23);
      }
      else
      {
        v32 = v39;
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v39, v9, v27);
        v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
        objc_msgSend(v33, sel_setDateStyle_, 0);
        objc_msgSend(v33, sel_setTimeStyle_, 1);
        v44 = 0;
        v45 = 0xE000000000000000;
        sub_238492A78();
        swift_bridgeObjectRelease();
        v44 = 0xD000000000000019;
        v45 = 0x8000000238498990;
        v34 = sub_238491F38();
        v38 = v26;
        v35 = (void *)v34;
        v36 = objc_msgSend(v33, sel_stringFromDate_, v34);

        sub_23849261C();
        sub_2384926A0();

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v32, v27);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v23);
      }
    }
    else
    {
      v44 = 0;
      v45 = 0xE000000000000000;
      sub_238492A78();
      swift_bridgeObjectRelease();
      v44 = 0xD000000000000019;
      v45 = 0x8000000238498950;
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_2384926A0();
      sub_2384926A0();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v28 = v42;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v21, v42);
    v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
    objc_msgSend(v29, sel_setDateStyle_, 0);
    objc_msgSend(v29, sel_setTimeStyle_, 1);
    v44 = 0;
    v45 = 0xE000000000000000;
    sub_238492A78();
    swift_bridgeObjectRelease();
    v44 = 0xD000000000000013;
    v45 = 0x80000002384989B0;
    v30 = (void *)sub_238491F38();
    v31 = objc_msgSend(v29, sel_stringFromDate_, v30);

    sub_23849261C();
    sub_2384926A0();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v28);
  }
  return sub_238491E78();
}

uint64_t TriggerParameters.coordinates.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v1 = v0;
  v2 = type metadata accessor for TriggerParameters();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238466090(v1, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v5 = *((_QWORD *)v4 + 2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_238466C38((uint64_t)v4);
    return 0;
  }
  return v5;
}

uint64_t sub_238466C38(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TriggerParameters();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t TriggerParameters.createDialog.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  char *v32;
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;

  v2 = v1;
  v43 = a1;
  v3 = sub_238492040();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_238435C24(&qword_25690AD00);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_238491E24();
  v11 = *(_QWORD *)(v10 - 8);
  v40 = v10;
  v41 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_238491F98();
  v14 = *(_QWORD *)(v42 - 8);
  v15 = MEMORY[0x24BDAC7A8](v42);
  v39 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v38 - v17;
  v19 = type metadata accessor for TriggerParameters();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238466090(v2, (uint64_t)v21);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v23 = v40;
      v24 = v41;
      v25 = v21;
      v26 = v13;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v13, v25, v40);
      sub_23849201C();
      sub_238492010();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v27 = v42;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v42) == 1)
      {
        sub_23843B198((uint64_t)v9, &qword_25690AD00);
        v44 = 0;
        v45 = 0xE000000000000000;
        sub_238492A78();
        swift_bridgeObjectRelease();
        v44 = 0xD00000000000001ELL;
        v45 = 0x80000002384989F0;
        sub_238491DE8();
        sub_2384926A0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v23);
      }
      else
      {
        v32 = v39;
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v39, v9, v27);
        v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
        objc_msgSend(v33, sel_setDateStyle_, 0);
        objc_msgSend(v33, sel_setTimeStyle_, 1);
        v44 = 0;
        v45 = 0xE000000000000000;
        sub_238492A78();
        swift_bridgeObjectRelease();
        v44 = 0xD00000000000001ELL;
        v45 = 0x8000000238498A10;
        v34 = sub_238491F38();
        v38 = v26;
        v35 = (void *)v34;
        v36 = objc_msgSend(v33, sel_stringFromDate_, v34);

        sub_23849261C();
        sub_2384926A0();

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v32, v27);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v23);
      }
    }
    else
    {
      v44 = 0;
      v45 = 0xE000000000000000;
      sub_238492A78();
      swift_bridgeObjectRelease();
      v44 = 0xD000000000000015;
      v45 = 0x80000002384989D0;
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_2384926A0();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_2384926A0();
      sub_2384926A0();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v28 = v42;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v21, v42);
    v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
    objc_msgSend(v29, sel_setDateStyle_, 2);
    objc_msgSend(v29, sel_setTimeStyle_, 1);
    v44 = 0;
    v45 = 0xE000000000000000;
    sub_238492A78();
    swift_bridgeObjectRelease();
    v44 = 0xD000000000000018;
    v45 = 0x8000000238498A30;
    v30 = (void *)sub_238491F38();
    v31 = objc_msgSend(v29, sel_stringFromDate_, v30);

    sub_23849261C();
    sub_2384926A0();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v28);
  }
  return sub_238491E78();
}

uint64_t TriggerParameters.isUpcoming.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v13;

  v0 = sub_238435C24(&qword_25690AD00);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_238491F98();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v13 - v8;
  TriggerParameters.upcomingDate.getter((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_23843B198((uint64_t)v2, &qword_25690AD00);
    v10 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v2, v3);
    sub_238491F80();
    v10 = sub_238491F44();
    v11 = *(void (**)(char *, uint64_t))(v4 + 8);
    v11(v7, v3);
    v11(v9, v3);
  }
  return v10 & 1;
}

uint64_t TriggerParameters.upcomingDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v45 = a1;
  v1 = sub_238491FF8();
  v39 = *(_QWORD *)(v1 - 8);
  v40 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v38 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_238492004();
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_238491FE0();
  v41 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_238491F98();
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_238492040();
  v35 = *(_QWORD *)(v11 - 8);
  v36 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_238491E24();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TriggerParameters();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238466090(v42, (uint64_t)v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v32 = v14;
      v33 = v15;
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v20, v14);
      sub_23849201C();
      sub_238491F80();
      (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v7, *MEMORY[0x24BDCF020], v5);
      v22 = *MEMORY[0x24BDCF0B0];
      v42 = v5;
      v23 = v34;
      v24 = v37;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 104))(v4, v22, v37);
      v25 = v38;
      v26 = v39;
      v27 = v40;
      (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v38, *MEMORY[0x24BDCF068], v40);
      sub_238492028();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v27);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v24);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v42);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v44);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v36);
      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v17, v32);
    }
    else
    {
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v45, 1, 1, v44);
    }
  }
  else
  {
    v30 = v43;
    v29 = v44;
    v31 = v45;
    (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v45, v20, v44);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v31, 0, 1, v29);
  }
}

uint64_t TriggerParameters.shouldDeleteAfterRun.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for TriggerParameters();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238466090(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v5 = sub_238491E24();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
      return 0;
    }
    else
    {
      v6 = v3[41];
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v7 = sub_238491F98();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v3, v7);
    return 1;
  }
  return v6;
}

uint64_t sub_2384677D8(char a1)
{
  return *(_QWORD *)&aDate_1[8 * a1];
}

uint64_t sub_2384677F8(char a1)
{
  return *(_QWORD *)&aName_3[8 * a1];
}

uint64_t sub_238467818()
{
  char *v0;

  return sub_2384677D8(*v0);
}

uint64_t sub_238467820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_238468EC4(a1, a2);
  *a3 = result;
  return result;
}

void sub_238467844(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_238467850()
{
  sub_238465E0C();
  return sub_238492D78();
}

uint64_t sub_238467878()
{
  sub_238465E0C();
  return sub_238492D84();
}

uint64_t sub_2384678AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_238468FF0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2384678D4()
{
  sub_238465ED8();
  return sub_238492D78();
}

uint64_t sub_2384678FC()
{
  sub_238465ED8();
  return sub_238492D84();
}

uint64_t sub_238467928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_238469098(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_238467950()
{
  sub_238465F1C();
  return sub_238492D78();
}

uint64_t sub_238467978()
{
  sub_238465F1C();
  return sub_238492D84();
}

uint64_t sub_2384679A0()
{
  char *v0;

  return sub_2384677F8(*v0);
}

uint64_t sub_2384679A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23846911C(a1, a2);
  *a3 = result;
  return result;
}

void sub_2384679CC(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_2384679D8()
{
  sub_238465E50();
  return sub_238492D78();
}

uint64_t sub_238467A00()
{
  sub_238465E50();
  return sub_238492D84();
}

uint64_t TriggerParameters.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;

  v40 = sub_238435C24(&qword_25690AD08);
  v31 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v39 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_238435C24(&qword_25690AD10);
  v41 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v36 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_238491E24();
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v34 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_238435C24(&qword_25690AD18);
  v5 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_238491F98();
  v42 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TriggerParameters();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_238435C24(&qword_25690AD20);
  v43 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238438F90(a1, a1[3]);
  sub_238465E0C();
  v45 = v14;
  sub_238492D60();
  sub_238466090(v47, (uint64_t)v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v23 = v32;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v9, v12, v32);
    v48 = 0;
    sub_238465F1C();
    v21 = v45;
    v20 = v46;
    sub_238492C04();
    sub_23843E8CC(&qword_25690A090, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    v24 = v33;
    sub_238492C4C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v21, v20);
  }
  if (EnumCaseMultiPayload == 1)
  {
    v17 = v34;
    v16 = v35;
    v18 = v37;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v34, v12, v37);
    v49 = 1;
    sub_238465ED8();
    v19 = v36;
    v21 = v45;
    v20 = v46;
    sub_238492C04();
    sub_23843E8CC(&qword_25690AD28, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE00]);
    v22 = v38;
    sub_238492C4C();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v19, v22);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v21, v20);
  }
  v56 = 2;
  sub_238465E50();
  v26 = v39;
  v28 = v45;
  v27 = v46;
  sub_238492C04();
  v55 = 0;
  v29 = v40;
  v30 = v44;
  sub_238492C28();
  swift_bridgeObjectRelease();
  if (!v30)
  {
    v54 = 1;
    sub_238492C40();
    v53 = 2;
    sub_238492C40();
    v52 = 3;
    sub_238492C40();
    v51 = 4;
    sub_238492C34();
    v50 = 5;
    sub_238492C34();
  }
  (*(void (**)(char *, uint64_t))(v31 + 8))(v26, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v28, v27);
}

uint64_t sub_238467F90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TriggerParameters.init(from:)(a1, a2);
}

uint64_t sub_238467FA4(_QWORD *a1)
{
  return TriggerParameters.encode(to:)(a1);
}

uint64_t _s23ConditionalEngineClient17TriggerParametersO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  double v33;
  int v34;
  char v35;
  double v36;
  double v37;
  double v38;
  int v39;
  char v40;
  char v42;
  void (*v43)(char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v48 = a2;
  v3 = sub_238491E24();
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v45 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_238491F98();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TriggerParameters();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v45 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v45 - v16;
  v18 = sub_238435C24(&qword_25690AE38);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_238466090(a1, (uint64_t)v21);
  sub_238466090(v48, v22);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_238466090((uint64_t)v21, (uint64_t)v17);
    if (!swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v22, v5);
      v27 = sub_238491F68();
      v43 = *(void (**)(char *, uint64_t))(v6 + 8);
      v43(v8, v5);
      v43(v17, v5);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
    goto LABEL_17;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_238466090((uint64_t)v21, (uint64_t)v12);
    v30 = *(_QWORD *)v12;
    v29 = *((_QWORD *)v12 + 1);
    v32 = *((double *)v12 + 2);
    v31 = *((double *)v12 + 3);
    v33 = *((double *)v12 + 4);
    v34 = v12[40];
    v35 = v12[41];
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    v37 = *(double *)(v22 + 16);
    v36 = *(double *)(v22 + 24);
    v38 = *(double *)(v22 + 32);
    v39 = *(unsigned __int8 *)(v22 + 40);
    v40 = *(_BYTE *)(v22 + 41);
    if (v30 == *(_QWORD *)v22 && v29 == *(_QWORD *)(v22 + 8))
    {
      swift_bridgeObjectRelease_n();
      if (v32 != v37)
      {
LABEL_24:
        sub_238466C38((uint64_t)v21);
        goto LABEL_25;
      }
    }
    else
    {
      v42 = sub_238492C7C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v42 & 1) == 0 || v32 != v37)
        goto LABEL_24;
    }
    if (v31 == v36 && v33 == v38 && v34 == v39)
    {
      sub_238466C38((uint64_t)v21);
      v27 = v35 ^ v40 ^ 1;
      return v27 & 1;
    }
    goto LABEL_24;
  }
  sub_238466090((uint64_t)v21, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v47);
LABEL_17:
    sub_23843B198((uint64_t)v21, &qword_25690AE38);
LABEL_25:
    v27 = 0;
    return v27 & 1;
  }
  v25 = v45;
  v24 = v46;
  v26 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v45, v22, v47);
  v27 = MEMORY[0x23B834564](v15, v25);
  v28 = *(void (**)(char *, uint64_t))(v24 + 8);
  v28(v25, v26);
  v28(v15, v26);
LABEL_19:
  sub_238466C38((uint64_t)v21);
  return v27 & 1;
}

uint64_t initializeBufferWithCopyOfBuffer for TriggerParameters(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v9 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v9;
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_WORD *)(a1 + 40) = *((_WORD *)a2 + 20);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
        v7 = sub_238491E24();
      else
        v7 = sub_238491F98();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TriggerParameters(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
    return swift_bridgeObjectRelease();
  if ((_DWORD)result == 1)
  {
    v3 = sub_238491E24();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v3 = sub_238491F98();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

uint64_t initializeWithCopy for TriggerParameters(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
      v5 = sub_238491E24();
    else
      v5 = sub_238491F98();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for TriggerParameters(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_238466C38(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
        v5 = sub_238491E24();
      else
        v5 = sub_238491F98();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for TriggerParameters(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = sub_238491E24();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_238491F98();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for TriggerParameters(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_238466C38((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v8 = sub_238491E24();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_238491F98();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TriggerParameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for TriggerParameters(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_238468880()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_238468890()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_238491F98();
  if (v1 <= 0x3F)
  {
    result = sub_238491E24();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TriggerParameters.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_238468964 + 4 * byte_2384954D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_238468998 + 4 * byte_2384954D0[v4]))();
}

uint64_t sub_238468998(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2384689A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2384689A8);
  return result;
}

uint64_t sub_2384689B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2384689BCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2384689C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2384689C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TriggerParameters.CodingKeys()
{
  return &type metadata for TriggerParameters.CodingKeys;
}

ValueMetadata *type metadata accessor for TriggerParameters.DateCodingKeys()
{
  return &type metadata for TriggerParameters.DateCodingKeys;
}

uint64_t _s23ConditionalEngineClient17TriggerParametersO14DateCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_238468A3C + 4 * byte_2384954DA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_238468A5C + 4 * byte_2384954DF[v4]))();
}

_BYTE *sub_238468A3C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_238468A5C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_238468A64(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_238468A6C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_238468A74(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_238468A7C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TriggerParameters.DailyCodingKeys()
{
  return &type metadata for TriggerParameters.DailyCodingKeys;
}

uint64_t storeEnumTagSinglePayload for TriggerParameters.LocationCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_238468AE4 + 4 * byte_2384954E9[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_238468B18 + 4 * byte_2384954E4[v4]))();
}

uint64_t sub_238468B18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_238468B20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x238468B28);
  return result;
}

uint64_t sub_238468B34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x238468B3CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_238468B40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_238468B48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TriggerParameters.LocationCodingKeys()
{
  return &type metadata for TriggerParameters.LocationCodingKeys;
}

unint64_t sub_238468B68()
{
  unint64_t result;

  result = qword_25690ADD8;
  if (!qword_25690ADD8)
  {
    result = MEMORY[0x23B835A40](&unk_238495684, &type metadata for TriggerParameters.LocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690ADD8);
  }
  return result;
}

unint64_t sub_238468BB0()
{
  unint64_t result;

  result = qword_25690ADE0;
  if (!qword_25690ADE0)
  {
    result = MEMORY[0x23B835A40](&unk_23849573C, &type metadata for TriggerParameters.DailyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690ADE0);
  }
  return result;
}

unint64_t sub_238468BF8()
{
  unint64_t result;

  result = qword_25690ADE8;
  if (!qword_25690ADE8)
  {
    result = MEMORY[0x23B835A40](&unk_2384957F4, &type metadata for TriggerParameters.DateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690ADE8);
  }
  return result;
}

unint64_t sub_238468C40()
{
  unint64_t result;

  result = qword_25690ADF0;
  if (!qword_25690ADF0)
  {
    result = MEMORY[0x23B835A40](&unk_2384958AC, &type metadata for TriggerParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690ADF0);
  }
  return result;
}

unint64_t sub_238468C88()
{
  unint64_t result;

  result = qword_25690ADF8;
  if (!qword_25690ADF8)
  {
    result = MEMORY[0x23B835A40](&unk_238495764, &type metadata for TriggerParameters.DateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690ADF8);
  }
  return result;
}

unint64_t sub_238468CD0()
{
  unint64_t result;

  result = qword_25690AE00;
  if (!qword_25690AE00)
  {
    result = MEMORY[0x23B835A40](&unk_23849578C, &type metadata for TriggerParameters.DateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690AE00);
  }
  return result;
}

unint64_t sub_238468D18()
{
  unint64_t result;

  result = qword_25690AE08;
  if (!qword_25690AE08)
  {
    result = MEMORY[0x23B835A40](&unk_2384956AC, &type metadata for TriggerParameters.DailyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690AE08);
  }
  return result;
}

unint64_t sub_238468D60()
{
  unint64_t result;

  result = qword_25690AE10;
  if (!qword_25690AE10)
  {
    result = MEMORY[0x23B835A40](&unk_2384956D4, &type metadata for TriggerParameters.DailyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690AE10);
  }
  return result;
}

unint64_t sub_238468DA8()
{
  unint64_t result;

  result = qword_25690AE18;
  if (!qword_25690AE18)
  {
    result = MEMORY[0x23B835A40](&unk_2384955F4, &type metadata for TriggerParameters.LocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690AE18);
  }
  return result;
}

unint64_t sub_238468DF0()
{
  unint64_t result;

  result = qword_25690AE20;
  if (!qword_25690AE20)
  {
    result = MEMORY[0x23B835A40](&unk_23849561C, &type metadata for TriggerParameters.LocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690AE20);
  }
  return result;
}

unint64_t sub_238468E38()
{
  unint64_t result;

  result = qword_25690AE28;
  if (!qword_25690AE28)
  {
    result = MEMORY[0x23B835A40](&unk_23849581C, &type metadata for TriggerParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690AE28);
  }
  return result;
}

unint64_t sub_238468E80()
{
  unint64_t result;

  result = qword_25690AE30;
  if (!qword_25690AE30)
  {
    result = MEMORY[0x23B835A40](&unk_238495844, &type metadata for TriggerParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690AE30);
  }
  return result;
}

uint64_t sub_238468EC4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v3 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x796C696164 && a2 == 0xE500000000000000 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_238492C7C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_238468FF0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E656E6F706D6F63 && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_238492C7C();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23846907C()
{
  return 0x6E656E6F706D6F63;
}

uint64_t sub_238469098(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_238492C7C();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23846910C()
{
  return 1702125924;
}

uint64_t sub_23846911C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v3 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737569646172 && a2 == 0xE600000000000000 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657265746E457369 && a2 == 0xE900000000000064 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D6954656E4F7369 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_238492C7C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for LastUsedBundle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for LastUsedBundle()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for LastUsedBundle(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for LastUsedBundle(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LastUsedBundle(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LastUsedBundle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LastUsedBundle()
{
  return &type metadata for LastUsedBundle;
}

uint64_t sub_2384694C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_238492D18();
  sub_238492D24();
  if (v1)
    sub_238492694();
  return sub_238492D48();
}

uint64_t sub_238469530()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return sub_238492D24();
  sub_238492D24();
  return sub_238492694();
}

uint64_t sub_238469594()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_238492D18();
  sub_238492D24();
  if (v1)
    sub_238492694();
  return sub_238492D48();
}

uint64_t sub_2384695FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t result;

  *(_QWORD *)&xmmword_256911CE0 = a1;
  *((_QWORD *)&xmmword_256911CE0 + 1) = a2;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a3 = a1;
  a3[1] = a2;
  return result;
}

uint64_t sub_238469658(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[1];
  v4 = a2[1];
  if (!v3)
    return v4 == 0;
  if (!v4)
    return 0;
  if (*a1 == *a2 && v3 == v4)
    return 1;
  else
    return sub_238492C7C();
}

unint64_t sub_2384696A8()
{
  unint64_t result;

  result = qword_25690AE40;
  if (!qword_25690AE40)
  {
    result = MEMORY[0x23B835A40](&unk_238495AB8, &type metadata for LastUsedBundle);
    atomic_store(result, (unint64_t *)&qword_25690AE40);
  }
  return result;
}

uint64_t dispatch thunk of RunnableScheduledQueryIntent.scheduledQueryIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ScheduledQueryInterface.scheduledQueries()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_238469D10;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ScheduledQueryInterface.upcomingScheduledQueries()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2384697D0;
  return v7(a1, a2);
}

uint64_t sub_2384697D0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of ScheduledQueryInterface.scheduledQuery(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 24) + *(_QWORD *)(a5 + 24));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_2384552B4;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of ScheduledQueryInterface.delete(scheduledQueryWithIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 32) + *(_QWORD *)(a4 + 32));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_2384552B4;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ScheduledQueryInterface.deleteAllScheduledQueries()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 40) + *(_QWORD *)(a2 + 40));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2384552B4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ScheduledQueryInterface.run(scheduledQueryWithIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 48) + *(_QWORD *)(a4 + 48));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_238442750;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ScheduledQueryInterface.createDateScheduledQuery(date:query:runIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 56)
                                                                                              + *(_QWORD *)(a7 + 56));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_238451080;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of ScheduledQueryInterface.createDailyScheduledQuery(components:query:runIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 64)
                                                                                              + *(_QWORD *)(a7 + 64));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_2384552B4;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of ScheduledQueryInterface.createLocationEnteredScheduledQuery(location:radiusInMeters:query:isOneTime:runIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9)
{
  uint64_t v9;
  _QWORD *v19;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double);

  v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double))(**(int **)(a8 + 72) + *(_QWORD *)(a8 + 72));
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v19;
  *v19 = v9;
  v19[1] = sub_2384552B4;
  return v21(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t dispatch thunk of ScheduledQueryInterface.createLocationExitedScheduledQuery(location:radiusInMeters:query:isOneTime:runIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9)
{
  uint64_t v9;
  _QWORD *v19;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double);

  v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double))(**(int **)(a8 + 80) + *(_QWORD *)(a8 + 80));
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v19;
  *v19 = v9;
  v19[1] = sub_2384552B4;
  return v21(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t type metadata accessor for ConversationEntityRepresentation()
{
  uint64_t result;

  result = qword_25690AE98;
  if (!qword_25690AE98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_238469D50()
{
  return swift_initClassMetadata2();
}

uint64_t sub_238469D8C()
{
  return type metadata accessor for ConversationEntityRepresentation();
}

unint64_t sub_238469D94()
{
  return 0xD000000000000013;
}

unint64_t sub_238469DB0()
{
  return 0xD000000000000012;
}

uint64_t sub_238469DCC()
{
  sub_238438F50(&qword_25690AF18, (uint64_t)&unk_238495C64);
  return sub_238492400();
}

uint64_t sub_238469E08()
{
  sub_238438F50(&qword_256909DA8, (uint64_t)&unk_238495D34);
  return sub_2384923C4();
}

uint64_t sub_238469E34()
{
  sub_238438F50(&qword_25690AF18, (uint64_t)&unk_238495C64);
  return sub_2384923F4();
}

uint64_t sub_238469E70()
{
  return sub_238438F50(&qword_25690AEE8, (uint64_t)&unk_238495BE0);
}

uint64_t sub_238469E94()
{
  return sub_238438F50(&qword_25690AEF0, (uint64_t)&unk_238495C94);
}

uint64_t sub_238469EB8()
{
  return sub_238438F50(&qword_25690AEF8, (uint64_t)&unk_238495C24);
}

uint64_t sub_238469EDC()
{
  return sub_238438F50(&qword_25690AF00, (uint64_t)&unk_238495BFC);
}

uint64_t sub_238469F00()
{
  return sub_238438F50(&qword_25690AF08, (uint64_t)&unk_238495CEC);
}

uint64_t sub_238469F24()
{
  return sub_238438F50(&qword_256909DA8, (uint64_t)&unk_238495D34);
}

uint64_t sub_238469F48()
{
  return sub_238438F50(&qword_25690AF10, (uint64_t)&unk_238495CC4);
}

uint64_t sub_238469F6C()
{
  return sub_238438F50(&qword_25690AF18, (uint64_t)&unk_238495C64);
}

uint64_t sub_238469F94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2384709E4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_238469FBC()
{
  sub_238472094();
  return sub_238492D78();
}

uint64_t sub_238469FE4()
{
  sub_238472094();
  return sub_238492D84();
}

uint64_t sub_23846A00C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23846A038@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v5 = sub_238435C24(&qword_25690B130);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238438F90(a1, a1[3]);
  sub_238472094();
  sub_238492D54();
  if (v2)
    return sub_238436B3C((uint64_t)a1);
  v9 = sub_238492BC8();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = sub_238436B3C((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_23846A15C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_238435C24(&qword_25690B140);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238438F90(a1, a1[3]);
  sub_238472094();
  sub_238492D60();
  sub_238492C28();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_23846A248()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2384552B4;
  return sub_2384928D4();
}

uint64_t sub_23846A2B8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2384552B4;
  return sub_2384928E0();
}

uint64_t sub_23846A30C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23847231C;
  return sub_2384928EC();
}

unint64_t sub_23846A358()
{
  _QWORD *v0;
  id v1;
  unint64_t result;

  type metadata accessor for ScheduledQueryManager();
  v0 = (_QWORD *)swift_allocObject();
  v1 = objc_msgSend((id)objc_opt_self(), sel_standardClient);
  result = sub_23847216C();
  v0[5] = result;
  v0[6] = &protocol witness table for VCVoiceShortcutClient;
  v0[2] = v1;
  qword_25690AF20 = (uint64_t)v0;
  return result;
}

uint64_t static ScheduledQueryManager.shared.getter()
{
  if (qword_256909A98 != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

uint64_t static ScheduledQueryManager.shared.setter(uint64_t a1)
{
  if (qword_256909A98 != -1)
    swift_once();
  swift_beginAccess();
  qword_25690AF20 = a1;
  return swift_release();
}

uint64_t (*static ScheduledQueryManager.shared.modify())()
{
  if (qword_256909A98 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t ScheduledQueryManager.triggerClient.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  return sub_23846A55C(v1 + 16, a1);
}

uint64_t sub_23846A55C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t ScheduledQueryManager.triggerClient.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 16;
  swift_beginAccess();
  sub_238436B3C(v3);
  sub_238449E30(a1, v3);
  return swift_endAccess();
}

uint64_t (*ScheduledQueryManager.triggerClient.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t ScheduledQueryManager.ScheduledQueryManagerError.errorDescription.getter()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 16))
  {
    sub_238492A78();
    sub_2384926A0();
    sub_2384926A0();
    return 0;
  }
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    sub_238492A78();
    sub_2384926A0();
    sub_238492D90();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    return 0;
  }
  if (*(_OWORD *)v0 == 0)
    return 0xD000000000000029;
  else
    return 0xD00000000000002FLL;
}

uint64_t ScheduledQueryManager.scheduledQueries()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_25690AF30 + dword_25690AF30);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23847231C;
  return v3();
}

uint64_t ScheduledQueryManager.upcomingScheduledQueries()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_25690AF40 + dword_25690AF40);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23846A81C;
  return v3();
}

uint64_t sub_23846A81C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t ScheduledQueryManager.scheduledQuery(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (__cdecl *v7)();

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for ScheduledQuery();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v7 = (uint64_t (__cdecl *)())((char *)&dword_25690AF30 + dword_25690AF30);
  v5 = (_QWORD *)swift_task_alloc();
  v3[8] = v5;
  *v5 = v3;
  v5[1] = sub_23846A8F8;
  return v7();
}

uint64_t sub_23846A8F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 72) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23846A974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 56);
    v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v6 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v7 = *(_QWORD **)(v0 + 56);
      v9 = *(_QWORD *)(v0 + 24);
      v8 = *(_QWORD *)(v0 + 32);
      sub_238440118(v5, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
      v10 = *v7 == v9 && *(_QWORD *)(v4 + 8) == v8;
      if (v10 || (sub_238492C7C() & 1) != 0)
        break;
      sub_23843F2AC(*(_QWORD *)(v0 + 56), (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
      v5 += v6;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    v12 = *(_QWORD *)(v0 + 56);
    v13 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRelease();
    sub_2384401A0(v12, v13);
    v11 = 0;
  }
  else
  {
LABEL_10:
    v11 = 1;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 48) + 56))(*(_QWORD *)(v0 + 16), v11, 1, *(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ScheduledQueryManager.delete(scheduledQueryWithIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (__cdecl *v7)();

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  sub_238435C24(&qword_25690AF58);
  v3[18] = swift_task_alloc();
  sub_238435C24(&qword_25690A078);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v4 = type metadata accessor for ScheduledQuery();
  v3[21] = v4;
  v3[22] = *(_QWORD *)(v4 - 8);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v7 = (uint64_t (__cdecl *)())((char *)&dword_25690AF30 + dword_25690AF30);
  v5 = (_QWORD *)swift_task_alloc();
  v3[25] = v5;
  *v5 = v3;
  v5[1] = sub_23846AB88;
  return v7();
}

uint64_t sub_23846AB88(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 208) = a1;
  *(_QWORD *)(v3 + 216) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23846ABF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 176);
    v4 = *(_QWORD *)(v0 + 184);
    v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v6 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v7 = *(_QWORD **)(v0 + 184);
      v9 = *(_QWORD *)(v0 + 120);
      v8 = *(_QWORD *)(v0 + 128);
      sub_238440118(v5, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
      v10 = *v7 == v9 && *(_QWORD *)(v4 + 8) == v8;
      if (v10 || (sub_238492C7C() & 1) != 0)
        break;
      sub_23843F2AC(*(_QWORD *)(v0 + 184), (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
      v5 += v6;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    v12 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 152);
    swift_bridgeObjectRelease();
    sub_2384401A0(v12, v13);
    v11 = 0;
  }
  else
  {
LABEL_10:
    v11 = 1;
  }
  v14 = *(_QWORD *)(v0 + 168);
  v15 = *(_QWORD *)(v0 + 176);
  v17 = *(_QWORD *)(v0 + 152);
  v16 = *(_QWORD *)(v0 + 160);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v17, v11, 1, v14);
  swift_bridgeObjectRelease();
  sub_238471594(v17, v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v16, 1, v14) == 1)
  {
    v19 = *(_QWORD *)(v0 + 120);
    v18 = *(_QWORD *)(v0 + 128);
    sub_23843B198(*(_QWORD *)(v0 + 160), &qword_25690A078);
    sub_2384715DC();
    swift_allocError();
    *(_QWORD *)v20 = v19;
    *(_QWORD *)(v20 + 8) = v18;
    *(_BYTE *)(v20 + 16) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 192);
    v23 = *(_QWORD *)(v0 + 136);
    sub_2384401A0(*(_QWORD *)(v0 + 160), v22);
    v25 = *(_QWORD *)(v22 + 32);
    v24 = *(_QWORD *)(v22 + 40);
    swift_beginAccess();
    sub_23846A55C(v23 + 16, v0 + 16);
    v26 = *(_QWORD *)(v0 + 40);
    v27 = *(_QWORD *)(v0 + 48);
    sub_238438F90((_QWORD *)(v0 + 16), v26);
    *(_QWORD *)(v0 + 80) = &type metadata for ScheduledTriggerIdentifier;
    v28 = sub_238471620();
    *(_QWORD *)(v0 + 56) = v25;
    *(_QWORD *)(v0 + 88) = v28;
    *(_QWORD *)(v0 + 64) = v24;
    v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v27 + 16) + *(_QWORD *)(v27 + 16));
    swift_bridgeObjectRetain();
    v29 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v29;
    *v29 = v0;
    v29[1] = sub_23846AF0C;
    return v30(v0 + 56, v26, v27);
  }
}

uint64_t sub_23846AEA0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23846AF0C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 232) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_238436B3C(v2 + 56);
  return swift_task_switch();
}

uint64_t sub_23846AF78()
{
  uint64_t v0;

  sub_238436B3C(v0 + 16);
  if (qword_256909AA0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 240) = qword_256911D00;
  return swift_task_switch();
}

uint64_t sub_23846AFE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = v0[29];
  v2 = sub_23848240C();
  if (v1)
  {
    v0[31] = v1;
  }
  else
  {
    v4 = v0[15];
    v3 = v0[16];
    if (v2)
      v5 = v2;
    else
      v5 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    v6 = sub_238471664(v5, v4, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23848257C(v6);
    v8 = v0[30];
    v9 = v0[18];
    v10 = sub_2384927F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    v11 = sub_23843E8CC(&qword_25690AF70, (uint64_t (*)(uint64_t))type metadata accessor for ScheduledQueryStore, (uint64_t)&unk_238496BD0);
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = v8;
    v12[3] = v11;
    v12[4] = v8;
    swift_retain_n();
    sub_2384707E8(v9, (uint64_t)&unk_25690AF78, (uint64_t)v12);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_task_switch();
}

uint64_t sub_23846B130()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_256909A30 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 192);
  sub_23843D88C(v1);
  sub_23843F2AC(v1, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23846B1E0()
{
  uint64_t v0;

  sub_23843F2AC(*(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23846B25C()
{
  uint64_t v0;

  sub_23843F2AC(*(_QWORD *)(v0 + 192), (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  sub_238436B3C(v0 + 56);
  sub_238436B3C(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ScheduledQueryManager.deleteAllScheduledQueries()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 160) = v0;
  sub_238435C24(&qword_25690AF58);
  *(_QWORD *)(v1 + 168) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23846B34C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  if (qword_256909AA0 != -1)
    swift_once();
  v1 = v0[20];
  v0[22] = qword_256911D00;
  v2 = v1 + 16;
  swift_beginAccess();
  sub_23846A55C(v2, (uint64_t)(v0 + 2));
  v3 = v0[5];
  v4 = v0[6];
  sub_238438F90(v0 + 2, v3);
  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v4 + 24) + *(_QWORD *)(v4 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  v0[23] = v5;
  *v5 = v0;
  v5[1] = sub_23846B424;
  return v7(v3, v4);
}

uint64_t sub_23846B424(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 192) = a1;
  *(_QWORD *)(v3 + 200) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23846B490()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t (*v13)(_QWORD *, uint64_t, uint64_t);

  v1 = v0[24];
  sub_238436B3C((uint64_t)(v0 + 2));
  v2 = *(_QWORD *)(v1 + 16);
  v0[26] = v2;
  if (v2)
  {
    v3 = (_QWORD *)v0[24];
    v0[27] = 0;
    v4 = v3 + 4;
    sub_23846A55C(v0[20] + 16, (uint64_t)(v0 + 7));
    v5 = v0[10];
    v6 = v0[11];
    sub_238438F90(v0 + 7, v5);
    v7 = v3[7];
    v8 = v3[9];
    v9 = sub_238438F90(v4, v7);
    v0[15] = v7;
    v0[16] = v8;
    v10 = sub_2384718A0(v0 + 12);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v10, v9, v7);
    v13 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v6 + 16) + *(_QWORD *)(v6 + 16));
    v11 = (_QWORD *)swift_task_alloc();
    v0[28] = v11;
    *v11 = v0;
    v11[1] = sub_23846B5D0;
    return v13(v0 + 12, v5, v6);
  }
  else
  {
    v0[30] = v0[25];
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
}

uint64_t sub_23846B5D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    sub_238436B3C(v2 + 96);
  return swift_task_switch();
}

uint64_t sub_23846B644()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t (*v14)(_QWORD *, uint64_t, uint64_t);

  v1 = v0[26];
  v2 = v0[27] + 1;
  sub_238436B3C((uint64_t)(v0 + 7));
  if (v2 == v1)
  {
    v0[30] = v0[29];
    swift_bridgeObjectRelease();
    return swift_task_switch();
  }
  else
  {
    v4 = v0[27] + 1;
    v0[27] = v4;
    v5 = v0[24] + 48 * v4;
    v6 = (_QWORD *)(v5 + 32);
    sub_23846A55C(v0[20] + 16, (uint64_t)(v0 + 7));
    v7 = v0[10];
    v8 = v0[11];
    sub_238438F90(v0 + 7, v7);
    v9 = *(_QWORD *)(v5 + 56);
    v10 = *(_QWORD *)(v5 + 72);
    v11 = sub_238438F90(v6, v9);
    v0[15] = v9;
    v0[16] = v10;
    v12 = sub_2384718A0(v0 + 12);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v12, v11, v9);
    v14 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v8 + 16) + *(_QWORD *)(v8 + 16));
    v13 = (_QWORD *)swift_task_alloc();
    v0[28] = v13;
    *v13 = v0;
    v13[1] = sub_23846B5D0;
    return v14(v0 + 12, v7, v8);
  }
}

uint64_t sub_23846B798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 240);
  sub_23848257C(MEMORY[0x24BEE4AF8]);
  if (!v1)
  {
    v3 = *(_QWORD *)(v0 + 168);
    v2 = *(_QWORD *)(v0 + 176);
    v4 = sub_2384927F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
    v5 = sub_23843E8CC(&qword_25690AF70, (uint64_t (*)(uint64_t))type metadata accessor for ScheduledQueryStore, (uint64_t)&unk_238496BD0);
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = v2;
    v6[3] = v5;
    v6[4] = v2;
    swift_retain_n();
    sub_2384707E8(v3, (uint64_t)&unk_25690AF88, (uint64_t)v6);
    swift_release();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23846B890()
{
  uint64_t v0;

  sub_238436B3C(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23846B8CC()
{
  uint64_t v0;

  sub_238436B3C(v0 + 96);
  sub_238436B3C(v0 + 56);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ScheduledQueryManager.run(scheduledQueryWithIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  sub_238435C24(&qword_25690A078);
  v3[22] = swift_task_alloc();
  v4 = type metadata accessor for ScheduledQuery();
  v3[23] = v4;
  v3[24] = *(_QWORD *)(v4 - 8);
  v3[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23846B99C()
{
  uint64_t v0;

  if (qword_256909AA0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 208) = qword_256911D00;
  return swift_task_switch();
}

uint64_t sub_23846BA00()
{
  uint64_t *v0;

  sub_238481B34(v0[19], v0[20], v0[25]);
  v0[27] = 0;
  return swift_task_switch();
}

uint64_t sub_23846BA60()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _UNKNOWN **v6;
  ValueMetadata *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **);

  if (qword_256909A48 != -1)
    swift_once();
  swift_beginAccess();
  v1 = qword_25690A748;
  v2 = *(_OWORD *)&qword_25690A738;
  *(_OWORD *)(v0 + 16) = xmmword_25690A728;
  *(_OWORD *)(v0 + 32) = v2;
  *(_QWORD *)(v0 + 48) = v1;
  sub_23843667C(v0 + 16);
  v3 = sub_23844B4A8();
  v5 = v4;
  sub_2384366BC(v0 + 16);
  if (v3 == 0x7974706D65 && v5 == 0xE500000000000000 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v6 = &off_250A24D88;
    v7 = &type metadata for ScheduleQueryEmptyRunner;
  }
  else
  {
    if (v3 != 0x647261646E617473 || v5 != 0xE800000000000000)
      sub_238492C7C();
    swift_bridgeObjectRelease();
    v6 = &off_250A254B8;
    v7 = &type metadata for ScheduledQueryStandardRunner;
  }
  v8 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 80) = v7;
  *(_QWORD *)(v0 + 88) = v6;
  sub_238438F90((_QWORD *)(v0 + 56), (uint64_t)v7);
  v9 = *(_QWORD *)(v8 + 16);
  v10 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v0 + 224) = v10;
  v13 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **))((char *)v6[1] + *(int *)v6[1]);
  swift_bridgeObjectRetain();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v11;
  *v11 = v0;
  v11[1] = sub_23846BC54;
  return v13(v9, v10, v7, v6);
}

uint64_t sub_23846BC54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[12] = v3;
  v4[13] = a1;
  v4[14] = a2;
  v4[15] = v2;
  v4[30] = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23846BCC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_238436B3C((uint64_t)(v0 + 7));
  if (qword_256909A30 != -1)
    swift_once();
  v1 = v0[13];
  v2 = v0[14];
  v3 = v0[25];
  v0[31] = v2;
  v0[32] = v1;
  sub_23843DD50(v3, v1, v2);
  v4 = (_QWORD *)swift_task_alloc();
  v0[33] = v4;
  *v4 = v0;
  v4[1] = sub_23846BD58;
  return sub_23846C03C(v0[25]);
}

uint64_t sub_23846BD58()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23846BDAC()
{
  uint64_t v0;

  sub_23843F2AC(*(_QWORD *)(v0 + 200), (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 248));
}

uint64_t sub_23846BE04()
{
  uint64_t *v0;

  sub_238481B34(v0[19], v0[20], v0[22]);
  return swift_task_switch();
}

uint64_t sub_23846BE6C()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 56))(*(_QWORD *)(v0 + 176), 0, 1, *(_QWORD *)(v0 + 184));
  if (qword_256909A30 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 176);
  sub_23843E210(v1, *(void **)(v0 + 272));
  swift_willThrow();
  sub_23843B198(v1, &qword_25690A078);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23846BF1C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 216);
  return swift_task_switch();
}

uint64_t sub_23846BF34()
{
  uint64_t *v0;

  sub_23843F2AC(v0[25], (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  sub_238436B3C((uint64_t)(v0 + 7));
  v0[34] = v0[30];
  return swift_task_switch();
}

uint64_t sub_23846BF8C()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 56))(*(_QWORD *)(v0 + 176), 1, 1, *(_QWORD *)(v0 + 184));
  if (qword_256909A30 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 176);
  sub_23843E210(v1, *(void **)(v0 + 272));
  swift_willThrow();
  sub_23843B198(v1, &qword_25690A078);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23846C03C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[7] = a1;
  v2[8] = v1;
  v2[9] = type metadata accessor for TriggerParameters();
  v2[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23846C098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = type metadata accessor for ScheduledQuery();
  sub_238440118(v2 + *(int *)(v3 + 28), v1, (uint64_t (*)(_QWORD))type metadata accessor for TriggerParameters);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v7 = *(_QWORD *)(v0 + 80);
    v8 = sub_238491F98();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload != 1)
  {
    v9 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 80) + 41);
    swift_bridgeObjectRelease();
    if (v9 != 1)
      goto LABEL_7;
LABEL_6:
    v10 = *(uint64_t **)(v0 + 56);
    v12 = *v10;
    v11 = v10[1];
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v13;
    *v13 = v0;
    v13[1] = sub_23846C1B8;
    return ScheduledQueryManager.delete(scheduledQueryWithIdentifier:)(v12, v11);
  }
  v5 = *(_QWORD *)(v0 + 80);
  v6 = sub_238491E24();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
LABEL_7:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23846C1B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23846C22C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;

  if (qword_2569099F8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 96);
  v2 = sub_238492574();
  sub_238435CA4(v2, (uint64_t)qword_256909F48);
  v3 = v1;
  v4 = v1;
  v5 = sub_23849255C();
  v6 = sub_238492868();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 96);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_getErrorValue();
    v11 = sub_238492CD0();
    *(_QWORD *)(v0 + 48) = sub_23843604C(v11, v12, &v14);
    sub_238492934();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_238433000, v5, v6, "ScheduledQueryManager failed to remove one time trigger after succesful completion with error: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v10, -1, -1);
    MEMORY[0x23B835AF4](v9, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ScheduledQueryManager.createDateScheduledQuery(date:query:runIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[32] = a5;
  v6[33] = v5;
  v6[30] = a3;
  v6[31] = a4;
  v6[28] = a1;
  v6[29] = a2;
  v6[34] = type metadata accessor for ScheduledQuery();
  v6[35] = swift_task_alloc();
  v6[36] = swift_task_alloc();
  v7 = sub_238492418();
  v6[37] = v7;
  v6[38] = *(_QWORD *)(v7 - 8);
  v6[39] = swift_task_alloc();
  v8 = sub_238492040();
  v6[40] = v8;
  v6[41] = *(_QWORD *)(v8 - 8);
  v6[42] = swift_task_alloc();
  sub_238491E24();
  v6[43] = swift_task_alloc();
  v9 = sub_23849240C();
  v6[44] = v9;
  v6[45] = *(_QWORD *)(v9 - 8);
  v6[46] = swift_task_alloc();
  sub_238435C24(&qword_25690AFA8);
  v6[47] = swift_task_alloc();
  v10 = sub_238492478();
  v6[48] = v10;
  v6[49] = *(_QWORD *)(v10 - 8);
  v6[50] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23846C57C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(unint64_t, _QWORD, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v49;

  if (qword_2569099F8 != -1)
    swift_once();
  v1 = sub_238492574();
  *(_QWORD *)(v0 + 408) = sub_238435CA4(v1, (uint64_t)qword_256909F48);
  swift_bridgeObjectRetain_n();
  v2 = sub_23849255C();
  v3 = sub_238492880();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 248);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 240);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v49 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 216) = sub_23843604C(v6, v5, &v49);
    sub_238492934();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_238433000, v2, v3, "ScheduledQueryManager createDateScheduledQuery  %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v8, -1, -1);
    MEMORY[0x23B835AF4](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v46 = *(_QWORD *)(v0 + 392);
  v47 = *(_QWORD *)(v0 + 384);
  v9 = *(_QWORD *)(v0 + 336);
  v44 = *(_QWORD *)(v0 + 320);
  v45 = *(_QWORD *)(v0 + 376);
  v43 = *(_QWORD *)(v0 + 328);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 104))(*(_QWORD *)(v0 + 368), *MEMORY[0x24BEC0ED0], *(_QWORD *)(v0 + 352));
  sub_23849201C();
  sub_238435C24(&qword_25690AFB0);
  v10 = sub_238492034();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_238495DB0;
  v15 = v14 + v13;
  v16 = *(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104);
  v16(v15, *MEMORY[0x24BDCF240], v10);
  v16(v15 + v12, *MEMORY[0x24BDCF250], v10);
  v16(v15 + 2 * v12, *MEMORY[0x24BDCF220], v10);
  v16(v15 + 3 * v12, *MEMORY[0x24BDCF230], v10);
  v16(v15 + 4 * v12, *MEMORY[0x24BDCF258], v10);
  v16(v15 + 5 * v12, *MEMORY[0x24BDCF260], v10);
  sub_238471978(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_238491FEC();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v9, v44);
  sub_23849246C();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v45, 1, v47) == 1)
  {
    sub_23843B198(*(_QWORD *)(v0 + 376), &qword_25690AFA8);
    v17 = sub_23849255C();
    v18 = sub_238492868();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_238433000, v17, v18, "ScheduledQueryManager createDateScheduledQuery failed to create TimeOfDayTrigger", v19, 2u);
      MEMORY[0x23B835AF4](v19, -1, -1);
    }
    v20 = *(_QWORD *)(v0 + 384);

    v21 = sub_23843E8CC(&qword_25690AFB8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC0FC8], MEMORY[0x24BEC0FC0]);
    sub_2384715DC();
    swift_allocError();
    *(_QWORD *)v22 = v20;
    *(_QWORD *)(v22 + 8) = v21;
    *(_BYTE *)(v22 + 16) = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 304);
    v24 = *(uint64_t **)(v0 + 312);
    v26 = *(_QWORD *)(v0 + 296);
    v27 = *(_QWORD **)(v0 + 256);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 392) + 32))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 384));
    v28 = v27[3];
    v29 = v27[4];
    v30 = sub_238438F90(v27, v28);
    v24[3] = v28;
    v24[4] = *(_QWORD *)(v29 + 8);
    v31 = sub_2384718A0(v24);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v31, v30, v28);
    v24[5] = 0xD000000000000040;
    v24[6] = 0x8000000238497970;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v25 + 104))(v24, *MEMORY[0x24BEC0EE8], v26);
    v32 = sub_23849255C();
    v33 = sub_238492880();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_238433000, v32, v33, "ScheduledQueryManager createDateScheduledQuery TriggerAction.intent", v34, 2u);
      MEMORY[0x23B835AF4](v34, -1, -1);
    }
    v36 = *(_QWORD *)(v0 + 392);
    v35 = *(_QWORD *)(v0 + 400);
    v37 = *(_QWORD *)(v0 + 384);
    v38 = *(_QWORD *)(v0 + 264);

    swift_beginAccess();
    sub_23846A55C(v38 + 16, v0 + 64);
    v39 = *(_QWORD *)(v0 + 88);
    v40 = *(_QWORD *)(v0 + 96);
    sub_238438F90((_QWORD *)(v0 + 64), v39);
    *(_QWORD *)(v0 + 128) = v37;
    *(_QWORD *)(v0 + 136) = sub_23843E8CC(&qword_25690AFB8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC0FC8], MEMORY[0x24BEC0FC0]);
    v41 = sub_2384718A0((uint64_t *)(v0 + 104));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v36 + 16))(v41, v35, v37);
    v48 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(**(int **)(v40 + 8) + *(_QWORD *)(v40 + 8));
    v42 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 416) = v42;
    *v42 = v0;
    v42[1] = sub_23846CC30;
    return v48(v0 + 16, v0 + 104, *(_QWORD *)(v0 + 312), v39, v40);
  }
}

uint64_t sub_23846CC30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 424) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_238436B3C(v2 + 104);
  return swift_task_switch();
}

uint64_t sub_23846CC9C()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_238436B3C((uint64_t)(v0 + 8));
  v1 = sub_23849255C();
  v2 = sub_238492880();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_238433000, v1, v2, "ScheduledQueryManager createDateScheduledQuery TriggerAction.intent success", v3, 2u);
    MEMORY[0x23B835AF4](v3, -1, -1);
  }
  v4 = (_QWORD *)v0[32];

  v5 = v4[3];
  v6 = v4[4];
  sub_238438F90(v4, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  if (v8)
  {
    v9 = v8;
    v34 = v7;
    v10 = (uint64_t *)v0[36];
    v35 = v0[35];
    v11 = v0[34];
    v12 = v0[31];
    v33 = v0[30];
    v13 = v0[29];
    v14 = v0[5];
    v15 = v0[7];
    sub_238438F90(v0 + 2, v14);
    swift_bridgeObjectRetain();
    v16 = MEMORY[0x23B834BF4](v14, v15);
    v18 = v17;
    v19 = (char *)v10 + *(int *)(v11 + 28);
    v20 = sub_238491F98();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v19, v13, v20);
    type metadata accessor for TriggerParameters();
    swift_storeEnumTagMultiPayload();
    *v10 = v34;
    v10[1] = v9;
    v10[2] = v33;
    v10[3] = v12;
    v10[4] = v16;
    v10[5] = v18;
    sub_238440118((uint64_t)v10, v35, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
    v21 = sub_23849255C();
    v22 = sub_238492880();
    v23 = os_log_type_enabled(v21, v22);
    v24 = v0[35];
    if (v23)
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v36 = v26;
      *(_DWORD *)v25 = 136315138;
      v27 = ScheduledQuery.description.getter();
      v0[26] = sub_23843604C(v27, v28, &v36);
      sub_238492934();
      swift_bridgeObjectRelease();
      sub_23843F2AC(v24, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
      _os_log_impl(&dword_238433000, v21, v22, "ScheduledQueryManager createDateScheduledQuery created %s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B835AF4](v26, -1, -1);
      MEMORY[0x23B835AF4](v25, -1, -1);
    }
    else
    {
      sub_23843F2AC(v0[35], (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
    }

    if (qword_256909AA0 != -1)
      swift_once();
    v0[54] = qword_256911D00;
    return swift_task_switch();
  }
  else
  {
    v29 = sub_23849255C();
    v30 = sub_238492874();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_238433000, v29, v30, "Daily scheduled query created without identifier", v31, 2u);
      MEMORY[0x23B835AF4](v31, -1, -1);
    }

    return sub_238492B20();
  }
}

uint64_t sub_23846D074()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 424);
  sub_23848189C(*(uint64_t **)(v0 + 288));
  *(_QWORD *)(v0 + 440) = v1;
  return swift_task_switch();
}

uint64_t sub_23846D0D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (qword_256909A30 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 392);
  v1 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 288);
  v7 = *(_QWORD *)(v0 + 296);
  v8 = *(_QWORD *)(v0 + 224);
  sub_23843D87C(v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_2384401A0(v6, v8);
  sub_238436B3C(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23846D1F4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_238436B3C(v0 + 104);
  sub_238436B3C(v0 + 64);
  v1 = *(void **)(v0 + 424);
  v2 = v1;
  v3 = v1;
  v4 = sub_23849255C();
  v5 = sub_238492868();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v17 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue();
    v8 = sub_238492CD0();
    *(_QWORD *)(v0 + 200) = sub_23843604C(v8, v9, &v17);
    sub_238492934();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_238433000, v4, v5, "Error creating scheduled trigger: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v7, -1, -1);
    MEMORY[0x23B835AF4](v6, -1, -1);
  }
  else
  {

  }
  v11 = *(_QWORD *)(v0 + 392);
  v10 = *(_QWORD *)(v0 + 400);
  v12 = *(_QWORD *)(v0 + 384);
  v14 = *(_QWORD *)(v0 + 304);
  v13 = *(_QWORD *)(v0 + 312);
  v15 = *(_QWORD *)(v0 + 296);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23846D428()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_23843F2AC(*(_QWORD *)(v0 + 288), (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  sub_238436B3C(v0 + 16);
  v1 = *(void **)(v0 + 440);
  v2 = v1;
  v3 = v1;
  v4 = sub_23849255C();
  v5 = sub_238492868();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v17 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_getErrorValue();
    v8 = sub_238492CD0();
    *(_QWORD *)(v0 + 200) = sub_23843604C(v8, v9, &v17);
    sub_238492934();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_238433000, v4, v5, "Error creating scheduled trigger: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v7, -1, -1);
    MEMORY[0x23B835AF4](v6, -1, -1);
  }
  else
  {

  }
  v11 = *(_QWORD *)(v0 + 392);
  v10 = *(_QWORD *)(v0 + 400);
  v12 = *(_QWORD *)(v0 + 384);
  v14 = *(_QWORD *)(v0 + 304);
  v13 = *(_QWORD *)(v0 + 312);
  v15 = *(_QWORD *)(v0 + 296);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ScheduledQueryManager.createDailyScheduledQuery(components:query:runIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[32] = a5;
  v6[33] = v5;
  v6[30] = a3;
  v6[31] = a4;
  v6[28] = a1;
  v6[29] = a2;
  v6[34] = type metadata accessor for ScheduledQuery();
  v6[35] = swift_task_alloc();
  v6[36] = swift_task_alloc();
  v7 = sub_238492418();
  v6[37] = v7;
  v6[38] = *(_QWORD *)(v7 - 8);
  v6[39] = swift_task_alloc();
  v8 = sub_23849240C();
  v6[40] = v8;
  v6[41] = *(_QWORD *)(v8 - 8);
  v6[42] = swift_task_alloc();
  sub_238435C24(&qword_25690AFA8);
  v6[43] = swift_task_alloc();
  v9 = sub_238492478();
  v6[44] = v9;
  v6[45] = *(_QWORD *)(v9 - 8);
  v6[46] = swift_task_alloc();
  sub_238435C24(&qword_25690AFC8);
  v6[47] = swift_task_alloc();
  sub_238435C24(&qword_25690AFD0);
  v6[48] = swift_task_alloc();
  v10 = sub_238491E24();
  v6[49] = v10;
  v6[50] = *(_QWORD *)(v10 - 8);
  v6[51] = swift_task_alloc();
  v6[52] = swift_task_alloc();
  v6[53] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23846D800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  _QWORD *v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[3];

  v1 = *(_QWORD *)(v0 + 424);
  v60 = *(_QWORD *)(v0 + 400);
  v61 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 376);
  v63 = *(_QWORD *)(v0 + 392);
  v66 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 344);
  v67 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 336);
  v58 = *(_QWORD *)(v0 + 328);
  v59 = *(_QWORD *)(v0 + 320);
  v6 = sub_238492040();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
  v7 = sub_23849204C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v3, 1, 1, v7);
  v8 = sub_238491E00();
  v10 = v9 & 1;
  v11 = sub_238491E0C();
  v57 = v12 & 1;
  v56 = v11;
  v55 = v10;
  v54 = v8;
  sub_238491E18();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v58 + 104))(v5, *MEMORY[0x24BEC0ED8], v59);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16);
  *(_QWORD *)(v0 + 432) = v13;
  v13(v61, v1, v63);
  sub_23849246C();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v4, 1, v67) == 1)
  {
    sub_23843B198(*(_QWORD *)(v0 + 344), &qword_25690AFA8);
    if (qword_2569099F8 != -1)
      swift_once();
    v19 = *(_QWORD *)(v0 + 424);
    v20 = *(_QWORD *)(v0 + 408);
    v21 = *(_QWORD *)(v0 + 392);
    v22 = sub_238492574();
    sub_238435CA4(v22, (uint64_t)qword_256909F48);
    v13(v20, v19, v21);
    v23 = sub_23849255C();
    v24 = sub_238492868();
    v25 = os_log_type_enabled(v23, v24);
    v27 = *(_QWORD *)(v0 + 400);
    v26 = *(_QWORD *)(v0 + 408);
    v28 = *(_QWORD *)(v0 + 392);
    if (v25)
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v68[0] = v30;
      *(_DWORD *)v29 = 136315138;
      sub_23843E8CC(&qword_25690AFD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], MEMORY[0x24BDCBE28]);
      v31 = sub_238492C64();
      *(_QWORD *)(v0 + 200) = sub_23843604C(v31, v32, v68);
      sub_238492934();
      swift_bridgeObjectRelease();
      v33 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      v33(v26, v28);
      _os_log_impl(&dword_238433000, v23, v24, "ScheduledQueryManager createDailyScheduledQuery failed to create TimeOfDayTrigger with components %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B835AF4](v30, -1, -1);
      MEMORY[0x23B835AF4](v29, -1, -1);
    }
    else
    {
      v33 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      v33(*(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 392));
    }

    v49 = *(_QWORD *)(v0 + 424);
    v50 = *(_QWORD *)(v0 + 392);
    v51 = *(_QWORD *)(v0 + 352);
    v52 = sub_23843E8CC(&qword_25690AFB8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC0FC8], MEMORY[0x24BEC0FC0]);
    sub_2384715DC();
    swift_allocError();
    *(_QWORD *)v53 = v51;
    *(_QWORD *)(v53 + 8) = v52;
    *(_BYTE *)(v53 + 16) = 1;
    swift_willThrow();
    v33(v49, v50);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v64 = *(_QWORD *)(v0 + 368);
    v62 = *(_QWORD *)(v0 + 360);
    v34 = *(_QWORD *)(v0 + 352);
    v35 = *(_QWORD *)(v0 + 304);
    v36 = *(uint64_t **)(v0 + 312);
    v37 = *(_QWORD *)(v0 + 296);
    v39 = *(_QWORD **)(v0 + 256);
    v38 = *(_QWORD *)(v0 + 264);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, char, uint64_t, char, uint64_t, char, _QWORD, _BYTE, _QWORD, char, _QWORD, char, _QWORD, char))(v62 + 32))(v64, *(_QWORD *)(v0 + 344), v34, v14, v15, v16, v17, v18, 0, 1, v54, v55, v56, v57, 0, 0, 0, 1, 0,
      1,
      0,
      1);
    v41 = v39[3];
    v40 = v39[4];
    v42 = sub_238438F90(v39, v41);
    v36[3] = v41;
    v36[4] = *(_QWORD *)(v40 + 8);
    v43 = sub_2384718A0(v36);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v43, v42, v41);
    v36[5] = 0xD000000000000040;
    v36[6] = 0x8000000238497970;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v35 + 104))(v36, *MEMORY[0x24BEC0EE8], v37);
    swift_beginAccess();
    sub_23846A55C(v38 + 16, v0 + 104);
    v44 = *(_QWORD *)(v0 + 128);
    v45 = *(_QWORD *)(v0 + 136);
    sub_238438F90((_QWORD *)(v0 + 104), v44);
    *(_QWORD *)(v0 + 88) = v34;
    *(_QWORD *)(v0 + 96) = sub_23843E8CC(&qword_25690AFB8, (uint64_t (*)(uint64_t))MEMORY[0x24BEC0FC8], MEMORY[0x24BEC0FC0]);
    v46 = sub_2384718A0((uint64_t *)(v0 + 64));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v62 + 16))(v46, v64, v34);
    v65 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(**(int **)(v45 + 8) + *(_QWORD *)(v45 + 8));
    v47 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 440) = v47;
    *v47 = v0;
    v47[1] = sub_23846DDE8;
    return v65(v0 + 16, v0 + 64, *(_QWORD *)(v0 + 312), v44, v45);
  }
}

uint64_t sub_23846DDE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 448) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_238436B3C(v2 + 64);
  return swift_task_switch();
}

uint64_t sub_23846DE54()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = (_QWORD *)v0[32];
  sub_238436B3C((uint64_t)(v0 + 13));
  v2 = v1[3];
  v3 = v1[4];
  sub_238438F90(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  if (v5)
  {
    v6 = v5;
    v35 = v4;
    v7 = v0[53];
    v8 = v0[49];
    v9 = (uint64_t *)v0[36];
    v10 = v0[34];
    v11 = v0[31];
    v33 = (void (*)(char *, uint64_t, uint64_t))v0[54];
    v34 = v0[30];
    v12 = v0[5];
    v13 = v0[7];
    sub_238438F90(v0 + 2, v12);
    swift_bridgeObjectRetain();
    v14 = MEMORY[0x23B834BF4](v12, v13);
    v16 = v15;
    v33((char *)v9 + *(int *)(v10 + 28), v7, v8);
    type metadata accessor for TriggerParameters();
    swift_storeEnumTagMultiPayload();
    *v9 = v35;
    v9[1] = v6;
    v9[2] = v34;
    v9[3] = v11;
    v9[4] = v14;
    v9[5] = v16;
    if (qword_2569099F8 != -1)
      swift_once();
    v17 = v0[35];
    v18 = v0[36];
    v19 = sub_238492574();
    sub_238435CA4(v19, (uint64_t)qword_256909F48);
    sub_238440118(v18, v17, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
    v20 = sub_23849255C();
    v21 = sub_238492880();
    v22 = os_log_type_enabled(v20, v21);
    v23 = v0[35];
    if (v22)
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v36 = v25;
      *(_DWORD *)v24 = 136315138;
      v26 = ScheduledQuery.description.getter();
      v0[27] = sub_23843604C(v26, v27, &v36);
      sub_238492934();
      swift_bridgeObjectRelease();
      sub_23843F2AC(v23, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
      _os_log_impl(&dword_238433000, v20, v21, "ScheduledQueryManager createDailyScheduledQuery created %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B835AF4](v25, -1, -1);
      MEMORY[0x23B835AF4](v24, -1, -1);
    }
    else
    {
      sub_23843F2AC(v0[35], (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
    }

    if (qword_256909AA0 != -1)
      swift_once();
    v0[57] = qword_256911D00;
    return swift_task_switch();
  }
  else
  {
    if (qword_2569099F8 != -1)
      swift_once();
    v28 = sub_238492574();
    sub_238435CA4(v28, (uint64_t)qword_256909F48);
    v29 = sub_23849255C();
    v30 = sub_238492874();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_238433000, v29, v30, "Daily scheduled query created without identifier", v31, 2u);
      MEMORY[0x23B835AF4](v31, -1, -1);
    }

    return sub_238492B20();
  }
}

uint64_t sub_23846E230()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 448);
  sub_23848189C(*(uint64_t **)(v0 + 288));
  *(_QWORD *)(v0 + 464) = v1;
  return swift_task_switch();
}

uint64_t sub_23846E28C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  if (qword_256909A30 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 424);
  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 368);
  v6 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 360);
  v7 = *(_QWORD *)(v0 + 304);
  v8 = *(_QWORD *)(v0 + 288);
  v11 = *(_QWORD *)(v0 + 296);
  v12 = *(_QWORD *)(v0 + 312);
  v9 = *(_QWORD *)(v0 + 224);
  sub_23843D87C(v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_2384401A0(v8, v9);
  sub_238436B3C(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23846E3E8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  sub_238436B3C(v0 + 64);
  sub_238436B3C(v0 + 104);
  v1 = *(void **)(v0 + 448);
  if (qword_2569099F8 != -1)
    swift_once();
  v2 = sub_238492574();
  sub_238435CA4(v2, (uint64_t)qword_256909F48);
  v3 = v1;
  v4 = v1;
  v5 = sub_23849255C();
  v6 = sub_238492868();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v21 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_238492CD0();
    *(_QWORD *)(v0 + 208) = sub_23843604C(v9, v10, &v21);
    sub_238492934();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_238433000, v5, v6, "Error creating scheduled trigger: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v8, -1, -1);
    MEMORY[0x23B835AF4](v7, -1, -1);

  }
  else
  {

  }
  v20 = *(_QWORD *)(v0 + 424);
  v12 = *(_QWORD *)(v0 + 392);
  v11 = *(_QWORD *)(v0 + 400);
  v14 = *(_QWORD *)(v0 + 360);
  v13 = *(_QWORD *)(v0 + 368);
  v15 = *(_QWORD *)(v0 + 352);
  v16 = *(_QWORD *)(v0 + 304);
  v17 = *(_QWORD *)(v0 + 312);
  v18 = *(_QWORD *)(v0 + 296);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v20, v12);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23846E6A4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  sub_23843F2AC(*(_QWORD *)(v0 + 288), (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  sub_238436B3C(v0 + 16);
  v1 = *(void **)(v0 + 464);
  if (qword_2569099F8 != -1)
    swift_once();
  v2 = sub_238492574();
  sub_238435CA4(v2, (uint64_t)qword_256909F48);
  v3 = v1;
  v4 = v1;
  v5 = sub_23849255C();
  v6 = sub_238492868();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v21 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_238492CD0();
    *(_QWORD *)(v0 + 208) = sub_23843604C(v9, v10, &v21);
    sub_238492934();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_238433000, v5, v6, "Error creating scheduled trigger: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v8, -1, -1);
    MEMORY[0x23B835AF4](v7, -1, -1);

  }
  else
  {

  }
  v20 = *(_QWORD *)(v0 + 424);
  v12 = *(_QWORD *)(v0 + 392);
  v11 = *(_QWORD *)(v0 + 400);
  v14 = *(_QWORD *)(v0 + 360);
  v13 = *(_QWORD *)(v0 + 368);
  v15 = *(_QWORD *)(v0 + 352);
  v16 = *(_QWORD *)(v0 + 304);
  v17 = *(_QWORD *)(v0 + 312);
  v18 = *(_QWORD *)(v0 + 296);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v20, v12);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ScheduledQueryManager.createLocationEnteredScheduledQuery(location:radiusInMeters:query:isOneTime:runIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v8 + 72) = a6;
  *(_QWORD *)(v8 + 80) = v7;
  *(_BYTE *)(v8 + 168) = a5;
  *(_QWORD *)(v8 + 56) = a3;
  *(_QWORD *)(v8 + 64) = a4;
  *(double *)(v8 + 48) = a7;
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  sub_238435C24(&qword_25690AFE8);
  *(_QWORD *)(v8 + 88) = swift_task_alloc();
  v9 = sub_238492424();
  *(_QWORD *)(v8 + 96) = v9;
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 112) = swift_task_alloc();
  v10 = sub_238492460();
  *(_QWORD *)(v8 + 120) = v10;
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 136) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23846EA24()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  void *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  double v25;
  id v26;
  void *v27;
  id v28;
  NSObject *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  _QWORD *v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;

  if (qword_2569099F8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 40);
  v2 = sub_238492574();
  sub_238435CA4(v2, (uint64_t)qword_256909F48);
  v3 = v1;
  v4 = sub_23849255C();
  v5 = sub_238492880();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 40);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    *(_QWORD *)(v0 + 24) = v7;
    v10 = v7;
    sub_238492934();
    *v9 = v7;

    _os_log_impl(&dword_238433000, v4, v5, "manager createLocationEnteredScheduledQuery location=%@)", v8, 0xCu);
    sub_238435C24(&qword_25690A290);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v9, -1, -1);
    MEMORY[0x23B835AF4](v8, -1, -1);
  }
  else
  {

  }
  v11 = objc_msgSend(*(id *)(v0 + 40), sel_location);
  if (v11)
  {
    v12 = v11;
    v13 = *(void **)(v0 + 40);
    objc_msgSend(v11, sel_coordinate);
    v15 = v14;
    v17 = v16;

    v18 = objc_msgSend(v13, sel_name);
    if (v18)
    {
      v19 = v18;
      sub_23849261C();

    }
    v25 = *(double *)(v0 + 48);
    v26 = objc_allocWithZone(MEMORY[0x24BDBFA50]);
    v27 = (void *)sub_238492610();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend(v26, sel_initWithCenter_radius_identifier_, v27, v15, v17, v25);
    *(_QWORD *)(v0 + 144) = v28;

    v29 = v28;
    v30 = sub_23849255C();
    v31 = sub_238492880();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v32 = 138412290;
      *(_QWORD *)(v0 + 16) = v29;
      v34 = v29;
      sub_238492934();
      *v33 = v29;

      _os_log_impl(&dword_238433000, v30, v31, "manager createLocationEnteredScheduledQuery region=%@)", v32, 0xCu);
      sub_238435C24(&qword_25690A290);
      swift_arrayDestroy();
      MEMORY[0x23B835AF4](v33, -1, -1);
      MEMORY[0x23B835AF4](v32, -1, -1);
    }
    else
    {

      v30 = v29;
    }
    v36 = *(_QWORD *)(v0 + 104);
    v35 = *(_QWORD *)(v0 + 112);
    v38 = *(_QWORD *)(v0 + 88);
    v37 = *(_QWORD *)(v0 + 96);

    (*(void (**)(uint64_t, _QWORD, uint64_t))(v36 + 104))(v35, *MEMORY[0x24BEC0F50], v37);
    v39 = sub_23849243C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 1, 1, v39);
    v40 = v29;
    sub_238492448();
    v41 = sub_23849255C();
    v42 = sub_238492880();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_238433000, v41, v42, "manager createLocationEnteredScheduledQuery trigger=", v43, 2u);
      MEMORY[0x23B835AF4](v43, -1, -1);
    }

    v44 = swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v44;
    *(_QWORD *)v44 = v0;
    *(_QWORD *)(v44 + 8) = sub_23846EFE4;
    v45 = *(_QWORD *)(v0 + 136);
    v46 = *(_QWORD *)(v0 + 72);
    v47 = *(_OWORD *)(v0 + 56);
    v48 = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v44 + 56) = *(_QWORD *)(v0 + 80);
    *(_BYTE *)(v44 + 80) = 1;
    *(_OWORD *)(v44 + 40) = v47;
    *(_QWORD *)(v44 + 24) = v46;
    *(_QWORD *)(v44 + 32) = v45;
    *(_QWORD *)(v44 + 16) = v48;
    return swift_task_switch();
  }
  else
  {
    v20 = sub_23849255C();
    v21 = sub_238492874();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_238433000, v20, v21, "Error creating scheduled trigger: Location is nil", v22, 2u);
      MEMORY[0x23B835AF4](v22, -1, -1);
    }

    sub_2384715DC();
    swift_allocError();
    *(_OWORD *)v23 = xmmword_238495DC0;
    *(_BYTE *)(v23 + 16) = 2;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23846EFE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23846F048()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_256909A30 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(void **)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  sub_23843D87C(*(_QWORD *)(v0 + 32));

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23846F0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23846F160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v7 + 80) = a6;
  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 56) = v6;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_23846F184()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;
  void *v4;
  double v5;
  double v6;
  void *v7;
  double v8;
  double v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = (void *)sub_238492430();
  objc_msgSend(v1, sel_center);
  v3 = v2;

  v4 = (void *)sub_238492430();
  objc_msgSend(v4, sel_center);
  v6 = v5;

  v7 = (void *)sub_238492430();
  objc_msgSend(v7, sel_radius);
  v9 = v8;

  v10 = (void *)sub_238492430();
  v11 = objc_msgSend(v10, sel_identifier);

  v12 = sub_23849261C();
  v14 = v13;

  *(_QWORD *)(v0 + 64) = v14;
  sub_238492454();
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v15;
  *v15 = v0;
  v15[1] = sub_23846F2A8;
  return sub_23846F858(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v12, v14, *(_BYTE *)(v0 + 80), v3, v6, v9);
}

uint64_t sub_23846F2A8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t ScheduledQueryManager.createLocationExitedScheduledQuery(location:radiusInMeters:query:isOneTime:runIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 64) = v7;
  *(_BYTE *)(v8 + 152) = a5;
  *(_QWORD *)(v8 + 40) = a3;
  *(_QWORD *)(v8 + 48) = a4;
  *(double *)(v8 + 32) = a7;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  sub_238435C24(&qword_25690AFE8);
  *(_QWORD *)(v8 + 72) = swift_task_alloc();
  v9 = sub_238492424();
  *(_QWORD *)(v8 + 80) = v9;
  *(_QWORD *)(v8 + 88) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 96) = swift_task_alloc();
  v10 = sub_238492460();
  *(_QWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 112) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 120) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23846F3B4()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;

  v1 = objc_msgSend(*(id *)(v0 + 24), sel_location);
  if (v1)
  {
    v2 = v1;
    v3 = *(void **)(v0 + 24);
    objc_msgSend(v1, sel_coordinate);
    v5 = v4;
    v7 = v6;

    v8 = objc_msgSend(v3, sel_name);
    if (v8)
    {
      v9 = v8;
      sub_23849261C();

    }
    v17 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 72);
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(double *)(v0 + 32);
    v21 = objc_allocWithZone(MEMORY[0x24BDBFA50]);
    v22 = (void *)sub_238492610();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend(v21, sel_initWithCenter_radius_identifier_, v22, v5, v7, v20);
    *(_QWORD *)(v0 + 128) = v23;

    (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v16, *MEMORY[0x24BEC0F48], v19);
    v24 = sub_23849243C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v18, 1, 1, v24);
    v25 = v23;
    sub_238492448();
    v26 = swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v26;
    *(_QWORD *)v26 = v0;
    *(_QWORD *)(v26 + 8) = sub_23846F6DC;
    v27 = *(_QWORD *)(v0 + 120);
    v28 = *(_QWORD *)(v0 + 56);
    v29 = *(_OWORD *)(v0 + 40);
    v30 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v26 + 56) = *(_QWORD *)(v0 + 64);
    *(_BYTE *)(v26 + 80) = 0;
    *(_OWORD *)(v26 + 40) = v29;
    *(_QWORD *)(v26 + 24) = v28;
    *(_QWORD *)(v26 + 32) = v27;
    *(_QWORD *)(v26 + 16) = v30;
    return swift_task_switch();
  }
  else
  {
    if (qword_2569099F8 != -1)
      swift_once();
    v10 = sub_238492574();
    sub_238435CA4(v10, (uint64_t)qword_256909F48);
    v11 = sub_23849255C();
    v12 = sub_238492874();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_238433000, v11, v12, "Error creating scheduled trigger: Location is nil", v13, 2u);
      MEMORY[0x23B835AF4](v13, -1, -1);
    }

    sub_2384715DC();
    swift_allocError();
    *(_OWORD *)v14 = xmmword_238495DC0;
    *(_BYTE *)(v14 + 16) = 2;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23846F6DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23846F740()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_256909A30 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(void **)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  sub_23843D87C(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23846F7E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23846F858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, double a9, double a10, double a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;

  *(_QWORD *)(v12 + 288) = v11;
  *(_BYTE *)(v12 + 385) = v15;
  *(_BYTE *)(v12 + 384) = a8;
  *(double *)(v12 + 272) = a10;
  *(double *)(v12 + 280) = a11;
  *(double *)(v12 + 264) = a9;
  *(_QWORD *)(v12 + 248) = a6;
  *(_QWORD *)(v12 + 256) = a7;
  *(_QWORD *)(v12 + 232) = a4;
  *(_QWORD *)(v12 + 240) = a5;
  *(_QWORD *)(v12 + 216) = a2;
  *(_QWORD *)(v12 + 224) = a3;
  *(_QWORD *)(v12 + 208) = a1;
  *(_QWORD *)(v12 + 296) = type metadata accessor for ScheduledQuery();
  *(_QWORD *)(v12 + 304) = swift_task_alloc();
  *(_QWORD *)(v12 + 312) = type metadata accessor for TriggerParameters();
  *(_QWORD *)(v12 + 320) = swift_task_alloc();
  v13 = sub_238492418();
  *(_QWORD *)(v12 + 328) = v13;
  *(_QWORD *)(v12 + 336) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v12 + 344) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23846F924()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t (*v18)(uint64_t *, uint64_t *, uint64_t, uint64_t, uint64_t);

  v1 = v0[42];
  v2 = (uint64_t *)v0[43];
  v3 = v0[41];
  v4 = v0[36];
  v5 = (_QWORD *)v0[27];
  v17 = v0[28];
  v7 = v5[3];
  v6 = v5[4];
  v8 = sub_238438F90(v5, v7);
  v2[3] = v7;
  v2[4] = *(_QWORD *)(v6 + 8);
  v9 = sub_2384718A0(v2);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v9, v8, v7);
  v2[5] = 0xD000000000000040;
  v2[6] = 0x8000000238497970;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v1 + 104))(v2, *MEMORY[0x24BEC0EE8], v3);
  swift_beginAccess();
  sub_23846A55C(v4 + 16, (uint64_t)(v0 + 13));
  v10 = v0[16];
  v11 = v0[17];
  sub_238438F90(v0 + 13, v10);
  v12 = sub_238492460();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BEC0F90];
  v0[11] = v12;
  v0[12] = sub_23843E8CC(&qword_25690B150, v13, MEMORY[0x24BEC0F88]);
  v14 = sub_2384718A0(v0 + 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v14, v17, v12);
  v18 = (uint64_t (*)(uint64_t *, uint64_t *, uint64_t, uint64_t, uint64_t))(**(int **)(v11 + 8)
                                                                                + *(_QWORD *)(v11 + 8));
  v15 = (_QWORD *)swift_task_alloc();
  v0[44] = (uint64_t)v15;
  *v15 = v0;
  v15[1] = sub_23846FAD0;
  return v18(v0 + 2, v0 + 8, v0[43], v10, v11);
}

uint64_t sub_23846FAD0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 360) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_238436B3C(v2 + 64);
  return swift_task_switch();
}

uint64_t sub_23846FB3C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  __int128 v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = *(_BYTE *)(v0 + 385);
  v3 = *(_BYTE *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 280);
  v29 = *(_OWORD *)(v0 + 264);
  v6 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 256);
  v7 = *(_QWORD **)(v0 + 216);
  sub_238436B3C(v0 + 104);
  *(_QWORD *)v1 = v6;
  *(_QWORD *)(v1 + 8) = v5;
  *(_OWORD *)(v1 + 16) = v29;
  *(_QWORD *)(v1 + 32) = v4;
  *(_BYTE *)(v1 + 40) = v3;
  *(_BYTE *)(v1 + 41) = v2;
  swift_storeEnumTagMultiPayload();
  v8 = v7[3];
  v9 = v7[4];
  sub_238438F90(v7, v8);
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 16);
  swift_bridgeObjectRetain();
  v11 = v10(v8, v9);
  if (v12)
  {
    v13 = v11;
    v14 = v12;
    v15 = *(_QWORD *)(v0 + 320);
    v17 = *(_QWORD *)(v0 + 296);
    v16 = *(uint64_t **)(v0 + 304);
    v18 = *(_QWORD *)(v0 + 240);
    v30 = *(_QWORD *)(v0 + 232);
    v19 = *(_QWORD *)(v0 + 40);
    v20 = *(_QWORD *)(v0 + 56);
    sub_238438F90((_QWORD *)(v0 + 16), v19);
    swift_bridgeObjectRetain();
    v21 = MEMORY[0x23B834BF4](v19, v20);
    v23 = v22;
    sub_238440118(v15, (uint64_t)v16 + *(int *)(v17 + 28), (uint64_t (*)(_QWORD))type metadata accessor for TriggerParameters);
    *v16 = v13;
    v16[1] = v14;
    v16[2] = v30;
    v16[3] = v18;
    v16[4] = v21;
    v16[5] = v23;
    if (qword_256909AA0 != -1)
      swift_once();
    *(_QWORD *)(v0 + 368) = qword_256911D00;
    return swift_task_switch();
  }
  else
  {
    if (qword_2569099F8 != -1)
      swift_once();
    v25 = sub_238492574();
    sub_238435CA4(v25, (uint64_t)qword_256909F48);
    v26 = sub_23849255C();
    v27 = sub_238492874();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_238433000, v26, v27, "Location scheduled query created without identifier", v28, 2u);
      MEMORY[0x23B835AF4](v28, -1, -1);
    }

    return sub_238492B20();
  }
}

uint64_t sub_23846FDDC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 360);
  sub_23848189C(*(uint64_t **)(v0 + 304));
  *(_QWORD *)(v0 + 376) = v1;
  return swift_task_switch();
}

uint64_t sub_23846FE38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 336);
  v1 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 208);
  sub_23843F2AC(*(_QWORD *)(v0 + 320), (uint64_t (*)(_QWORD))type metadata accessor for TriggerParameters);
  sub_2384401A0(v4, v5);
  sub_238436B3C(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23846FEDC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_238436B3C(v0 + 64);
  sub_238436B3C(v0 + 104);
  v1 = *(void **)(v0 + 360);
  if (qword_2569099F8 != -1)
    swift_once();
  v2 = sub_238492574();
  sub_238435CA4(v2, (uint64_t)qword_256909F48);
  v3 = v1;
  v4 = v1;
  v5 = sub_23849255C();
  v6 = sub_238492868();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v15 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_238492CD0();
    *(_QWORD *)(v0 + 200) = sub_23843604C(v9, v10, &v15);
    sub_238492934();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_238433000, v5, v6, "Error creating scheduled trigger: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v8, -1, -1);
    MEMORY[0x23B835AF4](v7, -1, -1);
  }
  else
  {

  }
  v12 = *(_QWORD *)(v0 + 336);
  v11 = *(_QWORD *)(v0 + 344);
  v13 = *(_QWORD *)(v0 + 328);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238470104()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 320);
  sub_23843F2AC(*(_QWORD *)(v0 + 304), (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  sub_23843F2AC(v1, (uint64_t (*)(_QWORD))type metadata accessor for TriggerParameters);
  sub_238436B3C(v0 + 16);
  v2 = *(void **)(v0 + 376);
  if (qword_2569099F8 != -1)
    swift_once();
  v3 = sub_238492574();
  sub_238435CA4(v3, (uint64_t)qword_256909F48);
  v4 = v2;
  v5 = v2;
  v6 = sub_23849255C();
  v7 = sub_238492868();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v16 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue();
    v10 = sub_238492CD0();
    *(_QWORD *)(v0 + 200) = sub_23843604C(v10, v11, &v16);
    sub_238492934();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_238433000, v6, v7, "Error creating scheduled trigger: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v9, -1, -1);
    MEMORY[0x23B835AF4](v8, -1, -1);
  }
  else
  {

  }
  v13 = *(_QWORD *)(v0 + 336);
  v12 = *(_QWORD *)(v0 + 344);
  v14 = *(_QWORD *)(v0 + 328);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ScheduledQueryManager.deinit()
{
  uint64_t v0;

  sub_238436B3C(v0 + 16);
  return v0;
}

uint64_t ScheduledQueryManager.__deallocating_deinit()
{
  uint64_t v0;

  sub_238436B3C(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_238470388()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_25690AF30 + dword_25690AF30);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23847231C;
  return v3();
}

uint64_t sub_2384703E0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_25690AF40 + dword_25690AF40);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23847231C;
  return v3();
}

uint64_t sub_238470438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2384552B4;
  return ScheduledQueryManager.scheduledQuery(identifier:)(a1, a2, a3);
}

uint64_t sub_2384704A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2384552B4;
  return ScheduledQueryManager.delete(scheduledQueryWithIdentifier:)(a1, a2);
}

uint64_t sub_238470500()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2384552B4;
  return ScheduledQueryManager.deleteAllScheduledQueries()();
}

uint64_t sub_238470548(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_238438264;
  return ScheduledQueryManager.run(scheduledQueryWithIdentifier:)(a1, a2);
}

uint64_t sub_2384705A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_238451080;
  return ScheduledQueryManager.createDateScheduledQuery(date:query:runIntent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_23847062C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_2384552B4;
  return ScheduledQueryManager.createDailyScheduledQuery(components:query:runIntent:)(a1, a2, a3, a4, a5);
}

uint64_t sub_2384706B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, double a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_2384552B4;
  return ScheduledQueryManager.createLocationEnteredScheduledQuery(location:radiusInMeters:query:isOneTime:runIntent:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_23847074C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, double a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_2384552B4;
  return ScheduledQueryManager.createLocationExitedScheduledQuery(location:radiusInMeters:query:isOneTime:runIntent:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_2384707E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_2384927F0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2384927E4();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_23843B198(a1, &qword_25690AF58);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2384927A8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_238470934(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_238470998;
  return v6(a1);
}

uint64_t sub_238470998()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2384709E4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_238492C7C();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_238470A70()
{
  return 0x696669746E656469;
}

uint64_t sub_238470A8C()
{
  return swift_task_switch();
}

uint64_t sub_238470AA0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_256909AA0 != -1)
    swift_once();
  if (qword_2569099F8 != -1)
    swift_once();
  v1 = sub_238492574();
  *(_QWORD *)(v0 + 24) = sub_238435CA4(v1, (uint64_t)qword_256909F48);
  v2 = sub_23849255C();
  v3 = sub_238492880();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_238433000, v2, v3, "ScheduledQueryManager scheduledQueries found store", v4, 2u);
    MEMORY[0x23B835AF4](v4, -1, -1);
  }

  return swift_task_switch();
}

uint64_t sub_238470BBC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = sub_23848240C();
  return swift_task_switch();
}

uint64_t sub_238470C24()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint8_t *v6;

  v1 = *(_QWORD *)(v0 + 32);
  if (v1)
  {
    swift_bridgeObjectRetain();
    v2 = sub_23849255C();
    v3 = sub_238492880();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v4 = 134217984;
      *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
      sub_238492934();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_238433000, v2, v3, "ScheduledQueryManager scheduledQueries found %ld queries", v4, 0xCu);
      MEMORY[0x23B835AF4](v4, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v2 = sub_23849255C();
    v5 = sub_238492880();
    if (os_log_type_enabled(v2, (os_log_type_t)v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_238433000, v2, (os_log_type_t)v5, "Scheduled Queries were requested but store is empty", v6, 2u);
      MEMORY[0x23B835AF4](v6, -1, -1);
    }
    v1 = MEMORY[0x24BEE4AF8];
  }

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_238470DA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (__cdecl *v10)();

  v1 = sub_238491FF8();
  v0[2] = v1;
  v0[3] = *(_QWORD *)(v1 - 8);
  v0[4] = swift_task_alloc();
  v2 = sub_238492004();
  v0[5] = v2;
  v0[6] = *(_QWORD *)(v2 - 8);
  v0[7] = swift_task_alloc();
  v3 = sub_238491FE0();
  v0[8] = v3;
  v0[9] = *(_QWORD *)(v3 - 8);
  v0[10] = swift_task_alloc();
  v4 = sub_238492040();
  v0[11] = v4;
  v0[12] = *(_QWORD *)(v4 - 8);
  v0[13] = swift_task_alloc();
  v5 = sub_238491E24();
  v0[14] = v5;
  v0[15] = *(_QWORD *)(v5 - 8);
  v0[16] = swift_task_alloc();
  v0[17] = type metadata accessor for TriggerParameters();
  v0[18] = swift_task_alloc();
  sub_238435C24(&qword_25690AD00);
  v0[19] = swift_task_alloc();
  v6 = sub_238491F98();
  v0[20] = v6;
  v0[21] = *(_QWORD *)(v6 - 8);
  v0[22] = swift_task_alloc();
  v0[23] = swift_task_alloc();
  v7 = type metadata accessor for ScheduledQuery();
  v0[24] = v7;
  v0[25] = *(_QWORD *)(v7 - 8);
  v0[26] = swift_task_alloc();
  v0[27] = swift_task_alloc();
  v10 = (uint64_t (__cdecl *)())((char *)&dword_25690AF30 + dword_25690AF30);
  v8 = (_QWORD *)swift_task_alloc();
  v0[28] = v8;
  *v8 = v0;
  v8[1] = sub_238470F78;
  return v10();
}

uint64_t sub_238470F78(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 232) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_238471094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = MEMORY[0x24BEE4AF8];
  v58 = MEMORY[0x24BEE4AF8];
  v54 = *(_QWORD *)(v1 + 16);
  if (!v54)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(uint64_t))(v0 + 8))(v2);
    return;
  }
  v3 = 0;
  v52 = *(_QWORD *)(v0 + 192);
  v53 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 168);
  v50 = *(_QWORD *)(v0 + 120);
  v49 = *(_QWORD *)(v0 + 72);
  v39 = *(_QWORD *)(v0 + 48);
  v40 = *(_QWORD *)(v0 + 96);
  v38 = *(_QWORD *)(v0 + 24);
  v37 = *MEMORY[0x24BDCF020];
  v36 = *MEMORY[0x24BDCF0B0];
  v35 = *MEMORY[0x24BDCF068];
  v5 = MEMORY[0x24BEE4AF8];
  v55 = v4;
  v41 = *(_QWORD *)(v0 + 232);
  while (v3 < *(_QWORD *)(v1 + 16))
  {
    v6 = *(_QWORD *)(v0 + 216);
    v7 = *(_QWORD *)(v0 + 144);
    v8 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    v9 = *(_QWORD *)(v53 + 72);
    sub_238440118(*(_QWORD *)(v0 + 232) + v8 + v9 * v3, v6, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
    sub_238440118(v6 + *(int *)(v52 + 28), v7, (uint64_t (*)(_QWORD))type metadata accessor for TriggerParameters);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v11 = *(_QWORD *)(v0 + 176);
        v48 = *(_QWORD *)(v0 + 160);
        v51 = *(_QWORD *)(v0 + 128);
        v45 = *(_QWORD *)(v0 + 104);
        v46 = *(_QWORD *)(v0 + 112);
        v47 = *(_QWORD *)(v0 + 88);
        v56 = v5;
        v12 = *(_QWORD *)(v0 + 80);
        v13 = *(_QWORD *)(v0 + 56);
        v14 = *(_QWORD *)(v0 + 64);
        v15 = *(_QWORD *)(v0 + 32);
        v43 = *(_QWORD *)(v0 + 40);
        v44 = *(_QWORD *)(v0 + 16);
        (*(void (**)(void))(v50 + 32))();
        sub_23849201C();
        v42 = v11;
        sub_238491F80();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v49 + 104))(v12, v37, v14);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v39 + 104))(v13, v36, v43);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v38 + 104))(v15, v35, v44);
        v16 = v12;
        sub_238492028();
        v17 = v15;
        v4 = v55;
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v17, v44);
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v13, v43);
        v5 = v56;
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v16, v14);
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v42, v48);
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v45, v47);
        v1 = v41;
        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v51, v46);
      }
      else
      {
        v21 = *(_QWORD *)(v0 + 152);
        v20 = *(_QWORD *)(v0 + 160);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v21, 1, 1, v20);
      }
    }
    else
    {
      v19 = *(_QWORD *)(v0 + 152);
      v18 = *(_QWORD *)(v0 + 160);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 32))(v19, *(_QWORD *)(v0 + 144), v18);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v19, 0, 1, v18);
    }
    v23 = *(_QWORD *)(v0 + 152);
    v22 = *(_QWORD *)(v0 + 160);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v23, 1, v22) == 1)
    {
      sub_23843B198(v23, &qword_25690AD00);
LABEL_14:
      sub_2384401A0(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 208));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23848B7E4(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v5 = v58;
      }
      v33 = *(_QWORD *)(v5 + 16);
      v32 = *(_QWORD *)(v5 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_23848B7E4(v32 > 1, v33 + 1, 1);
        v5 = v58;
      }
      v34 = *(_QWORD *)(v0 + 208);
      *(_QWORD *)(v5 + 16) = v33 + 1;
      sub_2384401A0(v34, v5 + v8 + v33 * v9);
      goto LABEL_4;
    }
    v57 = v5;
    v24 = v1;
    v25 = v9;
    v26 = v8;
    v28 = *(_QWORD *)(v0 + 176);
    v27 = *(_QWORD *)(v0 + 184);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v27, v23, v22);
    sub_238491F80();
    v29 = sub_238491F44();
    v30 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    v31 = v28;
    v8 = v26;
    v9 = v25;
    v1 = v24;
    v5 = v57;
    v30(v31, v22);
    v30(v27, v22);
    v4 = v55;
    if ((v29 & 1) != 0)
      goto LABEL_14;
    sub_23843F2AC(*(_QWORD *)(v0 + 216), (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
LABEL_4:
    if (v54 == ++v3)
    {
      v2 = v5;
      goto LABEL_20;
    }
  }
  __break(1u);
}

uint64_t sub_238471594(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_238435C24(&qword_25690A078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2384715DC()
{
  unint64_t result;

  result = qword_25690AF60;
  if (!qword_25690AF60)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for ScheduledQueryManager.ScheduledQueryManagerError, &type metadata for ScheduledQueryManager.ScheduledQueryManagerError);
    atomic_store(result, (unint64_t *)&qword_25690AF60);
  }
  return result;
}

unint64_t sub_238471620()
{
  unint64_t result;

  result = qword_25690AF68;
  if (!qword_25690AF68)
  {
    result = MEMORY[0x23B835A40](&unk_238495F9C, &type metadata for ScheduledTriggerIdentifier);
    atomic_store(result, (unint64_t *)&qword_25690AF68);
  }
  return result;
}

uint64_t sub_238471664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  unint64_t v24;
  char *v25;
  uint64_t v26;

  v7 = type metadata accessor for ScheduledQuery();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v13 = (_QWORD *)((char *)v23 - v12);
  result = MEMORY[0x24BEE4AF8];
  v26 = MEMORY[0x24BEE4AF8];
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v23[1] = v3;
    v16 = *(_QWORD *)(v11 + 72);
    v24 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v17 = a1 + v24;
    v18 = MEMORY[0x24BEE4AF8];
    v25 = v10;
    do
    {
      sub_238440118(v17, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
      v19 = *v13 == a2 && v13[1] == a3;
      if (v19 || (sub_238492C7C() & 1) != 0)
      {
        sub_23843F2AC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
      }
      else
      {
        sub_2384401A0((uint64_t)v13, (uint64_t)v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_23848B7E4(0, *(_QWORD *)(v18 + 16) + 1, 1);
        v18 = v26;
        v21 = *(_QWORD *)(v26 + 16);
        v20 = *(_QWORD *)(v26 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_23848B7E4(v20 > 1, v21 + 1, 1);
          v18 = v26;
        }
        *(_QWORD *)(v18 + 16) = v21 + 1;
        v22 = v18 + v24 + v21 * v16;
        v10 = v25;
        sub_2384401A0((uint64_t)v25, v22);
      }
      v17 += v16;
      --v15;
    }
    while (v15);
    return v26;
  }
  return result;
}

uint64_t sub_238471834(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_2384552B4;
  return sub_238481D54(a1, v4, v5, v6);
}

uint64_t *sub_2384718A0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_2384718E0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23847190C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_238451080;
  return sub_238481D54(a1, v4, v5, v6);
}

uint64_t sub_238471978(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_238492034();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_238435C24(&qword_25690B158);
    v10 = sub_238492A60();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_23843E8CC(&qword_25690B160, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2A8]);
      v14 = sub_2384925EC();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_23843E8CC(&qword_25690B168, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2C0]);
          v20 = sub_238492604();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t dispatch thunk of TriggerServiceProtocol.scheduleTrigger(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 8) + *(_QWORD *)(a5 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_2384552B4;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of TriggerServiceProtocol.deleteScheduledTrigger(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_238451080;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of TriggerServiceProtocol.fetchAllScheduledTriggers()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 24) + *(_QWORD *)(a2 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2384697D0;
  return v7(a1, a2);
}

uint64_t type metadata accessor for ScheduledQueryManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for ScheduledQueryManager()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_238471D8C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ScheduledQueryManager.ScheduledQueryManagerError(uint64_t a1)
{
  return sub_238471DB0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_238471DB0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s23ConditionalEngineClient21ScheduledQueryManagerC26ScheduledQueryManagerErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_238471D8C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ScheduledQueryManager.ScheduledQueryManagerError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_238471D8C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_238471DB0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ScheduledQueryManager.ScheduledQueryManagerError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_238471DB0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledQueryManager.ScheduledQueryManagerError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledQueryManager.ScheduledQueryManagerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_238471F30(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_238471F48(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryManager.ScheduledQueryManagerError()
{
  return &type metadata for ScheduledQueryManager.ScheduledQueryManagerError;
}

uint64_t getEnumTagSinglePayload for ScheduledTriggerIdentifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduledTriggerIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledTriggerIdentifier()
{
  return &type metadata for ScheduledTriggerIdentifier;
}

unint64_t sub_238472008()
{
  unint64_t result;

  result = qword_25690B120;
  if (!qword_25690B120)
  {
    result = MEMORY[0x23B835A40](&unk_238495F74, &type metadata for ScheduledTriggerIdentifier);
    atomic_store(result, (unint64_t *)&qword_25690B120);
  }
  return result;
}

unint64_t sub_238472050()
{
  unint64_t result;

  result = qword_25690B128;
  if (!qword_25690B128)
  {
    result = MEMORY[0x23B835A40](&unk_238495F4C, &type metadata for ScheduledTriggerIdentifier);
    atomic_store(result, (unint64_t *)&qword_25690B128);
  }
  return result;
}

unint64_t sub_238472094()
{
  unint64_t result;

  result = qword_25690B138;
  if (!qword_25690B138)
  {
    result = MEMORY[0x23B835A40](&unk_238496098, &type metadata for ScheduledTriggerIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690B138);
  }
  return result;
}

uint64_t sub_2384720D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2384720FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2384552B4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25690B170 + dword_25690B170))(a1, v4);
}

unint64_t sub_23847216C()
{
  unint64_t result;

  result = qword_25690B180;
  if (!qword_25690B180)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25690B180);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ScheduledTriggerIdentifier.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2384721E8 + 4 * byte_238495DD0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_238472208 + 4 * byte_238495DD5[v4]))();
}

_BYTE *sub_2384721E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_238472208(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_238472210(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_238472218(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_238472220(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_238472228(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ScheduledTriggerIdentifier.CodingKeys()
{
  return &type metadata for ScheduledTriggerIdentifier.CodingKeys;
}

unint64_t sub_238472248()
{
  unint64_t result;

  result = qword_25690B188;
  if (!qword_25690B188)
  {
    result = MEMORY[0x23B835A40](&unk_238496070, &type metadata for ScheduledTriggerIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690B188);
  }
  return result;
}

unint64_t sub_238472290()
{
  unint64_t result;

  result = qword_25690B190;
  if (!qword_25690B190)
  {
    result = MEMORY[0x23B835A40](&unk_238495FE0, &type metadata for ScheduledTriggerIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690B190);
  }
  return result;
}

unint64_t sub_2384722D8()
{
  unint64_t result;

  result = qword_25690B198;
  if (!qword_25690B198)
  {
    result = MEMORY[0x23B835A40](&unk_238496008, &type metadata for ScheduledTriggerIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690B198);
  }
  return result;
}

uint64_t sub_238472324()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_238472354(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_238472390())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t InferenceRunStore.__allocating_init(fileManager:)(__int128 *a1)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  sqlite3 *v6;
  uint64_t v7;
  __int16 v8;
  sqlite3 *v9;
  void *v10;
  char v11;

  v2 = swift_allocObject();
  v3 = *a1;
  v4 = a1[1];
  v5 = *((_QWORD *)a1 + 4);
  *(_QWORD *)(v2 + 16) = 0;
  *(_OWORD *)(v2 + 24) = v3;
  *(_OWORD *)(v2 + 40) = v4;
  *(_QWORD *)(v2 + 56) = v5;
  v6 = sub_238472840();
  v9 = v6;
  if ((v8 & 0x100) != 0)
  {
    v10 = (void *)v7;
    v11 = v8;
    sub_238472534((uint64_t)v6, v7, v8);
    sub_2384733D8(v9, v10, v11, 1);
  }
  else
  {
    swift_beginAccess();
    *(_QWORD *)(v2 + 16) = v9;
    if (v9)
    {
      sub_23847341C();
      sub_238473B04();
    }
  }
  return v2;
}

uint64_t InferenceRunStore.init(fileManager:)(__int128 *a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  sqlite3 *v5;
  uint64_t v6;
  __int16 v7;
  sqlite3 *v8;
  void *v9;
  char v10;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_QWORD *)a1 + 4);
  *(_QWORD *)(v1 + 16) = 0;
  *(_OWORD *)(v1 + 24) = v2;
  *(_OWORD *)(v1 + 40) = v3;
  *(_QWORD *)(v1 + 56) = v4;
  v5 = sub_238472840();
  v8 = v5;
  if ((v7 & 0x100) != 0)
  {
    v9 = (void *)v6;
    v10 = v7;
    sub_238472534((uint64_t)v5, v6, v7);
    sub_2384733D8(v8, v9, v10, 1);
  }
  else
  {
    swift_beginAccess();
    *(_QWORD *)(v1 + 16) = v8;
    if (v8)
    {
      sub_23847341C();
      sub_238473B04();
    }
  }
  return v1;
}

void sub_238472534(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

void sub_23847256C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;

  sub_238435C24((uint64_t *)&unk_25690AA80);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_238493540;
  v3 = v1;
  sub_238492A78();
  sub_2384926A0();
  sub_238435C24(&qword_25690A630);
  sub_238492B08();
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0xE000000000000000;
  sub_238492D0C();
  swift_bridgeObjectRelease();
  sub_2384733E4(v1, v0, 0);
}

uint64_t sub_238472664()
{
  uint64_t v0;

  sub_238435C24((uint64_t *)&unk_25690AA80);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_238493540;
  sub_238492A78();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 32) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 40) = 0x8000000238499360;
  sub_238492D0C();
  return swift_bridgeObjectRelease();
}

sqlite3 *sub_238472840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void (*v16)(char *, uint64_t);
  void *v17;
  id v18;
  void *v19;
  unsigned int v20;
  id v21;
  void *v22;
  unsigned __int8 v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  char v55;
  uint64_t v56;
  _OWORD v57[2];
  uint64_t v58;
  sqlite3 *ppDb[2];

  ppDb[1] = *(sqlite3 **)MEMORY[0x24BDAC8D0];
  v1 = sub_238491ECC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v53 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v53 - v9;
  v11 = *(_OWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 56);
  v57[0] = *(_OWORD *)(v0 + 24);
  v57[1] = v11;
  v58 = v12;
  ppDb[0] = 0;
  ScheduledQueryFileManager.databaseURL()((uint64_t)v8);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v10, v8, v1);
  v55 = 0;
  sub_238491E90();
  v13 = sub_238491EA8();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v2 + 8);
  v16(v5, v1);
  v17 = (void *)objc_opt_self();
  v18 = objc_msgSend(v17, sel_defaultManager);
  v19 = (void *)sub_238492610();
  v20 = objc_msgSend(v18, sel_fileExistsAtPath_isDirectory_, v19, &v55);

  if (!v20 || (v55 & 1) == 0)
  {
    if (qword_2569099F8 != -1)
      swift_once();
    v33 = sub_238492574();
    sub_238435CA4(v33, (uint64_t)qword_256909F48);
    swift_bridgeObjectRetain_n();
    v29 = sub_23849255C();
    v34 = sub_238492868();
    if (os_log_type_enabled(v29, v34))
    {
      v54 = v16;
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      *(_QWORD *)&v57[0] = v36;
      *(_DWORD *)v35 = 136315138;
      swift_bridgeObjectRetain();
      v56 = sub_23843604C(v13, v15, (uint64_t *)v57);
      sub_238492934();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_238433000, v29, v34, "Directory does not exist: %s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B835AF4](v36, -1, -1);
      MEMORY[0x23B835AF4](v35, -1, -1);

      v54(v10, v1);
      return (sqlite3 *)v13;
    }
    goto LABEL_14;
  }
  v21 = objc_msgSend(v17, sel_defaultManager);
  v22 = (void *)sub_238492610();
  v23 = objc_msgSend(v21, sel_isWritableFileAtPath_, v22);

  if ((v23 & 1) == 0)
  {
    if (qword_2569099F8 != -1)
      swift_once();
    v38 = sub_238492574();
    sub_238435CA4(v38, (uint64_t)qword_256909F48);
    swift_bridgeObjectRetain_n();
    v29 = sub_23849255C();
    v39 = sub_238492868();
    if (os_log_type_enabled(v29, v39))
    {
      v54 = v16;
      v40 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      *(_QWORD *)&v57[0] = v41;
      *(_DWORD *)v40 = 136315138;
      swift_bridgeObjectRetain();
      v56 = sub_23843604C(v13, v15, (uint64_t *)v57);
      sub_238492934();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_238433000, v29, v39, "Directory is not writable: %s", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B835AF4](v41, -1, -1);
      MEMORY[0x23B835AF4](v40, -1, -1);

      v54(v10, v1);
      return (sqlite3 *)v13;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  sub_238491EA8();
  v24 = sub_238492664();
  swift_bridgeObjectRelease();
  v25 = sqlite3_open_v2((const char *)(v24 + 32), ppDb, 6, 0);
  swift_release();
  if (v25)
  {
    if (sqlite3_errmsg(ppDb[0]))
    {
      v13 = sub_2384926AC();
      v27 = v26;
      if (qword_2569099F8 != -1)
        swift_once();
      v28 = sub_238492574();
      sub_238435CA4(v28, (uint64_t)qword_256909F48);
      swift_bridgeObjectRetain_n();
      v29 = sub_23849255C();
      v30 = sub_238492868();
      if (os_log_type_enabled(v29, v30))
      {
        v54 = v16;
        v31 = (uint8_t *)swift_slowAlloc();
        v32 = swift_slowAlloc();
        *(_QWORD *)&v57[0] = v32;
        *(_DWORD *)v31 = 136315138;
        swift_bridgeObjectRetain();
        v56 = sub_23843604C(v13, v27, (uint64_t *)v57);
        sub_238492934();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_238433000, v29, v30, "Unable to open database: %s", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B835AF4](v32, -1, -1);
        MEMORY[0x23B835AF4](v31, -1, -1);

        v54(v10, v1);
        return (sqlite3 *)v13;
      }
LABEL_14:
      swift_bridgeObjectRelease_n();

      v16(v10, v1);
      return (sqlite3 *)v13;
    }
    if (qword_2569099F8 != -1)
      swift_once();
    v49 = sub_238492574();
    sub_238435CA4(v49, (uint64_t)qword_256909F48);
    v50 = sub_23849255C();
    v51 = sub_238492868();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v52 = 0;
      _os_log_impl(&dword_238433000, v50, v51, "Unknown error occurred while opening the database", v52, 2u);
      MEMORY[0x23B835AF4](v52, -1, -1);
    }

    v16(v10, v1);
    return 0;
  }
  else
  {
    *(_QWORD *)&v57[0] = 0;
    *((_QWORD *)&v57[0] + 1) = 0xE000000000000000;
    sub_238492A78();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v57[0] = 0xD00000000000002ELL;
    *((_QWORD *)&v57[0] + 1) = 0x80000002384993B0;
    sub_238491EA8();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    v42 = v57[0];
    sub_238435C24((uint64_t *)&unk_25690AA80);
    v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_238493540;
    *(_QWORD *)(v43 + 56) = MEMORY[0x24BEE0D00];
    *(_OWORD *)(v43 + 32) = v42;
    swift_bridgeObjectRetain();
    sub_238492D0C();
    swift_bridgeObjectRelease();
    if (qword_2569099F8 != -1)
      swift_once();
    v44 = sub_238492574();
    sub_238435CA4(v44, (uint64_t)qword_256909F48);
    swift_bridgeObjectRetain();
    v45 = sub_23849255C();
    v46 = sub_238492880();
    if (os_log_type_enabled(v45, v46))
    {
      v54 = v16;
      v47 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      *(_QWORD *)&v57[0] = v48;
      *(_DWORD *)v47 = 136315138;
      swift_bridgeObjectRetain();
      v56 = sub_23843604C(v42, *((unint64_t *)&v42 + 1), (uint64_t *)v57);
      sub_238492934();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_238433000, v45, v46, "%s", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B835AF4](v48, -1, -1);
      MEMORY[0x23B835AF4](v47, -1, -1);

      v54(v10, v1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      v16(v10, v1);
    }
    return ppDb[0];
  }
}

void sub_2384733D8(void *a1, id a2, char a3, char a4)
{
  if ((a4 & 1) != 0)
    sub_2384733E4(a1, a2, a3);
}

void sub_2384733E4(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:

      break;
    case 1:
    case 2:
    case 3:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t sub_23847341C()
{
  uint64_t v0;
  sqlite3 **v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  unint64_t v25;
  sqlite3_stmt *ppStmt[2];

  ppStmt[1] = *(sqlite3_stmt **)MEMORY[0x24BDAC8D0];
  ppStmt[0] = 0;
  v1 = (sqlite3 **)(v0 + 16);
  swift_beginAccess();
  if (!sqlite3_prepare_v2(*(sqlite3 **)(v0 + 16), "CREATE TABLE IF NOT EXISTS InferenceRun(\nId INTEGER PRIMARY KEY AUTOINCREMENT,\nUUID TEXT UNIQUE,\nResult INTEGER,\nConfidence REAL,\nResponse TEXT,\nPromptTemplate TEXT,\nGroupName TEXT,\nTimestamp DATETIME DEFAULT CURRENT_TIMESTAMP);",
          -1,
          ppStmt,
          0))
  {
    if (sqlite3_step(ppStmt[0]) == 101)
    {
      sub_238435C24((uint64_t *)&unk_25690AA80);
      v2 = swift_allocObject();
      *(_OWORD *)(v2 + 16) = xmmword_238493540;
      *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v2 + 32) = 0xD00000000000001BLL;
      *(_QWORD *)(v2 + 40) = 0x80000002384992C0;
      sub_238492D0C();
      swift_bridgeObjectRelease();
      if (qword_2569099F8 != -1)
        swift_once();
      v3 = sub_238492574();
      sub_238435CA4(v3, (uint64_t)qword_256909F48);
      v4 = sub_23849255C();
      v5 = sub_238492880();
      if (!os_log_type_enabled(v4, v5))
        goto LABEL_26;
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v24 = v7;
      *(_DWORD *)v6 = 136315138;
      v8 = 0x80000002384992C0;
      v9 = 0xD00000000000001BLL;
      goto LABEL_25;
    }
    if (sqlite3_errmsg(*v1))
    {
      sub_2384926AC();
      sub_238492A78();
      swift_bridgeObjectRelease();
      v24 = 0xD000000000000030;
      v25 = 0x8000000238499280;
      goto LABEL_15;
    }
    sub_238435C24((uint64_t *)&unk_25690AA80);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_238493540;
    *(_QWORD *)(v21 + 56) = MEMORY[0x24BEE0D00];
    v11 = " be prepared. Error: ";
    *(_QWORD *)(v21 + 32) = 0xD000000000000037;
    *(_QWORD *)(v21 + 40) = 0x8000000238499240;
    sub_238492D0C();
    swift_bridgeObjectRelease();
    if (qword_2569099F8 != -1)
      swift_once();
    v22 = sub_238492574();
    sub_238435CA4(v22, (uint64_t)qword_256909F48);
    v4 = sub_23849255C();
    v5 = sub_238492868();
    if (!os_log_type_enabled(v4, v5))
    {
LABEL_26:

      return sqlite3_finalize(ppStmt[0]);
    }
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v24 = v7;
    *(_DWORD *)v6 = 136315138;
    v9 = 0xD000000000000037;
LABEL_24:
    v8 = (unint64_t)v11 | 0x8000000000000000;
LABEL_25:
    sub_23843604C(v9, v8, &v24);
    sub_238492934();
    _os_log_impl(&dword_238433000, v4, v5, "%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v7, -1, -1);
    MEMORY[0x23B835AF4](v6, -1, -1);
    goto LABEL_26;
  }
  if (!sqlite3_errmsg(*v1))
  {
    sub_238435C24((uint64_t *)&unk_25690AA80);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_238493540;
    *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
    v11 = " CURRENT_TIMESTAMP);";
    *(_QWORD *)(v10 + 32) = 0xD00000000000003CLL;
    *(_QWORD *)(v10 + 40) = 0x80000002384991C0;
    sub_238492D0C();
    swift_bridgeObjectRelease();
    if (qword_2569099F8 != -1)
      swift_once();
    v12 = sub_238492574();
    sub_238435CA4(v12, (uint64_t)qword_256909F48);
    v4 = sub_23849255C();
    v5 = sub_238492868();
    if (!os_log_type_enabled(v4, v5))
      goto LABEL_26;
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v24 = v7;
    *(_DWORD *)v6 = 136315138;
    v9 = 0xD00000000000003CLL;
    goto LABEL_24;
  }
  sub_2384926AC();
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_238492A78();
  sub_2384926A0();
LABEL_15:
  sub_2384926A0();
  swift_bridgeObjectRelease();
  v14 = v24;
  v13 = v25;
  sub_238435C24((uint64_t *)&unk_25690AA80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_238493540;
  *(_QWORD *)(v15 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v15 + 32) = v14;
  *(_QWORD *)(v15 + 40) = v13;
  swift_bridgeObjectRetain();
  sub_238492D0C();
  swift_bridgeObjectRelease();
  if (qword_2569099F8 != -1)
    swift_once();
  v16 = sub_238492574();
  sub_238435CA4(v16, (uint64_t)qword_256909F48);
  swift_bridgeObjectRetain();
  v17 = sub_23849255C();
  v18 = sub_238492868();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v24 = v20;
    *(_DWORD *)v19 = 136315138;
    swift_bridgeObjectRetain();
    sub_23843604C(v14, v13, &v24);
    sub_238492934();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_238433000, v17, v18, "%s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v20, -1, -1);
    MEMORY[0x23B835AF4](v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return sqlite3_finalize(ppStmt[0]);
}

uint64_t sub_238473B04()
{
  swift_bridgeObjectRetain();
  sub_238473D40(1145656661, 0xE400000000000000);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_238473D40(0x746C75736552, 0xE600000000000000);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_238473D40(0x6E656469666E6F43, 0xEA00000000006563);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_238473D40(0x65736E6F70736552, 0xE800000000000000);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_238473D40(0x655474706D6F7250, 0xEE006574616C706DLL);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_238473D40(0x6D614E70756F7247, 0xE900000000000065);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_238473D40(0x6D617473656D6954, 0xE900000000000070);
  swift_bridgeObjectRelease();
  return swift_arrayDestroy();
}

uint64_t sub_238473D40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  sqlite3 **v5;
  sqlite3 *v6;
  uint64_t v7;
  int v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t *v13;
  sqlite3_stmt *v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  unint64_t *v19;
  const char *v20;
  uint64_t v21;
  unint64_t *v22;
  sqlite3_stmt *v23;
  uint64_t result;
  unint64_t v25;
  unint64_t v26;
  sqlite3_stmt *pStmt;
  sqlite3_stmt *ppStmt[2];

  ppStmt[1] = *(sqlite3_stmt **)MEMORY[0x24BDAC8D0];
  ppStmt[0] = 0;
  v5 = (sqlite3 **)(v2 + 16);
  swift_beginAccess();
  if (!sqlite3_prepare_v2(*(sqlite3 **)(v2 + 16), "PRAGMA table_info(InferenceRun);", -1, ppStmt, 0))
  {
    v14 = ppStmt[0];
    while (sqlite3_step(v14) == 100)
    {
      if (sqlite3_column_text(v14, 1))
      {
        if (sub_2384926B8() == a1 && v15 == a2)
        {
          swift_bridgeObjectRelease();
LABEL_39:
          v23 = ppStmt[0];
          return sqlite3_finalize(v23);
        }
        v17 = sub_238492C7C();
        swift_bridgeObjectRelease();
        if ((v17 & 1) != 0)
          goto LABEL_39;
      }
    }
  }
  sqlite3_finalize(ppStmt[0]);
  pStmt = 0;
  if (a1 == 1145656661 && a2 == 0xE400000000000000 || (sub_238492C7C() & 1) != 0)
  {
LABEL_5:
    sub_238492A78();
    sub_2384926A0();
    sub_2384926A0();
    goto LABEL_6;
  }
  if ((a1 != 0x746C75736552 || a2 != 0xE600000000000000)
    && (sub_238492C7C() & 1) == 0
    && (a1 != 0x6E656469666E6F43 || a2 != 0xEA00000000006563)
    && (sub_238492C7C() & 1) == 0
    && (a1 != 0x65736E6F70736552 || a2 != 0xE800000000000000)
    && (sub_238492C7C() & 1) == 0
    && (a1 != 0x655474706D6F7250 || a2 != 0xEE006574616C706DLL)
    && (sub_238492C7C() & 1) == 0
    && (a1 != 0x6D614E70756F7247 || a2 != 0xE900000000000065)
    && (sub_238492C7C() & 1) == 0)
  {
    if (a1 != 0x6D617473656D6954 || a2 != 0xE900000000000070)
    {
      result = sub_238492C7C();
      if ((result & 1) == 0)
        return result;
    }
    goto LABEL_5;
  }
  sub_238492A78();
  swift_bridgeObjectRelease();
  sub_2384926A0();
LABEL_6:
  sub_2384926A0();
  v6 = *v5;
  v7 = sub_238492664();
  swift_bridgeObjectRelease();
  v8 = sqlite3_prepare_v2(v6, (const char *)(v7 + 32), -1, &pStmt, 0);
  swift_release();
  if (v8)
  {
    v9 = sqlite3_errmsg(*v5);
    sub_238435C24((uint64_t *)&unk_25690AA80);
    v10 = swift_allocObject();
    v11 = sub_238442B54(v10, 1);
    v13 = v12;
    if (v9)
    {
      v25 = 0;
      v26 = 0xE000000000000000;
      sub_238492A78();
      sub_2384926A0();
LABEL_27:
      sub_2384926A0();
      sub_2384926A0();
      sub_2384926AC();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    v25 = 0;
    v26 = 0xE000000000000000;
    sub_238492A78();
    sub_2384926A0();
LABEL_29:
    sub_2384926A0();
    goto LABEL_30;
  }
  if (sqlite3_step(pStmt) != 101)
  {
    v20 = sqlite3_errmsg(*v5);
    sub_238435C24((uint64_t *)&unk_25690AA80);
    v21 = swift_allocObject();
    v11 = sub_238442B54(v21, 1);
    v13 = v22;
    if (v20)
    {
      sub_238492A78();
      swift_bridgeObjectRelease();
      v25 = 0xD000000000000015;
      v26 = 0x8000000238499090;
      goto LABEL_27;
    }
    sub_238492A78();
    swift_bridgeObjectRelease();
    v25 = 0xD000000000000015;
    v26 = 0x8000000238499090;
    goto LABEL_29;
  }
  sub_238435C24((uint64_t *)&unk_25690AA80);
  v18 = swift_allocObject();
  v11 = sub_238442B54(v18, 1);
  v13 = v19;
  sub_238492A78();
  swift_bridgeObjectRelease();
  v25 = 0xD00000000000001ALL;
  v26 = 0x80000002384990B0;
  sub_2384926A0();
LABEL_30:
  sub_2384926A0();
LABEL_31:
  v13[3] = MEMORY[0x24BEE0D00];
  *v13 = v25;
  v13[1] = v26;
  nullsub_1(v11);
  sub_238492D0C();
  swift_bridgeObjectRelease();
  v23 = pStmt;
  return sqlite3_finalize(v23);
}

uint64_t sub_238474558(char a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  sqlite3 **v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  const char *v23;
  uint64_t v24;
  sqlite3_stmt *v25;
  void *v26;
  const char *v27;
  id v28;
  sqlite3_stmt *v29;
  void *v30;
  const char *v31;
  id v32;
  sqlite3_stmt *v33;
  void *v34;
  const char *v35;
  id v36;
  sqlite3_stmt *v37;
  void *v38;
  const char *v39;
  id v40;
  const char *v41;
  int v42;
  const char *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  sqlite3_stmt *ppStmt[5];

  v9 = v8;
  v51 = a7;
  v52 = a6;
  ppStmt[4] = *(sqlite3_stmt **)MEMORY[0x24BDAC8D0];
  v13 = sub_238491FD4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (sqlite3 **)(v9 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(v9 + 16))
  {
    v50 = a8;
    _s23ConditionalEngineClient0A5EventV2id10Foundation4UUIDVvg_0();
    v18 = sub_238491FA4();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    ppStmt[0] = 0;
    if (sqlite3_prepare_v2(*v17, "INSERT INTO InferenceRun (UUID, Result, Confidence, Response, PromptTemplate, GroupName) VALUES (?, ?, ?, ?, ?, ?);",
           -1,
           ppStmt,
           0))
    {
      v19 = sqlite3_errmsg(*v17);
      sub_238435C24((uint64_t *)&unk_25690AA80);
      v20 = swift_allocObject();
      v21 = v20;
      *(_OWORD *)(v20 + 16) = xmmword_238493540;
      if (v19)
      {
        v53 = 0;
        v54 = 0xE000000000000000;
        sub_238492A78();
        swift_bridgeObjectRelease();
        v22 = 0xD00000000000002FLL;
        v23 = "INSERT statement could not be prepared. Error: ";
LABEL_14:
        v53 = v22;
        v54 = (unint64_t)(v23 - 32) | 0x8000000000000000;
        sub_2384926AC();
        sub_2384926A0();
        swift_bridgeObjectRelease();
        v46 = v53;
        v45 = v54;
        *(_QWORD *)(v21 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v21 + 32) = v46;
LABEL_17:
        *(_QWORD *)(v21 + 40) = v45;
        sub_238492D0C();
        swift_bridgeObjectRelease();
        sqlite3_finalize(ppStmt[0]);
        return v18;
      }
      *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v20 + 32) = 0xD000000000000036;
      v41 = "INSERT statement could not be prepared. Unknown error.";
    }
    else
    {
      v25 = ppStmt[0];
      v49 = v18;
      v26 = (void *)sub_238492610();
      v27 = (const char *)objc_msgSend(v26, sel_UTF8String);
      v28 = v26;
      sqlite3_bind_text(v25, 1, v27, -1, 0);
      v29 = ppStmt[0];
      sqlite3_bind_int(ppStmt[0], 2, a1 & 1);
      sqlite3_bind_double(v29, 3, a2);
      v30 = (void *)sub_238492610();
      v31 = (const char *)objc_msgSend(v30, sel_UTF8String);
      v32 = v30;
      sqlite3_bind_text(v29, 4, v31, -1, 0);
      v33 = ppStmt[0];
      v34 = (void *)sub_238492610();
      v35 = (const char *)objc_msgSend(v34, sel_UTF8String);
      v36 = v34;
      sqlite3_bind_text(v33, 5, v35, -1, 0);
      if (v50)
      {
        v37 = ppStmt[0];
        v38 = (void *)sub_238492610();
        v39 = (const char *)objc_msgSend(v38, sel_UTF8String);
        v40 = v38;
        sqlite3_bind_text(v37, 6, v39, -1, 0);
      }
      else
      {
        sqlite3_bind_null(ppStmt[0], 6);
      }
      v42 = sqlite3_step(ppStmt[0]);
      v18 = v49;
      if (v42 == 101)
      {
        sub_238435C24((uint64_t *)&unk_25690AA80);
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_238493540;
        *(_QWORD *)(v21 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v21 + 32) = 0xD00000000000001ALL;
        v41 = "Successfully inserted row.";
      }
      else
      {
        v43 = sqlite3_errmsg(*v17);
        sub_238435C24((uint64_t *)&unk_25690AA80);
        v44 = swift_allocObject();
        v21 = v44;
        *(_OWORD *)(v44 + 16) = xmmword_238493540;
        if (v43)
        {
          v53 = 0;
          v54 = 0xE000000000000000;
          sub_238492A78();
          swift_bridgeObjectRelease();
          v22 = 0xD00000000000001DLL;
          v23 = "Could not insert row. Error: ";
          goto LABEL_14;
        }
        *(_QWORD *)(v44 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v44 + 32) = 0xD000000000000024;
        v41 = "Could not insert row. Unknown error.";
      }
    }
    v45 = (unint64_t)(v41 - 32) | 0x8000000000000000;
    goto LABEL_17;
  }
  sub_238435C24((uint64_t *)&unk_25690AA80);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_238493540;
  *(_QWORD *)(v24 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v24 + 32) = 0xD000000000000014;
  *(_QWORD *)(v24 + 40) = 0x8000000238498CB0;
  sub_238492D0C();
  swift_bridgeObjectRelease();
  return 0;
}

_QWORD *sub_238474A3C()
{
  uint64_t v0;
  sqlite3 *v1;
  const char *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  sqlite3_stmt *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  sqlite3_stmt *ppStmt[5];

  ppStmt[4] = *(sqlite3_stmt **)MEMORY[0x24BDAC8D0];
  swift_beginAccess();
  v1 = *(sqlite3 **)(v0 + 16);
  if (v1)
  {
    ppStmt[0] = 0;
    if (sqlite3_prepare_v2(v1, "SELECT UUID, Result, Confidence, Response, PromptTemplate, GroupName, Timestamp FROM InferenceRun;",
           -1,
           ppStmt,
           0))
    {
      v2 = sqlite3_errmsg(*(sqlite3 **)(v0 + 16));
      sub_238435C24((uint64_t *)&unk_25690AA80);
      v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_238493540;
      if (v2)
      {
        sub_238492A78();
        swift_bridgeObjectRelease();
        sub_2384926AC();
        sub_2384926A0();
        swift_bridgeObjectRelease();
        v4 = 0xD00000000000002FLL;
        v5 = 0x8000000238498EE0;
      }
      else
      {
        v4 = 0xD000000000000036;
        v5 = 0x8000000238498EA0;
      }
      *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v3 + 32) = v4;
      *(_QWORD *)(v3 + 40) = v5;
      sub_238492D0C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = ppStmt[0];
      if (sqlite3_step(ppStmt[0]) == 100)
      {
        v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
        while (sqlite3_column_text(v8, 0))
        {
          v9 = sub_2384926B8();
          v11 = v10;
          v12 = sqlite3_column_int(v8, 1);
          v13 = sqlite3_column_double(v8, 2);
          if (!sqlite3_column_text(v8, 3))
            goto LABEL_28;
          v14 = sub_2384926B8();
          v16 = v15;
          if (!sqlite3_column_text(v8, 4))
            goto LABEL_29;
          v17 = sub_2384926B8();
          v19 = v18;
          if (sqlite3_column_text(v8, 5))
          {
            if (!sqlite3_column_text(v8, 5))
              goto LABEL_31;
            v20 = sub_2384926B8();
            v32 = v21;
          }
          else
          {
            v20 = 0;
            v32 = 0;
          }
          if (!sqlite3_column_text(v8, 6))
            goto LABEL_30;
          v31 = v9;
          v22 = sub_2384926B8();
          v29 = v23;
          v30 = v22;
          v24 = v19;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v7 = sub_2384752E4(0, v7[2] + 1, 1, v7);
          v26 = v7[2];
          v25 = v7[3];
          if (v26 >= v25 >> 1)
            v7 = sub_2384752E4((_QWORD *)(v25 > 1), v26 + 1, 1, v7);
          v7[2] = v26 + 1;
          v27 = &v7[12 * v26];
          v27[4] = v31;
          v27[5] = v11;
          *((_BYTE *)v27 + 48) = v12 == 1;
          *((double *)v27 + 7) = v13;
          v27[8] = v14;
          v27[9] = v16;
          v27[10] = v17;
          v27[11] = v24;
          v27[12] = v20;
          v27[13] = v32;
          v27[14] = v30;
          v27[15] = v29;
          if (sqlite3_step(v8) != 100)
            goto LABEL_25;
        }
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
      }
    }
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_25:
    sqlite3_finalize(ppStmt[0]);
  }
  else
  {
    sub_238435C24((uint64_t *)&unk_25690AA80);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_238493540;
    *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v6 + 32) = 0xD000000000000014;
    *(_QWORD *)(v6 + 40) = 0x8000000238498CB0;
    sub_238492D0C();
    swift_bridgeObjectRelease();
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v7;
}

uint64_t InferenceRunStore.deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t InferenceRunStore.__deallocating_deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

_QWORD *sub_238474E98(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_238435C24(&qword_25690B290);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2384754FC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_238474FA4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2384750D8(a1, a2, a3, a4, &qword_25690B2A0, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQueryHistory.Event);
}

_QWORD *sub_238474FB8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_238435C24(&qword_25690B2B0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2384755EC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2384750C4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2384750D8(a1, a2, a3, a4, &qword_25690B2A8, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
}

uint64_t sub_2384750D8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_238435C24(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_238492B14();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2384756DC(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_2384752E4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_238435C24(&qword_25690B298);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[12 * v8 + 4])
          memmove(v12, a4 + 4, 96 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2384757F4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_238475408@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return result;
}

uint64_t sub_23847544C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 16) = v2;
  return result;
}

uint64_t type metadata accessor for InferenceRunStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for InferenceRunStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InferenceRunStore.db.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of InferenceRunStore.db.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of InferenceRunStore.db.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of InferenceRunStore.__allocating_init(fileManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of InferenceRunStore.insert(result:confidence:response:promptTemplate:group:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of InferenceRunStore.fetchAllInferenceRuns()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t sub_2384754FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_238492B5C();
  __break(1u);
  return result;
}

uint64_t sub_2384755EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_238492B5C();
  __break(1u);
  return result;
}

uint64_t sub_2384756DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_238492B5C();
  __break(1u);
  return result;
}

uint64_t sub_2384757F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 96 * a1 + 32;
    v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_238492B5C();
  __break(1u);
  return result;
}

uint64_t sub_2384758E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  *(_QWORD *)(v8 + 80) = a7;
  *(_QWORD *)(v8 + 88) = a8;
  *(_QWORD *)(v8 + 64) = a4;
  *(_QWORD *)(v8 + 72) = a6;
  *(_BYTE *)(v8 + 152) = a5;
  *(_QWORD *)(v8 + 48) = a2;
  *(_QWORD *)(v8 + 56) = a3;
  *(_QWORD *)(v8 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_23847595C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  id v34;
  void *v35;
  int v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;

  v1 = *(_QWORD **)(v0 + 72);
  v2 = v1[3];
  v3 = v1[4];
  sub_238438F90(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  if (!v4)
  {
    if (!*((_QWORD *)&xmmword_256911CE0 + 1))
      return sub_238492B20();
    swift_bridgeObjectRetain();
  }
  v5 = *(void **)(v0 + 64);
  v6 = v5;
  if (v5)
  {
LABEL_7:
    v12 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD **)(v0 + 56);
    v14 = (void *)objc_opt_self();
    v15 = v5;
    v16 = (void *)sub_2384769BC(v13);
    v17 = objc_msgSend(v14, sel_policyWithActionMetadata_signals_, v6, v16);

    if (!v12)
    {
      v20 = 0;
      goto LABEL_12;
    }
LABEL_8:
    v18 = objc_allocWithZone(MEMORY[0x24BE60218]);
    swift_bridgeObjectRetain();
    v19 = (void *)sub_238492610();
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(v18, sel_initWithPersonaUniqueIdentifier_, v19);

    if (!v17)
    {
LABEL_9:
      v21 = (void *)objc_opt_self();
      v22 = (void *)sub_238492610();
      swift_bridgeObjectRelease();
      v23 = objc_msgSend(v21, sel_policyWithBundleIdentifier_, v22);

      *(_QWORD *)(v0 + 24) = 0;
      v24 = objc_msgSend(v23, sel_connectionWithUserIdentity_error_, v20, v0 + 24);

      v25 = *(void **)(v0 + 24);
      if (v24)
      {
        v26 = v25;
        v17 = 0;
LABEL_14:
        *(_QWORD *)(v0 + 112) = v17;
        *(_QWORD *)(v0 + 120) = v6;
        *(_QWORD *)(v0 + 96) = v24;
        *(_QWORD *)(v0 + 104) = v20;
        v31 = dword_25690B308;
        v32 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 128) = v32;
        *v32 = v0;
        v32[1] = sub_238475F74;
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_25690B308 + v31))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), (uint64_t)v6, (uint64_t)v24, *(_QWORD *)(v0 + 72), (uint64_t)v17);
      }
      v40 = v25;
      sub_238491E6C();

      swift_willThrow();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
LABEL_12:
    v27 = v17;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 32) = 0;
    v28 = objc_msgSend(v27, sel_connectionWithUserIdentity_error_, v20, v0 + 32);
    v29 = *(void **)(v0 + 32);
    if (v28)
    {
      v24 = v28;
      v30 = v29;

      goto LABEL_14;
    }
    v34 = v29;
    sub_238491E6C();

    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE60128]), sel_init);
  v8 = (void *)sub_238492610();
  v9 = (void *)sub_238492610();
  *(_QWORD *)(v0 + 16) = 0;
  v6 = objc_msgSend(v7, sel_actionForBundleIdentifier_andActionIdentifier_error_, v8, v9, v0 + 16);

  v10 = *(id *)(v0 + 16);
  if (v6)
  {
    v11 = v6;
    v5 = *(void **)(v0 + 64);
    goto LABEL_7;
  }
  v35 = v10;
  v36 = *(unsigned __int8 *)(v0 + 152);
  v37 = (void *)sub_238491E6C();

  swift_willThrow();
  if (v36)
  {
    if (v36 == 1)
    {
      v38 = *(_QWORD *)(v0 + 88);
      sub_238492A78();
      sub_2384926A0();
      sub_2384926A0();
      sub_2384926A0();
      sub_2384926A0();
      sub_2384926A0();
      sub_238435C24((uint64_t *)&unk_25690AA80);
      v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_238493540;
      sub_2384926A0();
      sub_2384926A0();
      *(_QWORD *)(v39 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v39 + 32) = 0x6D33333B305B1BLL;
      *(_QWORD *)(v39 + 40) = 0xE700000000000000;
      sub_238492D0C();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v17 = 0;
      v6 = 0;
      v20 = 0;
      if (!v38)
        goto LABEL_9;
    }
    else
    {
      v41 = *(_QWORD *)(v0 + 88);

      v17 = 0;
      v6 = 0;
      v20 = 0;
      if (!v41)
        goto LABEL_9;
    }
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238475F74(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 136) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 144) = a1;
  return swift_task_switch();
}

uint64_t sub_23847602C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 112);
  v2 = *(void **)(v0 + 120);
  v3 = *(void **)(v0 + 104);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 144));
}

uint64_t sub_2384760A8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 112);
  v2 = *(void **)(v0 + 120);
  v3 = *(void **)(v0 + 104);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238476120(uint64_t a1, void *a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  void **v19;
  void *v20;
  BOOL v21;
  id v23;
  unint64_t v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  id v37;
  char v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  id v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;

  v5 = objc_msgSend(v2, sel_domain);
  v6 = sub_23849261C();
  v8 = v7;

  if (v6 == sub_23849261C() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = sub_238492C7C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
      return 0;
  }
  if (objc_msgSend(v2, sel_code) != (id)2008)
    return 0;
  v12 = objc_msgSend(v2, sel_userInfo);
  v13 = sub_2384925D4();

  v14 = sub_23849261C();
  if (!*(_QWORD *)(v13 + 16) || (v16 = sub_238442128(v14, v15), (v17 & 1) == 0))
  {
    v49 = 0u;
    v50 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  sub_238436B5C(*(_QWORD *)(v13 + 56) + 32 * v16, (uint64_t)&v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v50 + 1))
  {
LABEL_23:
    sub_23847B7C8((uint64_t)&v49);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    goto LABEL_54;
  v19 = (void **)(a1 + 48);
  while (1)
  {
    v20 = *v19;
    v21 = *(v19 - 2) == (void *)v47 && *(v19 - 1) == *((void **)&v47 + 1);
    if (v21 || (sub_238492C7C() & 1) != 0)
      break;
    v19 += 3;
    if (!--v18)
      goto LABEL_54;
  }
  swift_bridgeObjectRetain();
  v44 = v20;
  v23 = objc_msgSend(a2, sel_parameters);
  sub_238455238(0, &qword_25690B2F0);
  v24 = sub_23849276C();

  swift_bridgeObjectRetain();
  v25 = sub_23847AA18(v24, v47, *((uint64_t *)&v47 + 1));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v25)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return 0;
  }
  v26 = objc_msgSend(v44, sel_value);
  sub_238492988();
  swift_unknownObjectRelease();
  sub_238435C24(&qword_25690B2F8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v47 = 0u;
    v48 = 0u;
LABEL_35:
    sub_23847B7C8((uint64_t)&v47);
    goto LABEL_36;
  }
  if (*(_QWORD *)(v45 + 16))
  {
    sub_238436B5C(v45 + 32, (uint64_t)&v47);
  }
  else
  {
    v47 = 0u;
    v48 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v48 + 1))
    goto LABEL_35;
  sub_238455238(0, &qword_25690B830);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v27 = objc_msgSend(v46, sel_value);

    sub_238492988();
    swift_unknownObjectRelease();
    swift_dynamicCast();
  }
LABEL_36:
  v28 = objc_msgSend(v25, sel_valueType);
  objc_opt_self();
  v29 = swift_dynamicCastObjCClass();

  if (!v29)
  {
    v33 = objc_msgSend(v25, sel_valueType);
    objc_opt_self();
    v34 = (void *)swift_dynamicCastObjCClass();
    if (!v34)
    {
LABEL_47:

      goto LABEL_48;
    }
    v35 = objc_msgSend(v34, sel_memberValueType);

    if (!v35)
      goto LABEL_48;
    objc_opt_self();
    v36 = swift_dynamicCastObjCClass();

    if (!v36)
      goto LABEL_48;
  }
  v30 = objc_msgSend(v44, sel_valueType);
  objc_opt_self();
  v31 = (void *)swift_dynamicCastObjCClass();
  if (v31)
  {
    v32 = objc_msgSend(v31, sel_memberValueType);

  }
  else
  {

    v32 = 0;
  }
  v33 = objc_msgSend((id)objc_opt_self(), sel_stringValueType);
  if (!v32)
    goto LABEL_47;
  sub_238455238(0, &qword_25690B300);
  v37 = v32;
  v38 = sub_238492904();

  if ((v38 & 1) == 0)
  {
LABEL_48:
    v39 = objc_msgSend(v25, sel_valueType);
    objc_opt_self();
    v40 = (void *)swift_dynamicCastObjCClass();
    if (v40)
    {
      v41 = objc_msgSend(v40, sel_memberValueType);

      if (v41)
      {
        v42 = objc_msgSend(v44, sel_valueType);
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {

          *(_QWORD *)&v49 = 0;
          *((_QWORD *)&v49 + 1) = 0xE000000000000000;
          sub_238492A78();
          sub_2384926A0();
          sub_2384926A0();
          sub_2384926A0();
          v43 = objc_msgSend(v41, sel_description);
          sub_23849261C();

          sub_2384926A0();
          swift_bridgeObjectRelease();
          sub_2384926A0();
          sub_2384926A0();
          swift_bridgeObjectRelease();
          sub_2384926A0();
          sub_2384926A0();
          swift_bridgeObjectRelease();
          sub_2384926A0();

          swift_bridgeObjectRelease();
          return v49;
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return 0;
      }
    }
    else
    {

    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
LABEL_54:
    swift_bridgeObjectRelease();
    return 0;
  }
  *(_QWORD *)&v49 = 0;
  *((_QWORD *)&v49 + 1) = 0xE000000000000000;
  sub_238492A78();
  sub_2384926A0();
  sub_2384926A0();
  sub_2384926A0();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();

  swift_bridgeObjectRelease();
  return v49;
}

uint64_t sub_2384769BC(_QWORD *a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t result;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  id v20;
  _OWORD v21[2];
  _BYTE v22[24];
  uint64_t v23;

  v2 = v1;
  v4 = objc_msgSend(v2, sel_effectiveBundleIdentifiers);
  v5 = objc_msgSend(v4, sel_count);

  if (v5 != (id)1)
    return 0;
  v6 = objc_msgSend(v2, sel_effectiveBundleIdentifiers);
  v7 = objc_msgSend(v6, sel_firstObject);

  if (v7)
  {
    sub_238492988();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v21, 0, sizeof(v21));
  }
  sub_23847B808((uint64_t)v21, (uint64_t)v22);
  if (!v23)
  {
    sub_23847B7C8((uint64_t)v22);
    return 0;
  }
  sub_238455238(0, &qword_25690B310);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  if (objc_msgSend(v20, sel_type) != (id)3)
    goto LABEL_26;
  v8 = a1[2];
  if (!v8)
    goto LABEL_26;
  v9 = (void *)a1[6];
  if (a1[4] == 7368801 && a1[5] == 0xE300000000000000 || (result = sub_238492C7C(), (result & 1) != 0))
  {
LABEL_12:
    v11 = v9;
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(v11, sel_value);
      sub_238492988();
      swift_unknownObjectRelease();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE60068]), sel_init);
        v15 = (void *)sub_238492610();
        swift_bridgeObjectRelease();
        objc_msgSend(v14, sel_setPreferredBundleIdentifier_, v15);

        return (uint64_t)v14;
      }

    }
    goto LABEL_26;
  }
  if (v8 == 1)
  {
LABEL_26:

    return 0;
  }
  v16 = (void **)(a1 + 9);
  v17 = 1;
  while (1)
  {
    v18 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    v9 = *v16;
    if (*(v16 - 2) == (void *)7368801 && *(v16 - 1) == (void *)0xE300000000000000)
      goto LABEL_12;
    result = sub_238492C7C();
    if ((result & 1) != 0)
      goto LABEL_12;
    v16 += 3;
    ++v17;
    if (v18 == v8)
      goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_238476C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v7[4] = a2;
  v7[5] = a3;
  v7[3] = a1;
  v8 = sub_238491F98();
  v7[10] = v8;
  v7[11] = *(_QWORD *)(v8 - 8);
  v7[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_238476CDC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  char v38;
  void *v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  id v53;
  char v54;
  id v55;
  _QWORD *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  _QWORD *v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  void *v77;
  id v78;
  id v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  void *v83;
  char *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;

  v1 = (void *)v0[6];
  v2 = MEMORY[0x24BEE4AF8];
  v83 = v1;
  if (!v1)
    goto LABEL_16;
  v3 = objc_msgSend(v1, sel_parameters);
  sub_238455238(0, &qword_25690B2F0);
  v4 = sub_23849276C();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_238492B2C();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_4;
LABEL_19:
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v2 + 16))
      goto LABEL_17;
LABEL_20:
    v19 = MEMORY[0x24BEE4B00];
    goto LABEL_21;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    goto LABEL_19;
LABEL_4:
  v89 = v2;
  result = sub_23848B7C8(0, v5 & ~(v5 >> 63), 0);
  if (v5 < 0)
  {
    __break(1u);
    return result;
  }
  v82 = v0;
  v7 = 0;
  v2 = v89;
  v85 = v4 & 0xC000000000000001;
  v8 = v4;
  do
  {
    if (v85)
      v9 = (id)MEMORY[0x23B835200](v7, v4);
    else
      v9 = *(id *)(v4 + 8 * v7 + 32);
    v10 = v9;
    v11 = objc_msgSend(v9, sel_name);
    if (v11)
    {
      v12 = v11;
      v13 = sub_23849261C();
      v15 = v14;

    }
    else
    {
      v13 = 0;
      v15 = 0;
    }
    v89 = v2;
    v17 = *(_QWORD *)(v2 + 16);
    v16 = *(_QWORD *)(v2 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_23848B7C8(v16 > 1, v17 + 1, 1);
      v2 = v89;
    }
    ++v7;
    *(_QWORD *)(v2 + 16) = v17 + 1;
    v18 = (_QWORD *)(v2 + 24 * v17);
    v18[4] = v13;
    v18[5] = v15;
    v18[6] = v10;
    v4 = v8;
  }
  while (v5 != v7);
  swift_bridgeObjectRelease();
  v0 = v82;
LABEL_16:
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_20;
LABEL_17:
  sub_238435C24(&qword_25690A5D0);
  v19 = sub_238492B50();
LABEL_21:
  v89 = v19;
  v20 = (_QWORD *)swift_bridgeObjectRetain();
  sub_23847A410(v20, 1, &v89);
  v86 = v0[9];
  v22 = v0[5];
  v21 = (void *)v0[6];
  v23 = v0;
  swift_bridgeObjectRelease();
  v24 = v89;
  v25 = v21;
  swift_retain();
  swift_bridgeObjectRetain();
  v26 = sub_23847A7A8(v22, (uint64_t)v21, v24);
  swift_bridgeObjectRelease();
  swift_release_n();

  if (v86)
  {
    v27 = (void *)v0[9];
    sub_238455238(0, &qword_25690B2C8);
    v28 = v27;
    v29 = (void *)sub_238492760();
    swift_bridgeObjectRelease();
    v30 = objc_msgSend(v28, sel_actionWithParameters_, v29);

  }
  else
  {
    v31 = v83;
    if (v83)
    {
      v32 = (_QWORD *)v0[8];
      v33 = v32[3];
      v34 = v32[4];
      sub_238438F90(v32, v33);
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v34);
      if (!v35)
      {
        if (!*((_QWORD *)&xmmword_256911CE0 + 1))
          return sub_238492B20();
        swift_bridgeObjectRetain();
      }
      v39 = (void *)sub_238492610();
      swift_bridgeObjectRelease();
      v40 = objc_msgSend(v25, sel_mangledTypeNameForBundleIdentifier_, v39);

      v87 = sub_23849261C();
      v37 = v41;

      v38 = objc_msgSend(v25, sel_openAppWhenRun);
      v42 = objc_msgSend(v25, sel_outputFlags);
      v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithUnsignedInteger_, v42);
      v31 = v83;
    }
    else
    {
      v36 = 0;
      v87 = 0;
      v37 = 0;
      v38 = 0;
    }
    v43 = objc_msgSend(v25, sel_outputType);
    if (v31)
    {
      v44 = objc_msgSend(v25, sel_systemProtocols);
      sub_238455238(0, &qword_25690B320);
      sub_23849276C();

    }
    v46 = v0[3];
    v45 = v0[4];
    v47 = objc_allocWithZone(MEMORY[0x24BE5FBB0]);
    swift_bridgeObjectRetain();
    v81 = v26;
    v48 = v46;
    v23 = v0;
    v30 = sub_23847A2CC(v48, v45, v87, v37, v38, v36, v43);
  }
  v49 = (_QWORD *)v23[8];
  v50 = v49[3];
  v51 = v49[4];
  sub_238438F90(v49, v50);
  v52 = *(uint64_t (**)(uint64_t, uint64_t))(v51 + 24);
  v53 = v30;
  v54 = v52(v50, v51);
  v55 = v53;
  if (v54 != 2)
  {
    v55 = objc_msgSend(v53, sel_actionWithOpenWhenRun_, v54 & 1);

  }
  v88 = v55;
  v23[13] = v55;
  v56 = (_QWORD *)v23[8];

  v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE5FFA0]), sel_init);
  v23[14] = v57;
  objc_msgSend(v57, sel_setSource_, 2);
  v58 = v49[3];
  v59 = v49[4];
  sub_238438F90(v56, v58);
  v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 16))(v58, v59);
  v61 = (_QWORD *)v23[8];
  objc_msgSend(v57, sel_setInteractionMode_, v60);
  v62 = (void *)sub_238492610();
  objc_msgSend(v57, sel_setClientLabel_, v62);

  v63 = v49[3];
  v64 = v49[4];
  sub_238438F90(v61, v63);
  (*(void (**)(uint64_t, uint64_t))(v64 + 32))(v63, v64);
  if ((v65 & 1) != 0)
    v66 = 0;
  else
    v66 = (void *)sub_23849282C();
  v67 = v23[11];
  v68 = v23[12];
  v69 = v23[10];
  v70 = (_QWORD *)v23[8];
  objc_msgSend(v57, sel_setViewActionIdentifier_, v66, v81);

  v71 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE601E0]), sel_init);
  v23[15] = v71;
  sub_238491F8C();
  v72 = (void *)sub_238491F38();
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v68, v69);
  objc_msgSend(v71, sel_setPreciseTimestamp_, v72);

  objc_msgSend(v57, sel_setSystemContext_, v71);
  v74 = v49[3];
  v73 = v49[4];
  sub_238438F90(v70, v74);
  (*(void (**)(uint64_t, uint64_t))(v73 + 40))(v74, v73);
  if (v75)
  {
    v76 = objc_allocWithZone(MEMORY[0x24BE5FC38]);
    v77 = (void *)sub_238492610();
    swift_bridgeObjectRelease();
    v78 = objc_msgSend(v76, sel_initWithContentType_, v77);

    v79 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE600E8]), sel_initWithContentType_preferredExtractionType_, v78, 0);
    objc_msgSend(v57, sel_setExportedContentConfiguration_, v79);

  }
  v84 = (char *)&dword_25690B318 + dword_25690B318;
  v80 = (_QWORD *)swift_task_alloc();
  v23[16] = v80;
  *v80 = v23;
  v80[1] = sub_238477544;
  return ((uint64_t (*)(id, _QWORD, _QWORD, id))v84)(v88, v23[6], v23[7], v57);
}

uint64_t sub_238477544(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 136) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 144) = a1;
  return swift_task_switch();
}

uint64_t sub_2384775B8()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 112);
  v1 = *(void **)(v0 + 120);

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 144));
}

uint64_t sub_23847760C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v2 = *(void **)(v0 + 112);
  v1 = *(void **)(v0 + 120);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23847765C(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char v8;
  char v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;

  v6 = *a1;
  v5 = a1[1];
  v7 = (void *)a1[2];
  if (a2)
  {
    if (!*(_QWORD *)(a3 + 16)
      || (swift_bridgeObjectRetain(), sub_23844291C(v6, v5), v9 = v8, swift_bridgeObjectRelease(), (v9 & 1) == 0))
    {
      sub_238492A78();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_2384926A0();
      sub_2384926A0();
      sub_2384926A0();
      sub_238435C24((uint64_t *)&unk_25690AA80);
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_238493540;
      sub_2384926A0();
      sub_2384926A0();
      *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v10 + 32) = 0x6D33333B305B1BLL;
      *(_QWORD *)(v10 + 40) = 0xE700000000000000;
      sub_238492D0C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  v11 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
  swift_bridgeObjectRetain();
  v12 = v7;
  v13 = (void *)sub_238492610();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, sel_initWithIdentifier_value_, v13, v12);

  *a4 = v14;
}

uint64_t sub_2384778A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  return swift_task_switch();
}

uint64_t sub_2384778BC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v1 = (void *)v0[10];
  v2 = v0[11];
  v3 = (void *)v0[8];
  sub_238492A78();
  sub_2384926A0();
  v4 = objc_msgSend(v1, sel_bundleIdentifier);
  sub_23849261C();

  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  v5 = objc_msgSend(v3, sel_identifier);
  sub_23849261C();

  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  v0[12] = sub_238435C24((uint64_t *)&unk_25690AA80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_238493540;
  sub_2384926A0();
  sub_2384926A0();
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 32) = 0x6D303B305B1BLL;
  *(_QWORD *)(v6 + 40) = 0xE600000000000000;
  sub_238492D0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[2] = 0;
  v7 = (_QWORD *)swift_task_alloc();
  v0[13] = v7;
  v7[2] = v0 + 2;
  v7[3] = v1;
  v7[4] = v3;
  v7[5] = v2;
  v8 = (_QWORD *)swift_task_alloc();
  v0[14] = v8;
  sub_238455238(0, (unint64_t *)&unk_25690B7E0);
  *v8 = v0;
  v8[1] = sub_238477B48;
  return sub_238492C88();
}

uint64_t sub_238477B48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_238477BB4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(void **)(v0 + 24);
  *(_QWORD *)(v0 + 128) = v1;
  v2 = v1;
  v3 = objc_msgSend(v2, sel_output);
  v4 = objc_msgSend(v3, sel_isDeferred);

  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 80);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_238493540;
    *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v6 + 32) = 0xD000000000000035;
    *(_QWORD *)(v6 + 40) = 0x8000000238499930;
    sub_238492D0C();
    swift_bridgeObjectRelease();
    v7 = swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v7;
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = v2;
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v8;
    *(_QWORD *)(v0 + 152) = sub_238435C24(&qword_25690B330);
    *v8 = v0;
    v8[1] = sub_238477EC8;
    return sub_238492C88();
  }
  else
  {

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 128));
  }
}

uint64_t sub_238477D40()
{
  uint64_t v0;
  void *v1;
  id *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  void *v12;
  _QWORD *v13;
  id v14;

  v1 = *(void **)(v0 + 120);
  swift_task_dealloc();
  *(_QWORD *)(v0 + 32) = v1;
  v2 = (id *)(v0 + 40);
  v3 = v1;
  sub_238435C24(&qword_25690A630);
  sub_238455238(0, &qword_25690B2E0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_8;
  v4 = *v2;
  v5 = objc_msgSend(*v2, sel_domain);
  v6 = sub_23849261C();
  v8 = v7;

  if (v6 == sub_23849261C() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  v11 = sub_238492C7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
LABEL_10:
    v12 = *(void **)(v0 + 72);

    sub_23847B85C();
    swift_allocError();
    *v13 = v12;
    v13[1] = v4;
    v14 = v12;
    swift_willThrow();

    goto LABEL_11;
  }

LABEL_8:
LABEL_11:

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238477EC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();

  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_238477F44()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 48);
  sub_238492A78();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = v1;
  sub_23849264C();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_238493540;
  sub_2384926A0();
  sub_2384926A0();
  *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 + 32) = 0x6D32333B305B1BLL;
  *(_QWORD *)(v3 + 40) = 0xE700000000000000;
  sub_238492D0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 128));
}

uint64_t sub_2384780A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2384780E0(uint64_t a1, id *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  objc_class *v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  objc_super v21;

  v10 = sub_238435C24(&qword_25690B340);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v14(v13, a1, v10);
  v15 = (objc_class *)type metadata accessor for PerformActionExecutorDelegate();
  v16 = (char *)objc_allocWithZone(v15);
  v14(&v16[OBJC_IVAR____TtC23ConditionalEngineClient29PerformActionExecutorDelegate_continuation], (uint64_t)v13, v10);
  v21.receiver = v16;
  v21.super_class = v15;
  v17 = objc_msgSendSuper2(&v21, sel_init);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v18 = *a2;
  *a2 = v17;

  if (*a2)
  {
    v19 = *a2;
    v20 = objc_msgSend(a3, sel_executorForAction_options_delegate_, a4, a5, v19);
    objc_msgSend(v20, sel_perform);

  }
  else
  {
    sub_238492B20();
    __break(1u);
  }
}

void sub_238478288(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[6];

  v6 = sub_238435C24(&qword_25690B338);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = objc_msgSend(a3, sel_output);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_23847B90C;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_238478450;
  aBlock[3] = &unk_250A276E8;
  v12 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_fetchActionOutputValue_completionHandler_, v9, v12);
  _Block_release(v12);

}

uint64_t sub_2384783E0(void *a1, id a2)
{
  id v2;
  id v4;

  if (a2)
  {
    v2 = a2;
    sub_238435C24(&qword_25690B338);
    return sub_2384927B4();
  }
  else
  {
    v4 = a1;
    sub_238435C24(&qword_25690B338);
    return sub_2384927C0();
  }
}

void sub_238478450(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_2384784C4(SEL *a1)
{
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  SEL *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  char v52[32];

  v6 = a1;
  v7 = MEMORY[0x23B834E88](32, 0xE100000000000000, a1);
  v49 = (uint64_t)v6 + 2;
  if (__OFADD__(v6, 2))
  {
    __break(1u);
    goto LABEL_34;
  }
  v9 = v7;
  v10 = v8;
  v11 = objc_msgSend(v1, sel_value);
  sub_238492988();
  swift_unknownObjectRelease();
  sub_238435C24(&qword_25690B2B8);
  if (swift_dynamicCast())
  {
    v3 = v51;
    v50 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_23848B7AC(0, 0, 0);
    v2 = v50;
    if (!(v51 >> 62))
    {
      v12 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v12)
      {
LABEL_5:
        if (v12 >= 1)
        {
          v13 = 0;
          do
          {
            if ((v3 & 0xC000000000000001) != 0)
              v14 = (id)MEMORY[0x23B835200](v13, v3);
            else
              v14 = *(id *)(v3 + 8 * v13 + 32);
            v15 = v14;
            sub_238492C64();
            sub_2384926A0();
            swift_bridgeObjectRelease();
            sub_2384926A0();
            sub_2384784C4(v49);
            sub_2384926A0();

            swift_bridgeObjectRelease();
            v17 = v2[2];
            v16 = v2[3];
            if (v17 >= v16 >> 1)
              sub_23848B7AC(v16 > 1, v17 + 1, 1);
            ++v13;
            v2[2] = v17 + 1;
            v18 = &v2[2 * v17];
            v18[4] = 91;
            v18[5] = 0xE100000000000000;
          }
          while (v12 != v13);
          goto LABEL_35;
        }
        __break(1u);
LABEL_38:
        swift_bridgeObjectRetain();
        v37 = sub_238492B2C();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
LABEL_35:
      swift_bridgeObjectRelease_n();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_238435C24(&qword_256909DD8);
      sub_238438FF4();
      v34 = sub_2384925F8();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
LABEL_34:
    swift_bridgeObjectRetain_n();
    v12 = sub_238492B2C();
    swift_bridgeObjectRelease();
    if (v12)
      goto LABEL_5;
    goto LABEL_35;
  }
  sub_238455238(0, &qword_25690B2C0);
  if (!swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    v31 = objc_msgSend(v1, sel_displayRepresentation);
    if (v31)
    {
      v32 = v31;
      v33 = sub_238478BB4();
    }
    else
    {
      v32 = objc_msgSend(v1, sel_description);
      v33 = sub_23849261C();
    }
    v34 = v33;

    goto LABEL_36;
  }
  v2 = (_QWORD *)v51;
  v19 = objc_msgSend(v1, sel_valueType);
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {

    swift_bridgeObjectRelease();
    v34 = 0x726F727265;
    goto LABEL_36;
  }
  v5 = v9;
  v20 = v10;

  sub_238435C24(&qword_25690B290);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_238493540;
  v21 = objc_msgSend((id)v51, sel_identifier);
  v22 = objc_msgSend(v21, sel_description);
  v23 = sub_23849261C();
  v25 = v24;

  *(_QWORD *)(v3 + 32) = v23;
  *(_QWORD *)(v3 + 40) = v25;
  v26 = objc_msgSend(v1, sel_displayRepresentation);
  if (v26)
  {
    v27 = v26;
    sub_238478BB4();

    v4 = v20;
    swift_bridgeObjectRetain();
    sub_2384926A0();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    v29 = *(_QWORD *)(v3 + 16);
    v28 = *(_QWORD *)(v3 + 24);
    if (v29 >= v28 >> 1)
      v3 = (uint64_t)sub_238474E98((_QWORD *)(v28 > 1), v29 + 1, 1, (_QWORD *)v3);
    *(_QWORD *)(v3 + 16) = v29 + 1;
    v30 = v3 + 16 * v29;
    *(_QWORD *)(v30 + 32) = v5;
    *(_QWORD *)(v30 + 40) = v20;
  }
  else
  {
    v4 = v20;
  }
  v6 = (SEL *)&unk_250A29000;
  v35 = objc_msgSend((id)v51, sel_properties);
  sub_238455238(0, &qword_25690B2C8);
  v36 = sub_23849276C();

  if (v36 >> 62)
    goto LABEL_38;
  v37 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_28:
  swift_bridgeObjectRelease();
  if (v37)
  {
    sub_2384926A0();
    v38 = v4;
    v40 = *(_QWORD *)(v3 + 16);
    v39 = *(_QWORD *)(v3 + 24);
    if (v40 >= v39 >> 1)
      v3 = (uint64_t)sub_238474E98((_QWORD *)(v39 > 1), v40 + 1, 1, (_QWORD *)v3);
    *(_QWORD *)(v3 + 16) = v40 + 1;
    v41 = v3 + 16 * v40;
    *(_QWORD *)(v41 + 32) = v5;
    *(_QWORD *)(v41 + 40) = v38;
    v42 = MEMORY[0x23B834E88](32, 0xE100000000000000, v49);
    v44 = v43;
    v45 = objc_msgSend(v2, v6[308]);
    v46 = sub_23849276C();

    swift_bridgeObjectRetain();
    v47 = (_QWORD *)swift_bridgeObjectRetain();
    sub_23847A8D4(v47, v46, v42, v44, v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_238435C24(&qword_256909DD8);
  sub_238438FF4();
  v34 = sub_2384925F8();
  swift_bridgeObjectRelease();

LABEL_36:
  sub_238436B3C((uint64_t)v52);
  return v34;
}

uint64_t sub_238478BB4()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v8;

  v1 = objc_msgSend(v0, sel_title);
  v2 = objc_msgSend(v1, sel_localizedStringForLocaleIdentifier_, 0);

  v3 = sub_23849261C();
  v8 = v3;
  v4 = objc_msgSend(v0, sel_subtitle);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_localizedStringForLocaleIdentifier_, 0);

    sub_23849261C();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    sub_2384926A0();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    return v8;
  }
  return v3;
}

uint64_t sub_238478CE4(_QWORD **a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t result;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  v7 = *a2;
  swift_bridgeObjectRetain();
  sub_2384926A0();
  v8 = objc_msgSend(v7, sel_identifier);
  sub_23849261C();

  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  v9 = objc_msgSend(v7, sel_value);
  if (v9)
  {
    v10 = v9;
    result = a5 + 2;
    if (__OFADD__(a5, 2))
    {
      __break(1u);
      return result;
    }
    sub_2384784C4(result);

  }
  sub_2384926A0();
  swift_bridgeObjectRelease();
  v12 = *a1;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_238474E98(0, v12[2] + 1, 1, v12);
    v12 = (_QWORD *)result;
  }
  v14 = v12[2];
  v13 = v12[3];
  if (v14 >= v13 >> 1)
  {
    result = (uint64_t)sub_238474E98((_QWORD *)(v13 > 1), v14 + 1, 1, v12);
    v12 = (_QWORD *)result;
  }
  v12[2] = v14 + 1;
  v15 = &v12[2 * v14];
  v15[4] = a3;
  v15[5] = a4;
  *a1 = v12;
  return result;
}

uint64_t sub_238478E78()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch();
}

uint64_t sub_238478E90()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  id v17;
  void *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  int64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];

  v1 = objc_msgSend(*(id *)(v0 + 128), sel_dialog);
  *(_QWORD *)(v0 + 136) = v1;
  if (v1)
  {
    v2 = v1;
    *(_QWORD *)(v0 + 56) = v0 + 120;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_238479458;
    *(_QWORD *)(v0 + 112) = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 88) = 0x40000000;
    *(_QWORD *)(v0 + 96) = sub_238485304;
    *(_QWORD *)(v0 + 104) = &unk_250A276A8;
    objc_msgSend(v2, sel_getResultWithCompletionHandler_, v0 + 80);
    return swift_continuation_await();
  }
  else
  {
    v4 = objc_msgSend(*(id *)(v0 + 128), sel_viewSnippet);

    v5 = MEMORY[0x24BEE4AF8];
    if (v4)
    {
      v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_238474E98(0, v6[2] + 1, 1, v6);
      v8 = v6[2];
      v7 = v6[3];
      if (v8 >= v7 >> 1)
        v6 = sub_238474E98((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
      v6[2] = v8 + 1;
      v9 = &v6[2 * v8];
      v9[4] = 0xD000000000000010;
      v9[5] = 0x8000000238499620;
    }
    else
    {
      v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v10 = objc_msgSend(*(id *)(v0 + 128), sel_value);
    if (v10)
    {
      v11 = v10;
      sub_238492A78();
      swift_bridgeObjectRelease();
      strcpy((char *)v39, "Result Value: ");
      HIBYTE(v39[1]) = -18;
      sub_2384784C4(0);
      sub_2384926A0();
      swift_bridgeObjectRelease();
      v12 = v39[0];
      v13 = v39[1];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_238474E98(0, v6[2] + 1, 1, v6);
      v15 = v6[2];
      v14 = v6[3];
      if (v15 >= v14 >> 1)
        v6 = sub_238474E98((_QWORD *)(v14 > 1), v15 + 1, 1, v6);
      v6[2] = v15 + 1;
      v16 = &v6[2 * v15];
      v16[4] = v12;
      v16[5] = v13;

    }
    v17 = objc_msgSend(*(id *)(v0 + 128), sel_confirmationActionName);
    if (v17)
    {
      v18 = v17;
      sub_238492A78();
      swift_bridgeObjectRelease();
      v39[0] = 0xD000000000000013;
      v39[1] = 0x8000000238499600;
      sub_23847A0A0();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_238474E98(0, v6[2] + 1, 1, v6);
      v20 = v6[2];
      v19 = v6[3];
      if (v20 >= v19 >> 1)
        v6 = sub_238474E98((_QWORD *)(v19 > 1), v20 + 1, 1, v6);
      v6[2] = v20 + 1;
      v21 = &v6[2 * v20];
      v21[4] = 0xD000000000000013;
      v21[5] = 0x8000000238499600;

    }
    v22 = objc_msgSend(*(id *)(v0 + 128), sel_undoContext);
    if (v22)
    {
      v23 = v22;
      sub_238492A78();
      swift_bridgeObjectRelease();
      strcpy((char *)v39, "Undo Context: ");
      HIBYTE(v39[1]) = -18;
      v24 = objc_msgSend(v23, sel_description);
      sub_23849261C();

      sub_2384926A0();
      swift_bridgeObjectRelease();
      v25 = v39[0];
      v26 = v39[1];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_238474E98(0, v6[2] + 1, 1, v6);
      v28 = v6[2];
      v27 = v6[3];
      if (v28 >= v27 >> 1)
        v6 = sub_238474E98((_QWORD *)(v27 > 1), v28 + 1, 1, v6);
      v6[2] = v28 + 1;
      v29 = &v6[2 * v28];
      v29[4] = v25;
      v29[5] = v26;

    }
    v30 = v6[2];
    if (v30)
    {
      swift_bridgeObjectRetain();
      sub_23848B7AC(0, v30, 0);
      v31 = v5;
      v32 = v6 + 5;
      do
      {
        v39[0] = 2108704;
        v39[1] = 0xE300000000000000;
        swift_bridgeObjectRetain();
        sub_2384926A0();
        swift_bridgeObjectRelease();
        v34 = *(_QWORD *)(v5 + 16);
        v33 = *(_QWORD *)(v5 + 24);
        if (v34 >= v33 >> 1)
          sub_23848B7AC(v33 > 1, v34 + 1, 1);
        *(_QWORD *)(v5 + 16) = v34 + 1;
        v35 = v5 + 16 * v34;
        *(_QWORD *)(v35 + 32) = 2108704;
        *(_QWORD *)(v35 + 40) = 0xE300000000000000;
        v32 += 2;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      v31 = MEMORY[0x24BEE4AF8];
    }
    *(_QWORD *)(v0 + 80) = v31;
    sub_238435C24(&qword_256909DD8);
    sub_238438FF4();
    v36 = sub_2384925F8();
    v38 = v37;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v36, v38);
  }
}

uint64_t sub_238479458()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2384794B8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  _QWORD *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  id v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  int64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  _QWORD v45[2];

  strcpy((char *)v45, "Dialog: ");
  BYTE1(v45[1]) = 0;
  WORD1(v45[1]) = 0;
  HIDWORD(v45[1]) = -402653184;
  v1 = objc_msgSend(*(id *)(v0 + 120), sel_print);
  v2 = sub_23849276C();

  if (*(_QWORD *)(v2 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    v3 = v45[0];
    v4 = v45[1];
    v5 = MEMORY[0x24BEE4AF8];
    v6 = sub_238474E98(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v8 = v6[2];
    v7 = v6[3];
    if (v8 >= v7 >> 1)
      v6 = sub_238474E98((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
    v9 = *(void **)(v0 + 136);
    v6[2] = v8 + 1;
    v10 = &v6[2 * v8];
    v10[4] = v3;
    v10[5] = v4;

    swift_unknownObjectRelease();
    v11 = objc_msgSend(*(id *)(v0 + 128), sel_viewSnippet);

    if (v11)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_238474E98(0, v6[2] + 1, 1, v6);
      v13 = v6[2];
      v12 = v6[3];
      if (v13 >= v12 >> 1)
        v6 = sub_238474E98((_QWORD *)(v12 > 1), v13 + 1, 1, v6);
      v6[2] = v13 + 1;
      v14 = &v6[2 * v13];
      v14[4] = 0xD000000000000010;
      v14[5] = 0x8000000238499620;
    }
    v15 = objc_msgSend(*(id *)(v0 + 128), sel_value);
    if (v15)
    {
      v16 = v15;
      sub_238492A78();
      swift_bridgeObjectRelease();
      strcpy((char *)v45, "Result Value: ");
      HIBYTE(v45[1]) = -18;
      sub_2384784C4(0);
      sub_2384926A0();
      swift_bridgeObjectRelease();
      v17 = v45[0];
      v18 = v45[1];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_238474E98(0, v6[2] + 1, 1, v6);
      v20 = v6[2];
      v19 = v6[3];
      if (v20 >= v19 >> 1)
        v6 = sub_238474E98((_QWORD *)(v19 > 1), v20 + 1, 1, v6);
      v6[2] = v20 + 1;
      v21 = &v6[2 * v20];
      v21[4] = v17;
      v21[5] = v18;

    }
    v22 = objc_msgSend(*(id *)(v0 + 128), sel_confirmationActionName);
    if (v22)
    {
      v23 = v22;
      sub_238492A78();
      swift_bridgeObjectRelease();
      v45[0] = 0xD000000000000013;
      v45[1] = 0x8000000238499600;
      sub_23847A0A0();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_238474E98(0, v6[2] + 1, 1, v6);
      v25 = v6[2];
      v24 = v6[3];
      if (v25 >= v24 >> 1)
        v6 = sub_238474E98((_QWORD *)(v24 > 1), v25 + 1, 1, v6);
      v6[2] = v25 + 1;
      v26 = &v6[2 * v25];
      v26[4] = 0xD000000000000013;
      v26[5] = 0x8000000238499600;

    }
    v27 = objc_msgSend(*(id *)(v0 + 128), sel_undoContext);
    if (v27)
    {
      v28 = v27;
      sub_238492A78();
      swift_bridgeObjectRelease();
      strcpy((char *)v45, "Undo Context: ");
      HIBYTE(v45[1]) = -18;
      v29 = objc_msgSend(v28, sel_description);
      sub_23849261C();

      sub_2384926A0();
      swift_bridgeObjectRelease();
      v30 = v45[0];
      v31 = v45[1];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_238474E98(0, v6[2] + 1, 1, v6);
      v33 = v6[2];
      v32 = v6[3];
      if (v33 >= v32 >> 1)
        v6 = sub_238474E98((_QWORD *)(v32 > 1), v33 + 1, 1, v6);
      v6[2] = v33 + 1;
      v34 = &v6[2 * v33];
      v34[4] = v30;
      v34[5] = v31;

    }
    v35 = v6[2];
    if (v35)
    {
      v44 = v0;
      swift_bridgeObjectRetain();
      sub_23848B7AC(0, v35, 0);
      v36 = v6 + 5;
      do
      {
        v45[0] = 2108704;
        v45[1] = 0xE300000000000000;
        swift_bridgeObjectRetain();
        sub_2384926A0();
        swift_bridgeObjectRelease();
        v38 = *(_QWORD *)(v5 + 16);
        v37 = *(_QWORD *)(v5 + 24);
        if (v38 >= v37 >> 1)
          sub_23848B7AC(v37 > 1, v38 + 1, 1);
        *(_QWORD *)(v5 + 16) = v38 + 1;
        v39 = v5 + 16 * v38;
        *(_QWORD *)(v39 + 32) = 2108704;
        *(_QWORD *)(v39 + 40) = 0xE300000000000000;
        v36 += 2;
        --v35;
      }
      while (v35);
      swift_bridgeObjectRelease_n();
      v0 = v44;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    *(_QWORD *)(v0 + 80) = v5;
    sub_238435C24(&qword_256909DD8);
    sub_238438FF4();
    v40 = sub_2384925F8();
    v42 = v41;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v40, v42);
  }
  else
  {
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_238479AA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  void *v9;
  void *v10;
  _QWORD *v11;
  _QWORD *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  id v24;
  void *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  int64_t v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  _QWORD v47[2];

  v1 = *(_QWORD *)(v0 + 144);
  swift_willThrow();
  v47[0] = 0;
  v47[1] = 0xE000000000000000;
  sub_238492A78();
  *(_QWORD *)(v0 + 80) = 0;
  *(_QWORD *)(v0 + 88) = v47[1];
  sub_2384926A0();
  *(_QWORD *)(v0 + 120) = v1;
  sub_238435C24(&qword_25690A630);
  sub_238492B08();
  sub_2384926A0();
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = MEMORY[0x24BEE4AF8];
  v5 = sub_238474E98(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v7 = v5[2];
  v6 = v5[3];
  v8 = v5;
  if (v7 >= v6 >> 1)
    v8 = sub_238474E98((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
  v9 = *(void **)(v0 + 136);
  v10 = *(void **)(v0 + 144);
  v8[2] = v7 + 1;
  v11 = &v8[2 * v7];
  v12 = v8;
  v11[4] = v2;
  v11[5] = v3;

  v13 = objc_msgSend(*(id *)(v0 + 128), sel_viewSnippet);
  if (v13)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_238474E98(0, v12[2] + 1, 1, v12);
    v15 = v12[2];
    v14 = v12[3];
    if (v15 >= v14 >> 1)
      v12 = sub_238474E98((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
    v12[2] = v15 + 1;
    v16 = &v12[2 * v15];
    v16[4] = 0xD000000000000010;
    v16[5] = 0x8000000238499620;
  }
  v17 = objc_msgSend(*(id *)(v0 + 128), sel_value);
  if (v17)
  {
    v18 = v17;
    sub_238492A78();
    swift_bridgeObjectRelease();
    strcpy((char *)v47, "Result Value: ");
    HIBYTE(v47[1]) = -18;
    sub_2384784C4(0);
    sub_2384926A0();
    swift_bridgeObjectRelease();
    v19 = v47[0];
    v20 = v47[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_238474E98(0, v12[2] + 1, 1, v12);
    v22 = v12[2];
    v21 = v12[3];
    if (v22 >= v21 >> 1)
      v12 = sub_238474E98((_QWORD *)(v21 > 1), v22 + 1, 1, v12);
    v12[2] = v22 + 1;
    v23 = &v12[2 * v22];
    v23[4] = v19;
    v23[5] = v20;

  }
  v24 = objc_msgSend(*(id *)(v0 + 128), sel_confirmationActionName);
  if (v24)
  {
    v25 = v24;
    sub_238492A78();
    swift_bridgeObjectRelease();
    v47[0] = 0xD000000000000013;
    v47[1] = 0x8000000238499600;
    sub_23847A0A0();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_238474E98(0, v12[2] + 1, 1, v12);
    v27 = v12[2];
    v26 = v12[3];
    if (v27 >= v26 >> 1)
      v12 = sub_238474E98((_QWORD *)(v26 > 1), v27 + 1, 1, v12);
    v12[2] = v27 + 1;
    v28 = &v12[2 * v27];
    v28[4] = 0xD000000000000013;
    v28[5] = 0x8000000238499600;

  }
  v29 = objc_msgSend(*(id *)(v0 + 128), sel_undoContext);
  if (v29)
  {
    v30 = v29;
    sub_238492A78();
    swift_bridgeObjectRelease();
    strcpy((char *)v47, "Undo Context: ");
    HIBYTE(v47[1]) = -18;
    v31 = objc_msgSend(v30, sel_description);
    sub_23849261C();

    sub_2384926A0();
    swift_bridgeObjectRelease();
    v32 = v47[0];
    v33 = v47[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_238474E98(0, v12[2] + 1, 1, v12);
    v35 = v12[2];
    v34 = v12[3];
    if (v35 >= v34 >> 1)
      v12 = sub_238474E98((_QWORD *)(v34 > 1), v35 + 1, 1, v12);
    v12[2] = v35 + 1;
    v36 = &v12[2 * v35];
    v36[4] = v32;
    v36[5] = v33;

  }
  v37 = v12[2];
  if (v37)
  {
    v46 = v0;
    swift_bridgeObjectRetain();
    sub_23848B7AC(0, v37, 0);
    v38 = v12 + 5;
    do
    {
      v47[0] = 2108704;
      v47[1] = 0xE300000000000000;
      swift_bridgeObjectRetain();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      v40 = *(_QWORD *)(v4 + 16);
      v39 = *(_QWORD *)(v4 + 24);
      if (v40 >= v39 >> 1)
        sub_23848B7AC(v39 > 1, v40 + 1, 1);
      *(_QWORD *)(v4 + 16) = v40 + 1;
      v41 = v4 + 16 * v40;
      *(_QWORD *)(v41 + 32) = 2108704;
      *(_QWORD *)(v41 + 40) = 0xE300000000000000;
      v38 += 2;
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease_n();
    v0 = v46;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v0 + 80) = v4;
  sub_238435C24(&qword_256909DD8);
  sub_238438FF4();
  v42 = sub_2384925F8();
  v44 = v43;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v42, v44);
}

uint64_t sub_23847A0A0()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v10;

  v1 = v0;
  if (objc_msgSend(v0, sel_type) != (id)2)
    goto LABEL_6;
  v2 = objc_msgSend(v0, sel_acceptLabel);
  if (!v2)
    goto LABEL_6;
  v3 = v2;
  v4 = objc_msgSend(v0, sel_denyLabel);
  if (!v4)
  {

LABEL_6:
    objc_msgSend(v0, sel_destructive, 0, 0xE000000000000000);
    sub_2384926A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v0, sel_type);
    v8 = (id)LNConfirmationActionNameEnumAsString();
    sub_23849261C();

    sub_2384926A0();
    goto LABEL_7;
  }
  v5 = v4;
  v6 = objc_msgSend(v3, sel_localizedStringForLocaleIdentifier_, 0);
  sub_23849261C();

  v7 = objc_msgSend(v5, sel_localizedStringForLocaleIdentifier_, 0);
  sub_23849261C();

  v10 = 0;
  objc_msgSend(v1, sel_destructive);
  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  sub_2384926A0();

LABEL_7:
  swift_bridgeObjectRelease();
  return v10;
}

id sub_23847A2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, void *a7)
{
  void *v7;
  void *v8;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;

  v8 = v7;
  v13 = (void *)sub_238492610();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v14 = (void *)sub_238492610();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  sub_238455238(0, &qword_25690B320);
  v15 = (void *)sub_238492760();
  swift_bridgeObjectRelease();
  sub_238455238(0, &qword_25690B2C8);
  v16 = (void *)sub_238492760();
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(v8, sel_initWithIdentifier_mangledTypeName_openAppWhenRun_outputFlags_outputType_systemProtocols_parameters_, v13, v14, a5 & 1, a6, a7, v15, v16);

  return v17;
}

void sub_23847A410(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  id v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  void *v19;
  id v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  if (!a1[2])
  {
    swift_bridgeObjectRelease();
    return;
  }
  v43 = a1[2];
  v7 = a1[4];
  v6 = a1[5];
  v8 = (void *)a1[6];
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)*a3;
  swift_bridgeObjectRetain();
  v10 = v8;
  v12 = sub_23844291C(v7, v6);
  v13 = v9[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
    goto LABEL_23;
  v16 = v11;
  if (v9[3] >= v15)
  {
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_2384491D8();
      if ((v16 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v21 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    v22 = (uint64_t *)(v21[6] + 16 * v12);
    *v22 = v7;
    v22[1] = v6;
    *(_QWORD *)(v21[7] + 8 * v12) = v10;
    v23 = v21[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v21[2] = v25;
    v26 = v43 - 1;
    if (v43 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v27 = (void **)(a1 + 9);
    while (1)
    {
      v29 = (uint64_t)*(v27 - 2);
      v28 = (uint64_t)*(v27 - 1);
      v30 = *v27;
      v31 = (_QWORD *)*a3;
      swift_bridgeObjectRetain();
      v10 = v30;
      v32 = sub_23844291C(v29, v28);
      v34 = v31[2];
      v35 = (v33 & 1) == 0;
      v24 = __OFADD__(v34, v35);
      v36 = v34 + v35;
      if (v24)
        break;
      v37 = v33;
      if (v31[3] < v36)
      {
        sub_238448134(v36, 1);
        v32 = sub_23844291C(v29, v28);
        if ((v37 & 1) != (v38 & 1))
          goto LABEL_25;
      }
      if ((v37 & 1) != 0)
        goto LABEL_10;
      v39 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      v40 = (uint64_t *)(v39[6] + 16 * v32);
      *v40 = v29;
      v40[1] = v28;
      *(_QWORD *)(v39[7] + 8 * v32) = v10;
      v41 = v39[2];
      v24 = __OFADD__(v41, 1);
      v42 = v41 + 1;
      if (v24)
        goto LABEL_24;
      v39[2] = v42;
      v27 += 3;
      if (!--v26)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_238448134(v15, a2 & 1);
  v17 = sub_23844291C(v7, v6);
  if ((v16 & 1) == (v18 & 1))
  {
    v12 = v17;
    if ((v16 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v19 = (void *)swift_allocError();
    swift_willThrow();
    v20 = v19;
    sub_238435C24(&qword_25690A630);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_238435C24(&qword_25690A528);
  sub_238492CAC();
  __break(1u);
LABEL_26:
  sub_238492A78();
  sub_2384926A0();
  sub_238435C24(&qword_25690A528);
  sub_238492B08();
  sub_2384926A0();
  sub_238492B20();
  __break(1u);
}

uint64_t sub_23847A7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  void **i;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14[3];
  uint64_t v15;
  uint64_t v16;

  v4 = v3;
  v6 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_238492AE4();
    for (i = (void **)(a1 + 48); ; i += 3)
    {
      v11 = (uint64_t)*(i - 1);
      v12 = *i;
      v14[0] = (uint64_t)*(i - 2);
      v14[1] = v11;
      v14[2] = (uint64_t)v12;
      swift_bridgeObjectRetain();
      v13 = v12;
      sub_23847765C(v14, a2, a3, &v15);

      swift_bridgeObjectRelease();
      if (v4)
        break;
      sub_238492ACC();
      sub_238492AF0();
      sub_238492AFC();
      sub_238492AD8();
      if (!--v6)
        return v16;
    }
    return swift_release();
  }
  return result;
}

_QWORD *sub_23847A8D4(_QWORD *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v9;
  uint64_t v10;
  uint64_t i;
  id v12;
  uint64_t v13;
  void *v16;
  _QWORD *v17;

  v17 = a1;
  v9 = a1;
  if (a2 >> 62)
    goto LABEL_13;
  v10 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; v10 = sub_238492B2C())
  {
    for (i = 4; ; ++i)
    {
      v12 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x23B835200](i - 4, a2) : *(id *)(a2 + 8 * i);
      v9 = v12;
      v13 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v16 = v12;
      sub_238478CE4(&v17, &v16, a3, a4, a5);
      if (v5)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v9;
      }

      if (v13 == v10)
      {
        swift_bridgeObjectRelease();
        return v17;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v9;
}

void *sub_23847AA18(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;

  if (a1 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_238492B2C())
  {
    v6 = 4;
    while (1)
    {
      v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x23B835200](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v10 = objc_msgSend(v7, sel_name);
      if (v10)
      {
        v11 = v10;
        v12 = sub_23849261C();
        v14 = v13;

        if (v12 == a2 && v14 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v8;
        }
        v16 = sub_238492C7C();
        swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
          goto LABEL_18;
      }

      ++v6;
      if (v9 == v5)
        goto LABEL_21;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23847ABA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  *(_QWORD *)(v8 + 120) = a7;
  *(_QWORD *)(v8 + 128) = a8;
  *(_QWORD *)(v8 + 104) = a4;
  *(_QWORD *)(v8 + 112) = a6;
  *(_BYTE *)(v8 + 200) = a5;
  *(_QWORD *)(v8 + 88) = a2;
  *(_QWORD *)(v8 + 96) = a3;
  *(_QWORD *)(v8 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_23847ABD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 112);
  v2 = v1[3];
  v3 = v1[4];
  sub_238438F90(v1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  if (v5)
  {
    v6 = v4;
    v7 = v5;
  }
  else
  {
    v7 = *((_QWORD *)&xmmword_256911CE0 + 1);
    if (!*((_QWORD *)&xmmword_256911CE0 + 1))
      return sub_238492B20();
    v6 = xmmword_256911CE0;
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(v0 + 136) = v6;
  *(_QWORD *)(v0 + 144) = v7;
  v8 = *(_QWORD **)(v0 + 112);
  sub_238492A78();
  sub_2384926A0();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  sub_2384926A0();
  sub_2384926A0();
  v10 = v1[3];
  v9 = v1[4];
  sub_238438F90(v8, v10);
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v10, v9);
  v11 = *(_QWORD *)(v0 + 96);
  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  *(_QWORD *)(v0 + 152) = sub_238435C24((uint64_t *)&unk_25690AA80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_238493540;
  v13 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v12 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v12 + 32) = 1831951131;
  *(_QWORD *)(v12 + 40) = 0xE400000000000000;
  swift_bridgeObjectRetain();
  sub_238492D0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v11 + 16);
  if (v14)
  {
    v15 = (void **)(swift_bridgeObjectRetain() + 48);
    do
    {
      v16 = *v15;
      v15 += 3;
      swift_bridgeObjectRetain_n();
      v17 = v16;
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_2384926A0();
      v18 = v17;
      v19 = objc_msgSend(v18, sel_description);
      sub_23849261C();

      sub_2384926A0();
      swift_bridgeObjectRelease();

      v20 = swift_allocObject();
      v21 = sub_238442B54(v20, 1);
      v22[3] = v13;
      *v22 = 8237;
      v22[1] = 0xE200000000000000;
      nullsub_1(v21);
      swift_bridgeObjectRetain();
      sub_238492D0C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))((char *)&dword_25690B2D8 + dword_25690B2D8);
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v23;
  *v23 = v0;
  v23[1] = sub_23847AFFC;
  return v25(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_BYTE *)(v0 + 200), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
}

uint64_t sub_23847AFFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 176) = a1;
  return swift_task_switch();
}

uint64_t sub_23847B070()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend(*(id *)(v0 + 176), sel_output);
  *(_QWORD *)(v0 + 184) = v1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v2;
  *v2 = v0;
  v2[1] = sub_23847B0EC;
  v2[16] = v1;
  return swift_task_switch();
}

uint64_t sub_23847B0EC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v3 = (_QWORD *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  v3[4] = a2;
  v4 = (void *)v3[23];
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_23847B14C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v1 = *(void **)(v0 + 176);
  sub_238492A78();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  sub_2384926A0();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  v2 = swift_allocObject();
  v3 = sub_238442B54(v2, 1);
  v5 = v4;
  sub_2384926A0();
  sub_2384926A0();
  v5[3] = MEMORY[0x24BEE0D00];
  *v5 = 0x6D32333B305B1BLL;
  v5[1] = 0xE700000000000000;
  nullsub_1(v3);
  sub_238492D0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23847B2F4()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;

  v1 = *(void **)(v0 + 168);
  *(_QWORD *)(v0 + 56) = v1;
  v2 = v1;
  sub_238435C24(&qword_25690A630);
  if (!swift_dynamicCast())
  {
LABEL_4:
    v5 = *(void **)(v0 + 168);

    *(_QWORD *)(v0 + 64) = v5;
    v6 = v5;
    sub_238455238(0, &qword_25690B2E0);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
LABEL_19:

      goto LABEL_20;
    }
    v7 = *(void **)(v0 + 72);
    v8 = objc_msgSend(v7, sel_domain);
    v9 = sub_23849261C();
    v11 = v10;

    if (v9 == sub_23849261C() && v11 == v12)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v14 = sub_238492C7C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
LABEL_18:
        swift_bridgeObjectRelease();

        goto LABEL_19;
      }
    }
    if (objc_msgSend(v7, sel_code) == (id)9004)
    {

      sub_238492A78();
      sub_2384926A0();
      sub_2384926A0();
      sub_2384926A0();
      sub_2384926A0();
      sub_2384926A0();
      sub_2384926A0();
      sub_2384926A0();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_2384926A0();
      v23 = swift_allocObject();
      v24 = sub_238442B54(v23, 1);
      v26 = v25;
      sub_2384926A0();
      sub_2384926A0();
      v26[3] = MEMORY[0x24BEE0D00];
      *v26 = 0x6D31333B305B1BLL;
      v26[1] = 0xE700000000000000;
      nullsub_1(v24);
      sub_238492D0C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_willThrow();

LABEL_20:
      v22 = *(uint64_t (**)(void))(v0 + 8);
      return v22();
    }
    goto LABEL_18;
  }
  v4 = *(void **)(v0 + 40);
  v3 = *(void **)(v0 + 48);
  if ((unint64_t)v3 < 3)
  {
    sub_23847B798(*(void **)(v0 + 40), *(void **)(v0 + 48));
    goto LABEL_4;
  }

  swift_bridgeObjectRelease();
  if (!v4)
  {
LABEL_23:
    swift_willThrow();

    goto LABEL_20;
  }
  v15 = *(_QWORD *)(v0 + 96);
  v16 = v4;
  sub_238476120(v15, v16);
  if (!v17)
  {

    goto LABEL_23;
  }
  v18 = swift_allocObject();
  v19 = sub_238442B54(v18, 1);
  v21 = v20;
  sub_2384926A0();
  sub_2384926A0();
  v21[3] = MEMORY[0x24BEE0D00];
  *v21 = 0x6D33333B305B1BLL;
  v21[1] = 0xE700000000000000;
  nullsub_1(v19);
  sub_238492D0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

void sub_23847B798(void *a1, void *a2)
{
  if ((unint64_t)a2 >= 3)
  {

  }
}

uint64_t sub_23847B7C8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_238435C24((uint64_t *)&unk_25690B7F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23847B808(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_238435C24((uint64_t *)&unk_25690B7F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23847B850(uint64_t a1)
{
  uint64_t v1;

  sub_2384780E0(a1, *(id **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

unint64_t sub_23847B85C()
{
  unint64_t result;

  result = qword_25690B328;
  if (!qword_25690B328)
  {
    result = MEMORY[0x23B835A40](&unk_238496160, &type metadata for ActionExecutor.ExecutionError);
    atomic_store(result, (unint64_t *)&qword_25690B328);
  }
  return result;
}

void sub_23847B8A0(uint64_t a1)
{
  uint64_t v1;

  sub_238478288(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_23847B8A8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_238435C24(&qword_25690B338);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23847B90C(void *a1, void *a2)
{
  sub_238435C24(&qword_25690B338);
  return sub_2384783E0(a1, a2);
}

uint64_t sub_23847B95C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23847B96C()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for ActionExecutor()
{
  return &type metadata for ActionExecutor;
}

void destroy for ActionExecutor.ExecutionError(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 8);
  if ((unint64_t)v1 >= 0xFFFFFFFF)
  {
    v2 = *(id *)a1;

  }
}

uint64_t _s23ConditionalEngineClient14ActionExecutorO14ExecutionErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)(a2 + 8);
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v4 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v5 = v4;
    v6 = v3;
  }
  return a1;
}

uint64_t assignWithCopy for ActionExecutor.ExecutionError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v11 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v12 = *(void **)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v12;
      v13 = v11;
      v14 = v12;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  v5 = *(void **)a1;
  if (v4 < 0xFFFFFFFF)
  {

    goto LABEL_7;
  }
  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = v6;

  v8 = *(void **)(a2 + 8);
  v9 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v10 = v8;

  return a1;
}

uint64_t assignWithTake for ActionExecutor.ExecutionError(uint64_t a1, uint64_t a2)
{
  void *v4;
  unint64_t v5;
  void *v6;
  void *v7;

  v4 = *(void **)(a1 + 8);
  if ((unint64_t)v4 < 0xFFFFFFFF)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 < 0xFFFFFFFF)
  {
    v7 = *(void **)a1;

LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionExecutor.ExecutionError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ActionExecutor.ExecutionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionExecutor.ExecutionError()
{
  return &type metadata for ActionExecutor.ExecutionError;
}

void destroy for ActionExecutor.Parameter(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *_s23ConditionalEngineClient14ActionExecutorO9ParameterVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for ActionExecutor.Parameter(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  return a1;
}

__n128 initializeWithTake for ActionExecutor.Parameter(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ActionExecutor.Parameter(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for ActionExecutor.Parameter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionExecutor.Parameter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionExecutor.Parameter()
{
  return &type metadata for ActionExecutor.Parameter;
}

uint64_t InferenceRun.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InferenceRun.result.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

double InferenceRun.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t InferenceRun.response.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InferenceRun.promptTemplate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InferenceRun.groupName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InferenceRun.timestamp.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InferenceRun.description.getter()
{
  sub_238492A78();
  sub_2384926A0();
  swift_bridgeObjectRetain();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  sub_2384927FC();
  sub_2384926A0();
  swift_bridgeObjectRetain();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  swift_bridgeObjectRetain();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  swift_bridgeObjectRetain();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  swift_bridgeObjectRetain();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t InferenceRun.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  sub_238492694();
  swift_bridgeObjectRelease();
  sub_238492D30();
  sub_238492D3C();
  swift_bridgeObjectRetain();
  sub_238492694();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_238492694();
  swift_bridgeObjectRelease();
  sub_238492D30();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_238492694();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_238492694();
  return swift_bridgeObjectRelease();
}

uint64_t InferenceRun.hashValue.getter()
{
  sub_238492D18();
  InferenceRun.hash(into:)();
  return sub_238492D48();
}

uint64_t sub_23847C300@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23847C30C()
{
  sub_238492D18();
  InferenceRun.hash(into:)();
  return sub_238492D48();
}

uint64_t sub_23847C388()
{
  sub_238492D18();
  InferenceRun.hash(into:)();
  return sub_238492D48();
}

uint64_t _s23ConditionalEngineClient12InferenceRunV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(double *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v29 = *(_QWORD *)(a1 + 72);
  v10 = *(_QWORD *)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 88);
  v11 = *(unsigned __int8 *)(a2 + 16);
  v12 = *(double *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 32);
  v14 = *(_QWORD *)(a2 + 40);
  v16 = *(_QWORD *)(a2 + 48);
  v15 = *(_QWORD *)(a2 + 56);
  v28 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    result = 0;
    if (v2 != v11)
      return result;
    v26 = *(_QWORD *)(a2 + 64);
    v27 = v8;
    v22 = *(_QWORD *)(a2 + 88);
    v23 = *(_QWORD *)(a2 + 80);
    v24 = v9;
    v25 = v10;
  }
  else
  {
    v26 = *(_QWORD *)(a2 + 64);
    v27 = *(_QWORD *)(a1 + 64);
    v22 = *(_QWORD *)(a2 + 88);
    v23 = *(_QWORD *)(a2 + 80);
    v24 = *(_QWORD *)(a1 + 88);
    v25 = *(_QWORD *)(a1 + 80);
    v18 = sub_238492C7C();
    result = 0;
    if ((v18 & 1) == 0 || v2 != v11)
      return result;
  }
  if (v3 == v12)
  {
    if (v5 == v13 && v4 == v14 || (v19 = sub_238492C7C(), result = 0, (v19 & 1) != 0))
    {
      if (v6 == v16 && v7 == v15 || (v20 = sub_238492C7C(), result = 0, (v20 & 1) != 0))
      {
        if (v29)
        {
          if (v28)
          {
            if (v27 != v26 || v29 != v28)
            {
              v21 = sub_238492C7C();
              result = 0;
              if ((v21 & 1) == 0)
                return result;
            }
LABEL_22:
            if (v25 == v23 && v24 == v22)
              return 1;
            else
              return sub_238492C7C();
          }
        }
        else if (!v28)
        {
          goto LABEL_22;
        }
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_23847C5F8()
{
  return MEMORY[0x24BEE0D10];
}

unint64_t sub_23847C608()
{
  unint64_t result;

  result = qword_25690B348;
  if (!qword_25690B348)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for InferenceRun, &type metadata for InferenceRun);
    atomic_store(result, (unint64_t *)&qword_25690B348);
  }
  return result;
}

uint64_t destroy for InferenceRun()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InferenceRun(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InferenceRun(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InferenceRun(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for InferenceRun()
{
  return &type metadata for InferenceRun;
}

ValueMetadata *type metadata accessor for CommandError()
{
  return &type metadata for CommandError;
}

unint64_t sub_23847C89C()
{
  unint64_t result;

  result = qword_25690B350;
  if (!qword_25690B350)
  {
    result = MEMORY[0x23B835A40](&unk_238496360, &type metadata for CommandError);
    atomic_store(result, (unint64_t *)&qword_25690B350);
  }
  return result;
}

uint64_t ScheduledQuery.init(id:query:shortcutsTriggerIdentifier:parameters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v9;

  *a8 = a1;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  v9 = (uint64_t)a8 + *(int *)(type metadata accessor for ScheduledQuery() + 28);
  return sub_238465E94(a7, v9);
}

uint64_t type metadata accessor for ScheduledQuery()
{
  uint64_t result;

  result = qword_25690B3E0;
  if (!qword_25690B3E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ScheduledQuery.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScheduledQuery.query.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScheduledQuery.shortcutsTriggerIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScheduledQuery.parameters.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ScheduledQuery();
  return sub_238440118(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(_QWORD))type metadata accessor for TriggerParameters);
}

uint64_t ScheduledQuery.parameters.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ScheduledQuery() + 28);
  return sub_23847CA4C(a1, v3);
}

uint64_t sub_23847CA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TriggerParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ScheduledQuery.parameters.modify())(_QWORD)
{
  type metadata accessor for ScheduledQuery();
  return nullsub_1;
}

uint64_t ScheduledQuery.description.getter()
{
  sub_238492A78();
  sub_2384926A0();
  swift_bridgeObjectRetain();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  swift_bridgeObjectRetain();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  swift_bridgeObjectRetain();
  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  type metadata accessor for ScheduledQuery();
  type metadata accessor for TriggerParameters();
  sub_238492B08();
  sub_2384926A0();
  return 0;
}

uint64_t sub_23847CC54(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23847CC8C + 4 * byte_2384963A0[a1]))(0xD00000000000001ALL, 0x8000000238499AE0);
}

uint64_t sub_23847CC8C()
{
  return 25705;
}

uint64_t sub_23847CC98()
{
  return 0x6574656D61726170;
}

uint64_t sub_23847CCB4()
{
  return 0x7972657571;
}

uint64_t sub_23847CCC8()
{
  unsigned __int8 *v0;

  return sub_23847CC54(*v0);
}

uint64_t sub_23847CCD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23847E04C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23847CCF4()
{
  sub_23847D644();
  return sub_238492D78();
}

uint64_t sub_23847CD1C()
{
  sub_23847D644();
  return sub_238492D84();
}

uint64_t ScheduledQuery.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = sub_238435C24(&qword_25690B358);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_238438F90(a1, a1[3]);
  sub_23847D644();
  sub_238492D60();
  v8[15] = 0;
  sub_238492C28();
  if (!v1)
  {
    v8[14] = 1;
    sub_238492C28();
    v8[13] = 2;
    sub_238492C28();
    type metadata accessor for ScheduledQuery();
    v8[12] = 3;
    type metadata accessor for TriggerParameters();
    sub_23843E8CC(&qword_25690B368, (uint64_t (*)(uint64_t))type metadata accessor for TriggerParameters, (uint64_t)&protocol conformance descriptor for TriggerParameters);
    sub_238492C4C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ScheduledQuery.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  char v25;
  char v26;
  char v27;

  v19 = a2;
  v21 = type metadata accessor for TriggerParameters();
  MEMORY[0x24BDAC7A8](v21);
  v20 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_238435C24(&qword_25690B370);
  v4 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ScheduledQuery();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_238438F90(a1, a1[3]);
  sub_23847D644();
  v10 = (uint64_t)v23;
  sub_238492D54();
  if (v10)
    return sub_238436B3C((uint64_t)a1);
  v18 = v7;
  v23 = a1;
  v11 = (uint64_t)v20;
  v12 = v4;
  v27 = 0;
  v13 = v22;
  *v9 = sub_238492BC8();
  v9[1] = v14;
  v26 = 1;
  v9[2] = sub_238492BC8();
  v9[3] = v15;
  v25 = 2;
  v9[4] = sub_238492BC8();
  v9[5] = v16;
  v24 = 3;
  sub_23843E8CC(&qword_25690B378, (uint64_t (*)(uint64_t))type metadata accessor for TriggerParameters, (uint64_t)&protocol conformance descriptor for TriggerParameters);
  sub_238492BEC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v13);
  sub_238465E94(v11, (uint64_t)v9 + *(int *)(v18 + 28));
  sub_238440118((uint64_t)v9, v19, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  sub_238436B3C((uint64_t)v23);
  return sub_23843F2AC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
}

uint64_t sub_23847D1E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ScheduledQuery.init(from:)(a1, a2);
}

uint64_t sub_23847D1F8(_QWORD *a1)
{
  return ScheduledQuery.encode(to:)(a1);
}

BOOL sub_23847D214(uint64_t a1, _QWORD *a2)
{
  return (_s23ConditionalEngineClient14ScheduledQueryV1loiySbAC_ACtFZ_0(a2, a1) & 1) == 0;
}

BOOL sub_23847D23C(_QWORD *a1, uint64_t a2)
{
  return (_s23ConditionalEngineClient14ScheduledQueryV1loiySbAC_ACtFZ_0(a1, a2) & 1) == 0;
}

uint64_t sub_23847D258(uint64_t a1, _QWORD *a2)
{
  return _s23ConditionalEngineClient14ScheduledQueryV1loiySbAC_ACtFZ_0(a2, a1);
}

uint64_t _s23ConditionalEngineClient14ScheduledQueryV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  BOOL v5;
  uint64_t v6;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_238492C7C() & 1) == 0)
    return 0;
  v5 = a1[2] == a2[2] && a1[3] == a2[3];
  if (!v5 && (sub_238492C7C() & 1) == 0 || (a1[4] != a2[4] || a1[5] != a2[5]) && (sub_238492C7C() & 1) == 0)
    return 0;
  v6 = *(int *)(type metadata accessor for ScheduledQuery() + 28);
  return _s23ConditionalEngineClient17TriggerParametersO2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v6, (uint64_t)a2 + v6);
}

uint64_t _s23ConditionalEngineClient14ScheduledQueryV1loiySbAC_ACtFZ_0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  char HistoryC5EventV1loiySbAE_AEtFZ_0;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;

  v4 = sub_238491F98();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v36 = (char *)&v33 - v8;
  v9 = type metadata accessor for ScheduledQuery();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_238435C24(&qword_25690AD00);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v35 = (uint64_t)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v33 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v33 - v21;
  v34 = a1;
  TriggerParameters.upcomingDate.getter((uint64_t)&v33 - v21);
  v37 = v5;
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  LODWORD(a1) = v23(v22, 1, v4);
  sub_23847E1D4((uint64_t)v22);
  v38 = (_QWORD *)a2;
  sub_238440118(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  if ((_DWORD)a1 == 1)
  {
    TriggerParameters.upcomingDate.getter((uint64_t)v20);
    sub_23843F2AC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
    v24 = v23(v20, 1, v4);
    sub_23847E1D4((uint64_t)v20);
    if (v24 == 1)
    {
      if (*v34 != *v38 || v34[1] != v38[1])
      {
        HistoryC5EventV1loiySbAE_AEtFZ_0 = sub_238492C7C();
        return HistoryC5EventV1loiySbAE_AEtFZ_0 & 1;
      }
LABEL_9:
      HistoryC5EventV1loiySbAE_AEtFZ_0 = 0;
      return HistoryC5EventV1loiySbAE_AEtFZ_0 & 1;
    }
  }
  else
  {
    sub_23843F2AC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledQuery);
  }
  TriggerParameters.upcomingDate.getter((uint64_t)v17);
  if (v23(v17, 1, v4) == 1)
  {
    sub_23847E1D4((uint64_t)v17);
    goto LABEL_9;
  }
  v27 = v36;
  v26 = v37;
  v28 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v28(v36, v17, v4);
  v29 = v35;
  TriggerParameters.upcomingDate.getter(v35);
  if (v23((char *)v29, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v4);
    sub_23847E1D4(v29);
    HistoryC5EventV1loiySbAE_AEtFZ_0 = 1;
  }
  else
  {
    v30 = v33;
    v28(v33, (char *)v29, v4);
    HistoryC5EventV1loiySbAE_AEtFZ_0 = _s23ConditionalEngineClient21ScheduledQueryHistoryC5EventV1loiySbAE_AEtFZ_0();
    v31 = *(void (**)(char *, uint64_t))(v26 + 8);
    v31(v30, v4);
    v31(v27, v4);
  }
  return HistoryC5EventV1loiySbAE_AEtFZ_0 & 1;
}

unint64_t sub_23847D644()
{
  unint64_t result;

  result = qword_25690B360;
  if (!qword_25690B360)
  {
    result = MEMORY[0x23B835A40](&unk_2384965A4, &type metadata for ScheduledQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690B360);
  }
  return result;
}

uint64_t sub_23847D688()
{
  return sub_23843E8CC(&qword_25690B380, (uint64_t (*)(uint64_t))type metadata accessor for ScheduledQuery, (uint64_t)&protocol conformance descriptor for ScheduledQuery);
}

uint64_t *initializeBufferWithCopyOfBuffer for ScheduledQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    v8 = *(int *)(a3 + 28);
    v9 = (char *)a2 + v8;
    v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    type metadata accessor for TriggerParameters();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v14 = *((_QWORD *)v9 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v9;
      *((_QWORD *)v10 + 1) = v14;
      *((_OWORD *)v10 + 1) = *((_OWORD *)v9 + 1);
      *((_QWORD *)v10 + 4) = *((_QWORD *)v9 + 4);
      *((_WORD *)v10 + 20) = *((_WORD *)v9 + 20);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
        v12 = sub_238491E24();
      else
        v12 = sub_238491F98();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v9, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for ScheduledQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  type metadata accessor for TriggerParameters();
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
    return swift_bridgeObjectRelease();
  if ((_DWORD)result == 1)
  {
    v6 = sub_238491E24();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v6 = sub_238491F98();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
}

_QWORD *initializeWithCopy for ScheduledQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a2 + v7;
  v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  type metadata accessor for TriggerParameters();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v12 = *((_QWORD *)v8 + 1);
    *(_QWORD *)v9 = *(_QWORD *)v8;
    *((_QWORD *)v9 + 1) = v12;
    *((_OWORD *)v9 + 1) = *((_OWORD *)v8 + 1);
    *((_QWORD *)v9 + 4) = *((_QWORD *)v8 + 4);
    *((_WORD *)v9 + 20) = *((_WORD *)v8 + 20);
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
      v11 = sub_238491E24();
    else
      v11 = sub_238491F98();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v8, v11);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for ScheduledQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 28);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_23843F2AC((uint64_t)a1 + v6, (uint64_t (*)(_QWORD))type metadata accessor for TriggerParameters);
    type metadata accessor for TriggerParameters();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
      *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
      *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
      *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
      v7[40] = v8[40];
      v7[41] = v8[41];
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
        v10 = sub_238491E24();
      else
        v10 = sub_238491F98();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for ScheduledQuery(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for TriggerParameters();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v11 = sub_238491E24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v6, v7, v11);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v10 = sub_238491F98();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v6, v7, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithTake for ScheduledQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v9 = *(int *)(a3 + 28);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    sub_23843F2AC((uint64_t)a1 + v9, (uint64_t (*)(_QWORD))type metadata accessor for TriggerParameters);
    v12 = type metadata accessor for TriggerParameters();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v15 = sub_238491E24();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v10, v11, v15);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = sub_238491F98();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v10, v11, v14);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23847DD34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for TriggerParameters();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ScheduledQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23847DDBC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for TriggerParameters();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23847DE30()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TriggerParameters();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ScheduledQuery.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23847DEF4 + 4 * byte_2384963A9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23847DF28 + 4 * byte_2384963A4[v4]))();
}

uint64_t sub_23847DF28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23847DF30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23847DF38);
  return result;
}

uint64_t sub_23847DF44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23847DF4CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23847DF50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23847DF58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQuery.CodingKeys()
{
  return &type metadata for ScheduledQuery.CodingKeys;
}

unint64_t sub_23847DF78()
{
  unint64_t result;

  result = qword_25690B420;
  if (!qword_25690B420)
  {
    result = MEMORY[0x23B835A40](&unk_23849657C, &type metadata for ScheduledQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690B420);
  }
  return result;
}

unint64_t sub_23847DFC0()
{
  unint64_t result;

  result = qword_25690B428;
  if (!qword_25690B428)
  {
    result = MEMORY[0x23B835A40](&unk_2384964EC, &type metadata for ScheduledQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690B428);
  }
  return result;
}

unint64_t sub_23847E008()
{
  unint64_t result;

  result = qword_25690B430;
  if (!qword_25690B430)
  {
    result = MEMORY[0x23B835A40](&unk_238496514, &type metadata for ScheduledQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690B430);
  }
  return result;
}

uint64_t sub_23847E04C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7972657571 && a2 == 0xE500000000000000 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000238499AE0 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_238492C7C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23847E1D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_238435C24(&qword_25690AD00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t ConditionalEngineError.errorUserInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;

  v0 = sub_238491E30();
  if (!v1)
    return sub_23847E2BC(MEMORY[0x24BEE4AF8]);
  v2 = v0;
  v3 = v1;
  sub_238435C24(&qword_256909BB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_238493540;
  *(_QWORD *)(inited + 32) = sub_23849261C();
  *(_QWORD *)(inited + 40) = v5;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v3;
  return sub_23847E2BC(inited);
}

unint64_t sub_23847E2BC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_238435C24(&qword_25690B438);
  v2 = sub_238492B50();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23847E7A4(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_238442128(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_2384456FC(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23847E3E4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_238435C24((uint64_t *)&unk_25690A620);
  v2 = (_QWORD *)sub_238492B50();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_238442128(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23847E504(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  uint64_t *v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_238435C24(&qword_25690A5C0);
  v2 = (_QWORD *)sub_238492B50();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v8 = *v4;
    v7 = v4[1];
    v9 = v4[2];
    v10 = v4[3];
    v11 = v4[4];
    v12 = v4[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_238442128(v5, v6);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v15 = (uint64_t *)(v2[6] + 16 * result);
    *v15 = v5;
    v15[1] = v6;
    v16 = (_QWORD *)(v2[7] + 48 * result);
    *v16 = v8;
    v16[1] = v7;
    v16[2] = v9;
    v16[3] = v10;
    v16[4] = v11;
    v16[5] = v12;
    v17 = v2[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v2[2] = v19;
    v4 += 8;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23847E654(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  uint64_t *v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_238435C24(&qword_25690A5C8);
  v2 = (_QWORD *)sub_238492B50();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v8 = *v4;
    v7 = v4[1];
    v9 = v4[2];
    v10 = v4[3];
    v11 = v4[4];
    v12 = v4[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_238442128(v5, v6);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v15 = (uint64_t *)(v2[6] + 16 * result);
    *v15 = v5;
    v15[1] = v6;
    v16 = (_QWORD *)(v2[7] + 48 * result);
    *v16 = v8;
    v16[1] = v7;
    v16[2] = v9;
    v16[3] = v10;
    v16[4] = v11;
    v16[5] = v12;
    v17 = v2[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v2[2] = v19;
    v4 += 8;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_23847E7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_238435C24(&qword_25690B440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t destroy for ActionExecutionOptions()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActionExecutionOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActionExecutionOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ActionExecutionOptions(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ActionExecutionOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionExecutionOptions(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionExecutionOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionExecutionOptions()
{
  return &type metadata for ActionExecutionOptions;
}

uint64_t sub_23847EA94()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_23847EA9C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_23847EAA4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_23847EAB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23847EADC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6369746E616D6553;
  else
    v3 = 4804432;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6369746E616D6553;
  else
    v5 = 4804432;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_238492C7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_23847EB74(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x676E697661654CLL;
  else
    v3 = 0x676E697669727241;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x676E697661654CLL;
  else
    v5 = 0x676E697669727241;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_238492C7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_23847EC14(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aUserPrUserDaCu_0[8 * a1] == *(_QWORD *)&aUserPrUserDaCu_0[8 * a2]
    && *(_QWORD *)&aUserPrUserDaCu_0[8 * a1 + 24] == *(_QWORD *)&aUserPrUserDaCu_0[8 * a2 + 24])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_238492C7C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_23847EC98()
{
  sub_238492D18();
  sub_238492694();
  swift_bridgeObjectRelease();
  return sub_238492D48();
}

uint64_t sub_23847ED00()
{
  sub_238492D18();
  sub_238492694();
  swift_bridgeObjectRelease();
  return sub_238492D48();
}

uint64_t sub_23847ED78()
{
  sub_238492D18();
  sub_238492694();
  swift_bridgeObjectRelease();
  return sub_238492D48();
}

uint64_t sub_23847EDF8()
{
  sub_238492694();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23847EE48()
{
  sub_238492694();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23847EEA0()
{
  sub_238492694();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23847EEE0()
{
  sub_238492D18();
  sub_238492694();
  swift_bridgeObjectRelease();
  return sub_238492D48();
}

uint64_t sub_23847EF44()
{
  sub_238492D18();
  sub_238492694();
  swift_bridgeObjectRelease();
  return sub_238492D48();
}

uint64_t sub_23847EFC0()
{
  sub_238492D18();
  sub_238492694();
  swift_bridgeObjectRelease();
  return sub_238492D48();
}

uint64_t sub_23847F034@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v9 = *a1;
  v10 = objc_allocWithZone(MEMORY[0x24BDD1500]);
  swift_bridgeObjectRetain();
  v11 = objc_msgSend(v10, sel_init);
  objc_msgSend(v11, sel_setDateStyle_, 2);
  objc_msgSend(v11, sel_setTimeStyle_, 1);
  v12 = (void *)sub_238491F38();
  v13 = objc_msgSend(v11, sel_stringFromDate_, v12);

  v14 = sub_23849261C();
  v16 = v15;

  v17 = sub_238491F98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  swift_bridgeObjectRetain();
  *(_QWORD *)a5 = v14;
  *(_QWORD *)(a5 + 8) = v16;
  *(_BYTE *)(a5 + 16) = v9;
  *(_QWORD *)(a5 + 24) = 0;
  *(_QWORD *)(a5 + 32) = 0;
  *(_QWORD *)(a5 + 40) = a3;
  *(_QWORD *)(a5 + 48) = a4;
  *(_BYTE *)(a5 + 56) = 2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ConditionalEvent.date.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ConditionalEvent.date.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ConditionalEvent.date.modify())()
{
  return nullsub_1;
}

void ConditionalEvent.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *ConditionalEvent.type.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*ConditionalEvent.type.modify())()
{
  return nullsub_1;
}

uint64_t ConditionalEvent.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ConditionalEvent.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*ConditionalEvent.identifier.modify())()
{
  return nullsub_1;
}

uint64_t ConditionalEvent.category.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ConditionalEvent.category.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*ConditionalEvent.category.modify())()
{
  return nullsub_1;
}

void ConditionalEvent.motion.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 56);
}

_BYTE *ConditionalEvent.motion.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = *result;
  return result;
}

uint64_t (*ConditionalEvent.motion.modify())()
{
  return nullsub_1;
}

uint64_t ConditionalEvent.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  objc_msgSend(v2, sel_setDateStyle_, 2);
  objc_msgSend(v2, sel_setTimeStyle_, 1);
  v3 = (void *)sub_238492610();
  v4 = objc_msgSend(v2, sel_dateFromString_, v3);

  if (v4)
  {
    sub_238491F74();

    v5 = sub_238491F98();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {

    v5 = sub_238491F98();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

Swift::String __swiftcall ConditionalEvent.json()()
{
  uint64_t v0;
  Swift::String result;

  v0 = sub_238491D58();
  MEMORY[0x24BDAC7A8](v0);
  sub_238491D88();
  swift_allocObject();
  sub_238491D7C();
  sub_238435C24(&qword_25690A5D8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_2384938A0;
  sub_238491D40();
  sub_238491D4C();
  sub_23843E8CC((unint64_t *)&qword_25690A5E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8], MEMORY[0x24BDCB2C8]);
  sub_238435C24(&qword_25690A5E8);
  sub_238449CF8();
  sub_238492994();
  sub_238491D64();
  sub_238449DA8();
  sub_238491D70();
  __asm { BR              X10 }
  return result;
}

uint64_t ConditionalEvent.dayString.getter()
{
  return sub_23847FA24(4, 0);
}

uint64_t ConditionalEvent.timeString.getter()
{
  return sub_23847FA24(0, 2);
}

uint64_t sub_23847FA24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  uint64_t v17;
  char *v19;
  uint64_t v20;

  v4 = sub_238435C24(&qword_25690AD00);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_238491F98();
  v7 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v19 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  objc_msgSend(v9, sel_setDateStyle_, a1);
  objc_msgSend(v9, sel_setTimeStyle_, a2);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  objc_msgSend(v10, sel_setDateStyle_, 2);
  objc_msgSend(v10, sel_setTimeStyle_, 1);
  v11 = (void *)sub_238492610();
  v12 = objc_msgSend(v10, sel_dateFromString_, v11);

  if (!v12)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v6, 1, 1, v20);
    goto LABEL_5;
  }
  sub_238491F74();

  v13 = v20;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v6, 0, 1, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v13) == 1)
  {
LABEL_5:

    sub_23843B198((uint64_t)v6, &qword_25690AD00);
    return 0;
  }
  v14 = v19;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v6, v13);
  v15 = (void *)sub_238491F38();
  v16 = objc_msgSend(v9, sel_stringFromDate_, v15);

  v17 = sub_23849261C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v13);
  return v17;
}

uint64_t ConditionalEvent.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(unsigned __int8 *)(v0 + 56);
  swift_bridgeObjectRetain();
  sub_238492694();
  swift_bridgeObjectRelease();
  sub_238492694();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_238492D30();
    swift_bridgeObjectRetain();
    sub_238492694();
    swift_bridgeObjectRelease();
    if (v2)
      goto LABEL_3;
LABEL_6:
    sub_238492D30();
    if (v3 == 2)
      return sub_238492D30();
    goto LABEL_7;
  }
  sub_238492D30();
  if (!v2)
    goto LABEL_6;
LABEL_3:
  sub_238492D30();
  swift_bridgeObjectRetain();
  sub_238492694();
  swift_bridgeObjectRelease();
  if (v3 == 2)
    return sub_238492D30();
LABEL_7:
  sub_238492D30();
  sub_238492694();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23847FE44(char a1)
{
  return *(_QWORD *)&aDate_2[8 * a1];
}

uint64_t sub_23847FE64()
{
  char *v0;

  return sub_23847FE44(*v0);
}

uint64_t sub_23847FE6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_238481518(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23847FE90()
{
  sub_238480DE0();
  return sub_238492D78();
}

uint64_t sub_23847FEB8()
{
  sub_238480DE0();
  return sub_238492D84();
}

uint64_t ConditionalEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = sub_238435C24(&qword_25690B448);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(unsigned __int8 *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v15 = *(_QWORD *)(v1 + 32);
  v16 = v7;
  v8 = *(_QWORD *)(v1 + 40);
  v13 = *(_QWORD *)(v1 + 48);
  v14 = v8;
  v12 = *(unsigned __int8 *)(v1 + 56);
  sub_238438F90(a1, a1[3]);
  sub_238480DE0();
  sub_238492D60();
  v25 = 0;
  v9 = v18;
  sub_238492C28();
  if (!v9)
  {
    v24 = v17;
    v23 = 1;
    sub_238480E24();
    sub_238492C4C();
    v22 = 2;
    sub_238492C10();
    v21 = 3;
    sub_238492C10();
    v20 = v12;
    v19 = 4;
    sub_238480E68();
    sub_238492C1C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ConditionalEvent.hashValue.getter()
{
  sub_238492D18();
  ConditionalEvent.hash(into:)();
  return sub_238492D48();
}

uint64_t ConditionalEvent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  int v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  unsigned __int8 v32;
  char v33;

  v5 = sub_238435C24(&qword_25690B468);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238438F90(a1, a1[3]);
  sub_238480DE0();
  sub_238492D54();
  if (v2)
  {
    sub_238436B3C((uint64_t)a1);
  }
  else
  {
    v33 = 0;
    v10 = sub_238492BC8();
    v12 = v11;
    v31 = 1;
    sub_238480EAC();
    swift_bridgeObjectRetain();
    sub_238492BEC();
    v26 = v10;
    v25 = v32;
    v30 = 2;
    v13 = sub_238492BA4();
    v15 = v14;
    v23 = v13;
    v24 = a2;
    v29 = 3;
    swift_bridgeObjectRetain();
    v16 = sub_238492BA4();
    v18 = v17;
    v22 = v16;
    v27 = 4;
    sub_238480EF0();
    swift_bridgeObjectRetain();
    sub_238492BBC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v19 = v28;
    v20 = v24;
    *v24 = v26;
    v20[1] = v12;
    *((_BYTE *)v20 + 16) = v25;
    v20[3] = v23;
    v20[4] = v15;
    v20[5] = v22;
    v20[6] = v18;
    *((_BYTE *)v20 + 56) = v19;
    sub_238436B3C((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23848044C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ConditionalEvent.init(from:)(a1, a2);
}

uint64_t sub_238480460(_QWORD *a1)
{
  return ConditionalEvent.encode(to:)(a1);
}

uint64_t sub_238480474()
{
  sub_238492D18();
  ConditionalEvent.hash(into:)();
  return sub_238492D48();
}

uint64_t sub_2384804E0()
{
  sub_238492D18();
  ConditionalEvent.hash(into:)();
  return sub_238492D48();
}

ConditionalEngineClient::EventType_optional __swiftcall EventType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (ConditionalEngineClient::EventType_optional)sub_238480694(v1);
}

uint64_t EventType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6369746E616D6553;
  else
    return 4804432;
}

uint64_t sub_23848058C(char *a1, char *a2)
{
  return sub_23847EADC(*a1, *a2);
}

uint64_t sub_238480598()
{
  return sub_23847ED00();
}

uint64_t sub_2384805A0()
{
  return sub_23847EDF8();
}

uint64_t sub_2384805A8()
{
  return sub_23847EFC0();
}

ConditionalEngineClient::EventType_optional sub_2384805B0(Swift::String *a1)
{
  return EventType.init(rawValue:)(*a1);
}

uint64_t sub_2384805BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = EventType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2384805E0()
{
  sub_238481738();
  return sub_238492748();
}

uint64_t sub_23848063C()
{
  sub_238481738();
  return sub_23849273C();
}

ConditionalEngineClient::Motion_optional __swiftcall Motion.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (ConditionalEngineClient::Motion_optional)sub_238480694(v1);
}

uint64_t sub_238480694@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_238492B80();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t Motion.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x676E697661654CLL;
  else
    return 0x676E697669727241;
}

uint64_t sub_23848072C(char *a1, char *a2)
{
  return sub_23847EB74(*a1, *a2);
}

uint64_t sub_238480738()
{
  return sub_23847ED78();
}

uint64_t sub_238480740()
{
  return sub_23847EE48();
}

uint64_t sub_238480748()
{
  return sub_23847EF44();
}

ConditionalEngineClient::Motion_optional sub_238480750(Swift::String *a1)
{
  return Motion.init(rawValue:)(*a1);
}

uint64_t sub_23848075C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Motion.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_238480780()
{
  sub_2384816F4();
  return sub_238492748();
}

uint64_t sub_2384807DC()
{
  sub_2384816F4();
  return sub_23849273C();
}

uint64_t sub_238480828(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  sub_238449DEC(a1, a2);
  sub_2384809CC(a1, a2);
  sub_2384420D4(a1, a2);
  v4 = sub_23849267C();
  swift_release();
  return v4;
}

uint64_t sub_23848089C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23849267C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

_QWORD *sub_2384808D4(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a1)
    v4 = a2 - a1;
  else
    v4 = 0;
  result = a3(&v6, a1, v4);
  if (!v3)
    return (_QWORD *)v6;
  return result;
}

uint64_t sub_238480920(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_238491DC4();
  v9 = result;
  if (result)
  {
    result = sub_238491DDC();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  v12 = sub_238491DD0();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  v14 = v9 + v13;
  if (v9)
    v15 = v14;
  else
    v15 = 0;
  result = (uint64_t)sub_2384808D4(v9, v15, a4);
  if (v4)
    return v16;
  return result;
}

void sub_2384809CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_238491F14();
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

_QWORD *sub_238480A48()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;

  if (BYTE6(v0))
  {
    sub_238435C24(&qword_256909BC0);
    v4 = (_QWORD *)swift_allocObject();
    v6 = j__malloc_size(v4);
    v4[2] = BYTE6(v0);
    v4[3] = 2 * v6 - 64;
    sub_238449DEC(v2, v0);
    v7 = sub_238491EE4();
    sub_2384420D4(v2, v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    if (v7 != BYTE6(v0))
    {
      __break(1u);
      JUMPOUT(0x238480B1CLL);
    }
  }
  return v4;
}

uint64_t sub_238480B34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_23849267C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t _s23ConditionalEngineClient0A5EventV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  int v25;
  int v26;
  uint64_t v27;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  v27 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v25 = *(unsigned __int8 *)(a2 + 56);
  v26 = *(unsigned __int8 *)(a1 + 56);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v11 = sub_238492C7C(), result = 0, (v11 & 1) != 0))
  {
    if (v2)
      v13 = 0x6369746E616D6553;
    else
      v13 = 4804432;
    if (v2)
      v14 = 0xE800000000000000;
    else
      v14 = 0xE300000000000000;
    if (v6)
      v15 = 0x6369746E616D6553;
    else
      v15 = 4804432;
    if (v6)
      v16 = 0xE800000000000000;
    else
      v16 = 0xE300000000000000;
    if (v13 == v15 && v14 == v16)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = sub_238492C7C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v17 & 1) == 0)
        return result;
    }
    if (v3)
    {
      if (!v7)
        return 0;
      if (v4 != v8 || v3 != v7)
      {
        v18 = sub_238492C7C();
        result = 0;
        if ((v18 & 1) == 0)
          return result;
      }
    }
    else if (v7)
    {
      return 0;
    }
    if (v5)
    {
      if (!v9)
        return 0;
      if (v27 != v10 || v5 != v9)
      {
        v19 = sub_238492C7C();
        result = 0;
        if ((v19 & 1) == 0)
          return result;
      }
    }
    else if (v9)
    {
      return 0;
    }
    if (v26 == 2)
    {
      if (v25 == 2)
        return 1;
    }
    else if (v25 != 2)
    {
      if ((v26 & 1) != 0)
        v20 = 0x676E697661654CLL;
      else
        v20 = 0x676E697669727241;
      if ((v26 & 1) != 0)
        v21 = 0xE700000000000000;
      else
        v21 = 0xE800000000000000;
      if ((v25 & 1) != 0)
        v22 = 0x676E697661654CLL;
      else
        v22 = 0x676E697669727241;
      if ((v25 & 1) != 0)
        v23 = 0xE700000000000000;
      else
        v23 = 0xE800000000000000;
      if (v20 == v22 && v21 == v23)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      v24 = sub_238492C7C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) != 0)
        return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_238480DE0()
{
  unint64_t result;

  result = qword_25690B450;
  if (!qword_25690B450)
  {
    result = MEMORY[0x23B835A40](&unk_238496A78, &type metadata for ConditionalEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690B450);
  }
  return result;
}

unint64_t sub_238480E24()
{
  unint64_t result;

  result = qword_25690B458;
  if (!qword_25690B458)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for EventType, &type metadata for EventType);
    atomic_store(result, (unint64_t *)&qword_25690B458);
  }
  return result;
}

unint64_t sub_238480E68()
{
  unint64_t result;

  result = qword_25690B460;
  if (!qword_25690B460)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for Motion, &type metadata for Motion);
    atomic_store(result, (unint64_t *)&qword_25690B460);
  }
  return result;
}

unint64_t sub_238480EAC()
{
  unint64_t result;

  result = qword_25690B470;
  if (!qword_25690B470)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for EventType, &type metadata for EventType);
    atomic_store(result, (unint64_t *)&qword_25690B470);
  }
  return result;
}

unint64_t sub_238480EF0()
{
  unint64_t result;

  result = qword_25690B478;
  if (!qword_25690B478)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for Motion, &type metadata for Motion);
    atomic_store(result, (unint64_t *)&qword_25690B478);
  }
  return result;
}

unint64_t sub_238480F38()
{
  unint64_t result;

  result = qword_25690B480;
  if (!qword_25690B480)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for ConditionalEvent, &type metadata for ConditionalEvent);
    atomic_store(result, (unint64_t *)&qword_25690B480);
  }
  return result;
}

uint64_t sub_238480F7C()
{
  return sub_23843E8CC(&qword_25690B488, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

unint64_t sub_238480FAC()
{
  unint64_t result;

  result = qword_25690B490;
  if (!qword_25690B490)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for EventType, &type metadata for EventType);
    atomic_store(result, (unint64_t *)&qword_25690B490);
  }
  return result;
}

unint64_t sub_238480FF4()
{
  unint64_t result;

  result = qword_25690B498;
  if (!qword_25690B498)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for Motion, &type metadata for Motion);
    atomic_store(result, (unint64_t *)&qword_25690B498);
  }
  return result;
}

uint64_t destroy for ConditionalEvent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ConditionalEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ConditionalEvent(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for ConditionalEvent(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ConditionalEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConditionalEvent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConditionalEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConditionalEvent()
{
  return &type metadata for ConditionalEvent;
}

ValueMetadata *type metadata accessor for EventType()
{
  return &type metadata for EventType;
}

uint64_t _s23ConditionalEngineClient9EventTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2384812F4 + 4 * byte_238496685[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_238481328 + 4 * byte_238496680[v4]))();
}

uint64_t sub_238481328(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_238481330(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x238481338);
  return result;
}

uint64_t sub_238481344(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23848134CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_238481350(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_238481358(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Motion()
{
  return &type metadata for Motion;
}

uint64_t storeEnumTagSinglePayload for ConditionalEvent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2384813C0 + 4 * byte_23849668F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2384813F4 + 4 * byte_23849668A[v4]))();
}

uint64_t sub_2384813F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2384813FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x238481404);
  return result;
}

uint64_t sub_238481410(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x238481418);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23848141C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_238481424(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConditionalEvent.CodingKeys()
{
  return &type metadata for ConditionalEvent.CodingKeys;
}

unint64_t sub_238481444()
{
  unint64_t result;

  result = qword_25690B4A0;
  if (!qword_25690B4A0)
  {
    result = MEMORY[0x23B835A40](&unk_238496A50, &type metadata for ConditionalEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690B4A0);
  }
  return result;
}

unint64_t sub_23848148C()
{
  unint64_t result;

  result = qword_25690B4A8;
  if (!qword_25690B4A8)
  {
    result = MEMORY[0x23B835A40](&unk_2384969C0, &type metadata for ConditionalEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690B4A8);
  }
  return result;
}

unint64_t sub_2384814D4()
{
  unint64_t result;

  result = qword_25690B4B0;
  if (!qword_25690B4B0)
  {
    result = MEMORY[0x23B835A40](&unk_2384969E8, &type metadata for ConditionalEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25690B4B0);
  }
  return result;
}

uint64_t sub_238481518(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v3 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x79726F6765746163 && a2 == 0xE800000000000000 || (sub_238492C7C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F69746F6DLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_238492C7C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_2384816F4()
{
  unint64_t result;

  result = qword_25690B4B8;
  if (!qword_25690B4B8)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for Motion, &type metadata for Motion);
    atomic_store(result, (unint64_t *)&qword_25690B4B8);
  }
  return result;
}

unint64_t sub_238481738()
{
  unint64_t result;

  result = qword_25690B4C0;
  if (!qword_25690B4C0)
  {
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for EventType, &type metadata for EventType);
    atomic_store(result, (unint64_t *)&qword_25690B4C0);
  }
  return result;
}

id sub_238481780()
{
  uint64_t v0;
  id result;

  type metadata accessor for ScheduledQueryStore();
  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  result = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  *(_QWORD *)(v0 + 112) = result;
  qword_256911D00 = v0;
  return result;
}

unint64_t sub_2384817DC(char a1)
{
  unint64_t result;

  result = 0xD000000000000014;
  if (a1)
  {
    if (a1 == 1)
      return 0xD000000000000017;
    else
      return 0xD000000000000031;
  }
  return result;
}

unint64_t sub_23848183C()
{
  char *v0;

  return sub_2384817DC(*v0);
}

unint64_t sub_238481844()
{
  char *v0;

  return sub_238457140(*v0);
}

uint64_t sub_23848184C()
{
  sub_238482B7C();
  return sub_238492CC4();
}

uint64_t sub_238481874()
{
  sub_238482B7C();
  return sub_238492CB8();
}

uint64_t sub_23848189C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v4 = sub_238435C24(&qword_25690AF58);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_23848240C();
  if (!v2)
  {
    v26 = v6;
    v27 = v1;
    if (result)
      v8 = result;
    else
      v8 = MEMORY[0x24BEE4AF8];
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      v10 = *(_QWORD *)(type metadata accessor for ScheduledQuery() - 8);
      v11 = *a1;
      v12 = a1[1];
      v13 = *(_QWORD *)(v10 + 72);
      v14 = (_QWORD *)(((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
                     + v8
                     + 8);
      while (1)
      {
        v15 = *(v14 - 1) == v11 && *v14 == v12;
        if (v15 || (sub_238492C7C() & 1) != 0)
          break;
        v14 = (_QWORD *)((char *)v14 + v13);
        if (!--v9)
          goto LABEL_13;
      }
      swift_bridgeObjectRelease();
      sub_238482938();
      swift_allocError();
      *v19 = 1;
      return swift_willThrow();
    }
    else
    {
LABEL_13:
      sub_238435C24(&qword_25690B2A8);
      v16 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScheduledQuery() - 8) + 80);
      v17 = (v16 + 32) & ~v16;
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_238493540;
      sub_238482538((uint64_t)a1, v18 + v17);
      v28 = v8;
      sub_23848BCEC(v18);
      sub_23848257C(v28);
      v20 = sub_2384927F0();
      v21 = (uint64_t)v26;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v26, 1, 1, v20);
      v23 = sub_238482A40(&qword_25690AF70, v22, (uint64_t (*)(uint64_t))type metadata accessor for ScheduledQueryStore, (uint64_t)&unk_238496BD0);
      v24 = (_QWORD *)swift_allocObject();
      v25 = v27;
      v24[2] = v27;
      v24[3] = v23;
      v24[4] = v25;
      swift_retain_n();
      sub_2384707E8(v21, (uint64_t)&unk_25690AF78, (uint64_t)v24);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_238481B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v7 = type metadata accessor for ScheduledQuery();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_238435C24(&qword_25690A078);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_23848240C();
  if (!v3)
  {
    if (!result)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
LABEL_17:
      sub_23844AF34((uint64_t)v13);
      sub_238482938();
      swift_allocError();
      *v20 = 0;
      return swift_willThrow();
    }
    v15 = *(_QWORD *)(result + 16);
    if (v15)
    {
      v21 = result;
      v22 = v7;
      v23 = a3;
      v16 = result + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      v17 = *(_QWORD *)(v8 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_238482538(v16, (uint64_t)v10);
        v18 = *v10 == a1 && v10[1] == a2;
        if (v18 || (sub_238492C7C() & 1) != 0)
          break;
        sub_23848297C((uint64_t)v10);
        v16 += v17;
        if (!--v15)
        {
          swift_bridgeObjectRelease();
          v19 = 1;
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRelease();
      sub_2384401A0((uint64_t)v10, (uint64_t)v13);
      v19 = 0;
LABEL_14:
      a3 = v23;
      v7 = v22;
    }
    else
    {
      v19 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, v19, 1, v7);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
      goto LABEL_17;
    return sub_2384401A0((uint64_t)v13, a3);
  }
  return result;
}

uint64_t sub_238481D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

void sub_238481D6C()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  void *v5;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + 112), sel_allObjects);
  sub_238435C24(&qword_25690B608);
  v2 = sub_23849276C();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  swift_bridgeObjectRetain();
  v3 = sub_238492B2C();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_10;
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v5 = (void *)MEMORY[0x23B835200](i, v2);
      }
      else
      {
        v5 = *(void **)(v2 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      objc_msgSend(v5, sel_scheduledQueryStoreDidUpdate);
      swift_unknownObjectRelease();
    }
    goto LABEL_10;
  }
  __break(1u);
}

id sub_238481E90()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  *(_QWORD *)&xmmword_25690B4C8 = result;
  *((_QWORD *)&xmmword_25690B4C8 + 1) = 0xD000000000000021;
  qword_25690B4D8 = 0x8000000238497260;
  unk_25690B4E0 = 0xD000000000000010;
  qword_25690B4E8 = 0x8000000238499B50;
  return result;
}

uint64_t sub_238481F00()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for ScheduledQueryStore()
{
  return objc_opt_self();
}

uint64_t sub_238481F44(uint64_t a1, uint64_t a2)
{
  return sub_238482A40(&qword_25690AF70, a2, (uint64_t (*)(uint64_t))type metadata accessor for ScheduledQueryStore, (uint64_t)&unk_238496BD0);
}

uint64_t sub_238481F70()
{
  if (qword_256909AA0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_238481FB0()
{
  type metadata accessor for ScheduledQueryStore();
  return sub_238492A30();
}

uint64_t sub_238481FD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  if (qword_256909AA8 != -1)
    swift_once();
  v14 = xmmword_25690B4C8;
  v15 = *(_OWORD *)&qword_25690B4D8;
  v16 = qword_25690B4E8;
  v2 = sub_2384350F8();
  if (!v0)
  {
    v4 = v3;
    if (v3 >> 60 == 15)
    {
      return 0;
    }
    else
    {
      v5 = (uint64_t)v2;
      if (qword_2569099F8 != -1)
        swift_once();
      v6 = sub_238492574();
      sub_238435CA4(v6, (uint64_t)qword_256909F48);
      v7 = sub_23849255C();
      v8 = sub_238492880();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_238433000, v7, v8, "[QueryStore] readQueriesFromCache success", v9, 2u);
        MEMORY[0x23B835AF4](v9, -1, -1);
      }

      sub_238491D34();
      swift_allocObject();
      sub_238491D28();
      sub_238435C24(&qword_25690B610);
      sub_2384829B8(&qword_25690B620, &qword_25690A0C0, (uint64_t)&protocol conformance descriptor for ScheduledQuery, MEMORY[0x24BEE12D0]);
      sub_238491D1C();
      v1 = v14;
      swift_bridgeObjectRetain();
      v10 = sub_23849255C();
      v11 = sub_238492880();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v12 = 134217984;
        *(_QWORD *)&v14 = *(_QWORD *)(v1 + 16);
        sub_238492934();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_238433000, v10, v11, "[QueryStore] readQueriesFromCache %ld queries", v12, 0xCu);
        MEMORY[0x23B835AF4](v12, -1, -1);
        swift_release();
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
      }
      sub_23844218C(v5, v4);

    }
  }
  return v1;
}

uint64_t sub_23848240C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  v1 = sub_238481FD4();
  v2 = v1;
  if (!v0)
  {
    if (qword_2569099F8 != -1)
      swift_once();
    v3 = sub_238492574();
    sub_238435CA4(v3, (uint64_t)qword_256909F48);
    v4 = sub_23849255C();
    v5 = sub_238492880();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v6 = 134217984;
      sub_238492934();
      _os_log_impl(&dword_238433000, v4, v5, "Found %ld queries in self.readQueriesFromCache", v6, 0xCu);
      MEMORY[0x23B835AF4](v6, -1, -1);
    }

  }
  return v2;
}

uint64_t sub_238482538(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScheduledQuery();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23848257C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  id v21;
  uint64_t v22;
  uint8_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = sub_238491ECC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_238491D88();
  swift_allocObject();
  sub_238491D7C();
  *(_QWORD *)&v31 = a1;
  sub_238435C24(&qword_25690B610);
  sub_2384829B8(&qword_25690B618, &qword_25690A0A0, (uint64_t)&protocol conformance descriptor for ScheduledQuery, MEMORY[0x24BEE12A0]);
  v7 = sub_238491D70();
  if (!v1)
  {
    v29 = v7;
    v30 = v8;
    if (qword_2569099F8 != -1)
      swift_once();
    v9 = sub_238492574();
    sub_238435CA4(v9, (uint64_t)qword_256909F48);
    swift_bridgeObjectRetain_n();
    v10 = sub_23849255C();
    v11 = sub_238492880();
    if (os_log_type_enabled(v10, v11))
    {
      v27 = v4;
      v12 = swift_slowAlloc();
      v28 = v3;
      v13 = (uint8_t *)v12;
      v25 = swift_slowAlloc();
      *(_QWORD *)&v31 = v25;
      v26 = v6;
      *(_DWORD *)v13 = 136315138;
      v24 = v13 + 4;
      v14 = type metadata accessor for ScheduledQuery();
      v15 = swift_bridgeObjectRetain();
      v16 = MEMORY[0x23B834EE8](v15, v14);
      v18 = v17;
      swift_bridgeObjectRelease();
      v35 = sub_23843604C(v16, v18, (uint64_t *)&v31);
      v6 = v26;
      sub_238492934();
      swift_bridgeObjectRelease_n();
      v4 = v27;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_238433000, v10, v11, "[QueryStore] storeQueriesToCache for %s queries", v13, 0xCu);
      v19 = v25;
      swift_arrayDestroy();
      MEMORY[0x23B835AF4](v19, -1, -1);
      v20 = v13;
      v3 = v28;
      MEMORY[0x23B835AF4](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (qword_256909AA8 != -1)
      swift_once();
    v31 = xmmword_25690B4C8;
    v32 = qword_25690B4D8;
    v33 = unk_25690B4E0;
    v34 = qword_25690B4E8;
    v21 = (id)xmmword_25690B4C8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2384353E4((uint64_t)v6);
    v22 = v29;
    sub_238491F08();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_2384420D4(v22, v30);
  }
  return swift_release();
}

uint64_t sub_23848290C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_238482938()
{
  unint64_t result;

  result = qword_25690B600;
  if (!qword_25690B600)
  {
    result = MEMORY[0x23B835A40](&unk_238496D0C, &type metadata for ScheduledQueryStore.Error);
    atomic_store(result, (unint64_t *)&qword_25690B600);
  }
  return result;
}

uint64_t sub_23848297C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ScheduledQuery();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2384829B8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = sub_238439040(&qword_25690B610);
    v10 = sub_238482A40(a2, 255, (uint64_t (*)(uint64_t))type metadata accessor for ScheduledQuery, a3);
    result = MEMORY[0x23B835A40](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_238482A40(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x23B835A40](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ScheduledQueryStore.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_238482ACC + 4 * byte_238496B55[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_238482B00 + 4 * byte_238496B50[v4]))();
}

uint64_t sub_238482B00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_238482B08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x238482B10);
  return result;
}

uint64_t sub_238482B1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x238482B24);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_238482B28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_238482B30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScheduledQueryStore.Error()
{
  return &type metadata for ScheduledQueryStore.Error;
}

unint64_t sub_238482B50(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_238482B7C();
  result = sub_238482BC0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_238482B7C()
{
  unint64_t result;

  result = qword_25690B628;
  if (!qword_25690B628)
  {
    result = MEMORY[0x23B835A40](&unk_238496C00, &type metadata for ScheduledQueryStore.Error);
    atomic_store(result, (unint64_t *)&qword_25690B628);
  }
  return result;
}

unint64_t sub_238482BC0()
{
  unint64_t result;

  result = qword_25690B630;
  if (!qword_25690B630)
  {
    result = MEMORY[0x23B835A40](&unk_238496C40, &type metadata for ScheduledQueryStore.Error);
    atomic_store(result, (unint64_t *)&qword_25690B630);
  }
  return result;
}

unint64_t sub_238482C08()
{
  unint64_t result;

  result = qword_25690B638;
  if (!qword_25690B638)
  {
    result = MEMORY[0x23B835A40](&unk_238496CE4, &type metadata for ScheduledQueryStore.Error);
    atomic_store(result, (unint64_t *)&qword_25690B638);
  }
  return result;
}

uint64_t sub_238482C4C()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ScheduledQueryLocationManager();
  v0 = swift_allocObject();
  result = swift_defaultActor_initialize();
  qword_25690B640 = v0;
  return result;
}

uint64_t static ScheduledQueryLocationManager.shared.getter()
{
  if (qword_256909AB0 != -1)
    swift_once();
  return swift_retain();
}

unint64_t sub_238482CC4()
{
  uint64_t v0;
  unint64_t result;
  _QWORD *v2;

  result = sub_238484D90();
  if (!v0)
  {
    v2 = sub_238483FA4(result);
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  return result;
}

void sub_238482D0C(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v36;

  if (qword_2569099F8 != -1)
    swift_once();
  v6 = sub_238492574();
  sub_238435CA4(v6, (uint64_t)qword_256909F48);
  swift_bridgeObjectRetain_n();
  v7 = sub_23849255C();
  v8 = sub_238492880();
  v34 = a3;
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v36 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_23843604C(a1, a2, &v36);
    sub_238492934();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_238433000, v7, v8, "[SQLocationManager] location search for: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v10, -1, -1);
    MEMORY[0x23B835AF4](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = sub_238484D90();
  if (!v3)
  {
    v12 = v11;
    v13 = sub_238492658();
    if (*(_QWORD *)(v12 + 16) && (v15 = sub_238442128(v13, v14), (v16 & 1) != 0))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v12 + 56) + 48 * v15);
      v19 = *v17;
      v18 = v17[1];
      v21 = v17[2];
      v20 = v17[3];
      v32 = v17[5];
      v33 = v17[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      v22 = sub_23849255C();
      v23 = sub_238492880();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        v31 = v18;
        v25 = swift_slowAlloc();
        v36 = v25;
        *(_DWORD *)v24 = 136315138;
        swift_bridgeObjectRetain();
        sub_23843604C(a1, a2, &v36);
        sub_238492934();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_238433000, v22, v23, "[SQLocationManager] location found for: %s", v24, 0xCu);
        swift_arrayDestroy();
        v26 = v25;
        v18 = v31;
        MEMORY[0x23B835AF4](v26, -1, -1);
        MEMORY[0x23B835AF4](v24, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      *v34 = v19;
      v34[1] = v18;
      v34[2] = v21;
      v34[3] = v20;
      v34[4] = v33;
      v34[5] = v32;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      v27 = sub_23849255C();
      v28 = sub_238492880();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        v30 = swift_slowAlloc();
        v36 = v30;
        *(_DWORD *)v29 = 136315138;
        swift_bridgeObjectRetain();
        sub_23843604C(a1, a2, &v36);
        sub_238492934();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_238433000, v27, v28, "[SQLocationManager] location missing for: %s", v29, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B835AF4](v30, -1, -1);
        MEMORY[0x23B835AF4](v29, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      *((_OWORD *)v34 + 1) = 0u;
      *((_OWORD *)v34 + 2) = 0u;
      *(_OWORD *)v34 = 0u;
    }
  }
}

void sub_2384831CC(__int128 *a1)
{
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  __int128 v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  __int128 v21[3];
  uint64_t v22;

  v2 = a1[1];
  v21[0] = *a1;
  v21[1] = v2;
  v21[2] = a1[2];
  if (qword_2569099F8 != -1)
    swift_once();
  v3 = sub_238492574();
  sub_238435CA4(v3, (uint64_t)qword_256909F48);
  sub_238485050((uint64_t)v21);
  v4 = sub_23849255C();
  v5 = sub_238492880();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v22 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = v21[0];
    swift_bridgeObjectRetain();
    sub_23843604C(v8, *((unint64_t *)&v8 + 1), &v22);
    sub_238492934();
    swift_bridgeObjectRelease();
    sub_238485084((uint64_t)v21);
    _os_log_impl(&dword_238433000, v4, v5, "[SQLocationManager] location updating for: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v7, -1, -1);
    MEMORY[0x23B835AF4](v6, -1, -1);
  }
  else
  {
    sub_238485084((uint64_t)v21);
  }

  v9 = sub_238484D90();
  if (!v1)
  {
    v10 = v9;
    v11 = v21[0];
    sub_238485050((uint64_t)v21);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = v10;
    sub_238483E38(v21, v11, *((uint64_t *)&v11 + 1), isUniquelyReferenced_nonNull_native);
    v13 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v14 = sub_23849255C();
    v15 = sub_238492880();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v16 = 134217984;
      v22 = *(_QWORD *)(v13 + 16);
      sub_238492934();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_238433000, v14, v15, "[QueryStore] storeLocationsToCache for %ld queries", v16, 0xCu);
      MEMORY[0x23B835AF4](v16, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
    sub_23844D800();
    swift_bridgeObjectRelease();
    sub_238485050((uint64_t)v21);
    v17 = sub_23849255C();
    v18 = sub_238492880();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v22 = v20;
      *(_DWORD *)v19 = 136315138;
      swift_bridgeObjectRetain();
      sub_23843604C(v11, *((unint64_t *)&v11 + 1), &v22);
      sub_238492934();
      swift_bridgeObjectRelease();
      sub_238485084((uint64_t)v21);
      _os_log_impl(&dword_238433000, v17, v18, "[SQLocationManager] location updated for: %s", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B835AF4](v20, -1, -1);
      MEMORY[0x23B835AF4](v19, -1, -1);
    }
    else
    {
      sub_238485084((uint64_t)v21);
    }

  }
}

void sub_2384835D0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v21[2];
  uint64_t v22;

  if (qword_2569099F8 != -1)
    swift_once();
  v4 = sub_238492574();
  sub_238435CA4(v4, (uint64_t)qword_256909F48);
  swift_bridgeObjectRetain_n();
  v5 = sub_23849255C();
  v6 = sub_238492880();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v21[0] = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    v22 = sub_23843604C(a1, a2, v21);
    sub_238492934();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_238433000, v5, v6, "[SQLocationManager] location deleting for: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v8, -1, -1);
    MEMORY[0x23B835AF4](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v9 = sub_238484D90();
  if (!v2)
  {
    v22 = v9;
    v10 = sub_238492658();
    sub_238483BC4(v10, v11, (uint64_t)v21);
    swift_bridgeObjectRelease();
    sub_2384850B8(v21[0], v21[1]);
    v12 = v22;
    swift_bridgeObjectRetain();
    v13 = sub_23849255C();
    v14 = sub_238492880();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v15 = 134217984;
      v21[0] = *(_QWORD *)(v12 + 16);
      sub_238492934();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_238433000, v13, v14, "[QueryStore] storeLocationsToCache for %ld queries", v15, 0xCu);
      MEMORY[0x23B835AF4](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
    sub_23844D800();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    v16 = sub_23849255C();
    v17 = sub_238492880();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v21[0] = v19;
      *(_DWORD *)v18 = 136315138;
      swift_bridgeObjectRetain();
      sub_23843604C(a1, a2, v21);
      sub_238492934();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_238433000, v16, v17, "[SQLocationManager] location deleted for: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B835AF4](v19, -1, -1);
      MEMORY[0x23B835AF4](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_2384839C4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  sub_23847E504(MEMORY[0x24BEE4AF8]);
  if (qword_2569099F8 != -1)
    swift_once();
  v0 = sub_238492574();
  sub_238435CA4(v0, (uint64_t)qword_256909F48);
  swift_bridgeObjectRetain();
  v1 = sub_23849255C();
  v2 = sub_238492880();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v3 = 134217984;
    sub_238492934();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_238433000, v1, v2, "[QueryStore] storeLocationsToCache for %ld queries", v3, 0xCu);
    MEMORY[0x23B835AF4](v3, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  sub_23844D800();
  return swift_bridgeObjectRelease();
}

uint64_t ScheduledQueryLocationManager.deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return v0;
}

uint64_t ScheduledQueryLocationManager.__deallocating_deinit()
{
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t ScheduledQueryLocationManager.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_238483B60()
{
  if (qword_256909AB0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_238483BA0()
{
  type metadata accessor for ScheduledQueryLocationManager();
  return sub_238492A30();
}

double sub_238483BC4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_238442128(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v16 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_238449AD0();
      v11 = v16;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56) + 48 * v8;
    v13 = *(_QWORD *)(v12 + 16);
    v14 = *(_QWORD *)(v12 + 24);
    *(_OWORD *)a3 = *(_OWORD *)v12;
    *(_QWORD *)(a3 + 16) = v13;
    *(_QWORD *)(a3 + 24) = v14;
    *(_OWORD *)(a3 + 32) = *(_OWORD *)(v12 + 32);
    sub_238448FF0(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  return result;
}

uint64_t sub_238483CCC(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v5 = v4;
  v10 = *v4;
  v12 = sub_238442128(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2384498E4();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_2384852C4((uint64_t)a1, v18[7] + 48 * v12);
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = (_OWORD *)(v18[7] + 48 * v12);
    v24 = *a1;
    v25 = a1[2];
    v23[1] = a1[1];
    v23[2] = v25;
    *v23 = v24;
    v26 = v18[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v18[2] = v28;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_238448784(v15, a4 & 1);
  v20 = sub_238442128(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_2384852C4((uint64_t)a1, v18[7] + 48 * v12);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_238492CAC();
  __break(1u);
  return result;
}

uint64_t sub_238483E38(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v5 = v4;
  v10 = *v4;
  v12 = sub_238442128(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_238449AD0();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_238485280((uint64_t)a1, v18[7] + 48 * v12);
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = (_OWORD *)(v18[7] + 48 * v12);
    v24 = *a1;
    v25 = a1[2];
    v23[1] = a1[1];
    v23[2] = v25;
    *v23 = v24;
    v26 = v18[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v18[2] = v28;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_238448AC8(v15, a4 & 1);
  v20 = sub_238442128(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_238485280((uint64_t)a1, v18[7] + 48 * v12);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_238492CAC();
  __break(1u);
  return result;
}

_QWORD *sub_238483FA4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_238435C24(&qword_25690B738);
  v3 = (_QWORD *)swift_allocObject();
  v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 48);
  v5 = sub_238484864(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_2384852BC();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_238484098(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      sub_238435C24(&qword_25690A500);
      v3 = (_QWORD *)swift_allocObject();
      v4 = j__malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_238484284((unint64_t)(v3 + 4), v2, v1);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_238492B2C();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_23848418C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_2384929F4();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x24BEE4AF8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_238435C24(&qword_25690A500);
    v3 = (_QWORD *)swift_allocObject();
    v4 = j__malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v6 = sub_238484A88(&v8, v3 + 4, v2, a1);
  result = sub_2384852BC();
  if (v6 == (_QWORD *)v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

uint64_t sub_238484284(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_238492B2C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_238492B2C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_238485240(&qword_25690B718, &qword_25690B2B8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          sub_238435C24(&qword_25690B2B8);
          v12 = sub_238484704(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_238455238(0, &qword_25690B830);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_238492B5C();
  __break(1u);
  return result;
}

uint64_t sub_238484498(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_238492B2C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_238492B2C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_238485240(&qword_25690B730, &qword_25690B728);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          sub_238435C24(&qword_25690B728);
          v12 = sub_2384846AC(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_238455238(0, &qword_25690B2C8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_238492B5C();
  __break(1u);
  return result;
}

void (*sub_2384846AC(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_238484784(v6, a2, a3);
  return sub_238484700;
}

void (*sub_238484704(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_2384847F8(v6, a2, a3);
  return sub_238484700;
}

void sub_238484758(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_238484784(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x23B835200](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_2384847F0;
  }
  __break(1u);
  return result;
}

void sub_2384847F0(id *a1)
{

}

uint64_t (*sub_2384847F8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x23B835200](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_238485300;
  }
  __break(1u);
  return result;
}

_QWORD *sub_238484864(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _QWORD *v25;

  v5 = a4 + 64;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v11 = 0;
    v9 = 0;
LABEL_39:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v9;
  }
  v9 = a3;
  if (!a3)
  {
    v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v10 = a2;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  v25 = result;
  v11 = 0;
  v12 = 0;
  v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    v19 = *(_QWORD *)(a4 + 56) + 48 * v15;
    v20 = *(_QWORD *)(v19 + 8);
    v21 = *(_QWORD *)(v19 + 16);
    v22 = *(_QWORD *)(v19 + 24);
    v23 = *(_OWORD *)(v19 + 32);
    *(_QWORD *)v10 = *(_QWORD *)v19;
    *(_QWORD *)(v10 + 8) = v20;
    *(_QWORD *)(v10 + 16) = v21;
    *(_QWORD *)(v10 + 24) = v22;
    *(_OWORD *)(v10 + 32) = v23;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 48;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_8;
LABEL_9:
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v16 >= v13)
      goto LABEL_33;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        v8 = 0;
        v11 = v16;
      }
      else
      {
        v17 = *(_QWORD *)(v5 + 8 * v11);
        if (v17)
          goto LABEL_14;
        v18 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_33;
        v17 = *(_QWORD *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          v16 = v18;
          goto LABEL_18;
        }
        v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          v17 = *(_QWORD *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            v16 = v11;
            goto LABEL_18;
          }
          v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            v8 = 0;
            goto LABEL_37;
          }
          v17 = *(_QWORD *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v16 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_42;
              if (v16 >= v13)
              {
                v8 = 0;
                v11 = v13 - 1;
                goto LABEL_37;
              }
              v17 = *(_QWORD *)(v5 + 8 * v16);
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v8 = 0;
        v11 = v16 + 2;
      }
LABEL_37:
      v9 = v12;
LABEL_38:
      v6 = v24;
      result = v25;
      goto LABEL_39;
    }
LABEL_18:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_238484A88(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;

  v4 = a4;
  v6 = a2;
  v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_2384929C4();
    sub_238455238(0, &qword_25690B300);
    sub_2384851E8();
    result = (_QWORD *)sub_238492820();
    v4 = v27;
    v8 = v28;
    v9 = v29;
    v10 = v30;
    v11 = v31;
    v24 = v7;
    if (v6)
      goto LABEL_3;
LABEL_36:
    v12 = 0;
LABEL_46:
    *v24 = v4;
    v24[1] = v8;
    v24[2] = v9;
    v24[3] = v10;
    v24[4] = v11;
    return (_QWORD *)v12;
  }
  v10 = 0;
  v20 = -1 << *(_BYTE *)(a4 + 32);
  v8 = a4 + 56;
  v9 = ~v20;
  v21 = -v20;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v11 = v22 & *(_QWORD *)(a4 + 56);
  v24 = result;
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0)
    goto LABEL_48;
  v12 = 0;
  v25 = (unint64_t)(v9 + 64) >> 6;
  v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_238492A18())
        goto LABEL_45;
      sub_238455238(0, &qword_25690B300);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v26;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v26)
        goto LABEL_45;
      goto LABEL_8;
    }
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v16 >= v25)
    {
      v11 = 0;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v16);
    if (v17)
      goto LABEL_23;
    v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25)
        goto LABEL_42;
      v17 = *(_QWORD *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        v16 = v10 + 3;
        goto LABEL_23;
      }
      v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      v17 = *(_QWORD *)(v8 + 8 * v18);
      if (!v17)
      {
        v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          v11 = 0;
          v10 = v18;
          goto LABEL_45;
        }
        v17 = *(_QWORD *)(v8 + 8 * v16);
        if (!v17)
        {
          v19 = v10 + 6;
          while (v25 != v19)
          {
            v17 = *(_QWORD *)(v8 + 8 * v19++);
            if (v17)
            {
              v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          v11 = 0;
          v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    v16 = v18;
LABEL_23:
    v11 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
    v10 = v16;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    v15 = result;
    if (!result)
      goto LABEL_45;
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      v12 = a3;
LABEL_45:
      v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

unint64_t sub_238484D90()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v17;

  v1 = sub_23844D698();
  if (!v0)
    return v1;
  if (qword_2569099F8 != -1)
    swift_once();
  v2 = sub_238492574();
  sub_238435CA4(v2, (uint64_t)qword_256909F48);
  v3 = v0;
  v4 = v0;
  v5 = sub_23849255C();
  v6 = sub_238492868();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v17 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_238492CD0();
    sub_23843604C(v9, v10, &v17);
    sub_238492934();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_238433000, v5, v6, "[QueryStore] readLocationsFromCache resetting locations. Error = %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v8, -1, -1);
    MEMORY[0x23B835AF4](v7, -1, -1);
  }
  else
  {

  }
  v12 = sub_23847E504(MEMORY[0x24BEE4AF8]);
  v13 = sub_23849255C();
  v14 = sub_238492880();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v15 = 134217984;
    v17 = *(_QWORD *)(v12 + 16);
    sub_238492934();
    _os_log_impl(&dword_238433000, v13, v14, "[QueryStore] storeLocationsToCache for %ld queries", v15, 0xCu);
    MEMORY[0x23B835AF4](v15, -1, -1);
  }

  sub_23844D800();
  swift_bridgeObjectRelease();
  v11 = sub_23847E504(MEMORY[0x24BEE4AF8]);

  return v11;
}

uint64_t sub_238485050(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_238485084(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2384850B8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_2384850EC()
{
  unint64_t result;
  uint64_t LocationManager;

  result = qword_25690B648;
  if (!qword_25690B648)
  {
    LocationManager = type metadata accessor for ScheduledQueryLocationManager();
    result = MEMORY[0x23B835A40](&protocol conformance descriptor for ScheduledQueryLocationManager, LocationManager);
    atomic_store(result, (unint64_t *)&qword_25690B648);
  }
  return result;
}

uint64_t type metadata accessor for ScheduledQueryLocationManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for ScheduledQueryLocationManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScheduledQueryLocationManager.allLocations()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of ScheduledQueryLocationManager.location(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ScheduledQueryLocationManager.update(location:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ScheduledQueryLocationManager.delete(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ScheduledQueryLocationManager.deleteAll()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

unint64_t sub_2384851E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25690B720;
  if (!qword_25690B720)
  {
    v1 = sub_238455238(255, &qword_25690B300);
    result = MEMORY[0x23B835A40](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_25690B720);
  }
  return result;
}

uint64_t sub_238485240(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_238439040(a2);
    result = MEMORY[0x23B835A40](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_238485280(uint64_t a1, uint64_t a2)
{
  assignWithTake for ScheduledQueryLocation(a2, a1);
  return a2;
}

uint64_t sub_2384852BC()
{
  return swift_release();
}

uint64_t sub_2384852C4(uint64_t a1, uint64_t a2)
{
  assignWithTake for ScheduledQueryLocation(a2, a1);
  return a2;
}

uint64_t sub_238485304(uint64_t result, uint64_t a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    sub_238435C24(&qword_25690A630);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    swift_unknownObjectRetain();
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_238485410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 40) = a5;
  return swift_task_switch();
}

uint64_t sub_238485428()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend(*(id *)(v0 + 40), sel_dialog);
  *(_QWORD *)(v0 + 48) = v1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_2384854A4;
  v2[16] = v1;
  return swift_task_switch();
}

uint64_t sub_2384854A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)

  return swift_task_switch();
}

uint64_t sub_238485510()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = objc_msgSend(*(id *)(v0 + 40), sel_providedValues);
  sub_238455238(0, &qword_25690B830);
  v2 = sub_23849276C();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease_n();
    sub_2384857C0(*(void **)(v9 + 40));
    return (*(uint64_t (**)(void))(v9 + 8))();
  }
  swift_bridgeObjectRetain_n();
  v3 = sub_238492B2C();
  result = swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_10;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x23B835200](v5, v2);
      else
        v6 = *(id *)(v2 + 8 * v5 + 32);
      v7 = v6;
      *(_QWORD *)(v9 + 24) = v5;
      sub_238492C64();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_2384926A0();
      sub_2384784C4(0);
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_238435C24((uint64_t *)&unk_25690AA80);
      v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_238493540;
      *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v8 + 32) = 9;
      *(_QWORD *)(v8 + 40) = 0xE100000000000000;
      ++v5;
      swift_bridgeObjectRetain();
      sub_238492D0C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    while (v3 != v5);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_238485744()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 64);

  *(_QWORD *)(v0 + 16) = v1;
  v2 = v1;
  sub_238435C24(&qword_25690B340);
  sub_2384927B4();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_2384857C0(void *a1)
{
  uint64_t v2;
  id result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_238486A2C((uint64_t)&v31);
  if (!v33)
  {
    sub_23847B7C8((uint64_t)&v31);
    goto LABEL_56;
  }
  v2 = MEMORY[0x24BEE0D00];
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_56:
    v26 = MEMORY[0x24BEE0D00];
    sub_238435C24((uint64_t *)&unk_25690AA80);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_238493540;
    *(_QWORD *)(v27 + 56) = v26;
    *(_QWORD *)(v27 + 32) = 0xD000000000000035;
    *(_QWORD *)(v27 + 40) = 0x8000000238499CB0;
    sub_238492D0C();
    swift_bridgeObjectRelease();
    return (id)sub_2384857C0(a1);
  }
  result = (id)v29;
  v4 = HIBYTE(v30) & 0xF;
  v5 = v29 & 0xFFFFFFFFFFFFLL;
  if ((v30 & 0x2000000000000000) != 0)
    v6 = HIBYTE(v30) & 0xF;
  else
    v6 = v29 & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
  if ((v30 & 0x1000000000000000) != 0)
  {
    v8 = (uint64_t)sub_23848C024(v29, v30, 10);
    v10 = v28;
    goto LABEL_47;
  }
  if ((v30 & 0x2000000000000000) == 0)
  {
    if ((v29 & 0x1000000000000000) != 0)
      v7 = (unsigned __int8 *)((v30 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v7 = (unsigned __int8 *)sub_238492AC0();
    v8 = (uint64_t)sub_23848C010(v7, v5, 10);
    v10 = v9 & 1;
LABEL_47:
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      v31 = 0;
      v32 = 0xE000000000000000;
      sub_238492A78();
      sub_2384926A0();
      sub_238492C64();
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_2384926A0();
      sub_238435C24((uint64_t *)&unk_25690AA80);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_238493540;
      v31 = 0x6D32333B305B1BLL;
      v32 = 0xE700000000000000;
      sub_2384926A0();
      sub_2384926A0();
      v21 = v31;
      v22 = v32;
      *(_QWORD *)(v20 + 56) = v2;
      *(_QWORD *)(v20 + 32) = v21;
      *(_QWORD *)(v20 + 40) = v22;
      sub_238492D0C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return objc_msgSend(a1, sel_respondWithSelectedIndex_, v8);
    }
    goto LABEL_56;
  }
  v31 = v29;
  v32 = v30 & 0xFFFFFFFFFFFFFFLL;
  if (v29 == 43)
  {
    if (!v4)
      goto LABEL_60;
    if (v4 == 1 || (BYTE1(v29) - 48) > 9u)
      goto LABEL_34;
    v8 = (BYTE1(v29) - 48);
    if (v4 != 2)
    {
      if ((BYTE2(v29) - 48) > 9u)
        goto LABEL_34;
      v8 = 10 * (BYTE1(v29) - 48) + (BYTE2(v29) - 48);
      v11 = v4 - 3;
      if (v11)
      {
        v12 = (unsigned __int8 *)&v31 + 3;
        while (1)
        {
          v13 = *v12 - 48;
          if (v13 > 9)
            goto LABEL_34;
          v14 = 10 * v8;
          if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63)
            goto LABEL_34;
          v8 = v14 + v13;
          if (__OFADD__(v14, v13))
            goto LABEL_34;
          v10 = 0;
          ++v12;
          if (!--v11)
            goto LABEL_47;
        }
      }
    }
LABEL_46:
    v10 = 0;
    goto LABEL_47;
  }
  if (v29 != 45)
  {
    if (!v4 || (v29 - 48) > 9u)
      goto LABEL_34;
    v8 = (v29 - 48);
    if (v4 != 1)
    {
      if ((BYTE1(v29) - 48) > 9u)
        goto LABEL_34;
      v8 = 10 * (v29 - 48) + (BYTE1(v29) - 48);
      v15 = v4 - 2;
      if (v15)
      {
        v16 = (unsigned __int8 *)&v31 + 2;
        while (1)
        {
          v17 = *v16 - 48;
          if (v17 > 9)
            goto LABEL_34;
          v18 = 10 * v8;
          if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63)
            goto LABEL_34;
          v8 = v18 + v17;
          if (__OFADD__(v18, v17))
            goto LABEL_34;
          v10 = 0;
          ++v16;
          if (!--v15)
            goto LABEL_47;
        }
      }
    }
    goto LABEL_46;
  }
  if (v4)
  {
    if (v4 != 1 && (BYTE1(v29) - 48) <= 9u)
    {
      if (v4 == 2)
      {
        v10 = 0;
        v8 = -(uint64_t)(BYTE1(v29) - 48);
        goto LABEL_47;
      }
      if ((BYTE2(v29) - 48) <= 9u)
      {
        v8 = -10 * (BYTE1(v29) - 48) - (BYTE2(v29) - 48);
        v19 = v4 - 3;
        if (!v19)
          goto LABEL_46;
        v23 = (unsigned __int8 *)&v31 + 3;
        while (1)
        {
          v24 = *v23 - 48;
          if (v24 > 9)
            break;
          v25 = 10 * v8;
          if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63)
            break;
          v8 = v25 - v24;
          if (__OFSUB__(v25, v24))
            break;
          v10 = 0;
          ++v23;
          if (!--v19)
            goto LABEL_47;
        }
      }
    }
LABEL_34:
    v8 = 0;
    v10 = 1;
    goto LABEL_47;
  }
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_238485CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 24) = a4;
  *(_QWORD *)(v5 + 32) = a5;
  return swift_task_switch();
}

uint64_t sub_238485CFC()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend(*(id *)(v0 + 32), sel_dialog);
  *(_QWORD *)(v0 + 40) = v1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *v2 = v0;
  v2[1] = sub_238485D78;
  v2[16] = v1;
  return swift_task_switch();
}

uint64_t sub_238485D78()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)

  return swift_task_switch();
}

uint64_t sub_238485DE4()
{
  uint64_t v0;

  sub_238485E90(*(void **)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_238485E14()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 56);

  *(_QWORD *)(v0 + 16) = v1;
  v2 = v1;
  sub_238435C24(&qword_25690B340);
  sub_2384927B4();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_238485E90(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  sub_238486A2C((uint64_t)&v16);
  if (v18)
  {
    v2 = MEMORY[0x24BEE0D00];
    if (swift_dynamicCast())
    {
      v8 = (void *)sub_238487DC4(v14, v15);
      swift_bridgeObjectRelease();
      if (v8)
      {
        v16 = 96;
        v17 = 0xE100000000000000;
        v9 = objc_msgSend(a1, sel_parameterName);
        sub_23849261C();

        sub_2384926A0();
        swift_bridgeObjectRelease();
        sub_2384926A0();
        v10 = objc_msgSend(v8, sel_description);
        sub_23849261C();

        sub_2384926A0();
        swift_bridgeObjectRelease();
        sub_2384926A0();
        v16 = 0xD00000000000002ALL;
        v17 = 0x8000000238499DD0;
        sub_2384926A0();
        swift_bridgeObjectRelease();
        sub_238435C24((uint64_t *)&unk_25690AA80);
        v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_238493540;
        v16 = 0x6D32333B305B1BLL;
        v17 = 0xE700000000000000;
        sub_2384926A0();
        sub_2384926A0();
        v12 = v16;
        v13 = v17;
        *(_QWORD *)(v11 + 56) = v2;
        *(_QWORD *)(v11 + 32) = v12;
        *(_QWORD *)(v11 + 40) = v13;
        sub_238492D0C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        objc_msgSend(a1, sel_respondWithValue_, v8);
        goto LABEL_6;
      }
    }
  }
  else
  {
    sub_23847B7C8((uint64_t)&v16);
  }
  v3 = MEMORY[0x24BEE0D00];
  sub_238435C24((uint64_t *)&unk_25690AA80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_238493540;
  *(_QWORD *)(v4 + 56) = v3;
  *(_QWORD *)(v4 + 32) = 0xD00000000000002DLL;
  *(_QWORD *)(v4 + 40) = 0x8000000238499DA0;
  sub_238492D0C();
  swift_bridgeObjectRelease();
  sub_23849261C();
  v5 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v6 = (void *)sub_238492610();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithDomain_code_userInfo_, v6, 0, 0);

  v8 = (void *)sub_238491E60();
  objc_msgSend(a1, sel_respondWithError_, v8);
LABEL_6:

}

id sub_238486240(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1)
  {
    swift_unknownObjectRetain();
    sub_238492A78();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(a1, sel_print);
    v7 = MEMORY[0x24BEE0D00];
    v8 = sub_23849276C();

    if (*(_QWORD *)(v8 + 16))
      swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_238435C24(&qword_25690A528);
    sub_23849264C();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    sub_2384926A0();
    sub_238435C24((uint64_t *)&unk_25690AA80);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_238493540;
    *(_QWORD *)(v10 + 56) = v7;
    *(_QWORD *)(v10 + 32) = 0x3A696C636B6E696CLL;
    *(_QWORD *)(v10 + 40) = 0xE900000000000020;
    swift_bridgeObjectRetain();
    sub_238492D0C();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_238435C24((uint64_t *)&unk_25690AA80);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_238493540;
    *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v9 + 32) = 0xD000000000000018;
    *(_QWORD *)(v9 + 40) = 0x8000000238499D50;
    sub_238492D0C();
  }
  swift_bridgeObjectRelease();
  return sub_23848651C(a4);
}

uint64_t sub_238486450(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

id sub_23848651C(void *a1)
{
  return sub_238486528(a1, (uint64_t (*)(void *))sub_23848651C);
}

id sub_238486528(void *a1, uint64_t (*a2)(void *))
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;

  sub_238486A2C((uint64_t)&v15);
  if (v17)
  {
    v4 = MEMORY[0x24BEE0D00];
    if ((swift_dynamicCast() & 1) != 0)
    {
      v5 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
      v6 = (void *)sub_238492610();
      swift_bridgeObjectRelease();
      v7 = objc_msgSend(v5, sel_initWithString_, v6);

      v8 = objc_msgSend(v7, sel_BOOLValue);
      v15 = 0;
      v16 = 0xE000000000000000;
      sub_238492A78();
      swift_bridgeObjectRelease();
      v15 = 0xD000000000000029;
      v16 = 0x8000000238499CF0;
      sub_2384926A0();
      swift_bridgeObjectRelease();
      sub_2384926A0();
      sub_238435C24((uint64_t *)&unk_25690AA80);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_238493540;
      v15 = 0x6D32333B305B1BLL;
      v16 = 0xE700000000000000;
      sub_2384926A0();
      sub_2384926A0();
      v10 = v15;
      v11 = v16;
      *(_QWORD *)(v9 + 56) = v4;
      *(_QWORD *)(v9 + 32) = v10;
      *(_QWORD *)(v9 + 40) = v11;
      sub_238492D0C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return objc_msgSend(a1, sel_respondWithConfirmation_, v8);
    }
  }
  else
  {
    sub_23847B7C8((uint64_t)&v15);
  }
  v13 = MEMORY[0x24BEE0D00];
  sub_238435C24((uint64_t *)&unk_25690AA80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_238493540;
  *(_QWORD *)(v14 + 56) = v13;
  *(_QWORD *)(v14 + 32) = 0xD000000000000035;
  *(_QWORD *)(v14 + 40) = 0x8000000238499CB0;
  sub_238492D0C();
  swift_bridgeObjectRelease();
  return (id)a2(a1);
}

id sub_2384867B8(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1)
  {
    swift_unknownObjectRetain();
    sub_238492A78();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(a1, sel_print);
    v7 = MEMORY[0x24BEE0D00];
    v8 = sub_23849276C();

    if (*(_QWORD *)(v8 + 16))
      swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_238435C24(&qword_25690A528);
    sub_23849264C();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    sub_2384926A0();
    sub_238435C24((uint64_t *)&unk_25690AA80);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_238493540;
    *(_QWORD *)(v10 + 56) = v7;
    *(_QWORD *)(v10 + 32) = 0x3A696C636B6E696CLL;
    *(_QWORD *)(v10 + 40) = 0xE900000000000020;
    swift_bridgeObjectRetain();
    sub_238492D0C();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_238435C24((uint64_t *)&unk_25690AA80);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_238493540;
    *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v9 + 32) = 0xD00000000000001FLL;
    *(_QWORD *)(v9 + 40) = 0x8000000238499C90;
    sub_238492D0C();
  }
  swift_bridgeObjectRelease();
  return sub_23848651C(a4);
}

double sub_238486A2C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  sub_238435C24((uint64_t *)&unk_25690AA80);
  v2 = swift_allocObject();
  v3 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v2 + 16) = xmmword_238493540;
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 32) = 0x3E696C636B6E696CLL;
  *(_QWORD *)(v2 + 40) = 0xE900000000000020;
  sub_238492D0C();
  swift_bridgeObjectRelease();
  v4 = sub_238492D6C();
  if (v5)
  {
    *(_QWORD *)(a1 + 24) = v3;
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v5;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

id sub_238486B08()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_238486B7C()
{
  return type metadata accessor for PerformActionExecutorDelegate();
}

uint64_t type metadata accessor for PerformActionExecutorDelegate()
{
  uint64_t result;

  result = qword_25690B7C8;
  if (!qword_25690B7C8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_238486BC0()
{
  unint64_t v0;

  sub_238486C2C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_238486C2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25690B7D8)
  {
    sub_238455238(255, (unint64_t *)&unk_25690B7E0);
    sub_238439040(&qword_25690A630);
    v0 = sub_2384927CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25690B7D8);
  }
}

uint64_t sub_238486CAC(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v11;
  _OWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v5 = sub_238435C24(&qword_25690B340);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v15 = (uint64_t)a1;
    v9 = a1;
    return sub_2384927C0();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2 + OBJC_IVAR____TtC23ConditionalEngineClient29PerformActionExecutorDelegate_continuation, v5);
    if (a2)
    {
      v11 = (uint64_t)a2;
    }
    else
    {
      sub_23847B85C();
      v11 = swift_allocError();
      *v12 = xmmword_238496DF0;
    }
    v15 = v11;
    v13 = a2;
    sub_2384927B4();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_238486DC0(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  id v14;
  uint64_t v16;
  unint64_t v17;

  v2 = v1;
  v4 = sub_238435C24(&qword_25690AF58);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = 0;
  v17 = 0xE000000000000000;
  sub_238492A78();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(a1, sel_parameterName, 0xD00000000000002ALL, 0x8000000238499E00);
  sub_23849261C();

  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  sub_238435C24((uint64_t *)&unk_25690AA80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_238493540;
  v16 = 1831951131;
  v17 = 0xE400000000000000;
  sub_2384926A0();
  sub_2384926A0();
  v9 = v16;
  v10 = v17;
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v10;
  sub_238492D0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = sub_2384927F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v2;
  v12[5] = a1;
  v13 = v2;
  v14 = a1;
  sub_2384707E8((uint64_t)v6, (uint64_t)&unk_25690B828, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_238486FBC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = a1;
  return swift_task_switch();
}

uint64_t sub_238486FD4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(void **)(v0 + 128);
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  *(_QWORD *)(v0 + 56) = v0 + 120;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_238487084;
  v2 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v3 = (_QWORD *)(v0 + 80);
  v3[1] = 0x40000000;
  v3[2] = sub_238485304;
  v3[3] = &unk_250A28298;
  v3[4] = v2;
  objc_msgSend(v1, sel_getResultWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_238487084()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 136) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2384870E4()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v1 = objc_msgSend(*(id *)(v0 + 120), sel_print);
  v2 = MEMORY[0x24BEE0D00];
  v3 = sub_23849276C();

  v4 = *(void **)(v0 + 128);
  if (*(_QWORD *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_2384926A0();
    swift_bridgeObjectRelease();
    sub_238435C24((uint64_t *)&unk_25690AA80);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_238493540;
    *(_QWORD *)(v5 + 56) = v2;
    *(_QWORD *)(v5 + 32) = 0x3A696C636B6E696CLL;
    *(_QWORD *)(v5 + 40) = 0xE900000000000020;
    swift_bridgeObjectRetain();
    sub_238492D0C();
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23848723C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23848727C(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  id v14;
  uint64_t v16;
  unint64_t v17;

  v2 = v1;
  v4 = sub_238435C24(&qword_25690AF58);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = 0;
  v17 = 0xE000000000000000;
  sub_238492A78();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(a1, sel_parameterName, 0xD000000000000026, 0x8000000238499D70);
  sub_23849261C();

  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  sub_238435C24((uint64_t *)&unk_25690AA80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_238493540;
  v16 = 1831951131;
  v17 = 0xE400000000000000;
  sub_2384926A0();
  sub_2384926A0();
  v9 = v16;
  v10 = v17;
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v10;
  sub_238492D0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = sub_2384927F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v2;
  v12[5] = a1;
  v13 = v2;
  v14 = a1;
  sub_2384707E8((uint64_t)v6, (uint64_t)&unk_25690B808, (uint64_t)v12);
  return swift_release();
}

void sub_238487478(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  _QWORD aBlock[6];

  v2 = v1;
  sub_238492A78();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(a1, sel_parameterName);
  sub_23849261C();

  sub_2384926A0();
  swift_bridgeObjectRelease();
  sub_2384926A0();
  sub_238435C24((uint64_t *)&unk_25690AA80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_238493540;
  sub_2384926A0();
  sub_2384926A0();
  v6 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 32) = 1831951131;
  *(_QWORD *)(v5 + 40) = 0xE400000000000000;
  sub_238492D0C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(a1, sel_dialog);
  if (v7)
  {
    v8 = v7;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v2;
    *(_QWORD *)(v9 + 24) = a1;
    aBlock[4] = sub_23848796C;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_238486450;
    aBlock[3] = &unk_250A28248;
    v10 = _Block_copy(aBlock);
    v11 = v2;
    v12 = a1;
    swift_release();
    objc_msgSend(v8, sel_getResultWithCompletionHandler_, v10);
    _Block_release(v10);

  }
  else
  {
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_238493540;
    *(_QWORD *)(v13 + 56) = v6;
    *(_QWORD *)(v13 + 32) = 0xD000000000000018;
    *(_QWORD *)(v13 + 40) = 0x8000000238499D50;
    sub_238492D0C();
    swift_bridgeObjectRelease();
    sub_23848651C(a1);
  }
}

void sub_238487710(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  _QWORD *v8;
  void *v9;
  id v10;
  id v11;
  _QWORD aBlock[6];

  sub_238435C24((uint64_t *)&unk_25690AA80);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_238493540;
  v4 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 + 32) = 0xD00000000000002ELL;
  *(_QWORD *)(v3 + 40) = 0x8000000238499C60;
  sub_238492D0C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(a1, sel_result);
  v6 = objc_msgSend(v5, sel_output);

  v7 = objc_msgSend(v6, sel_dialog);
  v8 = (_QWORD *)swift_allocObject();
  if (v7)
  {
    v8[2] = v1;
    v8[3] = a1;
    aBlock[4] = sub_23848794C;
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_238486450;
    aBlock[3] = &unk_250A281F8;
    v9 = _Block_copy(aBlock);
    v10 = v1;
    v11 = a1;
    swift_release();
    objc_msgSend(v7, sel_getResultWithCompletionHandler_, v9);
    _Block_release(v9);

  }
  else
  {
    *((_OWORD *)v8 + 1) = xmmword_238493540;
    v8[7] = v4;
    v8[4] = 0xD00000000000001FLL;
    v8[5] = 0x8000000238499C90;
    sub_238492D0C();
    swift_bridgeObjectRelease();
    sub_23848651C(a1);
  }
}

uint64_t sub_238487920()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_23848794C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2384867B8(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_238487954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_238487964()
{
  return swift_release();
}

id sub_23848796C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_238486240(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_238487978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_238451080;
  *(_OWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_2384879DC()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_238487A10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_2384552B4;
  *(_OWORD *)(v2 + 32) = v3;
  return swift_task_switch();
}

uint64_t sub_238487A7C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_23848B7AC(0, v1, 0);
    v2 = v16;
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v7 = *(v4 - 1);
      v8 = *v4;
      swift_bridgeObjectRetain();
      v9 = MEMORY[0x23B834DE0](v5, v6, v7, v8);
      v11 = v10;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v16 + 16);
      v12 = *(_QWORD *)(v16 + 24);
      if (v13 >= v12 >> 1)
        sub_23848B7AC(v12 > 1, v13 + 1, 1);
      *(_QWORD *)(v16 + 16) = v13 + 1;
      v14 = v16 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_238487B78(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v2)
      break;
    v8 = MEMORY[0x24BEE4AF8];
    result = sub_238492AE4();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x23B835200](v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = objc_msgSend(v5, sel_valueType);

      sub_238492ACC();
      sub_238492AF0();
      sub_238492AFC();
      sub_238492AD8();
      if (v2 == v4)
        return v8;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v2 = sub_238492B2C();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_238487CB8(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = sub_2384929B8();
    v5 = v4;
    v6 = sub_238492A24();
    v8 = MEMORY[0x23B835140](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
LABEL_3:
      sub_2384907E0(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_23848D750(v3, v5, v2 != 0, a1);
    v9 = v13;
    sub_2384907E0(v3, v5, v2 != 0);
    return v9;
  }
  result = sub_23848D9B8(a1);
  if ((v12 & 1) == 0)
  {
    v5 = v11;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v11)
    {
      v3 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_238487DC4(uint64_t a1, unint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v3 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v3)
    return 0;
  v21 = a1;
  v22 = a2;
  v19 = sub_23848DA40();
  v20 = v6;
  sub_238436638();
  if ((sub_238492970() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v21 = a1;
  v22 = a2;
  v7 = (_QWORD *)sub_23849297C();
  result = swift_bridgeObjectRelease();
  if (v7[2])
  {
    v9 = v7[4];
    v10 = v7[5];
    v11 = v7[6];
    v12 = v7[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x23B834DE0](v9, v10, v11, v12);
    v15 = v14;
    swift_bridgeObjectRelease();
    v16 = sub_2384880B0(v13, v15);
    swift_bridgeObjectRelease();

    if (v16)
    {
      v17 = sub_2384887A8(a1, a2);
      if (v2)
        return (uint64_t)v16;
      return (uint64_t)v17;
    }
LABEL_11:
    v17 = sub_238489B84(a1, a2);
    if (v2)
    {

      v18 = objc_msgSend((id)objc_opt_self(), sel_stringValueType, v19, v20, v21, v22);
      v16 = sub_238488B4C(v18, a1, a2);

      return (uint64_t)v16;
    }
    return (uint64_t)v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_238487F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_238490510(a1, a2);
  *a3 = result;
  a3[1] = v5;
  a3[2] = v6;
  return result;
}

uint64_t sub_238487FC0(char a1)
{
  return *(_QWORD *)&aUnknown_2[8 * a1];
}

void sub_238487FE0(_QWORD *a1@<X8>)
{
  *a1 = &unk_250A23CA0;
}

uint64_t sub_238487FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;
  uint64_t result;

  v4 = sub_238490B08(a1, a2);
  result = swift_bridgeObjectRelease();
  *a3 = v4;
  return result;
}

uint64_t sub_238488030()
{
  sub_238490AC4();
  return sub_2384924B4();
}

uint64_t sub_238488068()
{
  sub_238490AC4();
  return sub_2384924C0();
}

uint64_t sub_2384880A8()
{
  char *v0;

  return sub_238487FC0(*v0);
}

id sub_2384880B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  BOOL v25;
  id v26;
  BOOL v29;
  objc_class *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v4 = sub_238491DA0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_23849270C() & 1) == 0 && (sub_23849270C() & 1) == 0)
  {
    v32 = a1;
    v33 = a2;
    sub_238491D94();
    sub_238436638();
    v21 = sub_238492958();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v24 = v21 == 115 && v23 == 0xE100000000000000;
    if (v24
      || (sub_238492C7C() & 1) != 0
      || (v21 == 0x676E69727473 ? (v25 = v23 == 0xE600000000000000) : (v25 = 0), v25 || (sub_238492C7C() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      v26 = objc_msgSend((id)objc_opt_self(), sel_stringValueType);
    }
    else
    {
      v29 = v21 == 98 && v23 == 0xE100000000000000;
      if (v29
        || (sub_238492C7C() & 1) != 0
        || v21 == 1819242338 && v23 == 0xE400000000000000
        || (sub_238492C7C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v26 = objc_msgSend((id)objc_opt_self(), sel_BOOLValueType);
      }
      else if (v21 == 105 && v23 == 0xE100000000000000
             || (sub_238492C7C() & 1) != 0
             || v21 == 7630441 && v23 == 0xE300000000000000
             || (sub_238492C7C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v26 = objc_msgSend((id)objc_opt_self(), sel_intValueType);
      }
      else if (v21 == 100 && v23 == 0xE100000000000000
             || (sub_238492C7C() & 1) != 0
             || v21 == 0x656C62756F64 && v23 == 0xE600000000000000
             || (sub_238492C7C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v26 = objc_msgSend((id)objc_opt_self(), sel_doubleValueType);
      }
      else if (v21 == 1702125924 && v23 == 0xE400000000000000 || (sub_238492C7C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v26 = objc_msgSend((id)objc_opt_self(), sel_dateValueType);
      }
      else
      {
        if ((v21 != 117 || v23 != 0xE100000000000000)
          && (sub_238492C7C() & 1) == 0
          && (v21 != 7107189 || v23 != 0xE300000000000000)
          && (sub_238492C7C() & 1) == 0)
        {
          if (v21 == 113 && v23 == 0xE100000000000000
            || (sub_238492C7C() & 1) != 0
            || v21 == 0x7972657571 && v23 == 0xE500000000000000
            || (sub_238492C7C() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v30 = (objc_class *)MEMORY[0x24BE5FD80];
          }
          else
          {
            if (v21 == 25705 && v23 == 0xE200000000000000)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              v31 = sub_238492C7C();
              swift_bridgeObjectRelease();
              if ((v31 & 1) == 0)
                return 0;
            }
            v30 = (objc_class *)MEMORY[0x24BE5FC78];
          }
          return objc_msgSend(objc_allocWithZone(v30), sel_init);
        }
        swift_bridgeObjectRelease();
        v26 = objc_msgSend((id)objc_opt_self(), sel_URLValueType);
      }
    }
    return v26;
  }
  v32 = a1;
  v33 = a2;
  sub_238436638();
  v8 = MEMORY[0x24BEE0D00];
  v9 = (_QWORD *)sub_23849297C();
  if (v9[2] != 2)
  {
    swift_bridgeObjectRelease();
    sub_238435C24((uint64_t *)&unk_25690AA80);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_238493540;
    *(_QWORD *)(v20 + 56) = v8;
    *(_QWORD *)(v20 + 32) = 0xD000000000000098;
    *(_QWORD *)(v20 + 40) = 0x8000000238499E70;
    sub_238492D0C();
    swift_bridgeObjectRelease();
    return 0;
  }
  v10 = v9[8];
  v11 = v9[9];
  v12 = v9[10];
  v13 = v9[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = MEMORY[0x23B834DE0](v10, v11, v12, v13);
  v16 = v15;
  swift_bridgeObjectRelease();
  v32 = v14;
  v33 = v16;
  sub_238491D94();
  sub_238492958();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  v17 = objc_allocWithZone(MEMORY[0x24BE5FCE0]);
  v18 = (void *)sub_238492610();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v17, sel_initWithEnumerationIdentifier_, v18);

  return v19;
}

id sub_2384887A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  unint64_t v31;

  v4 = v2;
  sub_23848DA40();
  sub_238436638();
  v5 = sub_23849297C();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)sub_238487A7C(v5);
  swift_bridgeObjectRelease();
  v7 = v6[2];
  if (v7 != 2)
  {
    if (v7 == 1)
    {
      v24 = v6[4];
      v25 = v6[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v26 = objc_msgSend((id)objc_opt_self(), sel_stringValueType, a1, a2);
      v23 = sub_238488B4C(v26, v24, v25);
      swift_bridgeObjectRelease();

      return v23;
    }
    if (v7)
    {
      v9 = v6[4];
      v8 = v6[5];
      swift_bridgeObjectRetain();
      v10 = sub_2384880B0(v9, v8);
      swift_bridgeObjectRelease();
      if (v10)
      {
        v11 = v6[2];
        v12 = v11 != 0;
        v3 = MEMORY[0x24BEE4AF8];
        v31 = MEMORY[0x24BEE4AF8];
        if (v11 == v12)
        {
LABEL_24:
          swift_bridgeObjectRelease();
          if ((v3 & 0x8000000000000000) == 0 && (v3 & 0x4000000000000000) == 0)
            goto LABEL_26;
          goto LABEL_32;
        }
        swift_bridgeObjectRetain();
        v13 = &v6[2 * v12 + 5];
        while (v12 < v11)
        {
          if (v12 >= v6[2])
            goto LABEL_30;
          v15 = *(v13 - 1);
          v14 = *v13;
          v16 = HIBYTE(*v13) & 0xF;
          if ((*v13 & 0x2000000000000000) == 0)
            v16 = v15 & 0xFFFFFFFFFFFFLL;
          if (v16)
          {
            swift_bridgeObjectRetain();
            v17 = sub_238488B4C(v10, v15, v14);
            if (v4)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v23 = (id)v31;

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v23;
            }
            v3 = (unint64_t)v17;
            v18 = swift_bridgeObjectRelease();
            if (v3)
            {
              MEMORY[0x23B834EC4](v18);
              if (*(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_238492790();
              sub_23849279C();
              sub_238492784();
            }
          }
          ++v12;
          v13 += 2;
          if (v11 == v12)
          {
            swift_bridgeObjectRelease();
            v3 = v31;
            goto LABEL_24;
          }
        }
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        sub_238484098(v3);
        swift_bridgeObjectRelease();
LABEL_26:
        v27 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
        sub_238455238(0, &qword_25690B830);
        v28 = (void *)sub_238492760();
        swift_release();
        v23 = objc_msgSend(v27, sel_initWithValues_memberValueType_, v28, v10);

        return v23;
      }
    }
    goto LABEL_21;
  }
  v20 = v6[4];
  v19 = v6[5];
  swift_bridgeObjectRetain();
  v10 = sub_2384880B0(v20, v19);
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v6[2] < 2uLL)
    goto LABEL_31;
  v21 = v6[6];
  v22 = v6[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = sub_238488B4C(v10, v21, v22);
  swift_bridgeObjectRelease();

  return v23;
}

id sub_238488B4C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  char v27;
  _QWORD *v28;
  id v29;
  id v30;
  char v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  char v37;
  void (*v38)(__int128 *__return_ptr);
  void *v39;
  unsigned __int8 *v40;
  uint64_t v41;
  char v42;
  char v43;
  char *v44;
  id v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  char *v53;
  id v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  id v60;
  char v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  unsigned __int8 *v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t *v72;
  uint64_t v73;
  unsigned __int8 *v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 *v78;
  unsigned int v79;
  uint64_t v80;
  unsigned __int8 *v81;
  char v82;
  char v83;
  void *v84;
  id v85;
  id v86;
  uint64_t v88;
  id v89;
  void *v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  BOOL v95;
  __int128 v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  _OWORD v100[2];

  v7 = sub_238435C24(&qword_256909AC8);
  MEMORY[0x24BDAC7A8](v7);
  v93 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_238435C24(&qword_25690AD00);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_238491DA0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v100, 0, sizeof(v100));
  *(_QWORD *)&v98 = a2;
  *((_QWORD *)&v98 + 1) = a3;
  sub_238491D94();
  sub_238436638();
  v16 = MEMORY[0x24BEE0D00];
  v17 = sub_238492958();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v20 = HIBYTE(v19) & 0xF;
  v94 = v17;
  v21 = (id)(v17 & 0xFFFFFFFFFFFFLL);
  if ((v19 & 0x2000000000000000) != 0)
    v22 = HIBYTE(v19) & 0xF;
  else
    v22 = (uint64_t)v21;
  if (!v22)
    goto LABEL_21;
  objc_opt_self();
  v23 = a1;
  if (swift_dynamicCastObjCClass())
  {
    v91 = v3;
    v92 = v19;
    v24 = (void *)objc_opt_self();
    v90 = a1;
    v25 = a1;
    v89 = v24;
    v26 = objc_msgSend(v24, sel_stringValueType);
    sub_238455238(0, &qword_25690B838);
    v27 = sub_238492904();

    if ((v27 & 1) != 0)
    {
      *((_QWORD *)&v99 + 1) = v16;

      *(_QWORD *)&v98 = v94;
      *((_QWORD *)&v98 + 1) = v92;
LABEL_12:
      sub_23843B198((uint64_t)v100, (uint64_t *)&unk_25690B7F0);
      sub_238490874((uint64_t)&v98, (uint64_t)v100, (uint64_t *)&unk_25690B7F0);
      v23 = v90;
LABEL_100:
      sub_23849072C((uint64_t)v100, (uint64_t)&v96);
      if (v97)
      {
        sub_2384456FC(&v96, &v98);
        v85 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
        sub_238438F90(&v98, *((uint64_t *)&v99 + 1));
        v86 = v23;
        v21 = objc_msgSend(v85, sel_initWithValue_valueType_, sub_238492C70(), v86);
        swift_unknownObjectRelease();

        sub_238436B3C((uint64_t)&v98);
        sub_23843B198((uint64_t)v100, (uint64_t *)&unk_25690B7F0);
        return v21;
      }
      sub_23843B198((uint64_t)v100, (uint64_t *)&unk_25690B7F0);
      sub_23843B198((uint64_t)&v96, (uint64_t *)&unk_25690B7F0);
      return 0;
    }
    v29 = v25;
    v30 = objc_msgSend(v89, sel_BOOLValueType);
    v31 = sub_238492904();

    if ((v31 & 1) != 0)
    {
      v32 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
      v33 = (void *)sub_238492610();
      swift_bridgeObjectRelease();
      v34 = objc_msgSend(v32, sel_initWithString_, v33);

      LOBYTE(v33) = objc_msgSend(v34, sel_BOOLValue);
      *((_QWORD *)&v99 + 1) = MEMORY[0x24BEE1328];

      LOBYTE(v98) = (_BYTE)v33;
      goto LABEL_12;
    }
    v35 = v29;
    v36 = objc_msgSend(v89, sel_intValueType);
    v37 = sub_238492904();

    if ((v37 & 1) != 0)
    {
      v39 = v35;
      if ((v92 & 0x1000000000000000) != 0)
      {
        v81 = sub_23848C024(v94, v92, 10);
        v83 = v82;
        swift_bridgeObjectRelease();
        if ((v83 & 1) == 0)
        {
          v41 = (uint64_t)v81;
          v23 = v90;
          goto LABEL_72;
        }
        v23 = v90;
        goto LABEL_97;
      }
      v23 = v90;
      if ((v92 & 0x2000000000000000) == 0)
      {
        if ((v94 & 0x1000000000000000) != 0)
        {
          v40 = (unsigned __int8 *)((v92 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else
        {
          v40 = (unsigned __int8 *)sub_238492AC0();
          v21 = v84;
        }
        v41 = (uint64_t)sub_23848C6B4(v40, (uint64_t)v21, 10);
        v43 = v42 & 1;
LABEL_71:
        swift_bridgeObjectRelease();
        if ((v43 & 1) == 0)
        {
LABEL_72:
          *((_QWORD *)&v99 + 1) = MEMORY[0x24BEE1768];

          *(_QWORD *)&v98 = v41;
          goto LABEL_73;
        }
LABEL_97:
        sub_23843B198((uint64_t)v100, (uint64_t *)&unk_25690B7F0);

        goto LABEL_98;
      }
      *(_QWORD *)&v98 = v94;
      *((_QWORD *)&v98 + 1) = v92 & 0xFFFFFFFFFFFFFFLL;
      if (v94 == 43)
      {
        if (!v20)
        {
LABEL_108:
          __break(1u);
          goto LABEL_109;
        }
        if (v20 != 1 && (BYTE1(v94) - 48) <= 9u)
        {
          v41 = (BYTE1(v94) - 48);
          if (v20 == 2)
            goto LABEL_70;
          if ((BYTE2(v94) - 48) <= 9u)
          {
            v41 = 10 * (BYTE1(v94) - 48) + (BYTE2(v94) - 48);
            v66 = v20 - 3;
            if (v20 != 3)
            {
              v67 = (unsigned __int8 *)&v98 + 3;
              while (1)
              {
                v68 = *v67 - 48;
                if (v68 > 9)
                  goto LABEL_61;
                v69 = 10 * v41;
                if ((unsigned __int128)(v41 * (__int128)10) >> 64 != (10 * v41) >> 63)
                  goto LABEL_61;
                v41 = v69 + v68;
                if (__OFADD__(v69, v68))
                  goto LABEL_61;
                v43 = 0;
                ++v67;
                if (!--v66)
                  goto LABEL_71;
              }
            }
            goto LABEL_70;
          }
        }
      }
      else
      {
        if (v94 == 45)
        {
          if (v20)
          {
            if (v20 == 1 || (BYTE1(v94) - 48) > 9u)
              goto LABEL_61;
            if (v20 == 2)
            {
              v43 = 0;
              v41 = -(uint64_t)(BYTE1(v94) - 48);
              goto LABEL_71;
            }
            if ((BYTE2(v94) - 48) > 9u)
              goto LABEL_61;
            v41 = -10 * (BYTE1(v94) - 48) - (BYTE2(v94) - 48);
            v77 = v20 - 3;
            if (v20 != 3)
            {
              v78 = (unsigned __int8 *)&v98 + 3;
              while (1)
              {
                v79 = *v78 - 48;
                if (v79 > 9)
                  goto LABEL_61;
                v80 = 10 * v41;
                if ((unsigned __int128)(v41 * (__int128)10) >> 64 != (10 * v41) >> 63)
                  goto LABEL_61;
                v41 = v80 - v79;
                if (__OFSUB__(v80, v79))
                  goto LABEL_61;
                v43 = 0;
                ++v78;
                if (!--v77)
                  goto LABEL_71;
              }
            }
LABEL_70:
            v43 = 0;
            goto LABEL_71;
          }
          __break(1u);
          goto LABEL_108;
        }
        if (v20 && (v94 - 48) <= 9u)
        {
          v41 = (v94 - 48);
          if (v20 == 1)
            goto LABEL_70;
          if ((BYTE1(v94) - 48) <= 9u)
          {
            v41 = 10 * (v94 - 48) + (BYTE1(v94) - 48);
            v73 = v20 - 2;
            if (v20 != 2)
            {
              v74 = (unsigned __int8 *)&v98 + 2;
              while (1)
              {
                v75 = *v74 - 48;
                if (v75 > 9)
                  goto LABEL_61;
                v76 = 10 * v41;
                if ((unsigned __int128)(v41 * (__int128)10) >> 64 != (10 * v41) >> 63)
                  goto LABEL_61;
                v41 = v76 + v75;
                if (__OFADD__(v76, v75))
                  goto LABEL_61;
                v43 = 0;
                ++v74;
                if (!--v73)
                  goto LABEL_71;
              }
            }
            goto LABEL_70;
          }
        }
      }
LABEL_61:
      v41 = 0;
      v43 = 1;
      goto LABEL_71;
    }
    v44 = (char *)v35;
    v45 = objc_msgSend(v89, sel_doubleValueType);
    v46 = sub_238492904();

    if ((v46 & 1) != 0)
    {
      v11 = v44;
      *(_QWORD *)&v96 = 0;
      v48 = MEMORY[0x24BDAC7A8](v47);
      *(&v88 - 2) = (uint64_t)&v96;
      v49 = v92;
      if ((v92 & 0x1000000000000000) != 0 || !(v92 & 0x2000000000000000 | v94 & 0x1000000000000000))
      {
        sub_238492A6C();
        swift_bridgeObjectRelease();
        v23 = v90;
        goto LABEL_64;
      }
      MEMORY[0x24BDAC7A8](v48);
      v38 = (void (*)(__int128 *__return_ptr))sub_238490774;
      *(&v88 - 2) = (uint64_t)sub_238490774;
      *(&v88 - 1) = (uint64_t)(&v88 - 4);
      v23 = v90;
      if ((v49 & 0x2000000000000000) != 0)
      {
        *(_QWORD *)&v98 = v50;
        *((_QWORD *)&v98 + 1) = v49 & 0xFFFFFFFFFFFFFFLL;
        v52 = (v50 > 0x20u || ((0x100003E01uLL >> v50) & 1) == 0)
           && (v65 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
           && *v65 == 0;
        goto LABEL_63;
      }
      if ((v50 & 0x1000000000000000) != 0)
      {
        v51 = (v92 & 0xFFFFFFFFFFFFFFFLL) + 32;
      }
      else
      {
        v51 = sub_238492AC0();
        v38 = (void (*)(__int128 *__return_ptr))*(&v88 - 2);
        if (!v51)
        {
LABEL_109:
          v38(&v98);
          v52 = v98;
          v23 = v90;
          goto LABEL_63;
        }
        v23 = v90;
      }
      ((void (*)(__int128 *__return_ptr, uint64_t))v38)(&v98, v51);
      v52 = v98;
LABEL_63:
      v95 = v52;
      swift_bridgeObjectRelease();
LABEL_64:
      if (v95)
      {
        v70 = v96;
        *((_QWORD *)&v99 + 1) = MEMORY[0x24BEE13C8];

        *(_QWORD *)&v98 = v70;
LABEL_73:
        sub_23843B198((uint64_t)v100, (uint64_t *)&unk_25690B7F0);
        goto LABEL_99;
      }
      sub_23843B198((uint64_t)v100, (uint64_t *)&unk_25690B7F0);

LABEL_98:
      v98 = 0u;
      v99 = 0u;
      goto LABEL_99;
    }
    v53 = v44;
    v54 = objc_msgSend(v89, sel_dateValueType);
    v55 = sub_238492904();

    if ((v55 & 1) != 0)
    {
      sub_238489704(v94, v92, v11);
      swift_bridgeObjectRelease();
      v56 = sub_238491F98();
      v57 = *(_QWORD *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v11, 1, v56) == 1)
      {
        sub_23843B198((uint64_t)v100, (uint64_t *)&unk_25690B7F0);

        v58 = &qword_25690AD00;
        v59 = (uint64_t)v11;
LABEL_42:
        sub_23843B198(v59, v58);
        v98 = 0u;
        v99 = 0u;
        v23 = v90;
        goto LABEL_99;
      }
      *((_QWORD *)&v99 + 1) = v56;
      v71 = sub_2384718A0((uint64_t *)&v98);
      (*(void (**)(uint64_t *, char *, uint64_t))(v57 + 32))(v71, v11, v56);
    }
    else
    {
      v53 = v53;
      v60 = objc_msgSend(v89, sel_URLValueType);
      v61 = sub_238492904();

      if ((v61 & 1) == 0)
      {
        sub_23843B198((uint64_t)v100, (uint64_t *)&unk_25690B7F0);
        swift_bridgeObjectRelease();

        return 0;
      }
      v62 = v93;
      sub_238491EB4();
      swift_bridgeObjectRelease();
      v63 = sub_238491ECC();
      v64 = *(_QWORD *)(v63 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63) == 1)
      {
        sub_23843B198((uint64_t)v100, (uint64_t *)&unk_25690B7F0);

        v58 = &qword_256909AC8;
        v59 = (uint64_t)v62;
        goto LABEL_42;
      }
      *((_QWORD *)&v99 + 1) = v63;
      v72 = sub_2384718A0((uint64_t *)&v98);
      (*(void (**)(uint64_t *, char *, uint64_t))(v64 + 32))(v72, v62, v63);
    }

    sub_23843B198((uint64_t)v100, (uint64_t *)&unk_25690B7F0);
    v23 = v90;
    goto LABEL_99;
  }
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
    {
      *((_QWORD *)&v99 + 1) = v16;
      *(_QWORD *)&v98 = v94;
      *((_QWORD *)&v98 + 1) = v19;
      sub_23843B198((uint64_t)v100, (uint64_t *)&unk_25690B7F0);
LABEL_99:
      sub_238490874((uint64_t)&v98, (uint64_t)v100, (uint64_t *)&unk_25690B7F0);
      goto LABEL_100;
    }
LABEL_21:
    sub_23843B198((uint64_t)v100, (uint64_t *)&unk_25690B7F0);
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRelease();
  sub_23847C89C();
  swift_allocError();
  *v28 = 0xD000000000000074;
  v28[1] = 0x8000000238499F10;
  swift_willThrow();
  sub_23843B198((uint64_t)v100, (uint64_t *)&unk_25690B7F0);
  return v21;
}

id sub_238489704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  id result;
  void *v27;
  unint64_t v28;
  _QWORD *v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  _QWORD v40[2];
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  _QWORD v47[5];

  v6 = sub_238435C24(&qword_25690AD00);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v40 - v10;
  v12 = sub_238491F98();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v15 = MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v40 - v18;
  if (!a2)
    return (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(a3, 1, 1, v12);
  v42 = v17;
  v40[0] = v16;
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
  v43 = a1;
  v44 = a2;
  v21 = (void *)sub_238492610();
  v22 = objc_msgSend(v20, sel_dateFromString_, v21);

  if (!v22)
  {
    v41 = a3;
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v25(v11, 1, 1, v12);
LABEL_7:
    sub_23843B198((uint64_t)v11, &qword_25690AD00);
    result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
    v27 = result;
    v28 = 0;
    v45 = xmmword_238496E50;
    v40[1] = &v46;
    v29 = v47;
    v46 = 0x2D4D4D2D59595959;
    v47[0] = 0xEA00000000006464;
    v47[1] = 0x73733A6D6D3A4848;
    v47[2] = 0xE800000000000000;
    v47[3] = 0xD000000000000013;
    v47[4] = 0x8000000238499F90;
    while (v28 < (unint64_t)v45)
    {
      v30 = v25;
      swift_bridgeObjectRetain();
      v31 = (void *)sub_238492610();
      swift_bridgeObjectRelease();
      objc_msgSend(v27, sel_setDateFormat_, v31);

      v32 = (void *)sub_238492610();
      v33 = objc_msgSend(v27, sel_dateFromString_, v32);

      if (v33)
      {
        v34 = v42;
        sub_238491F74();

        v35 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
        v35(v9, v34, v12);
        v25 = v30;
        v30(v9, 0, 1, v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) != 1)
        {

          swift_arrayDestroy();
          v36 = v40[0];
          v35((char *)v40[0], (uint64_t)v9, v12);
          v37 = v41;
          v35(v41, v36, v12);
          v38 = v37;
          goto LABEL_16;
        }
      }
      else
      {
        v25 = v30;
        v30(v9, 1, 1, v12);
      }
      ++v28;
      result = (id)sub_23843B198((uint64_t)v9, &qword_25690AD00);
      v29 += 2;
      if (v28 == 3)
      {
        swift_arrayDestroy();

        v38 = v41;
        v39 = 1;
        return (id)((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v25)(v38, v39, 1, v12);
      }
    }
    __break(1u);
    return result;
  }
  v23 = v42;
  sub_238491F74();

  v24 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
  v24(v11, v23, v12);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v25(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v41 = a3;
    goto LABEL_7;
  }
  v24(v19, (uint64_t)v11, v12);
  v24(a3, (uint64_t)v19, v12);
  v38 = a3;
LABEL_16:
  v39 = 0;
  return (id)((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v25)(v38, v39, 1, v12);
}

void *sub_238489B84(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v19[5];
  void *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v4)
  {
    sub_23847C89C();
    swift_allocError();
    *v11 = 0xD000000000000022;
    v11[1] = 0x800000023849A010;
    goto LABEL_7;
  }
  v2 = v3;
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x23B835098](a1, a2);
  sub_23848A640(v7, v8, v9, v10, v19);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    sub_238490874((uint64_t)v19, (uint64_t)&v20, &qword_25690B840);
    v2 = v20;
    if (v20)
    {
      v13 = v21;
      v14 = v22;
      v15 = v24;
      if ((v22 ^ v21) >= 0x4000)
      {
        v17 = v23;
        sub_238492A78();
        swift_bridgeObjectRelease();
        MEMORY[0x23B834DE0](v13, v14, v17, v15);
        sub_2384926A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2384926A0();
        sub_23847C89C();
        swift_allocError();
        *v18 = 0xD000000000000011;
        v18[1] = 0x8000000238499FD0;
        swift_willThrow();

        return v2;
      }
      goto LABEL_5;
    }
    sub_238492A78();
    swift_bridgeObjectRelease();
    sub_2384926A0();
    sub_2384926A0();
    v2 = (void *)0xD000000000000010;
    sub_23847C89C();
    swift_allocError();
    *v16 = 0xD000000000000010;
    v16[1] = 0x8000000238499FB0;
LABEL_7:
    swift_willThrow();
    return v2;
  }
LABEL_5:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_238489E00(uint64_t a1)
{
  return sub_238489E48(a1, qword_256911D10);
}

uint64_t sub_238489E24(uint64_t a1)
{
  return sub_238489E48(a1, qword_256911D28);
}

uint64_t sub_238489E48(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_238435C24(&qword_25690B878);
  sub_23843B47C(v3, a2);
  sub_238435CA4(v3, (uint64_t)a2);
  return sub_2384922BC();
}

uint64_t sub_238489EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t *v29;
  uint64_t v30;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v48 = a8;
  v49 = a5;
  v50 = a9;
  v46 = a6;
  v47 = a10;
  v15 = sub_238435C24(a6);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_238435C24(a7);
  v18 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_238491DA0();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = a1;
  v53 = a2;
  v54 = a3;
  v55 = a4;
  sub_238491D94();
  sub_2384907EC();
  v25 = sub_238492958();
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  sub_238435C24(v48);
  sub_2384922E0();
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v51);
  v29 = v47;
  if (v28 == 1)
  {
    swift_bridgeObjectRelease();
    sub_23843B198((uint64_t)v17, v46);
    v30 = sub_238435C24(v29);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v50, 1, 1, v30);
  }
  else
  {
    v32 = v20;
    v33 = v20;
    v34 = v51;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v33, v17, v51);
    v49 = sub_238435C24(v29);
    v35 = v50;
    v36 = (unint64_t *)(v50 + *(int *)(v49 + 48));
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(v50, v32, v34);
    sub_238492310();
    v38 = sub_23848A154(v37, v25, v27);
    v40 = v39;
    v42 = v41;
    v44 = v43;
    swift_bridgeObjectRelease();
    *v36 = v38;
    v36[1] = v40;
    v36[2] = v42;
    v36[3] = v44;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v32, v34);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v35, 0, 1, v49);
  }
}

unint64_t sub_23848A154(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_238492730();
  __break(1u);
  return result;
}

uint64_t sub_23848A1A0()
{
  swift_getKeyPath();
  sub_238435C24(&qword_25690B8C8);
  sub_2384922F8();
  return swift_release();
}

uint64_t sub_23848A204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  id v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  id v39;
  id v40;
  void *v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[64];
  _QWORD v53[5];
  void *v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  char v58[24];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;

  v64 = a5;
  v9 = sub_238435C24(&qword_25690B878);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_238435C24(&qword_25690B880);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_238435C24(&qword_25690B888);
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v44 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256909AB8 != -1)
    swift_once();
  v17 = sub_238435CA4(v9, (uint64_t)qword_256911D10);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v17, v9);
  sub_238489EB4(a1, a2, a3, a4, (uint64_t)v12, &qword_25690B898, &qword_25690B888, &qword_25690B878, (uint64_t)v15, &qword_25690B890);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v18 = sub_238435C24(&qword_25690B890);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v15, 1, v18) == 1)
  {
    result = sub_23843B198((uint64_t)v15, &qword_25690B880);
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0uLL;
  }
  else
  {
    v24 = (uint64_t *)&v15[*(int *)(v18 + 48)];
    v25 = *v24;
    v26 = v24[1];
    v27 = v24[2];
    v28 = v24[3];
    v29 = v45;
    v30 = v44;
    v31 = v46;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v44, v15, v46);
    sub_23848EDE0(v25, v26, v27, v28, 58, 0xE100000000000000, (uint64_t)v52);
    swift_bridgeObjectRelease();
    sub_238490874((uint64_t)v52, (uint64_t)v58, &qword_25690B850);
    v32 = v47;
    if (!v59)
      goto LABEL_10;
    v33 = v60;
    v34 = v61;
    v36 = v62;
    v35 = v63;
    swift_bridgeObjectRelease();
    sub_23848A640(v53, v33, v34, v36, v35);
    if (v32)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_238490874((uint64_t)v53, (uint64_t)&v54, &qword_25690B840);
    v37 = v54;
    if (v54)
    {
      v47 = v55;
      v38 = v30;
      v21 = v56;
      v22 = v57;
      swift_getKeyPath();
      sub_238492304();
      swift_release();
      MEMORY[0x23B834DE0](v48, v49, v50, v51);
      swift_bridgeObjectRelease();
      v39 = objc_allocWithZone(MEMORY[0x24BE5FD50]);
      v40 = v37;
      v41 = (void *)sub_238492610();
      swift_bridgeObjectRelease();
      v20 = objc_msgSend(v39, sel_initWithIdentifier_value_, v41, v40);

      result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v38, v46);
      v23 = v47;
    }
    else
    {
LABEL_10:
      result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v30, v31);
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v23 = 0uLL;
    }
  }
  v42 = v64;
  *v64 = v20;
  *(_OWORD *)(v42 + 1) = v23;
  v42[3] = v21;
  v42[4] = v22;
  return result;
}

void sub_23848A640(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  _BYTE v21[48];
  _QWORD v22[5];
  _QWORD v23[5];
  _QWORD v24[5];
  _QWORD v25[5];
  _QWORD v26[5];
  _QWORD v27[5];
  _QWORD v28[5];
  _QWORD v29[5];
  _QWORD v30[5];
  char v31[40];
  uint64_t v32[5];
  uint64_t v33[5];
  uint64_t v34[5];
  uint64_t v35[5];
  uint64_t v36[5];
  uint64_t v37[5];
  uint64_t v38[5];
  uint64_t v39[5];
  _QWORD v40[7];
  void *v41;

  sub_23848DB1C(a1, a2, a3, a4, (uint64_t)v21);
  sub_238490874((uint64_t)v21, (uint64_t)v40, &qword_25690B848);
  if (v40[1])
  {
    v11 = v40[2];
    v10 = v40[3];
    v12 = v40[4];
    v13 = v40[5];
    v14 = objc_msgSend((id)objc_opt_self(), sel_stringValueType);
    v15 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
    swift_bridgeObjectRetain();
    v16 = objc_msgSend(v15, sel_initWithValue_valueType_, sub_238492C94(), v14);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

LABEL_6:
    *a5 = v16;
    a5[1] = v11;
    a5[2] = v10;
    a5[3] = v12;
    a5[4] = v13;
    return;
  }
  sub_23848DF1C(a1, a2, a3, a4, v22);
  v20 = a3;
  v16 = (id)v22[0];
  v11 = v22[1];
  v17 = a4;
  v10 = v22[2];
  v12 = v22[3];
  v13 = v22[4];
  sub_238490874((uint64_t)v22, (uint64_t)v39, &qword_25690B840);
  if (v39[0])
    goto LABEL_6;
  v19 = (void *)v17;
  sub_23848E314(a1, a2, v20, v17, (uint64_t)v23);
  v16 = (id)v23[0];
  v11 = v23[1];
  v10 = v23[2];
  v12 = v23[3];
  v13 = v23[4];
  sub_238490874((uint64_t)v23, (uint64_t)v38, &qword_25690B840);
  v18 = v41;
  if (v38[0])
    goto LABEL_6;
  sub_23848EA58(a1, a2, v20, (uint64_t)v19, v24);
  v16 = (id)v24[0];
  v11 = v24[1];
  v10 = v24[2];
  v12 = v24[3];
  v13 = v24[4];
  sub_238490874((uint64_t)v24, (uint64_t)v37, &qword_25690B840);
  if (v37[0])
    goto LABEL_6;
  sub_23848EF7C(a1, a2, v20, (uint64_t)v19, (uint64_t)v25);
  if (!v18)
  {
    v11 = v25[1];
    v41 = (void *)v25[0];
    v10 = v25[2];
    v12 = v25[3];
    v13 = v25[4];
    sub_238490874((uint64_t)v25, (uint64_t)v36, &qword_25690B840);
    if (v36[0])
      goto LABEL_10;
    sub_23848F3AC(a1, a2, v20, (uint64_t)v19, (uint64_t)v26);
    v11 = v26[1];
    v41 = (void *)v26[0];
    v10 = v26[2];
    v12 = v26[3];
    v13 = v26[4];
    sub_238490874((uint64_t)v26, (uint64_t)v35, &qword_25690B840);
    if (v35[0])
      goto LABEL_10;
    sub_23848F7CC(a1, a2, v20, v19, (uint64_t)v27);
    v11 = v27[1];
    v41 = (void *)v27[0];
    v10 = v27[2];
    v12 = v27[3];
    v13 = v27[4];
    sub_238490874((uint64_t)v27, (uint64_t)v34, &qword_25690B840);
    if (v34[0])
      goto LABEL_10;
    sub_23848AC1C(a1, a2, v20, (uint64_t)v19, v28);
    v11 = v28[1];
    v41 = (void *)v28[0];
    v10 = v28[2];
    v12 = v28[3];
    v13 = v28[4];
    sub_238490874((uint64_t)v28, (uint64_t)v33, &qword_25690B840);
    if (v33[0]
      || (sub_23848FE08(a1, a2, v20, (uint64_t)v19, v29),
          v11 = v29[1],
          v41 = (void *)v29[0],
          v10 = v29[2],
          v12 = v29[3],
          v13 = v29[4],
          sub_238490874((uint64_t)v29, (uint64_t)v32, &qword_25690B840),
          v32[0]))
    {
LABEL_10:
      v16 = v41;
    }
    else
    {
      sub_23848B430(a1, a2, v20, (uint64_t)v19, (uint64_t)v30);
      v16 = (id)v30[0];
      v11 = v30[1];
      v10 = v30[2];
      v12 = v30[3];
      v13 = v30[4];
      sub_238490874((uint64_t)v30, (uint64_t)v31, &qword_25690B840);
    }
    goto LABEL_6;
  }
}

uint64_t sub_23848AA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[5];
  _BYTE v24[64];
  _QWORD v25[5];
  _QWORD v26[5];
  char v27[24];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = a4;
  v7 = a3;
  v8 = a2;
  v9 = a1;
  result = sub_23848A204(a1, a2, a3, a4, v23);
  if (!v5)
  {
    sub_238490874((uint64_t)v23, (uint64_t)&v33, &qword_25690B8A8);
    v12 = v33;
    if (v33)
    {
      v9 = v34;
      v8 = v35;
      v7 = v36;
      v6 = v37;
      sub_23848EDE0(v34, v35, v36, v37, 44, 0xE100000000000000, (uint64_t)v24);
      sub_238490874((uint64_t)v24, (uint64_t)v27, &qword_25690B850);
      if (!v28)
        goto LABEL_8;
      v13 = v29;
      v14 = v30;
      v21 = v31;
      v22 = v12;
      v15 = v32;
      swift_bridgeObjectRelease();
      sub_23848AA18(v25, v13, v14, v21, v15);
      swift_bridgeObjectRelease();
      sub_238490874((uint64_t)v25, (uint64_t)v26, &qword_25690B8A0);
      v17 = v26[0];
      v12 = v22;
      if (v26[0])
      {
        v9 = v26[1];
        v8 = v26[2];
        v7 = v26[3];
        v18 = v26[4];
        swift_bridgeObjectRelease();
        sub_238435C24(&qword_25690A500);
        v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = xmmword_238494ED0;
        *(_QWORD *)(v19 + 32) = v22;
        v38 = v19;
        sub_238492784();
        result = sub_23848BE54(v17, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_238484498);
        v16 = v38;
        v6 = v18;
      }
      else
      {
LABEL_8:
        sub_238435C24(&qword_25690A500);
        v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = xmmword_238494ED0;
        *(_QWORD *)(v20 + 32) = v12;
        v38 = v20;
        result = sub_238492784();
        v16 = v38;
      }
    }
    else
    {
      result = swift_bridgeObjectRetain();
      v16 = MEMORY[0x24BEE4AF8];
    }
    *a5 = v16;
    a5[1] = v9;
    a5[2] = v8;
    a5[3] = v7;
    a5[4] = v6;
  }
  return result;
}

uint64_t sub_23848AC1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  _QWORD *v40;
  char *v41;
  id v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  char *v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE v70[64];
  uint64_t v71[5];
  _BYTE v72[64];
  char v73[24];
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[5];
  char v79[24];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v64 = a5;
  *(_QWORD *)&v65 = a4;
  v8 = sub_238491FD4();
  v59 = *(_QWORD *)(v8 - 8);
  v60 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v58 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_238435C24(&qword_25690B878);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_238435C24(&qword_25690B880);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_238435C24(&qword_25690B888);
  v18 = *(_QWORD *)(v17 - 8);
  v62 = v17;
  v63 = v18;
  MEMORY[0x24BDAC7A8](v17);
  v61 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256909AC0 != -1)
    swift_once();
  v20 = sub_238435CA4(v10, (uint64_t)qword_256911D28);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v20, v10);
  sub_238489EB4(a1, a2, a3, v65, (uint64_t)v13, &qword_25690B898, &qword_25690B888, &qword_25690B878, (uint64_t)v16, &qword_25690B890);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v21 = sub_238435C24(&qword_25690B890);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v16, 1, v21) == 1)
  {
    result = sub_23843B198((uint64_t)v16, &qword_25690B880);
  }
  else
  {
    v23 = (uint64_t *)&v16[*(int *)(v21 + 48)];
    v24 = *v23;
    v25 = v23[1];
    v26 = v23[2];
    v27 = v23[3];
    v28 = v62;
    v29 = v63;
    v30 = v61;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v61, v16, v62);
    sub_23848EDE0(v24, v25, v26, v27, 40, 0xE100000000000000, (uint64_t)v70);
    swift_bridgeObjectRelease();
    sub_238490874((uint64_t)v70, (uint64_t)v79, &qword_25690B850);
    if (v80)
    {
      v31 = v81;
      v32 = v82;
      v34 = v83;
      v33 = v84;
      swift_bridgeObjectRelease();
      v35 = v85;
      sub_23848AA18(v31, v32, v34, v33, v71);
      if (v35)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v28);
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_238490874((uint64_t)v71, (uint64_t)v78, &qword_25690B8A0);
      if (v78[0])
      {
        sub_23848EDE0(v78[1], v78[2], v78[3], v78[4], 41, 0xE100000000000000, (uint64_t)v72);
        swift_bridgeObjectRelease();
        sub_238490874((uint64_t)v72, (uint64_t)v73, &qword_25690B850);
        if (v74)
        {
          v65 = v75;
          v37 = v76;
          v38 = v77;
          swift_bridgeObjectRelease();
          swift_getKeyPath();
          v85 = 0;
          sub_238492304();
          swift_release();
          MEMORY[0x23B834DE0](v66, v67, v68, v69);
          swift_bridgeObjectRelease();
          v41 = v58;
          _s23ConditionalEngineClient0A5EventV2id10Foundation4UUIDVvg_0();
          sub_238491FA4();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v41, v60);
          v42 = objc_allocWithZone(MEMORY[0x24BE5FC68]);
          v43 = (void *)sub_238492610();
          swift_bridgeObjectRelease();
          v44 = (void *)sub_238492610();
          swift_bridgeObjectRelease();
          v45 = objc_msgSend(v42, sel_initWithTypeIdentifier_instanceIdentifier_, v43, v44);

          v46 = objc_allocWithZone(MEMORY[0x24BE5FC60]);
          sub_238455238(0, &qword_25690B2C8);
          v47 = (void *)sub_238492760();
          swift_bridgeObjectRelease();
          v48 = objc_msgSend(v46, sel_initWithTransient_identifier_properties_managedAccountIdentifier_, 1, v45, v47, 0);

          swift_getKeyPath();
          v49 = v48;
          v51 = v61;
          v50 = v62;
          sub_238492304();
          swift_release();
          MEMORY[0x23B834DE0](v66, v67, v68, v69);
          swift_bridgeObjectRelease();
          v52 = objc_allocWithZone(MEMORY[0x24BE5FC90]);
          v53 = (void *)sub_238492610();
          swift_bridgeObjectRelease();
          v54 = objc_msgSend(v52, sel_initWithIdentifier_, v53);

          v55 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
          v56 = v49;
          v36 = objc_msgSend(v55, sel_initWithValue_valueType_, v56, v54);

          result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v51, v50);
          v39 = v65;
          goto LABEL_10;
        }
        (*(void (**)(char *, uint64_t))(v63 + 8))(v30, v28);
        result = swift_bridgeObjectRelease();
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v30, v28);
      }
    }
    else
    {
      result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v30, v28);
    }
  }
  v36 = 0;
  v37 = 0;
  v38 = 0;
  v39 = 0uLL;
LABEL_10:
  v40 = v64;
  *v64 = v36;
  *(_OWORD *)(v40 + 1) = v39;
  v40[3] = v37;
  v40[4] = v38;
  return result;
}

_QWORD *sub_23848B240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  _QWORD *result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  _BYTE v26[64];
  _QWORD v27[5];
  _QWORD v28[5];
  char v29[24];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  result = sub_23848A640(v25, a1, a2, a3, a4);
  if (!v5)
  {
    result = (_QWORD *)sub_238490874((uint64_t)v25, (uint64_t)&v35, &qword_25690B840);
    v8 = v35;
    if (v35)
    {
      v10 = v36;
      v9 = v37;
      v11 = v38;
      v12 = v39;
      sub_23848EDE0(v36, v37, v38, v39, 44, 0xE100000000000000, (uint64_t)v26);
      sub_238490874((uint64_t)v26, (uint64_t)v29, &qword_25690B850);
      if (v30)
      {
        v22 = v10;
        v23 = v9;
        v13 = v31;
        v14 = v32;
        v16 = v33;
        v15 = v34;
        swift_bridgeObjectRelease();
        sub_23848B240(v27, v13, v14, v16, v15);
        swift_bridgeObjectRelease();
        sub_238490874((uint64_t)v27, (uint64_t)v28, &qword_25690B858);
        v18 = v28[0];
        if (v28[0])
        {
          v10 = v28[1];
          v24 = v28[2];
          v11 = v28[3];
          v19 = v28[4];
          swift_bridgeObjectRelease();
          sub_238435C24(&qword_25690A500);
          v20 = swift_allocObject();
          *(_OWORD *)(v20 + 16) = xmmword_238494ED0;
          *(_QWORD *)(v20 + 32) = v8;
          v40 = v20;
          sub_238492784();
          result = (_QWORD *)sub_23848BE54(v18, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_238484284);
          v17 = v40;
          v12 = v19;
          v9 = v24;
          goto LABEL_10;
        }
        v10 = v22;
        v9 = v23;
      }
      sub_238435C24(&qword_25690A500);
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_238494ED0;
      *(_QWORD *)(v21 + 32) = v8;
      v40 = v21;
      result = (_QWORD *)sub_238492784();
      v17 = v40;
      goto LABEL_10;
    }
    v17 = 0;
    v10 = 0;
    v9 = 0;
    v11 = 0;
    v12 = 0;
LABEL_10:
    *a5 = v17;
    a5[1] = v10;
    a5[2] = v9;
    a5[3] = v11;
    a5[4] = v12;
  }
  return result;
}

void sub_23848B430(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  __int128 v22;
  _BYTE v23[64];
  uint64_t v24[5];
  _BYTE v25[64];
  _BYTE v26[24];
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];
  _BYTE v32[24];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_23848EDE0(a1, a2, a3, a4, 91, 0xE100000000000000, (uint64_t)v23);
  sub_238490874((uint64_t)v23, (uint64_t)v32, &qword_25690B850);
  v7 = 0uLL;
  if (!v33)
    goto LABEL_9;
  v8 = v34;
  v9 = v35;
  v10 = v36;
  v11 = v37;
  swift_bridgeObjectRelease();
  sub_23848B240(v8, v9, v10, v11, v24);
  swift_bridgeObjectRelease();
  if (v5)
    return;
  sub_238490874((uint64_t)v24, (uint64_t)v31, &qword_25690B858);
  v12 = (id)v31[0];
  if (!v31[0])
  {
LABEL_11:
    v13 = 0;
    v14 = 0;
    v7 = 0uLL;
    goto LABEL_15;
  }
  sub_23848EDE0(v31[1], v31[2], v31[3], v31[4], 93, 0xE100000000000000, (uint64_t)v25);
  swift_bridgeObjectRelease();
  sub_238490874((uint64_t)v25, (uint64_t)v26, &qword_25690B850);
  if (!v27)
  {
    swift_bridgeObjectRelease();
    v12 = 0;
    goto LABEL_11;
  }
  v22 = v28;
  v13 = v29;
  v14 = v30;
  swift_bridgeObjectRelease();
  v15 = sub_238487B78((unint64_t)v12);
  v16 = sub_2384903B8(v15);
  swift_bridgeObjectRelease();
  if ((v16 & 0xC000000000000001) != 0)
  {
    if (sub_2384929F4() == 1)
      goto LABEL_7;
LABEL_13:
    sub_23848418C(v16);
    swift_bridgeObjectRelease();
    v18 = objc_allocWithZone(MEMORY[0x24BE5FBE0]);
    sub_238455238(0, &qword_25690B300);
    v19 = (void *)sub_238492760();
    swift_release();
    v17 = objc_msgSend(v18, sel_initWithMemberValueTypes_, v19);

    goto LABEL_14;
  }
  if (*(_QWORD *)(v16 + 16) != 1)
    goto LABEL_13;
LABEL_7:
  v17 = (id)sub_238487CB8(v16);
  swift_bridgeObjectRelease();
  if (v17)
  {
LABEL_14:
    v20 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
    sub_238455238(0, &qword_25690B830);
    v21 = (void *)sub_238492760();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v20, sel_initWithValues_memberValueType_, v21, v17);

    v7 = v22;
    goto LABEL_15;
  }
  __break(1u);
LABEL_9:
  v12 = 0;
  v13 = 0;
  v14 = 0;
LABEL_15:
  *(_QWORD *)a5 = v12;
  *(_OWORD *)(a5 + 8) = v7;
  *(_QWORD *)(a5 + 24) = v13;
  *(_QWORD *)(a5 + 32) = v14;
}

_QWORD *sub_23848B6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_238435C24(&qword_256909BC0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23848B734(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_238492700();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x23B834E4C](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_23848B7AC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23848B800(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23848B7C8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23848B968(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23848B7E4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23848BB0C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23848B800(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_238435C24(&qword_25690B290);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_238492B5C();
  __break(1u);
  return result;
}

uint64_t sub_23848B968(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_238435C24(&qword_25690B908);
    v10 = (_QWORD *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_238435C24(&qword_25690B910);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_238492B5C();
  __break(1u);
  return result;
}

uint64_t sub_23848BB0C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_238435C24(&qword_25690B2A8);
  v10 = *(_QWORD *)(type metadata accessor for ScheduledQuery() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for ScheduledQuery() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_238492B5C();
  __break(1u);
  return result;
}

uint64_t sub_23848BCEC(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_2384750C4(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = type metadata accessor for ScheduledQuery();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_238492B5C();
  __break(1u);
  return result;
}

uint64_t sub_23848BE54(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_238492B2C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_238492B2C();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x23B83520C](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_238492B2C();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_238492784();
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_23848C010(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_23848C6B4(a1, a2, a3);
}

unsigned __int8 *sub_23848C024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_238492724();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_23848C108();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_238492AC0();
  }
LABEL_7:
  v11 = sub_23848C6B4(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_23848C108()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_238492730();
  v4 = sub_23848C184(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_23848C184(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_23848C2C8(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_23848B6D0(v9, 0);
      v12 = sub_23848C3B4((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x23B834DF8](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x23B834DF8);
LABEL_9:
      sub_238492AC0();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x23B834DF8]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_23848C2C8(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_23848B734(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_23848B734(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_2384926E8();
  }
  __break(1u);
  return result;
}

unint64_t sub_23848C3B4(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_23848B734(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_2384926F4();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_238492AC0();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_23848B734(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_2384926D0();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unsigned __int8 *sub_23848C5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  sub_2384908B8();
  swift_bridgeObjectRetain();
  v7 = sub_238492724();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_23848C108();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_238492AC0();
  }
LABEL_7:
  v13 = sub_23848C6B4(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_23848C6B4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  v13 = 0;
                  if (v11 < 0x61 || v11 >= v8)
                    return (unsigned __int8 *)v13;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v23 = a3 + 48;
      v24 = a3 + 55;
      v25 = a3 + 87;
      if (a3 > 10)
      {
        v23 = 58;
      }
      else
      {
        v25 = 97;
        v24 = 65;
      }
      if (result)
      {
        v26 = 0;
        do
        {
          v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              v13 = 0;
              if (v27 < 0x61 || v27 >= v25)
                return (unsigned __int8 *)v13;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
            return 0;
          v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v15 = a2 - 1;
  if (a2 == 1)
    return 0;
  v16 = a3 + 48;
  v17 = a3 + 55;
  v18 = a3 + 87;
  if (a3 > 10)
  {
    v16 = 58;
  }
  else
  {
    v18 = 97;
    v17 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v19 = result + 1;
  do
  {
    v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        v13 = 0;
        if (v20 < 0x61 || v20 >= v18)
          return (unsigned __int8 *)v13;
        v21 = -87;
      }
      else
      {
        v21 = -55;
      }
    }
    else
    {
      v21 = -48;
    }
    v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21)))
      return 0;
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_23848C930(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_238492A00();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_238455238(0, &qword_25690B300);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_2384929F4();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_23848CBCC(v7, result + 1);
    v27 = v21;
    if (*(_QWORD *)(v21 + 24) <= *(_QWORD *)(v21 + 16))
    {
      v25 = v8;
      sub_23848CDC0();
      v22 = v27;
    }
    else
    {
      v22 = v21;
      v23 = v8;
    }
    sub_23848D05C((uint64_t)v8, v22);
    *v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_2384928F8();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_238455238(0, &qword_25690B300);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_238492904();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_238492904();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_23848D0DC((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_23848CBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    sub_238435C24(&qword_25690B860);
    v2 = sub_238492A54();
    v14 = v2;
    sub_2384929C4();
    if (sub_238492A18())
    {
      sub_238455238(0, &qword_25690B300);
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_23848CDC0();
          v2 = v14;
        }
        result = sub_2384928F8();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_238492A18());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t sub_23848CDC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  sub_238435C24(&qword_25690B860);
  v3 = sub_238492A48();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v28 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v28;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      result = sub_2384928F8();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_23848D05C(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_2384928F8();
  result = sub_2384929AC();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void sub_23848D0DC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_23848CDC0();
  }
  else
  {
    if (v7 > v6)
    {
      sub_23848D260();
      goto LABEL_14;
    }
    sub_23848D408();
  }
  v8 = *v3;
  v9 = sub_2384928F8();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_238455238(0, &qword_25690B300);
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_238492904();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_238492CA0();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_238492904();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

id sub_23848D260()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_238435C24(&qword_25690B860);
  v2 = *v0;
  v3 = sub_238492A3C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23848D408()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  sub_238435C24(&qword_25690B860);
  v3 = sub_238492A48();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = sub_2384928F8();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23848D680(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t result;
  char v13;
  _QWORD v14[2];
  char v15;

  if ((a4 & 0x1000000000000000) != 0)
  {
    result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    v11 = (_QWORD *)sub_238492AC0();
  }
  result = sub_23848E634((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

void sub_23848D750(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  void *v16;

  v6 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_2384929DC() == *(_DWORD *)(a4 + 36))
      {
        sub_2384929E8();
        sub_238455238(0, &qword_25690B300);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v4 = v16;
        swift_unknownObjectRelease();
        v8 = sub_2384928F8();
        v9 = -1 << *(_BYTE *)(a4 + 32);
        v6 = v8 & ~v9;
        if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
        {
          v10 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          v11 = sub_238492904();

          if ((v11 & 1) == 0)
          {
            v12 = ~v9;
            do
            {
              v6 = (v6 + 1) & v12;
              if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
                goto LABEL_24;
              v13 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
              v14 = sub_238492904();

            }
            while ((v14 & 1) == 0);
          }

LABEL_20:
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v7 = a4;
  else
    v7 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x23B83517C](a1, a2, v7);
  sub_238455238(0, &qword_25690B300);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_23848D9B8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23848DA40()
{
  id v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v1 = objc_msgSend(v0, sel_environment);

  v2 = sub_2384925D4();
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_238442128(0xD000000000000011, 0x800000023849A150), (v4 & 1) != 0))
  {
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v3);
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = 58;
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23848DB1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  *(_QWORD *)&v38 = a4;
  v9 = sub_238435C24(&qword_25690B8C0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_238435C24(&qword_25690B8C8);
  v41 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v36 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_238435C24(&qword_25690B8D0);
  v39 = *(_QWORD *)(v13 - 8);
  v40 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v34 - v17;
  sub_238435C24(&qword_25690B8D8);
  sub_2384922BC();
  sub_238489EB4(a1, a2, a3, v38, (uint64_t)v18, &qword_25690B900, &qword_25690B8C8, &qword_25690B8D0, (uint64_t)v11, &qword_25690B8E0);
  v19 = sub_238435C24(&qword_25690B8E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v11, 1, v19) == 1)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v40);
    result = sub_23843B198((uint64_t)v11, &qword_25690B8C0);
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = 0uLL;
  }
  else
  {
    v26 = &v11[*(int *)(v19 + 48)];
    v38 = *(_OWORD *)v26;
    v28 = *((_QWORD *)v26 + 2);
    v27 = *((_QWORD *)v26 + 3);
    v35 = v28;
    v34 = v27;
    v29 = v36;
    v30 = v37;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v36, v11, v37);
    swift_getKeyPath();
    sub_2384922F8();
    swift_release();
    v42 = v45;
    v43 = v46;
    v44 = v47;
    sub_2384922BC();
    sub_2384908FC();
    sub_238490940();
    sub_238455270(&qword_25690B8F8, &qword_25690B8D0, MEMORY[0x24BEE7460]);
    v31 = v40;
    sub_238492844();
    v32 = *(void (**)(char *, uint64_t))(v39 + 8);
    v32(v16, v31);
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x23B834DE0](v48, v49, v50, v51);
    v22 = v33;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v29, v30);
    result = ((uint64_t (*)(char *, uint64_t))v32)(v18, v31);
    v24 = v34;
    v25 = v38;
    v23 = v35;
  }
  *(_QWORD *)a5 = v21;
  *(_QWORD *)(a5 + 8) = v22;
  *(_OWORD *)(a5 + 16) = v25;
  *(_QWORD *)(a5 + 32) = v23;
  *(_QWORD *)(a5 + 40) = v24;
  return result;
}

uint64_t sub_23848DEB4(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;

  if ((a2 & 0x2000000000000000) != 0)
    v7 = HIBYTE(a2) & 0xF;
  else
    v7 = a1 & 0xFFFFFFFFFFFFLL;
  if (a1 == a5 && a2 == a6 && !(a3 >> 16) && v7 == a4 >> 16)
    return 1;
  else
    return sub_238492C58() & 1;
}

uint64_t sub_23848DF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  char v34;
  id v35;
  id v36;
  uint64_t v37;
  __int128 v38;
  _QWORD *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v44 = a5;
  v9 = sub_238435C24(&qword_25690B878);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_238435C24(&qword_25690B880);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_238435C24(&qword_25690B888);
  v17 = *(_QWORD *)(v16 - 8);
  v42 = v16;
  v43 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256909AB8 != -1)
    swift_once();
  v20 = sub_238435CA4(v9, (uint64_t)qword_256911D10);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v20, v9);
  sub_238489EB4(a1, a2, a3, a4, (uint64_t)v12, &qword_25690B898, &qword_25690B888, &qword_25690B878, (uint64_t)v15, &qword_25690B890);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v21 = sub_238435C24(&qword_25690B890);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
  {
    result = sub_23843B198((uint64_t)v15, &qword_25690B880);
LABEL_11:
    v33 = 0;
    v37 = 0;
    v24 = 0;
    v38 = 0uLL;
    goto LABEL_12;
  }
  v23 = &v15[*(int *)(v21 + 48)];
  v40 = *(_OWORD *)v23;
  v24 = *((_QWORD *)v23 + 3);
  v41 = *((_QWORD *)v23 + 2);
  v26 = v42;
  v25 = v43;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v19, v15, v42);
  swift_getKeyPath();
  sub_238492304();
  swift_release();
  v27 = v46;
  v28 = v47;
  v30 = v48;
  v29 = v49;
  if ((sub_23848DEB4(1702195828, 0xE400000000000000, v46, v47, v48, v49) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v31 = objc_msgSend((id)objc_opt_self(), sel_BOOLValueType);
    v32 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
    v45 = 1;
    v33 = objc_msgSend(v32, sel_initWithValue_valueType_, sub_238492C94(), v31);
    swift_unknownObjectRelease();

    result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v19, v26);
  }
  else
  {
    v34 = sub_23848DEB4(0x65736C6166, 0xE500000000000000, v27, v28, v30, v29);
    swift_bridgeObjectRelease();
    if ((v34 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v26);
      result = swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    v35 = objc_msgSend((id)objc_opt_self(), sel_BOOLValueType);
    v36 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
    v45 = 0;
    v33 = objc_msgSend(v36, sel_initWithValue_valueType_, sub_238492C94(), v35);
    swift_unknownObjectRelease();

    result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v26);
  }
  v37 = v41;
  v38 = v40;
LABEL_12:
  v39 = v44;
  *v44 = v33;
  *(_OWORD *)(v39 + 1) = v38;
  v39[3] = v37;
  v39[4] = v24;
  return result;
}

uint64_t sub_23848E314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t result;
  id v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char *v28;
  char v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;

  *(_QWORD *)&v37 = a4;
  v9 = sub_238435C24(&qword_25690B880);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_238435C24(&qword_25690B888);
  v35 = *(_QWORD *)(v12 - 8);
  v36 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v34 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_238435C24(&qword_25690B878);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v33 - v19;
  sub_2384922BC();
  sub_2384922EC();
  v21 = *(void (**)(char *, uint64_t))(v15 + 8);
  v21(v18, v14);
  sub_238489EB4(a1, a2, a3, v37, (uint64_t)v20, &qword_25690B898, &qword_25690B888, &qword_25690B878, (uint64_t)v11, &qword_25690B890);
  v22 = sub_238435C24(&qword_25690B890);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v11, 1, v22) == 1)
  {
    v21(v20, v14);
    result = sub_23843B198((uint64_t)v11, &qword_25690B880);
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0uLL;
LABEL_5:
    *(_QWORD *)a5 = v24;
    *(_OWORD *)(a5 + 8) = v27;
    *(_QWORD *)(a5 + 24) = v25;
    *(_QWORD *)(a5 + 32) = v26;
    return result;
  }
  v28 = &v11[*(int *)(v22 + 48)];
  v37 = *(_OWORD *)v28;
  v25 = *((_QWORD *)v28 + 2);
  v26 = *((_QWORD *)v28 + 3);
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v34, v11, v36);
  swift_getKeyPath();
  sub_238492304();
  swift_release();
  result = sub_238492808();
  if ((v29 & 1) == 0)
  {
    v30 = result;
    v31 = objc_msgSend((id)objc_opt_self(), sel_doubleValueType);
    v32 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
    v38 = v30;
    v24 = objc_msgSend(v32, sel_initWithValue_valueType_, sub_238492C94(), v31);
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v36);
    result = ((uint64_t (*)(char *, uint64_t))v21)(v20, v14);
    v27 = v37;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_23848E634(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 *v19;
  int v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unsigned int v36;
  char v37;
  uint64_t v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  uint64_t v42;
  unsigned int v43;
  char v44;
  uint64_t v45;

  v10 = a2;
  v11 = result;
  v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    result = sub_23848B734(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      v15 = a2 >> 16;
      if (v14 != v13)
        goto LABEL_6;
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0)
    v16 = HIBYTE(a5) & 0xF;
  if (v16 < a2 >> 16)
    goto LABEL_95;
  result = sub_2384926E8();
  v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    result = sub_23848B734(v10, a4, a5);
    v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    result = sub_23848B734(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0)
      goto LABEL_8;
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0)
    v17 = a4 & 0xFFFFFFFFFFFFLL;
  if (v17 < v10 >> 16)
    goto LABEL_91;
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  result = sub_2384926E8();
LABEL_21:
  v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11)
    v19 = 0;
  v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        v31 = a6 + 48;
        v32 = a6 + 55;
        v33 = a6 + 87;
        if (a6 > 10)
        {
          v31 = 58;
        }
        else
        {
          v33 = 97;
          v32 = 65;
        }
        if (v19)
        {
          v24 = 0;
          v34 = v19 + 1;
          v35 = result - 1;
          do
          {
            v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                v29 = 0;
                if (v36 < 0x61 || v36 >= v33)
                  return v29;
                v37 = -87;
              }
              else
              {
                v37 = -55;
              }
            }
            else
            {
              v37 = -48;
            }
            v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
              return 0;
            v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37)))
              return 0;
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      v39 = a6 + 48;
      v40 = a6 + 55;
      v41 = a6 + 87;
      if (a6 > 10)
      {
        v39 = 58;
      }
      else
      {
        v41 = 97;
        v40 = 65;
      }
      if (v19)
      {
        v42 = 0;
        do
        {
          v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              v29 = 0;
              if (v43 < 0x61 || v43 >= v41)
                return v29;
              v44 = -87;
            }
            else
            {
              v44 = -55;
            }
          }
          else
          {
            v44 = -48;
          }
          v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63)
            return 0;
          v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44)))
            return 0;
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      v21 = a6 + 48;
      v22 = a6 + 55;
      v23 = a6 + 87;
      if (a6 > 10)
      {
        v21 = 58;
      }
      else
      {
        v23 = 97;
        v22 = 65;
      }
      if (v19)
      {
        v24 = 0;
        v25 = v19 + 1;
        v26 = result - 1;
        while (1)
        {
          v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              v29 = 0;
              if (v27 < 0x61 || v27 >= v23)
                return v29;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
            return 0;
          v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28)))
            return 0;
          ++v25;
          if (!--v26)
            return v24;
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_23848EA58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t result;
  id v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int16 v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  char *v40;
  uint64_t (*v41)(char *, uint64_t);
  id v42;
  id v43;
  _QWORD *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  __int128 v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;

  v50 = a3;
  v51 = a4;
  v48 = a5;
  v49 = a2;
  v6 = sub_238435C24(&qword_25690B880);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_238435C24(&qword_25690B888);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_238435C24(&qword_25690B878);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v45 - v18;
  sub_2384922BC();
  sub_2384922EC();
  v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  v20(v17, v13);
  sub_238489EB4(a1, v49, v50, v51, (uint64_t)v19, &qword_25690B898, &qword_25690B888, &qword_25690B878, (uint64_t)v8, &qword_25690B890);
  v21 = sub_238435C24(&qword_25690B890);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v8, 1, v21) == 1)
  {
    v20(v19, v13);
    result = sub_23843B198((uint64_t)v8, &qword_25690B880);
    v23 = 0;
    v24 = 0;
    v25 = 0;
    v26 = 0uLL;
LABEL_8:
    v44 = v48;
    *v48 = v23;
    *(_OWORD *)(v44 + 1) = v26;
    v44[3] = v24;
    v44[4] = v25;
    return result;
  }
  v46 = v20;
  v27 = &v8[*(int *)(v21 + 48)];
  v47 = *(_OWORD *)v27;
  v28 = *((_QWORD *)v27 + 2);
  v49 = *((_QWORD *)v27 + 3);
  v50 = v28;
  v51 = v10;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  swift_getKeyPath();
  v29 = v12;
  sub_238492304();
  swift_release();
  v30 = v52;
  v31 = v53;
  v32 = v55;
  if ((v53 ^ v52) >> 14)
  {
    v33 = v9;
    v34 = v54;
    v35 = sub_23848D680(v52, v53, v54, v55, 10);
    if ((v36 & 0x100) != 0)
      v35 = (uint64_t)sub_23848C5C4(v30, v31, v34, v32, 10);
    v37 = v35;
    v38 = v36;
    result = swift_bridgeObjectRelease();
    v39 = v51;
    if ((v38 & 1) == 0)
    {
      v40 = v29;
      v41 = (uint64_t (*)(char *, uint64_t))v46;
      v42 = objc_msgSend((id)objc_opt_self(), sel_intValueType);
      v43 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
      v52 = v37;
      v23 = objc_msgSend(v43, sel_initWithValue_valueType_, sub_238492C94(), v42);
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v33);
      result = v41(v19, v13);
      v25 = v49;
      v24 = v50;
      v26 = v47;
      goto LABEL_8;
    }
  }
  else
  {
    result = swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_23848EDE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;

  v34 = a5;
  v13 = sub_238491DA0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v39 = a1;
  *((_QWORD *)&v39 + 1) = a2;
  v40 = a3;
  v41 = a4;
  sub_238491D94();
  sub_2384907EC();
  v17 = sub_238492958();
  v19 = v18;
  v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  v21 = v34;
  v20(v16, v13);
  if ((sub_23849270C() & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v22 = MEMORY[0x23B835098](v21, a6);
    v24 = v23;
    v26 = v25;
    v28 = v27;
    v37 = v17;
    v38 = v19;
    v35 = v21;
    v36 = a6;
    sub_238490830();
    sub_238492838();
    result = swift_bridgeObjectRelease();
    v30 = v39;
    v31 = v40;
    v32 = v41;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v22 = 0;
    v24 = 0;
    v26 = 0;
    v28 = 0;
    v31 = 0;
    v32 = 0;
    v30 = 0uLL;
  }
  *(_QWORD *)a7 = v22;
  *(_QWORD *)(a7 + 8) = v24;
  *(_QWORD *)(a7 + 16) = v26;
  *(_QWORD *)(a7 + 24) = v28;
  *(_OWORD *)(a7 + 32) = v30;
  *(_QWORD *)(a7 + 48) = v31;
  *(_QWORD *)(a7 + 56) = v32;
  return result;
}

uint64_t sub_23848EF7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t *v34;
  id v35;
  char *v36;
  uint64_t v37;
  id v38;
  __int128 v39;
  id v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _BYTE v45[64];
  _BYTE v46[64];
  _BYTE v47[48];
  _BYTE v48[64];
  _QWORD v49[4];
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59[24];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65[24];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v10 = sub_238435C24(&qword_25690AD00);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_238491F98();
  v42 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v41 = (char *)&v39 - v17;
  sub_23848EDE0(a1, a2, a3, a4, 1702125892, 0xE400000000000000, (uint64_t)v45);
  sub_238490874((uint64_t)v45, (uint64_t)v65, &qword_25690B850);
  result = v66;
  v19 = 0uLL;
  if (!v66)
  {
    v35 = 0;
    v29 = 0;
    v30 = 0;
    goto LABEL_10;
  }
  v20 = v67;
  v21 = v68;
  v22 = v69;
  v23 = v70;
  swift_bridgeObjectRelease();
  sub_23848EDE0(v20, v21, v22, v23, 40, 0xE100000000000000, (uint64_t)v46);
  swift_bridgeObjectRelease();
  sub_238490874((uint64_t)v46, (uint64_t)v59, &qword_25690B850);
  result = v60;
  if (!v60)
    goto LABEL_9;
  v24 = v61;
  v25 = v62;
  v26 = v63;
  v27 = v64;
  swift_bridgeObjectRelease();
  sub_23848DB1C(v24, v25, v26, v27, (uint64_t)v47);
  swift_bridgeObjectRelease();
  result = sub_238490874((uint64_t)v47, (uint64_t)&v53, &qword_25690B848);
  v28 = v54;
  if (!v54)
  {
LABEL_9:
    v35 = 0;
    v29 = 0;
    v30 = 0;
    v19 = 0uLL;
    goto LABEL_10;
  }
  v40 = v53;
  sub_23848EDE0(v55, v56, v57, v58, 41, 0xE100000000000000, (uint64_t)v48);
  swift_bridgeObjectRelease();
  sub_238490874((uint64_t)v48, (uint64_t)v49, &qword_25690B850);
  if (!v49[3])
  {
    result = swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v39 = v50;
  v29 = v51;
  v30 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_238489704((uint64_t)v40, v28, v12);
  swift_bridgeObjectRelease();
  v31 = v42;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v12, 1, v13) == 1)
  {
    swift_bridgeObjectRelease();
    sub_23843B198((uint64_t)v12, &qword_25690AD00);
    v43 = 0;
    v44 = 0xE000000000000000;
    sub_238492A78();
    swift_bridgeObjectRelease();
    v43 = 0xD000000000000015;
    v44 = 0x800000023849A0C0;
    sub_2384926A0();
    swift_bridgeObjectRelease();
    sub_2384926A0();
    v32 = v43;
    v33 = v44;
    sub_23847C89C();
    swift_allocError();
    *v34 = v32;
    v34[1] = v33;
    return swift_willThrow();
  }
  swift_bridgeObjectRelease();
  v36 = v41;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v41, v12, v13);
  v37 = v31;
  v38 = objc_msgSend((id)objc_opt_self(), sel_dateValueType);
  v40 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v16, v36, v13);
  v35 = objc_msgSend(v40, sel_initWithValue_valueType_, sub_238492C94(), v38);
  swift_unknownObjectRelease();

  result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v36, v13);
  v19 = v39;
LABEL_10:
  *(_QWORD *)a5 = v35;
  *(_OWORD *)(a5 + 8) = v19;
  *(_QWORD *)(a5 + 24) = v29;
  *(_QWORD *)(a5 + 32) = v30;
  return result;
}

uint64_t sub_23848F3AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t *v33;
  id v34;
  char *v35;
  uint64_t v36;
  id v37;
  __int128 v38;
  id v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _BYTE v44[64];
  _BYTE v45[64];
  _BYTE v46[48];
  _BYTE v47[64];
  _QWORD v48[4];
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[6];
  char v53[24];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59[24];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v10 = sub_238435C24(&qword_256909AC8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_238491ECC();
  v41 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v40 = (char *)&v38 - v17;
  sub_23848EDE0(a1, a2, a3, a4, 5001813, 0xE300000000000000, (uint64_t)v44);
  sub_238490874((uint64_t)v44, (uint64_t)v59, &qword_25690B850);
  result = v60;
  v19 = 0uLL;
  if (!v60)
  {
    v34 = 0;
    v28 = 0;
    v29 = 0;
    goto LABEL_10;
  }
  v20 = v61;
  v21 = v62;
  v22 = v63;
  v23 = v64;
  swift_bridgeObjectRelease();
  sub_23848EDE0(v20, v21, v22, v23, 40, 0xE100000000000000, (uint64_t)v45);
  swift_bridgeObjectRelease();
  sub_238490874((uint64_t)v45, (uint64_t)v53, &qword_25690B850);
  result = v54;
  if (!v54)
    goto LABEL_9;
  v24 = v55;
  v25 = v56;
  v26 = v57;
  v27 = v58;
  swift_bridgeObjectRelease();
  sub_23848DB1C(v24, v25, v26, v27, (uint64_t)v46);
  swift_bridgeObjectRelease();
  result = sub_238490874((uint64_t)v46, (uint64_t)v52, &qword_25690B848);
  if (!v52[1])
  {
LABEL_9:
    v34 = 0;
    v28 = 0;
    v29 = 0;
    v19 = 0uLL;
    goto LABEL_10;
  }
  v39 = (id)v52[0];
  sub_23848EDE0(v52[2], v52[3], v52[4], v52[5], 41, 0xE100000000000000, (uint64_t)v47);
  swift_bridgeObjectRelease();
  sub_238490874((uint64_t)v47, (uint64_t)v48, &qword_25690B850);
  if (!v48[3])
  {
    result = swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v38 = v49;
  v28 = v50;
  v29 = v51;
  swift_bridgeObjectRelease();
  sub_238491EB4();
  v30 = v41;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v12, 1, v13) == 1)
  {
    swift_bridgeObjectRelease();
    sub_23843B198((uint64_t)v12, &qword_256909AC8);
    v42 = 0;
    v43 = 0xE000000000000000;
    sub_238492A78();
    swift_bridgeObjectRelease();
    v42 = 0xD000000000000014;
    v43 = 0x800000023849A0A0;
    sub_2384926A0();
    swift_bridgeObjectRelease();
    sub_2384926A0();
    v31 = v42;
    v32 = v43;
    sub_23847C89C();
    swift_allocError();
    *v33 = v31;
    v33[1] = v32;
    return swift_willThrow();
  }
  swift_bridgeObjectRelease();
  v35 = v40;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v40, v12, v13);
  v36 = v30;
  v37 = objc_msgSend((id)objc_opt_self(), sel_URLValueType);
  v39 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v16, v35, v13);
  v34 = objc_msgSend(v39, sel_initWithValue_valueType_, sub_238492C94(), v37);
  swift_unknownObjectRelease();

  result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v35, v13);
  v19 = v38;
LABEL_10:
  *(_QWORD *)a5 = v34;
  *(_OWORD *)(a5 + 8) = v19;
  *(_QWORD *)(a5 + 24) = v28;
  *(_QWORD *)(a5 + 32) = v29;
  return result;
}

void sub_23848F7CC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  char v43;
  char *v44;
  id v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  id v59;
  __int128 v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[64];
  _BYTE v70[48];
  _BYTE v71[64];
  _QWORD v72[4];
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82[24];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;

  v88 = a4;
  v64 = a5;
  v8 = sub_238435C24(&qword_25690B878);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_238435C24(&qword_25690B880);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_238435C24(&qword_25690B888);
  v16 = *(_QWORD *)(v15 - 8);
  v62 = v15;
  v63 = v16;
  MEMORY[0x24BDAC7A8](v15);
  v61 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256909AC0 != -1)
    swift_once();
  v18 = sub_238435CA4(v8, (uint64_t)qword_256911D28);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v18, v8);
  sub_238489EB4(a1, a2, a3, (uint64_t)v88, (uint64_t)v11, &qword_25690B898, &qword_25690B888, &qword_25690B878, (uint64_t)v14, &qword_25690B890);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v19 = sub_238435C24(&qword_25690B890);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v14, 1, v19) == 1)
  {
    sub_23843B198((uint64_t)v14, &qword_25690B880);
LABEL_15:
    v55 = 0;
    v32 = 0;
    goto LABEL_16;
  }
  v20 = (uint64_t *)&v14[*(int *)(v19 + 48)];
  v21 = *v20;
  v22 = v20[1];
  v23 = v20[2];
  v24 = v20[3];
  v25 = v62;
  v26 = v63;
  v27 = v61;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v61, v14, v62);
  sub_23848EDE0(v21, v22, v23, v24, 40, 0xE100000000000000, (uint64_t)v69);
  swift_bridgeObjectRelease();
  sub_238490874((uint64_t)v69, (uint64_t)v82, &qword_25690B850);
  if (!v83)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v25);
    goto LABEL_15;
  }
  v28 = v84;
  v29 = v85;
  v31 = v86;
  v30 = v87;
  swift_bridgeObjectRelease();
  sub_23848DB1C(v28, v29, v31, v30, (uint64_t)v70);
  sub_238490874((uint64_t)v70, (uint64_t)&v76, &qword_25690B848);
  v32 = v77;
  if (!v77)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v27, v25);
    v55 = 0;
LABEL_16:
    v39 = 0;
    v57 = 0uLL;
    v56 = v64;
    goto LABEL_17;
  }
  v33 = v76;
  v34 = v79;
  *(_QWORD *)&v60 = v78;
  v36 = v80;
  v35 = v81;
  v59 = (id)objc_opt_self();
  v37 = objc_msgSend(v59, sel_stringValueType);
  v38 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v72[0] = v33;
  v72[1] = v32;
  swift_bridgeObjectRetain();
  v88 = objc_msgSend(v38, sel_initWithValue_valueType_, sub_238492C94(), v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  sub_23848EDE0(v60, v34, v36, v35, 41, 0xE100000000000000, (uint64_t)v71);
  swift_bridgeObjectRelease();
  sub_238490874((uint64_t)v71, (uint64_t)v72, &qword_25690B850);
  if (!v72[3])
  {
    (*(void (**)(char *, uint64_t))(v63 + 8))(v61, v62);

    goto LABEL_15;
  }
  v60 = v73;
  v32 = v74;
  v39 = v75;
  swift_bridgeObjectRelease();
  sub_238455238(0, &qword_25690B8B0);
  v40 = v88;
  v41 = objc_msgSend(v88, sel_valueType);
  v42 = objc_msgSend(v59, sel_stringValueType);
  v43 = sub_238492904();

  v44 = v61;
  if ((v43 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v63 + 8))(v61, v62);
    swift_bridgeObjectRelease();

    goto LABEL_15;
  }
  v45 = objc_msgSend(v40, sel_value);
  sub_238492988();
  swift_unknownObjectRelease();
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v62);
    goto LABEL_15;
  }
  sub_23849231C();
  MEMORY[0x23B834DE0](v65, v66, v67, v68);
  swift_bridgeObjectRelease();
  v46 = objc_allocWithZone(MEMORY[0x24BE5FC68]);
  v47 = (void *)sub_238492610();
  swift_bridgeObjectRelease();
  v48 = (void *)sub_238492610();
  swift_bridgeObjectRelease();
  v49 = objc_msgSend(v46, sel_initWithTypeIdentifier_instanceIdentifier_, v47, v48);

  v50 = objc_allocWithZone(MEMORY[0x24BE5FC78]);
  v51 = v49;
  v52 = objc_msgSend(v50, sel_init);
  v53 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
  v54 = v51;
  v55 = objc_msgSend(v53, sel_initWithValue_valueType_, v54, v52);

  (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v62);
  v56 = v64;
  v57 = v60;
LABEL_17:
  *(_QWORD *)v56 = v55;
  *(_OWORD *)(v56 + 8) = v57;
  *(_QWORD *)(v56 + 24) = v32;
  *(_QWORD *)(v56 + 32) = v39;
}

uint64_t sub_23848FE08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  id v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  void (*v58)(void);
  unsigned int (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE v72[64];
  char v73[24];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  *(_QWORD *)&v67 = a4;
  v66 = a5;
  v8 = sub_238435C24(&qword_25690B878);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_238435C24(&qword_25690B880);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v62 = (uint64_t)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v57 - v15;
  v64 = sub_238435C24(&qword_25690B888);
  v65 = *(_QWORD *)(v64 - 8);
  v17 = MEMORY[0x24BDAC7A8](v64);
  v63 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v57 - v19;
  if (qword_256909AB8 != -1)
    swift_once();
  v21 = sub_238435CA4(v8, (uint64_t)qword_256911D10);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v60 = v21;
  v61 = v22;
  ((void (*)(char *))v22)(v11);
  sub_238489EB4(a1, a2, a3, v67, (uint64_t)v11, &qword_25690B898, &qword_25690B888, &qword_25690B878, (uint64_t)v16, &qword_25690B890);
  v23 = *(void (**)(char *, uint64_t))(v9 + 8);
  v23(v11, v8);
  v24 = sub_238435C24(&qword_25690B890);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48);
  if (v25((uint64_t)v16, 1, v24) == 1)
  {
    v26 = (uint64_t)v16;
  }
  else
  {
    v59 = v25;
    *(_QWORD *)&v67 = v23;
    v27 = (uint64_t *)&v16[*(int *)(v24 + 48)];
    v28 = *v27;
    v29 = v27[1];
    v31 = v27[2];
    v30 = v27[3];
    v32 = v16;
    v33 = v64;
    v58 = *(void (**)(void))(v65 + 32);
    ((void (*)(char *, char *, uint64_t))v58)(v20, v32, v64);
    sub_23848EDE0(v28, v29, v31, v30, 46, 0xE100000000000000, (uint64_t)v72);
    swift_bridgeObjectRelease();
    sub_238490874((uint64_t)v72, (uint64_t)v73, &qword_25690B850);
    if (!v74)
    {
      result = (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v20, v33);
      goto LABEL_10;
    }
    v34 = v20;
    v35 = v75;
    v36 = v76;
    v37 = v77;
    v38 = v78;
    swift_bridgeObjectRelease();
    v61(v11, v60, v8);
    v39 = v62;
    sub_238489EB4(v35, v36, v37, v38, (uint64_t)v11, &qword_25690B898, &qword_25690B888, &qword_25690B878, v62, &qword_25690B890);
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v67)(v11, v8);
    if (v59(v39, 1, v24) != 1)
    {
      v46 = v39 + *(int *)(v24 + 48);
      v67 = *(_OWORD *)v46;
      v42 = *(_QWORD *)(v46 + 16);
      v43 = *(_QWORD *)(v46 + 24);
      v47 = v64;
      v58();
      swift_getKeyPath();
      sub_238492304();
      swift_release();
      v48 = MEMORY[0x23B834DE0](v68, v69, v70, v71);
      v50 = v49;
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      v51 = v34;
      sub_238492304();
      swift_release();
      MEMORY[0x23B834DE0](v68, v69, v70, v71);
      swift_bridgeObjectRelease();
      v52 = objc_allocWithZone(MEMORY[0x24BE5FCE0]);
      v53 = (void *)sub_238492610();
      swift_bridgeObjectRelease();
      v54 = objc_msgSend(v52, sel_initWithEnumerationIdentifier_, v53);

      v55 = objc_allocWithZone(MEMORY[0x24BE5FE00]);
      v68 = v48;
      v69 = v50;
      swift_bridgeObjectRetain();
      v41 = objc_msgSend(v55, sel_initWithValue_valueType_, sub_238492C94(), v54);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      v56 = *(void (**)(char *, uint64_t))(v65 + 8);
      v56(v63, v47);
      result = ((uint64_t (*)(char *, uint64_t))v56)(v51, v47);
      v44 = v67;
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v34, v64);
    v26 = v39;
  }
  result = sub_23843B198(v26, &qword_25690B880);
LABEL_10:
  v41 = 0;
  v42 = 0;
  v43 = 0;
  v44 = 0uLL;
LABEL_11:
  v45 = v66;
  *v66 = v41;
  *(_OWORD *)(v45 + 1) = v44;
  v45[3] = v42;
  v45[4] = v43;
  return result;
}

uint64_t sub_2384903B8(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void **v7;
  void *v8;
  id v9;
  uint64_t v10;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_238492B2C();
    swift_bridgeObjectRelease();
  }
  sub_238455238(0, &qword_25690B300);
  sub_2384851E8();
  result = sub_238492814();
  v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = sub_238492B2C();
    result = swift_bridgeObjectRelease();
    if (!v4)
      return v10;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v10;
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v6 = (void *)MEMORY[0x23B835200](i, a1);
        sub_23848C930(&v9, v6);

      }
    }
    else
    {
      v7 = (void **)(a1 + 32);
      do
      {
        v8 = *v7++;
        sub_23848C930(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_238490510(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = sub_238491DA0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1;
  v18 = a2;
  sub_23848DA40();
  sub_238436638();
  v8 = sub_23849297C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)sub_238487A7C(v8);
  result = swift_bridgeObjectRelease();
  if (v9[2])
  {
    v11 = v9[5];
    v17 = v9[4];
    v18 = v11;
    swift_bridgeObjectRetain();
    sub_238491D94();
    v12 = sub_238492958();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    if (v9[2] < 2uLL)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    else
    {
      v13 = v9[6];
      v14 = v9[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15 = sub_238487DC4(v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v15)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23849072C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_238435C24((uint64_t *)&unk_25690B7F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_BYTE *sub_238490774@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_2384907E0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_2384907EC()
{
  unint64_t result;

  result = qword_25690B868;
  if (!qword_25690B868)
  {
    result = MEMORY[0x23B835A40](MEMORY[0x24BEE1E38], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_25690B868);
  }
  return result;
}

unint64_t sub_238490830()
{
  unint64_t result;

  result = qword_25690B870;
  if (!qword_25690B870)
  {
    result = MEMORY[0x23B835A40](MEMORY[0x24BEE0D40], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25690B870);
  }
  return result;
}

uint64_t sub_238490874(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_238435C24(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_2384908B8()
{
  unint64_t result;

  result = qword_25690B8B8;
  if (!qword_25690B8B8)
  {
    result = MEMORY[0x23B835A40](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_25690B8B8);
  }
  return result;
}

unint64_t sub_2384908FC()
{
  unint64_t result;

  result = qword_25690B8E8;
  if (!qword_25690B8E8)
  {
    result = MEMORY[0x23B835A40](MEMORY[0x24BEE1E30], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_25690B8E8);
  }
  return result;
}

unint64_t sub_238490940()
{
  unint64_t result;

  result = qword_25690B8F0;
  if (!qword_25690B8F0)
  {
    result = MEMORY[0x23B835A40](MEMORY[0x24BEE1E28], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_25690B8F0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for InteractionMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2384909D0 + 4 * byte_238496E65[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_238490A04 + 4 * byte_238496E60[v4]))();
}

uint64_t sub_238490A04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_238490A0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x238490A14);
  return result;
}

uint64_t sub_238490A20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x238490A28);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_238490A2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_238490A34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InteractionMode()
{
  return &type metadata for InteractionMode;
}

uint64_t sub_238490A50()
{
  return sub_238455270(&qword_25690B918, &qword_25690B920, MEMORY[0x24BEE12E0]);
}

unint64_t sub_238490A80()
{
  unint64_t result;

  result = qword_25690B928;
  if (!qword_25690B928)
  {
    result = MEMORY[0x23B835A40](&unk_238496FE8, &type metadata for InteractionMode);
    atomic_store(result, (unint64_t *)&qword_25690B928);
  }
  return result;
}

unint64_t sub_238490AC4()
{
  unint64_t result;

  result = qword_25690B930;
  if (!qword_25690B930)
  {
    result = MEMORY[0x23B835A40](&unk_238496F70, &type metadata for InteractionMode);
    atomic_store(result, (unint64_t *)&qword_25690B930);
  }
  return result;
}

uint64_t sub_238490B08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v6;
  char v8;
  char v10;
  char v11;
  char v12;

  v3 = 0;
  if (*(_QWORD *)"unknown" == a1 && *(_QWORD *)"" == a2)
    goto LABEL_13;
  v6 = sub_238492C7C();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    return v3;
  v3 = 1;
  if (*(_QWORD *)"displayFdisplayOvoiceForvoiceOnl" == a1 && a2 == 0xEE0064726177726FLL)
    goto LABEL_13;
  v8 = sub_238492C7C();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    return v3;
  v3 = 2;
  if (*(_QWORD *)"displayOvoiceForvoiceOnl" == a1 && a2 == 0xEB00000000796C6ELL)
    goto LABEL_13;
  v10 = sub_238492C7C();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
    return v3;
  v3 = 3;
  if (*(_QWORD *)"voiceForvoiceOnl" == a1 && a2 == 0xEC00000064726177)
    goto LABEL_13;
  v11 = sub_238492C7C();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
    return v3;
  v3 = 4;
  if (*(_QWORD *)"voiceOnl" == a1 && a2 == 0xE900000000000079)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v3;
  }
  v12 = sub_238492C7C();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    return 4;
  else
    return 5;
}

uint64_t sub_238490CDC()
{
  return 0x4679616C70736964;
}

id LocationManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void LocationManager.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  void *v11;
  id v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_super v21;
  uint64_t v22;

  v20 = sub_2384928A4();
  v1 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_238492898();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_238492598();
  MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)&v0[OBJC_IVAR____TtC23ConditionalEngineClient15LocationManager_manager] = 0;
  v19 = OBJC_IVAR____TtC23ConditionalEngineClient15LocationManager_queue;
  sub_238455238(0, (unint64_t *)&unk_25690B950);
  v6 = v0;
  sub_23849258C();
  v22 = MEMORY[0x24BEE4AF8];
  sub_238490FD8();
  sub_238435C24((uint64_t *)&unk_25690B960);
  sub_238491020();
  sub_238492994();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v20);
  *(_QWORD *)&v0[v19] = sub_2384928B0();
  v7 = &v6[OBJC_IVAR____TtC23ConditionalEngineClient15LocationManager_locationContinuation];
  v8 = sub_238435C24((uint64_t *)&unk_25690B978);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);

  v9 = (objc_class *)type metadata accessor for LocationManager();
  v21.receiver = v6;
  v21.super_class = v9;
  v10 = (char *)objc_msgSendSuper2(&v21, sel_init);
  v11 = *(void **)&v10[OBJC_IVAR____TtC23ConditionalEngineClient15LocationManager_queue];
  v12 = objc_allocWithZone(MEMORY[0x24BDBFA88]);
  v13 = v10;
  v14 = v11;
  v15 = (void *)sub_238492610();
  v16 = objc_msgSend(v12, sel_initWithEffectiveBundleIdentifier_delegate_onQueue_, v15, v13, v14);

  if (v16)
  {

    v17 = *(void **)&v13[OBJC_IVAR____TtC23ConditionalEngineClient15LocationManager_manager];
    *(_QWORD *)&v13[OBJC_IVAR____TtC23ConditionalEngineClient15LocationManager_manager] = v16;

  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_238490FD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25690A940;
  if (!qword_25690A940)
  {
    v1 = sub_238492898();
    result = MEMORY[0x23B835A40](MEMORY[0x24BEE5698], v1);
    atomic_store(result, (unint64_t *)&qword_25690A940);
  }
  return result;
}

unint64_t sub_238491020()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25690A950;
  if (!qword_25690A950)
  {
    v1 = sub_238439040((uint64_t *)&unk_25690B960);
    result = MEMORY[0x23B835A40](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_25690A950);
  }
  return result;
}

uint64_t type metadata accessor for LocationManager()
{
  uint64_t result;

  result = qword_25690B9B8;
  if (!qword_25690B9B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2384910C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = OBJC_IVAR____TtC23ConditionalEngineClient15LocationManager_manager;
  result = *(_QWORD *)(v0 + OBJC_IVAR____TtC23ConditionalEngineClient15LocationManager_manager);
  if (result)
  {
    if (objc_msgSend((id)result, sel_authorizationStatus) == 3)
      return 1;
    result = *(_QWORD *)(v0 + v1);
    if (result)
      return objc_msgSend((id)result, sel_authorizationStatus) == 4;
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_238491134()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_23849114C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  sub_238435C24(&qword_25690B988);
  *v3 = v0;
  v3[1] = sub_2384911FC;
  return sub_238492C88();
}

uint64_t sub_2384911FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_238491268()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_23849129C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id result;
  uint64_t v11;

  v4 = sub_238435C24((uint64_t *)&unk_25690B9E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_238435C24((uint64_t *)&unk_25690B978);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v9 = a2 + OBJC_IVAR____TtC23ConditionalEngineClient15LocationManager_locationContinuation;
  swift_beginAccess();
  sub_238491C98((uint64_t)v6, v9);
  swift_endAccess();
  result = *(id *)(a2 + OBJC_IVAR____TtC23ConditionalEngineClient15LocationManager_manager);
  if (result)
    return objc_msgSend(result, sel_requestLocation);
  __break(1u);
  return result;
}

uint64_t sub_2384913A0(uint64_t a1, unint64_t a2)
{
  return sub_238491508(a2);
}

uint64_t sub_238491420(uint64_t a1, void *a2)
{
  return sub_238491780(a2);
}

id LocationManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocationManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_238491500(uint64_t a1)
{
  uint64_t v1;

  return sub_23849129C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_238491508(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  id v18;
  uint64_t v19;

  v2 = v1;
  v4 = sub_238435C24((uint64_t *)&unk_25690B978);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_238435C24((uint64_t *)&unk_25690B9E0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569099F8 != -1)
    swift_once();
  v11 = sub_238492574();
  sub_238435CA4(v11, (uint64_t)qword_256909F48);
  v12 = sub_23849255C();
  v13 = sub_238492880();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_238433000, v12, v13, "Location update", v14, 2u);
    MEMORY[0x23B835AF4](v14, -1, -1);
  }

  v15 = v2 + OBJC_IVAR____TtC23ConditionalEngineClient15LocationManager_locationContinuation;
  swift_beginAccess();
  sub_238491C50(v15, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
    return sub_238491C10((uint64_t)v10);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  sub_238491C10((uint64_t)v10);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_238492B2C();
    v17 = result;
    if (!result)
      goto LABEL_13;
  }
  else
  {
    v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v17)
    {
LABEL_13:
      swift_bridgeObjectRelease();
      v19 = v17;
      sub_2384927C0();
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    v18 = (id)MEMORY[0x23B835200](0, a1);
    goto LABEL_12;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v18 = *(id *)(a1 + 32);
LABEL_12:
    v17 = (uint64_t)v18;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_238491780(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint8_t *v21;
  uint64_t v22;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;

  v2 = v1;
  v4 = sub_238435C24((uint64_t *)&unk_25690B978);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_238435C24((uint64_t *)&unk_25690B9E0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2569099F8 != -1)
    swift_once();
  v11 = sub_238492574();
  sub_238435CA4(v11, (uint64_t)qword_256909F48);
  v12 = a1;
  v13 = a1;
  v14 = sub_23849255C();
  v15 = sub_238492868();
  if (os_log_type_enabled(v14, v15))
  {
    v28 = v5;
    v16 = swift_slowAlloc();
    v27 = v2;
    v17 = (uint8_t *)v16;
    v26 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v17 = 138412290;
    v18 = a1;
    v19 = _swift_stdlib_bridgeErrorToNSError();
    v30 = v19;
    sub_238492934();
    v20 = v26;
    *v26 = v19;
    v5 = v28;

    _os_log_impl(&dword_238433000, v14, v15, "Location error: %@", v17, 0xCu);
    sub_238435C24(&qword_25690A290);
    swift_arrayDestroy();
    MEMORY[0x23B835AF4](v20, -1, -1);
    v21 = v17;
    v2 = v27;
    MEMORY[0x23B835AF4](v21, -1, -1);
  }
  else
  {

  }
  v22 = v2 + OBJC_IVAR____TtC23ConditionalEngineClient15LocationManager_locationContinuation;
  swift_beginAccess();
  sub_238491C50(v22, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
    return sub_238491C10((uint64_t)v10);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  sub_238491C10((uint64_t)v10);
  v29 = a1;
  v24 = a1;
  sub_2384927B4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_238491A64()
{
  return type metadata accessor for LocationManager();
}

void sub_238491A6C()
{
  unint64_t v0;

  sub_238491BB8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for LocationManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocationManager.isAuthorized.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of LocationManager.requestLocation()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2384697D0;
  return v5();
}

uint64_t dispatch thunk of LocationManager.locationManager(_:didUpdateLocations:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of LocationManager.locationManager(_:didFailWithError:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

void sub_238491BB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25690B9D0)
  {
    sub_238439040((uint64_t *)&unk_25690B978);
    v0 = sub_23849291C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25690B9D0);
  }
}

uint64_t sub_238491C10(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_238435C24((uint64_t *)&unk_25690B9E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_238491C50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_238435C24((uint64_t *)&unk_25690B9E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_238491C98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_238435C24((uint64_t *)&unk_25690B9E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_238491CE0()
{
  return MEMORY[0x24BDCAFF8]();
}

uint64_t sub_238491CEC()
{
  return MEMORY[0x24BDCB070]();
}

uint64_t sub_238491CF8()
{
  return MEMORY[0x24BDCB0A8]();
}

uint64_t sub_238491D04()
{
  return MEMORY[0x24BDCB0B0]();
}

uint64_t sub_238491D10()
{
  return MEMORY[0x24BDCB0C0]();
}

uint64_t sub_238491D1C()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_238491D28()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_238491D34()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_238491D40()
{
  return MEMORY[0x24BDCB288]();
}

uint64_t sub_238491D4C()
{
  return MEMORY[0x24BDCB290]();
}

uint64_t sub_238491D58()
{
  return MEMORY[0x24BDCB2A8]();
}

uint64_t sub_238491D64()
{
  return MEMORY[0x24BDCB2E0]();
}

uint64_t sub_238491D70()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_238491D7C()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_238491D88()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_238491D94()
{
  return MEMORY[0x24BDCB6C0]();
}

uint64_t sub_238491DA0()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_238491DAC()
{
  return MEMORY[0x24BDCB9D8]();
}

uint64_t sub_238491DB8()
{
  return MEMORY[0x24BDCB9E8]();
}

uint64_t sub_238491DC4()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_238491DD0()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_238491DDC()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_238491DE8()
{
  return MEMORY[0x24BDCBC58]();
}

uint64_t sub_238491DF4()
{
  return MEMORY[0x24BDCBCB0]();
}

uint64_t sub_238491E00()
{
  return MEMORY[0x24BDCBD08]();
}

uint64_t sub_238491E0C()
{
  return MEMORY[0x24BDCBD60]();
}

uint64_t sub_238491E18()
{
  return MEMORY[0x24BDCBDA8]();
}

uint64_t sub_238491E24()
{
  return MEMORY[0x24BDCBDE0]();
}

uint64_t sub_238491E30()
{
  return MEMORY[0x24BDCBE48]();
}

uint64_t sub_238491E3C()
{
  return MEMORY[0x24BDCBE60]();
}

uint64_t sub_238491E48()
{
  return MEMORY[0x24BDCBE68]();
}

uint64_t sub_238491E54()
{
  return MEMORY[0x24BDCBE80]();
}

uint64_t sub_238491E60()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_238491E6C()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_238491E78()
{
  return MEMORY[0x24BDCD320]();
}

uint64_t sub_238491E84()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_238491E90()
{
  return MEMORY[0x24BDCD968]();
}

uint64_t sub_238491E9C()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_238491EA8()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_238491EB4()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_238491EC0()
{
  return MEMORY[0x24BDCDAA0]();
}

uint64_t sub_238491ECC()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_238491ED8()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_238491EE4()
{
  return MEMORY[0x24BDCDBF8]();
}

uint64_t sub_238491EF0()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_238491EFC()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_238491F08()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_238491F14()
{
  return MEMORY[0x24BDCDD78]();
}

uint64_t sub_238491F20()
{
  return MEMORY[0x24BDCDE78]();
}

uint64_t sub_238491F2C()
{
  return MEMORY[0x24BDCE468]();
}

uint64_t sub_238491F38()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_238491F44()
{
  return MEMORY[0x24BDCE5E8]();
}

uint64_t _s23ConditionalEngineClient21ScheduledQueryHistoryC5EventV1loiySbAE_AEtFZ_0()
{
  return MEMORY[0x24BDCE5F0]();
}

uint64_t sub_238491F5C()
{
  return MEMORY[0x24BDCE610]();
}

uint64_t sub_238491F68()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_238491F74()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_238491F80()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_238491F8C()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_238491F98()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_238491FA4()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_238491FB0()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_238491FBC()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t _s23ConditionalEngineClient0A5EventV2id10Foundation4UUIDVvg_0()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_238491FD4()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_238491FE0()
{
  return MEMORY[0x24BDCF028]();
}

uint64_t sub_238491FEC()
{
  return MEMORY[0x24BDCF050]();
}

uint64_t sub_238491FF8()
{
  return MEMORY[0x24BDCF078]();
}

uint64_t sub_238492004()
{
  return MEMORY[0x24BDCF0B8]();
}

uint64_t sub_238492010()
{
  return MEMORY[0x24BDCF140]();
}

uint64_t sub_23849201C()
{
  return MEMORY[0x24BDCF1B0]();
}

uint64_t sub_238492028()
{
  return MEMORY[0x24BDCF1C0]();
}

uint64_t sub_238492034()
{
  return MEMORY[0x24BDCF290]();
}

uint64_t sub_238492040()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_23849204C()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_238492058()
{
  return MEMORY[0x24BE30BE0]();
}

uint64_t sub_238492064()
{
  return MEMORY[0x24BE52078]();
}

uint64_t sub_238492070()
{
  return MEMORY[0x24BE52080]();
}

uint64_t sub_23849207C()
{
  return MEMORY[0x24BE521F8]();
}

uint64_t sub_238492088()
{
  return MEMORY[0x24BE52200]();
}

uint64_t sub_238492094()
{
  return MEMORY[0x24BE52208]();
}

uint64_t sub_2384920A0()
{
  return MEMORY[0x24BE52218]();
}

uint64_t sub_2384920AC()
{
  return MEMORY[0x24BE52340]();
}

uint64_t sub_2384920B8()
{
  return MEMORY[0x24BE523C8]();
}

uint64_t sub_2384920C4()
{
  return MEMORY[0x24BE52418]();
}

uint64_t sub_2384920D0()
{
  return MEMORY[0x24BE52458]();
}

uint64_t sub_2384920DC()
{
  return MEMORY[0x24BE52548]();
}

uint64_t sub_2384920E8()
{
  return MEMORY[0x24BE52550]();
}

uint64_t sub_2384920F4()
{
  return MEMORY[0x24BE52558]();
}

uint64_t sub_238492100()
{
  return MEMORY[0x24BE52560]();
}

uint64_t sub_23849210C()
{
  return MEMORY[0x24BE52568]();
}

uint64_t sub_238492118()
{
  return MEMORY[0x24BE52570]();
}

uint64_t sub_238492124()
{
  return MEMORY[0x24BE525B8]();
}

uint64_t sub_238492130()
{
  return MEMORY[0x24BE525C0]();
}

uint64_t sub_23849213C()
{
  return MEMORY[0x24BE52710]();
}

uint64_t sub_238492148()
{
  return MEMORY[0x24BE52740]();
}

uint64_t sub_238492154()
{
  return MEMORY[0x24BE52748]();
}

uint64_t sub_238492160()
{
  return MEMORY[0x24BE527A0]();
}

uint64_t sub_23849216C()
{
  return MEMORY[0x24BE52810]();
}

uint64_t sub_238492178()
{
  return MEMORY[0x24BE52B60]();
}

uint64_t sub_238492184()
{
  return MEMORY[0x24BE52C88]();
}

uint64_t sub_238492190()
{
  return MEMORY[0x24BE52CF0]();
}

uint64_t sub_23849219C()
{
  return MEMORY[0x24BE52D20]();
}

uint64_t sub_2384921A8()
{
  return MEMORY[0x24BE52D38]();
}

uint64_t sub_2384921B4()
{
  return MEMORY[0x24BE530F0]();
}

uint64_t sub_2384921C0()
{
  return MEMORY[0x24BE530F8]();
}

uint64_t sub_2384921CC()
{
  return MEMORY[0x24BE53330]();
}

uint64_t sub_2384921D8()
{
  return MEMORY[0x24BE53378]();
}

uint64_t sub_2384921E4()
{
  return MEMORY[0x24BE535D0]();
}

uint64_t sub_2384921F0()
{
  return MEMORY[0x24BE535E0]();
}

uint64_t sub_2384921FC()
{
  return MEMORY[0x24BE535E8]();
}

uint64_t sub_238492208()
{
  return MEMORY[0x24BE53628]();
}

uint64_t sub_238492214()
{
  return MEMORY[0x24BE53668]();
}

uint64_t sub_238492220()
{
  return MEMORY[0x24BE536C0]();
}

uint64_t sub_23849222C()
{
  return MEMORY[0x24BE53778]();
}

uint64_t sub_238492238()
{
  return MEMORY[0x24BE537B0]();
}

uint64_t sub_238492244()
{
  return MEMORY[0x24BE537C0]();
}

uint64_t sub_238492250()
{
  return MEMORY[0x24BE537F8]();
}

uint64_t sub_23849225C()
{
  return MEMORY[0x24BE53818]();
}

uint64_t sub_238492268()
{
  return MEMORY[0x24BE53898]();
}

uint64_t sub_238492274()
{
  return MEMORY[0x24BE538D8]();
}

uint64_t sub_238492280()
{
  return MEMORY[0x24BE538E8]();
}

uint64_t sub_23849228C()
{
  return MEMORY[0x24BE538F0]();
}

uint64_t sub_238492298()
{
  return MEMORY[0x24BE53960]();
}

uint64_t sub_2384922A4()
{
  return MEMORY[0x24BE53AD0]();
}

uint64_t sub_2384922B0()
{
  return MEMORY[0x24BE53EE8]();
}

uint64_t sub_2384922BC()
{
  return MEMORY[0x24BEE73C0]();
}

uint64_t sub_2384922C8()
{
  return MEMORY[0x24BEE73D0]();
}

uint64_t sub_2384922D4()
{
  return MEMORY[0x24BEE73E0]();
}

uint64_t sub_2384922E0()
{
  return MEMORY[0x24BEE73E8]();
}

uint64_t sub_2384922EC()
{
  return MEMORY[0x24BEE73F0]();
}

uint64_t sub_2384922F8()
{
  return MEMORY[0x24BEE7408]();
}

uint64_t sub_238492304()
{
  return MEMORY[0x24BEE7410]();
}

uint64_t sub_238492310()
{
  return MEMORY[0x24BEE7418]();
}

uint64_t sub_23849231C()
{
  return MEMORY[0x24BEE7420]();
}

uint64_t sub_238492328()
{
  return MEMORY[0x24BE03E10]();
}

uint64_t sub_238492334()
{
  return MEMORY[0x24BE03E18]();
}

uint64_t sub_238492340()
{
  return MEMORY[0x24BE03E20]();
}

uint64_t sub_23849234C()
{
  return MEMORY[0x24BE03E28]();
}

uint64_t sub_238492358()
{
  return MEMORY[0x24BE03E30]();
}

uint64_t sub_238492364()
{
  return MEMORY[0x24BE03E38]();
}

uint64_t sub_238492370()
{
  return MEMORY[0x24BE03E40]();
}

uint64_t sub_23849237C()
{
  return MEMORY[0x24BE03E50]();
}

uint64_t sub_238492388()
{
  return MEMORY[0x24BE03E58]();
}

uint64_t sub_238492394()
{
  return MEMORY[0x24BE03EA0]();
}

uint64_t sub_2384923A0()
{
  return MEMORY[0x24BE03ED8]();
}

uint64_t sub_2384923AC()
{
  return MEMORY[0x24BE03F00]();
}

uint64_t sub_2384923B8()
{
  return MEMORY[0x24BE03F88]();
}

uint64_t sub_2384923C4()
{
  return MEMORY[0x24BE03F90]();
}

uint64_t sub_2384923D0()
{
  return MEMORY[0x24BE03FB8]();
}

uint64_t sub_2384923DC()
{
  return MEMORY[0x24BE03FC0]();
}

uint64_t sub_2384923E8()
{
  return MEMORY[0x24BE03FC8]();
}

uint64_t sub_2384923F4()
{
  return MEMORY[0x24BE04040]();
}

uint64_t sub_238492400()
{
  return MEMORY[0x24BE04048]();
}

uint64_t sub_23849240C()
{
  return MEMORY[0x24BEC0EE0]();
}

uint64_t sub_238492418()
{
  return MEMORY[0x24BEC0EF0]();
}

uint64_t sub_238492424()
{
  return MEMORY[0x24BEC0F58]();
}

uint64_t sub_238492430()
{
  return MEMORY[0x24BEC0F60]();
}

uint64_t sub_23849243C()
{
  return MEMORY[0x24BEC0F68]();
}

uint64_t sub_238492448()
{
  return MEMORY[0x24BEC0F78]();
}

uint64_t sub_238492454()
{
  return MEMORY[0x24BEC0F80]();
}

uint64_t sub_238492460()
{
  return MEMORY[0x24BEC0F90]();
}

uint64_t sub_23849246C()
{
  return MEMORY[0x24BEC0FB8]();
}

uint64_t sub_238492478()
{
  return MEMORY[0x24BEC0FC8]();
}

uint64_t sub_238492484()
{
  return MEMORY[0x24BEC1258]();
}

uint64_t sub_238492490()
{
  return MEMORY[0x24BE087B0]();
}

uint64_t sub_23849249C()
{
  return MEMORY[0x24BE087B8]();
}

uint64_t sub_2384924A8()
{
  return MEMORY[0x24BE087C8]();
}

uint64_t sub_2384924B4()
{
  return MEMORY[0x24BE087E8]();
}

uint64_t sub_2384924C0()
{
  return MEMORY[0x24BE087F0]();
}

uint64_t sub_2384924CC()
{
  return MEMORY[0x24BEE7718]();
}

uint64_t sub_2384924D8()
{
  return MEMORY[0x24BEE7738]();
}

uint64_t sub_2384924E4()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_2384924F0()
{
  return MEMORY[0x24BEE7790]();
}

uint64_t sub_2384924FC()
{
  return MEMORY[0x24BEE77C0]();
}

uint64_t sub_238492508()
{
  return MEMORY[0x24BEE77F0]();
}

uint64_t sub_238492514()
{
  return MEMORY[0x24BEE7818]();
}

uint64_t sub_238492520()
{
  return MEMORY[0x24BEE7840]();
}

uint64_t sub_23849252C()
{
  return MEMORY[0x24BEE7848]();
}

uint64_t sub_238492538()
{
  return MEMORY[0x24BEE7868]();
}

uint64_t sub_238492544()
{
  return MEMORY[0x24BEE7870]();
}

uint64_t sub_238492550()
{
  return MEMORY[0x24BEE78A0]();
}

uint64_t sub_23849255C()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_238492568()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_238492574()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_238492580()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_23849258C()
{
  return MEMORY[0x24BEE54D0]();
}

uint64_t sub_238492598()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_2384925A4()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_2384925B0()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_2384925BC()
{
  return MEMORY[0x24BEE5628]();
}

uint64_t sub_2384925C8()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_2384925D4()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_2384925E0()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_2384925EC()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_2384925F8()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_238492604()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_238492610()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_23849261C()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_238492628()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_238492634()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_238492640()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_23849264C()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_238492658()
{
  return MEMORY[0x24BEE0A08]();
}

uint64_t sub_238492664()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_238492670()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_23849267C()
{
  return MEMORY[0x24BEE0AD0]();
}

uint64_t sub_238492688()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_238492694()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_2384926A0()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_2384926AC()
{
  return MEMORY[0x24BEE0BE8]();
}

uint64_t sub_2384926B8()
{
  return MEMORY[0x24BEE0BF0]();
}

uint64_t sub_2384926C4()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_2384926D0()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_2384926DC()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_2384926E8()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_2384926F4()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_238492700()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_23849270C()
{
  return MEMORY[0x24BEE0CC8]();
}

uint64_t sub_238492718()
{
  return MEMORY[0x24BEE0CE8]();
}

uint64_t sub_238492724()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_238492730()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_23849273C()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_238492748()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_238492754()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_238492760()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_23849276C()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_238492778()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_238492784()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_238492790()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_23849279C()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_2384927A8()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_2384927B4()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_2384927C0()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_2384927CC()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_2384927D8()
{
  return MEMORY[0x24BEE68C8]();
}

uint64_t sub_2384927E4()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_2384927F0()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_2384927FC()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_238492808()
{
  return MEMORY[0x24BEE1460]();
}

uint64_t sub_238492814()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_238492820()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_23849282C()
{
  return MEMORY[0x24BDCFD28]();
}

uint64_t sub_238492838()
{
  return MEMORY[0x24BEE7610]();
}

uint64_t sub_238492844()
{
  return MEMORY[0x24BEE7660]();
}

uint64_t sub_238492850()
{
  return MEMORY[0x24BDCFED8]();
}

uint64_t sub_23849285C()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_238492868()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_238492874()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_238492880()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_23849288C()
{
  return MEMORY[0x24BEE5650]();
}

uint64_t sub_238492898()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_2384928A4()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_2384928B0()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_2384928BC()
{
  return MEMORY[0x24BEE7940]();
}

uint64_t sub_2384928C8()
{
  return MEMORY[0x24BEE7948]();
}

uint64_t sub_2384928D4()
{
  return MEMORY[0x24BEC12B8]();
}

uint64_t sub_2384928E0()
{
  return MEMORY[0x24BEC12C8]();
}

uint64_t sub_2384928EC()
{
  return MEMORY[0x24BEC12E8]();
}

uint64_t sub_2384928F8()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_238492904()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_238492910()
{
  return MEMORY[0x24BEE7968]();
}

uint64_t sub_23849291C()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_238492928()
{
  return MEMORY[0x24BEE1E58]();
}

uint64_t sub_238492934()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_238492940()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23849294C()
{
  return MEMORY[0x24BDD04F0]();
}

uint64_t sub_238492958()
{
  return MEMORY[0x24BDD0548]();
}

uint64_t sub_238492964()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t sub_238492970()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t sub_23849297C()
{
  return MEMORY[0x24BEE5E68]();
}

uint64_t sub_238492988()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_238492994()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_2384929A0()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_2384929AC()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_2384929B8()
{
  return MEMORY[0x24BEE22F8]();
}

uint64_t sub_2384929C4()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_2384929D0()
{
  return MEMORY[0x24BEE2318]();
}

uint64_t sub_2384929DC()
{
  return MEMORY[0x24BEE2320]();
}

uint64_t sub_2384929E8()
{
  return MEMORY[0x24BEE2328]();
}

uint64_t sub_2384929F4()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_238492A00()
{
  return MEMORY[0x24BEE2340]();
}

uint64_t sub_238492A0C()
{
  return MEMORY[0x24BEE2348]();
}

uint64_t sub_238492A18()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_238492A24()
{
  return MEMORY[0x24BEE2368]();
}

uint64_t sub_238492A30()
{
  return MEMORY[0x24BEE6D58]();
}

uint64_t sub_238492A3C()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_238492A48()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_238492A54()
{
  return MEMORY[0x24BEE24C8]();
}

uint64_t sub_238492A60()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_238492A6C()
{
  return MEMORY[0x24BEE24F0]();
}

uint64_t sub_238492A78()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_238492A84()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_238492A90()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_238492A9C()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_238492AA8()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_238492AB4()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_238492AC0()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_238492ACC()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_238492AD8()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_238492AE4()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_238492AF0()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_238492AFC()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_238492B08()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_238492B14()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_238492B20()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_238492B2C()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_238492B38()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_238492B44()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_238492B50()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_238492B5C()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_238492B68()
{
  return MEMORY[0x24BEE30E0]();
}

uint64_t sub_238492B74()
{
  return MEMORY[0x24BEE30E8]();
}

uint64_t sub_238492B80()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_238492B8C()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_238492B98()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_238492BA4()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_238492BB0()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_238492BBC()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_238492BC8()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_238492BD4()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_238492BE0()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_238492BEC()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_238492BF8()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_238492C04()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_238492C10()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_238492C1C()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_238492C28()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_238492C34()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_238492C40()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_238492C4C()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_238492C58()
{
  return MEMORY[0x24BEE3550]();
}

uint64_t sub_238492C64()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_238492C70()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_238492C7C()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_238492C88()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_238492C94()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t sub_238492CA0()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_238492CAC()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_238492CB8()
{
  return MEMORY[0x24BDD06E0]();
}

uint64_t sub_238492CC4()
{
  return MEMORY[0x24BDD06F0]();
}

uint64_t sub_238492CD0()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_238492CDC()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_238492CE8()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_238492CF4()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_238492D00()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_238492D0C()
{
  return MEMORY[0x24BEE42C0]();
}

uint64_t sub_238492D18()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_238492D24()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_238492D30()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_238492D3C()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_238492D48()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_238492D54()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_238492D60()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_238492D6C()
{
  return MEMORY[0x24BEE49D8]();
}

uint64_t sub_238492D78()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_238492D84()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_238492D90()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t BMLocationSemanticPlaceTypeAsString()
{
  return MEMORY[0x24BE0C170]();
}

uint64_t BMLocationSemanticUserSpecificPlaceTypeAsString()
{
  return MEMORY[0x24BE0C178]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x24BE0C258]();
}

uint64_t LNConfirmationActionNameEnumAsString()
{
  return MEMORY[0x24BE5FE68]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x24BEE4B48]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x24BDADDC8]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x24BDADDD0](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x24BDADDD8](group);
}

void exit(int a1)
{
  MEMORY[0x24BDAE268](*(_QWORD *)&a1);
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x24BDAE3F0](__x, __y);
  return result;
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

int sqlite3_bind_double(sqlite3_stmt *a1, int a2, double a3)
{
  return MEMORY[0x24BEDDF58](a1, *(_QWORD *)&a2, a3);
}

int sqlite3_bind_int(sqlite3_stmt *a1, int a2, int a3)
{
  return MEMORY[0x24BEDDF60](a1, *(_QWORD *)&a2, *(_QWORD *)&a3);
}

int sqlite3_bind_null(sqlite3_stmt *a1, int a2)
{
  return MEMORY[0x24BEDDF70](a1, *(_QWORD *)&a2);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x24BEDDF98](a1, *(_QWORD *)&a2, a3, *(_QWORD *)&a4, a5);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  double result;

  MEMORY[0x24BEDE048](a1, *(_QWORD *)&iCol);
  return result;
}

int sqlite3_column_int(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x24BEDE050](a1, *(_QWORD *)&iCol);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return (const unsigned __int8 *)MEMORY[0x24BEDE068](a1, *(_QWORD *)&iCol);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return (const char *)MEMORY[0x24BEDE108](a1);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x24BEDE140](pStmt);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return MEMORY[0x24BEDE1C0](filename, ppDb, *(_QWORD *)&flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x24BEDE1D0](db, zSql, *(_QWORD *)&nByte, ppStmt, pzTail);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x24BEDE2A8](a1);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

