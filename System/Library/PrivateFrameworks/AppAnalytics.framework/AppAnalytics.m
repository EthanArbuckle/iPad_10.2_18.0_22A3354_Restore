void sub_1A5EBB7B0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1A5EE2EE8(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t type metadata accessor for BridgedSessionGroup()
{
  return objc_opt_self();
}

uint64_t sub_1A5EBB88C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1A5F64388();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1A5EBFC5C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1A5EBB920(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  uint64_t v41;

  v3 = v2;
  v5 = *v2;
  sub_1A5F069E8(0, (unint64_t *)&qword_1ED1CB8E0, (void (*)(void))sub_1A5EF8DA0);
  v40 = a2;
  v6 = sub_1A5F6473C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 32 * v21);
      v30 = *v29;
      v31 = v29[1];
      v33 = v29[2];
      v32 = v29[3];
      v34 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v21);
      v35 = v34[1];
      v41 = *v34;
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1A5F64910();
      swift_bridgeObjectRetain();
      sub_1A5F6419C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1A5F6419C();
      swift_bridgeObjectRelease();
      result = sub_1A5F64928();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 32 * v17);
      *v18 = v30;
      v18[1] = v31;
      v18[2] = v33;
      v18[3] = v32;
      v19 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v17);
      *v19 = v41;
      v19[1] = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A5EBBC88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63F08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A5EBBCFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  __swift_destroy_boxed_opaque_existential_0(v0 + 80);
  swift_release();
  v1 = v0 + qword_1ED1CD448;
  v2 = sub_1A5F63F98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1A5EBBD68(uint64_t a1, void *a2, void *a3, void *a4)
{
  void *v6;
  void (*v7)(void *, unint64_t, void *, void *);
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;

  v6 = a2;
  v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v8 = v6;
    v6 = (void *)sub_1A5F63E3C();
    v10 = v9;

  }
  else
  {
    swift_retain();
    v10 = 0xF000000000000000;
  }
  v11 = a3;
  v12 = a4;
  v7(v6, v10, a3, a4);

  sub_1A5EE45CC((uint64_t)v6, v10);
  return swift_release();
}

uint64_t type metadata accessor for DisabledPrivacyValidationProvider()
{
  return objc_opt_self();
}

_QWORD *sub_1A5EBBE38(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_bridgeObjectRetain();
  v9(v7, v8, v4);
  return a1;
}

Swift::Void __swiftcall ViewingSessionManager.endActiveViewingSession()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void **);
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  char *v18;
  uint64_t *v19;
  id v20;
  void *v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  objc_super v25;
  void *v26;

  v1 = v0;
  v2 = sub_1A5F63F2C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR___AAViewingSessionManager_activeSession;
  v7 = *(_QWORD *)(v0 + OBJC_IVAR___AAViewingSessionManager_activeSession);
  if (v7)
  {
    swift_beginAccess();
    v8 = *(_QWORD *)(v7 + 56);
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      v22[1] = v7 + 56;
      v23 = v3;
      v24 = v2;
      swift_retain();
      swift_bridgeObjectRetain();
      v10 = v8 + 40;
      do
      {
        v11 = *(void (**)(void **))(v10 - 8);
        v26 = *(void **)(v7 + 64);
        v12 = v26;
        swift_retain();
        v13 = v12;
        v11(&v26);
        swift_release();

        v10 += 16;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      v3 = v23;
      v2 = v24;
    }
    else
    {
      swift_retain();
    }
    *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    sub_1A5F63F20();
    v14 = sub_1A5F63F14();
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v17 = (objc_class *)type metadata accessor for ViewingSession();
    v18 = (char *)objc_allocWithZone(v17);
    v19 = (uint64_t *)&v18[OBJC_IVAR___AAViewingSession_identifier];
    *v19 = v14;
    v19[1] = v16;
    v25.receiver = v18;
    v25.super_class = v17;
    v20 = objc_msgSendSuper2(&v25, sel_init);
    v21 = *(void **)(v7 + 64);
    *(_QWORD *)(v7 + 64) = v20;
    swift_release();

  }
  *(_QWORD *)(v1 + v6) = 0;
  swift_release();
}

uint64_t sub_1A5EBC064()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A5EBC084()
{
  uint64_t v0;

  return sub_1A5EBC098(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A5EBC08C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1A5EBC098(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t _s12AppAnalytics18DenylistDescriptorV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  char v12;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_1A5F64880(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (v12 = sub_1A5F64880(), result = 0, (v12 & 1) != 0))
    {
      if (v3 == v8 && v5 == v9)
        return 1;
      else
        return sub_1A5F64880();
    }
  }
  return result;
}

id BridgedRawEvent.init(name:sessionGroup:timestampGranularity:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  objc_class *ObjectType;
  char *v12;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType();
  v12 = &v5[OBJC_IVAR___AARawEvent_name];
  *(_QWORD *)v12 = a1;
  *((_QWORD *)v12 + 1) = a2;
  *(_QWORD *)&v5[OBJC_IVAR___AARawEvent_properties] = a5;
  *(_QWORD *)&v5[OBJC_IVAR___AARawEvent_sessionGroup] = a3;
  *(_QWORD *)&v5[OBJC_IVAR___AARawEvent_timestampGranularity] = a4;
  v14.receiver = v5;
  v14.super_class = ObjectType;
  return objc_msgSendSuper2(&v14, sel_init);
}

void sub_1A5EBC220(unint64_t *a1@<X8>)
{
  *a1 = sub_1A5ED6984((uint64_t)&unk_1E4FCE9E0);
  type metadata accessor for RequestData.EventData.Event();
}

uint64_t sub_1A5EBC274(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

uint64_t sub_1A5EBC2A8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_finishTasksAndInvalidate);

  return swift_deallocClassInstance();
}

uint64_t objectdestroy_18Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1A5F63F08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_1A5EF3D48(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(_QWORD *)(v0 + v4 + 24))
    __swift_destroy_boxed_opaque_existential_0(v0 + v4);
  if (*(_QWORD *)(v0 + ((v4 + 39) & 0xFFFFFFFFFFFFFFF8)))
    swift_release();
  return swift_deallocObject();
}

uint64_t destroy for HeartbeatEventService.Metadata(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5EBC3F0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for HeartbeatEventService.Metadata();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5EBC468()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A5EBC540(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t _s22ExtendedAttributeErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithTake for PrivacyValidation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

id sub_1A5EBC648()
{
  objc_class *v0;
  char *v1;
  char *v2;
  id result;
  objc_super v4;

  v0 = (objc_class *)type metadata accessor for BridgedSessionGroup();
  v1 = (char *)objc_allocWithZone(v0);
  v2 = &v1[OBJC_IVAR___AASessionGroup_groupName];
  *(_QWORD *)v2 = 0x746C7561666564;
  *((_QWORD *)v2 + 1) = 0xE700000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  result = objc_msgSendSuper2(&v4, sel_init);
  qword_1ED1CC1A0 = (uint64_t)result;
  return result;
}

void sub_1A5EBC6B4(uint64_t a1, uint64_t a2)
{
  void **v2;
  void *v3;
  id v4;

  v3 = *v2;
  if (a2)
  {
    v4 = (id)sub_1A5F6410C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v3, sel_setTaskDescription_, v4);

}

uint64_t sub_1A5EBC780(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

void sub_1A5EBC7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  os_unfair_lock_lock_with_options();
  __asm { BR              X10 }
}

void sub_1A5EBC834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;

  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_1A5F0CDE4(v1, v5, v6);
    sub_1A5F3D17C(v4, v3, 0x65736E6F70736572, 0xED00006E6F736A2ELL, v2, v1, v5);
    swift_bridgeObjectRelease_n();
    if (v6)
    {
      if (v6 == 1)
        goto LABEL_4;
      if (qword_1ED1CFC08 != -1)
        swift_once();
      v16 = (id)qword_1ED1CE7B0;
      sub_1A5F64448();
      sub_1A5EDD448();
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1A5F679D0;
      *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v17 + 64) = sub_1A5EE19C8();
      *(_QWORD *)(v17 + 32) = v4;
      *(_QWORD *)(v17 + 40) = v3;
      swift_bridgeObjectRetain();
      sub_1A5F63F80();

    }
    else
    {
      if (qword_1ED1CFC08 != -1)
        swift_once();
      v13 = (void *)qword_1ED1CE7B0;
      sub_1A5EDD448();
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1A5F679D0;
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v14 + 64) = sub_1A5EE19C8();
      *(_QWORD *)(v14 + 32) = v4;
      *(_QWORD *)(v14 + 40) = v3;
      swift_bridgeObjectRetain();
      v15 = v13;
      sub_1A5F64454();
      sub_1A5F63F80();

    }
    swift_bridgeObjectRelease();
    v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), *(_QWORD *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24));
    sub_1A5ED89B8(v4, v3);
    (*(void (**)(void))(v18 + 48))();
    swift_release();
LABEL_24:
    v12 = *(_QWORD *)(v2 + v7);
    goto LABEL_25;
  }
LABEL_4:
  v43 = v7;
  v8 = sub_1A5ED89B8(v4, v3);
  v9 = (_QWORD *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24);
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), v10);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v11 + 32))(&v41, v8, v10, v11);
  if (!v0)
  {
    v19 = v41;
    v7 = v43;
    if (v42 == 1)
    {
      if (!v41)
      {
        if (qword_1ED1CFC08 != -1)
          swift_once();
        v36 = (id)qword_1ED1CE7B0;
        sub_1A5F6443C();
        sub_1A5EDD448();
        v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = xmmword_1A5F679D0;
        *(_QWORD *)(v37 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v37 + 64) = sub_1A5EE19C8();
        *(_QWORD *)(v37 + 32) = v4;
        *(_QWORD *)(v37 + 40) = v3;
        swift_bridgeObjectRetain();
        sub_1A5F63F80();

        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_24;
      }
      if (qword_1ED1CFC08 != -1)
        swift_once();
      v20 = (id)qword_1ED1CE7B0;
      sub_1A5F6443C();
      sub_1A5EDD448();
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1A5F679D0;
      *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v21 + 64) = sub_1A5EE19C8();
      *(_QWORD *)(v21 + 32) = v4;
      *(_QWORD *)(v21 + 40) = v3;
      swift_bridgeObjectRetain();
      sub_1A5F63F80();

      swift_bridgeObjectRelease();
      v22 = v9[3];
      v23 = v9[4];
      __swift_project_boxed_opaque_existential_1(v9, v22);
      v39 = 2;
    }
    else
    {
      if (v41 >= *(_QWORD *)(*(_QWORD *)(v2 + 24) + OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries))
      {
        if (qword_1ED1CFC08 != -1)
          swift_once();
        v38 = (id)qword_1ED1CE7B0;
        sub_1A5F64448();
        sub_1A5EDD448();
        v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_1A5F66C40;
        v39 = v19;
        v30 = sub_1A5F64844();
        v32 = v31;
        *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
        v33 = sub_1A5EE19C8();
        *(_QWORD *)(v29 + 32) = v30;
        *(_QWORD *)(v29 + 40) = v32;
        *(_QWORD *)(v29 + 96) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v29 + 104) = v33;
        *(_QWORD *)(v29 + 64) = v33;
        *(_QWORD *)(v29 + 72) = v4;
        *(_QWORD *)(v29 + 80) = v3;
        swift_bridgeObjectRetain();
        sub_1A5F63F80();

        swift_bridgeObjectRelease();
        v34 = v9[3];
        v35 = v9[4];
        __swift_project_boxed_opaque_existential_1(v9, v34);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v8, v34, v35);
        swift_release();
        goto LABEL_23;
      }
      if (qword_1ED1CFC08 != -1)
        swift_once();
      v24 = (void *)qword_1ED1CE7B0;
      sub_1A5EDD448();
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_1A5F66C40;
      v26 = v19 + 1;
      v27 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v25 + 64) = v27;
      *(_QWORD *)(v25 + 32) = v26;
      *(_QWORD *)(v25 + 96) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v25 + 104) = sub_1A5EE19C8();
      *(_QWORD *)(v25 + 72) = v4;
      *(_QWORD *)(v25 + 80) = v3;
      swift_bridgeObjectRetain();
      v28 = v24;
      sub_1A5F64454();
      sub_1A5F63F80();

      swift_bridgeObjectRelease();
      v22 = v9[3];
      v23 = v9[4];
      __swift_project_boxed_opaque_existential_1(v9, v22);
      v39 = v26;
    }
    v40 = 0;
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v23 + 40))(v8, &v39, v22, v23);
    swift_release();
LABEL_23:
    v7 = v43;
    goto LABEL_24;
  }
  swift_release();
  v12 = *(_QWORD *)(v2 + v43);
LABEL_25:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
}

uint64_t initializeWithCopy for HeartbeatEventService.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A5EBD268(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1A5EDEE44(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v11 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A5F05688();
    v7 = v11;
  }
  v8 = *(_QWORD *)(v7 + 48) + 40 * v4;
  sub_1A5EDF6F4(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_BYTE *)(v8 + 32));
  v9 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v4);
  sub_1A5F544BC(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t type metadata accessor for LazyEventProcessor()
{
  return objc_opt_self();
}

uint64_t objectdestroy_116Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

void sub_1A5EBD3B0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A5F63DD0();
  if (v0 <= 0x3F)
  {
    sub_1A5ECD49C(319, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_1A5EBD4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v0 = sub_1A5F63BC0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A5F63BF0();
  swift_allocObject();
  v4 = sub_1A5F63BE4();
  *v3 = sub_1A5EC0D58;
  v3[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAE148], v0);
  result = sub_1A5F63BCC();
  qword_1ED1CBD08 = v4;
  return result;
}

uint64_t HeartbeatEventService.Metadata.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1A5EF75C8();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5EF8C6C();
  sub_1A5F64970();
  v9[15] = 0;
  sub_1A5F63F08();
  sub_1A5ECC4D8(qword_1ED1CDE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1A5F64820();
  if (!v1)
  {
    type metadata accessor for HeartbeatEventService.Metadata();
    v9[14] = 1;
    sub_1A5F647FC();
    v9[13] = 2;
    sub_1A5F647FC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppSessionManager.hasTrackingConsent.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1A5F6404C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5F64040();
  sub_1A5F64460();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_1A5F63FC8() & 1;
}

uint64_t sub_1A5EBD778()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1A5EBD7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _BYTE v9[40];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1A5EC1D18((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A5EF7620((uint64_t)v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A5EF1CF8(a1, &qword_1ED1CD468, &qword_1ED1CE4C8, (uint64_t)&protocol descriptor for RestartTimerType);
    sub_1A5F54098(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_1A5EF1CF8((uint64_t)v9, &qword_1ED1CD468, &qword_1ED1CE4C8, (uint64_t)&protocol descriptor for RestartTimerType);
  }
}

uint64_t sub_1A5EBD8C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];

  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CE6B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v15[-v7];
  v9 = v1 + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider____lazy_storage___debugBaseURL;
  swift_beginAccess();
  sub_1A5EE22F8(v9, (uint64_t)v8);
  v10 = sub_1A5F63DD0();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_1A5ED8D20((uint64_t)v8);
  v12 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider_staticPathProvider
                  + 24);
  v13 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider_staticPathProvider
                  + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider_staticPathProvider), v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess();
  sub_1A5ED90D0((uint64_t)v5, v9);
  return swift_endAccess();
}

void sub_1A5EBDA60(uint64_t a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  unsigned __int8 v5;
  os_unfair_lock_s *v6;
  id v7;
  os_unfair_lock_s *v8;
  id v9;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_lock;
  os_unfair_lock_lock_with_options();
  v3 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v4 = (void *)sub_1A5F63D64();
  v10[0] = 0;
  v5 = objc_msgSend(v3, sel_removeItemAtURL_error_, v4, v10);

  if ((v5 & 1) != 0)
  {
    v6 = *(os_unfair_lock_s **)(*(_QWORD *)(a1 + v2) + 16);
    v7 = v10[0];
    v8 = v6;
  }
  else
  {
    v9 = v10[0];
    sub_1A5F63CE0();

    swift_willThrow();
    v8 = *(os_unfair_lock_s **)(*(_QWORD *)(a1 + v2) + 16);
  }
  os_unfair_lock_unlock(v8);
}

void sub_1A5EBDB88(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v3)(void);
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  os_unfair_lock_lock_with_options();
  swift_beginAccess();
  sub_1A5F194C0(v1 + 32, (uint64_t)&v5, (uint64_t)&unk_1ED1CDF48, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1A5F19604);
  if (v6)
  {
    sub_1A5EC1D18(&v5, a1);
  }
  else
  {
    v3 = MEMORY[0x1E0DEB940];
    v4 = sub_1A5F1950C((uint64_t)&v5, (uint64_t)&unk_1ED1CDF48, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1A5F19604);
    (*(void (**)(uint64_t))(v1 + 16))(v4);
    sub_1A5ECE02C(a1, (uint64_t)&v5);
    swift_beginAccess();
    sub_1A5F19548((uint64_t)&v5, v1 + 32, (uint64_t)&unk_1ED1CDF48, (uint64_t)v3, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1A5F19604);
    swift_endAccess();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v1 + 72) + 16));
}

uint64_t sub_1A5EBDCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t result;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  v8 = v7;
  v15 = *v7;
  v17 = sub_1A5EDD9D0(a3, a4, a5, a6);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0)
    goto LABEL_7;
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_1A5F05888();
LABEL_7:
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = (_QWORD *)(v23[7] + 16 * v17);
      result = swift_bridgeObjectRelease();
      *v24 = a1;
      v24[1] = a2;
      return result;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    v28 = (uint64_t *)(v23[6] + 32 * v17);
    *v28 = a3;
    v28[1] = a4;
    v28[2] = a5;
    v28[3] = a6;
    v29 = (_QWORD *)(v23[7] + 16 * v17);
    *v29 = a1;
    v29[1] = a2;
    v30 = v23[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (!v31)
    {
      v23[2] = v32;
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1A5EBB920(v20, a7 & 1);
  v26 = sub_1A5EDD9D0(a3, a4, a5, a6);
  if ((v21 & 1) == (v27 & 1))
  {
    v17 = v26;
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A5F648C8();
  __break(1u);
  return result;
}

id ProcessEvent.json.getter()
{
  return (id)sub_1A5ED9450();
}

uint64_t sub_1A5EBDE6C()
{
  uint64_t v0;

  sub_1A5ED8D20(v0 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider____lazy_storage___baseURL);
  sub_1A5ED8D20(v0 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider____lazy_storage___debugBaseURL);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_fileManager);
  return swift_deallocClassInstance();
}

uint64_t sub_1A5EBDEE4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1A5ECC4D8(qword_1ED1CD888, (uint64_t (*)(uint64_t))type metadata accessor for TimedData, (uint64_t)&protocol conformance descriptor for TimedData);
  result = sub_1A5ECC4D8(&qword_1ED1CD880, (uint64_t (*)(uint64_t))type metadata accessor for TimedData, (uint64_t)&protocol conformance descriptor for TimedData);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

Swift::Void __swiftcall AppSessionManager.startAppSession()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_allocObject();
  *(_BYTE *)(v2 + 16) = 1;
  *(_QWORD *)(v2 + 24) = v0;
  swift_retain();
  sub_1A5EEC784(v1, (uint64_t)sub_1A5EFA0D8, v2);
  swift_release();
}

uint64_t sub_1A5EBDFB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63F08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A5EBE03C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63DD0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1A5EBE0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  NSObject *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  char isEscapingClosureAtFileLocation;
  _QWORD v16[6];

  v5 = v4;
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
    return sub_1A5EF8094(a1, v4, a2, a3, a4);
  sub_1A5ED4A58();
  v11 = sub_1A5F644A8();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a1;
  v12[5] = v5;
  v12[6] = a2;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_1A5F3AB00;
  *(_QWORD *)(v13 + 24) = v12;
  v16[4] = sub_1A5EBC064;
  v16[5] = v13;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1A5F33984;
  v16[3] = &block_descriptor_7;
  v14 = _Block_copy(v16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v14);

  _Block_release(v14);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1A5EBE258()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63F08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_1A5EBE2EC(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t sub_1A5EBE324()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63F08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A5EBE38C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63F08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A5EBE404()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63DD0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

id static TrackingConsent.shared.getter()
{
  if (qword_1ED1CDB20 != -1)
    swift_once();
  return (id)qword_1ED1CDB10;
}

uint64_t sub_1A5EBE498()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63F08();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1A5EBE52C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t Client.version.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AAClient_version);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A5EBE5D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63F08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1A5EBE658()
{
  unint64_t result;

  result = qword_1ED1CF830;
  if (!qword_1ED1CF830)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1CF830);
  }
  return result;
}

uint64_t Client.buildNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AAClient_buildNumber);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A5EBE6CC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63DD0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t destroy for SessionManagerConfiguration(uint64_t a1)
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for CrashDetector()
{
  return objc_opt_self();
}

id static UploadBatchEventConfig.default.getter()
{
  if (qword_1ED1CE580 != -1)
    swift_once();
  return (id)qword_1ED1CE4E0;
}

void sub_1A5EBE7E8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A5ECD49C(319, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
  {
    type metadata accessor for SummaryEventDatabaseManager.StorageLocation(319);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_1A5EBE8B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = type metadata accessor for SummaryEventConfiguration(0);
  __swift_allocate_value_buffer(v3, a2);
  v4 = __swift_project_value_buffer(v3, (uint64_t)a2);
  if (qword_1ED1CDCA8 != -1)
    swift_once();
  v5 = qword_1ED1CD340;
  v6 = byte_1ED1CD348;
  v7 = v4 + *(int *)(v3 + 20);
  v8 = sub_1A5F63DD0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_QWORD *)v4 = v5;
  *(_BYTE *)(v4 + 8) = v6;
  return result;
}

void sub_1A5EBE964()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1A5F63F08();
  if (v0 <= 0x3F)
  {
    sub_1A5ED4EF0();
    if (v1 <= 0x3F)
    {
      type metadata accessor for SummaryEventConfiguration(319);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

id sub_1A5EBEA1C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TrackingConsent()), sel_init);
  qword_1ED1CDB10 = (uint64_t)result;
  return result;
}

uint64_t sub_1A5EBEA48(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1A5ECC4D8(&qword_1ED1CD7C8, (uint64_t (*)(uint64_t))type metadata accessor for EventData, (uint64_t)&protocol conformance descriptor for EventData);
  result = sub_1A5ECC4D8(&qword_1ED1CD7C0, (uint64_t (*)(uint64_t))type metadata accessor for EventData, (uint64_t)&protocol conformance descriptor for EventData);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1A5EBEAA4()
{
  sub_1A5EBEAC8();
  return swift_deallocClassInstance();
}

uint64_t sub_1A5EBEAC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_1A5F64568();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t BridgedTracker.submit(rawEvent:onlyIfTimed:)(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  id v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  _BYTE v23[32];
  _OWORD v24[2];

  v22 = a2;
  v4 = sub_1A5F63F08();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v8 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(v2 + OBJC_IVAR___AATracker_tracker);
  memset(v24, 0, sizeof(v24));
  v19 = a1;
  sub_1A5F63EFC();
  v12 = *(_QWORD *)(v11 + 88);
  v20 = *(_QWORD *)(v11 + 80);
  v21 = v12;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  sub_1A5EDCB9C((uint64_t)v24, (uint64_t)v23);
  v13 = (*(unsigned __int8 *)(v5 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v14 = (v6 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v11;
  *(_QWORD *)(v15 + 24) = a1;
  *(_QWORD *)(v15 + 32) = 0x8000000000000000;
  *(_BYTE *)(v15 + 40) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v13, v8, v4);
  sub_1A5EDB014((uint64_t)v23, v15 + v14);
  v16 = (_QWORD *)(v15 + ((v14 + 39) & 0xFFFFFFFFFFFFFFF8));
  *v16 = 0;
  v16[1] = 0;
  v17 = v19;
  swift_retain();
  sub_1A5EEC784(v20, (uint64_t)sub_1A5EF8030, v15);

  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return sub_1A5ED4D44((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1A5ED4438);
}

void Tracker.actionSequence.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + 240);
  os_unfair_lock_lock_with_options();
  v4 = *(_QWORD *)(v1 + 160);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v5 = swift_bridgeObjectRetain();
  sub_1A5ED37EC(v5);
  *a1 = v4;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
}

id BridgedRawDataEvent.init(name:dictionary:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = &v3[OBJC_IVAR___AARawDataEvent_name];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  *(_QWORD *)&v3[OBJC_IVAR___AARawDataEvent_dictionary] = a3;
  v10.receiver = v3;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t sub_1A5EBEDE0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  sub_1A5ED43E0(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_currentSession, (unint64_t *)&qword_1ED1CFBE8, (uint64_t (*)(uint64_t))type metadata accessor for Session);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_pathProvider);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  swift_release();

  return v0;
}

uint64_t type metadata accessor for BridgedRawEventProperty()
{
  return objc_opt_self();
}

uint64_t sub_1A5EBEE94()
{
  uint64_t v0;

  MEMORY[0x1A85B8D2C](*(_QWORD *)(v0 + 16), -1, -1);
  return swift_deallocClassInstance();
}

void sub_1A5EBEEC0()
{
  type metadata accessor for RequestData.EventData.Event.CodingKeys();
}

uint64_t sub_1A5EBEF18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  MEMORY[0x1A85B8C3C](&unk_1A5F6A168, a1);
  v3 = sub_1A5F64838();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v7 = *(_QWORD **)(v2 - 128);
  sub_1A5F64970();
  *(_QWORD *)(v2 - 112) = *v7;
  *(_BYTE *)(v2 - 65) = 0;
  sub_1A5EF7BD4();
  sub_1A5EF7B7C();
  v8 = *(_QWORD *)(v2 - 120);
  sub_1A5F64820();
  if (!v8)
  {
    *(_BYTE *)(v2 - 112) = 1;
    sub_1A5F64820();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for BridgedDataEventTraits()
{
  return objc_opt_self();
}

uint64_t sub_1A5EBF0CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint8_t *v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v8 = sub_1A5F63DD0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A5F63F98();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v27 = v12;
    v28 = a5;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, Strong + OBJC_IVAR____TtC12AppAnalytics12FlushManager_logger, v12);
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
    v17 = sub_1A5F63F8C();
    v18 = sub_1A5F64454();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v30 = v25;
      v26 = a4;
      *(_DWORD *)v19 = 136446210;
      v24 = v19 + 4;
      v20 = sub_1A5F63D1C();
      v29 = sub_1A5F18694(v20, v21, &v30);
      a4 = v26;
      sub_1A5F6458C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      _os_log_impl(&dword_1A5EB9000, v17, v18, "Flush manager finished flushing file, url=%{public}s", v19, 0xCu);
      v22 = v25;
      swift_arrayDestroy();
      MEMORY[0x1A85B8D2C](v22, -1, -1);
      MEMORY[0x1A85B8D2C](v19, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v27);
  }
  return a4();
}

uint64_t sub_1A5EBF338()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t EventData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v31 = a2;
  v3 = sub_1A5F63F08();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5ECC55C(0, &qword_1ED1CBE60, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v34 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - v8;
  v10 = (int *)type metadata accessor for EventData();
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5ECC518();
  v35 = v9;
  v13 = (uint64_t)v36;
  sub_1A5F64958();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v30 = v7;
  v36 = a1;
  v14 = v32;
  v15 = v33;
  v41 = 0;
  v16 = v34;
  *v12 = sub_1A5F6479C();
  v12[1] = v17;
  v40 = 1;
  sub_1A5ECC4D8(&qword_1ED1CBE50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1A5F647C0();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))((char *)v12 + v10[5], v5, v15);
  v39 = 2;
  v18 = sub_1A5F6479C();
  v19 = (uint64_t *)((char *)v12 + v10[6]);
  *v19 = v18;
  v19[1] = v20;
  v38 = 3;
  v21 = sub_1A5F6479C();
  v22 = (uint64_t *)((char *)v12 + v10[7]);
  *v22 = v21;
  v22[1] = v23;
  v37 = 4;
  v24 = sub_1A5F64784();
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v16);
  v27 = (uint64_t *)((char *)v12 + v10[8]);
  *v27 = v24;
  v27[1] = v26;
  sub_1A5EF7DBC((uint64_t)v12, v31);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
  return sub_1A5EF7D80((uint64_t)v12);
}

uint64_t sub_1A5EBF724(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_1A5EE1EF0(v2, v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A5EBF770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  char v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  sub_1A5EFA128();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(v2 + 16);
  v9 = *(_BYTE *)(v2 + 24);
  swift_unknownObjectRetain();
  if ((v9 & 1) != 0)
  {
    v10 = objc_msgSend(v8, sel_endpointURLWithContentType_, a1);
    if (v10)
    {
      v11 = v10;
      sub_1A5F63D94();
      swift_unknownObjectRelease();

      v12 = sub_1A5F63DD0();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 0, 1, v12);
    }
    else
    {
      swift_unknownObjectRelease();
      v16 = sub_1A5F63DD0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
    }
    return sub_1A5EFA0E4((uint64_t)v7, a2);
  }
  else
  {
    v13 = objc_msgSend(v8, "url");
    sub_1A5F63D94();
    swift_unknownObjectRelease();

    v14 = sub_1A5F63DD0();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 0, 1, v14);
  }
}

uint64_t TrackingConsent.whenAllowed(_:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_1A5F6404C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5F64040();
  sub_1A5F64460();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((sub_1A5F63FC8() & 1) != 0)
    return a1();
  if (qword_1ED1CD058 != -1)
    swift_once();
  v9 = qword_1ED1CCCD0;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  swift_retain();
  sub_1A5EEC784(v9, (uint64_t)sub_1A5EBC064, v10);
  return swift_release();
}

uint64_t sub_1A5EBFA14(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1A5EF7554(0, &qword_1ED1CD968, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1A5EF1B3C(0, (unint64_t *)&qword_1ED1CE4E8, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5EBFBC0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F64568();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1A5EBFC5C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1A5F64910();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  v8 = sub_1A5F64928();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1A5F64880() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1A5F64880() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1A5EF7850(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t type metadata accessor for FlushProcessor()
{
  return objc_opt_self();
}

uint64_t sub_1A5EBFE28(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v6 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(a2 + 16);
  v17 = v6;
  v7 = type metadata accessor for RequestData.CodingKeys(255, v16, v6, a4);
  MEMORY[0x1A85B8C3C](&unk_1A5F6A1E0, v7);
  v8 = sub_1A5F64838();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v15 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = v18;
  sub_1A5F64970();
  LOBYTE(v20) = 0;
  type metadata accessor for HeartbeatEventService.Metadata();
  sub_1A5ECC4D8(&qword_1ED1CBD38, (uint64_t (*)(uint64_t))type metadata accessor for HeartbeatEventService.Metadata, (uint64_t)&protocol conformance descriptor for HeartbeatEventService.Metadata);
  v13 = v19;
  sub_1A5F64820();
  if (!v13)
  {
    v25 = *(_QWORD *)(v12 + *(int *)(a2 + 36));
    v24 = 1;
    v20 = v16;
    v21 = v16;
    v22 = v17;
    v23 = v17;
    type metadata accessor for RequestData.EventData();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1A5EBFFE0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  id v3;

  if (qword_1ED1CFC08 != -1)
    swift_once();
  v3 = (id)qword_1ED1CE7B0;
  sub_1A5F64454();
  sub_1A5F63F80();

  return a2(*(_QWORD *)(v2 + OBJC_IVAR___AATrackingConsent_accessGroup));
}

Swift::Void __swiftcall Tracker.popActions()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);
  os_unfair_lock_lock_with_options();
  swift_beginAccess();
  *(_QWORD *)(v0 + 152) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

_QWORD *LazyEventProcessor.init(underlyingProcessorProvider:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  _DWORD *v6;

  type metadata accessor for UnfairLock();
  v5 = swift_allocObject();
  v6 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v5 + 16) = v6;
  *v6 = 0;
  *(_DWORD *)(v5 + 24) = 0x10000;
  v2[4] = v5;
  v2[5] = 0;
  v2[2] = a1;
  v2[3] = a2;
  return v2;
}

uint64_t type metadata accessor for FlushManager()
{
  uint64_t result;

  result = qword_1ED1CDD80;
  if (!qword_1ED1CDD80)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A5EC018C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  unsigned int v7;
  void *v8;
  id v9;
  unsigned int v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  id v16;
  BOOL v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v3 = OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_lock;
  os_unfair_lock_lock_with_options();
  v4 = OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_fileHandle;
  v5 = *(void **)(a1 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_fileHandle);
  if (v5)
  {
    v18 = 0;
    v6 = v5;
    v7 = objc_msgSend(v6, sel_synchronizeAndReturnError_, &v18);
    v8 = (void *)v18;
    if (!v7
      || (v18 = 0,
          v9 = v8,
          v10 = objc_msgSend(v6, sel_closeAndReturnError_, &v18),
          v8 = (void *)v18,
          !v10))
    {
      v16 = v8;
      sub_1A5F63CE0();

      swift_willThrow();
      goto LABEL_15;
    }
    v11 = *(void **)(a1 + v4);
    *(_QWORD *)(a1 + v4) = 0;
    v12 = v8;

  }
  v13 = a1 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_state;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_state + 9) & 1) != 0)
  {
    sub_1A5ED94E4((uint64_t)&v18);
    if (v1)
      goto LABEL_15;
    v14 = v18;
    v15 = v19;
    *(_QWORD *)v13 = v18;
    *(_WORD *)(v13 + 8) = v15;
  }
  else
  {
    v14 = *(_QWORD *)v13;
    v15 = *(_BYTE *)(v13 + 8) & 1;
  }
  if (v15)
    v17 = v14 == 0;
  else
    v17 = 1;
  if (!v17)
  {
    v18 = 1;
    v19 = 0;
    sub_1A5EE45E0(a1, &v18);
  }
LABEL_15:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(a1 + v3) + 16));
}

id BridgedRawEventProperty.init(dataName:requirement:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = &v3[OBJC_IVAR___AARawEventProperty_dataName];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  *(_QWORD *)&v3[OBJC_IVAR___AARawEventProperty_requirement] = a3;
  v10.receiver = v3;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;

  swift_release();

  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1A5EC03FC(unint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  _QWORD v14[6];

  v9 = *(void **)(v4 + 16);
  v10 = (void *)sub_1A5F63B3C();
  if (a1 >> 60 == 15)
    v11 = 0;
  else
    v11 = (void *)sub_1A5F63E24();
  v14[4] = a2;
  v14[5] = a3;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1A5EBBD68;
  v14[3] = &block_descriptor_2;
  v12 = _Block_copy(v14);
  swift_retain();
  swift_release();
  v13 = objc_msgSend(v9, sel_uploadTaskWithRequest_fromData_completionHandler_, v10, v11, v12);
  _Block_release(v12);

  a4[3] = &type metadata for ProxyURLSessionUploadTask;
  a4[4] = &off_1E4FCFDA8;
  *a4 = v13;
}

void sub_1A5EC051C()
{
  type metadata accessor for RequestData.EventData.CodingKeys();
}

void sub_1A5EC0568(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1A85B8C3C](&unk_1A5F6A2F8, a1);
  v5 = sub_1A5F64838();
  *(_QWORD *)(v4 - 136) = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1A5F64970();
  *(_QWORD *)(v4 - 72) = *(_QWORD *)(v4 - 144);
  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = v2;
  v6 = *(_QWORD *)(v4 - 152);
  *(_QWORD *)(v4 - 96) = *(_QWORD *)(v4 - 160);
  *(_QWORD *)(v4 - 88) = v6;
  type metadata accessor for RequestData.EventData.Event();
}

uint64_t sub_1A5EC0614(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = sub_1A5F6431C();
  *(_QWORD *)(v3 - 120) = MEMORY[0x1A85B8C3C](&unk_1A5F69F64, a1);
  MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEAF10], v5, v3 - 120);
  sub_1A5F64820();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 136) + 8))(v2, v1);
}

uint64_t Tracker.submit<A>(_:onlyIfTimed:completion:)(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[2];

  v19 = a5;
  v12 = sub_1A5F63F08();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v6 + 96);
  memset(v20, 0, sizeof(v20));
  swift_retain();
  sub_1A5F63EFC();
  sub_1A5EC07B4(a1, v16, a2, (uint64_t)v15, (uint64_t)v20, a3, a4, v19, a6);
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return sub_1A5EF4054((uint64_t)v20, (unint64_t *)&qword_1ED1CF848, MEMORY[0x1E0DEE9B8] + 8);
}

uint64_t sub_1A5EC07B4(void *a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[32];

  v34 = a6;
  v35 = a7;
  v32 = a3;
  v36 = a9;
  v15 = sub_1A5F63F08();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = a2;
  if (!(a2 >> 62))
    sub_1A5EBE0A8((uint64_t)a1, v9, a8, v36);
  v33 = *(_QWORD *)(v9 + 88);
  v19 = *(_QWORD *)(v9 + 80);
  v29 = v15;
  v30 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v15);
  sub_1A5EDCB9C(a5, (uint64_t)v37);
  v20 = (*(unsigned __int8 *)(v16 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v21 = (v17 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject();
  v23 = v36;
  *(_QWORD *)(v22 + 16) = a8;
  *(_QWORD *)(v22 + 24) = v23;
  *(_QWORD *)(v22 + 32) = v9;
  *(_QWORD *)(v22 + 40) = a1;
  v24 = v31;
  *(_QWORD *)(v22 + 48) = v31;
  *(_BYTE *)(v22 + 56) = v32 & 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v22 + v20, v18, v29);
  sub_1A5EDB014((uint64_t)v37, v22 + v21);
  v25 = (uint64_t *)(v22 + ((v21 + 39) & 0xFFFFFFFFFFFFFFF8));
  v27 = v34;
  v26 = v35;
  *v25 = v34;
  v25[1] = v26;
  swift_retain();
  sub_1A5EEC96C(a1, v24);
  sub_1A5EC84CC(v27);
  sub_1A5EEC784(v30, (uint64_t)sub_1A5EF7F20, v22);
  return swift_release();
}

uint64_t type metadata accessor for AccessQueue()
{
  return objc_opt_self();
}

uint64_t sub_1A5EC0988()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for TrackingConsent()
{
  return objc_opt_self();
}

void sub_1A5EC0A28()
{
  unint64_t v0;

  sub_1A5ECD49C(319, (unint64_t *)&qword_1ED1CE6B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1A5EC0ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  _QWORD *v10;

  v9 = *(_QWORD *)(v4 + 80);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = v4;
  v10[5] = a1;
  v10[6] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5EEC784(v9, (uint64_t)sub_1A5EEB8DC, (uint64_t)v10);
  return swift_release();
}

id sub_1A5EC0BA0(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  id v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _DWORD *v18;
  uint64_t v20;
  objc_super v21;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = sub_1A5F64028();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF5B0];
  v7 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v20 - v11;
  *(_QWORD *)&v2[OBJC_IVAR___AAAccessQueue_queue] = a1;
  v13 = v2;
  v14 = a1;
  sub_1A5F63FF8();
  v15 = &v13[OBJC_IVAR___AAAccessQueue__qos];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v5);
  sub_1A5ECD49C(0, &qword_1ED1CE2C8, v6, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Atomic);
  v16 = (char *)swift_allocObject();
  type metadata accessor for UnfairLock();
  v17 = swift_allocObject();
  v18 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v17 + 16) = v18;
  *v18 = 0;
  *(_DWORD *)(v17 + 24) = 0x10000;
  *((_QWORD *)v16 + 2) = v17;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v16[*(_QWORD *)(*(_QWORD *)v16 + 96)], v10, v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v5);
  *(_QWORD *)v15 = v16;
  swift_endAccess();

  v21.receiver = v13;
  v21.super_class = ObjectType;
  return objc_msgSendSuper2(&v21, sel_init);
}

uint64_t sub_1A5EC0D58(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  double v12;
  double v13;
  _BYTE v15[24];
  uint64_t v16;

  v3 = sub_1A5F63F68();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_1A5F63F08();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1A5F63F50();
  sub_1A5F63F38();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1A5F64964();
  result = sub_1A5F63ED8();
  v13 = v12 * 1000.0;
  if ((~*(_QWORD *)&v13 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v13 < 9.22337204e18)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
    sub_1A5F6488C();
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v15);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1A5EC0F08(uint64_t result, double a2, double a3)
{
  double v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v6 = result;
  v7 = 0;
  result = MEMORY[0x1A85B8D44](&v7, 8);
  if (v5 * ((double)(v7 & 0x1FFFFFFFFFFFFFLL) * 1.11022302e-16) + a2 == a3)
    return sub_1A5EC0F08(v6, a2, a3);
  return result;
}

uint64_t static CrashDetector.shared.getter()
{
  if (qword_1ED1CDCC8 != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1A5EC101C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  sub_1A5EC1090(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  v1 = v0 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate;
  v2 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A5EC1090(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t ProcessorManager.add(eventProcessor:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1A5EEBEDC(a1, v2, ObjectType, a2);
}

void sub_1A5EC10E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  __int128 v21;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AARawEvent_properties);
  v20 = v1 + 64;
  v2 = 1 << *(_BYTE *)(v1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(v1 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v4)
    goto LABEL_5;
LABEL_4:
  v8 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (i = v8 | (v6 << 6); ; i = __clz(__rbit64(v11)) + (v6 << 6))
  {
    v13 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v15 = *v13;
    v14 = v13[1];
    v16 = *(id *)(*(_QWORD *)(v1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v7 = sub_1A5EF56C4(0, v7[2] + 1, 1, v7);
    v18 = v7[2];
    v17 = v7[3];
    if (v18 >= v17 >> 1)
      v7 = sub_1A5EF56C4((_QWORD *)(v17 > 1), v18 + 1, 1, v7);
    v7[2] = v18 + 1;
    v19 = &v7[7 * v18];
    v19[4] = v15;
    v19[5] = v14;
    v19[6] = v16;
    *(_OWORD *)(v19 + 7) = v21;
    v19[9] = &type metadata for BridgedRawEventMirrorProperty;
    v19[10] = &off_1E4FD00D8;

    if (v4)
      goto LABEL_4;
LABEL_5:
    v10 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v10 >= v5)
      goto LABEL_25;
    v11 = *(_QWORD *)(v20 + 8 * v10);
    ++v6;
    if (!v11)
    {
      v6 = v10 + 1;
      if (v10 + 1 >= v5)
        goto LABEL_25;
      v11 = *(_QWORD *)(v20 + 8 * v6);
      if (!v11)
      {
        v6 = v10 + 2;
        if (v10 + 2 >= v5)
          goto LABEL_25;
        v11 = *(_QWORD *)(v20 + 8 * v6);
        if (!v11)
          break;
      }
    }
LABEL_18:
    v4 = (v11 - 1) & v11;
  }
  v12 = v10 + 3;
  if (v12 >= v5)
  {
LABEL_25:
    swift_release();
    return;
  }
  v11 = *(_QWORD *)(v20 + 8 * v12);
  if (v11)
  {
    v6 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    v6 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v6 >= v5)
      goto LABEL_25;
    v11 = *(_QWORD *)(v20 + 8 * v6);
    ++v12;
    if (v11)
      goto LABEL_18;
  }
LABEL_27:
  __break(1u);
}

_QWORD *initializeBufferWithCopyOfBuffer for PrivacyValidation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t AccessTracker.explicitTime<A>(_:startTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  void *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;

  v8 = sub_1A5F64070();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = result;
    v14 = *(void **)(*(_QWORD *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v11 = v14;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
    v15 = v14;
    LOBYTE(v14) = sub_1A5F64088();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
    if ((v14 & 1) != 0)
    {
      v16 = *(_QWORD *)(v13 + 96);
      swift_retain();
      sub_1A5EEF69C(a1, v16, a2, 0, a3, a4);
      swift_release();
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t FlushProcessor.init(flushEvents:flushInterval:)(uint64_t *a1, double a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *a1;
  swift_weakInit();
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 32) = v4;
  *(double *)(v2 + 40) = a2;
  *(_QWORD *)(v2 + 24) = dispatch_group_create();
  return v2;
}

uint64_t UploadDropboxFile.__deallocating_deinit()
{
  UploadDropboxFile.deinit();
  return swift_deallocClassInstance();
}

uint64_t UploadDropboxFile.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_url;
  v2 = sub_1A5F63DD0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A5ED43E0(v0 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_sessionStartDate, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  swift_bridgeObjectRelease();
  return v0;
}

void URLSessionUploadClientFactory.makeUploadClient()(uint64_t *a1@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_1ED1CFC08 != -1)
    swift_once();
  v2 = (void *)qword_1ED1CE7B0;
  sub_1A5EDD448();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1A5F679D0;
  v4 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  v5 = sub_1A5EE19C8();
  *(_QWORD *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 32) = 0xD000000000000026;
  *(_QWORD *)(v3 + 40) = 0x80000001A5F6DAF0;
  v6 = v2;
  sub_1A5F64454();
  sub_1A5F63F80();

  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
  if (qword_1ED1CC878 != -1)
    swift_once();
  if (qword_1EE80D738)
  {
    v8 = (void *)sub_1A5F6410C();
    objc_msgSend(v7, sel_set_sourceApplicationBundleIdentifier_, v8);

  }
  v9 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, v7, 0, 0);
  v10 = (void *)sub_1A5F6410C();
  objc_msgSend(v9, sel_setSessionDescription_, v10);

  v11 = (void *)qword_1ED1CE7B0;
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1A5F679D0;
  *(_QWORD *)(v12 + 56) = v4;
  *(_QWORD *)(v12 + 64) = v5;
  *(_QWORD *)(v12 + 32) = 0xD000000000000026;
  *(_QWORD *)(v12 + 40) = 0x80000001A5F6DAF0;
  v13 = v11;
  sub_1A5F64454();
  sub_1A5F63F80();

  swift_bridgeObjectRelease();
  v14 = type metadata accessor for URLSessionUploadClient();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v9;
  a1[3] = v14;
  a1[4] = (uint64_t)&off_1E4FCFD48;

  *a1 = v15;
}

uint64_t type metadata accessor for LoggingEventProcessor()
{
  return objc_opt_self();
}

id sub_1A5EC1840()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v0 = (void *)objc_opt_self();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1A5F6410C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_backgroundSessionConfigurationWithIdentifier_, v1);

  if (qword_1ED1CC878 != -1)
    swift_once();
  if (qword_1EE80D738)
  {
    v3 = (void *)sub_1A5F6410C();
    objc_msgSend(v2, sel_set_sourceApplicationBundleIdentifier_, v3);

  }
  objc_msgSend(v2, sel_setHTTPMaximumConnectionsPerHost_, 1);
  objc_msgSend(v2, sel_setAllowsCellularAccess_, 1);
  objc_msgSend(v2, sel_setWaitsForConnectivity_, 1);
  objc_msgSend(v2, sel_setDiscretionary_, 0);
  v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HeartbeatEventServiceURLSessionDelegate()), sel_init);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3828]), sel_init);
  v6 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, v2, v4, v5);

  return v6;
}

uint64_t sub_1A5EC19FC()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1A5F64130();

  }
  sub_1A5EBE658();
  result = sub_1A5F64550();
  qword_1ED1CE7B0 = result;
  return result;
}

uint64_t LoggingEventProcessor.__allocating_init(logFormat:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  __int128 v7[2];
  char v8;
  __int128 v9;
  ValueMetadata *v10;
  _UNKNOWN **v11;
  _BYTE v12[48];

  sub_1A5EC1C54(a1, (uint64_t)v12);
  v2 = swift_allocObject();
  sub_1A5EC1C54((uint64_t)v12, (uint64_t)v7);
  if (v8)
  {
    if (v8 == 1)
    {
      sub_1A5EC1D18(v7, (uint64_t)&v9);
    }
    else
    {
      v10 = &type metadata for DefaultLoggingEventProcessorFormatter;
      v11 = &off_1E4FD31A8;
    }
  }
  else
  {
    v3 = *(_QWORD *)&v7[0];
    v10 = &type metadata for JSONLoggingEventProcessorFormatter;
    v11 = &off_1E4FD31B8;
    v4 = (_QWORD *)swift_allocObject();
    *(_QWORD *)&v9 = v4;
    v4[6] = &type metadata for DefaultLoggingEventProcessorFormatter;
    v4[7] = &off_1E4FD31A8;
    v4[2] = v3;
  }
  sub_1A5EC1D18(&v9, v2 + 16);
  if (qword_1ED1CFC08 != -1)
    swift_once();
  v5 = (id)qword_1ED1CE7B0;
  sub_1A5EC1BFC((uint64_t)v12);
  *(_QWORD *)(v2 + 56) = v5;
  sub_1A5EC1BFC(a1);
  return v2;
}

uint64_t sub_1A5EC1BFC(uint64_t a1)
{
  destroy for LoggingEventProcessorFormat(a1);
  return a1;
}

uint64_t destroy for LoggingEventProcessorFormat(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 == 1)
    return __swift_destroy_boxed_opaque_existential_0(a1);
  return a1;
}

uint64_t sub_1A5EC1C54(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for LoggingEventProcessorFormat(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for LoggingEventProcessorFormat(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  __int128 v4;
  __int128 v5;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    *(_BYTE *)(a1 + 40) = 1;
  }
  else if (v3)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t sub_1A5EC1D18(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

Swift::Void __swiftcall TrackingConsent.allow()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AATrackingConsent_lock);
  swift_retain();
  os_unfair_lock_lock_with_options();
  if ((*(_BYTE *)(v0 + OBJC_IVAR___AATrackingConsent_consented) & 1) == 0)
  {
    *(_BYTE *)(v0 + OBJC_IVAR___AATrackingConsent_consented) = 1;
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v2 = (id)qword_1ED1CE7B0;
    sub_1A5F64454();
    sub_1A5F63F80();

    dispatch_group_leave(*(dispatch_group_t *)(v0 + OBJC_IVAR___AATrackingConsent_accessGroup));
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
}

uint64_t sub_1A5EC1E18(void *a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  _OWORD v7[2];

  v2 = (void *)sub_1A5F6410C();
  v3 = objc_msgSend(a1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_1A5F645C8();
    swift_unknownObjectRelease();
    sub_1A5EDCB44((uint64_t)v7);
    v4 = (void *)sub_1A5F6410C();
    v5 = objc_msgSend(a1, sel_BOOLForKey_, v4);

  }
  else
  {
    memset(v7, 0, sizeof(v7));
    sub_1A5EDCB44((uint64_t)v7);
    return 1;
  }
  return (uint64_t)v5;
}

id UploadBatchEventConfig.with(maxUploadTries:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  void (*v13)(char *, uint64_t, uint64_t, double);
  _BYTE *v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  objc_super v19;

  v2 = v1;
  v18 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = sub_1A5F63DD0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch);
  v11 = *(_BYTE *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled);
  v12 = *(_BYTE *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled);
  v13 = *(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16);
  v13(v8, v2 + OBJC_IVAR___AAUploadBatchEventConfig_directory, v4, v6);
  v14 = objc_allocWithZone(ObjectType);
  *(_QWORD *)&v14[OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch] = v9;
  *(_QWORD *)&v14[OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch] = v10;
  v14[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled] = v11;
  v14[OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled] = v12;
  *(_QWORD *)&v14[OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries] = v18;
  ((void (*)(_BYTE *, char *, uint64_t))v13)(&v14[OBJC_IVAR___AAUploadBatchEventConfig_directory], v8, v4);
  v19.receiver = v14;
  v19.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v15;
}

uint64_t sub_1A5EC20C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  void (*v18)(char *, uint64_t, uint64_t);
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(unint64_t, char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v43;
  _QWORD *v44;
  uint64_t result;
  uint64_t *v46;
  _QWORD v47[2];
  uint8_t *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t *v52;
  uint64_t v53;
  __int128 v54[2];
  uint64_t v55;

  v6 = sub_1A5F63DD0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v51 = (char *)v47 - v11;
  MEMORY[0x1E0C80A78](v12);
  v50 = (char *)v47 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v47 - v15;
  v17 = sub_1A5F63D4C();
  v53 = a2;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  if ((v17 & 1) != 0)
  {
    v52 = (uint64_t *)a3;
    v18(v16, a1, v6);
    v19 = sub_1A5F63F8C();
    v20 = sub_1A5F64454();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      *(_QWORD *)&v54[0] = v49;
      v48 = v21;
      *(_DWORD *)v21 = 136446210;
      v47[1] = v21 + 4;
      v22 = sub_1A5F63D1C();
      v55 = sub_1A5F18694(v22, v23, (uint64_t *)v54);
      sub_1A5F6458C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
      v24 = v48;
      _os_log_impl(&dword_1A5EB9000, v19, v20, "Flush manager attempting to flush sub-directory, url=%{public}s", v48, 0xCu);
      v25 = v49;
      swift_arrayDestroy();
      MEMORY[0x1A85B8D2C](v25, -1, -1);
      MEMORY[0x1A85B8D2C](v24, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    }
    v34 = v50;
    v18(v50, a1, v6);
    v35 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v36 = swift_allocObject();
    v37 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 32);
    v37(v36 + v35, v34, v6);
    v38 = v51;
    v18(v51, a1, v6);
    v39 = swift_allocObject();
    v37(v39 + v35, v38, v6);
    sub_1A5ECE02C(v53 + 184, (uint64_t)v54);
    v40 = type metadata accessor for StaticUploadDropboxPathProvider(0);
    v41 = swift_allocObject();
    v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v42(v41 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider____lazy_storage___baseURL, 1, 1, v6);
    v42(v41 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider____lazy_storage___debugBaseURL, 1, 1, v6);
    v43 = (_QWORD *)(v41 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_baseURLProvider);
    *v43 = sub_1A5F0AF94;
    v43[1] = v36;
    v44 = (_QWORD *)(v41 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_debugURLProvider);
    *v44 = sub_1A5F0AF94;
    v44[1] = v39;
    result = sub_1A5EC1D18(v54, v41 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_fileManager);
    v46 = v52;
    v52[3] = v40;
    v46[4] = (uint64_t)&off_1E4FD5778;
    *v46 = v41;
  }
  else
  {
    v18(v9, a1, v6);
    v26 = sub_1A5F63F8C();
    v27 = sub_1A5F64454();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v52 = (uint64_t *)a3;
      v30 = v29;
      *(_QWORD *)&v54[0] = v29;
      *(_DWORD *)v28 = 136446210;
      v31 = sub_1A5F63D1C();
      v55 = sub_1A5F18694(v31, v32, (uint64_t *)v54);
      sub_1A5F6458C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      _os_log_impl(&dword_1A5EB9000, v26, v27, "Flush manager attempting to flush file, url=%{public}s", v28, 0xCu);
      swift_arrayDestroy();
      v33 = v30;
      a3 = (uint64_t)v52;
      MEMORY[0x1A85B8D2C](v33, -1, -1);
      MEMORY[0x1A85B8D2C](v28, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return sub_1A5ECE02C(v53 + 144, a3);
  }
  return result;
}

_QWORD *AppSessionManager.init(accessQueue:trackingConsent:crashDetector:)(void *a1, void *a2, uint64_t a3)
{
  _QWORD *v5;

  v5 = sub_1A5F50230(a1, (uint64_t)a2, a3);

  return v5;
}

uint64_t sub_1A5EC25D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummaryEventConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1A5EC26C8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _QWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  _DWORD *v35;
  __int128 v37[2];
  uint64_t v38[5];
  uint64_t v39[5];

  v39[3] = a8;
  v39[4] = a10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(boxed_opaque_existential_1, a3, a8);
  v38[3] = a9;
  v38[4] = a11;
  v20 = __swift_allocate_boxed_opaque_existential_1(v38);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a9 - 8) + 32))(v20, a4, a9);
  a7[5] = MEMORY[0x1E0DEE9E0];
  v21 = (char *)a7 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_currentSession;
  v22 = type metadata accessor for Session();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v23 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
  type metadata accessor for UnfairLock();
  v24 = swift_allocObject();
  v25 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v24 + 16) = v25;
  *v25 = 0;
  *(_QWORD *)((char *)a7 + v23) = v24;
  *(_DWORD *)(v24 + 24) = 0x10000;
  a7[2] = a1;
  a7[3] = a2;
  sub_1A5ECE02C((uint64_t)v39, (uint64_t)a7 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_pathProvider);
  sub_1A5ECE02C((uint64_t)v38, (uint64_t)a7 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  *(_QWORD *)((char *)a7 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_contentType) = a5;
  *(_QWORD *)((char *)a7 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_transparencyLogging) = a6;
  sub_1A5ECE02C((uint64_t)v39, (uint64_t)v37);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = a2;
  sub_1A5EC1D18(v37, v26 + 24);
  sub_1A5ECD49C(0, &qword_1ED1CF508, type metadata accessor for UploadDropbox.Debugging, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Lazy);
  v27 = (_QWORD *)swift_allocObject();
  v28 = (char *)v27 + *(_QWORD *)(*v27 + 96);
  v29 = type metadata accessor for UploadDropbox.Debugging(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v30 = *(_QWORD *)(*v27 + 104);
  v31 = swift_allocObject();
  v32 = a2;
  v33 = a1;
  v34 = a6;
  v35 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v31 + 16) = v35;
  *v35 = 0;
  *(_DWORD *)(v31 + 24) = 0x10000;
  *(_QWORD *)((char *)v27 + v30) = v31;
  v27[2] = sub_1A5EE4A68;
  v27[3] = v26;
  *(_QWORD *)((char *)v27 + *(_QWORD *)(*v27 + 112)) = 1;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
  a7[4] = v27;
  return a7;
}

void sub_1A5EC2944(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  BOOL v48;
  uint64_t v49;
  _QWORD *v50;
  BOOL v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  BOOL v87;
  uint64_t v88;
  _QWORD *v89;
  BOOL v90;
  char *v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  _QWORD *v106;
  __int128 v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  __int128 v112;
  char *v113;
  __int128 v114;
  char *v115;
  _QWORD *v116;
  _QWORD *v117;
  __int128 v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  void (*v125)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  char *v128;
  void (*v129)(char *, char *, uint64_t);
  void (*v130)(uint64_t, uint64_t);
  uint64_t v131[2];

  v2 = v1;
  v126 = a1;
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CE6B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v115 = (char *)&v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v121 = (char *)&v103 - v6;
  v7 = sub_1A5F63DD0();
  v127 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v113 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  *(_QWORD *)&v114 = (char *)&v103 - v10;
  MEMORY[0x1E0C80A78](v11);
  v110 = (char *)&v103 - v12;
  MEMORY[0x1E0C80A78](v13);
  v123 = (char *)&v103 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v103 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v103 - v19;
  MEMORY[0x1E0C80A78](v21);
  v109 = (char *)&v103 - v22;
  v128 = (char *)v1 + OBJC_IVAR____TtC12AppAnalytics12FlushManager_logger;
  v23 = sub_1A5F63F8C();
  v24 = sub_1A5F64454();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    _os_log_impl(&dword_1A5EB9000, v23, v24, "Flush manager attempting clean up of flushed directories.", v25, 2u);
    MEMORY[0x1A85B8D2C](v25, -1, -1);
  }

  swift_beginAccess();
  v26 = v2[29];
  v27 = *(_QWORD *)(v26 + 16);
  swift_retain();
  os_unfair_lock_lock_with_options();
  swift_beginAccess();
  v28 = *(unsigned __int8 *)(v26 + 24);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v27 + 16));
  swift_release();
  if (v28 == 2)
  {
    v29 = v2[21];
    v30 = v2[22];
    v104 = v2 + 18;
    __swift_project_boxed_opaque_existential_1(v2 + 18, v29);
    v31 = (uint64_t)v109;
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
    v32 = sub_1A5EC3964(v31);
    v33 = v127;
    v130 = *(void (**)(uint64_t, uint64_t))(v127 + 8);
    v130(v31, v7);
    v35 = *(_QWORD *)(v32 + 16);
    v117 = v2;
    v120 = v35;
    v106 = v2 + 29;
    v105 = v32;
    if (v35)
    {
      v36 = 0;
      v116 = v2 + 23;
      v119 = (char *)(v32 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80)));
      *(_QWORD *)&v118 = *(_QWORD *)(v33 + 72);
      v129 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
      v37 = v126;
      v122 = v126 + 56;
      *(_QWORD *)&v34 = 136446210;
      v112 = v34;
      v111 = MEMORY[0x1E0DEE9B8] + 8;
      *(_QWORD *)&v34 = 136446466;
      v107 = v34;
      v38 = v121;
      v108 = v17;
      v124 = v20;
      v129(v121, v119, v7);
      while (1)
      {
        v125 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
        v125(v38, 0, 1, v7);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v38, 1, v7) == 1)
          goto LABEL_34;
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v20, v38, v7);
        v39 = sub_1A5F63D58();
        v41 = v40;
        if (*(_QWORD *)(v37 + 16))
        {
          v42 = v39;
          sub_1A5F64910();
          sub_1A5F6419C();
          v43 = sub_1A5F64928();
          v44 = -1 << *(_BYTE *)(v37 + 32);
          v45 = v43 & ~v44;
          if (((*(_QWORD *)(v122 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) != 0)
          {
            v46 = *(_QWORD *)(v37 + 48);
            v47 = (_QWORD *)(v46 + 16 * v45);
            v48 = *v47 == v42 && v47[1] == v41;
            if (v48 || (sub_1A5F64880() & 1) != 0)
            {
LABEL_6:
              v37 = v126;
              v33 = v127;
              v38 = v121;
              v20 = v124;
              swift_bridgeObjectRelease();
              v130((uint64_t)v20, v7);
              goto LABEL_7;
            }
            v49 = ~v44;
            while (1)
            {
              v45 = (v45 + 1) & v49;
              if (((*(_QWORD *)(v122 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
                break;
              v50 = (_QWORD *)(v46 + 16 * v45);
              v51 = *v50 == v42 && v50[1] == v41;
              if (v51 || (sub_1A5F64880() & 1) != 0)
                goto LABEL_6;
            }
          }
        }
        swift_bridgeObjectRelease();
        v20 = v124;
        v129(v17, v124, v7);
        v52 = sub_1A5F63F8C();
        v53 = sub_1A5F64454();
        if (os_log_type_enabled(v52, v53))
        {
          v54 = swift_slowAlloc();
          v55 = swift_slowAlloc();
          v131[0] = v55;
          *(_DWORD *)v54 = v112;
          v56 = sub_1A5F63D1C();
          *(_QWORD *)(v54 + 4) = sub_1A5F18694(v56, v57, v131);
          swift_bridgeObjectRelease();
          v130((uint64_t)v17, v7);
          _os_log_impl(&dword_1A5EB9000, v52, v53, "Flush manager cleaning up directory, url=%{public}s", (uint8_t *)v54, 0xCu);
          swift_arrayDestroy();
          v58 = v55;
          v20 = v124;
          MEMORY[0x1A85B8D2C](v58, -1, -1);
          MEMORY[0x1A85B8D2C](v54, -1, -1);

        }
        else
        {

          v130((uint64_t)v17, v7);
        }
        v59 = v2[26];
        v60 = v2[27];
        __swift_project_boxed_opaque_existential_1(v116, v59);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 112))(v20, 1, v59, v60);
        v130((uint64_t)v20, v7);
        v37 = v126;
        v33 = v127;
        v38 = v121;
LABEL_7:
        if (++v36 == v120)
          goto LABEL_33;
        v129(v38, &v119[v118 * v36], v7);
      }
    }
    v125 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
    v38 = v121;
LABEL_33:
    v125(v38, 1, 1, v7);
LABEL_34:
    swift_bridgeObjectRelease();
    v64 = v115;
    v65 = v106;
    if ((*(_BYTE *)(v2[7] + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled) & 1) == 0)
    {
      v66 = v2[21];
      v67 = v2[22];
      __swift_project_boxed_opaque_existential_1(v104, v66);
      v68 = *(void (**)(uint64_t, uint64_t))(v67 + 16);
      v69 = (uint64_t)v109;
      v70 = v66;
      v71 = v67;
      v72 = v126;
      v73 = v127;
      v68(v70, v71);
      v74 = sub_1A5EC3964(v69);
      v130(v69, v7);
      *(_QWORD *)&v112 = v74;
      v76 = v110;
      v122 = *(_QWORD *)(v74 + 16);
      if (v122)
      {
        v77 = 0;
        v119 = (char *)(v117 + 23);
        v121 = (char *)(v112
                      + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80)));
        v120 = *(_QWORD *)(v73 + 72);
        v129 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
        v124 = (char *)(v72 + 56);
        *(_QWORD *)&v75 = 136446210;
        v118 = v75;
        v116 = (_QWORD *)(MEMORY[0x1E0DEE9B8] + 8);
        *(_QWORD *)&v75 = 136446466;
        v114 = v75;
        v129(v64, v121, v7);
        while (1)
        {
          v125(v64, 0, 1, v7);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v64, 1, v7) == 1)
            goto LABEL_61;
          (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v123, v64, v7);
          v78 = sub_1A5F63D58();
          v80 = v79;
          if (*(_QWORD *)(v72 + 16))
          {
            v81 = v78;
            sub_1A5F64910();
            sub_1A5F6419C();
            v82 = sub_1A5F64928();
            v83 = -1 << *(_BYTE *)(v72 + 32);
            v84 = v82 & ~v83;
            if (((*(_QWORD *)&v124[(v84 >> 3) & 0xFFFFFFFFFFFFF8] >> v84) & 1) != 0)
            {
              v85 = *(_QWORD *)(v72 + 48);
              v86 = (_QWORD *)(v85 + 16 * v84);
              v87 = *v86 == v81 && v86[1] == v80;
              if (v87 || (sub_1A5F64880() & 1) != 0)
              {
LABEL_37:
                v72 = v126;
                v73 = v127;
                swift_bridgeObjectRelease();
                v130((uint64_t)v123, v7);
                goto LABEL_38;
              }
              v88 = ~v83;
              while (1)
              {
                v84 = (v84 + 1) & v88;
                if (((*(_QWORD *)&v124[(v84 >> 3) & 0xFFFFFFFFFFFFF8] >> v84) & 1) == 0)
                  break;
                v89 = (_QWORD *)(v85 + 16 * v84);
                v90 = *v89 == v81 && v89[1] == v80;
                if (v90 || (sub_1A5F64880() & 1) != 0)
                  goto LABEL_37;
              }
            }
          }
          swift_bridgeObjectRelease();
          v91 = v123;
          v129(v76, v123, v7);
          v92 = sub_1A5F63F8C();
          v93 = sub_1A5F64454();
          if (os_log_type_enabled(v92, v93))
          {
            v94 = swift_slowAlloc();
            v95 = swift_slowAlloc();
            v131[0] = v95;
            *(_DWORD *)v94 = v118;
            v96 = sub_1A5F63D1C();
            *(_QWORD *)(v94 + 4) = sub_1A5F18694(v96, v97, v131);
            swift_bridgeObjectRelease();
            v130((uint64_t)v76, v7);
            _os_log_impl(&dword_1A5EB9000, v92, v93, "Flush manager cleaning up debug directory, url=%{public}s", (uint8_t *)v94, 0xCu);
            swift_arrayDestroy();
            v98 = v95;
            v91 = v123;
            MEMORY[0x1A85B8D2C](v98, -1, -1);
            MEMORY[0x1A85B8D2C](v94, -1, -1);

          }
          else
          {

            v130((uint64_t)v76, v7);
          }
          v99 = v117[26];
          v100 = v117[27];
          __swift_project_boxed_opaque_existential_1(v119, v99);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 112))(v91, 0, v99, v100);
          v130((uint64_t)v91, v7);
          v72 = v126;
          v73 = v127;
          v64 = v115;
LABEL_38:
          if (++v77 == v122)
            break;
          v129(v64, &v121[v120 * v77], v7);
        }
      }
      v125(v64, 1, 1, v7);
LABEL_61:
      swift_bridgeObjectRelease();
      v65 = v106;
    }
    v101 = *v65;
    v102 = *(_QWORD *)(*v65 + 16);
    swift_retain();
    os_unfair_lock_lock_with_options();
    swift_beginAccess();
    *(_BYTE *)(v101 + 24) = 0;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v102 + 16));
    swift_release();
  }
  else
  {
    v61 = sub_1A5F63F8C();
    v62 = sub_1A5F6443C();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v63 = 0;
      _os_log_impl(&dword_1A5EB9000, v61, v62, "Error: Flush manager attempting to clean up unflushed directories.", v63, 2u);
      MEMORY[0x1A85B8D2C](v63, -1, -1);
    }

  }
}

uint64_t sub_1A5EC3964(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_1A5F63DD0();
  MEMORY[0x1E0C80A78](v3);
  v4 = v1[26];
  v5 = v1[27];
  __swift_project_boxed_opaque_existential_1(v1 + 23, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 136))(a1, v4, v5);
}

void *sub_1A5EC3C4C()
{
  return sub_1A5EDE39C();
}

id UploadBatchEventConfig.with(maxEventsPerSessionBatch:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, double);
  _BYTE *v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  objc_super v19;

  v2 = v1;
  v18 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = sub_1A5F63DD0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch);
  v10 = *(_BYTE *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled);
  v11 = *(_BYTE *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled);
  v12 = *(_QWORD *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries);
  v13 = *(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16);
  v13(v8, v2 + OBJC_IVAR___AAUploadBatchEventConfig_directory, v4, v6);
  v14 = objc_allocWithZone(ObjectType);
  *(_QWORD *)&v14[OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch] = v18;
  *(_QWORD *)&v14[OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch] = v9;
  v14[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled] = v10;
  v14[OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled] = v11;
  *(_QWORD *)&v14[OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries] = v12;
  ((void (*)(_BYTE *, char *, uint64_t))v13)(&v14[OBJC_IVAR___AAUploadBatchEventConfig_directory], v8, v4);
  v19.receiver = v14;
  v19.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v15;
}

id UploadBatchEventConfig.with(debuggingEnabled:)(int a1)
{
  uint64_t v1;
  uint64_t v2;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, double);
  _BYTE *v14;
  id v15;
  uint64_t v17;
  int v18;
  objc_super v19;

  v2 = v1;
  v18 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = sub_1A5F63DD0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch);
  v11 = *(_BYTE *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled);
  v12 = *(_QWORD *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries);
  v13 = *(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16);
  v13(v8, v2 + OBJC_IVAR___AAUploadBatchEventConfig_directory, v4, v6);
  v14 = objc_allocWithZone(ObjectType);
  *(_QWORD *)&v14[OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch] = v9;
  *(_QWORD *)&v14[OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch] = v10;
  v14[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled] = v11;
  v14[OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled] = v18;
  *(_QWORD *)&v14[OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries] = v12;
  ((void (*)(_BYTE *, char *, uint64_t))v13)(&v14[OBJC_IVAR___AAUploadBatchEventConfig_directory], v8, v4);
  v19.receiver = v14;
  v19.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v15;
}

uint64_t sub_1A5EC3F30(_QWORD *a1)
{
  return TimedData.encode(to:)(a1);
}

uint64_t TimedData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;

  sub_1A5EC40DC(0, &qword_1ED1CD960, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5EC4138();
  sub_1A5F64970();
  v12 = 0;
  sub_1A5F63F08();
  sub_1A5ECC4D8(qword_1ED1CDE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1A5F64820();
  if (!v1)
  {
    type metadata accessor for TimedData();
    v11 = 1;
    sub_1A5F64820();
    v10 = 2;
    sub_1A5F6482C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1A5EC40DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1A5EC4138();
    v7 = a3(a1, &type metadata for TimedData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1A5EC4138()
{
  unint64_t result;

  result = qword_1ED1CD868;
  if (!qword_1ED1CD868)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F6C68C, &type metadata for TimedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1CD868);
  }
  return result;
}

uint64_t sub_1A5EC417C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSArray *v4;
  uint64_t v5;
  objc_class *v6;
  _BYTE *v7;
  id v8;
  uint64_t result;
  objc_super v10;

  v0 = sub_1A5F63DD0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, 1uLL, 1);
  v5 = sub_1A5F642A4();

  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1A5F63D40();
    swift_bridgeObjectRelease();
    v6 = (objc_class *)type metadata accessor for UploadBatchEventConfig();
    v7 = objc_allocWithZone(v6);
    *(_QWORD *)&v7[OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch] = 50;
    *(_QWORD *)&v7[OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch] = 200000;
    v7[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled] = 0;
    v7[OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled] = 0;
    *(_QWORD *)&v7[OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries] = 5;
    (*(void (**)(_BYTE *, char *, uint64_t))(v1 + 16))(&v7[OBJC_IVAR___AAUploadBatchEventConfig_directory], v3, v0);
    v10.receiver = v7;
    v10.super_class = v6;
    v8 = objc_msgSendSuper2(&v10, sel_init);
    result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    qword_1ED1CE4E0 = (uint64_t)v8;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

void __swiftcall DenylistDescriptor.init(value:)(AppAnalytics::DenylistDescriptor *__return_ptr retstr, Swift::String value)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;

  object = value._object;
  countAndFlagsBits = value._countAndFlagsBits;
  v5 = (void *)0xE100000000000000;
  sub_1A5ED57CC();
  v6 = (_QWORD *)sub_1A5F645A4();
  v7 = v6[2];
  if (!v7)
    goto LABEL_7;
  swift_bridgeObjectRelease();
  switch(v7)
  {
    case 3:
      v11 = v6[2];
      if (v11)
      {
        if (v11 != 1)
        {
          if (v11 >= 3)
          {
            countAndFlagsBits = v6[4];
            object = (void *)v6[5];
            v8 = v6[6];
            v5 = (void *)v6[7];
            v9 = v6[8];
            v12 = (void *)v6[9];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v10 = v12;
LABEL_17:
            swift_bridgeObjectRetain();
            goto LABEL_18;
          }
          goto LABEL_21;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    case 2:
      v13 = v6[2];
      if (v13)
      {
        if (v13 != 1)
        {
          countAndFlagsBits = v6[4];
          object = (void *)v6[5];
          v8 = v6[6];
          v14 = (void *)v6[7];
          swift_bridgeObjectRetain();
          v10 = (void *)0xE100000000000000;
          v9 = 42;
          v5 = v14;
          goto LABEL_17;
        }
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
LABEL_22:
      __break(1u);
      goto LABEL_23;
    case 1:
      if (!v6[2])
      {
        __break(1u);
LABEL_7:
        v8 = 42;
        v9 = 42;
        v10 = (void *)0xE100000000000000;
LABEL_18:
        swift_bridgeObjectRelease();
        retstr->eventName._countAndFlagsBits = countAndFlagsBits;
        retstr->eventName._object = object;
        retstr->dataName._countAndFlagsBits = v8;
        retstr->dataName._object = v5;
        retstr->propertyName._countAndFlagsBits = v9;
        retstr->propertyName._object = v10;
        return;
      }
      goto LABEL_16;
  }
  if (v6[2])
  {
LABEL_16:
    countAndFlagsBits = v6[4];
    v8 = 42;
    object = (void *)v6[5];
    v9 = 42;
    v10 = (void *)0xE100000000000000;
    goto LABEL_17;
  }
LABEL_24:
  __break(1u);
}

uint64_t objectdestroy_2Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

uint64_t AccessSessionManager.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A5F63F08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  sub_1A5EF3D48(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t AccessTracker.explicitSubmit<A>(_:submitTime:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  uint64_t v13;
  _OWORD v14[2];

  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = *(_QWORD *)(result + 96);
    memset(v14, 0, sizeof(v14));
    swift_retain();
    sub_1A5ED9E4C(a1, v13, 0, a2, (uint64_t)v14, a3, a4, a5, a6);
    swift_release();
    swift_release();
    return sub_1A5EF4054((uint64_t)v14, (unint64_t *)&qword_1ED1CF848, MEMORY[0x1E0DEE9B8] + 8);
  }
  return result;
}

uint64_t sub_1A5EC465C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void (*v12)(_QWORD *, uint64_t, unint64_t, double);
  id v13;
  void (*v14)(_QWORD *, unint64_t);
  void *v15;
  id v16;
  char v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD *, unint64_t);
  void (*v37)(_QWORD *, _QWORD, unint64_t);
  unsigned int v38;
  unint64_t v39;
  _QWORD *v40;
  unint64_t v41;

  v35 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v35);
  v2 = (uint64_t *)((char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_1A5F64070();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(_QWORD *)(v0 + 24);
  v9 = OBJC_IVAR___AAAccessQueue_queue;
  v10 = *(void **)(v8 + OBJC_IVAR___AAAccessQueue_queue);
  *v7 = v10;
  v11 = *MEMORY[0x1E0DEF740];
  v12 = *(void (**)(_QWORD *, uint64_t, unint64_t, double))(v4 + 104);
  v12(v7, v11, v3, v5);
  v13 = v10;
  LOBYTE(v10) = sub_1A5F64088();
  v14 = *(void (**)(_QWORD *, unint64_t))(v4 + 8);
  v14(v7, v3);
  if ((v10 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v15 = *(void **)(v8 + v9);
  *v7 = v15;
  ((void (*)(_QWORD *, uint64_t, unint64_t))v12)(v7, v11, v3);
  v16 = v15;
  v17 = sub_1A5F64088();
  v14(v7, v3);
  if ((v17 & 1) == 0)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain_n();
    result = sub_1A5F64724();
    v18 = result;
    if (result)
      goto LABEL_5;
LABEL_28:
    v40 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_29:
    swift_bridgeObjectRelease_n();
    v34 = sub_1A5EBB88C((uint64_t)v40);
    swift_bridgeObjectRelease();
    return v34;
  }
  v39 = v3;
  v3 = *(_QWORD *)(v0 + 56);
  if (v3 >> 62)
    goto LABEL_27;
  v18 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain_n();
  if (!v18)
    goto LABEL_28;
LABEL_5:
  if (v18 >= 1)
  {
    v36 = v14;
    v37 = (void (*)(_QWORD *, _QWORD, unint64_t))v12;
    v38 = v11;
    v11 = 0;
    v41 = v3 & 0xC000000000000001;
    v40 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v20 = v39;
    while (1)
    {
      if (v41)
      {
        v12 = (void (*)(_QWORD *, uint64_t, unint64_t, double))MEMORY[0x1A85B836C](v11, v3);
      }
      else
      {
        v12 = *(void (**)(_QWORD *, uint64_t, unint64_t, double))(v3 + 8 * v11 + 32);
        swift_retain();
      }
      Strong = swift_weakLoadStrong();
      if (Strong)
      {
        v22 = Strong;
        v14 = (void (*)(_QWORD *, unint64_t))v3;
        v3 = v18;
        v23 = *(void **)(*(_QWORD *)(Strong + 48) + OBJC_IVAR___AAAccessQueue_queue);
        *v7 = v23;
        v37(v7, v38, v20);
        v24 = v23;
        LOBYTE(v23) = sub_1A5F64088();
        v36(v7, v20);
        if ((v23 & 1) == 0)
        {
          __break(1u);
          goto LABEL_25;
        }
        v25 = v22 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
        swift_beginAccess();
        sub_1A5ED7E14(v25, (uint64_t)v2, type metadata accessor for SessionManager.SessionState);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload)
        {
          if (EnumCaseMultiPayload == 1)
            sub_1A5ED4D44((uint64_t)v2, type metadata accessor for SessionManager.SessionState);
          swift_release();
          swift_release();
        }
        else
        {
          v27 = *v2;
          swift_release();
          v29 = *(_QWORD *)(v27 + 16);
          v28 = *(_QWORD *)(v27 + 24);
          swift_bridgeObjectRetain();
          swift_release();
          swift_release();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v40 = sub_1A5EDB2D8(0, v40[2] + 1, 1, v40);
          v31 = v40[2];
          v30 = v40[3];
          if (v31 >= v30 >> 1)
            v40 = sub_1A5EDB2D8((_QWORD *)(v30 > 1), v31 + 1, 1, v40);
          v32 = v40;
          v40[2] = v31 + 1;
          v33 = &v32[2 * v31];
          v33[4] = v29;
          v33[5] = v28;
        }
        v18 = v3;
        v3 = (unint64_t)v14;
      }
      else
      {
        swift_release();
      }
      if (v18 == ++v11)
        goto LABEL_29;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5EC4A24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char v14[16];

  v0 = sub_1A5F63D10();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CE6B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v14[-v5];
  v7 = sub_1A5F63DD0();
  __swift_allocate_value_buffer(v7, qword_1ED1CD088);
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED1CD088);
  v8 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v9 = 1;
  v10 = objc_msgSend(v8, sel_URLsForDirectory_inDomains_, 14, 1);

  v11 = sub_1A5F642A4();
  v12 = *(_QWORD *)(v7 - 8);
  if (*(_QWORD *)(v11 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v6, v11 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v7);
    v9 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v6, v9, 1, v7);
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    strcpy(v14, "summary-events");
    v14[15] = -18;
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAFD78], v0);
    sub_1A5ED57CC();
    sub_1A5F63DC4();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, v7);
  }
  return result;
}

uint64_t AccessTracker.time<A>(_:submitAndRestartWithSession:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;
  uint64_t v15;
  void *v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a3;
  v20 = a4;
  v6 = sub_1A5F63F08();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A5F64070();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = swift_weakLoadStrong();
  if (result)
  {
    v15 = result;
    v16 = *(void **)(*(_QWORD *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v13 = v16;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
    v17 = v16;
    LOBYTE(v16) = sub_1A5F64088();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
    if ((v16 & 1) != 0)
    {
      v18 = *(_QWORD *)(v15 + 96);
      swift_retain();
      sub_1A5F63EFC();
      sub_1A5EEF69C(a1, v18, (uint64_t)v9, a2 & 1, v19, v20);
      swift_release();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

_QWORD *initializeWithCopy for DenylistDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A5EC4E30()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

char *sub_1A5EC4E5C()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  char *v7;
  NSObject *v8;
  char *v9;
  id v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = OBJC_IVAR___AATrackingConsent_accessGroup;
  v3 = v0;
  *(_QWORD *)&v0[v2] = dispatch_group_create();
  v4 = OBJC_IVAR___AATrackingConsent_lock;
  type metadata accessor for UnfairLock();
  v5 = swift_allocObject();
  v6 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v5 + 16) = v6;
  *v6 = 0;
  *(_DWORD *)(v5 + 24) = 0x10000;
  *(_QWORD *)&v3[v4] = v5;
  v3[OBJC_IVAR___AATrackingConsent_consented] = 0;

  v12.receiver = v3;
  v12.super_class = ObjectType;
  v7 = (char *)objc_msgSendSuper2(&v12, sel_init);
  v8 = *(NSObject **)&v7[OBJC_IVAR___AATrackingConsent_accessGroup];
  v9 = v7;
  dispatch_group_enter(v8);
  if (qword_1ED1CFC08 != -1)
    swift_once();
  v10 = (id)qword_1ED1CE7B0;
  sub_1A5F64454();
  sub_1A5F63F80();

  return v9;
}

void sub_1A5EC4FA0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  objc_class *v9;
  char *v10;
  char *v11;
  id v12;
  char *v13;
  char *v14;
  uint64_t v15;
  _DWORD *v16;
  id v17;
  uint64_t v18;
  objc_super v19;

  v0 = sub_1A5F64028();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF5B0];
  v2 = *(_QWORD *)(v0 - 8);
  v3 = MEMORY[0x1E0C80A78](v0);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v18 - v6;
  sub_1A5ED4A58();
  v8 = (void *)sub_1A5F644A8();
  v9 = (objc_class *)type metadata accessor for AccessQueue();
  v10 = (char *)objc_allocWithZone(v9);
  *(_QWORD *)&v10[OBJC_IVAR___AAAccessQueue_queue] = v8;
  v11 = v10;
  v12 = v8;
  sub_1A5F63FF8();
  v13 = &v11[OBJC_IVAR___AAAccessQueue__qos];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v0);
  sub_1A5ECD49C(0, &qword_1ED1CE2C8, v1, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Atomic);
  v14 = (char *)swift_allocObject();
  type metadata accessor for UnfairLock();
  v15 = swift_allocObject();
  v16 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v15 + 16) = v16;
  *v16 = 0;
  *(_DWORD *)(v15 + 24) = 0x10000;
  *((_QWORD *)v14 + 2) = v15;
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(&v14[*(_QWORD *)(*(_QWORD *)v14 + 96)], v5, v0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v0);
  *(_QWORD *)v13 = v14;
  swift_endAccess();

  v19.receiver = v11;
  v19.super_class = v9;
  v17 = objc_msgSendSuper2(&v19, sel_init);

  qword_1ED1CCCD0 = (uint64_t)v17;
}

void sub_1A5EC5178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;

  sub_1A5ECD49C(0, &qword_1ED1CE578, (uint64_t (*)(uint64_t))type metadata accessor for Batch, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v47 = (uint64_t *)((char *)&v42 - v2);
  v3 = type metadata accessor for Batch();
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  MEMORY[0x1E0C80A78](v3);
  v44 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v42 - v6;
  v8 = sub_1A5F63DD0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
  os_unfair_lock_lock_with_options();
  v12 = (_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24);
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), v13);
  v52 = v0;
  sub_1A5ED7F90();
  v15 = v55;
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 128))(v11, v13, v14);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
LABEL_3:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v52 + v48) + 16));
    return;
  }
  v17 = v16;
  v51 = v12;
  v43 = v7;
  v55 = 0;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v18 = *(_QWORD *)(v17 + 16);
  v42 = v17;
  if (v18)
  {
    v50 = v52 + 40;
    swift_beginAccess();
    v19 = (uint64_t *)(v17 + 40);
    v49 = MEMORY[0x1E0DEE9D8];
    v20 = v51;
    while (1)
    {
      v22 = *(v19 - 1);
      v21 = *v19;
      v23 = *(_QWORD *)(*(_QWORD *)v50 + 16);
      swift_bridgeObjectRetain();
      if (v23)
      {
        swift_bridgeObjectRetain();
        sub_1A5EF11E8(v22, v21);
        v25 = v24;
        swift_bridgeObjectRelease();
      }
      else
      {
        v25 = 0;
      }
      v26 = sub_1A5ED89B8(v22, v21);
      v27 = v20;
      v29 = v20[3];
      v28 = v20[4];
      __swift_project_boxed_opaque_existential_1(v27, v29);
      v30 = v55;
      v31 = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v28 + 32))(&v53, v26, v29, v28);
      v55 = v30;
      if (v30)
        break;
      if (v54 == 1 && !((v53 == 0) | v25 & 1))
      {
        v32 = (void *)MEMORY[0x1A85B8720](v31);
        v33 = v47;
        sub_1A5EE4B5C(v22, v21, v47);
        v34 = v45;
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v45 + 48))(v33, 1, v46) == 1)
        {
          sub_1A5ED43E0((uint64_t)v33, &qword_1ED1CE578, (uint64_t (*)(uint64_t))type metadata accessor for Batch);
        }
        else
        {
          v35 = (uint64_t)v33;
          v36 = (uint64_t)v43;
          sub_1A5ECD6B0(v35, (uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
          v37 = v44;
          sub_1A5ED7E14(v36, v44, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v38 = v49;
          else
            v38 = sub_1A5EC55E4(0, *(_QWORD *)(v49 + 16) + 1, 1, v49);
          v40 = *(_QWORD *)(v38 + 16);
          v39 = *(_QWORD *)(v38 + 24);
          if (v40 >= v39 >> 1)
            v38 = sub_1A5EC55E4(v39 > 1, v40 + 1, 1, v38);
          *(_QWORD *)(v38 + 16) = v40 + 1;
          v41 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
          v49 = v38;
          sub_1A5ECD6B0(v37, v38 + v41 + *(_QWORD *)(v34 + 72) * v40, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
          sub_1A5ED4D44((uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
        }
        objc_autoreleasePoolPop(v32);
      }
      v20 = v51;
      v19 += 2;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v18)
        goto LABEL_23;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  v49 = MEMORY[0x1E0DEE9D8];
LABEL_23:
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v52 + v48) + 16));
}

uint64_t sub_1A5EC55E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A5EEF3D8(a1, a2, a3, a4, &qword_1ED1CC010, (uint64_t (*)(uint64_t))type metadata accessor for Batch);
}

uint64_t getEnumTagSinglePayload for Batch()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t SessionManager.start(for:identifier:startDate:timestampJitter:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = v5;
  v22 = a2;
  v23 = a3;
  v10 = sub_1A5F63F08();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v14 = a1[1];
  v16 = *(_QWORD *)(v6 + 56);
  v24 = *(_QWORD *)(v6 + 48);
  v25 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  v17 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = v6;
  *((_QWORD *)v18 + 3) = a5;
  v19 = v23;
  *((_QWORD *)v18 + 4) = v22;
  *((_QWORD *)v18 + 5) = v19;
  *((_QWORD *)v18 + 6) = v15;
  *((_QWORD *)v18 + 7) = v14;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v18[v17], v13, v10);
  v20 = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5EF3C30(v15, v14);
  sub_1A5EEC784(v24, (uint64_t)sub_1A5EF6088, (uint64_t)v18);
  return swift_release();
}

uint64_t Tracker.chain(name:identifier:dynamicDataIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  id v22;
  char v23;
  _QWORD v27[5];
  uint64_t v28;

  v7 = (_QWORD *)v6;
  v11 = *(void **)(v6 + 88);
  v23 = *(_BYTE *)(v6 + 176);
  v12 = *(_QWORD *)(v6 + 96);
  v13 = *(_QWORD *)(v6 + 240);
  v22 = *(id *)(v6 + 80);
  v14 = v11;
  swift_retain();
  os_unfair_lock_lock_with_options();
  v15 = *(_QWORD *)(v6 + 160);
  swift_beginAccess();
  v16 = v7[19];
  v27[0] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A5ED37EC(v16);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  v28 = v15;
  v17 = v7[23];
  v18 = v7[24];
  sub_1A5ECE02C((uint64_t)(v7 + 25), (uint64_t)v27);
  type metadata accessor for Tracker();
  v19 = swift_allocObject();
  ObjectType = swift_getObjectType();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1A5F38D94(a1, a2, v22, v14, v23, v12, (uint64_t)v7, &v28, a3, a4, a5, a6, v17, (uint64_t)v27, v19, ObjectType, v18);
}

uint64_t sub_1A5EC58B4(char a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t result;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v4 = sub_1A5F64070();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1A5F63F2C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    sub_1A5F63F20();
    v12 = sub_1A5F63F14();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v15 = *(void **)(a2[3] + OBJC_IVAR___AAAccessQueue_queue);
    *v7 = v15;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
    v16 = v15;
    LOBYTE(v15) = sub_1A5F64088();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
    if ((v15 & 1) == 0)
    {
LABEL_13:
      __break(1u);
      return result;
    }
    a2[5] = v12;
    a2[6] = v14;
    swift_bridgeObjectRelease();
  }
  if (qword_1ED1CFC08 != -1)
    swift_once();
  v18 = (void *)qword_1ED1CE7B0;
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFBF8, (uint64_t (*)(uint64_t))sub_1A5EF7500, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1A5F679D0;
  v20 = *(void **)(a2[3] + OBJC_IVAR___AAAccessQueue_queue);
  *v7 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v21 = v18;
  v22 = v20;
  LOBYTE(v20) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v20 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  v24 = a2[5];
  v23 = a2[6];
  *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v19 + 64) = sub_1A5EE19C8();
  v25 = 7104878;
  if (v23)
    v25 = v24;
  v26 = 0xE300000000000000;
  if (v23)
    v26 = v23;
  *(_QWORD *)(v19 + 32) = v25;
  *(_QWORD *)(v19 + 40) = v26;
  swift_bridgeObjectRetain();
  sub_1A5F64454();
  sub_1A5F63F80();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5EC5B34()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63F08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A5EC5BE0(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v6 = v5;
  v8 = *v5;
  sub_1A5F06A48(0, a3, a4, a5);
  v39 = a2;
  v9 = sub_1A5F6473C();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_40;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v38 = v8 + 64;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v13 = v12 & *(_QWORD *)(v8 + 64);
  v37 = (unint64_t)(v11 + 63) >> 6;
  v14 = v9 + 64;
  result = swift_retain();
  v16 = 0;
  while (1)
  {
    if (v13)
    {
      v22 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v23 = v22 | (v16 << 6);
      goto LABEL_31;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v37)
      break;
    v25 = (_QWORD *)(v8 + 64);
    v26 = *(_QWORD *)(v38 + 8 * v24);
    ++v16;
    if (!v26)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v37)
        goto LABEL_33;
      v26 = *(_QWORD *)(v38 + 8 * v16);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v37)
        {
LABEL_33:
          swift_release();
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v26 = *(_QWORD *)(v38 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v16 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_42;
            if (v16 >= v37)
              goto LABEL_33;
            v26 = *(_QWORD *)(v38 + 8 * v16);
            ++v27;
            if (v26)
              goto LABEL_30;
          }
        }
        v16 = v27;
      }
    }
LABEL_30:
    v13 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v16 << 6);
LABEL_31:
    v32 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    v34 = *v32;
    v33 = v32[1];
    v35 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v23);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A5F64910();
    sub_1A5F6419C();
    result = sub_1A5F64928();
    v17 = -1 << *(_BYTE *)(v10 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v30 = v19 == v29;
        if (v19 == v29)
          v19 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v14 + 8 * v19);
      }
      while (v31 == -1);
      v20 = __clz(__rbit64(~v31)) + (v19 << 6);
    }
    *(_QWORD *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    v21 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v20);
    *v21 = v34;
    v21[1] = v33;
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v20) = v35;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v25 = (_QWORD *)(v8 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v8 + 32);
  if (v36 >= 64)
    bzero(v25, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v36;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v6 = v10;
  return result;
}

uint64_t sub_1A5EC5EFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v27;
  unint64_t v28;
  char v29;
  unsigned __int8 *v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  _UNKNOWN **v46;

  v39 = a8;
  v40 = a7;
  v38 = a6;
  v14 = sub_1A5F64070();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(void **)(v8[10] + OBJC_IVAR___AAAccessQueue_queue);
  *v17 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF740], v14);
  v19 = v18;
  v20 = sub_1A5F64088();
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v20 & 1) == 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  if ((a4 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v21 = *(_QWORD *)(a5 + 16);
    if (!v21)
      goto LABEL_12;
  }
  else
  {
    a3 = 0x80000001A5F6EDC0;
    a2 = 0xD000000000000010;
    v21 = *(_QWORD *)(a5 + 16);
    if (!v21)
      goto LABEL_12;
  }
  v22 = (unsigned __int8 *)(a5 + 32);
  v23 = v21;
  while (1)
  {
    v24 = *v22++;
    if (v24 == 2)
      break;
    if (!--v23)
      goto LABEL_12;
  }
  sub_1A5EEEDC8(a2, a3, 0, 0, 1, (uint64_t)&v44);
  v25 = *((_QWORD *)&v45 + 1);
  sub_1A5EF1CF8((uint64_t)&v44, &qword_1ED1CD458, qword_1ED1CE020, (uint64_t)&protocol descriptor for DataEventType);
  if (v25)
    return swift_bridgeObjectRelease();
LABEL_12:
  swift_beginAccess();
  v27 = v8[15];
  if (!*(_QWORD *)(v27 + 16))
  {
    v46 = 0;
    v44 = 0u;
    v45 = 0u;
LABEL_21:
    sub_1A5EF1CF8((uint64_t)&v44, (unint64_t *)&qword_1ED1CE4D8, (unint64_t *)&qword_1ED1CE4D0, (uint64_t)&protocol descriptor for DataEventStackType);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = sub_1A5EF11E8(a2, a3);
  if ((v29 & 1) != 0)
  {
    sub_1A5ECE02C(*(_QWORD *)(v27 + 56) + 40 * v28, (uint64_t)&v44);
  }
  else
  {
    v46 = 0;
    v44 = 0u;
    v45 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v45 + 1))
    goto LABEL_21;
  sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE4D0);
  sub_1A5EC62CC(0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v8 = v41;
    v20 = v42;
    v15 = v43;
    if (!v21)
      goto LABEL_28;
    goto LABEL_23;
  }
LABEL_22:
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v20 = a2;
  v15 = a3;
  if (!v21)
    goto LABEL_28;
LABEL_23:
  v30 = (unsigned __int8 *)(a5 + 32);
  while (1)
  {
    v31 = *v30++;
    if (v31 == 1)
      break;
    if (!--v21)
      goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_28:
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_33:
    v8 = sub_1A5F083E0(0, v8[2] + 1, 1, v8);
  v33 = v8[2];
  v32 = v8[3];
  if (v33 >= v32 >> 1)
    v8 = sub_1A5F083E0((_QWORD *)(v32 > 1), v33 + 1, 1, v8);
  v8[2] = v33 + 1;
  v34 = &v8[5 * v33];
  v34[4] = a1;
  v34[5] = a5;
  v35 = v40;
  v34[6] = v38;
  v34[7] = v35;
  v34[8] = v39;
  swift_unknownObjectRelease_n();
  sub_1A5EC62CC(0);
  *((_QWORD *)&v45 + 1) = v36;
  v46 = &off_1E4FD1350;
  *(_QWORD *)&v44 = v8;
  *((_QWORD *)&v44 + 1) = v20;
  *(_QWORD *)&v45 = v15;
  swift_beginAccess();
  sub_1A5EF0D60((uint64_t)&v44, a2, a3);
  return swift_endAccess();
}

void sub_1A5EC62CC(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED1CC9A8)
  {
    v2 = sub_1A5EF8E70();
    v4 = type metadata accessor for DataEventStack(a1, (uint64_t)&type metadata for BridgedDataEvent, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED1CC9A8);
  }
}

uint64_t dispatch thunk of JSON.toData(options:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

void *sub_1A5EC6350(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  _QWORD *v10;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  unint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = sub_1A5EDC758();
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v4 = sub_1A5F0410C();
    swift_bridgeObjectRelease();
    if (!v4)
    {
      sub_1A5F065C8();
      swift_allocError();
      *v10 = 0;
      goto LABEL_10;
    }
  }
  sub_1A5EDCB9C((uint64_t)v1 + OBJC_IVAR___AAJSON_value, (uint64_t)&v12);
  if (v13)
  {
    sub_1A5EF1B2C(&v12, &v14);
  }
  else
  {
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
    v15 = sub_1A5EFD068();
    *(_QWORD *)&v14 = v5;
    sub_1A5EDCB44((uint64_t)&v12);
  }
  v6 = (void *)objc_opt_self();
  __swift_project_boxed_opaque_existential_1(&v14, v15);
  v7 = sub_1A5F64874();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v14);
  *(_QWORD *)&v14 = 0;
  v8 = objc_msgSend(v6, sel_dataWithJSONObject_options_error_, v7, a1, &v14);
  swift_unknownObjectRelease();
  v9 = (id)v14;
  if (!v8)
  {
    v1 = v9;
    sub_1A5F63CE0();

LABEL_10:
    swift_willThrow();
    return v1;
  }
  v1 = (void *)sub_1A5F63E3C();

  return v1;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

id Tracker.bridgedTracker.getter()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  char *v11;
  objc_super v13;

  v2 = v0[2];
  v1 = v0[3];
  type metadata accessor for BridgedEventMirrorStore();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = MEMORY[0x1E0DEE9E0];
  v5 = v0[4];
  v4 = v0[5];
  v6 = (objc_class *)type metadata accessor for BridgedTracker();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = 0x6E6564646968;
  if (v1)
    v8 = v2;
  v9 = 0xE600000000000000;
  if (v1)
    v9 = v1;
  v10 = (uint64_t *)&v7[OBJC_IVAR___AATracker_name];
  *v10 = v8;
  v10[1] = v9;
  *(_QWORD *)&v7[OBJC_IVAR___AATracker_tracker] = v0;
  *(_QWORD *)&v7[OBJC_IVAR___AATracker_eventMirrorStore] = v3;
  v11 = &v7[OBJC_IVAR___AATracker_identifier];
  *(_QWORD *)v11 = v5;
  *((_QWORD *)v11 + 1) = v4;
  v13.receiver = v7;
  v13.super_class = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v13, sel_init);
}

uint64_t type metadata accessor for BridgedEventMirrorStore()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for BridgedTracker()
{
  return objc_opt_self();
}

uint64_t sub_1A5EC6674()
{
  sub_1A5F64910();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  return sub_1A5F64928();
}

uint64_t sub_1A5EC6720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  v10 = sub_1A5EC6A94(a2, a3);
  v12 = v11;
  swift_beginAccess();
  sub_1A5EC6A8C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = 0x8000000000000000;
  sub_1A5EC6808(a4, a5, a6 & 1, v10, v12, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a1 + 128) = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1A5EC6808(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;
  uint64_t result;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_1A5EF11E8(a4, a5);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_13;
  }
  v20 = v15;
  v21 = v14[3];
  if (v21 >= v19 && (a6 & 1) != 0)
    goto LABEL_9;
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_1A5F05EF4();
    goto LABEL_9;
  }
  sub_1A5EC6A98(v19, a6 & 1);
  v22 = sub_1A5EF11E8(a4, a5);
  if ((v20 & 1) != (v23 & 1))
  {
LABEL_13:
    result = sub_1A5F648C8();
    __break(1u);
    return result;
  }
  v16 = v22;
LABEL_9:
  v24 = a3 & 1;
  v25 = *v7;
  if ((v20 & 1) != 0)
  {
    v26 = v24 != 0;
    v27 = v25[7] + 24 * v16;
    result = sub_1A5EF6928();
    *(_QWORD *)v27 = a1;
    *(_QWORD *)(v27 + 8) = a2;
    *(_BYTE *)(v27 + 16) = v26;
  }
  else
  {
    sub_1A5EC6960(v16, a4, a5, a1, a2, v24, v25);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1A5EC6960(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, _QWORD *a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = (_QWORD *)(a7[6] + 16 * result);
  *v7 = a2;
  v7[1] = a3;
  v8 = a7[7] + 24 * result;
  *(_QWORD *)v8 = a4;
  *(_QWORD *)(v8 + 8) = a5;
  *(_BYTE *)(v8 + 16) = a6 & 1;
  v9 = a7[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a7[2] = v11;
  return result;
}

uint64_t sub_1A5EC69B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v16;
  uint64_t v17;

  v8 = v7;
  v16 = *(_QWORD *)(v7 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a6;
  *(_QWORD *)(v17 + 24) = a7;
  *(_QWORD *)(v17 + 32) = v8;
  *(_QWORD *)(v17 + 40) = a1;
  *(_QWORD *)(v17 + 48) = a2;
  *(_QWORD *)(v17 + 56) = a3;
  *(_QWORD *)(v17 + 64) = a4;
  *(_BYTE *)(v17 + 72) = a5 & 1;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5EC6A8C();
  sub_1A5EEC784(v16, (uint64_t)sub_1A5EF62E0, v17);
  return swift_release();
}

uint64_t sub_1A5EC6A8C()
{
  return swift_retain();
}

uint64_t sub_1A5EC6A98(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;

  v3 = v2;
  v5 = *v2;
  sub_1A5EF1B3C(0, &qword_1ED1CB660, (uint64_t)&type metadata for DataProvider, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v40 = a2;
  v6 = sub_1A5F6473C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v30 = *v29;
      v31 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 24 * v21;
      v34 = *(_QWORD *)v32;
      v33 = *(_QWORD *)(v32 + 8);
      v35 = *(_BYTE *)(v32 + 16);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1A5EC6A8C();
      }
      sub_1A5F64910();
      sub_1A5F6419C();
      result = sub_1A5F64928();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v30;
      v18[1] = v31;
      v19 = *(_QWORD *)(v7 + 56) + 24 * v17;
      *(_QWORD *)v19 = v34;
      *(_QWORD *)(v19 + 8) = v33;
      *(_BYTE *)(v19 + 16) = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A5EC6DD4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for SessionData<A>);
  result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for SessionData<A>, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

_QWORD *SessionManager.__allocating_init(accessQueue:sessionGroupManager:options:flushProcessor:timestampJitter:privacyValidationProvider:)(void *a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  dispatch_group_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t ObjectType;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v28 = a7;
  v13 = type metadata accessor for SummaryEventConfiguration(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a3;
  v17 = *(_QWORD *)(a5 + 8);
  v26 = *(_QWORD *)a5;
  v27 = v16;
  v18 = *(_BYTE *)(a5 + 16);
  v19 = dispatch_group_create();
  if (qword_1ED1CD310 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v13, (uint64_t)qword_1ED1CD2F8);
  sub_1A5ED7E14(v20, (uint64_t)v15, type metadata accessor for SummaryEventConfiguration);
  v21 = (_QWORD *)swift_allocObject();
  ObjectType = swift_getObjectType();
  v23 = sub_1A5F11CF4(a1, v19, a2, v27, a4, v26, v17, v18, a6, (uint64_t)v15, v21, ObjectType, v28);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v23;
}

uint64_t BridgedTracker.push(data:traits:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *ObjCClassFromMetadata;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD v22[3];
  char v23;

  type metadata accessor for BridgedRawDataEvent();
  v11 = swift_dynamicCastClass();
  if (v11)
  {
    v13 = *(_QWORD *)(v11 + OBJC_IVAR___AARawDataEvent_name);
    v12 = *(_QWORD *)(v11 + OBJC_IVAR___AARawDataEvent_name + 8);
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_getObjectType();
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    swift_unknownObjectRetain_n();
    v15 = objc_msgSend(ObjCClassFromMetadata, sel_dataName);
    v13 = sub_1A5F64130();
    v12 = v16;

  }
  v17 = *(_QWORD *)(v5 + OBJC_IVAR___AATracker_tracker);
  if (a2)
    v18 = sub_1A5EC7208();
  else
    v18 = (char *)MEMORY[0x1E0DEE9D8];
  v19 = *(_QWORD *)(v17 + 80);
  v22[0] = a1;
  v22[1] = v13;
  v22[2] = v12;
  v23 = 1;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v17;
  sub_1A5EC73F4((uint64_t)v22, (uint64_t)(v20 + 3), (uint64_t)&unk_1ED1CC440, (uint64_t)type metadata accessor for PushEvent, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1A5EC7440);
  v20[7] = v18;
  v20[8] = a3;
  v20[9] = a4;
  v20[10] = a5;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A5EEC784(v19, (uint64_t)sub_1A5EF6A58, (uint64_t)v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease_n();
  return swift_release();
}

uint64_t type metadata accessor for BridgedRawDataEvent()
{
  return objc_opt_self();
}

char *sub_1A5EC7208()
{
  uint64_t v0;
  _BYTE *v1;
  char *v2;
  unint64_t v3;
  unint64_t v4;
  _BYTE *v5;
  unint64_t v6;
  unint64_t v7;
  _BYTE *v8;
  unint64_t v9;
  unint64_t v10;

  v1 = (_BYTE *)(v0 + OBJC_IVAR___AADataEventTraits_onlyOnce);
  swift_beginAccess();
  if (*v1 == 1)
  {
    v2 = sub_1A5F08058(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v4 = *((_QWORD *)v2 + 2);
    v3 = *((_QWORD *)v2 + 3);
    if (v4 >= v3 >> 1)
      v2 = sub_1A5F08058((char *)(v3 > 1), v4 + 1, 1, v2);
    *((_QWORD *)v2 + 2) = v4 + 1;
    v2[v4 + 32] = 0;
  }
  else
  {
    v2 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v5 = (_BYTE *)(v0 + OBJC_IVAR___AADataEventTraits_unique);
  swift_beginAccess();
  if (*v5 == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1A5F08058(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
    v7 = *((_QWORD *)v2 + 2);
    v6 = *((_QWORD *)v2 + 3);
    if (v7 >= v6 >> 1)
      v2 = sub_1A5F08058((char *)(v6 > 1), v7 + 1, 1, v2);
    *((_QWORD *)v2 + 2) = v7 + 1;
    v2[v7 + 32] = 1;
  }
  v8 = (_BYTE *)(v0 + OBJC_IVAR___AADataEventTraits_discardWhenPresent);
  swift_beginAccess();
  if (*v8 == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1A5F08058(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
    v10 = *((_QWORD *)v2 + 2);
    v9 = *((_QWORD *)v2 + 3);
    if (v10 >= v9 >> 1)
      v2 = sub_1A5F08058((char *)(v9 > 1), v10 + 1, 1, v2);
    *((_QWORD *)v2 + 2) = v10 + 1;
    v2[v10 + 32] = 2;
  }
  return v2;
}

uint64_t sub_1A5EC73F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1A5EC7440(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1A5EF8E70();
    v7 = a3(a1, &type metadata for BridgedDataEvent, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1A5EC749C(_QWORD *a1, void (*a2)(uint64_t), uint64_t a3, NSObject *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  dispatch_group_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void (*v40)(char *, unint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  dispatch_group_t v44;
  uint64_t v45;
  _QWORD *v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  _QWORD v56[2];
  void (*v57)(uint64_t);
  uint64_t v58;
  uint64_t *v59;
  void (*v60)(char *, unint64_t, uint64_t);
  uint64_t v61;
  NSObject *v62;
  uint64_t v63;
  dispatch_group_t v64;
  _QWORD *v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  dispatch_group_t v71[5];

  v62 = a4;
  v63 = a5;
  v58 = a3;
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CE6B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v56 - v8;
  v10 = sub_1A5F63DD0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[21];
  v15 = a1[22];
  __swift_project_boxed_opaque_existential_1(a1 + 18, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
  v16 = sub_1A5EC3964((uint64_t)v13);
  v67 = v13;
  v68 = v11;
  v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18 = v16;
  v66 = v17;
  v17(v13, v10);
  v61 = *(_QWORD *)(v18 + 16);
  if (v61)
  {
    v19 = (char *)a1 + OBJC_IVAR____TtC12AppAnalytics12FlushManager_logger;
    swift_retain_n();
    swift_bridgeObjectRetain();
    v56[1] = v19;
    v20 = sub_1A5F63F8C();
    v21 = sub_1A5F64454();
    v22 = v21;
    v23 = os_log_type_enabled(v20, v21);
    v57 = a2;
    v65 = a1;
    if (v23)
    {
      v24 = swift_slowAlloc();
      LODWORD(v60) = v22;
      v25 = v24;
      v64 = (dispatch_group_t)swift_slowAlloc();
      v71[0] = v64;
      *(_DWORD *)v25 = 134218242;
      v69 = *(_QWORD *)(v18 + 16);
      v59 = &v70;
      sub_1A5F6458C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      v56[0] = v25 + 14;
      v27 = a1[21];
      v26 = a1[22];
      __swift_project_boxed_opaque_existential_1(a1 + 18, v27);
      v28 = v67;
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v26);
      v29 = sub_1A5F63D1C();
      v31 = v30;
      v66(v28, v10);
      v69 = sub_1A5F18694(v29, v31, (uint64_t *)v71);
      sub_1A5F6458C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5EB9000, v20, (os_log_type_t)v60, "Flush manager attempting to flush directory with %ld items, url=%{public}s", (uint8_t *)v25, 0x16u);
      v32 = v64;
      swift_arrayDestroy();
      MEMORY[0x1A85B8D2C](v32, -1, -1);
      MEMORY[0x1A85B8D2C](v25, -1, -1);
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease();
    }

    v64 = dispatch_group_create();
    v36 = 0;
    v37 = (uint64_t)v67;
    v38 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    v56[0] = v18;
    v39 = v18 + v38;
    v40 = *(void (**)(char *, unint64_t, uint64_t))(v68 + 16);
    v59 = *(uint64_t **)(v68 + 72);
    v60 = v40;
    while (1)
    {
      v60(v9, v39, v10);
      v41 = v36 + 1;
      if (__OFADD__(v36, 1))
      {
        __break(1u);
        return;
      }
      v42 = v68;
      v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56);
      v43(v9, 0, 1, v10);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v9, 1, v10) == 1)
        break;
      (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v37, v9, v10);
      v44 = v64;
      dispatch_group_enter(v64);
      v45 = swift_allocObject();
      *(_QWORD *)(v45 + 16) = v44;
      v44;
      sub_1A5EE80B0(v37, v62, v63, (uint64_t)sub_1A5EF984C, v45);
      swift_release();
      sub_1A5F6446C();
      v66((char *)v37, v10);
      ++v36;
      v39 += (unint64_t)v59;
      if (v41 == v61)
      {
        v43(v9, 1, 1, v10);
        break;
      }
    }
    swift_bridgeObjectRelease();
    v46 = v65;
    v47 = *(void **)(v65[2] + 24);
    sub_1A5EF7A40();
    v48 = v47;
    sub_1A5F644B4();

    v49 = (uint64_t)v71[0];
    swift_beginAccess();
    v50 = v46[29];
    v51 = *(_QWORD *)(v50 + 16);
    swift_retain();
    os_unfair_lock_lock_with_options();
    swift_beginAccess();
    *(_BYTE *)(v50 + 24) = 2;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v51 + 16));
    swift_release();
    sub_1A5EC2944(v49);
    swift_bridgeObjectRelease();
    v52 = sub_1A5F63F8C();
    v53 = sub_1A5F64454();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v54 = 0;
      _os_log_impl(&dword_1A5EB9000, v52, v53, "Flush manager finished flushing all files.", v54, 2u);
      MEMORY[0x1A85B8D2C](v54, -1, -1);
    }

    if (v57)
      v57(v55);

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v33 = a1[29];
    v34 = *(_QWORD *)(v33 + 16);
    swift_retain();
    os_unfair_lock_lock_with_options();
    swift_beginAccess();
    *(_BYTE *)(v33 + 24) = 2;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v34 + 16));
    v35 = swift_release();
    if (a2)
      a2(v35);
  }
}

_QWORD *assignWithTake for Session(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2 + 4;
  if (a1[5] >= 3uLL)
  {
    v9 = a2[5];
    if (v9 >= 3)
    {
      a1[4] = *v8;
      a1[5] = v9;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1A5F2F918((uint64_t)(a1 + 4));
  }
  *((_OWORD *)a1 + 2) = *(_OWORD *)v8;
LABEL_6:
  v10 = *(int *)(a3 + 28);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1A5F63F08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1A5EC7B68(int a1, id a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  _QWORD *result;
  uint64_t v38;
  int64_t v39;
  int64_t v40;
  id v41[4];
  __int128 v42;
  _OWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v2 = objc_msgSend(a2, sel_toDict);
  v3 = sub_1A5F640B8();

  v38 = v3 + 64;
  v4 = 1 << *(_BYTE *)(v3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v3 + 64);
  v39 = (unint64_t)(v4 + 63) >> 6;
  v40 = 0;
  v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v40 << 6);
LABEL_8:
      v11 = *(_QWORD *)(v3 + 56);
      v12 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v10);
      v13 = v12[1];
      *(_QWORD *)&v42 = *v12;
      *((_QWORD *)&v42 + 1) = v13;
      sub_1A5EF30B0(v11 + 32 * v10, (uint64_t)v43);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    v14 = v40 + 1;
    if (__OFADD__(v40, 1))
      goto LABEL_47;
    if (v14 < v39)
    {
      v15 = *(_QWORD *)(v38 + 8 * v14);
      if (v15)
        goto LABEL_12;
      v16 = v40 + 2;
      ++v40;
      if (v14 + 1 < v39)
      {
        v15 = *(_QWORD *)(v38 + 8 * v16);
        if (v15)
          goto LABEL_15;
        v40 = v14 + 1;
        if (v14 + 2 < v39)
        {
          v15 = *(_QWORD *)(v38 + 8 * (v14 + 2));
          if (v15)
          {
            v14 += 2;
            goto LABEL_12;
          }
          v16 = v14 + 3;
          v40 = v14 + 2;
          if (v14 + 3 < v39)
          {
            v15 = *(_QWORD *)(v38 + 8 * v16);
            if (v15)
            {
LABEL_15:
              v14 = v16;
LABEL_12:
              v6 = (v15 - 1) & v15;
              v10 = __clz(__rbit64(v15)) + (v14 << 6);
              v40 = v14;
              goto LABEL_8;
            }
            while (1)
            {
              v14 = v16 + 1;
              if (__OFADD__(v16, 1))
                goto LABEL_48;
              if (v14 >= v39)
                break;
              v15 = *(_QWORD *)(v38 + 8 * v14);
              ++v16;
              if (v15)
                goto LABEL_12;
            }
            v40 = v39 - 1;
          }
        }
      }
    }
    v6 = 0;
    memset(v43, 0, sizeof(v43));
    v42 = 0u;
LABEL_27:
    sub_1A5EC803C((uint64_t)&v42, (uint64_t)&v44);
    v17 = v45;
    if (!v45)
    {
      swift_release();
      return v7;
    }
    v18 = v44;
    sub_1A5EF1B2C(&v46, &v42);
    sub_1A5EC8088();
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A5F08EC0();
      swift_allocError();
      *v35 = 2;
      swift_willThrow();
      swift_release();
      return v7;
    }
    v19 = v41[0];
    v41[0] = 0;
    v20 = objc_msgSend(v19, sel_toJsonValueAndReturnError_, v41);
    v21 = v41[0];
    if (!v20)
    {
      v36 = v21;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A5F63CE0();

      swift_willThrow();
      swift_release();
      swift_unknownObjectRelease();
      return v7;
    }
    sub_1A5F645C8();
    swift_unknownObjectRelease();
    sub_1A5EF1B2C(&v42, v41);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = sub_1A5EF11E8(v18, v17);
    v25 = v7[2];
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
    }
    v28 = v23;
    if (v7[3] < v27)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v23 & 1) != 0)
        goto LABEL_4;
    }
    else
    {
      sub_1A5F0510C();
      if ((v28 & 1) != 0)
      {
LABEL_4:
        v8 = (_OWORD *)(v7[7] + 32 * v24);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
        sub_1A5EF1B2C(v41, v8);
        goto LABEL_5;
      }
    }
LABEL_37:
    v7[(v24 >> 6) + 8] |= 1 << v24;
    v31 = (uint64_t *)(v7[6] + 16 * v24);
    *v31 = v18;
    v31[1] = v17;
    sub_1A5EF1B2C(v41, (_OWORD *)(v7[7] + 32 * v24));
    v32 = v7[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_46;
    v7[2] = v34;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1A5EF1814(v27, isUniquelyReferenced_nonNull_native);
  v29 = sub_1A5EF11E8(v18, v17);
  if ((v28 & 1) == (v30 & 1))
  {
    v24 = v29;
    if ((v28 & 1) != 0)
      goto LABEL_4;
    goto LABEL_37;
  }
  result = (_QWORD *)sub_1A5F648C8();
  __break(1u);
  return result;
}

uint64_t sub_1A5EC803C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5EDCCA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A5EC8088()
{
  unint64_t result;

  result = qword_1ED1CCD88[0];
  if (!qword_1ED1CCD88[0])
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, qword_1ED1CCD88);
  }
  return result;
}

void sub_1A5EC8138(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t (*v27)(uint64_t);
  const void *v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[6];

  v30 = a1;
  v31 = a2;
  v7 = sub_1A5F63FE0();
  v34 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A5F64028();
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v13 = v4[29];
  v14 = *(_QWORD *)(v13 + 16);
  swift_retain();
  os_unfair_lock_lock_with_options();
  swift_beginAccess();
  v15 = *(unsigned __int8 *)(v13 + 24);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  swift_release();
  if (v15)
  {
    v16 = sub_1A5F63F8C();
    v17 = sub_1A5F6443C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1A5EB9000, v16, v17, "Error: Flush manager attempting to flush with a flush already in progress.", v18, 2u);
      MEMORY[0x1A85B8D2C](v18, -1, -1);
    }

    if (a3)
      a3();
  }
  else
  {
    v19 = v4[29];
    v20 = *(_QWORD *)(v19 + 16);
    swift_retain();
    os_unfair_lock_lock_with_options();
    swift_beginAccess();
    *(_BYTE *)(v19 + 24) = 1;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));
    swift_release();
    v21 = *(void **)(v4[2] + 32);
    v29[1] = v4[30];
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v4;
    v22[3] = a3;
    v23 = (uint64_t)a3;
    v24 = v30;
    v25 = v31;
    v22[4] = a4;
    v22[5] = v24;
    v22[6] = v25;
    aBlock[4] = sub_1A5EF9854;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A5ECE4D0;
    aBlock[3] = &block_descriptor_1;
    v29[0] = _Block_copy(aBlock);
    v26 = v21;
    swift_retain();
    sub_1A5EC84CC(v23);
    sub_1A5EC84CC(v24);
    sub_1A5F64004();
    v35 = MEMORY[0x1E0DEE9D8];
    v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1A5ECC4D8((unint64_t *)&qword_1ED1CF7F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1A5ECD49C(0, &qword_1ED1CE518, v27, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1A5ED26BC((unint64_t *)&qword_1ED1CE520, &qword_1ED1CE518, v27);
    sub_1A5F645E0();
    v28 = (const void *)v29[0];
    sub_1A5F64478();
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v33);
    swift_release();
  }
}

uint64_t sub_1A5EC84CC(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_1A5EC84DC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double sub_1A5EC8554@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  __int128 v8[2];
  uint64_t v9;
  __int128 v10[2];
  __int128 v11;
  _BYTE v12[32];

  v5 = *a1;
  v4 = a1[1];
  v6 = (uint64_t)(a1 + 2);
  *(_QWORD *)&v11 = *a1;
  *((_QWORD *)&v11 + 1) = v4;
  sub_1A5EF30B0((uint64_t)(a1 + 2), (uint64_t)v12);
  if (v4)
  {
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
    v11 = *(_OWORD *)a1;
    sub_1A5EF30B0(v6, (uint64_t)v12);
    sub_1A5EE2EE8(0, &qword_1ED1CE0B0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1A5EC1D18(v8, (uint64_t)v10);
      sub_1A5EC1D18(v10, a2 + 16);
      *(_QWORD *)a2 = v5;
      *(_QWORD *)(a2 + 8) = v4;
      return result;
    }
    v9 = 0;
    memset(v8, 0, sizeof(v8));
    swift_bridgeObjectRelease();
    sub_1A5ED4D44((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1A5F2FCEC);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  }
  *(_QWORD *)(a2 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  return result;
}

void sub_1A5EC8680(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

void sub_1A5EC8E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = sub_1A5F63E60();
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

uint64_t sub_1A5EC8F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  sub_1A5EE1EF0(v4, v3);
  sub_1A5EE1EF0(v4, v3);
  swift_bridgeObjectRetain();
  sub_1A5F63E6C();
  sub_1A5EF0908(v4, v3);
  sub_1A5EC9030();
  v7 = 0;
  while (1)
  {
    result = sub_1A5F64580();
    if ((*(_BYTE *)(v6 - 65) & 1) != 0)
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v2);
      v11 = *(_QWORD *)(v0 + 16);
      result = swift_bridgeObjectRelease();
      if (v11 != v7)
      {
        if (v7 < v11)
          return 0;
        goto LABEL_13;
      }
      return 1;
    }
    v9 = *(_QWORD *)(v0 + 16);
    if (v7 == v9)
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v2);
      swift_bridgeObjectRelease();
      return 1;
    }
    if (v7 >= v9)
      break;
    v10 = v0 + v7++;
    if (*(unsigned __int8 *)(v6 - 66) != *(unsigned __int8 *)(v10 + 32))
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v2);
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

unint64_t sub_1A5EC9030()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1CDE38;
  if (!qword_1ED1CDE38)
  {
    v1 = sub_1A5F63E60();
    result = MEMORY[0x1A85B8C3C](MEMORY[0x1E0CB02D0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1CDE38);
  }
  return result;
}

uint64_t sub_1A5EC9078()
{
  uint64_t v0;
  id v1;
  char v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;

  v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v2 = sub_1A5EC1E18(v1);
  *(_QWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + 24) = (v2 & 1) == 0;
  v3 = (void *)objc_opt_self();
  v4 = v1;
  v5 = objc_msgSend(v3, sel_defaultCenter);
  swift_retain();
  v6 = (void *)sub_1A5F6410C();
  objc_msgSend(v5, sel_addObserver_selector_name_object_, v0, sel_willTerminate, v6, 0);

  swift_release();
  v7 = objc_msgSend(v3, sel_defaultCenter);
  swift_retain();
  v8 = (void *)sub_1A5F6410C();
  objc_msgSend(v7, sel_addObserver_selector_name_object_, v0, sel_willTerminate, v8, 0);

  swift_release();
  if (*(_BYTE *)(v0 + 24) == 1)
  {
    if (qword_1ED1CFC08 == -1)
      goto LABEL_5;
    goto LABEL_6;
  }
  if (qword_1ED1CFC08 != -1)
LABEL_6:
    swift_once();
LABEL_5:
  v9 = (id)qword_1ED1CE7B0;
  sub_1A5F64454();
  sub_1A5F63F80();

  v10 = (void *)sub_1A5F6410C();
  objc_msgSend(v4, sel_setBool_forKey_, 0, v10);

  return v0;
}

uint64_t AccessSessionManager.push<A>(_:traits:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v12 = type metadata accessor for SessionData(255, a6, a7, a4);
  v13 = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for SessionData<A>, v12);
  v15 = type metadata accessor for PushEvent(0, v12, v13, v14);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v21 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(_QWORD *)(v12 - 8) + 16))((char *)&v21 - v18, a1, v12, v17);
  swift_storeEnumTagMultiPayload();
  sub_1A5EF1EB8((uint64_t)v19, a2, a3, v21, v22, a6, a7);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

uint64_t sub_1A5EC9410@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  void (*v45)(_QWORD *, uint64_t, uint64_t, double);
  id v46;
  void (*v47)(_QWORD *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  int EnumCaseMultiPayload;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  char *v65;
  void (*v66)(char *, uint64_t, uint64_t);
  char *v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t, uint64_t);
  double v124;
  double v125;
  void (*v126)(char *, uint64_t);
  double v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  unint64_t v143;
  unint64_t v144;
  _QWORD *v145;
  uint64_t *v146;
  unint64_t v147;
  char v148;
  char v149;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  unint64_t v159;
  char v160;
  char v161;
  char v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  id v169;
  unint64_t v170;
  _QWORD *v171;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  unint64_t v176;
  _QWORD v177[2];
  uint64_t v178;
  _QWORD *v179;
  uint64_t *v180;
  char *v181;
  void (*v182)(char *, uint64_t, uint64_t);
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  void (*v197)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  _QWORD *v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t *v213;
  uint64_t v214;
  char *v215;
  unint64_t v216;
  uint64_t v217;
  __int128 v218;
  uint64_t v219;
  _OWORD v220[2];
  uint64_t v221;
  _QWORD v222[2];
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  char v227;

  v7 = v6;
  v211 = a5;
  v210 = a4;
  v198 = a3;
  v216 = a2;
  v205 = (_QWORD *)a1;
  v178 = a6;
  v209 = type metadata accessor for SequenceEntry(0);
  v208 = *(_QWORD *)(v209 - 8);
  MEMORY[0x1E0C80A78](v209);
  v212 = (uint64_t)v177 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v177 - v10);
  MEMORY[0x1E0C80A78](v12);
  v189 = (uint64_t)v177 - v13;
  MEMORY[0x1E0C80A78](v14);
  v188 = (char *)v177 - v15;
  MEMORY[0x1E0C80A78](v16);
  v203 = (uint64_t)v177 - v17;
  MEMORY[0x1E0C80A78](v18);
  v202 = (_QWORD *)((char *)v177 - v19);
  MEMORY[0x1E0C80A78](v20);
  v193 = (uint64_t)v177 - v21;
  MEMORY[0x1E0C80A78](v22);
  v192 = (_QWORD *)((char *)v177 - v23);
  v187 = sub_1A5F63F08();
  v186 = *(_QWORD *)(v187 - 8);
  MEMORY[0x1E0C80A78](v187);
  v185 = (char *)v177 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v184 = (char *)v177 - v26;
  v207 = type metadata accessor for TimedData();
  MEMORY[0x1E0C80A78](v207);
  v195 = (char *)v177 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v191 = (uint64_t)v177 - v29;
  sub_1A5EF8034();
  MEMORY[0x1E0C80A78](v30);
  v181 = (char *)v177 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v196 = (uint64_t)v177 - v33;
  v200 = type metadata accessor for Tracker.Timer();
  v204 = *(_QWORD *)(v200 - 8);
  MEMORY[0x1E0C80A78](v200);
  v194 = (uint64_t)v177 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = (char *)type metadata accessor for Sequence(0);
  MEMORY[0x1E0C80A78](v215);
  v213 = (_QWORD *)((char *)v177 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v206 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v206);
  v37 = (_QWORD *)((char *)v177 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = sub_1A5F64070();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = MEMORY[0x1E0C80A78](v38);
  v42 = (_QWORD *)((char *)v177 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = *(void **)(*(_QWORD *)(v7 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v42 = v43;
  v44 = *MEMORY[0x1E0DEF740];
  v45 = *(void (**)(_QWORD *, uint64_t, uint64_t, double))(v39 + 104);
  v45(v42, v44, v38, v40);
  v46 = v43;
  LOBYTE(v43) = sub_1A5F64088();
  v47 = *(void (**)(_QWORD *, uint64_t))(v39 + 8);
  v47(v42, v38);
  if ((v43 & 1) == 0)
  {
LABEL_110:
    __break(1u);
    goto LABEL_111;
  }
  sub_1A5EF9C84((unint64_t)v205, v216, &v225);
  LODWORD(v199) = v225;
  v214 = v7;
  v48 = MEMORY[0x1A85B8E10](v7 + 64);
  v49 = 0;
  if (!v48)
  {
    v42 = v205;
    v56 = v214;
    v55 = v204;
LABEL_10:
    v57 = v216;
    goto LABEL_11;
  }
  v50 = v48;
  v51 = *(void **)(*(_QWORD *)(v48 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *v42 = v51;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v45)(v42, v44, v38);
  v52 = v51;
  v44 = sub_1A5F64088();
  v47(v42, v38);
  if ((v44 & 1) == 0)
  {
LABEL_111:
    __break(1u);
LABEL_112:
    swift_once();
LABEL_98:
    v165 = (id)qword_1ED1CE7B0;
    sub_1A5F64448();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v166 = swift_allocObject();
    *(_OWORD *)(v166 + 16) = xmmword_1A5F66C40;
    v167 = 0x4564656764697242;
    v168 = 0xEC000000746E6576;
    if ((_DWORD)v206)
    {
      if ((_DWORD)v206 == 1)
      {
        v169 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
        v167 = sub_1A5F64130();
        v168 = v170;

      }
      else
      {
        v167 = *(_QWORD *)((char *)v42 + OBJC_IVAR___AARawEvent_name);
        v168 = *(_QWORD *)((char *)v42 + OBJC_IVAR___AARawEvent_name + 8);
        swift_bridgeObjectRetain();
      }
    }
    v173 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v166 + 56) = MEMORY[0x1E0DEA968];
    v174 = sub_1A5EE19C8();
    *(_QWORD *)(v166 + 64) = v174;
    *(_QWORD *)(v166 + 32) = v167;
    *(_QWORD *)(v166 + 40) = v168;
    v225 = 0;
    v226 = 0xE000000000000000;
    v222[0] = v11;
    v222[1] = v44;
    sub_1A5F646F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v175 = v225;
    v176 = v226;
    *(_QWORD *)(v166 + 96) = v173;
    *(_QWORD *)(v166 + 104) = v174;
    *(_QWORD *)(v166 + 72) = v175;
    *(_QWORD *)(v166 + 80) = v176;
    sub_1A5F63F80();

    goto LABEL_106;
  }
  v53 = v50 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
  swift_beginAccess();
  sub_1A5ED7E14(v53, (uint64_t)v37, type metadata accessor for SessionManager.SessionState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v55 = v204;
  if (!EnumCaseMultiPayload)
  {
    v58 = *v37;
    swift_unknownObjectRelease();
    v49 = *(_QWORD *)(v58 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_timestampConfiguration + 8);
    swift_release();
    v42 = v205;
    v56 = v214;
    goto LABEL_10;
  }
  v42 = v205;
  v56 = v214;
  v57 = v216;
  if (EnumCaseMultiPayload == 1)
    sub_1A5ED4D44((uint64_t)v37, type metadata accessor for SessionManager.SessionState);
  swift_unknownObjectRelease();
LABEL_11:
  v206 = v57 >> 62;
  if (v57 >> 62)
  {
    if (v57 >> 62 == 1)
    {
      v59 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
      v60 = sub_1A5F64130();
      v62 = v61;

    }
    else
    {
      v60 = *(_QWORD *)((char *)v42 + OBJC_IVAR___AARawEvent_name);
      v62 = *(_QWORD *)((char *)v42 + OBJC_IVAR___AARawEvent_name + 8);
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    v60 = 0x4564656764697242;
    v62 = 0xEC000000746E6576;
  }
  v201 = type metadata accessor for EventData();
  v63 = (uint64_t)v215;
  v64 = v213;
  v65 = (char *)v213 + *((int *)v215 + 5);
  v66 = *(void (**)(char *, uint64_t, uint64_t))(v186 + 16);
  v183 = v198 + *(int *)(v201 + 20);
  v182 = v66;
  ((void (*)(char *))v66)(v65);
  v216 = *(int *)(v63 + 28);
  *(uint64_t *)((char *)v64 + v216) = MEMORY[0x1E0DEE9D8];
  *v64 = v60;
  v64[1] = v62;
  v67 = (char *)v64 + *(int *)(v63 + 24);
  *v67 = (char)v199;
  *((_QWORD *)v67 + 1) = v49;
  if ((_DWORD)v206)
  {
    if ((_DWORD)v206 == 1)
    {
      swift_retain();
      sub_1A5F06AFC();
    }
    else
    {
      v69 = v42;
      sub_1A5EC10E0();
    }
  }
  else
  {
    swift_retain();
    v68 = sub_1A5EF51D8((uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0);
  }
  v70 = v68;
  sub_1A5EF3D48(v42, v57);
  v71 = v70[2];
  if (!v71)
  {
    swift_bridgeObjectRelease();
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
      goto LABEL_96;
LABEL_106:
    swift_bridgeObjectRelease();
    return sub_1A5ECD6B0((uint64_t)v213, v178, type metadata accessor for Sequence);
  }
  v215 = &v227;
  v72 = (uint64_t *)(v56 + 104);
  v180 = (uint64_t *)(v56 + 112);
  v177[1] = v70;
  v73 = (uint64_t)(v70 + 4);
  v199 = v72;
  swift_beginAccess();
  v190 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v179 = v11;
  do
  {
    sub_1A5EEED18(v73, (uint64_t)&v225);
    v74 = v225;
    v44 = v226;
    sub_1A5ECE02C((uint64_t)v215, (uint64_t)v222);
    swift_bridgeObjectRetain();
    sub_1A5EEECBC((uint64_t)&v225);
    v75 = v223;
    v76 = v224;
    __swift_project_boxed_opaque_existential_1(v222, v223);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v76 + 16))(v75, v76) & 1) != 0)
    {
      v85 = v223;
      v86 = v224;
      __swift_project_boxed_opaque_existential_1(v222, v223);
      v87 = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 8))(v85, v86);
      sub_1A5EEEDC8(v87, v88, v210, v211, 0, (uint64_t)&v218);
      swift_bridgeObjectRelease();
      if (v219)
      {
        sub_1A5EC1D18(&v218, (uint64_t)v220);
        sub_1A5ECE02C((uint64_t)v220, (uint64_t)v11 + *(int *)(v209 + 20));
        *v11 = v74;
        v11[1] = v44;
        type metadata accessor for SequenceEntry.Kind(0);
        swift_storeEnumTagMultiPayload();
        sub_1A5ED7E14((uint64_t)v11, v212, type metadata accessor for SequenceEntry);
        v89 = (uint64_t)v213;
        v90 = *(uint64_t *)((char *)v213 + v216);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v90 = sub_1A5EEF688(0, *(_QWORD *)(v90 + 16) + 1, 1, v90);
        v92 = *(_QWORD *)(v90 + 16);
        v91 = *(_QWORD *)(v90 + 24);
        if (v92 >= v91 >> 1)
          v90 = sub_1A5EEF688(v91 > 1, v92 + 1, 1, v90);
        *(_QWORD *)(v90 + 16) = v92 + 1;
        sub_1A5ECD6B0(v212, v90+ ((*(unsigned __int8 *)(v208 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v208 + 80))+ *(_QWORD *)(v208 + 72) * v92, type metadata accessor for SequenceEntry);
        *(_QWORD *)(v89 + v216) = v90;
        v93 = (uint64_t)v11;
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      sub_1A5EF1CF8((uint64_t)&v218, &qword_1ED1CD458, qword_1ED1CE020, (uint64_t)&protocol descriptor for DataEventType);
    }
    else
    {
      v77 = v223;
      v78 = v224;
      __swift_project_boxed_opaque_existential_1(v222, v223);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v78 + 24))(v77, v78) & 1) != 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      v79 = v223;
      v80 = v224;
      __swift_project_boxed_opaque_existential_1(v222, v223);
      if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 40))(v207, v207, v79, v80) & 1) != 0)
      {
        if ((_DWORD)v206)
        {
          if ((_DWORD)v206 == 1)
          {
            v81 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
            v82 = sub_1A5F64130();
            v84 = v83;

          }
          else
          {
            v82 = *(_QWORD *)((char *)v205 + OBJC_IVAR___AARawEvent_name);
            v84 = *(_QWORD *)((char *)v205 + OBJC_IVAR___AARawEvent_name + 8);
            swift_bridgeObjectRetain();
          }
        }
        else
        {
          v82 = 0x4564656764697242;
          v84 = 0xEC000000746E6576;
        }
        v94 = *v199;
        if (*(_QWORD *)(*v199 + 16))
        {
          swift_bridgeObjectRetain();
          v95 = sub_1A5EF11E8(v82, v84);
          if ((v96 & 1) != 0)
          {
            v97 = v196;
            sub_1A5ED7E14(*(_QWORD *)(v94 + 56) + *(_QWORD *)(v55 + 72) * v95, v196, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
            v98 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
            v99 = v97;
            v100 = 0;
          }
          else
          {
            v98 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
            v97 = v196;
            v99 = v196;
            v100 = 1;
          }
          v102 = v200;
          v197 = v98;
          v98(v99, v100, 1, v200);
          swift_bridgeObjectRelease();
          v101 = v102;
          v55 = v204;
        }
        else
        {
          v97 = v196;
          v101 = v200;
          v197 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
          v197(v196, 1, 1, v200);
        }
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v97, 1, v101) != 1)
        {
          v119 = v194;
          sub_1A5ECD6B0(v97, v194, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
          v120 = v184;
          v121 = v119;
          v122 = v187;
          v123 = v182;
          v182(v184, v121, v187);
          v42 = v185;
          v123(v185, v183, v122);
          v11 = v195;
          v123(v195, (uint64_t)v120, v122);
          v123((char *)v11 + *(int *)(v207 + 20), (uint64_t)v42, v122);
          sub_1A5F63E90();
          v125 = v124;
          v126 = *(void (**)(_QWORD *, uint64_t))(v186 + 8);
          v126(v42, v122);
          v126(v120, v122);
          v127 = v125 * 1000.0;
          v128 = (uint64_t)v213;
          if ((~COERCE__INT64(v125 * 1000.0) & 0x7FF0000000000000) == 0)
          {
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
            goto LABEL_110;
          }
          if (v127 <= -9.22337204e18)
            goto LABEL_108;
          if (v127 >= 9.22337204e18)
            goto LABEL_109;
          v129 = (uint64_t)v195;
          *(_QWORD *)&v195[*(int *)(v207 + 24)] = (uint64_t)v127;
          v130 = v191;
          sub_1A5ECD6B0(v129, v191, (uint64_t (*)(_QWORD))type metadata accessor for TimedData);
          v131 = v192;
          sub_1A5ED7E14(v130, (uint64_t)v192 + *(int *)(v209 + 20), (uint64_t (*)(_QWORD))type metadata accessor for TimedData);
          *v131 = v74;
          v131[1] = v44;
          type metadata accessor for SequenceEntry.Kind(0);
          swift_storeEnumTagMultiPayload();
          sub_1A5ED7E14((uint64_t)v131, v193, type metadata accessor for SequenceEntry);
          v132 = *(_QWORD *)(v128 + v216);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v132 = sub_1A5EEF688(0, *(_QWORD *)(v132 + 16) + 1, 1, v132);
          v11 = v179;
          v134 = *(_QWORD *)(v132 + 16);
          v133 = *(_QWORD *)(v132 + 24);
          if (v134 >= v133 >> 1)
            v132 = sub_1A5EEF688(v133 > 1, v134 + 1, 1, v132);
          *(_QWORD *)(v132 + 16) = v134 + 1;
          sub_1A5ECD6B0(v193, v132+ ((*(unsigned __int8 *)(v208 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v208 + 80))+ *(_QWORD *)(v208 + 72) * v134, type metadata accessor for SequenceEntry);
          *(_QWORD *)(v128 + v216) = v132;
          sub_1A5ED4D44((uint64_t)v192, type metadata accessor for SequenceEntry);
          if ((_DWORD)v206)
          {
            if ((_DWORD)v206 == 1)
            {
              v135 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
              v136 = sub_1A5F64130();
              v138 = v137;

            }
            else
            {
              v136 = *(_QWORD *)((char *)v205 + OBJC_IVAR___AARawEvent_name);
              v138 = *(_QWORD *)((char *)v205 + OBJC_IVAR___AARawEvent_name + 8);
              swift_bridgeObjectRetain();
            }
          }
          else
          {
            v136 = 0x4564656764697242;
            v138 = 0xEC000000746E6576;
          }
          v146 = v199;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          v147 = sub_1A5EF11E8(v136, v138);
          v149 = v148;
          swift_bridgeObjectRelease();
          if ((v149 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v151 = *v146;
            *(_QWORD *)&v218 = *v146;
            *v146 = 0x8000000000000000;
            v152 = (uint64_t)v181;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1A5F05CB0();
              v151 = v218;
            }
            swift_bridgeObjectRelease();
            sub_1A5ECD6B0(*(_QWORD *)(v151 + 56) + *(_QWORD *)(v204 + 72) * v147, v152, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
            sub_1A5EF60CC(v147, v151);
            *v146 = v151;
            swift_bridgeObjectRelease();
            v153 = 0;
          }
          else
          {
            v153 = 1;
            v152 = (uint64_t)v181;
          }
          v197(v152, v153, 1, v200);
          sub_1A5ED4D44(v152, (uint64_t (*)(_QWORD))sub_1A5EF8034);
          swift_endAccess();
          swift_bridgeObjectRelease();
          v55 = v204;
          if ((_DWORD)v206)
          {
            if ((_DWORD)v206 == 1)
            {
              v154 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
              v155 = sub_1A5F64130();
              v157 = v156;

            }
            else
            {
              v155 = *(_QWORD *)((char *)v205 + OBJC_IVAR___AARawEvent_name);
              v157 = *(_QWORD *)((char *)v205 + OBJC_IVAR___AARawEvent_name + 8);
              swift_bridgeObjectRetain();
            }
          }
          else
          {
            v155 = 0x4564656764697242;
            v157 = 0xEC000000746E6576;
          }
          v158 = v180;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          v159 = sub_1A5EF11E8(v155, v157);
          v161 = v160;
          swift_bridgeObjectRelease();
          if ((v161 & 1) != 0)
          {
            v162 = swift_isUniquelyReferenced_nonNull_native();
            v163 = *v158;
            v217 = *v158;
            *v158 = 0x8000000000000000;
            if ((v162 & 1) == 0)
            {
              sub_1A5F05A94();
              v163 = v217;
            }
            swift_bridgeObjectRelease();
            sub_1A5EC1D18((__int128 *)(*(_QWORD *)(v163 + 56) + 40 * v159), (uint64_t)v220);
            sub_1A5F5472C(v159, v163);
            *v158 = v163;
            swift_bridgeObjectRelease();
          }
          else
          {
            v221 = 0;
            memset(v220, 0, sizeof(v220));
          }
          sub_1A5EF1CF8((uint64_t)v220, &qword_1ED1CD468, &qword_1ED1CE4C8, (uint64_t)&protocol descriptor for RestartTimerType);
          swift_endAccess();
          swift_bridgeObjectRelease();
          sub_1A5ED4D44(v191, (uint64_t (*)(_QWORD))type metadata accessor for TimedData);
          sub_1A5ED4D44(v194, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
          goto LABEL_24;
        }
        sub_1A5ED4D44(v97, (uint64_t (*)(_QWORD))sub_1A5EF8034);
      }
      v103 = v223;
      v104 = v224;
      __swift_project_boxed_opaque_existential_1(v222, v223);
      if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 40))(v201, v201, v103, v104) & 1) != 0)
      {
        v105 = v202;
        sub_1A5ED7E14(v198, (uint64_t)v202 + *(int *)(v209 + 20), (uint64_t (*)(_QWORD))type metadata accessor for EventData);
        *v105 = v74;
        v105[1] = v44;
        type metadata accessor for SequenceEntry.Kind(0);
        swift_storeEnumTagMultiPayload();
        sub_1A5ED7E14((uint64_t)v105, v203, type metadata accessor for SequenceEntry);
        v106 = (uint64_t)v213;
        v107 = *(uint64_t *)((char *)v213 + v216);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v107 = sub_1A5EEF688(0, *(_QWORD *)(v107 + 16) + 1, 1, v107);
        v109 = *(_QWORD *)(v107 + 16);
        v108 = *(_QWORD *)(v107 + 24);
        if (v109 >= v108 >> 1)
          v107 = sub_1A5EEF688(v108 > 1, v109 + 1, 1, v107);
        *(_QWORD *)(v107 + 16) = v109 + 1;
        sub_1A5ECD6B0(v203, v107+ ((*(unsigned __int8 *)(v208 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v208 + 80))+ *(_QWORD *)(v208 + 72) * v109, type metadata accessor for SequenceEntry);
        *(_QWORD *)(v106 + v216) = v107;
        sub_1A5ED4D44((uint64_t)v202, type metadata accessor for SequenceEntry);
      }
      else
      {
        v110 = v223;
        v111 = v224;
        __swift_project_boxed_opaque_existential_1(v222, v223);
        v112 = (*(uint64_t (**)(uint64_t, uint64_t))(v111 + 8))(v110, v111);
        sub_1A5EEEDC8(v112, v113, v210, v211, 0, (uint64_t)&v218);
        swift_bridgeObjectRelease();
        if (v219)
        {
          sub_1A5EC1D18(&v218, (uint64_t)v220);
          v114 = v188;
          sub_1A5ECE02C((uint64_t)v220, (uint64_t)&v188[*(int *)(v209 + 20)]);
          *v114 = v74;
          v114[1] = v44;
          type metadata accessor for SequenceEntry.Kind(0);
          swift_storeEnumTagMultiPayload();
          sub_1A5ED7E14((uint64_t)v114, v189, type metadata accessor for SequenceEntry);
          v115 = (uint64_t)v213;
          v116 = *(uint64_t *)((char *)v213 + v216);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v116 = sub_1A5EEF688(0, *(_QWORD *)(v116 + 16) + 1, 1, v116);
          v118 = *(_QWORD *)(v116 + 16);
          v117 = *(_QWORD *)(v116 + 24);
          if (v118 >= v117 >> 1)
            v116 = sub_1A5EEF688(v117 > 1, v118 + 1, 1, v116);
          *(_QWORD *)(v116 + 16) = v118 + 1;
          sub_1A5ECD6B0(v189, v116+ ((*(unsigned __int8 *)(v208 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v208 + 80))+ *(_QWORD *)(v208 + 72) * v118, type metadata accessor for SequenceEntry);
          *(_QWORD *)(v115 + v216) = v116;
          v93 = (uint64_t)v188;
LABEL_37:
          sub_1A5ED4D44(v93, type metadata accessor for SequenceEntry);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v220);
          goto LABEL_24;
        }
        sub_1A5EF1CF8((uint64_t)&v218, &qword_1ED1CD458, qword_1ED1CE020, (uint64_t)&protocol descriptor for DataEventType);
        v139 = v223;
        v140 = v224;
        __swift_project_boxed_opaque_existential_1(v222, v223);
        v141 = (*(uint64_t (**)(uint64_t, uint64_t))(v140 + 32))(v139, v140);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v142 = v190;
        else
          v142 = sub_1A5F082A8(0, v190[2] + 1, 1, v190);
        v144 = v142[2];
        v143 = v142[3];
        if (v144 >= v143 >> 1)
          v142 = sub_1A5F082A8((_QWORD *)(v143 > 1), v144 + 1, 1, v142);
        v142[2] = v144 + 1;
        v190 = v142;
        v145 = &v142[3 * v144];
        v145[4] = v74;
        v145[5] = v44;
        v145[6] = v141;
      }
    }
LABEL_24:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v222);
    v73 += 56;
    --v71;
  }
  while (v71);
  swift_bridgeObjectRelease();
  v42 = v205;
  v56 = v214;
  v11 = v190;
  if (!v190[2])
    goto LABEL_106;
LABEL_96:
  v164 = (uint64_t)v213;
  v44 = sub_1A5F57224();
  if ((*(_BYTE *)(v56 + 176) & 1) != 0)
  {
    if (qword_1ED1CFC08 == -1)
      goto LABEL_98;
    goto LABEL_112;
  }
  sub_1A5F22D74();
  swift_allocError();
  *v171 = v11;
  v171[1] = v44;
  swift_willThrow();
  return sub_1A5ED4D44(v164, type metadata accessor for Sequence);
}

uint64_t sub_1A5ECAC14()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR___AARawEventProperty_dataName);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A5ECAC54(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A5ECACC4(a1, *v1);
}

uint64_t sub_1A5ECAC5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR___AARawEventProperty_requirement);
  if (v1 == 1)
    return 1;
  if (!v1)
    return 0;
  result = sub_1A5F648A4();
  __break(1u);
  return result;
}

uint64_t sub_1A5ECACC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  type metadata accessor for TimedData();
  if (swift_dynamicCastMetatype())
  {
    v3 = *(_QWORD *)(a2 + OBJC_IVAR___AARawEventProperty_dataName);
    v4 = *(_QWORD *)(a2 + OBJC_IVAR___AARawEventProperty_dataName + 8);
    v5 = v3 == 0x4464656D69544141 && v4 == 0xEB00000000617461;
    if (v5
      || (sub_1A5F64880() & 1) != 0
      || v3 == 0xD000000000000010 && v4 == 0x80000001A5F6DCD0
      || (sub_1A5F64880() & 1) != 0)
    {
      return 1;
    }
  }
  type metadata accessor for EventData();
  if (swift_dynamicCastMetatype()
    && ((v6 = a2 + OBJC_IVAR___AARawEventProperty_dataName,
         v7 = *(_QWORD *)(a2 + OBJC_IVAR___AARawEventProperty_dataName),
         v8 = *(_QWORD *)(v6 + 8),
         v7 == 0x44746E6576454141)
      ? (v9 = v8 == 0xEB00000000617461)
      : (v9 = 0),
        v9
     || (sub_1A5F64880() & 1) != 0
     || v7 == 0xD000000000000010 && v8 == 0x80000001A5F6DCB0
     || (sub_1A5F64880() & 1) != 0))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1A5ECAE98()
{
  return 0;
}

void sub_1A5ECAEA0(char *a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t *), void (*a9)(uint64_t *))
{
  _QWORD *v9;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  void (*v32)(_QWORD *, double);
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  _QWORD *v47;
  uint64_t v48;
  void (*v49)(_QWORD *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  int EnumCaseMultiPayload;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  _QWORD *v63;
  void (*v64)(uint64_t *);
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int *v87;
  uint64_t v88;
  uint64_t *v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t ObjectType;
  uint64_t v96;
  void (*v97)(uint64_t *);
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  unint64_t v107;
  char v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  char *v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  _BYTE *v116;
  _QWORD *v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  int *v126;
  _QWORD *v127;
  uint64_t *v128;
  char *v129;
  uint64_t v130;
  id v131;
  void (*v132)(uint64_t *);
  uint64_t v133;
  uint64_t *v134;
  _QWORD *v135;
  void (*v136)(uint64_t *);
  _QWORD *v137;
  int *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  void (*v156)(char *, uint64_t, uint64_t);
  __int128 v157;
  void (*v158)(_QWORD *, uint64_t);
  void (*v159)(uint64_t *);
  char *v160;
  unint64_t v161;
  _QWORD *v162;
  char *v163;
  __int128 v164;
  char v165;
  uint64_t v166;
  __int128 v167;
  char v168;

  v159 = a8;
  v147 = a7;
  v152 = a6;
  v151 = a5;
  v141 = a4;
  v160 = a1;
  v161 = a2;
  sub_1A5F232AC(0, &qword_1ED1CC198, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  v138 = v11;
  MEMORY[0x1E0C80A78](v11);
  v139 = (char *)&v135 - v12;
  v13 = type metadata accessor for Sequence(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD **)((char *)&v135 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v150 = sub_1A5F63F08();
  v149 = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  v148 = (char *)&v135 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_1A5F63F2C();
  v143 = *(_QWORD *)(v140 - 8);
  MEMORY[0x1E0C80A78](v140);
  v142 = (char *)&v135 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = type metadata accessor for EventData();
  MEMORY[0x1E0C80A78](v144);
  v145 = (uint64_t *)((char *)&v135 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A5F232AC(0, (unint64_t *)&unk_1ED1CB9B0, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  v153 = v19;
  MEMORY[0x1E0C80A78](v19);
  v21 = (uint64_t *)((char *)&v135 - v20);
  v154 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v154);
  v155 = (uint64_t *)((char *)&v135 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A5EF8034();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v135 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1A5F64070();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (_QWORD **)((char *)&v135 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v162 = v9;
  v31 = *(void **)(v9[10] + OBJC_IVAR___AAAccessQueue_queue);
  *v30 = v31;
  v32 = *(void (**)(_QWORD *, double))(v27 + 104);
  LODWORD(v156) = *MEMORY[0x1E0DEF740];
  *(_QWORD *)&v157 = v32;
  v32(v30, v28);
  v33 = v31;
  LOBYTE(v31) = sub_1A5F64088();
  v158 = *(void (**)(_QWORD *, uint64_t))(v27 + 8);
  v158(v30, v26);
  if ((v31 & 1) == 0)
  {
    __break(1u);
    goto LABEL_80;
  }
  if ((a3 & 1) != 0)
  {
    if (v161 >> 62)
    {
      if (v161 >> 62 == 1)
      {
        v34 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
        v35 = sub_1A5F64130();
        v37 = v36;

      }
      else
      {
        v35 = *(_QWORD *)&v160[OBJC_IVAR___AARawEvent_name];
        v37 = *(_QWORD *)&v160[OBJC_IVAR___AARawEvent_name + 8];
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v37 = 0xEC000000746E6576;
      v35 = 0x4564656764697242;
    }
    v38 = v162;
    swift_beginAccess();
    v39 = v38[13];
    if (*(_QWORD *)(v39 + 16))
    {
      v137 = v15;
      swift_bridgeObjectRetain();
      v40 = sub_1A5EF11E8(v35, v37);
      if ((v41 & 1) != 0)
      {
        v42 = v40;
        v146 = v21;
        v43 = *(_QWORD *)(v39 + 56);
        v44 = type metadata accessor for Tracker.Timer();
        v45 = *(_QWORD *)(v44 - 8);
        v21 = v146;
        sub_1A5ED7E14(v43 + *(_QWORD *)(v45 + 72) * v42, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v25, 0, 1, v44);
      }
      else
      {
        v44 = type metadata accessor for Tracker.Timer();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v25, 1, 1, v44);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v137;
    }
    else
    {
      v44 = type metadata accessor for Tracker.Timer();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v25, 1, 1, v44);
      swift_bridgeObjectRelease();
    }
    type metadata accessor for Tracker.Timer();
    v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v25, 1, v44);
    sub_1A5ED4D44((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1A5EF8034);
    if (v46 == 1)
      return;
  }
  v47 = v162 + 8;
  v48 = MEMORY[0x1A85B8E10](v162 + 8);
  v49 = (void (*)(_QWORD *, uint64_t, uint64_t))v157;
  v50 = v156;
  if (!v48)
    goto LABEL_21;
  v51 = v48;
  v52 = *(void **)(*(_QWORD *)(v48 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *v30 = v52;
  v49(v30, v50, v26);
  v53 = v52;
  LOBYTE(v52) = sub_1A5F64088();
  v158(v30, v26);
  if ((v52 & 1) == 0)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  v54 = v51 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
  swift_beginAccess();
  v55 = v54;
  v56 = v155;
  sub_1A5ED7E14(v55, (uint64_t)v155, type metadata accessor for SessionManager.SessionState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      sub_1A5ED4D44((uint64_t)v56, type metadata accessor for SessionManager.SessionState);
    swift_unknownObjectRelease();
LABEL_21:
    v58 = MEMORY[0x1A85B8E10](v47);
    if (!v58)
      goto LABEL_24;
    v59 = v58;
    v60 = *(void **)(*(_QWORD *)(v58 + 48) + OBJC_IVAR___AAAccessQueue_queue);
    *v30 = v60;
    v49(v30, v50, v26);
    v61 = v60;
    LOBYTE(v60) = sub_1A5F64088();
    v158(v30, v26);
    if ((v60 & 1) != 0)
    {
      v62 = *(_QWORD *)(v59 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_options);
      swift_unknownObjectRelease();
      if ((v62 & 1) != 0)
      {
        sub_1A5F1E6D4(v160, v161, v151, v152, v147, v159, a9);
        return;
      }
LABEL_24:
      sub_1A5F22D74();
      v30 = (_QWORD *)swift_allocError();
      *v63 = 0;
      v63[1] = 0;
      swift_willThrow();
      v64 = v159;
      if ((sub_1A5F391FC() & 1) != 0)
      {
        if (v64)
        {
LABEL_26:
          *v21 = (uint64_t)v30;
          swift_storeEnumTagMultiPayload();
          v65 = v30;
          v64(v21);

          sub_1A5ECC0D4((uint64_t)v21, (unint64_t *)&unk_1ED1CB9B0, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
          return;
        }
LABEL_40:

        return;
      }
      v136 = a9;
      v146 = v21;
      if (qword_1ED1CFC08 == -1)
      {
LABEL_39:
        v98 = (id)qword_1ED1CE7B0;
        LODWORD(v162) = sub_1A5F64448();
        sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v99 = swift_allocObject();
        *(_OWORD *)(v99 + 16) = xmmword_1A5F66C40;
        v166 = 0;
        *(_QWORD *)&v167 = 0xE000000000000000;
        v163 = v160;
        *(_QWORD *)&v164 = v161;
        sub_1A5F232AC(0, &qword_1ED1CC450, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmit);
        sub_1A5F646F4();
        v100 = v166;
        v101 = v167;
        v102 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v99 + 56) = MEMORY[0x1E0DEA968];
        v103 = sub_1A5EE19C8();
        *(_QWORD *)(v99 + 64) = v103;
        *(_QWORD *)(v99 + 32) = v100;
        *(_QWORD *)(v99 + 40) = v101;
        v166 = 0;
        *(_QWORD *)&v167 = 0xE000000000000000;
        v163 = (char *)v30;
        sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
        sub_1A5F646F4();
        v104 = v166;
        v105 = v167;
        *(_QWORD *)(v99 + 96) = v102;
        *(_QWORD *)(v99 + 104) = v103;
        *(_QWORD *)(v99 + 72) = v104;
        *(_QWORD *)(v99 + 80) = v105;
        sub_1A5F63F80();

        swift_bridgeObjectRelease();
        v64 = v159;
        v21 = v146;
        if (v159)
          goto LABEL_26;
        goto LABEL_40;
      }
LABEL_82:
      swift_once();
      goto LABEL_39;
    }
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v146 = v21;
  v66 = *v56;
  swift_unknownObjectRelease();
  v67 = MEMORY[0x1A85B8E10](v47);
  v136 = a9;
  v135 = v47;
  if (v67)
  {
    sub_1A5F1FA34(v160, v161, (uint64_t)&v166);
    v163 = (char *)v166;
    v157 = v167;
    v164 = v167;
    v165 = v168;
    v68 = sub_1A5EDBE74((uint64_t *)&v163);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v68 = 0;
  }
  v69 = v150;
  v70 = v141;
  v71 = v140;
  v137 = v15;
  v72 = v142;
  sub_1A5F63F20();
  v73 = sub_1A5F63F14();
  v75 = v74;
  (*(void (**)(char *, uint64_t))(v143 + 8))(v72, v71);
  v76 = *(void (**)(char *, uint64_t, uint64_t))(v149 + 16);
  v76(v148, v70, v69);
  v166 = 47;
  *(_QWORD *)&v167 = 0xE100000000000000;
  v163 = (char *)Tracker.path.getter();
  sub_1A5EDCBFC(0, (unint64_t *)&qword_1ED1CD930, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1A5EDB074();
  sub_1A5F64100();
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  v77 = v166;
  v78 = v167;
  v158 = (void (*)(_QWORD *, uint64_t))v66;
  *(_QWORD *)&v157 = v68;
  v156 = v76;
  if (v68)
  {
    v79 = v68;
    v80 = *(_QWORD *)(v68 + 16);
    v81 = *(_QWORD *)(v79 + 24);
    v82 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
    v83 = *(_QWORD *)(v79 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier + 8);
    if (v83)
    {
      v84 = *(_QWORD *)(v79 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_37;
    }
    swift_bridgeObjectRetain();
  }
  else
  {
    v80 = *(_QWORD *)(v66 + 16);
    v81 = *(_QWORD *)(v66 + 24);
    swift_bridgeObjectRetain();
    v82 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
  }
  v85 = v66 + v82;
  v84 = *(_QWORD *)(v66 + v82);
  v83 = *(_QWORD *)(v85 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_37:
  v86 = (uint64_t)v145;
  *v145 = v73;
  *(_QWORD *)(v86 + 8) = v75;
  v87 = (int *)v144;
  v88 = v86 + *(int *)(v144 + 20);
  (*(void (**)(uint64_t, char *, uint64_t))(v149 + 32))(v88, v148, v150);
  v89 = (uint64_t *)(v86 + v87[6]);
  *v89 = v77;
  v89[1] = v78;
  v90 = (_QWORD *)(v86 + v87[7]);
  *v90 = v80;
  v90[1] = v81;
  v91 = (_QWORD *)(v86 + v87[8]);
  *v91 = v84;
  v91[1] = v83;
  v92 = v137;
  v93 = v162;
  sub_1A5EC9410((unint64_t)v160, v161, v86, v151, v152, (uint64_t)v137);
  v94 = v93[24];
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v94 + 8))(&v166, ObjectType, v94);
  v163 = (char *)v166;
  v96 = sub_1A5EDB7A8(v92, (uint64_t *)&v163);
  v97 = v159;
  v106 = (void *)v96;
  swift_bridgeObjectRelease();
  v107 = (unint64_t)v146;
  if (!v106)
  {
    if (qword_1ED1CFC08 != -1)
LABEL_89:
      swift_once();
    v119 = (id)qword_1ED1CE7B0;
    sub_1A5F64430();
    sub_1A5F63F80();

    if (v97)
    {
      v121 = *v92;
      v120 = v92[1];
      sub_1A5F22DB8();
      v122 = swift_allocError();
      *v123 = v121;
      v123[1] = v120;
      *(_QWORD *)v107 = v122;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      v97((uint64_t *)v107);
      swift_release();
      swift_release();
      sub_1A5ECC0D4(v107, (unint64_t *)&unk_1ED1CB9B0, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
    }
    else
    {
      swift_release();
      swift_release();
    }
    v134 = v92;
    goto LABEL_78;
  }
  swift_retain();
  v97 = 0;
  v108 = 1;
  v92 = &OBJC_IVAR___AAGroup_name;
  do
  {
    swift_beginAccess();
    v107 = v93[18];
    if (v107 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v109 = sub_1A5F64724();
      if (!v109)
      {
LABEL_59:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v86 = 0;
        v107 = 0;
        goto LABEL_63;
      }
    }
    else
    {
      v109 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      if (!v109)
        goto LABEL_59;
    }
    v110 = v109 - 1;
    if (__OFSUB__(v109, 1))
    {
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
      goto LABEL_89;
    }
    if ((v107 & 0xC000000000000001) != 0)
    {
      v111 = (char *)MEMORY[0x1A85B836C](v110, v107);
    }
    else
    {
      if ((v110 & 0x8000000000000000) != 0)
        goto LABEL_84;
      if (v110 >= *(_QWORD *)((v107 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_85;
      v111 = (char *)*(id *)(v107 + 8 * v110 + 32);
    }
    v112 = v111;
    swift_bridgeObjectRelease();
    v86 = *(_QWORD *)&v112[OBJC_IVAR___AAGroup_name];
    v107 = *(_QWORD *)&v112[OBJC_IVAR___AAGroup_name + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();

    v113 = v93[18];
    if (v113 >> 62)
    {
      swift_bridgeObjectRetain();
      v114 = sub_1A5F64724();
      if (!v114)
      {
LABEL_62:
        swift_release();
        swift_bridgeObjectRelease();
        v97 = 0;
        v108 = 1;
        goto LABEL_63;
      }
    }
    else
    {
      v114 = *(_QWORD *)((v113 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v114)
        goto LABEL_62;
    }
    v115 = v114 - 1;
    if (__OFSUB__(v114, 1))
      goto LABEL_86;
    if ((v113 & 0xC000000000000001) != 0)
    {
      v118 = MEMORY[0x1A85B836C](v115, v113);
      swift_bridgeObjectRelease();
      v97 = *(void (**)(uint64_t *))(v118 + OBJC_IVAR___AAGroup_contentType);
      v108 = *(_BYTE *)(v118 + OBJC_IVAR___AAGroup_contentType + 8);
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      if ((v115 & 0x8000000000000000) != 0)
        goto LABEL_87;
      if (v115 >= *(_QWORD *)((v113 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_88;
      v116 = *(id *)(v113 + 8 * v115 + 32);
      swift_bridgeObjectRelease();
      v97 = *(void (**)(uint64_t *))&v116[OBJC_IVAR___AAGroup_contentType];
      v108 = v116[OBJC_IVAR___AAGroup_contentType + 8];
      swift_release();

    }
LABEL_63:
    v117 = (_QWORD *)v93[17];
    swift_retain();
    swift_release();
    if (!v117)
      goto LABEL_70;
    v93 = v117;
  }
  while (!v107);
  swift_release();
LABEL_70:
  v125 = *v137;
  v124 = v137[1];
  v126 = v138;
  v127 = v139;
  v156(&v139[v138[11]], v88, v150);
  sub_1A5EDCB9C(v147, (uint64_t)v127 + v126[14]);
  *v127 = v125;
  v127[1] = v124;
  v127[3] = 0x302E312E30;
  v127[4] = 0xE500000000000000;
  v127[2] = v106;
  v128 = (_QWORD *)((char *)v127 + v126[12]);
  *v128 = v86;
  v128[1] = v107;
  v129 = (char *)v127 + v126[13];
  *(_QWORD *)v129 = v97;
  v129[8] = v108 & 1;
  *(_OWORD *)((char *)v127 + v126[15]) = xmmword_1A5F68AE0;
  v130 = MEMORY[0x1A85B8E10](v135);
  swift_bridgeObjectRetain();
  v131 = v106;
  if (v130)
  {
    sub_1A5F19914(v127, &qword_1ED1CC198, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0);
    swift_unknownObjectRelease();
  }
  v132 = v159;
  v86 = (uint64_t)v145;
  if (v159)
  {
    v133 = (uint64_t)v146;
    sub_1A5F22DFC((uint64_t)v127, (uint64_t)v146, &qword_1ED1CC198, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
    swift_storeEnumTagMultiPayload();
    v132((uint64_t *)v133);

    swift_release();
    swift_release();
    sub_1A5ECC0D4(v133, (unint64_t *)&unk_1ED1CB9B0, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  }
  else
  {

    swift_release();
    swift_release();
  }
  sub_1A5ECC0D4((uint64_t)v127, &qword_1ED1CC198, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  v134 = v137;
LABEL_78:
  sub_1A5ED4D44((uint64_t)v134, type metadata accessor for Sequence);
  sub_1A5ED4D44(v86, (uint64_t (*)(_QWORD))type metadata accessor for EventData);
}

uint64_t sub_1A5ECC0D4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v6;

  sub_1A5F232AC(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1A5ECC110(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void (*v10)(_QWORD *, uint64_t, uint64_t);
  id v11;
  void (*v12)(_QWORD *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_1A5F64070();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for WeakSessionManager();
  swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v6 = *(_QWORD *)(a1 + 24);
  v7 = OBJC_IVAR___AAAccessQueue_queue;
  v8 = *(void **)(v6 + OBJC_IVAR___AAAccessQueue_queue);
  *v5 = v8;
  v9 = *MEMORY[0x1E0DEF740];
  v10 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v3 + 104);
  v10(v5, v9, v2);
  v11 = v8;
  LOBYTE(v8) = sub_1A5F64088();
  v12 = *(void (**)(_QWORD *, uint64_t))(v3 + 8);
  v12(v5, v2);
  if ((v8 & 1) != 0)
  {
    v13 = *(_QWORD *)(a1 + 56);
    v19 = v6;
    v20 = v13;
    v14 = swift_bridgeObjectRetain();
    MEMORY[0x1A85B7FAC](v14);
    if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  sub_1A5F642D4();
LABEL_3:
  sub_1A5F642F8();
  sub_1A5F642BC();
  v15 = v20;
  v16 = *(void **)(v19 + v7);
  *v5 = v16;
  v10(v5, v9, v2);
  v17 = v16;
  LOBYTE(v16) = sub_1A5F64088();
  result = ((uint64_t (*)(_QWORD *, uint64_t))v12)(v5, v2);
  if ((v16 & 1) != 0)
  {
    *(_QWORD *)(a1 + 56) = v15;
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for WeakSessionManager()
{
  return objc_opt_self();
}

uint64_t sub_1A5ECC2D4(_QWORD *a1)
{
  return EventData.encode(to:)(a1);
}

uint64_t EventData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1A5ECC55C(0, &qword_1ED1CE1D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5ECC518();
  sub_1A5F64970();
  v9[15] = 0;
  sub_1A5F647FC();
  if (!v1)
  {
    type metadata accessor for EventData();
    v9[14] = 1;
    sub_1A5F63F08();
    sub_1A5ECC4D8(qword_1ED1CDE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1A5F64820();
    v9[13] = 2;
    sub_1A5F647FC();
    v9[12] = 3;
    sub_1A5F647FC();
    v9[11] = 4;
    sub_1A5F647E4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A5ECC4D8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1A85B8C3C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A5ECC518()
{
  unint64_t result;

  result = qword_1ED1CD7B0;
  if (!qword_1ED1CD7B0)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F670DC, &type metadata for EventData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1CD7B0);
  }
  return result;
}

void sub_1A5ECC55C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1A5ECC518();
    v7 = a3(a1, &type metadata for EventData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1A5ECC5B8(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t result;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);

  v6 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A5F64070();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (uint64_t *)((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x1A85B8E10](a1 + 64, v11);
  if (v14)
  {
    v15 = v14;
    v28 = a2;
    v16 = *(void **)(*(_QWORD *)(v14 + 48) + OBJC_IVAR___AAAccessQueue_queue);
    *v13 = v16;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x1E0DEF740], v9);
    v17 = v16;
    LOBYTE(v16) = sub_1A5F64088();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v13, v9);
    if ((v16 & 1) == 0)
    {
      __break(1u);
      goto LABEL_14;
    }
    v19 = v15 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
    swift_beginAccess();
    sub_1A5ED7E14(v19, (uint64_t)v8, type metadata accessor for SessionManager.SessionState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      swift_release();
      swift_unknownObjectRelease();
      type metadata accessor for AccessTracker();
      v26 = swift_allocObject();
      swift_weakInit();
      swift_weakAssign();
      *(_QWORD *)(v26 + 24) = 0;
      *(_QWORD *)(v26 + 32) = 0;
      v28(v26);
      return swift_release();
    }
    a2 = v28;
    if (EnumCaseMultiPayload == 1)
      sub_1A5ED4D44((uint64_t)v8, type metadata accessor for SessionManager.SessionState);
    swift_unknownObjectRelease();
  }
  v21 = swift_allocObject();
  type metadata accessor for Tracker.Token();
  *(_QWORD *)(v21 + 16) = swift_allocObject();
  type metadata accessor for AccessTracker();
  v22 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  *(_QWORD *)(v22 + 24) = 0;
  *(_QWORD *)(v22 + 32) = 0;
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a2;
  v23[3] = a3;
  v23[4] = v21;
  type metadata accessor for SessionObserver();
  v24 = (_QWORD *)swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v24[3] = v22;
  v24[4] = sub_1A5ED1760;
  v24[5] = v23;
  result = swift_beginAccess();
  if (*(_QWORD *)(v21 + 16))
  {
    swift_unknownObjectWeakAssign();
    v25 = MEMORY[0x1A85B8E10](a1 + 64);
    swift_retain();
    if (v25)
    {
      swift_retain();
      sub_1A5ECC8F4();
      swift_release();
      swift_release();
      return swift_unknownObjectRelease();
    }
    return swift_release();
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Tracker.Token()
{
  return objc_opt_self();
}

uint64_t sub_1A5ECC8F4()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t result;
  uint64_t i;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = (unint64_t *)sub_1A5F64070();
  v2 = *(v1 - 1);
  MEMORY[0x1E0C80A78](v1);
  v4 = (unint64_t)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(*(_QWORD *)(v0 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *(_QWORD *)v4 = v5;
  (*(void (**)(unint64_t, _QWORD, unint64_t *))(v2 + 104))(v4, *MEMORY[0x1E0DEF740], v1);
  v6 = v5;
  LOBYTE(v5) = sub_1A5F64088();
  (*(void (**)(unint64_t, unint64_t *))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    result = sub_1A5F64724();
    v7 = result;
    if (result)
      goto LABEL_4;
LABEL_16:
    swift_bridgeObjectRelease();
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_17;
  }
  v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_observers);
  swift_beginAccess();
  v4 = *v1;
  v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v4 >> 62)
    goto LABEL_15;
  v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v7)
    goto LABEL_16;
LABEL_4:
  if (v7 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v7; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
    {
      v10 = MEMORY[0x1A85B836C](i, v4);
    }
    else
    {
      v10 = *(_QWORD *)(v4 + 8 * i + 32);
      swift_retain();
    }
    if (MEMORY[0x1A85B8E10](v10 + 16))
    {
      swift_unknownObjectRelease();
      sub_1A5F6467C();
      sub_1A5F646AC();
      sub_1A5F646B8();
      sub_1A5F64688();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v11 = v13;
LABEL_17:
  *v1 = (unint64_t)v11;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v12 = swift_retain();
  MEMORY[0x1A85B7FAC](v12);
  if (*(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1A5F642D4();
  sub_1A5F642F8();
  sub_1A5F642BC();
  return swift_endAccess();
}

uint64_t sub_1A5ECCB64()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id _s12AppAnalytics11AccessQueueC6globalyAC8Dispatch0F3QoSV0G6SClassOSgFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  objc_class *v20;
  char *v21;
  char *v22;
  id v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _DWORD *v29;
  id v30;
  void *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _DWORD *v37;
  char *v39;
  id v40;
  Class v41;
  objc_super v42;
  objc_super v43;

  v2 = sub_1A5F64028();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - v7;
  sub_1A5ECD49C(0, &qword_1ED1CD060, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF560], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v39 - v10;
  v12 = sub_1A5F63FEC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v39 - v17;
  sub_1A5EF7C88(a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1A5EF7C34((uint64_t)v11);
    sub_1A5ED4A58();
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF540], v12);
    v19 = (void *)sub_1A5F644E4();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v20 = (objc_class *)type metadata accessor for AccessQueue();
    v21 = (char *)objc_allocWithZone(v20);
    *(_QWORD *)&v21[OBJC_IVAR___AAAccessQueue_queue] = v19;
    v22 = v21;
    v23 = v19;
    sub_1A5F63FF8();
    v24 = &v22[OBJC_IVAR___AAAccessQueue__qos];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    sub_1A5ECD49C(0, &qword_1ED1CE2C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF5B0], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Atomic);
    v25 = (char *)swift_allocObject();
    type metadata accessor for UnfairLock();
    v26 = v3;
    v27 = v5;
    v28 = swift_allocObject();
    v29 = (_DWORD *)swift_slowAlloc();
    *(_QWORD *)(v28 + 16) = v29;
    *v29 = 0;
    *(_DWORD *)(v28 + 24) = 0x10000;
    *((_QWORD *)v25 + 2) = v28;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v25[*(_QWORD *)(*(_QWORD *)v25 + 96)], v27, v2);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v2);
    *(_QWORD *)v24 = v25;
    swift_endAccess();

    v43.receiver = v22;
    v43.super_class = v20;
    v30 = objc_msgSendSuper2(&v43, sel_init);

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
    sub_1A5ED4A58();
    v31 = (void *)sub_1A5F644E4();
    v41 = (Class)type metadata accessor for AccessQueue();
    v32 = (char *)objc_allocWithZone(v41);
    *(_QWORD *)&v32[OBJC_IVAR___AAAccessQueue_queue] = v31;
    v33 = v32;
    v40 = v31;
    sub_1A5F63FF8();
    v39 = &v33[OBJC_IVAR___AAAccessQueue__qos];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    sub_1A5ECD49C(0, &qword_1ED1CE2C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF5B0], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Atomic);
    v34 = v2;
    v35 = (char *)swift_allocObject();
    type metadata accessor for UnfairLock();
    v36 = swift_allocObject();
    v37 = (_DWORD *)swift_slowAlloc();
    *(_QWORD *)(v36 + 16) = v37;
    *v37 = 0;
    *(_DWORD *)(v36 + 24) = 0x10000;
    *((_QWORD *)v35 + 2) = v36;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v35[*(_QWORD *)(*(_QWORD *)v35 + 96)], v5, v34);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v34);
    *(_QWORD *)v39 = v35;
    swift_endAccess();

    v42.receiver = v33;
    v42.super_class = v41;
    v30 = objc_msgSendSuper2(&v42, sel_init);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
  return v30;
}

void sub_1A5ECD040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  objc_class *v12;
  char *v13;
  char *v14;
  id v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  _DWORD *v21;
  id v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  objc_super v26;
  uint64_t v27;

  v0 = sub_1A5F6449C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A5F64490();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v25 = sub_1A5F64028();
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v24 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - v9;
  sub_1A5ED4A58();
  sub_1A5F63FF8();
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1A5ED3158();
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CF810, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1A5ED31A0();
  sub_1A5F645E0();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  v11 = (void *)sub_1A5F644D8();
  v12 = (objc_class *)type metadata accessor for AccessQueue();
  v13 = (char *)objc_allocWithZone(v12);
  *(_QWORD *)&v13[OBJC_IVAR___AAAccessQueue_queue] = v11;
  v14 = v13;
  v15 = v11;
  sub_1A5F63FF8();
  v16 = &v14[OBJC_IVAR___AAAccessQueue__qos];
  swift_beginAccess();
  v18 = v24;
  v17 = v25;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v24, v10, v25);
  sub_1A5ECD49C(0, &qword_1ED1CE2C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF5B0], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Atomic);
  v19 = (char *)swift_allocObject();
  type metadata accessor for UnfairLock();
  v20 = swift_allocObject();
  v21 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v20 + 16) = v21;
  *v21 = 0;
  *(_DWORD *)(v20 + 24) = 0x10000;
  *((_QWORD *)v19 + 2) = v20;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v19[*(_QWORD *)(*(_QWORD *)v19 + 96)], v18, v17);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v17);
  *(_QWORD *)v16 = v19;
  swift_endAccess();

  v26.receiver = v14;
  v26.super_class = v12;
  v22 = objc_msgSendSuper2(&v26, sel_init);

  qword_1ED1CE2B0 = (uint64_t)v22;
}

uint64_t sub_1A5ECD338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  sub_1A5EF8034();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Tracker.Timer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_1A5ED4D44(a1, (uint64_t (*)(_QWORD))sub_1A5EF8034);
    sub_1A5F541B8(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1A5ED4D44((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1A5EF8034);
  }
  else
  {
    sub_1A5ECD6B0(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_1A5ECD4F4((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

void sub_1A5ECD49C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1A5ECD4F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1A5EF11E8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = v19 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for Tracker.Timer() - 8) + 72) * v12;
        return sub_1A5F09F20(a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1A5F05CB0();
      goto LABEL_7;
    }
    sub_1A5ECD738(v15, a4 & 1);
    v22 = sub_1A5EF11E8(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A5ECD628(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1A5F648C8();
  __break(1u);
  return result;
}

uint64_t sub_1A5ECD628(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for Tracker.Timer();
  result = sub_1A5ECD6F4(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

uint64_t sub_1A5ECD6B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A5ECD6F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Tracker.Timer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5ECD738(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  v5 = type metadata accessor for Tracker.Timer();
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_1A5EDD010(0, &qword_1ED1CD950, 255, v9);
  v43 = a2;
  v10 = sub_1A5F6473C();
  v11 = v10;
  if (*(_QWORD *)(v8 + 16))
  {
    v39 = v2;
    v12 = 1 << *(_BYTE *)(v8 + 32);
    v13 = *(_QWORD *)(v8 + 64);
    v41 = (_QWORD *)(v8 + 64);
    if (v12 < 64)
      v14 = ~(-1 << v12);
    else
      v14 = -1;
    v15 = v14 & v13;
    v40 = (unint64_t)(v12 + 63) >> 6;
    v16 = v10 + 64;
    result = swift_retain();
    v18 = 0;
    while (1)
    {
      if (v15)
      {
        v21 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v22 = v21 | (v18 << 6);
      }
      else
      {
        v23 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v23 >= v40)
          goto LABEL_34;
        v24 = v41[v23];
        ++v18;
        if (!v24)
        {
          v18 = v23 + 1;
          if (v23 + 1 >= v40)
            goto LABEL_34;
          v24 = v41[v18];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v40)
            {
LABEL_34:
              swift_release();
              v3 = v39;
              if ((v43 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v8 + 32);
                if (v38 >= 64)
                  bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v41 = -1 << v38;
                *(_QWORD *)(v8 + 16) = 0;
              }
              break;
            }
            v24 = v41[v25];
            if (!v24)
            {
              while (1)
              {
                v18 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v18 >= v40)
                  goto LABEL_34;
                v24 = v41[v18];
                ++v25;
                if (v24)
                  goto LABEL_21;
              }
            }
            v18 = v25;
          }
        }
LABEL_21:
        v15 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v18 << 6);
      }
      v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v22);
      v28 = *v26;
      v27 = v26[1];
      v29 = *(_QWORD *)(v42 + 72);
      v30 = *(_QWORD *)(v8 + 56) + v29 * v22;
      if ((v43 & 1) != 0)
      {
        sub_1A5ECD6B0(v30, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
      }
      else
      {
        sub_1A5F06940(v30, (uint64_t)v7);
        swift_bridgeObjectRetain();
      }
      sub_1A5F64910();
      sub_1A5F6419C();
      result = sub_1A5F64928();
      v31 = -1 << *(_BYTE *)(v11 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v16 + 8 * (v32 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v16 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v16 + 8 * v33);
        }
        while (v37 == -1);
        v19 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v19);
      *v20 = v28;
      v20[1] = v27;
      result = sub_1A5ECD6B0((uint64_t)v7, *(_QWORD *)(v11 + 56) + v29 * v19, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
  *v3 = v11;
  return result;
}

void sub_1A5ECDAAC(uint64_t a1, uint64_t a2)
{
  sub_1A5ECDAC0(a1, a2);
}

void sub_1A5ECDAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A5ECDADC(a1, a2, *(_BYTE *)(v2 + 16));
}

void sub_1A5ECDADC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1A5F63F68();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1A5F63F08();
  MEMORY[0x1E0C80A78](v5);
  __asm { BR              X10 }
}

uint64_t sub_1A5ECDBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  double v7;
  double v8;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v0, v1);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1A5F64964();
  result = sub_1A5F63ED8();
  v8 = v7 * 1000.0;
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v8 < 9.22337204e18)
  {
    __swift_mutable_project_boxed_opaque_existential_1(v5 - 120, *(_QWORD *)(v5 - 96));
    sub_1A5F6488C();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v1);
    return __swift_destroy_boxed_opaque_existential_0(v5 - 120);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1A5ECDD14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CD930)
  {
    v0 = sub_1A5F6431C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CD930);
  }
}

uint64_t sub_1A5ECDD68(_BYTE *__src, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_1A5EE24DC(__src, &__src[a2]);
  sub_1A5F63C68();
  swift_allocObject();
  sub_1A5F63C20();
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  sub_1A5F63DE8();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

_QWORD *SessionGroupManager.init(accessQueue:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = MEMORY[0x1E0DEE9D8];
  v1[3] = sub_1A5ECE1F8(MEMORY[0x1E0DEE9D8]);
  v1[4] = sub_1A5ECE1F8(v3);
  v1[2] = a1;
  return v1;
}

_QWORD *AppSessionManager.createSessionManager(with:)(unint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _BYTE v22[24];
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v3 = type metadata accessor for SummaryEventConfiguration(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for SessionManager(0);
  v6 = *(void **)(v1 + 32);
  v20 = *(id *)(v1 + 24);
  v7 = v6;
  v8 = sub_1A5ECE160();
  v9 = a1[1];
  v25 = *a1;
  sub_1A5ECE02C((uint64_t)(a1 + 2), (uint64_t)v22);
  v10 = a1[7];
  v11 = a1[8];
  sub_1A5ED7E14(v1 + OBJC_IVAR____TtC12AppAnalytics17AppSessionManager_summaryEventConfiguration, (uint64_t)v5, type metadata accessor for SummaryEventConfiguration);
  v13 = v23;
  v12 = v24;
  v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  swift_retain();
  swift_unknownObjectRetain();
  v19 = v12;
  v15 = v20;
  v16 = sub_1A5ECE084(v20, v7, (uint64_t)v8, &v25, v9, v14, v10, v11, (uint64_t)v5, v21, v13, v19);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  v16[5] = &off_1E4FD48C0;
  swift_unknownObjectWeakAssign();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v1;
  *(_QWORD *)(v17 + 24) = v16;
  swift_retain();
  swift_retain();
  sub_1A5EEC784((uint64_t)v15, (uint64_t)sub_1A5EF60C4, v17);
  swift_release();
  return v16;
}

uint64_t sub_1A5ECE02C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for SessionManager(uint64_t a1)
{
  return sub_1A5EBC540(a1, (uint64_t *)&unk_1ED1CEC60);
}

_QWORD *sub_1A5ECE084(void *a1, void *a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  unint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = a7;
  v24 = a8;
  v21 = a4;
  v22 = a5;
  v16 = *(_QWORD *)(a11 - 8);
  MEMORY[0x1E0C80A78](a10);
  v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (_QWORD *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a6, a11);
  return sub_1A5F12178(a1, a2, a3, v21, v22, (uint64_t)v18, v23, v24, a9, v19, a11, a12);
}

_QWORD *sub_1A5ECE160()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;
  uint64_t v4;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD **)(v0 + 16);
  }
  else
  {
    v2 = *(void **)(v0 + 24);
    type metadata accessor for SessionGroupManager();
    v1 = (_QWORD *)swift_allocObject();
    v3 = v2;
    v4 = MEMORY[0x1E0DEE9D8];
    v1[3] = sub_1A5ECE1F8(MEMORY[0x1E0DEE9D8]);
    v1[4] = sub_1A5ECE1F8(v4);
    v1[2] = v3;
    *(_QWORD *)(v0 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

unint64_t sub_1A5ECE1F8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1A5EFE704();
  v2 = (_QWORD *)sub_1A5F64748();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 72);
  while (1)
  {
    v5 = *(v4 - 5);
    v6 = *(v4 - 4);
    v7 = *(v4 - 3);
    v8 = *(v4 - 2);
    v9 = *(v4 - 1);
    v10 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1A5EDD9D0(v5, v6, v7, v8);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v2[6] + 32 * result);
    *v13 = v5;
    v13[1] = v6;
    v13[2] = v7;
    v13[3] = v8;
    v14 = (_QWORD *)(v2[7] + 16 * result);
    *v14 = v9;
    v14[1] = v10;
    v15 = v2[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v4 += 6;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SessionGroupManager()
{
  return objc_opt_self();
}

uint64_t sub_1A5ECE358()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v2[4] = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t objectdestroy_8Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_1A5F63F08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  swift_release();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 56) >= 3uLL)
    swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 64) & ~v3), v1);
  return swift_deallocObject();
}

uint64_t AccessTracker.__deallocating_deinit()
{
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A5ECE4D0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_1A5ECE4FC()
{
  uint64_t v0;

  sub_1A5ECE508(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_1A5ECE508(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t ObjectType;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  unsigned __int8 v60;
  void *v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  unint64_t v84;
  id v85;
  unint64_t v86;
  uint64_t *v87;
  void *v88;
  void *v89;
  uint64_t v90;
  unint64_t v91;
  void *v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t *v95;
  unint64_t v96;
  id v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  unint64_t v106;
  dispatch_group_t v107;
  uint64_t (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  NSObject *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  dispatch_group_t v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  const char *v124;
  const char *v125;
  uint64_t v126;
  _QWORD *v127;
  void *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  dispatch_group_t v139;
  _QWORD *v140;
  __int128 v141;
  _QWORD *v142;
  __int128 v143;
  unint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  unint64_t v151;
  _QWORD *v152;
  char *v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  id v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  BOOL v167;
  uint64_t v168;

  v137 = a4;
  v138 = a3;
  v168 = *MEMORY[0x1E0C80C00];
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1A5ECD49C(0, &qword_1ED1CCD78, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v121 - v8;
  sub_1A5ECD49C(0, &qword_1ED1CE578, (uint64_t (*)(uint64_t))type metadata accessor for Batch, v6);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v121 - v11);
  v13 = type metadata accessor for Batch();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v121 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v17 + 16))(ObjectType, v17);
  v139 = dispatch_group_create();
  __swift_project_boxed_opaque_existential_1(a1 + 4, a1[7]);
  v19 = sub_1A5EDDB78();
  v152 = a1;
  v153 = v16;
  v148 = v14;
  v154 = v13;
  v147 = v19[2];
  if (v147)
  {
    v149 = v19;
    v146 = a1 + 4;
    v135 = v9;
    v132 = a2;
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v26 = (void *)qword_1ED1CE7B0;
    sub_1A5EDD448();
    v150 = v27;
    v28 = swift_allocObject();
    v141 = xmmword_1A5F66C40;
    *(_OWORD *)(v28 + 16) = xmmword_1A5F66C40;
    v29 = v149;
    v30 = v149[2];
    v31 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v28 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v28 + 64) = v31;
    *(_QWORD *)(v28 + 32) = v30;
    v32 = v26;
    v33 = swift_bridgeObjectRetain();
    v34 = MEMORY[0x1E0DEA968];
    v35 = MEMORY[0x1A85B7FD0](v33, MEMORY[0x1E0DEA968]);
    a2 = v36;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v28 + 96) = v34;
    v151 = sub_1A5EE19C8();
    *(_QWORD *)(v28 + 104) = v151;
    *(_QWORD *)(v28 + 72) = v35;
    *(_QWORD *)(v28 + 80) = a2;
    sub_1A5F64454();
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    v37 = v29;
    v38 = 0;
    v39 = (uint64_t)v152;
    v140 = v152 + 10;
    v40 = v29 + 5;
    v143 = xmmword_1A5F679D0;
    v136 = MEMORY[0x1E0DEE9B8] + 8;
    v131 = MEMORY[0x1E0DEE9C0] + 8;
    v125 = "notificationReceiptEvents";
    v124 = "appHeartbeatEvents";
    v123 = (unint64_t)"s not representable";
    v142 = v12;
    while (v38 < v37[2])
    {
      v42 = *(v40 - 1);
      v41 = *v40;
      v155 = v40;
      a2 = v39;
      v43 = *__swift_project_boxed_opaque_existential_1(v146, *(_QWORD *)(v39 + 56));
      v44 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
      swift_bridgeObjectRetain();
      os_unfair_lock_lock_with_options();
      sub_1A5EE4B5C(v42, v41, v12);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v43 + v44) + 16));
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v148 + 48))(v12, 1, v154) == 1)
      {
        sub_1A5ED43E0((uint64_t)v12, &qword_1ED1CE578, (uint64_t (*)(uint64_t))type metadata accessor for Batch);
        v45 = (void *)qword_1ED1CE7B0;
        v46 = swift_allocObject();
        *(_OWORD *)(v46 + 16) = v143;
        v47 = v151;
        *(_QWORD *)(v46 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v46 + 64) = v47;
        *(_QWORD *)(v46 + 32) = v42;
        *(_QWORD *)(v46 + 40) = v41;
        v48 = v45;
        sub_1A5F64454();
        sub_1A5F63F80();

        swift_bridgeObjectRelease();
        v39 = a2;
      }
      else
      {
        v145 = v41;
        v49 = v42;
        v50 = (uint64_t)v153;
        sub_1A5EF82E4((uint64_t)v12, (uint64_t)v153);
        v51 = *(_QWORD *)(v50 + 64);
        v144 = v38;
        if (v51)
          v52 = *(_QWORD *)(v50 + 56);
        else
          v52 = 0;
        v53 = (uint64_t *)(v50 + *(int *)(v154 + 44));
        v55 = v53[1];
        v163 = *v53;
        v54 = v163;
        v164 = v55;
        v165 = v52;
        v166 = v51;
        v167 = v51 != 0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        os_unfair_lock_lock_with_options();
        swift_beginAccess();
        sub_1A5EBD268((uint64_t)&v163);
        swift_endAccess();
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v152[11] + 16));
        swift_bridgeObjectRelease();
        sub_1A5EDF6F4(v54, v55, v52, v51, v51 != 0);
        v56 = Batch.toJSONObject()();
        v57 = (void *)objc_opt_self();
        v58 = MEMORY[0x1E0DEA968];
        v59 = (void *)sub_1A5F640A0();
        v60 = objc_msgSend(v57, sel_isValidJSONObject_, v59);

        a2 = v49;
        if ((v60 & 1) != 0)
        {
          v61 = (void *)sub_1A5F640A0();
          swift_bridgeObjectRelease();
          v161 = 0;
          v62 = objc_msgSend(v57, sel_dataWithJSONObject_options_error_, v61, 0, &v161);

          v63 = v161;
          v64 = v145;
          if (v62)
          {
            v65 = sub_1A5F63E3C();
            v67 = v66;

            v68 = (uint64_t)v153;
            if ((*(_BYTE *)(v152[9] + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled) & 1) != 0)
              sub_1A5F3E22C(v65, v67, a2, v64);
            sub_1A5EC8680(v65, v67);
            v71 = v135;
            v133 = v70;
            v134 = v69;
            v89 = (void *)qword_1ED1CE7B0;
            v90 = swift_allocObject();
            *(_OWORD *)(v90 + 16) = v141;
            v91 = v151;
            *(_QWORD *)(v90 + 56) = v58;
            *(_QWORD *)(v90 + 64) = v91;
            *(_QWORD *)(v90 + 32) = a2;
            *(_QWORD *)(v90 + 40) = v64;
            v92 = *(void **)(v68 + 48);
            v129 = v65;
            v130 = v67;
            v93 = 0xEF73746E65764579;
            v94 = 0x7274656D656C6574;
            v128 = v92;
            switch((unint64_t)v92)
            {
              case 0uLL:
                v93 = 0xEA00000000007374;
                v94 = 0x6E65764572657375;
                goto LABEL_36;
              case 1uLL:
                goto LABEL_36;
              case 2uLL:
                v94 = 0x656D69746C616572;
                goto LABEL_29;
              case 3uLL:
                v94 = 0xD000000000000013;
                v95 = &v154;
                goto LABEL_33;
              case 4uLL:
                v94 = 0x6B63616264656566;
LABEL_29:
                v93 = 0xEE0073746E657645;
                goto LABEL_36;
              case 5uLL:
                v94 = 0xD000000000000019;
                v95 = (uint64_t *)&v153;
LABEL_33:
                v93 = *(v95 - 32) | 0x8000000000000000;
                goto LABEL_36;
              case 6uLL:
                v93 = 0xEC00000073746E65;
                v94 = 0x76457374726F7073;
                goto LABEL_36;
              case 7uLL:
                v94 = 0x746C616548707061;
                v93 = 0xEF73746E65764568;
                goto LABEL_36;
              case 8uLL:
                v93 = v123 | 0x8000000000000000;
                v94 = 0xD000000000000012;
LABEL_36:
                v96 = v151;
                *(_QWORD *)(v90 + 96) = MEMORY[0x1E0DEA968];
                *(_QWORD *)(v90 + 104) = v96;
                *(_QWORD *)(v90 + 72) = v94;
                *(_QWORD *)(v90 + 80) = v93;
                swift_bridgeObjectRetain();
                v97 = v89;
                sub_1A5F64454();
                sub_1A5F63F80();

                swift_bridgeObjectRelease();
                dispatch_group_enter(v139);
                v98 = (void *)*((_QWORD *)v153 + 5);
                v126 = *((_QWORD *)v153 + 4);
                v99 = sub_1A5F64358();
                v100 = *(_QWORD *)(v99 - 8);
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v100 + 56))(v71, 1, 1, v99);
                v101 = (_QWORD *)swift_allocObject();
                v102 = (uint64_t)v71;
                v103 = v101;
                v101[2] = 0;
                v127 = v101 + 2;
                v104 = v152;
                v101[3] = 0;
                v101[4] = v104;
                v101[5] = a2;
                v101[6] = v64;
                v105 = v134;
                v106 = v133;
                v101[7] = v134;
                v101[8] = v106;
                v101[9] = v126;
                v101[10] = v98;
                v101[11] = v128;
                v101[12] = a2;
                v107 = v139;
                v101[13] = v64;
                v101[14] = v107;
                v122 = v100;
                v108 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 48);
                v109 = v102;
                v126 = v99;
                LODWORD(v99) = v108(v102, 1, v99);
                swift_bridgeObjectRetain();
                sub_1A5EE1EF0(v105, v106);
                swift_bridgeObjectRetain();
                swift_retain();
                swift_bridgeObjectRetain();
                sub_1A5EE1EF0(v105, v106);
                v128 = v98;
                swift_bridgeObjectRetain();
                v110 = v107;
                if ((_DWORD)v99 == 1)
                {
                  sub_1A5ED43E0(v109, &qword_1ED1CCD78, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750]);
                }
                else
                {
                  sub_1A5F6434C();
                  (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v109, v126);
                }
                v38 = v144;
                a2 = (uint64_t)v152;
                if (*v127)
                {
                  swift_getObjectType();
                  swift_unknownObjectRetain();
                  v111 = sub_1A5F64328();
                  v113 = v112;
                  swift_unknownObjectRelease();
                }
                else
                {
                  v111 = 0;
                  v113 = 0;
                }
                v12 = v142;
                v114 = swift_allocObject();
                *(_QWORD *)(v114 + 16) = &unk_1EE80D298;
                *(_QWORD *)(v114 + 24) = v103;
                if (v113 | v111)
                {
                  v156 = 0;
                  v157 = 0;
                  v158 = v111;
                  v159 = v113;
                }
                v39 = a2;
                v87 = v155;
                swift_task_create();
                swift_release();
                sub_1A5EF0908(v129, v130);
                swift_bridgeObjectRelease();
                v115 = v134;
                v116 = v133;
                sub_1A5EF0908(v134, v133);
                swift_bridgeObjectRelease();
                sub_1A5EF0908(v115, v116);
                sub_1A5EF82A8((uint64_t)v153);
                goto LABEL_22;
              default:
                v161 = v92;
                swift_bridgeObjectRetain();
                v120 = v89;
                sub_1A5F648A4();
                __break(1u);
                return;
            }
          }
          v88 = v63;
          v78 = (void *)sub_1A5F63CE0();

          swift_willThrow();
          v80 = (uint64_t)v153;
        }
        else
        {
          v72 = v58;
          v73 = (id)qword_1ED1CE7B0;
          sub_1A5F64448();
          v74 = swift_allocObject();
          *(_OWORD *)(v74 + 16) = v143;
          v75 = sub_1A5F640C4();
          v76 = v151;
          *(_QWORD *)(v74 + 56) = v72;
          *(_QWORD *)(v74 + 64) = v76;
          *(_QWORD *)(v74 + 32) = v75;
          *(_QWORD *)(v74 + 40) = v77;
          sub_1A5F63F80();

          swift_bridgeObjectRelease();
          sub_1A5F275F0();
          v78 = (void *)swift_allocError();
          *(_QWORD *)v79 = v56;
          *(_BYTE *)(v79 + 8) = 0;
          swift_willThrow();
          v80 = (uint64_t)v153;
          v64 = v145;
        }
        sub_1A5EF82A8(v80);
        v81 = MEMORY[0x1E0DEA968];
        v82 = (id)qword_1ED1CE7B0;
        sub_1A5F6443C();
        v83 = swift_allocObject();
        *(_OWORD *)(v83 + 16) = v141;
        v84 = v151;
        *(_QWORD *)(v83 + 56) = v81;
        *(_QWORD *)(v83 + 64) = v84;
        *(_QWORD *)(v83 + 32) = a2;
        *(_QWORD *)(v83 + 40) = v64;
        v161 = 0;
        v162 = 0xE000000000000000;
        v160 = v78;
        sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
        sub_1A5F646F4();
        v85 = v161;
        v86 = v162;
        *(_QWORD *)(v83 + 96) = v81;
        *(_QWORD *)(v83 + 104) = v84;
        *(_QWORD *)(v83 + 72) = v85;
        *(_QWORD *)(v83 + 80) = v86;
        sub_1A5F63F80();

        swift_bridgeObjectRelease();
        v12 = v142;
        v38 = v144;
        v39 = (uint64_t)v152;
      }
      v87 = v155;
LABEL_22:
      ++v38;
      v40 = v87 + 2;
      v37 = v149;
      if (v147 == v38)
      {
        swift_bridgeObjectRelease();
        v117 = v138;
        a2 = v132;
        goto LABEL_47;
      }
    }
    __break(1u);
    swift_once();
    v20 = (id)qword_1ED1CE7B0;
    sub_1A5F6443C();
    sub_1A5EDD448();
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1A5F679D0;
    v163 = 0;
    v164 = 0xE000000000000000;
    v161 = 0;
    sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
    sub_1A5F646F4();
    v22 = v163;
    v23 = v164;
    *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v21 + 64) = sub_1A5EE19C8();
    *(_QWORD *)(v21 + 32) = v22;
    *(_QWORD *)(v21 + 40) = v23;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    if (a2)
    {
      v24 = swift_allocObject();
      v25 = v138;
      *(_QWORD *)(v24 + 16) = a2;
      *(_QWORD *)(v24 + 24) = v25;
      swift_retain_n();
      sub_1A5ECF4DC((uint64_t)sub_1A5F3E5FC, v24);

      swift_release();
      goto LABEL_49;
    }

  }
  else
  {
    swift_bridgeObjectRelease();
    v117 = v138;
LABEL_47:
    v118 = v139;
    sub_1A5F6446C();
    if (a2)
    {
      v119 = swift_allocObject();
      *(_QWORD *)(v119 + 16) = a2;
      *(_QWORD *)(v119 + 24) = v117;
      swift_retain_n();
      sub_1A5ECF4DC((uint64_t)sub_1A5EBC064, v119);
      swift_release();

LABEL_49:
      sub_1A5ED0004(a2);
    }
    else
    {

    }
  }
}

uint64_t sub_1A5ECF4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD **v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD aBlock[6];

  v3 = v2;
  v16 = a1;
  v5 = sub_1A5F63FE0();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1A5F64028();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD **)(v3 + OBJC_IVAR___AAAccessQueue__qos);
  swift_beginAccess();
  v11 = *v10;
  v12 = v11[2];
  swift_retain();
  os_unfair_lock_lock_with_options();
  v13 = (char *)v11 + *(_QWORD *)(*v11 + 96);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  swift_release();
  sub_1A5F63FD4();
  aBlock[4] = v16;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A5ECE4D0;
  aBlock[3] = &block_descriptor_4;
  _Block_copy(aBlock);
  sub_1A5F64064();
  swift_allocObject();
  swift_retain();
  sub_1A5F64058();
  swift_release();
  sub_1A5F644CC();
  return swift_release();
}

uint64_t sub_1A5ECF6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A5ECF738(a2, a3, a4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A5ECF738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  char v14;
  uint64_t result;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[11];

  v30 = a1;
  v6 = sub_1A5F64070();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(v3 + 32);
  v12 = *(void **)(v11 + OBJC_IVAR___AAAccessQueue_queue);
  *v10 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v7 + 104))(v10, *MEMORY[0x1E0DEF740], v6, v8);
  v13 = v12;
  v14 = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
  if ((v14 & 1) != 0)
  {
    if (a2)
    {
      swift_retain();
      v16 = dispatch_group_create();
      swift_beginAccess();
      v17 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 16);
      if (v17)
      {
        v28 = a2;
        v29 = a3;
        swift_bridgeObjectRetain();
        v18 = 32;
        do
        {
          aBlock[6] = &unk_1EE814718;
          v19 = swift_dynamicCastObjCProtocolConditional();
          if (v19)
          {
            v20 = (void *)v19;
            swift_unknownObjectRetain_n();
            dispatch_group_enter(v16);
            v21 = swift_allocObject();
            *(_QWORD *)(v21 + 16) = v16;
            aBlock[4] = sub_1A5EF984C;
            aBlock[5] = v21;
            aBlock[0] = MEMORY[0x1E0C809B0];
            aBlock[1] = 1107296256;
            aBlock[2] = sub_1A5ECE4D0;
            aBlock[3] = &block_descriptor;
            v22 = _Block_copy(aBlock);
            v23 = v16;
            swift_release();
            objc_msgSend(v20, sel_flushWithCallbackQueue_completion_, v11, v22);
            swift_unknownObjectRelease();
            _Block_release(v22);
            swift_unknownObjectRelease();
          }
          v18 += 16;
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease();
        a2 = v28;
        a3 = v29;
      }
      sub_1A5EEC784(v30, a2, a3);

      return sub_1A5ED0004(a2);
    }
    else
    {
      result = swift_beginAccess();
      v24 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 16);
      if (v24)
      {
        swift_bridgeObjectRetain();
        v25 = 32;
        do
        {
          aBlock[10] = &unk_1EE814718;
          if (swift_dynamicCastObjCProtocolConditional())
          {
            swift_getObjectType();
            v27 = qword_1ED1CD058;
            swift_unknownObjectRetain();
            if (v27 != -1)
              swift_once();
            v26 = (id)qword_1ED1CCCD0;
            Flushable.flush(callbackQueue:completion:)((uint64_t)v26, 0, 0);
            swift_unknownObjectRelease();

          }
          v25 += 16;
          --v24;
        }
        while (v24);
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void Flushable.flush(callbackQueue:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  _QWORD v6[6];

  if (a2)
  {
    v6[4] = a2;
    v6[5] = a3;
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 1107296256;
    v6[2] = sub_1A5ECE4D0;
    v6[3] = &block_descriptor_5;
    v5 = _Block_copy(v6);
    swift_retain();
    swift_release();
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v3, sel_flushWithCallbackQueue_completion_, a1, v5);
  _Block_release(v5);
}

void LazyEventProcessor.flush(callbackQueue:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  _QWORD aBlock[7];

  v4 = a2;
  if (a2)
    v5 = dispatch_group_create();
  else
    v5 = 0;
  v6 = *(_QWORD *)(sub_1A5EDC5D8() + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    if (!v5)
      return;
    goto LABEL_15;
  }
  v17 = v4;
  swift_bridgeObjectRetain();
  v7 = 32;
  v8 = 1;
  while (1)
  {
    aBlock[6] = &unk_1EE814718;
    v9 = swift_dynamicCastObjCProtocolConditional();
    if (v9)
    {
      v10 = (void *)v9;
      swift_unknownObjectRetain_n();
      if (v5)
        dispatch_group_enter(v5);
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = v5;
      aBlock[4] = sub_1A5EF6A98;
      aBlock[5] = v11;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1A5ECE4D0;
      aBlock[3] = &block_descriptor_13;
      v12 = _Block_copy(aBlock);
      v13 = v5;
      swift_release();
      objc_msgSend(v10, sel_flushWithCallbackQueue_completion_, a1, v12);
      _Block_release(v12);
      swift_unknownObjectRelease_n();
    }
    if (v6 == v8)
      break;
    v7 += 16;
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
      break;
    }
  }
  swift_bridgeObjectRelease_n();
  v4 = v17;
  if (v5)
  {
LABEL_15:
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v4;
    *(_QWORD *)(v15 + 24) = a3;
    v16 = v5;
    sub_1A5EC84CC(v4);
    sub_1A5EEC784(a1, (uint64_t)sub_1A5F12BE0, v15);
    swift_release();

  }
}

void UploadBatchEventProcessor.flush(callbackQueue:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v5;
  void *v6;
  _QWORD v7[6];

  v5 = *(void **)(v3 + 16);
  if (a2)
  {
    v7[4] = a2;
    v7[5] = a3;
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 1107296256;
    v7[2] = sub_1A5ECE4D0;
    v7[3] = &block_descriptor_10;
    v6 = _Block_copy(v7);
    swift_retain();
    swift_release();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(v5, sel_flushWithCallbackQueue_completion_, a1, v6);
  _Block_release(v6);
}

uint64_t sub_1A5ED0004(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1A5ED00AC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v4 = v3;
  v8 = sub_1A5F63FE0();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v23 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A5F64028();
  v21 = *(_QWORD *)(v12 - 8);
  v22 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)(v4 + 96);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v4;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a1;
  aBlock[4] = sub_1A5ECE4FC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A5ECE4D0;
  aBlock[3] = &block_descriptor_8;
  v17 = _Block_copy(aBlock);
  v18 = v15;
  swift_retain();
  sub_1A5EC84CC(a2);
  v19 = a1;
  sub_1A5F64004();
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1A5ED030C();
  sub_1A5ECD49C(0, &qword_1ED1CE518, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1A5ED02AC();
  sub_1A5F645E0();
  MEMORY[0x1A85B81E0](0, v14, v11, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v22);
  return swift_release();
}

unint64_t sub_1A5ED02AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1CE520;
  if (!qword_1ED1CE520)
  {
    sub_1A5ECD49C(255, &qword_1ED1CE518, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1CE520);
  }
  return result;
}

unint64_t sub_1A5ED030C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1CF7F0;
  if (!qword_1ED1CF7F0)
  {
    v1 = sub_1A5F63FE0();
    result = MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1CF7F0);
  }
  return result;
}

uint64_t AccessTracker.push<A>(data:traits:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a4;
  v25 = a5;
  v22 = a2;
  v23 = a3;
  v21 = a1;
  v9 = type metadata accessor for PushEvent(0, a6, a7, a4);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - v11;
  v13 = sub_1A5F64070();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = swift_weakLoadStrong();
  if (result)
  {
    v18 = *(void **)(*(_QWORD *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v16 = v18;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
    v19 = v18;
    LOBYTE(v18) = sub_1A5F64088();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
    if ((v18 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(v12, v21, a6);
      swift_storeEnumTagMultiPayload();
      sub_1A5EF094C((uint64_t)v12, v22, v23, v24, v25, a6, a7);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

_QWORD *sub_1A5ED04E0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  _OWORD *v24;
  uint64_t v25;
  __int128 v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v8 = (void *)a2[2];
  v7 = a2[3];
  a1[2] = v8;
  a1[3] = v7;
  a1[4] = a2[4];
  v9 = a3[11];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1A5F63F08();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v14 = v8;
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v15 = a3[12];
  v16 = a3[13];
  v17 = (_QWORD *)((char *)a1 + v15);
  v18 = (_QWORD *)((char *)a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (char *)a1 + v16;
  v21 = (char *)a2 + v16;
  v20[8] = v21[8];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v22 = a3[14];
  v23 = (char *)a1 + v22;
  v24 = (_OWORD *)((char *)a2 + v22);
  v25 = *(_QWORD *)((char *)a2 + v22 + 24);
  swift_bridgeObjectRetain();
  if (v25)
  {
    *((_QWORD *)v23 + 3) = v25;
    (**(void (***)(char *, _OWORD *, uint64_t))(v25 - 8))(v23, v24, v25);
  }
  else
  {
    v26 = v24[1];
    *(_OWORD *)v23 = *v24;
    *((_OWORD *)v23 + 1) = v26;
  }
  *(_OWORD *)((char *)a1 + a3[15]) = *(_OWORD *)((char *)a2 + a3[15]);
  return a1;
}

void Client.__allocating_init(bundle:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  Client.init(bundle:)(a1);
}

void Client.init(bundle:)(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  _OWORD v14[2];
  _OWORD v15[2];

  v4 = objc_msgSend(a1, sel_bundleIdentifier);
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = v4;
  v5 = (void *)sub_1A5F6410C();
  v6 = objc_msgSend(a1, sel_objectForInfoDictionaryKey_, v5);

  if (!v6)
  {
LABEL_7:

    __break(1u);
    goto LABEL_8;
  }
  sub_1A5F645C8();
  swift_unknownObjectRelease();
  sub_1A5EF1B2C(v14, v15);
  swift_dynamicCast();
  v7 = (void *)sub_1A5F6410C();
  v8 = objc_msgSend(a1, sel_objectForInfoDictionaryKey_, v7);

  if (!v8)
  {
LABEL_8:

    __break(1u);
    goto LABEL_9;
  }
  sub_1A5F645C8();
  swift_unknownObjectRelease();
  sub_1A5EF1B2C(v14, v15);
  swift_dynamicCast();
  v9 = (void *)sub_1A5F6410C();
  v10 = objc_msgSend(a1, sel_objectForInfoDictionaryKey_, v9);

  if (v10)
  {
    sub_1A5F645C8();
    swift_unknownObjectRelease();
    sub_1A5EF1B2C(v14, v15);
    swift_dynamicCast();
    v11 = (void *)sub_1A5F6410C();
    swift_bridgeObjectRelease();
    v12 = (void *)sub_1A5F6410C();
    swift_bridgeObjectRelease();
    v13 = (void *)sub_1A5F6410C();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_initWithIdentifier_name_version_buildNumber_, v2, v11, v12, v13);

    return;
  }
LABEL_9:

  __break(1u);
}

id Client.init(identifier:name:version:buildNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  objc_super v14;

  v9 = &v8[OBJC_IVAR___AAClient_identifier];
  *(_QWORD *)v9 = a1;
  *((_QWORD *)v9 + 1) = a2;
  v10 = &v8[OBJC_IVAR___AAClient_name];
  *(_QWORD *)v10 = a3;
  *((_QWORD *)v10 + 1) = a4;
  v11 = &v8[OBJC_IVAR___AAClient_version];
  *(_QWORD *)v11 = a5;
  *((_QWORD *)v11 + 1) = a6;
  v12 = &v8[OBJC_IVAR___AAClient_buildNumber];
  *(_QWORD *)v12 = a7;
  *((_QWORD *)v12 + 1) = a8;
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for Client();
  return objc_msgSendSuper2(&v14, sel_init);
}

uint64_t type metadata accessor for Client()
{
  return objc_opt_self();
}

uint64_t sub_1A5ED0A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, char *, uint64_t), uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  void *v28;
  void (*v29)(_QWORD);
  id v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t i;
  uint64_t v36;
  void (*v37)(uint64_t, char *);
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  double v43;
  double v44;
  double v45;
  double v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  double *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  _QWORD *v77;
  id v78;
  uint64_t v79;
  uint64_t j;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char **v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  char **v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  unsigned int v99;
  void (*v100)(_QWORD *, _QWORD, uint64_t);
  void (*v101)(_QWORD *, uint64_t);
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  unsigned __int8 v108[24];

  v96 = a7;
  v98 = a6;
  v104 = a5;
  v92 = a4;
  v91 = a3;
  v97 = a2;
  v95 = type metadata accessor for Session();
  MEMORY[0x1E0C80A78](v95);
  v93 = (uint64_t *)((char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1A5F63F08();
  v106 = *(_QWORD *)(v9 - 8);
  v107 = v9;
  MEMORY[0x1E0C80A78](v9);
  v105 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A5F64070();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t **)((char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for SessionObserverChange();
  v16 = MEMORY[0x1E0C80A78](v15);
  v94 = (char **)((char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v84 - v18;
  v20 = type metadata accessor for SessionManager.SessionState(0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v90 = (char **)((char *)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v84 - v23;
  v25 = a1 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
  swift_beginAccess();
  v89 = v25;
  sub_1A5ED7E14(v25, (uint64_t)v24, type metadata accessor for SessionManager.SessionState);
  v88 = v20;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
    return swift_release();
  if (EnumCaseMultiPayload == 1)
    sub_1A5ED4D44((uint64_t)v24, type metadata accessor for SessionManager.SessionState);
  swift_storeEnumTagMultiPayload();
  v27 = *(_QWORD *)(a1 + 48);
  v87 = OBJC_IVAR___AAAccessQueue_queue;
  v28 = *(void **)(v27 + OBJC_IVAR___AAAccessQueue_queue);
  *v14 = v28;
  v29 = *(void (**)(_QWORD))(v12 + 104);
  v99 = *MEMORY[0x1E0DEF740];
  v100 = (void (*)(_QWORD *, _QWORD, uint64_t))v29;
  v29(v14);
  v30 = v28;
  LOBYTE(v28) = sub_1A5F64088();
  v101 = *(void (**)(_QWORD *, uint64_t))(v12 + 8);
  v101(v14, v11);
  if ((v28 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    result = sub_1A5F64724();
    v33 = result;
    if (!result)
      goto LABEL_18;
    goto LABEL_7;
  }
  v86 = v15;
  v15 = a1;
  v31 = (uint64_t *)(a1 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_observers);
  swift_beginAccess();
  v84 = v31;
  a1 = *v31;
  v32 = (unint64_t)*v31 >> 62;
  v102 = v14;
  v103 = v11;
  v85 = v27;
  if (v32)
    goto LABEL_17;
  v33 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v33)
    goto LABEL_18;
LABEL_7:
  if (v33 < 1)
  {
    __break(1u);
    goto LABEL_43;
  }
  for (i = 0; i != v33; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v36 = MEMORY[0x1A85B836C](i, a1);
    }
    else
    {
      v36 = *(_QWORD *)(a1 + 8 * i + 32);
      swift_retain();
    }
    if (MEMORY[0x1A85B8E10](v36 + 16))
    {
      swift_unknownObjectRelease();
      v37 = *(void (**)(uint64_t, char *))(v36 + 32);
      v38 = swift_retain();
      v37(v38, v19);
      swift_release();
    }
    swift_release();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  result = sub_1A5ED4D44((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for SessionObserverChange);
  if (!v97)
  {
    v41 = v15;
    v48 = *(_QWORD *)(v15 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider + 24);
    v49 = *(_QWORD *)(v15 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v15 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider), v48);
    v46 = (*(double (**)(unsigned __int8 *, uint64_t, uint64_t))(v49 + 8))(v108, v48, v49);
    v47 = v108[0];
    v40 = v102;
    v39 = v103;
    v42 = (unint64_t)v98;
    goto LABEL_24;
  }
  v40 = v102;
  v39 = v103;
  v41 = v15;
  v42 = (unint64_t)v98;
  if ((*(_BYTE *)(v97 + OBJC_IVAR___AATimestampJitter_enabled) & 1) == 0)
  {
    v47 = 0;
    v46 = 0.0;
    goto LABEL_24;
  }
  v43 = *(double *)(v97 + OBJC_IVAR___AATimestampJitter_lowerBound);
  v44 = *(double *)(v97 + OBJC_IVAR___AATimestampJitter_upperBound);
  if (v43 <= v44)
  {
    sub_1A5EC0F08(result, v43, v44);
    v46 = v45;
    v47 = 4;
LABEL_24:
    v50 = *(void (**)(char *, uint64_t, uint64_t))(v106 + 16);
    v50(v105, v96, v107);
    v51 = MEMORY[0x1A85B8E10](v41 + 32);
    v98 = (void (*)(char *, char *, uint64_t))v50;
    if (!v51)
    {
      v57 = v104;
      sub_1A5EF3C30(v104, v42);
      v56 = 0;
      v55 = 0;
LABEL_28:
      type metadata accessor for ActiveSession();
      v58 = (char *)swift_allocObject();
      v59 = v92;
      *((_QWORD *)v58 + 2) = v91;
      *((_QWORD *)v58 + 3) = v59;
      *((_QWORD *)v58 + 4) = v57;
      *((_QWORD *)v58 + 5) = v42;
      (*(void (**)(char *, char *, uint64_t))(v106 + 32))(&v58[OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate], v105, v107);
      v60 = &v58[OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier];
      *(_QWORD *)v60 = v56;
      *((_QWORD *)v60 + 1) = v55;
      v61 = (double *)&v58[OBJC_IVAR____TtC12AppAnalytics13ActiveSession_timestampConfiguration];
      *(_BYTE *)v61 = v47;
      v61[1] = v46;
      v62 = (uint64_t)v90;
      *v90 = v58;
      swift_storeEnumTagMultiPayload();
      v63 = v89;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1A5ED2088(v62, v63);
      swift_endAccess();
      v64 = *(_QWORD *)(v41 + 24);
      v65 = *((_QWORD *)v58 + 2);
      v66 = *((_QWORD *)v58 + 3);
      v67 = *(_QWORD *)&v58[OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier + 8];
      v105 = *(char **)&v58[OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier];
      v106 = v64;
      v69 = *((_QWORD *)v58 + 4);
      v68 = *((_QWORD *)v58 + 5);
      v70 = v95;
      v71 = v93;
      v98((char *)v93 + *(int *)(v95 + 28), &v58[OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate], v107);
      v72 = v61[1];
      v108[0] = *(_BYTE *)v61;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A5EF3C30(v69, v68);
      v73 = sub_1A5EEFC98(v65, v66, v108, v72);
      *v71 = v65;
      v71[1] = v66;
      v71[2] = (uint64_t)v105;
      v71[3] = v67;
      v71[4] = v69;
      v71[5] = v68;
      *(uint64_t *)((char *)v71 + *(int *)(v70 + 32)) = v73;
      sub_1A5ED1864((uint64_t)v71);
      sub_1A5ED4D44((uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for Session);
      v74 = (uint64_t)v94;
      *v94 = v58;
      swift_storeEnumTagMultiPayload();
      v75 = *(void **)(v85 + v87);
      v77 = v102;
      v76 = v103;
      *v102 = v75;
      v100(v77, v99, v76);
      swift_retain();
      v78 = v75;
      LOBYTE(v75) = sub_1A5F64088();
      v101(v77, v76);
      if ((v75 & 1) != 0)
      {
        v76 = *v84;
        if (!((unint64_t)*v84 >> 62))
        {
          v79 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFF8) + 0x10);
          result = swift_bridgeObjectRetain();
          if (v79)
            goto LABEL_31;
          goto LABEL_41;
        }
      }
      else
      {
        __break(1u);
      }
      swift_bridgeObjectRetain();
      result = sub_1A5F64724();
      v79 = result;
      if (result)
      {
LABEL_31:
        if (v79 >= 1)
        {
          for (j = 0; j != v79; ++j)
          {
            if ((v76 & 0xC000000000000001) != 0)
            {
              v81 = MEMORY[0x1A85B836C](j, v76);
            }
            else
            {
              v81 = *(_QWORD *)(v76 + 8 * j + 32);
              swift_retain();
            }
            if (MEMORY[0x1A85B8E10](v81 + 16))
            {
              swift_unknownObjectRelease();
              v82 = *(void (**)(uint64_t, uint64_t))(v81 + 32);
              v83 = swift_retain();
              v82(v83, v74);
              swift_release();
            }
            swift_release();
          }
          goto LABEL_41;
        }
        goto LABEL_44;
      }
LABEL_41:
      swift_release();
      swift_bridgeObjectRelease();
      return sub_1A5ED4D44(v74, (uint64_t (*)(_QWORD))type metadata accessor for SessionObserverChange);
    }
    v52 = v51;
    v53 = *(void **)(*(_QWORD *)(v51 + 24) + OBJC_IVAR___AAAccessQueue_queue);
    *v40 = v53;
    v100(v40, v99, v39);
    sub_1A5EF3C30(v104, v42);
    v54 = v53;
    LOBYTE(v53) = sub_1A5F64088();
    result = ((uint64_t (*)(_QWORD *, uint64_t))v101)(v40, v39);
    if ((v53 & 1) != 0)
    {
      v56 = *(_QWORD *)(v52 + 40);
      v55 = *(_QWORD *)(v52 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      v57 = v104;
      goto LABEL_28;
    }
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5ED12D0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char v26[8];
  uint64_t v27;
  __int128 v28;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (!result)
    return result;
  v4 = result;
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 112);
  v20 = v5 + 64;
  v6 = 1 << *(_BYTE *)(v5 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(v5 + 64);
  v21 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v8)
    goto LABEL_9;
LABEL_7:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v13 = v12 | (v9 << 6);
  while (2)
  {
    v14 = *(_QWORD *)(v5 + 56);
    v15 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v13);
    v16 = v15[1];
    *(_QWORD *)&v22 = *v15;
    *((_QWORD *)&v22 + 1) = v16;
    sub_1A5ECE02C(v14 + 40 * v13, (uint64_t)&v23);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1A5ED15C4((uint64_t)&v22, (uint64_t)v26, &qword_1ED1CE4F8, &qword_1ED1CE4F0, &qword_1ED1CE4C8);
      if (!v27)
      {
        swift_release();
        return swift_release();
      }
      swift_bridgeObjectRelease();
      sub_1A5EC1D18(&v28, (uint64_t)&v22);
      v10 = *((_QWORD *)&v23 + 1);
      v11 = v24;
      __swift_project_boxed_opaque_existential_1(&v22, *((uint64_t *)&v23 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(a2, v4, v10, v11);
      result = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v22);
      if (v8)
        goto LABEL_7;
LABEL_9:
      v17 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_31;
      }
      if (v17 < v21)
      {
        v18 = *(_QWORD *)(v20 + 8 * v17);
        if (v18)
          goto LABEL_12;
        v19 = v9 + 2;
        ++v9;
        if (v17 + 1 < v21)
        {
          v18 = *(_QWORD *)(v20 + 8 * v19);
          if (v18)
            goto LABEL_15;
          v9 = v17 + 1;
          if (v17 + 2 < v21)
          {
            v18 = *(_QWORD *)(v20 + 8 * (v17 + 2));
            if (v18)
            {
              v17 += 2;
              goto LABEL_12;
            }
            v19 = v17 + 3;
            v9 = v17 + 2;
            if (v17 + 3 < v21)
              break;
          }
        }
      }
LABEL_26:
      v8 = 0;
      v25 = 0;
      v23 = 0u;
      v24 = 0u;
      v22 = 0u;
    }
    v18 = *(_QWORD *)(v20 + 8 * v19);
    if (v18)
    {
LABEL_15:
      v17 = v19;
LABEL_12:
      v8 = (v18 - 1) & v18;
      v13 = __clz(__rbit64(v18)) + (v17 << 6);
      v9 = v17;
      continue;
    }
    break;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v21)
    {
      v9 = v21 - 1;
      goto LABEL_26;
    }
    v18 = *(_QWORD *)(v20 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_12;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1A5ED1578(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1A5EF17C8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1A5ED15C4(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, unint64_t *a5)
{
  uint64_t v7;

  sub_1A5ED1618(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1A5ED1618(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1A5EF7B14(255, a3, a4);
    v5 = sub_1A5F64568();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1A5ED1670(uint64_t a1, uint64_t a2)
{
  sub_1A5ED1678(a1, a2);
}

void sub_1A5ED1678(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v3 = type metadata accessor for SessionObserverChange();
  MEMORY[0x1E0C80A78](v3);
  sub_1A5ED7E14(a2, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_1A5ED1718 + 4 * byte_1A5F69400[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A5ED1718()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  sub_1A5ED4D44(v2, (uint64_t (*)(_QWORD))type metadata accessor for SessionObserverChange);
  return v0(v1, 2);
}

uint64_t sub_1A5ED1758(uint64_t a1, uint64_t a2)
{
  return sub_1A5ED12D0(a1, a2);
}

uint64_t sub_1A5ED1760(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A5ED176C(a1, a2, *(void (**)(uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1A5ED176C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v14;

  v9 = type metadata accessor for SessionObserverChange();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5ED7E14(a2, (uint64_t)v11, v12);
  if (swift_getEnumCaseMultiPayload())
    return sub_1A5ED4D44((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SessionObserverChange);
  sub_1A5ED4D44((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SessionObserverChange);
  a3(a1);
  swift_beginAccess();
  *(_QWORD *)(a5 + 16) = 0;
  return swift_release();
}

uint64_t sub_1A5ED1864(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;

  v3 = sub_1A5F64070();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(*(_QWORD *)(v1 + 32) + OBJC_IVAR___AAAccessQueue_queue);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v8 = v7;
  LOBYTE(v7) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    result = swift_beginAccess();
    v10 = *(_QWORD *)(v1 + 48);
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain();
      v12 = (uint64_t *)(v10 + 40);
      do
      {
        v13 = *v12;
        ObjectType = swift_getObjectType();
        v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
        swift_unknownObjectRetain();
        v15(a1, ObjectType, v13);
        swift_unknownObjectRelease();
        v12 += 2;
        --v11;
      }
      while (v11);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t LazyEventProcessor.didStartSession(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v2 = sub_1A5EDC5D8();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(v2 + 40);
    do
    {
      v5 = *v4;
      ObjectType = swift_getObjectType();
      v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
      swift_unknownObjectRetain();
      v7(a1, ObjectType, v5);
      swift_unknownObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
  }
  return swift_bridgeObjectRelease();
}

uint64_t UploadBatchEventProcessor.didStartSession(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t *v31;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  char *v37;
  uint64_t v38;
  __int128 v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;

  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFBE8, (uint64_t (*)(uint64_t))type metadata accessor for Session, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v36 - v4;
  v6 = sub_1A5F63DD0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD **)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(v10 + 4, v10[7]);
  v42 = a1;
  sub_1A5ED2804(a1);
  v37 = v5;
  v38 = v1;
  os_unfair_lock_lock_with_options();
  swift_beginAccess();
  v10[10] = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10[11] + 16));
  v11 = __swift_project_boxed_opaque_existential_1(v10 + 4, v10[7]);
  v12 = *v11;
  v13 = (_QWORD *)(*v11 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  v14 = v13[3];
  v15 = v13[4];
  __swift_project_boxed_opaque_existential_1(v13, v14);
  sub_1A5ED7F90();
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 128))(v9, v14, v15);
  v40 = v13;
  v41 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v21 = v41;
    v44 = (uint64_t *)(v41 + 40);
    v36[1] = v19;
    v22 = (uint64_t *)(v19 + 40);
    v39 = xmmword_1A5F66C40;
    v23 = v40;
    v43 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
    do
    {
      v24 = *(v22 - 1);
      v25 = *v22;
      swift_bridgeObjectRetain();
      os_unfair_lock_lock_with_options();
      v45 = v24;
      v26 = sub_1A5ED89B8(v24, v25);
      v27 = v23[3];
      v28 = v23[4];
      __swift_project_boxed_opaque_existential_1(v23, v27);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 24))(v26, v27, v28);
      swift_release();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v29 = sub_1A5EF11E8(v45, v25);
      LOBYTE(v28) = v30;
      swift_bridgeObjectRelease();
      if ((v28 & 1) != 0)
      {
        v31 = v44;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v33 = *v31;
        v46 = *v31;
        *v31 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1A5F05308();
          v33 = v46;
        }
        swift_bridgeObjectRelease();
        sub_1A5EF763C(v29, v33);
        *v31 = v33;
        swift_bridgeObjectRelease();
      }
      v22 += 2;
      swift_endAccess();
      swift_release();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v21 + v43) + 16));
      swift_bridgeObjectRelease();
      --v20;
    }
    while (v20);
  }
  swift_bridgeObjectRelease();
  v35 = (uint64_t)v37;
  v34 = v38;
  sub_1A5ED86C4(v42, (uint64_t)v37);
  v16 = type metadata accessor for Session();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v35, 0, 1, v16);
  v17 = v34 + OBJC_IVAR____TtC12AppAnalytics25UploadBatchEventProcessor_currentSession;
  swift_beginAccess();
  sub_1A5ED8668(v35, v17);
  return swift_endAccess();
}

uint64_t LoggingEventProcessor.didStartSession(_:)(uint64_t *a1)
{
  return sub_1A5EF4AC4(a1);
}

uint64_t sub_1A5ED2088(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionManager.SessionState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_OWORD *sub_1A5ED20CC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1A5ED4D44((uint64_t)a1, type metadata accessor for SessionManager.SessionState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      v7 = type metadata accessor for Session();
      v8 = *(int *)(v7 + 28);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1A5F63F08();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      *(_QWORD *)((char *)a1 + *(int *)(v7 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 32));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_1A5ED21B0()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;

  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
  {
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v2 = (void *)Strong;
      if (qword_1ED1CD058 != -1)
        swift_once();
      objc_msgSend(v2, sel_flushWithCallbackQueue_completion_, qword_1ED1CCCD0, 0);
      swift_release();
    }
  }
  sub_1A5ED2250();
}

void sub_1A5ED2250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  double v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  char *v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t Strong;
  uint64_t v34;
  void *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD aBlock[6];

  v0 = sub_1A5F63FE0();
  v51 = *(_QWORD *)(v0 - 8);
  v52 = v0;
  MEMORY[0x1E0C80A78](v0);
  v50 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_1A5F64028();
  v2 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A5F63FBC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A5F6404C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - v14;
  v16 = sub_1A5F644F0();
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(double *)(v53 + 40);
  if (v21 > 0.0)
  {
    v39 = v18;
    v40 = v17;
    v41 = v12;
    v42 = v10;
    v43 = v15;
    v44 = v9;
    v45 = v8;
    v46 = v6;
    v47 = v4;
    v48 = v2;
    if (*(_QWORD *)(v53 + 48))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1A5F64514();
      swift_unknownObjectRelease();
    }
    sub_1A5ED27C8();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938];
    sub_1A5ECC4D8(&qword_1ED1CE548, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938], MEMORY[0x1E0DEF948]);
    sub_1A5ECD49C(0, &qword_1ED1CE530, v22, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1A5ED26BC((unint64_t *)&unk_1ED1CE538, &qword_1ED1CE530, v22);
    v23 = v40;
    sub_1A5F645E0();
    v24 = sub_1A5F644FC();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v23);
    ObjectType = swift_getObjectType();
    v26 = v41;
    sub_1A5F64040();
    v27 = v43;
    MEMORY[0x1A85B7D9C](v26, v21);
    v28 = *(void (**)(char *, uint64_t))(v42 + 8);
    v29 = v44;
    v28(v26, v44);
    v31 = v45;
    v30 = v46;
    *v45 = 0;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v30 + 104))(v31, *MEMORY[0x1E0DEF480], v5);
    MEMORY[0x1A85B824C](v27, v31, ObjectType, v21);
    (*(void (**)(_QWORD *, uint64_t))(v30 + 8))(v31, v5);
    v28(v27, v29);
    v32 = v53;
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    v34 = swift_allocObject();
    *(double *)(v34 + 16) = v21;
    *(_QWORD *)(v34 + 24) = Strong;
    aBlock[4] = sub_1A5F56304;
    aBlock[5] = v34;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A5ECE4D0;
    aBlock[3] = &block_descriptor_11;
    v35 = _Block_copy(aBlock);
    swift_retain();
    v36 = v47;
    sub_1A5F64004();
    v37 = v50;
    sub_1A5ED2704();
    sub_1A5F64508();
    _Block_release(v35);
    swift_release();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v37, v52);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v49);
    swift_release();
    sub_1A5F64520();
    *(_QWORD *)(v32 + 48) = v24;
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1A5ED26BC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1A5ECD49C(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEAF38], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A5ED2704()
{
  uint64_t (*v0)(uint64_t);

  sub_1A5F63FE0();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1A5ECC4D8((unint64_t *)&qword_1ED1CF7F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1A5ECD49C(0, &qword_1ED1CE518, v0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1A5ED26BC((unint64_t *)&qword_1ED1CE520, &qword_1ED1CE518, v0);
  return sub_1A5F645E0();
}

unint64_t sub_1A5ED27C8()
{
  unint64_t result;

  result = qword_1ED1CE550;
  if (!qword_1ED1CE550)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1CE550);
  }
  return result;
}

void sub_1A5ED2804(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = sub_1A5F63DD0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFBE8, (uint64_t (*)(uint64_t))type metadata accessor for Session, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - v9;
  v11 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
  os_unfair_lock_lock_with_options();
  sub_1A5ED7E14(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Session);
  v12 = type metadata accessor for Session();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
  v13 = v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_currentSession;
  swift_beginAccess();
  sub_1A5ED8668((uint64_t)v10, v13);
  swift_endAccess();
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24);
  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), v14);
  sub_1A5ED7F90();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 120))(v7, v14, v15);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v2 + v11) + 16));
}

uint64_t destroy for DenylistDescriptor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s12AppAnalytics25UploadBatchEventProcessorC6client8endpoint11contentType6configAcA6ClientC_AA08EndpointJ0_pAA07ContentJ0OAA0cdE6ConfigCtcfC_0(void *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _DWORD *v30;
  void *v31;
  id v32;
  _BYTE *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _DWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v60[2];
  id v61;
  void *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  __int128 v70[2];
  void *v71;
  __int128 v72;
  uint64_t v73;
  _UNKNOWN **v74;
  _QWORD v75[3];
  uint64_t v76;
  _UNKNOWN **v77;

  v62 = a4;
  v69 = a3;
  v61 = a1;
  v5 = sub_1A5F6449C();
  v66 = *(_QWORD *)(v5 - 8);
  v67 = v5;
  MEMORY[0x1E0C80A78](v5);
  v68 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1A5F64490();
  MEMORY[0x1E0C80A78](v64);
  v65 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A5F64028();
  MEMORY[0x1E0C80A78](v8);
  v63 = (char *)v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A5F63DD0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UploadDropboxFileManager();
  v14 = swift_allocObject();
  type metadata accessor for MescalSigner();
  v15 = swift_allocObject();
  v16 = type metadata accessor for SHA1Base64SigningService();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  *(_QWORD *)(v17 + 24) = &off_1E4FCFB58;
  v18 = type metadata accessor for URLSessionUploadClientFactory();
  v19 = swift_allocObject();
  sub_1A5ED4F64(0);
  v20 = swift_allocObject();
  v76 = v18;
  v77 = &protocol witness table for URLSessionUploadClientFactory;
  v75[0] = v19;
  v73 = v16;
  v74 = &off_1E4FD0158;
  *(_QWORD *)&v72 = v17;
  v21 = qword_1ED1CD448;
  if (qword_1ED1CD438 != -1)
    swift_once();
  v22 = sub_1A5F63F98();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED1D21B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20 + v21, v23, v22);
  type metadata accessor for UploadEndpoint();
  v24 = swift_allocObject();
  v71 = &unk_1EE817C60;
  v25 = swift_dynamicCastObjCProtocolConditional();
  if (v25)
    v26 = v25;
  else
    v26 = (uint64_t)a2;
  *(_QWORD *)(v24 + 16) = v26;
  *(_BYTE *)(v24 + 24) = v25 != 0;
  *(_QWORD *)(v20 + 16) = v24;
  sub_1A5ECE02C((uint64_t)&v72, v20 + 40);
  *(_QWORD *)(v20 + 24) = 1885960807;
  *(_QWORD *)(v20 + 32) = 0xE400000000000000;
  sub_1A5ECE02C((uint64_t)v75, v20 + 80);
  *(_BYTE *)(v20 + 120) = 0;
  sub_1A5ECE02C((uint64_t)v75, (uint64_t)v70);
  v27 = swift_allocObject();
  sub_1A5EC1D18(v70, v27 + 16);
  sub_1A5EBB7B0(0, &qword_1ED1CF500, &qword_1ED1CE7A8, (uint64_t)&protocol descriptor for UploadClient, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Lazy);
  v28 = swift_allocObject();
  type metadata accessor for UnfairLock();
  *(_OWORD *)(v28 + 32) = 0u;
  *(_OWORD *)(v28 + 48) = 0u;
  *(_QWORD *)(v28 + 64) = 0;
  v29 = swift_allocObject();
  swift_unknownObjectRetain();
  v30 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v29 + 16) = v30;
  *v30 = 0;
  *(_DWORD *)(v29 + 24) = 0x10000;
  *(_QWORD *)(v28 + 16) = sub_1A5F54AF0;
  *(_QWORD *)(v28 + 24) = v27;
  *(_QWORD *)(v28 + 72) = v29;
  *(_QWORD *)(v28 + 80) = 1;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v72);
  *(_QWORD *)(v20 + 128) = v28;
  v31 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, (uint64_t)v62 + OBJC_IVAR___AAUploadBatchEventConfig_directory, v10);
  v32 = v61;
  v33 = v31;
  v34 = objc_msgSend(a2, sel_name);
  v35 = sub_1A5F64130();
  v37 = v36;

  type metadata accessor for DocumentDirectoryUploadDropboxPathProvider(0);
  v38 = swift_allocObject();
  swift_retain();
  v39 = sub_1A5ED5260((uint64_t)v13, v35, v37, v14, v38);
  LOBYTE(v38) = v33[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled];
  v40 = objc_allocWithZone((Class)type metadata accessor for TransparencyLogging());
  swift_retain();
  v41 = sub_1A5ED33E8(v38);
  v42 = type metadata accessor for UploadDropbox(0);
  v43 = (_QWORD *)swift_allocObject();
  v61 = v32;
  v44 = v14;
  v62 = (void *)v14;
  v45 = v69;
  v46 = sub_1A5ED4FE0(v32, v33, v39, v44, v69, v41, v43);

  v60[1] = a2;
  v76 = v42;
  v77 = &off_1E4FD3418;
  v75[0] = v46;
  type metadata accessor for UploadManager();
  v47 = (_QWORD *)swift_allocObject();
  v48 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v75, v42);
  v60[0] = v60;
  v49 = MEMORY[0x1E0C80A78](v48);
  v51 = (_QWORD *)((char *)v60 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v52 + 16))(v51, v49);
  v53 = *v51;
  v73 = v42;
  v74 = &off_1E4FD3418;
  *(_QWORD *)&v72 = v53;
  v47[10] = MEMORY[0x1E0DEE9E0];
  v54 = swift_allocObject();
  v55 = v33;
  v56 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v54 + 16) = v56;
  *v56 = 0;
  *(_DWORD *)(v54 + 24) = 0x10000;
  v47[11] = v54;
  sub_1A5ED4A58();
  sub_1A5F6401C();
  *(_QWORD *)&v70[0] = MEMORY[0x1E0DEE9D8];
  sub_1A5ED3158();
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CF810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1A5ED31A0();
  sub_1A5F645E0();
  (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v68, *MEMORY[0x1E0DEF8D8], v67);
  v47[12] = sub_1A5F644D8();
  v47[2] = v20;
  v47[3] = &off_1E4FD0B00;
  sub_1A5EC1D18(&v72, (uint64_t)(v47 + 4));
  v47[9] = v55;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
  type metadata accessor for UploadBatchEventProcessor();
  v57 = swift_allocObject();
  v58 = sub_1A5ED3220((uint64_t)v47, v45, v57);
  swift_release();

  swift_unknownObjectRelease();
  return v58;
}

uint64_t type metadata accessor for UploadBatchEventProcessor()
{
  uint64_t result;

  result = qword_1ED1CF138;
  if (!qword_1ED1CF138)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for UploadDropbox(uint64_t a1)
{
  return sub_1A5EBC540(a1, (uint64_t *)&unk_1ED1CE918);
}

unint64_t sub_1A5ED3158()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1CF820;
  if (!qword_1ED1CF820)
  {
    v1 = sub_1A5F64490();
    result = MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1CF820);
  }
  return result;
}

unint64_t sub_1A5ED31A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1CF818;
  if (!qword_1ED1CF818)
  {
    sub_1A5ECD49C(255, (unint64_t *)&qword_1ED1CF810, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1CF818);
  }
  return result;
}

uint64_t type metadata accessor for URLSessionUploadClientFactory()
{
  return objc_opt_self();
}

uint64_t sub_1A5ED3220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v6 = a3 + OBJC_IVAR____TtC12AppAnalytics25UploadBatchEventProcessor_currentSession;
  v7 = type metadata accessor for Session();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = &off_1E4FD3610;
  *(_BYTE *)(a3 + OBJC_IVAR____TtC12AppAnalytics25UploadBatchEventProcessor_isEnabled) = 1;
  v8 = qword_1ED1CFC08;
  swift_unknownObjectRetain();
  if (v8 != -1)
    swift_once();
  v9 = (void *)qword_1ED1CE7B0;
  sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1A5F66C40;
  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  v12 = sub_1A5EE19C8();
  *(_QWORD *)(v10 + 64) = v12;
  *(_QWORD *)(v10 + 32) = 1702195828;
  *(_QWORD *)(v10 + 40) = 0xE400000000000000;
  v13 = v9;
  v14 = ContentType.description.getter(a2);
  *(_QWORD *)(v10 + 96) = v11;
  *(_QWORD *)(v10 + 104) = v12;
  *(_QWORD *)(v10 + 72) = v14;
  *(_QWORD *)(v10 + 80) = v15;
  sub_1A5F64454();
  sub_1A5F63F80();

  swift_bridgeObjectRelease();
  swift_release();
  return a3;
}

uint64_t type metadata accessor for SHA1Base64SigningService()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TransparencyLogging()
{
  return objc_opt_self();
}

id sub_1A5ED33E8(char a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  v1[OBJC_IVAR___AATransparencyLogging_isEnabled] = a1;
  if ((a1 & 1) != 0)
  {
    if (qword_1ED1CFC08 != -1)
      swift_once();
  }
  else if (qword_1ED1CFC08 != -1)
  {
    swift_once();
  }
  v4 = (id)qword_1ED1CE7B0;
  sub_1A5F64454();
  sub_1A5F63F80();

  v6.receiver = v1;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t type metadata accessor for UploadEndpoint()
{
  return objc_opt_self();
}

uint64_t sub_1A5ED3524(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v2 + 72) = a2;
  v3 = swift_unknownObjectWeakAssign();
  result = MEMORY[0x1A85B8E10](v3);
  if (result)
  {
    v5 = result;
    type metadata accessor for AccessTracker();
    v6 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    *(_QWORD *)(v6 + 24) = 0;
    *(_QWORD *)(v6 + 32) = 0;
    v7 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for SessionObserver();
    v8 = (_QWORD *)swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    v8[3] = v6;
    v8[4] = sub_1A5ED1758;
    v8[5] = v7;
    v9 = *(_QWORD *)(v5 + 48);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v5;
    *(_QWORD *)(v10 + 24) = v8;
    swift_unknownObjectRetain();
    swift_retain();
    sub_1A5EEC784(v9, (uint64_t)sub_1A5F3ADA8, v10);
    swift_unknownObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t Tracker.chain(name:identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  char v20;
  _QWORD v23[5];
  uint64_t v24;

  v5 = (_QWORD *)v4;
  v8 = *(void **)(v4 + 88);
  v20 = *(_BYTE *)(v4 + 176);
  v9 = *(_QWORD *)(v4 + 96);
  v10 = *(_QWORD *)(v4 + 240);
  v11 = *(id *)(v4 + 80);
  v12 = v8;
  swift_retain();
  os_unfair_lock_lock_with_options();
  v13 = *(_QWORD *)(v4 + 160);
  swift_beginAccess();
  v14 = v5[19];
  v23[0] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A5ED37EC(v14);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
  v24 = v13;
  v15 = v5[23];
  v16 = v5[24];
  sub_1A5ECE02C((uint64_t)(v5 + 25), (uint64_t)v23);
  type metadata accessor for Tracker();
  v17 = swift_allocObject();
  ObjectType = swift_getObjectType();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_1A5F38D94(a1, a2, v11, v12, v20, v9, (uint64_t)v5, &v24, a3, a4, 0, 0, v15, (uint64_t)v23, v17, ObjectType, v16);
}

uint64_t type metadata accessor for Tracker()
{
  return objc_opt_self();
}

uint64_t sub_1A5ED37EC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1A5ED3948(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

_QWORD *sub_1A5ED3948(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1A5EDCBFC(0, &qword_1ED1CB710, (uint64_t)&type metadata for Action.Entry, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A5ED3A7C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5ED3A7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

_QWORD *Tracker.onSessionChange(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for AccessTracker();
  v5 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  *(_QWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 32) = 0;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  type metadata accessor for SessionObserver();
  v7 = (_QWORD *)swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v7[3] = v5;
  v7[4] = sub_1A5ED1670;
  v7[5] = v6;
  v8 = MEMORY[0x1A85B8E10](v2 + 64);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)(v8 + 48);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v9;
    *(_QWORD *)(v11 + 24) = v7;
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    sub_1A5EEC784(v10, (uint64_t)sub_1A5EF3E60, v11);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    swift_retain();
  }
  return v7;
}

uint64_t type metadata accessor for UnfairLock()
{
  return objc_opt_self();
}

uint64_t sub_1A5ED3CC0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  result = MEMORY[0x1A85B8E10](v0 + 64);
  if (result)
  {
    v2 = result;
    type metadata accessor for AccessTracker();
    v3 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    *(_QWORD *)(v3 + 24) = 0;
    *(_QWORD *)(v3 + 32) = 0;
    v4 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for SessionObserver();
    v5 = (_QWORD *)swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    v5[3] = v3;
    v5[4] = sub_1A5ED1758;
    v5[5] = v4;
    v6 = *(_QWORD *)(v2 + 48);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v2;
    *(_QWORD *)(v7 + 24) = v5;
    swift_unknownObjectRetain();
    swift_retain();
    sub_1A5EEC784(v6, (uint64_t)sub_1A5F3ADA8, v7);
    swift_unknownObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for SessionObserver()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SummaryEventManager()
{
  uint64_t result;

  result = qword_1ED1CD2E8;
  if (!qword_1ED1CD2E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5ED3E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  int v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char **p_type;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  __int128 v49;
  __int128 v50;
  _BYTE v51[24];
  uint64_t v52;

  v3 = v2;
  sub_1A5ED4EF0();
  v7 = MEMORY[0x1E0C80A78](v6);
  v47 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v44 - v9;
  v11 = sub_1A5F63F08();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v44 = (char *)&v44 - v16;
  v17 = type metadata accessor for SummaryEventDatabaseManager.StorageOptions(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v48(v3 + OBJC_IVAR____TtC12AppAnalytics19SummaryEventManager_firstRecordedDate, 1, 1, v11);
  v20 = OBJC_IVAR____TtC12AppAnalytics19SummaryEventManager_lock;
  sub_1A5ED49F8();
  v21 = swift_allocObject();
  *(_DWORD *)(v21 + 16) = 0;
  *(_QWORD *)(v3 + v20) = v21;
  v45 = a2;
  sub_1A5ED7E14(a2, (uint64_t)v19, type metadata accessor for SummaryEventDatabaseManager.StorageOptions);
  type metadata accessor for SummaryEventDatabaseManager(0);
  swift_allocObject();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC12AppAnalytics19SummaryEventManager_databaseManager) = sub_1A5ED4710((uint64_t)v19);
  v22 = *(_BYTE *)(a1 + 8);
  v23 = v3 + OBJC_IVAR____TtC12AppAnalytics19SummaryEventManager_flushCadence;
  *(_QWORD *)v23 = *(_QWORD *)a1;
  *(_BYTE *)(v23 + 8) = v22;
  v46 = a1;
  sub_1A5ED7E14(a1, v3 + OBJC_IVAR____TtC12AppAnalytics19SummaryEventManager_configuration, type metadata accessor for SummaryEventConfiguration);
  v24 = (void *)objc_opt_self();
  v25 = objc_msgSend(v24, sel_standardUserDefaults);
  v26 = (void *)sub_1A5F6410C();
  v27 = objc_msgSend(v25, sel_objectForKey_, v26);

  if (v27)
  {
    sub_1A5F645C8();
    swift_unknownObjectRelease();
  }
  else
  {
    v49 = 0u;
    v50 = 0u;
  }
  sub_1A5EDB014((uint64_t)&v49, (uint64_t)v51);
  if (v52)
  {
    v28 = swift_dynamicCast();
    v48((uint64_t)v10, v28 ^ 1u, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      v29 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v30 = v44;
      v29(v44, v10, v11);
      v29((char *)(v3 + OBJC_IVAR____TtC12AppAnalytics19SummaryEventManager_lastSubmittedDate), v30, v11);
      p_type = (char **)(&stru_1E4FDBFF0 + 16);
      goto LABEL_9;
    }
  }
  else
  {
    sub_1A5ED4D44((uint64_t)v51, (uint64_t (*)(_QWORD))sub_1A5ED4438);
    v48((uint64_t)v10, 1, 1, v11);
  }
  sub_1A5ED4D44((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1A5ED4EF0);
  sub_1A5F63EF0();
  v32 = v3 + OBJC_IVAR____TtC12AppAnalytics19SummaryEventManager_lastSubmittedDate;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v3 + OBJC_IVAR____TtC12AppAnalytics19SummaryEventManager_lastSubmittedDate, v15, v11);
  p_type = &stru_1E4FDBFF0.type;
  v33 = objc_msgSend(v24, sel_standardUserDefaults);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v32, v11);
  v34 = (void *)sub_1A5F63EA8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  v35 = (void *)sub_1A5F6410C();
  objc_msgSend(v33, sel_setObject_forKey_, v34, v35);

LABEL_9:
  v36 = objc_msgSend(v24, p_type[386]);
  v37 = (void *)sub_1A5F6410C();
  v38 = objc_msgSend(v36, sel_objectForKey_, v37);

  if (v38)
  {
    sub_1A5F645C8();
    swift_unknownObjectRelease();
    sub_1A5ED4D44(v45, type metadata accessor for SummaryEventDatabaseManager.StorageOptions);
    sub_1A5ED4D44(v46, type metadata accessor for SummaryEventConfiguration);
  }
  else
  {
    sub_1A5ED4D44(v45, type metadata accessor for SummaryEventDatabaseManager.StorageOptions);
    sub_1A5ED4D44(v46, type metadata accessor for SummaryEventConfiguration);
    v49 = 0u;
    v50 = 0u;
  }
  v39 = (uint64_t)v47;
  sub_1A5EDB014((uint64_t)&v49, (uint64_t)v51);
  if (v52)
  {
    v40 = swift_dynamicCast() ^ 1;
    v41 = v39;
  }
  else
  {
    sub_1A5ED4D44((uint64_t)v51, (uint64_t (*)(_QWORD))sub_1A5ED4438);
    v41 = v39;
    v40 = 1;
  }
  v48(v41, v40, 1, v11);
  v42 = v3 + OBJC_IVAR____TtC12AppAnalytics19SummaryEventManager_firstRecordedDate;
  swift_beginAccess();
  sub_1A5ED46A0(v39, v42);
  swift_endAccess();
  return v3;
}

uint64_t sub_1A5ED43E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1A5ECD49C(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t type metadata accessor for SummaryEventDatabaseManager.StorageOptions(uint64_t a1)
{
  return sub_1A5EBC540(a1, (uint64_t *)&unk_1ED1CD078);
}

void sub_1A5ED4438()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CF848)
  {
    v0 = sub_1A5F64568();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CF848);
  }
}

uint64_t sub_1A5ED4490(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  sub_1A5ED462C();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1A5F63DD0();
    v5 = *(_QWORD *)(v4 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  return result;
}

char *sub_1A5ED451C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1A5ED462C();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v9 = sub_1A5F63DD0();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      v11 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

void sub_1A5ED462C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED1CD330)
  {
    type metadata accessor for SummaryEventConfiguration.StorageURLOptions(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED1CD330);
  }
}

uint64_t getEnumTagSinglePayload for SummaryEventConfiguration.StorageURLOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5ED46A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SummaryEventDatabaseManager(uint64_t a1)
{
  return sub_1A5EBC540(a1, (uint64_t *)&unk_1ED1CD390);
}

_QWORD *sub_1A5ED4710(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v3 = *v1;
  v26 = a1;
  v27 = v3;
  v4 = type metadata accessor for SummaryEventDatabaseManager.StorageLocation(0);
  MEMORY[0x1E0C80A78](v4);
  v23 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A5F6449C();
  v24 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A5F64490();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v9);
  v11 = sub_1A5F64028();
  MEMORY[0x1E0C80A78](v11);
  v12 = (char *)v1 + OBJC_IVAR____TtC12AppAnalytics27SummaryEventDatabaseManager_lastFlush;
  v13 = sub_1A5F63F08();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = OBJC_IVAR____TtC12AppAnalytics27SummaryEventDatabaseManager_lock;
  sub_1A5ED49F8();
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 16) = 0;
  *(_QWORD *)((char *)v1 + v14) = v15;
  v22 = OBJC_IVAR____TtC12AppAnalytics27SummaryEventDatabaseManager_diskIOQueue;
  sub_1A5ED4A58();
  sub_1A5F64004();
  v28 = MEMORY[0x1E0DEE9D8];
  sub_1A5ECC4D8((unint64_t *)&qword_1ED1CF820, v10, MEMORY[0x1E0DEF828]);
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CF810, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v16 = v10;
  v17 = (uint64_t)v23;
  sub_1A5ED26BC((unint64_t *)&qword_1ED1CF818, (unint64_t *)&qword_1ED1CF810, v16);
  v18 = v26;
  sub_1A5F645E0();
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v8, *MEMORY[0x1E0DEF8D0], v25);
  *(_QWORD *)((char *)v1 + v22) = sub_1A5F644D8();
  v19 = (unint64_t)sub_1A5F48500(v17, v18);
  sub_1A5ED7E14(v17, (uint64_t)v2 + OBJC_IVAR____TtC12AppAnalytics27SummaryEventDatabaseManager_storageLocation, type metadata accessor for SummaryEventDatabaseManager.StorageLocation);
  if (!v19)
    v19 = sub_1A5ED4A94(MEMORY[0x1E0DEE9D8]);
  sub_1A5ED4D44(v18, type metadata accessor for SummaryEventDatabaseManager.StorageOptions);
  sub_1A5ED4D44(v17, type metadata accessor for SummaryEventDatabaseManager.StorageLocation);
  v2[2] = v19;
  return v2;
}

void sub_1A5ED49F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CD3A0)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1A5F64664();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CD3A0);
  }
}

unint64_t sub_1A5ED4A58()
{
  unint64_t result;

  result = qword_1ED1CF828;
  if (!qword_1ED1CF828)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1CF828);
  }
  return result;
}

unint64_t sub_1A5ED4A94(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1A5EF1B3C(0, &qword_1EE80CB70, (uint64_t)&type metadata for SummaryEventDatabaseEntity, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v2 = (_QWORD *)sub_1A5F64748();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 72);
  while (1)
  {
    v5 = *(v4 - 5);
    v6 = *(v4 - 4);
    v8 = *(v4 - 3);
    v7 = *(v4 - 2);
    v9 = *(v4 - 1);
    v10 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1A5EF11E8(v5, v6);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v2[6] + 16 * result);
    *v13 = v5;
    v13[1] = v6;
    v14 = (_QWORD *)(v2[7] + 32 * result);
    *v14 = v8;
    v14[1] = v7;
    v14[2] = v9;
    v14[3] = v10;
    v15 = v2[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v4 += 6;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t ContentType.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x7274656D656C6574;
  switch(a1)
  {
    case 0:
      result = 0x6E65764572657375;
      break;
    case 1:
      return result;
    case 2:
      result = 0x656D69746C616572;
      break;
    case 3:
      result = 0xD000000000000013;
      break;
    case 4:
      result = 0x6B63616264656566;
      break;
    case 5:
      result = 0xD000000000000019;
      break;
    case 6:
      result = 0x76457374726F7073;
      break;
    case 7:
      result = 0x746C616548707061;
      break;
    case 8:
      result = 0xD000000000000012;
      break;
    default:
      result = sub_1A5F648A4();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1A5ED4D44(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for SummaryEventConfiguration.StorageURLOptions(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1A5F63DD0();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for SummaryEventConfiguration.StorageURLOptions(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A5F63DD0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

uint64_t sub_1A5ED4E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for EventMirrorStore()
{
  return objc_opt_self();
}

void sub_1A5ED4EF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CFC10)
  {
    sub_1A5F63F08();
    v0 = sub_1A5F64568();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CFC10);
  }
}

uint64_t type metadata accessor for ProcessorManager()
{
  return objc_opt_self();
}

void sub_1A5ED4F64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED1CEB58)
  {
    v2 = type metadata accessor for Batch();
    v4 = type metadata accessor for UploadService(a1, v2, (uint64_t)&protocol witness table for Batch, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED1CEB58);
  }
}

uint64_t type metadata accessor for UploadManager()
{
  return objc_opt_self();
}

_QWORD *sub_1A5ED4FE0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _QWORD *a7)
{
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  _DWORD *v28;
  __int128 v30[2];
  _QWORD v31[5];
  _QWORD v32[5];

  v32[3] = type metadata accessor for DocumentDirectoryUploadDropboxPathProvider(0);
  v32[4] = &off_1E4FD57A8;
  v32[0] = a3;
  v31[3] = type metadata accessor for UploadDropboxFileManager();
  v31[4] = &off_1E4FD3EE8;
  v31[0] = a4;
  a7[5] = MEMORY[0x1E0DEE9E0];
  v14 = (char *)a7 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_currentSession;
  v15 = type metadata accessor for Session();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
  type metadata accessor for UnfairLock();
  v17 = swift_allocObject();
  v18 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v17 + 16) = v18;
  *v18 = 0;
  *(_QWORD *)((char *)a7 + v16) = v17;
  *(_DWORD *)(v17 + 24) = 0x10000;
  a7[2] = a1;
  a7[3] = a2;
  sub_1A5ECE02C((uint64_t)v32, (uint64_t)a7 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_pathProvider);
  sub_1A5ECE02C((uint64_t)v31, (uint64_t)a7 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  *(_QWORD *)((char *)a7 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_contentType) = a5;
  *(_QWORD *)((char *)a7 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_transparencyLogging) = a6;
  sub_1A5ECE02C((uint64_t)v32, (uint64_t)v30);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a2;
  sub_1A5EC1D18(v30, v19 + 24);
  sub_1A5ECD49C(0, &qword_1ED1CF508, type metadata accessor for UploadDropbox.Debugging, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Lazy);
  v20 = (_QWORD *)swift_allocObject();
  v21 = (char *)v20 + *(_QWORD *)(*v20 + 96);
  v22 = type metadata accessor for UploadDropbox.Debugging(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v23 = *(_QWORD *)(*v20 + 104);
  v24 = swift_allocObject();
  v25 = a2;
  v26 = a1;
  v27 = a6;
  v28 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v24 + 16) = v28;
  *v28 = 0;
  *(_DWORD *)(v24 + 24) = 0x10000;
  *(_QWORD *)((char *)v20 + v23) = v24;
  v20[2] = sub_1A5EE4A68;
  v20[3] = v19;
  *(_QWORD *)((char *)v20 + *(_QWORD *)(*v20 + 112)) = 1;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  a7[4] = v20;
  return a7;
}

uint64_t sub_1A5ED5240()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for DocumentDirectoryUploadDropboxPathProvider(uint64_t a1)
{
  return sub_1A5EBC540(a1, (uint64_t *)&unk_1ED1CF348);
}

uint64_t sub_1A5ED5260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (**v19)@<X0>(uint64_t@<X8>);
  uint64_t (**v20)@<X0>(uint64_t@<X8>);
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];

  v10 = sub_1A5F63DD0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[3] = type metadata accessor for UploadDropboxFileManager();
  v25[4] = &off_1E4FD3EE8;
  v25[0] = a4;
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v14(a5 + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider____lazy_storage___baseURL, 1, 1, v10);
  v14(a5 + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider____lazy_storage___debugBaseURL, 1, 1, v10);
  v15 = (uint64_t *)(a5 + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider_environmentName);
  *v15 = a2;
  v15[1] = a3;
  sub_1A5ECE02C((uint64_t)v25, a5 + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider_fileManager);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  type metadata accessor for BaseDocumentDirectoryUploadDropboxPathProvider(0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v16 = sub_1A5ED54D0((uint64_t)v13, a2, a3);
  sub_1A5ECE02C((uint64_t)v25, (uint64_t)&v22);
  v17 = type metadata accessor for StaticUploadDropboxPathProvider(0);
  v18 = swift_allocObject();
  v14(v18 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider____lazy_storage___baseURL, 1, 1, v10);
  v14(v18 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider____lazy_storage___debugBaseURL, 1, 1, v10);
  v19 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v18
                                                   + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_baseURLProvider);
  *v19 = sub_1A5EDD4AC;
  v19[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v16;
  v20 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v18
                                                   + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_debugURLProvider);
  *v20 = sub_1A5EF8468;
  v20[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v16;
  sub_1A5EC1D18(&v22, v18 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_fileManager);
  v23 = v17;
  v24 = &off_1E4FD5778;
  *(_QWORD *)&v22 = v18;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  sub_1A5EC1D18(&v22, a5 + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider_staticPathProvider);
  return a5;
}

uint64_t type metadata accessor for UploadDropboxFileManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for BaseDocumentDirectoryUploadDropboxPathProvider(uint64_t a1)
{
  return sub_1A5EBC540(a1, (uint64_t *)&unk_1ED1CF448);
}

uint64_t sub_1A5ED54D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v18 = a3;
  v19 = a2;
  v6 = sub_1A5F63C08();
  v7 = *(_QWORD *)(v6 - 8);
  v17[0] = v6;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1A5F63DD0();
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = 0;
  v27 = 0xE000000000000000;
  sub_1A5F64634();
  swift_bridgeObjectRelease();
  v26 = 0xD000000000000018;
  v27 = 0x80000001A5F72D40;
  v24 = a2;
  v25 = a3;
  sub_1A5F63BFC();
  v17[1] = sub_1A5ED57CC();
  sub_1A5F645B0();
  v12 = *(void (**)(char *, uint64_t))(v7 + 8);
  v12(v9, v6);
  sub_1A5F64178();
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  sub_1A5F63D7C();
  swift_bridgeObjectRelease();
  v13 = v22;
  v14 = v20;
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v20 + 32);
  v21(v23 + OBJC_IVAR____TtC12AppAnalytics46BaseDocumentDirectoryUploadDropboxPathProvider_baseURL, v11, v22);
  v26 = 0;
  v27 = 0xE000000000000000;
  sub_1A5F64634();
  sub_1A5F641B4();
  v24 = v19;
  v25 = v18;
  sub_1A5F63BFC();
  sub_1A5F645B0();
  v12(v9, v17[0]);
  sub_1A5F64178();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  sub_1A5F63D7C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  v15 = v23;
  v21(v23 + OBJC_IVAR____TtC12AppAnalytics46BaseDocumentDirectoryUploadDropboxPathProvider_debugBaseURL, v11, v13);
  return v15;
}

unint64_t sub_1A5ED57CC()
{
  unint64_t result;

  result = qword_1ED1CF800;
  if (!qword_1ED1CF800)
  {
    result = MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED1CF800);
  }
  return result;
}

uint64_t type metadata accessor for StaticUploadDropboxPathProvider(uint64_t a1)
{
  return sub_1A5EBC540(a1, (uint64_t *)&unk_1ED1CF220);
}

uint64_t sub_1A5ED5824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UploadDropbox.Debugging(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5ED5868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t result;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  unsigned __int8 v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  id v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void *v65;
  id v66;
  unint64_t v67;
  uint64_t v68;

  v63 = a6;
  v64 = a8;
  v61 = a4;
  v62 = (char *)a7;
  v60 = a3;
  v68 = *MEMORY[0x1E0C80C00];
  sub_1A5ECD49C(0, &qword_1ED1CE578, (uint64_t (*)(uint64_t))type metadata accessor for Batch, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v60 - v9);
  v11 = sub_1A5F63DD0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v60 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v60 - v19;
  v21 = type metadata accessor for UploadDropbox.Debugging(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5ED5E80((uint64_t)v23);
  sub_1A5EF3B58();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24);
  if ((_DWORD)result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v23, v11);
    sub_1A5F63D7C();
    sub_1A5F63D88();
    v26 = *(void (**)(char *, uint64_t))(v12 + 8);
    v26(v14, v11);
    sub_1A5EE4B5C((uint64_t)v62, v64, v10);
    v27 = type metadata accessor for Batch();
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v10, 1, v27) == 1)
    {
      sub_1A5ED43E0((uint64_t)v10, &qword_1ED1CE578, (uint64_t (*)(uint64_t))type metadata accessor for Batch);
LABEL_15:
      v26(v17, v11);
      return ((uint64_t (*)(char *, uint64_t))v26)(v20, v11);
    }
    v63 = v20;
    v64 = v11;
    v28 = Batch.toJSONObject()();
    v29 = (uint64_t)v10;
    v62 = v17;
    v30 = (void *)objc_opt_self();
    v31 = MEMORY[0x1E0DEA968];
    v32 = (void *)sub_1A5F640A0();
    v33 = objc_msgSend(v30, sel_isValidJSONObject_, v32, v60, v61);

    if ((v33 & 1) != 0)
    {
      v34 = (void *)sub_1A5F640A0();
      swift_bridgeObjectRelease();
      v66 = 0;
      v35 = objc_msgSend(v30, sel_dataWithJSONObject_options_error_, v34, 0, &v66);

      v36 = v66;
      if (v35)
      {
        v37 = sub_1A5F63E3C();
        v39 = v38;

        sub_1A5ED4D44(v29, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
        v17 = v62;
        sub_1A5F63E48();
        sub_1A5EF0908(v37, v39);
LABEL_14:
        v20 = v63;
        v11 = v64;
        goto LABEL_15;
      }
      v49 = v36;
      v45 = (void *)sub_1A5F63CE0();

      swift_willThrow();
      v47 = (uint64_t)v62;
      v48 = v29;
    }
    else
    {
      if (qword_1ED1CFC08 != -1)
        swift_once();
      v40 = (id)qword_1ED1CE7B0;
      sub_1A5F64448();
      sub_1A5EDD448();
      v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_1A5F679D0;
      v42 = sub_1A5F640C4();
      v44 = v43;
      *(_QWORD *)(v41 + 56) = v31;
      *(_QWORD *)(v41 + 64) = sub_1A5EE19C8();
      *(_QWORD *)(v41 + 32) = v42;
      *(_QWORD *)(v41 + 40) = v44;
      sub_1A5F63F80();

      swift_bridgeObjectRelease();
      sub_1A5F275F0();
      v45 = (void *)swift_allocError();
      *(_QWORD *)v46 = v28;
      *(_BYTE *)(v46 + 8) = 0;
      swift_willThrow();
      v47 = (uint64_t)v62;
      v48 = v29;
    }
    sub_1A5ED4D44(v48, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
    v50 = MEMORY[0x1E0DEA968];
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v51 = (id)qword_1ED1CE7B0;
    sub_1A5F6443C();
    sub_1A5EDD448();
    v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_1A5F66C40;
    v53 = sub_1A5F63DAC();
    v54 = (char *)v47;
    v56 = v55;
    *(_QWORD *)(v52 + 56) = v50;
    v57 = sub_1A5EE19C8();
    *(_QWORD *)(v52 + 64) = v57;
    *(_QWORD *)(v52 + 32) = v53;
    *(_QWORD *)(v52 + 40) = v56;
    v17 = v54;
    v66 = 0;
    v67 = 0xE000000000000000;
    v65 = v45;
    sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
    sub_1A5F646F4();
    v58 = v66;
    v59 = v67;
    *(_QWORD *)(v52 + 96) = v50;
    *(_QWORD *)(v52 + 104) = v57;
    *(_QWORD *)(v52 + 72) = v58;
    *(_QWORD *)(v52 + 80) = v59;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  return result;
}

void sub_1A5ED5E80(uint64_t a1@<X8>)
{
  void (**v1)(_QWORD);
  void (**v2)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v2 = v1;
  sub_1A5EF17C8(0, &qword_1ED1CD460, (void (*)(uint64_t))type metadata accessor for UploadDropbox.Debugging);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v15[-v8];
  v10 = *((_QWORD *)*v2 + 13);
  os_unfair_lock_lock_with_options();
  v11 = (uint64_t)v2 + *((_QWORD *)*v2 + 12);
  swift_beginAccess();
  sub_1A5F194C0(v11, (uint64_t)v9, (uint64_t)&qword_1ED1CD460, (uint64_t)type metadata accessor for UploadDropbox.Debugging, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1A5EF17C8);
  v12 = type metadata accessor for UploadDropbox.Debugging(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) == 1)
  {
    v14 = sub_1A5F1950C((uint64_t)v9, (uint64_t)&qword_1ED1CD460, (uint64_t)type metadata accessor for UploadDropbox.Debugging, (uint64_t (*)(_QWORD))sub_1A5EF17C8);
    v2[2](v14);
    sub_1A5EE4974(a1, (uint64_t)v6);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
    swift_beginAccess();
    sub_1A5F19548((uint64_t)v6, v11, (uint64_t)&qword_1ED1CD460, (uint64_t)type metadata accessor for UploadDropbox.Debugging, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1A5EF17C8);
    swift_endAccess();
  }
  else
  {
    sub_1A5ED5824((uint64_t)v9, a1);
  }
  os_unfair_lock_unlock((*(os_unfair_lock_t **)((char *)v2 + v10))[2]);
}

uint64_t type metadata accessor for UploadDropbox.Debugging(uint64_t a1)
{
  return sub_1A5EBC540(a1, qword_1ED1CE898);
}

uint64_t sub_1A5ED6074()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void UploadBatchEventProcessor.process<A>(processEvent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  int *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char v25;
  id v26;
  uint64_t v27;
  __int128 v28;
  _QWORD v29[2];
  uint64_t v30[3];

  v4 = v3;
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFBE8, (uint64_t (*)(uint64_t))type metadata accessor for Session, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v29 - v9;
  v11 = type metadata accessor for Session();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (_QWORD *)((char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = v4 + OBJC_IVAR____TtC12AppAnalytics25UploadBatchEventProcessor_currentSession;
  swift_beginAccess();
  sub_1A5ED85D0(v15, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1A5F54918((uint64_t)v10);
    sub_1A5F5496C();
    v16 = (void *)swift_allocError();
    swift_willThrow();
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v26 = (id)qword_1ED1CE7B0;
    sub_1A5F64448();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1A5F679D0;
    v30[0] = 0;
    v30[1] = 0xE000000000000000;
    v29[1] = v16;
    sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
    sub_1A5F646F4();
    v28 = *(_OWORD *)v30;
    *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v27 + 64) = sub_1A5EE19C8();
    *(_OWORD *)(v27 + 32) = v28;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A5ECD6B0((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Session);
    v18 = (int *)type metadata accessor for ProcessEvent(0, a2, a3, v17);
    v19 = ProcessEventType.payload()((uint64_t)v18, (uint64_t)&protocol witness table for ProcessEvent<A>);
    v20 = v18[13];
    v21 = (uint64_t *)(a1 + v18[12]);
    v22 = *v21;
    v23 = v21[1];
    v24 = *(void (**)(char *, uint64_t))(a1 + v20);
    v25 = *(_BYTE *)(a1 + v20 + 8);
    *(_OWORD *)v30 = *(_OWORD *)(a1 + v18[15]);
    sub_1A5EDF234(v19, v14, v22, v23, v24, v25, v30);
    sub_1A5ED862C((uint64_t)v14);
    swift_bridgeObjectRelease();
  }
}

unint64_t ProcessEventType.payload()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t (*v8)(uint64_t, uint64_t);
  void *v9;
  uint64_t v10;
  unint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  double v22;
  double v23;
  double v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = sub_1A5F63F08();
  v30 = *(_QWORD *)(v5 - 8);
  v31 = v5;
  MEMORY[0x1E0C80A78](v5);
  v28 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5ED6730(0, &qword_1ED1CE1F0, (unint64_t *)&qword_1ED1CD928);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A5F66C50;
  *(_QWORD *)(inited + 32) = 1635017060;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 32);
  v29 = a1;
  v9 = (void *)v8(a1, a2);
  v10 = JSON.payload()();
  v32 = v2;
  if (v2)
  {

    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1A5EE030C(0, (unint64_t *)&qword_1ED1CD928);
    return swift_arrayDestroy();
  }
  v12 = v10;

  sub_1A5EF1B90(0, (unint64_t *)&qword_1ED1CE4E8);
  *(_QWORD *)(inited + 48) = v12;
  *(_QWORD *)(inited + 72) = v13;
  *(_QWORD *)(inited + 80) = 0x617461646174656DLL;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  sub_1A5ED6730(0, &qword_1ED1CD970, &qword_1ED1CD920);
  v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = xmmword_1A5F66C40;
  *(_QWORD *)(v14 + 32) = 1701667182;
  *(_QWORD *)(v14 + 40) = 0xE400000000000000;
  v15 = v29;
  *(_QWORD *)(v14 + 48) = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(v29, a2);
  *(_QWORD *)(v14 + 56) = v16;
  *(_QWORD *)(v14 + 64) = 0x6E6F6973726576;
  *(_QWORD *)(v14 + 72) = 0xE700000000000000;
  *(_QWORD *)(v14 + 80) = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(v15, a2);
  *(_QWORD *)(v14 + 88) = v17;
  v18 = sub_1A5ED6984(v14);
  sub_1A5EF1B90(0, (unint64_t *)&qword_1ED1CE190);
  *(_QWORD *)(inited + 96) = v18;
  *(_QWORD *)(inited + 120) = v19;
  *(_QWORD *)(inited + 128) = 0x4D65746176697270;
  *(_QWORD *)(inited + 136) = 0xEF61746164617465;
  sub_1A5ED6730(0, qword_1ED1CC830, &qword_1ED1CC820);
  v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_1A5F679D0;
  *(_QWORD *)(v20 + 32) = 0xD000000000000019;
  *(_QWORD *)(v20 + 40) = 0x80000001A5F721C0;
  v21 = v28;
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(v15, a2);
  sub_1A5F63ED8();
  v23 = v22;
  result = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v21, v31);
  v24 = v23 * 1000.0;
  if ((~COERCE__INT64(v23 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v24 < 9.22337204e18)
  {
    *(_QWORD *)(v20 + 48) = (uint64_t)v24;
    v25 = sub_1A5ED6860(v20);
    sub_1A5EF1B90(0, &qword_1ED1CC818);
    *(_QWORD *)(inited + 168) = v26;
    *(_QWORD *)(inited + 144) = v25;
    return sub_1A5ED7CC8(inited);
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_1A5ED6730(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1A5EE030C(255, a3);
    v4 = sub_1A5F64850();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t JSON.payload()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  _QWORD v4[6];

  v1 = sub_1A5EDC758();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_1A5EDCB9C(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)v4);
    if (v4[3])
    {
      sub_1A5EF1B3C(0, (unint64_t *)&qword_1ED1CE4E8, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
      if ((swift_dynamicCast() & 1) != 0)
        return v4[5];
    }
    else
    {
      sub_1A5EDCB44((uint64_t)v4);
    }
  }
  sub_1A5F065C8();
  swift_allocError();
  *v3 = 0;
  return swift_willThrow();
}

unint64_t sub_1A5ED6860(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1A5EF1B3C(0, &qword_1ED1CC828, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v2 = (_QWORD *)sub_1A5F64748();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1A5EF11E8(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A5ED6984(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1A5EF1B3C(0, &qword_1ED1CD938, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v2 = (_QWORD *)sub_1A5F64748();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1A5EF11E8(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A5ED6AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, uint64_t), int a7, uint64_t a8, unsigned __int8 a9, uint64_t *a10)
{
  uint64_t v10;
  double v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v55;
  void *v56;
  id v57;
  int v58;
  unint64_t v59;
  char *v60;
  unint64_t v61;
  void (*v62)(char *, uint64_t);
  unint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t inited;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void *v78;
  id v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  void (*v85)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, uint64_t);
  __int128 v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  id v124[17];
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  char v132;
  uint64_t v133;

  v115 = a8;
  v116 = a4;
  LODWORD(v120) = a7;
  v118 = a1;
  v119 = a6;
  v117 = a5;
  v133 = *MEMORY[0x1E0C80C00];
  sub_1A5ECD49C(0, &qword_1ED1CE578, (uint64_t (*)(uint64_t))type metadata accessor for Batch, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v109 = (uint64_t *)((char *)&v102 - v15);
  v16 = type metadata accessor for Batch();
  v107 = *(_QWORD *)(v16 - 8);
  v108 = v16;
  MEMORY[0x1E0C80A78](v16);
  v106 = (uint64_t)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1A5F6404C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v110 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v102 - v22;
  v24 = *a10;
  v113 = a10[1];
  v114 = v24;
  v121 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
  os_unfair_lock_lock_with_options();
  sub_1A5F64040();
  v111 = a2;
  v112 = a3;
  v25 = sub_1A5ED89B8(a2, a3);
  v123 = v10;
  v26 = (_QWORD *)(v10 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  v27 = *(_QWORD *)(v10 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24);
  v28 = *(_QWORD *)(v10 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
  v29 = (uint64_t)__swift_project_boxed_opaque_existential_1((_QWORD *)(v10 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), v27);
  v30 = v122;
  (*(void (**)(id *__return_ptr, uint64_t, uint64_t, uint64_t))(v28 + 32))(&v131, v25, v27, v28);
  v31 = v30;
  if (!v30)
  {
    v32 = v120;
    v29 = (uint64_t)v119;
    v103 = v19;
    v104 = v23;
    v122 = v25;
    v105 = v18;
    if (v132 != 1)
    {
      sub_1A5EE5F08();
      swift_allocError();
      *(_QWORD *)v48 = 2;
      *(_QWORD *)(v48 + 8) = 0;
      *(_QWORD *)(v48 + 16) = 0;
      *(_QWORD *)(v48 + 24) = 0;
      *(_BYTE *)(v48 + 32) = 0x80;
      swift_willThrow();
      swift_release();
      (*(void (**)(char *, uint64_t))(v103 + 8))(v104, v105);
      goto LABEL_13;
    }
    if (!v131)
    {
      sub_1A5ECE02C((uint64_t)v26, (uint64_t)&v127);
      v50 = v129;
      v49 = v130;
      __swift_project_boxed_opaque_existential_1(&v127, v129);
      v51 = *(_QWORD *)(v123 + 16);
      if ((v32 & 1) != 0)
        v29 = *(_QWORD *)(v123 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_contentType);
      v125 = v114;
      v126 = v113;
      v52 = v115;
      (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v49 + 56))(v122, v115, v51, v29, v116, v117, &v125, v50, v49);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v127);
      sub_1A5ECE02C((uint64_t)v26, (uint64_t)&v127);
      v71 = v129;
      v72 = v130;
      *(_QWORD *)&v120 = __swift_project_boxed_opaque_existential_1(&v127, v129);
      v73 = *(_QWORD *)(v52 + *(int *)(type metadata accessor for Session() + 32));
      sub_1A5ECD49C(0, &qword_1ED1CE1F0, (uint64_t (*)(uint64_t))sub_1A5ED7E58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A5F66C40;
      *(_QWORD *)(inited + 32) = 1701869940;
      *(_QWORD *)(inited + 40) = 0xE400000000000000;
      v75 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 48) = 0x6E6F6973736573;
      *(_QWORD *)(inited + 56) = 0xE700000000000000;
      *(_QWORD *)(inited + 72) = v75;
      *(_QWORD *)(inited + 80) = 1635017060;
      *(_QWORD *)(inited + 88) = 0xE400000000000000;
      sub_1A5EF08A0();
      *(_QWORD *)(inited + 120) = v76;
      *(_QWORD *)(inited + 96) = v73;
      swift_bridgeObjectRetain();
      sub_1A5ED7CC8(inited);
      v77 = (void *)objc_opt_self();
      v78 = (void *)sub_1A5F640A0();
      swift_bridgeObjectRelease();
      v124[0] = 0;
      v29 = (uint64_t)objc_msgSend(v77, sel_dataWithJSONObject_options_error_, v78, 0, v124);

      v79 = v124[0];
      if (!v29)
      {
        v90 = v79;
        sub_1A5F63CE0();

        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v103 + 8))(v104, v105);
        swift_release();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v127);
        goto LABEL_13;
      }
      v80 = sub_1A5F63E3C();
      v82 = v81;

      v125 = v80;
      v126 = v82;
      if (qword_1ED1CDAF0 != -1)
        swift_once();
      sub_1A5F63E54();
      v83 = v125;
      v84 = v126;
      v85 = *(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v72 + 8);
      v86 = v72;
      v87 = v122;
      v85(v125, v126, v122, v71, v86);
      sub_1A5EF0908(v83, v84);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v127);
      v97 = v26[3];
      v98 = v26[4];
      __swift_project_boxed_opaque_existential_1(v26, v97);
      v127 = 1;
      v128 = 1;
      (*(void (**)(unint64_t, uint64_t *, uint64_t, uint64_t))(v98 + 40))(v87, &v127, v97, v98);
      if (qword_1ED1CFC08 != -1)
        swift_once();
      v99 = (id)qword_1ED1CE7B0;
      sub_1A5F64430();
      sub_1A5EDD448();
      v100 = swift_allocObject();
      *(_OWORD *)(v100 + 16) = xmmword_1A5F679D0;
      *(_QWORD *)(v100 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v100 + 64) = sub_1A5EE19C8();
      v101 = v112;
      *(_QWORD *)(v100 + 32) = v111;
      *(_QWORD *)(v100 + 40) = v101;
      swift_bridgeObjectRetain();
      sub_1A5F63F80();

      swift_bridgeObjectRelease();
    }
    v33 = v118;
    sub_1A5ECE02C((uint64_t)v26, (uint64_t)&v127);
    v34 = v129;
    v35 = v130;
    __swift_project_boxed_opaque_existential_1(&v127, v129);
    sub_1A5ECD49C(0, &qword_1ED1CE1F0, (uint64_t (*)(uint64_t))sub_1A5ED7E58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v36 = swift_initStackObject();
    v120 = xmmword_1A5F66C40;
    *(_OWORD *)(v36 + 16) = xmmword_1A5F66C40;
    *(_QWORD *)(v36 + 32) = 1701869940;
    *(_QWORD *)(v36 + 40) = 0xE400000000000000;
    v37 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v36 + 48) = 0x746E657665;
    *(_QWORD *)(v36 + 56) = 0xE500000000000000;
    *(_QWORD *)(v36 + 72) = v37;
    *(_QWORD *)(v36 + 80) = 1635017060;
    *(_QWORD *)(v36 + 88) = 0xE400000000000000;
    sub_1A5EF08A0();
    *(_QWORD *)(v36 + 120) = v38;
    *(_QWORD *)(v36 + 96) = v33;
    swift_bridgeObjectRetain();
    sub_1A5ED7CC8(v36);
    v39 = (void *)objc_opt_self();
    v40 = (void *)sub_1A5F640A0();
    swift_bridgeObjectRelease();
    v131 = 0;
    v41 = objc_msgSend(v39, sel_dataWithJSONObject_options_error_, v40, 0, &v131);

    v42 = v131;
    if (!v41)
    {
      v55 = v42;
      v56 = (void *)sub_1A5F63CE0();

      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v127);
      v127 = (uint64_t)v56;
      v57 = v56;
      sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
      v58 = swift_dynamicCast();
      v53 = v121;
      v59 = v122;
      v29 = v103;
      if (!v58 || (v125 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v103 + 8))(v104, v105);
        swift_release();

        goto LABEL_14;
      }

      v88 = *(_QWORD *)(v59 + 16);
      v89 = *(_QWORD *)(v59 + 24);
      swift_bridgeObjectRetain();
      v31 = v123;
      sub_1A5F3C638(v88, v89);
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v104, v105);

      v29 = 1;
LABEL_37:
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v31 + v53) + 16));
      return v29;
    }
    v43 = sub_1A5F63E3C();
    v45 = v44;

    v125 = v43;
    v126 = v45;
    if (qword_1ED1CDAF0 != -1)
      swift_once();
    sub_1A5F63E54();
    v46 = v125;
    v47 = v126;
    (*(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v35 + 8))(v125, v126, v122, v34, v35);
    sub_1A5EF0908(v46, v47);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v127);
    v60 = v110;
    sub_1A5F64040();
    v61 = sub_1A5F64034();
    v62 = *(void (**)(char *, uint64_t))(v103 + 8);
    v62(v60, v105);
    v63 = sub_1A5F64034();
    if (v61 < v63)
    {
      __break(1u);
    }
    else
    {
      v119 = v62;
      v11 = (double)(v61 - v63) / 1000000.0;
      v47 = v122;
      v31 = v123;
      if (qword_1ED1CFC08 == -1)
      {
LABEL_21:
        LODWORD(v118) = a9;
        v64 = (id)qword_1ED1CE7B0;
        sub_1A5F64430();
        sub_1A5EDD448();
        v65 = swift_allocObject();
        *(_OWORD *)(v65 + 16) = v120;
        *(_QWORD *)(v65 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v65 + 64) = sub_1A5EE19C8();
        v66 = MEMORY[0x1E0DEB070];
        v68 = v111;
        v67 = v112;
        *(_QWORD *)(v65 + 32) = v111;
        *(_QWORD *)(v65 + 40) = v67;
        v69 = MEMORY[0x1E0DEB100];
        *(_QWORD *)(v65 + 96) = v66;
        *(_QWORD *)(v65 + 104) = v69;
        *(double *)(v65 + 72) = v11;
        swift_bridgeObjectRetain();
        sub_1A5F63F80();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1A5ED5868(v68, v67, 0x2E74736575716572, 0xEC0000006E6F736ALL, v31, (char *)v31, v68, v67);
        swift_release();
        swift_bridgeObjectRelease();
        if (*(_BYTE *)(*(_QWORD *)(v31 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_transparencyLogging)
                      + OBJC_IVAR___AATransparencyLogging_isEnabled) == 1)
        {
          v70 = v109;
          sub_1A5EE4B5C(v68, v67, v109);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v107 + 48))(v70, 1, v108) == 1)
          {
            sub_1A5ED43E0((uint64_t)v70, &qword_1ED1CE578, (uint64_t (*)(uint64_t))type metadata accessor for Batch);
          }
          else
          {
            v91 = (uint64_t)v70;
            v92 = v106;
            sub_1A5ECD6B0(v91, v106, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
            sub_1A5F25F04(v92);
            sub_1A5ED4D44(v92, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
          }
        }
        v93 = v105;
        if ((v118 & 1) != 0
          && ((v94 = *(_QWORD *)(v31 + 24),
               *(_QWORD *)(v47 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_eventCount) >= *(_QWORD *)(v94 + OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch))
           || *(_QWORD *)(v47 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_byteSize) >= *(_QWORD *)(v94 + OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch)))
        {
          v95 = *(_QWORD *)(v47 + 16);
          v96 = *(_QWORD *)(v47 + 24);
          swift_bridgeObjectRetain();
          sub_1A5F3C638(v95, v96);
          swift_bridgeObjectRelease();
          swift_release();
          v119(v104, v93);
          v29 = 1;
        }
        else
        {
          swift_release();
          v119(v104, v93);
          v29 = 0;
        }
        v53 = v121;
        goto LABEL_37;
      }
    }
    swift_once();
    goto LABEL_21;
  }
  (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v18);
  swift_release();
LABEL_13:
  v53 = v121;
LABEL_14:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v123 + v53) + 16));
  return v29;
}

uint64_t type metadata accessor for Batch()
{
  uint64_t result;

  result = qword_1ED1CF8B0;
  if (!qword_1ED1CF8B0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A5ED775C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  id v48[3];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;

  v3 = v2;
  v53 = *MEMORY[0x1E0C80C00];
  v38 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
  os_unfair_lock_lock_with_options();
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v4 + 64);
  v42 = v4 + 64;
  v6 = 1 << *(_BYTE *)(v4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v39 = v1;
  v9 = (_QWORD *)(v1 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  v43 = (unint64_t)(v6 + 63) >> 6;
  v44 = *(_QWORD *)(v1 + 40);
  swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (v8)
        {
          v11 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
          v12 = v11 | (v10 << 6);
        }
        else
        {
          if (__OFADD__(v10++, 1))
          {
            __break(1u);
            goto LABEL_39;
          }
          if (v10 >= v43)
            goto LABEL_35;
          v14 = *(_QWORD *)(v42 + 8 * v10);
          if (!v14)
          {
            v15 = v10 + 1;
            if (v10 + 1 >= v43)
              goto LABEL_35;
            v14 = *(_QWORD *)(v42 + 8 * v15);
            if (!v14)
            {
              v15 = v10 + 2;
              if (v10 + 2 >= v43)
                goto LABEL_35;
              v14 = *(_QWORD *)(v42 + 8 * v15);
              if (!v14)
              {
                v15 = v10 + 3;
                if (v10 + 3 >= v43)
                  goto LABEL_35;
                v14 = *(_QWORD *)(v42 + 8 * v15);
                if (!v14)
                {
                  v15 = v10 + 4;
                  if (v10 + 4 >= v43)
                  {
LABEL_35:
                    swift_release();
                    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v39 + v38) + 16));
                    return;
                  }
                  v14 = *(_QWORD *)(v42 + 8 * v15);
                  if (!v14)
                  {
                    while (1)
                    {
                      v10 = v15 + 1;
                      if (__OFADD__(v15, 1))
                        break;
                      if (v10 >= v43)
                        goto LABEL_35;
                      v14 = *(_QWORD *)(v42 + 8 * v10);
                      ++v15;
                      if (v14)
                        goto LABEL_19;
                    }
LABEL_39:
                    __break(1u);
                  }
                }
              }
            }
            v10 = v15;
          }
LABEL_19:
          v8 = (v14 - 1) & v14;
          v12 = __clz(__rbit64(v14)) + (v10 << 6);
        }
        v16 = *(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v12);
        v17 = v9[3];
        v18 = v9[4];
        __swift_project_boxed_opaque_existential_1(v9, v17);
        v19 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v18 + 32);
        v20 = swift_retain();
        v19(&v51, v20, v17, v18);
        if (v3)
        {
          swift_release();
          swift_release();
          goto LABEL_37;
        }
        if (v52 == 1 && v51)
          break;
        swift_release();
      }
      sub_1A5ECE02C((uint64_t)v9, (uint64_t)v48);
      v21 = v49;
      v41 = v50;
      __swift_project_boxed_opaque_existential_1(v48, v49);
      sub_1A5ECD49C(0, &qword_1ED1CE1F0, (uint64_t (*)(uint64_t))sub_1A5ED7E58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1A5F66C40;
      *(_QWORD *)(inited + 32) = 1701869940;
      *(_QWORD *)(inited + 40) = 0xE400000000000000;
      *(_QWORD *)(inited + 48) = 0x6E6F6973736573;
      *(_QWORD *)(inited + 56) = 0xE700000000000000;
      *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 80) = 1635017060;
      *(_QWORD *)(inited + 88) = 0xE400000000000000;
      sub_1A5EF08A0();
      *(_QWORD *)(inited + 120) = v23;
      *(_QWORD *)(inited + 96) = a1;
      swift_bridgeObjectRetain();
      sub_1A5ED7CC8(inited);
      v24 = (void *)objc_opt_self();
      v25 = (void *)sub_1A5F640A0();
      swift_bridgeObjectRelease();
      v45 = 0;
      v26 = objc_msgSend(v24, sel_dataWithJSONObject_options_error_, v25, 0, &v45);

      v27 = v45;
      if (!v26)
        break;
      v28 = sub_1A5F63E3C();
      v30 = v29;

      v46 = v28;
      v47 = v30;
      if (qword_1ED1CDAF0 != -1)
        swift_once();
      sub_1A5F63E54();
      v32 = v46;
      v31 = v47;
      (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v41 + 8))(v46, v47, v16, v21);
      swift_release();
      sub_1A5EF0908(v32, v31);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
    }
    v33 = v27;
    v34 = (void *)sub_1A5F63CE0();

    swift_willThrow();
    v3 = 0;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
    v48[0] = v34;
    v35 = v34;
    sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
    if (!swift_dynamicCast() || (v46 & 1) != 0)
      break;

    v37 = *(_QWORD *)(v16 + 16);
    v36 = *(_QWORD *)(v16 + 24);
    swift_bridgeObjectRetain();
    sub_1A5F3C638(v37, v36);
    swift_bridgeObjectRelease();
    swift_release();

  }
  swift_release();
  swift_release();

LABEL_37:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v39 + v38) + 16));
}

unint64_t sub_1A5ED7CC8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1A5EF1B3C(0, &qword_1ED1CE560, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v2 = sub_1A5F64748();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A5ED7E14(v6, (uint64_t)&v15, (uint64_t (*)(_QWORD))sub_1A5ED7E58);
    v7 = v15;
    v8 = v16;
    result = sub_1A5EF11E8(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1A5EF1B2C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A5ED7E14(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1A5ED7E58()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED1CD928)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED1CD928);
  }
}

void sub_1A5ED7EC0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A5ED7ED4(a1, a2);
}

void sub_1A5ED7ED4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 v10;

  v5 = OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_lock;
  os_unfair_lock_lock_with_options();
  v6 = (uint64_t *)(a1 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_state);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_state + 9) & 1) == 0)
  {
    v7 = *v6;
    v8 = v6[1] & 1;
    goto LABEL_5;
  }
  sub_1A5ED94E4((uint64_t)&v9);
  if (!v2)
  {
    v7 = v9;
    v8 = v10;
    *v6 = v9;
    *((_WORD *)v6 + 4) = v8;
LABEL_5:
    *(_QWORD *)a2 = v7;
    *(_BYTE *)(a2 + 8) = v8;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(a1 + v5) + 16));
}

uint64_t sub_1A5ED7F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = sub_1A5F63DD0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFBE8, (uint64_t (*)(uint64_t))type metadata accessor for Session, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - v6;
  v8 = type metadata accessor for Session();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_currentSession;
  swift_beginAccess();
  sub_1A5ED85D0(v12, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1A5ED43E0((uint64_t)v7, (unint64_t *)&qword_1ED1CFBE8, (uint64_t (*)(uint64_t))type metadata accessor for Session);
    v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_pathProvider + 24);
    v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_pathProvider + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_pathProvider), v13);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  }
  else
  {
    sub_1A5ECD6B0((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Session);
    v16 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_pathProvider + 24);
    v17 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_pathProvider + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_pathProvider), v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
    swift_bridgeObjectRetain();
    sub_1A5F63D7C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return sub_1A5ED4D44((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Session);
  }
}

uint64_t UploadBatchEventProcessor.didUpdateSession(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  id v18;
  uint64_t v19;
  _BYTE v20[4];

  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFBE8, (uint64_t (*)(uint64_t))type metadata accessor for Session, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v20[-v7];
  v9 = type metadata accessor for Session();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = v1 + OBJC_IVAR____TtC12AppAnalytics25UploadBatchEventProcessor_currentSession;
  swift_beginAccess();
  sub_1A5ED85D0(v13, (uint64_t)v8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1A5F54918((uint64_t)v8);
LABEL_9:
    __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v1 + 16) + 32), *(_QWORD *)(*(_QWORD *)(v1 + 16) + 56));
    sub_1A5ED775C(*(uint64_t *)((char *)a1 + *(int *)(v9 + 32)));
    sub_1A5ED86C4((uint64_t)a1, (uint64_t)v5);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    swift_beginAccess();
    sub_1A5ED8668((uint64_t)v5, v13);
    return swift_endAccess();
  }
  sub_1A5ECD6B0((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Session);
  v15 = *a1;
  v14 = a1[1];
  v16 = *v12 == *a1 && v12[1] == v14;
  if (v16 || (sub_1A5F64880() & 1) != 0)
  {
    sub_1A5ED862C((uint64_t)v12);
    goto LABEL_9;
  }
  if (qword_1ED1CFC08 != -1)
    swift_once();
  v18 = (id)qword_1ED1CE7B0;
  sub_1A5F64448();
  sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1A5F679D0;
  *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v19 + 64) = sub_1A5EE19C8();
  *(_QWORD *)(v19 + 32) = v15;
  *(_QWORD *)(v19 + 40) = v14;
  swift_bridgeObjectRetain();
  sub_1A5F63F80();

  swift_bridgeObjectRelease();
  return sub_1A5ED862C((uint64_t)v12);
}

uint64_t sub_1A5ED85D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFBE8, (uint64_t (*)(uint64_t))type metadata accessor for Session, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5ED862C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Session();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A5ED8668(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFBE8, (uint64_t (*)(uint64_t))type metadata accessor for Session, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5ED86C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Session();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *initializeWithCopy for Session(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2 + 4;
  v9 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 >= 3)
  {
    a1[4] = *v8;
    a1[5] = v9;
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *(_OWORD *)v8;
  }
  v10 = *(int *)(a3 + 28);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1A5F63F08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for Batch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  const void *v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  void *__dst;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v8 = a3[10];
  __dst = (void *)(a1 + v8);
  v9 = (const void *)(a2 + v8);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v10 = sub_1A5F63F08();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v9;
  v14 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = v12;
  swift_bridgeObjectRetain();
  if (v12(v13, 1, v14))
  {
    sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dst, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v14);
  }
  v17 = a3[11];
  v18 = a3[12];
  v19 = (_QWORD *)(a1 + v17);
  v20 = (uint64_t *)(a2 + v17);
  v22 = *v20;
  v21 = v20[1];
  LOBYTE(v20) = *(_BYTE *)(a2 + v18);
  *v19 = v22;
  v19[1] = v21;
  *(_BYTE *)(a1 + v18) = (_BYTE)v20;
  v23 = a3[13];
  v24 = (void *)(a1 + v23);
  v25 = (const void *)(a2 + v23);
  swift_bridgeObjectRetain();
  if (v15(v25, 1, v14))
  {
    sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v24, v25, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_1A5ED89B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v30[2];
  uint64_t v31;

  v3 = v2;
  v6 = sub_1A5F63DD0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v30 - v11;
  v13 = v2 + 40;
  swift_beginAccess();
  v14 = *(_QWORD *)(v2 + 40);
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain();
  v15 = sub_1A5EF11E8(a1, a2);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_endAccess();
    sub_1A5ED7F90();
    type metadata accessor for UploadDropboxFile();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_eventCount) = -1;
    *(_QWORD *)(v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_byteSize) = 0;
    v18 = v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_state;
    *(_QWORD *)v18 = 0;
    *(_WORD *)(v18 + 8) = 256;
    *(_QWORD *)(v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_fileHandle) = 0;
    v30[1] = v13;
    v19 = OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_lock;
    type metadata accessor for UnfairLock();
    v20 = swift_allocObject();
    swift_bridgeObjectRetain();
    v21 = (_DWORD *)swift_slowAlloc();
    *(_QWORD *)(v20 + 16) = v21;
    *v21 = 0;
    *(_DWORD *)(v20 + 24) = 0x10000;
    *(_QWORD *)(v17 + v19) = v20;
    v22 = (_QWORD *)(v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_userAgent);
    *v22 = 0;
    v22[1] = 0;
    v23 = v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_contentType;
    *(_QWORD *)v23 = 0;
    *(_BYTE *)(v23 + 8) = 1;
    v24 = (_QWORD *)(v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_groupName);
    *v24 = 0;
    v24[1] = 0;
    v25 = v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_sessionStartDate;
    v26 = sub_1A5F63F08();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
    v27 = (_QWORD *)(v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_sessionID);
    *v27 = 0;
    v27[1] = 0;
    *(_OWORD *)(v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_timestampConfiguration) = xmmword_1A5F68AE0;
    *(_QWORD *)(v17 + 16) = a1;
    *(_QWORD *)(v17 + 24) = a2;
    swift_bridgeObjectRetain();
    sub_1A5F63D7C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v17 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_url, v9, v6);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v31 = *(_QWORD *)(v3 + 40);
    *(_QWORD *)(v3 + 40) = 0x8000000000000000;
    sub_1A5EDE8A0(v17, a1, a2, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v3 + 40) = v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    return v17;
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1A5ED8CE0@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5ED8D00(a1);
}

uint64_t sub_1A5ED8D00@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5ED8D74(&OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider____lazy_storage___baseURL, &OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_baseURLProvider, a1);
}

uint64_t sub_1A5ED8D20(uint64_t a1)
{
  uint64_t v2;

  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CE6B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A5ED8D74@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[24];

  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CE6B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v17[-v11];
  v13 = v3 + *a1;
  swift_beginAccess();
  sub_1A5EE22F8(v13, (uint64_t)v12);
  v14 = sub_1A5F63DD0();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v15 + 32))(a3, v12, v14);
  sub_1A5ED8D20((uint64_t)v12);
  sub_1A5ED912C(v3, a2, a3);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 16))(v9, a3, v14);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
  swift_beginAccess();
  sub_1A5ED90D0((uint64_t)v9, v13);
  return swift_endAccess();
}

uint64_t sub_1A5ED8F10@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5ED8F30(a1);
}

uint64_t sub_1A5ED8F30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];

  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CE6B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v15[-v7];
  v9 = v1 + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider____lazy_storage___baseURL;
  swift_beginAccess();
  sub_1A5EE22F8(v9, (uint64_t)v8);
  v10 = sub_1A5F63DD0();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_1A5ED8D20((uint64_t)v8);
  v12 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider_staticPathProvider
                  + 24);
  v13 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider_staticPathProvider
                  + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC12AppAnalytics42DocumentDirectoryUploadDropboxPathProvider_staticPathProvider), v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v5, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess();
  sub_1A5ED90D0((uint64_t)v5, v9);
  return swift_endAccess();
}

uint64_t sub_1A5ED90D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CE6B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5ED912C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  (*(void (**)(void))(a1 + *a2))();
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_fileManager + 24);
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_fileManager + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_fileManager), v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 120))(a3, v5, v6);
  if (qword_1ED1CFC08 != -1)
    swift_once();
  v7 = (id)qword_1ED1CE7B0;
  sub_1A5F64430();
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFBF8, (uint64_t (*)(uint64_t))sub_1A5EF7500, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A5F679D0;
  v9 = sub_1A5F63DAC();
  v11 = v10;
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1A5EE19C8();
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v11;
  sub_1A5F63F80();

  return swift_bridgeObjectRelease();
}

id sub_1A5ED9298()
{
  return sub_1A5ED92AC();
}

id sub_1A5ED92AC()
{
  id v0;
  void *v1;
  unsigned int v2;
  id v4;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_1A5F63D64();
  v5[0] = 0;
  v2 = objc_msgSend(v0, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v1, 1, 0, v5);

  if (v2)
    return v5[0];
  v4 = v5[0];
  sub_1A5F63CE0();

  return (id)swift_willThrow();
}

uint64_t sub_1A5ED9398()
{
  uint64_t v0;

  v0 = sub_1A5ED945C();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A5ED93CC()
{
  uint64_t v0;

  v0 = sub_1A5ED9434();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t ProcessEvent.name.getter()
{
  uint64_t v0;

  v0 = sub_1A5ED9434();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1A5ED9434()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

id sub_1A5ED943C()
{
  return (id)sub_1A5ED9450();
}

uint64_t sub_1A5ED9450()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1A5ED945C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t ProcessEvent.nonJitteredEventTimestamp.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 44);
  v5 = sub_1A5F63F08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1A5ED94A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *a2;
  v5 = sub_1A5F63DD0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v4, v5);
}

void sub_1A5ED94E4(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;
  char v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 *v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 *v47;
  unsigned int v48;
  uint64_t v49;
  char v50;
  char v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[3];
  void *v62;

  v3 = sub_1A5F64160();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1A5EE3ECC(0xD00000000000003ELL, 0x80000001A5F71BC0, 8);
  if (!v1)
  {
    v14 = v5;
    if (v5 >> 60 == 15)
    {
      *(_QWORD *)a1 = 1;
      *(_BYTE *)(a1 + 8) = 1;
      return;
    }
    v15 = (uint64_t)v4;
    sub_1A5F64154();
    v16 = sub_1A5F6413C();
    if (!v17)
    {
      if (qword_1ED1CFC08 != -1)
        swift_once();
      v27 = (id)qword_1ED1CE7B0;
      sub_1A5F6443C();
      sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1A5F66C40;
      v29 = sub_1A5F63DAC();
      v31 = v30;
      *(_QWORD *)(v28 + 56) = MEMORY[0x1E0DEA968];
      v32 = sub_1A5EE19C8();
      *(_QWORD *)(v28 + 64) = v32;
      *(_QWORD *)(v28 + 32) = v29;
      *(_QWORD *)(v28 + 40) = v31;
      v33 = (void *)sub_1A5F63E24();
      v34 = objc_msgSend(v33, sel_description);

      v35 = sub_1A5F64130();
      v37 = v36;

      *(_QWORD *)(v28 + 96) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v28 + 104) = v32;
      *(_QWORD *)(v28 + 72) = v35;
      *(_QWORD *)(v28 + 80) = v37;
      sub_1A5F63F80();
      sub_1A5EE45CC(v15, v14);

      goto LABEL_71;
    }
    v18 = v16;
    v19 = v17;
    v20 = HIBYTE(v17) & 0xF;
    v21 = v16 & 0xFFFFFFFFFFFFLL;
    if ((v19 & 0x2000000000000000) != 0)
      v22 = v20;
    else
      v22 = v16 & 0xFFFFFFFFFFFFLL;
    if (v22)
    {
      if ((v19 & 0x1000000000000000) == 0)
      {
        if ((v19 & 0x2000000000000000) == 0)
        {
          if ((v16 & 0x1000000000000000) != 0)
            v23 = (unsigned __int8 *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 32);
          else
            v23 = (unsigned __int8 *)sub_1A5F64670();
          v24 = sub_1A5F46C50(v23, v21, 10);
          if ((v25 & 1) == 0)
          {
            v26 = (uint64_t)v24;
LABEL_50:
            sub_1A5EE45CC(v15, v14);
            swift_bridgeObjectRelease();
            *(_QWORD *)a1 = v26;
            *(_BYTE *)(a1 + 8) = 0;
            return;
          }
          goto LABEL_68;
        }
        v61[0] = v16;
        v61[1] = v19 & 0xFFFFFFFFFFFFFFLL;
        if (v16 == 43)
        {
          if (!v20)
            goto LABEL_75;
          if (v20 == 1)
            goto LABEL_73;
          if ((BYTE1(v16) - 48) > 9u)
            goto LABEL_46;
          v26 = (BYTE1(v16) - 48);
          if (v20 != 2)
          {
            if ((BYTE2(v16) - 48) > 9u)
              goto LABEL_46;
            v26 = 10 * (BYTE1(v16) - 48) + (BYTE2(v16) - 48);
            v38 = v20 - 3;
            if (v20 != 3)
            {
              v39 = (unsigned __int8 *)v61 + 3;
              while (1)
              {
                v40 = *v39 - 48;
                if (v40 > 9)
                  goto LABEL_46;
                v41 = 10 * v26;
                if ((unsigned __int128)(v26 * (__int128)10) >> 64 != (10 * v26) >> 63)
                  goto LABEL_46;
                v26 = v41 + v40;
                if (__OFADD__(v41, v40))
                  goto LABEL_46;
                LOBYTE(v20) = 0;
                ++v39;
                if (!--v38)
                  goto LABEL_49;
              }
            }
          }
        }
        else
        {
          if (v16 == 45)
          {
            if (v20)
            {
              if (v20 != 1)
              {
                if ((BYTE1(v16) - 48) > 9u)
                  goto LABEL_46;
                if (v20 == 2)
                {
                  LOBYTE(v20) = 0;
                  v26 = -(uint64_t)(BYTE1(v16) - 48);
                  goto LABEL_49;
                }
                if ((BYTE2(v16) - 48) > 9u)
                  goto LABEL_46;
                v26 = -10 * (BYTE1(v16) - 48) - (BYTE2(v16) - 48);
                v46 = v20 - 3;
                if (v20 != 3)
                {
                  v47 = (unsigned __int8 *)v61 + 3;
                  while (1)
                  {
                    v48 = *v47 - 48;
                    if (v48 > 9)
                      goto LABEL_46;
                    v49 = 10 * v26;
                    if ((unsigned __int128)(v26 * (__int128)10) >> 64 != (10 * v26) >> 63)
                      goto LABEL_46;
                    v26 = v49 - v48;
                    if (__OFSUB__(v49, v48))
                      goto LABEL_46;
                    LOBYTE(v20) = 0;
                    ++v47;
                    if (!--v46)
                      goto LABEL_49;
                  }
                }
                goto LABEL_48;
              }
LABEL_73:
              v26 = 0;
LABEL_49:
              if ((v20 & 1) == 0)
                goto LABEL_50;
              goto LABEL_68;
            }
            __break(1u);
LABEL_75:
            __break(1u);
            return;
          }
          if (!v20 || (v16 - 48) > 9u)
          {
LABEL_46:
            v26 = 0;
            LOBYTE(v20) = 1;
            goto LABEL_49;
          }
          v26 = (v16 - 48);
          if (v20 != 1)
          {
            if ((BYTE1(v16) - 48) > 9u)
              goto LABEL_46;
            v26 = 10 * (v16 - 48) + (BYTE1(v16) - 48);
            v42 = v20 - 2;
            if (v20 != 2)
            {
              v43 = (unsigned __int8 *)v61 + 2;
              while (1)
              {
                v44 = *v43 - 48;
                if (v44 > 9)
                  goto LABEL_46;
                v45 = 10 * v26;
                if ((unsigned __int128)(v26 * (__int128)10) >> 64 != (10 * v26) >> 63)
                  goto LABEL_46;
                v26 = v45 + v44;
                if (__OFADD__(v45, v44))
                  goto LABEL_46;
                LOBYTE(v20) = 0;
                ++v43;
                if (!--v42)
                  goto LABEL_49;
              }
            }
          }
        }
LABEL_48:
        LOBYTE(v20) = 0;
        goto LABEL_49;
      }
      swift_bridgeObjectRetain();
      v26 = (uint64_t)sub_1A5F46B6C(v18, v19, 10);
      v51 = v50;
      swift_bridgeObjectRelease();
      if ((v51 & 1) == 0)
        goto LABEL_50;
    }
LABEL_68:
    v59 = v18;
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v52 = (id)qword_1ED1CE7B0;
    sub_1A5F6443C();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1A5F66C40;
    v54 = sub_1A5F63DAC();
    v56 = v55;
    v57 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v53 + 56) = MEMORY[0x1E0DEA968];
    v58 = sub_1A5EE19C8();
    *(_QWORD *)(v53 + 32) = v54;
    *(_QWORD *)(v53 + 40) = v56;
    *(_QWORD *)(v53 + 96) = v57;
    *(_QWORD *)(v53 + 104) = v58;
    *(_QWORD *)(v53 + 64) = v58;
    *(_QWORD *)(v53 + 72) = v59;
    *(_QWORD *)(v53 + 80) = v19;
    sub_1A5F63F80();
    sub_1A5EE45CC(v15, v14);

LABEL_71:
    swift_bridgeObjectRelease();
    *(_QWORD *)a1 = 1;
    *(_BYTE *)(a1 + 8) = 1;
    return;
  }
  v62 = v1;
  v6 = v1;
  sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
  if (swift_dynamicCast())
  {
    if (!v61[2])
    {

      *(_QWORD *)a1 = 0;
      *(_BYTE *)(a1 + 8) = 1;
      return;
    }
    swift_bridgeObjectRelease();
  }
  v60 = a1;
  if (qword_1ED1CFC08 != -1)
    swift_once();
  v7 = (id)qword_1ED1CE7B0;
  sub_1A5F6443C();
  sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1A5F66C40;
  v9 = sub_1A5F63DAC();
  v11 = v10;
  v12 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v13 = sub_1A5EE19C8();
  *(_QWORD *)(v8 + 64) = v13;
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v11;
  v61[0] = 0;
  v62 = v1;
  sub_1A5F646F4();
  *(_QWORD *)(v8 + 96) = v12;
  *(_QWORD *)(v8 + 104) = v13;
  *(_QWORD *)(v8 + 72) = LOBYTE(v61[0]);
  *(_QWORD *)(v8 + 80) = 0xE000000000000000;
  sub_1A5F63F80();

  swift_bridgeObjectRelease();
  *(_QWORD *)v60 = 1;
  *(_BYTE *)(v60 + 8) = 1;
}

uint64_t type metadata accessor for MescalSigner()
{
  return objc_opt_self();
}

uint64_t AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  v20 = a2;
  v21 = a1;
  v12 = sub_1A5F63F08();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_weakLoadStrong();
  if (result)
  {
    v19 = a6;
    v17 = *(_QWORD *)(result + 96);
    swift_retain();
    sub_1A5F63EFC();
    sub_1A5ED9E4C(v21, v17, v20 & 1, (uint64_t)v15, a3, a4, a5, v19, a7);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return result;
}

uint64_t sub_1A5ED9DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for ProcessEvent(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v5 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1A5ED9E4C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = a8;
  v24 = a7;
  v25 = a4;
  v15 = sub_1A5F64070();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = swift_weakLoadStrong();
  if (result)
  {
    v22 = a5;
    v20 = *(void **)(*(_QWORD *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v18 = v20;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E0DEF740], v15);
    v21 = v20;
    LOBYTE(v20) = sub_1A5F64088();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
    if ((v20 & 1) != 0)
    {
      sub_1A5ED9F98(a1, a2, a3 & 1, v25, *(_QWORD *)(v9 + 24), *(_QWORD *)(v9 + 32), v22, a6, v24, v23, a9);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_1A5ED9F98(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, _QWORD, uint64_t, uint64_t);
  int v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(_QWORD *, uint64_t, uint64_t);
  void *v52;
  id v53;
  uint64_t v54;
  int EnumCaseMultiPayload;
  uint64_t v56;
  void *v57;
  id v58;
  uint64_t v59;
  _QWORD *v60;
  void (*v61)(uint64_t *);
  uint64_t *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  uint64_t *v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t ObjectType;
  uint64_t v95;
  void (*v96)(uint64_t *);
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  uint64_t v119;
  void (*v120)(uint64_t *);
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t *v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  void (*v156)(char *, uint64_t, uint64_t);
  __int128 v157;
  uint64_t v158;
  void (*v159)(uint64_t *);
  __int128 v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  __int128 v165;
  char v166;
  _BYTE v167[24];
  char v168;

  v159 = (void (*)(uint64_t *))a8;
  v147 = a7;
  v153 = a6;
  v152 = a5;
  v143 = a4;
  *(_QWORD *)&v160 = a1;
  *((_QWORD *)&v160 + 1) = a2;
  v13 = type metadata accessor for EventSubmitResult(0, a10, a11, a4);
  v155 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v154 = (uint64_t *)((char *)&v135 - v14);
  v161 = a11;
  v162 = a10;
  v139 = type metadata accessor for ProcessEvent(0, a10, a11, v15);
  v138 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v140 = (uint64_t *)((char *)&v135 - v16);
  v17 = type metadata accessor for Sequence(0);
  MEMORY[0x1E0C80A78](v17);
  v146 = (uint64_t *)((char *)&v135 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v151 = sub_1A5F63F08();
  v150 = *(_QWORD *)(v151 - 8);
  v19 = MEMORY[0x1E0C80A78](v151);
  v137 = (char *)&v135 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v149 = (char *)&v135 - v21;
  v142 = sub_1A5F63F2C();
  v141 = *(_QWORD *)(v142 - 8);
  MEMORY[0x1E0C80A78](v142);
  v144 = (char *)&v135 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = type metadata accessor for EventData();
  MEMORY[0x1E0C80A78](v145);
  v148 = (uint64_t *)((char *)&v135 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v156 = (void (*)(char *, uint64_t, uint64_t))type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v156);
  v25 = (uint64_t *)((char *)&v135 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CE0C0, (uint64_t (*)(uint64_t))type metadata accessor for Tracker.Timer, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v135 - v27;
  v29 = sub_1A5F64070();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (uint64_t *)((char *)&v135 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v163 = v11;
  v33 = *(void **)(*(_QWORD *)(v11 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v32 = v33;
  v34 = *MEMORY[0x1E0DEF740];
  *(_QWORD *)&v157 = *(_QWORD *)(v30 + 104);
  ((void (*)(_QWORD *, uint64_t, uint64_t))v157)(v32, v34, v29);
  v35 = v33;
  v36 = sub_1A5F64088();
  v158 = *(_QWORD *)(v30 + 8);
  ((void (*)(_QWORD *, uint64_t))v158)(v32, v29);
  if ((v36 & 1) == 0)
  {
    __break(1u);
    goto LABEL_52;
  }
  if ((a3 & 1) != 0)
  {
    v37 = sub_1A5EEFA84(v160, *((unint64_t *)&v160 + 1));
    v39 = v38;
    v40 = v163;
    swift_beginAccess();
    v41 = *(_QWORD *)(v40 + 104);
    if (*(_QWORD *)(v41 + 16))
    {
      swift_bridgeObjectRetain();
      v42 = sub_1A5EF11E8(v37, v39);
      if ((v43 & 1) != 0)
      {
        v44 = v42;
        v136 = *(_QWORD *)(v41 + 56);
        v45 = type metadata accessor for Tracker.Timer();
        v135 = v13;
        v46 = *(_QWORD *)(v45 - 8);
        sub_1A5ED7E14(v136 + *(_QWORD *)(v46 + 72) * v44, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
        v47 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56);
        v13 = v135;
        v47(v28, 0, 1, v45);
      }
      else
      {
        v45 = type metadata accessor for Tracker.Timer();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v28, 1, 1, v45);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v45 = type metadata accessor for Tracker.Timer();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v28, 1, 1, v45);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for Tracker.Timer();
    v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v28, 1, v45);
    sub_1A5EEFC44((uint64_t)v28);
    if (v48 == 1)
      return;
  }
  v49 = v163 + 64;
  v50 = MEMORY[0x1A85B8E10](v163 + 64);
  v51 = (void (*)(_QWORD *, uint64_t, uint64_t))v157;
  if (!v50)
  {
LABEL_16:
    v56 = MEMORY[0x1A85B8E10](v49);
    if (!v56)
      goto LABEL_19;
    v36 = v56;
    v57 = *(void **)(*(_QWORD *)(v56 + 48) + OBJC_IVAR___AAAccessQueue_queue);
    *v32 = v57;
    v51(v32, v34, v29);
    v58 = v57;
    LOBYTE(v57) = sub_1A5F64088();
    ((void (*)(_QWORD *, uint64_t))v158)(v32, v29);
    if ((v57 & 1) != 0)
    {
      v59 = *(_QWORD *)(v36 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_options);
      swift_unknownObjectRelease();
      if ((v59 & 1) != 0)
      {
        sub_1A5F33F28((void *)v160, *((unint64_t *)&v160 + 1), v152, v153, v147, (uint64_t)v159, a9, v162, v161);
        return;
      }
LABEL_19:
      sub_1A5F22D74();
      v36 = swift_allocError();
      *v60 = 0;
      v60[1] = 0;
      swift_willThrow();
      v61 = v159;
      if ((sub_1A5F391FC() & 1) != 0)
      {
        if (v61)
        {
LABEL_21:
          v62 = v154;
          *v154 = v36;
          swift_storeEnumTagMultiPayload();
          v63 = (id)v36;
          v61(v62);

          (*(void (**)(uint64_t *, uint64_t))(v155 + 8))(v62, v13);
          return;
        }
        goto LABEL_35;
      }
      v136 = a9;
      v34 = v13;
      if (qword_1ED1CFC08 == -1)
      {
LABEL_34:
        v97 = (id)qword_1ED1CE7B0;
        sub_1A5F64448();
        sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v98 = swift_allocObject();
        *(_OWORD *)(v98 + 16) = xmmword_1A5F66C40;
        v164 = 0;
        *(_QWORD *)&v165 = 0xE000000000000000;
        *(_OWORD *)v167 = v160;
        type metadata accessor for EventSubmit(0, v162, v161, v99);
        sub_1A5F64868();
        v100 = v164;
        v101 = v165;
        v102 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v98 + 56) = MEMORY[0x1E0DEA968];
        v103 = sub_1A5EE19C8();
        *(_QWORD *)(v98 + 64) = v103;
        *(_QWORD *)(v98 + 32) = v100;
        *(_QWORD *)(v98 + 40) = v101;
        v164 = 0;
        *(_QWORD *)&v165 = 0xE000000000000000;
        *(_QWORD *)v167 = v36;
        sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
        sub_1A5F646F4();
        v104 = v164;
        v105 = v165;
        *(_QWORD *)(v98 + 96) = v102;
        *(_QWORD *)(v98 + 104) = v103;
        *(_QWORD *)(v98 + 72) = v104;
        *(_QWORD *)(v98 + 80) = v105;
        sub_1A5F63F80();

        swift_bridgeObjectRelease();
        v13 = v34;
        v61 = v159;
        if (v159)
          goto LABEL_21;
LABEL_35:

        return;
      }
LABEL_54:
      swift_once();
      goto LABEL_34;
    }
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v36 = v50;
  v52 = *(void **)(*(_QWORD *)(v50 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *v32 = v52;
  v51(v32, v34, v29);
  v53 = v52;
  LOBYTE(v52) = sub_1A5F64088();
  ((void (*)(_QWORD *, uint64_t))v158)(v32, v29);
  if ((v52 & 1) == 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v54 = v36 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
  swift_beginAccess();
  sub_1A5ED7E14(v54, (uint64_t)v25, type metadata accessor for SessionManager.SessionState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      sub_1A5ED4D44((uint64_t)v25, type metadata accessor for SessionManager.SessionState);
    swift_unknownObjectRelease();
    goto LABEL_16;
  }
  v158 = *v25;
  swift_unknownObjectRelease();
  v64 = MEMORY[0x1A85B8E10](v49);
  v135 = v13;
  v136 = a9;
  if (v64)
  {
    sub_1A5EDC29C((char *)v160, *((unint64_t *)&v160 + 1), v162, v161, (uint64_t)&v164);
    *(_QWORD *)v167 = v164;
    v157 = v165;
    *(_OWORD *)&v167[8] = v165;
    v168 = v166;
    v65 = sub_1A5EDBE74((uint64_t *)v167);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v65 = 0;
  }
  v66 = v151;
  v67 = v143;
  v68 = v142;
  v69 = v141;
  v70 = v144;
  sub_1A5F63F20();
  v71 = sub_1A5F63F14();
  v73 = v72;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v68);
  v156 = *(void (**)(char *, uint64_t, uint64_t))(v150 + 16);
  v156(v149, v67, v66);
  v164 = 47;
  *(_QWORD *)&v165 = 0xE100000000000000;
  *(_QWORD *)v167 = Tracker.path.getter();
  sub_1A5EDCBFC(0, (unint64_t *)&qword_1ED1CD930, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1A5EDB074();
  sub_1A5F64100();
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  v74 = v164;
  v75 = v165;
  *(_QWORD *)&v157 = v65;
  if (v65)
  {
    v76 = v65;
    v77 = *(_QWORD *)(v65 + 16);
    v78 = *(_QWORD *)(v76 + 24);
    v79 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
    v80 = *(_QWORD *)(v76 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier + 8);
    if (v80)
    {
      v81 = *(_QWORD *)(v76 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_32;
    }
    swift_bridgeObjectRetain();
    v82 = v158;
  }
  else
  {
    v82 = v158;
    v77 = *(_QWORD *)(v158 + 16);
    v78 = *(_QWORD *)(v158 + 24);
    swift_bridgeObjectRetain();
    v79 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
  }
  v83 = v82 + v79;
  v81 = *(_QWORD *)(v82 + v79);
  v80 = *(_QWORD *)(v83 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_32:
  v84 = (uint64_t)v148;
  *v148 = v71;
  *(_QWORD *)(v84 + 8) = v73;
  v85 = (int *)v145;
  v86 = v84 + *(int *)(v145 + 20);
  (*(void (**)(uint64_t, char *, uint64_t))(v150 + 32))(v86, v149, v151);
  v87 = (uint64_t *)(v84 + v85[6]);
  *v87 = v74;
  v87[1] = v75;
  v88 = (_QWORD *)(v84 + v85[7]);
  *v88 = v77;
  v88[1] = v78;
  v89 = (_QWORD *)(v84 + v85[8]);
  *v89 = v81;
  v89[1] = v80;
  v90 = v146;
  v91 = v161;
  v92 = v163;
  sub_1A5EED58C((void *)v160, *((unint64_t *)&v160 + 1), v84, v152, v153, v162, v161, (uint64_t)v146);
  v93 = *(_QWORD *)(v92 + 192);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v93 + 8))(&v164, ObjectType, v93);
  *(_QWORD *)v167 = v164;
  v95 = sub_1A5EDB7A8(v90, (uint64_t *)v167);
  v96 = v159;
  v106 = (void *)v95;
  swift_bridgeObjectRelease();
  if (v106)
  {
    v107 = v162;
    v163 = sub_1A5EDB4E8(v162, v91);
    *(_QWORD *)&v160 = v109;
    *((_QWORD *)&v160 + 1) = v108;
    v111 = v110 & 1;
    v113 = *v146;
    v112 = v146[1];
    v114 = (uint64_t)v137;
    v156(v137, v86, v151);
    sub_1A5EDCB9C(v147, (uint64_t)&v164);
    *(_OWORD *)v167 = xmmword_1A5F68AE0;
    v115 = v140;
    ProcessEvent.init(name:json:nonJitteredEventTimestamp:groupName:groupContentType:userInfo:timestampConfiguration:)(v113, v112, (uint64_t)v106, v114, v163, *((uint64_t *)&v160 + 1), v160, v111, v140, (uint64_t)&v164, (uint64_t *)v167, v107, v91);
    v116 = MEMORY[0x1A85B8E10](v49);
    swift_bridgeObjectRetain();
    v118 = v106;
    if (v116)
    {
      sub_1A5EDBA2C((uint64_t)v115, v107, v161, v117);
      swift_unknownObjectRelease();
    }
    v119 = v135;
    v120 = v159;
    v121 = (uint64_t)v148;
    if (v159)
    {
      v122 = v138;
      v123 = v154;
      v124 = v140;
      v125 = v139;
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(v138 + 16))(v154, v140, v139);
      swift_storeEnumTagMultiPayload();
      v120(v123);

      swift_release();
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(v155 + 8))(v123, v119);
      (*(void (**)(_QWORD *, uint64_t))(v122 + 8))(v124, v125);
    }
    else
    {

      swift_release();
      swift_release();
      (*(void (**)(_QWORD *, uint64_t))(v138 + 8))(v140, v139);
    }
    v134 = v146;
  }
  else
  {
    v126 = v135;
    v121 = (uint64_t)v148;
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v127 = (id)qword_1ED1CE7B0;
    sub_1A5F64430();
    sub_1A5F63F80();

    v128 = v146;
    if (v96)
    {
      v130 = *v146;
      v129 = v146[1];
      sub_1A5F22DB8();
      v131 = swift_allocError();
      *v132 = v130;
      v132[1] = v129;
      v133 = v154;
      *v154 = v131;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      v96(v133);
      swift_release();
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(v155 + 8))(v133, v126);
    }
    else
    {
      swift_release();
      swift_release();
    }
    v134 = v128;
  }
  sub_1A5ED4D44((uint64_t)v134, type metadata accessor for Sequence);
  sub_1A5ED4D44(v121, (uint64_t (*)(_QWORD))type metadata accessor for EventData);
}

uint64_t ProcessEvent.init(name:json:nonJitteredEventTimestamp:groupName:groupContentType:userInfo:timestampConfiguration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t *a11, uint64_t a12, uint64_t a13)
{
  uint64_t v18;
  uint64_t v19;
  int *v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t result;
  _QWORD *v26;

  v19 = *a11;
  v18 = a11[1];
  *a9 = a1;
  a9[1] = a2;
  a9[3] = 0x302E312E30;
  a9[4] = 0xE500000000000000;
  a9[2] = a3;
  v20 = (int *)type metadata accessor for ProcessEvent(0, a12, a13, a4);
  v21 = (char *)a9 + v20[11];
  v22 = sub_1A5F63F08();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, a4, v22);
  v23 = (_QWORD *)((char *)a9 + v20[12]);
  *v23 = a5;
  v23[1] = a6;
  v24 = (char *)a9 + v20[13];
  *(_QWORD *)v24 = a7;
  v24[8] = a8 & 1;
  result = sub_1A5EDB014(a10, (uint64_t)a9 + v20[14]);
  v26 = (_QWORD *)((char *)a9 + v20[15]);
  *v26 = v19;
  v26[1] = v18;
  return result;
}

uint64_t type metadata accessor for ProcessEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ProcessEvent);
}

uint64_t sub_1A5EDB014(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5EDCBFC(0, (unint64_t *)&qword_1ED1CF848, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A5EDB074()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1CE1B0;
  if (!qword_1ED1CE1B0)
  {
    sub_1A5EE2254(255, (unint64_t *)&qword_1ED1CD930, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED1CE1B0);
  }
  return result;
}

uint64_t sub_1A5EDB0CC(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;

  v1 = (_QWORD *)result;
  v2 = *(_QWORD *)(result + 16);
  if (v2 < 2)
    return (uint64_t)v1;
  v3 = 0;
  v4 = 0;
  v5 = v2 >> 1;
  v6 = v2 - 1;
  v7 = 16 * v2 + 16;
  v15 = v2 >> 1;
  while (1)
  {
    if (v4 == v6)
      goto LABEL_4;
    v8 = v1[2];
    if (v4 >= v8)
      break;
    if (v6 >= v8)
      goto LABEL_13;
    v10 = v1[v3 + 4];
    v9 = v1[v3 + 5];
    v12 = *(_QWORD *)((char *)v1 + v7);
    v11 = *(_QWORD *)((char *)v1 + v7 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_1A5F62DCC(v1);
    v13 = &v1[v3];
    result = swift_bridgeObjectRelease();
    v13[4] = v12;
    v13[5] = v11;
    if (v6 >= v1[2])
      goto LABEL_14;
    v14 = (_QWORD *)((char *)v1 + v7);
    result = swift_bridgeObjectRelease();
    *v14 = v10;
    v14[1] = v9;
    v5 = v15;
LABEL_4:
    ++v4;
    --v6;
    v7 -= 16;
    v3 += 2;
    if (v5 == v4)
      return (uint64_t)v1;
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t Tracker.path.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  swift_retain();
  v1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v4 = v0[3];
    if (v4)
    {
      v5 = v0[2];
      swift_retain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v1 = sub_1A5EDB2D8(0, v1[2] + 1, 1, v1);
      v7 = v1[2];
      v6 = v1[3];
      if (v7 >= v6 >> 1)
        v1 = sub_1A5EDB2D8((_QWORD *)(v6 > 1), v7 + 1, 1, v1);
      v1[2] = v7 + 1;
      v2 = &v1[2 * v7];
      v2[4] = v5;
      v2[5] = v4;
      swift_release();
    }
    v3 = (_QWORD *)v0[17];
    swift_retain();
    swift_release();
    v0 = v3;
  }
  while (v3);
  return sub_1A5EDB0CC((uint64_t)v1);
}

_QWORD *sub_1A5EDB2D8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1A5EDCBFC(0, &qword_1ED1CE568, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A5EDB3F8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5EDB3F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

unint64_t sub_1A5EDB4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  unint64_t result;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD v15[2];

  v3 = v2;
  (*(void (**)(_QWORD *__return_ptr))(a2 + 8))(v15);
  if (v15[1])
    return v15[0];
  swift_retain();
  while (1)
  {
    v5 = (uint64_t *)(v3 + 144);
    swift_beginAccess();
    v6 = *(_QWORD *)(v3 + 144);
    if (v6 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v4 = sub_1A5F64724();
      if (!v4)
      {
LABEL_19:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = 0;
        goto LABEL_23;
      }
    }
    else
    {
      v4 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      if (!v4)
        goto LABEL_19;
    }
    result = v4 - 1;
    if (__OFSUB__(v4, 1))
      break;
    if ((v6 & 0xC000000000000001) != 0)
    {
      v8 = (char *)MEMORY[0x1A85B836C](result, v6);
    }
    else
    {
      if ((result & 0x8000000000000000) != 0)
        goto LABEL_29;
      if (result >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_30;
      v8 = (char *)*(id *)(v6 + 8 * result + 32);
    }
    v9 = v8;
    swift_bridgeObjectRelease();
    v4 = *(_QWORD *)&v9[OBJC_IVAR___AAGroup_name];
    v10 = *(_QWORD *)&v9[OBJC_IVAR___AAGroup_name + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();

    v11 = *v5;
    if ((unint64_t)*v5 >> 62)
    {
      swift_bridgeObjectRetain();
      v12 = sub_1A5F64724();
      if (!v12)
      {
LABEL_22:
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    else
    {
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v12)
        goto LABEL_22;
    }
    result = v12 - 1;
    if (__OFSUB__(v12, 1))
      goto LABEL_31;
    if ((v11 & 0xC000000000000001) != 0)
    {
      MEMORY[0x1A85B836C](result, v11);
      swift_bridgeObjectRelease();
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      if ((result & 0x8000000000000000) != 0)
        goto LABEL_32;
      if (result >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_33;
      v13 = *(id *)(v11 + 8 * result + 32);
      swift_bridgeObjectRelease();
      swift_release();

    }
LABEL_23:
    v14 = *(_QWORD *)(v3 + 136);
    swift_retain();
    swift_release();
    if (!v14)
      return v4;
    v3 = v14;
    if (v10)
    {
      swift_release();
      return v4;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1A5EDB7A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t result;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[128];

  v6 = sub_1A5F64070();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(void **)(*(_QWORD *)(v2 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  v11 = *a2;
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v12 = v10;
  LOBYTE(v10) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    type metadata accessor for PrivacySequenceValidator();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = v11;
    if (v11)
      v15 = v11;
    else
      v15 = MEMORY[0x1E0DEE9E8];
    type metadata accessor for DenylistDescriptorMatcher();
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v15;
    *(_QWORD *)(inited + 24) = v16;
    if (!v11)
      goto LABEL_7;
    v17 = v16;
    v19 = *a1;
    v18 = a1[1];
    sub_1A5EDCBFC(0, (unint64_t *)&qword_1ED1CB880, (uint64_t)&type metadata for DenylistDescriptor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v20 = swift_initStackObject();
    *(_OWORD *)(v20 + 16) = xmmword_1A5F66C40;
    *(_QWORD *)(v20 + 32) = 42;
    *(_QWORD *)(v20 + 40) = 0xE100000000000000;
    *(_QWORD *)(v20 + 48) = 42;
    *(_QWORD *)(v20 + 56) = 0xE100000000000000;
    *(_QWORD *)(v20 + 64) = 42;
    *(_QWORD *)(v20 + 72) = 0xE100000000000000;
    *(_QWORD *)(v20 + 80) = v19;
    *(_QWORD *)(v20 + 88) = v18;
    *(_QWORD *)(v20 + 96) = 42;
    *(_QWORD *)(v20 + 104) = 0xE100000000000000;
    *(_QWORD *)(v20 + 112) = 42;
    *(_QWORD *)(v20 + 120) = 0xE100000000000000;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v21 = sub_1A5F47EFC(v20);
    swift_setDeallocating();
    swift_arrayDestroy();
    LOBYTE(v17) = sub_1A5EF3268(v21, *(_QWORD *)(v17 + 16));
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      v11 = 0;
    }
    else
    {
LABEL_7:
      v22 = sub_1A5EEC99C(inited);
      if (v3)
      {
        swift_setDeallocating();
        swift_bridgeObjectRelease();
        swift_release();
        return v11;
      }
      v11 = v22;
    }
    swift_release();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DenylistDescriptorMatcher()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PrivacySequenceValidator()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for EventSubmitResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EventSubmitResult);
}

uint64_t sub_1A5EDBA2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  unsigned int v27;
  double *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[2];

  v5 = v4;
  v29 = a1;
  v30 = a2;
  v31 = a3;
  v6 = type metadata accessor for ProcessEvent(0, a2, a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v29 - v8);
  v10 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_1A5F64070();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(*(_QWORD *)(v5 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  v18 = v17;
  LOBYTE(v17) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    v20 = v5 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
    swift_beginAccess();
    sub_1A5ED7E14(v20, (uint64_t)v12, type metadata accessor for SessionManager.SessionState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      v23 = v30;
      v22 = v31;
      if (EnumCaseMultiPayload == 1)
        sub_1A5ED4D44((uint64_t)v12, type metadata accessor for SessionManager.SessionState);
      v24 = *(_QWORD *)(v5 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider + 24);
      v25 = *(_QWORD *)(v5 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider + 32);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider), v24);
      v26 = (*(double (**)(uint64_t *, uint64_t, uint64_t))(v25 + 8))(v32, v24, v25);
      v27 = LOBYTE(v32[0]);
    }
    else
    {
      v28 = (double *)(*v12 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_timestampConfiguration);
      v27 = *(unsigned __int8 *)v28;
      v26 = v28[1];
      swift_release();
      v23 = v30;
      v22 = v31;
    }
    v32[0] = v27;
    *(double *)&v32[1] = v26;
    ProcessEvent.with(timestampConfiguration:)(v32, v6, v9);
    sub_1A5EDBD1C((uint64_t)v9, v23, v22);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5EDBC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 44);
  v5 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  result = a1 + *(int *)(a2 + 56);
  if (*(_QWORD *)(result + 24))
    return __swift_destroy_boxed_opaque_existential_0(result);
  return result;
}

uint64_t sub_1A5EDBD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t ObjectType;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;

  v7 = sub_1A5F64070();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(*(_QWORD *)(v3 + 32) + OBJC_IVAR___AAAccessQueue_queue);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v12 = v11;
  LOBYTE(v11) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    result = swift_beginAccess();
    v14 = *(_QWORD *)(v3 + 48);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain();
      v16 = (uint64_t *)(v14 + 40);
      do
      {
        v17 = *v16;
        ObjectType = swift_getObjectType();
        v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8);
        swift_unknownObjectRetain();
        v19(a1, a2, a3, ObjectType, v17);
        swift_unknownObjectRelease();
        v16 += 2;
        --v15;
      }
      while (v15);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5EDBE74(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t result;
  uint64_t v18;
  int EnumCaseMultiPayload;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v3 = sub_1A5F63F08();
  v43 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A5F64070();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = a1[1];
  if (!v13)
    return 0;
  v42 = v3;
  v14 = *(void **)(*(_QWORD *)(v1 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  v15 = *a1;
  *v12 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF740], v9);
  v16 = v14;
  LOBYTE(v14) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v14 & 1) != 0)
  {
    v18 = v1 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
    swift_beginAccess();
    sub_1A5ED7E14(v18, (uint64_t)v8, type metadata accessor for SessionManager.SessionState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      v21 = *(_QWORD **)v8;
      v22 = *(_QWORD *)(*(_QWORD *)v8 + 16);
      v23 = v21[3];
      swift_bridgeObjectRetain();
      v24 = sub_1A5EDD748(v15, v13, v22, v23);
      v40 = v25;
      v41 = v24;
      swift_bridgeObjectRelease();
      v27 = v21[4];
      v26 = v21[5];
      v28 = v43;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v5, (uint64_t)v21 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate, v42);
      v29 = *(_QWORD *)((char *)v21 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
      v30 = *(_QWORD *)((char *)v21 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier + 8);
      sub_1A5EF3C30(v27, v26);
      swift_bridgeObjectRetain();
      v31 = sub_1A5EDD4CC(v15, v13, v29, v30);
      v33 = v32;
      swift_bridgeObjectRelease();
      LOBYTE(v29) = *((_BYTE *)v21 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_timestampConfiguration);
      v34 = *(_QWORD *)((char *)v21 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_timestampConfiguration + 8);
      swift_release();
      type metadata accessor for ActiveSession();
      v20 = (_QWORD *)swift_allocObject();
      v35 = v42;
      v36 = v40;
      v20[2] = v41;
      v20[3] = v36;
      v20[4] = v27;
      v20[5] = v26;
      (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))((uint64_t)v20 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate, v5, v35);
      v37 = (_QWORD *)((char *)v20 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
      *v37 = v31;
      v37[1] = v33;
      v38 = (char *)v20 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_timestampConfiguration;
      *v38 = v29;
      *((_QWORD *)v38 + 1) = v34;
      return (uint64_t)v20;
    }
    v20 = 0;
    if (EnumCaseMultiPayload != 1)
      return (uint64_t)v20;
    sub_1A5ED4D44((uint64_t)v8, type metadata accessor for SessionManager.SessionState);
    return 0;
  }
  __break(1u);
  return result;
}

id ProcessEvent.with(timestampConfiguration:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  uint64_t v24[2];
  _BYTE v25[32];

  v22 = a3;
  v6 = sub_1A5F63F08();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = a1[1];
  v11 = v3[1];
  v21 = *v3;
  v23 = (id)v3[2];
  (*(void (**)(char *, char *))(v12 + 16))(v8, (char *)v3 + *(int *)(a2 + 44));
  v13 = *(int *)(a2 + 52);
  v14 = (uint64_t *)((char *)v3 + *(int *)(a2 + 48));
  v15 = *v14;
  v16 = v14[1];
  v17 = *(uint64_t *)((char *)v3 + v13);
  v18 = *((_BYTE *)v3 + v13 + 8);
  sub_1A5EDCB9C((uint64_t)v3 + *(int *)(a2 + 56), (uint64_t)v25);
  v24[0] = v9;
  v24[1] = v10;
  ProcessEvent.init(name:json:nonJitteredEventTimestamp:groupName:groupContentType:userInfo:timestampConfiguration:)(v21, v11, (uint64_t)v23, (uint64_t)v8, v15, v16, v17, v18, v22, (uint64_t)v25, v24, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v23;
}

void sub_1A5EDC29C(char *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void *ObjCClassFromMetadata;
  char *v8;
  char *v9;
  uint64_t v10;
  char v12;
  char *v14;
  char *v15;
  uint64_t v16;
  char v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  if (!(a2 >> 62))
  {
    (*(void (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
    return;
  }
  if (a2 >> 62 != 1)
  {
    v14 = *(char **)&a1[OBJC_IVAR___AARawEvent_sessionGroup];
    v15 = &v14[OBJC_IVAR___AASessionGroup_groupName];
    swift_beginAccess();
    if (sub_1A5F64178() == 0x746C7561666564 && v16 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = sub_1A5F64880();
      sub_1A5EEC96C(a1, a2);
      v19 = v14;
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
      {
        v23 = *((_QWORD *)v15 + 1);
        *(_QWORD *)a5 = *(_QWORD *)v15;
        *(_QWORD *)(a5 + 8) = v23;
        *(_QWORD *)(a5 + 16) = 0;
        *(_BYTE *)(a5 + 24) = 1;
        swift_bridgeObjectRetain();

        sub_1A5EF3D48(a1, a2);
        return;
      }

      sub_1A5EF3D48(a1, a2);
    }
LABEL_18:
    *(_QWORD *)a5 = 0;
    *(_QWORD *)(a5 + 8) = 0;
    *(_BYTE *)(a5 + 24) = 0;
    *(_QWORD *)(a5 + 16) = 0;
    return;
  }
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  if ((objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_sessionGroup) & 1) == 0)
    goto LABEL_18;
  v8 = (char *)objc_msgSend(ObjCClassFromMetadata, sel_sessionGroup);
  v9 = &v8[OBJC_IVAR___AASessionGroup_groupName];
  swift_beginAccess();
  if (sub_1A5F64178() == 0x746C7561666564 && v10 == 0xE700000000000000)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = sub_1A5F64880();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      v20 = *(_QWORD *)v9;
      v21 = *((_QWORD *)v9 + 1);
      swift_bridgeObjectRetain();

      v22 = 1;
      goto LABEL_23;
    }

  }
  v20 = 0;
  v21 = 0;
  v22 = 0;
LABEL_23:
  *(_QWORD *)a5 = v20;
  *(_QWORD *)(a5 + 8) = v21;
  *(_QWORD *)(a5 + 16) = 0;
  *(_BYTE *)(a5 + 24) = v22;
}

uint64_t initializeWithCopy for SessionGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t LazyEventProcessor.process<A>(processEvent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t ObjectType;

  v6 = sub_1A5EDC5D8();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = (uint64_t *)(v6 + 40);
    do
    {
      v9 = *v8;
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, a2, a3, ObjectType, v9);
      v8 += 2;
      --v7;
    }
    while (v7);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5EDC5D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  void *v6;
  os_unfair_lock_s *v7;
  uint64_t v9;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 32);
  swift_retain();
  os_unfair_lock_lock_with_options();
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(os_unfair_lock_s **)(v2 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v4);
  swift_release();
  if (!v3)
  {
    if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
    {
      v5 = (*(uint64_t (**)(void))(v1 + 16))();
    }
    else
    {
      sub_1A5ED4A58();
      v6 = (void *)sub_1A5F644A8();
      MEMORY[0x1E0C80A78](v6);
      sub_1A5EE02A4();
      sub_1A5F644B4();

      v5 = v9;
    }
    swift_retain();
    os_unfair_lock_lock_with_options();
    if (*(_QWORD *)(v1 + 40))
    {
      v3 = *(_QWORD *)(v1 + 40);
    }
    else
    {
      *(_QWORD *)(v1 + 40) = v5;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v3 = v5;
    }
    v7 = *(os_unfair_lock_s **)(v2 + 16);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v7);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v3;
}

uint64_t sub_1A5EDC758()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  id v19;
  id v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  int64_t v37;
  objc_super v38;
  __int128 v39;
  _OWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  __int128 v43;

  sub_1A5EDCB9C(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)&v41);
  if (!*((_QWORD *)&v43 + 1))
  {
    sub_1A5EDCB44((uint64_t)&v41);
    return 0;
  }
  sub_1A5EF1B3C(0, (unint64_t *)&qword_1ED1CE4E8, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v1 = 0;
  v2 = v39;
  v36 = v39 + 64;
  v3 = 1 << *(_BYTE *)(v39 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v39 + 64);
  v37 = (unint64_t)(v3 + 63) >> 6;
  v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v1 << 6);
LABEL_10:
      v10 = *(_QWORD *)(v2 + 56);
      v11 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v9);
      v12 = v11[1];
      *(_QWORD *)&v39 = *v11;
      *((_QWORD *)&v39 + 1) = v12;
      sub_1A5EF30B0(v10 + 32 * v9, (uint64_t)v40);
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    v13 = v1 + 1;
    if (__OFADD__(v1, 1))
      goto LABEL_47;
    if (v13 < v37)
    {
      v14 = *(_QWORD *)(v36 + 8 * v13);
      if (v14)
        goto LABEL_14;
      v15 = v1 + 2;
      ++v1;
      if (v13 + 1 < v37)
      {
        v14 = *(_QWORD *)(v36 + 8 * v15);
        if (v14)
          goto LABEL_17;
        v1 = v13 + 1;
        if (v13 + 2 < v37)
        {
          v14 = *(_QWORD *)(v36 + 8 * (v13 + 2));
          if (v14)
          {
            v13 += 2;
            goto LABEL_14;
          }
          v15 = v13 + 3;
          v1 = v13 + 2;
          if (v13 + 3 < v37)
            break;
        }
      }
    }
LABEL_28:
    v5 = 0;
    memset(v40, 0, sizeof(v40));
    v39 = 0u;
LABEL_29:
    sub_1A5ECD6B0((uint64_t)&v39, (uint64_t)&v41, (uint64_t (*)(_QWORD))sub_1A5EDCCA4);
    v16 = v42;
    if (!v42)
    {
      swift_release();
      return (uint64_t)v6;
    }
    v17 = v41;
    sub_1A5EF1B2C(&v43, &v39);
    v18 = (objc_class *)type metadata accessor for JSON();
    v19 = objc_allocWithZone(v18);
    sub_1A5EDCB9C((uint64_t)&v39, (uint64_t)v19 + OBJC_IVAR___AAJSON_value);
    v38.receiver = v19;
    v38.super_class = v18;
    v20 = objc_msgSendSuper2(&v38, sel_init);
    sub_1A5EDCB44((uint64_t)&v39);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v39 = v6;
    v24 = sub_1A5EF11E8(v17, v16);
    v25 = v6[2];
    v26 = (v22 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    v28 = v22;
    if (v6[3] >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v6 = (_QWORD *)v39;
        if ((v22 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_1A5F054CC(v27, v22, v23);
        v6 = (_QWORD *)v39;
        if ((v28 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_1A5EDCCF8(v27, isUniquelyReferenced_nonNull_native, v23);
      v29 = sub_1A5EF11E8(v17, v16);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_49;
      v24 = v29;
      v6 = (_QWORD *)v39;
      if ((v28 & 1) != 0)
      {
LABEL_6:
        v7 = v6[7];

        *(_QWORD *)(v7 + 8 * v24) = v20;
        goto LABEL_7;
      }
    }
    v6[(v24 >> 6) + 8] |= 1 << v24;
    v31 = (uint64_t *)(v6[6] + 16 * v24);
    *v31 = v17;
    v31[1] = v16;
    *(_QWORD *)(v6[7] + 8 * v24) = v20;
    v32 = v6[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_46;
    v6[2] = v34;
    swift_bridgeObjectRetain();
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v14 = *(_QWORD *)(v36 + 8 * v15);
  if (v14)
  {
LABEL_17:
    v13 = v15;
LABEL_14:
    v5 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v13 << 6);
    v1 = v13;
    goto LABEL_10;
  }
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v37)
    {
      v1 = v37 - 1;
      goto LABEL_28;
    }
    v14 = *(_QWORD *)(v36 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_14;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  result = sub_1A5F648C8();
  __break(1u);
  return result;
}

uint64_t sub_1A5EDCB44(uint64_t a1)
{
  uint64_t v2;

  sub_1A5EDCBFC(0, (unint64_t *)&qword_1ED1CF848, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A5EDCB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5EDCBFC(0, (unint64_t *)&qword_1ED1CF848, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1A5EDCBFC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1A5EDCC40(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1A5F64568();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t type metadata accessor for JSON()
{
  return objc_opt_self();
}

void sub_1A5EDCCA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CE198)
  {
    sub_1A5EF1BE0();
    v0 = sub_1A5F64568();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CE198);
  }
}

uint64_t sub_1A5EDCCF8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  sub_1A5EDD010(0, &qword_1ED1CD948, a3, (void (*)(uint64_t))type metadata accessor for JSON);
  v39 = a2;
  v7 = sub_1A5F6473C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    sub_1A5F64910();
    sub_1A5F6419C();
    result = sub_1A5F64928();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

void sub_1A5EDD010(uint64_t a1, unint64_t *a2, uint64_t a3, void (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    a4(a3);
    v5 = sub_1A5F64754();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t LoggingEventProcessor.process<A>(processEvent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1A5F64430();
  sub_1A5EDD448();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1A5F679D0;
  v8 = v3[5];
  v9 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v8);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, a2, a3, v8, v9);
  v12 = v11;
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = sub_1A5EE19C8();
  *(_QWORD *)(v7 + 32) = v10;
  *(_QWORD *)(v7 + 40) = v12;
  sub_1A5F63F80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5EDD168(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  unint64_t v30;
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v7 = sub_1A5F64160();
  MEMORY[0x1E0C80A78](v7);
  sub_1A5EDCB9C(a1[2] + OBJC_IVAR___AAJSON_value, (uint64_t)&v27);
  if (v28)
  {
    sub_1A5EF1B2C(&v27, &v29);
  }
  else
  {
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
    v30 = sub_1A5EFD068();
    *(_QWORD *)&v29 = v8;
    sub_1A5EDCB44((uint64_t)&v27);
  }
  v9 = (void *)objc_opt_self();
  __swift_project_boxed_opaque_existential_1(&v29, v30);
  v10 = sub_1A5F64874();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v29);
  v11 = *v3;
  *(_QWORD *)&v29 = 0;
  v12 = objc_msgSend(v9, sel_dataWithJSONObject_options_error_, v10, v11, &v29);
  swift_unknownObjectRelease();
  v13 = (id)v29;
  if (v12)
  {
    v14 = sub_1A5F63E3C();
    v16 = v15;

    sub_1A5F64154();
    sub_1A5F6413C();
    if (v17)
    {
      v18 = a1[1];
      *(_QWORD *)&v29 = *a1;
      *((_QWORD *)&v29 + 1) = v18;
      swift_bridgeObjectRetain();
      sub_1A5F641B4();
      sub_1A5F641B4();
      swift_bridgeObjectRelease();
      sub_1A5EF0908(v14, v16);
      return v29;
    }
    else
    {
      v24 = v3[4];
      v25 = v3[5];
      __swift_project_boxed_opaque_existential_1(v3 + 1, v24);
      v19 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8))(a1, a2, a3, v24, v25);
      sub_1A5EF0908(v14, v16);
    }
  }
  else
  {
    v20 = v13;
    v21 = (void *)sub_1A5F63CE0();

    swift_willThrow();
    v22 = v3[4];
    v23 = v3[5];
    __swift_project_boxed_opaque_existential_1(v3 + 1, v22);
    v19 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8))(a1, a2, a3, v22, v23);

  }
  return v19;
}

uint64_t type metadata accessor for ActiveSession()
{
  uint64_t result;

  result = qword_1ED1CDF50;
  if (!qword_1ED1CDF50)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A5EDD448()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CFBF8)
  {
    sub_1A5EE2EE8(255, (unint64_t *)&qword_1ED1CF840);
    v0 = sub_1A5F64850();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CFBF8);
  }
}

uint64_t sub_1A5EDD4AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A5EDD4B4(v1, a1);
}

uint64_t sub_1A5EDD4B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A5ED94A4(a1, &OBJC_IVAR____TtC12AppAnalytics46BaseDocumentDirectoryUploadDropboxPathProvider_baseURL, a2);
}

uint64_t sub_1A5EDD4C0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A5EDD4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t result;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a1;
  v28 = a3;
  v7 = sub_1A5F63F2C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A5F64070();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(*(_QWORD *)(v4 + 16) + OBJC_IVAR___AAAccessQueue_queue);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF740], v11);
  v16 = v15;
  LOBYTE(v15) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    if (a4)
    {
      v18 = (uint64_t *)(v4 + 32);
      swift_beginAccess();
      v19 = *(_QWORD *)(v4 + 32);
      v20 = *(_QWORD *)(v19 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v20)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21 = sub_1A5EDD9D0(v28, a4, v27, a2);
        if ((v22 & 1) != 0)
        {
          v23 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 16 * v21);
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          return v23;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      sub_1A5F63F20();
      v23 = sub_1A5F63F14();
      v25 = v24;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v29 = *v18;
      *v18 = 0x8000000000000000;
      sub_1A5EBDCB0(v23, v25, v28, a4, v27, a2, isUniquelyReferenced_nonNull_native);
      *v18 = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      return v23;
    }
    return v28;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5EDD748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t result;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a3;
  v28 = a1;
  v7 = sub_1A5F63F2C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A5F64070();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(void **)(*(_QWORD *)(v4 + 16) + OBJC_IVAR___AAAccessQueue_queue);
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF740], v11);
  v16 = v15;
  LOBYTE(v15) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    v18 = (uint64_t *)(v4 + 24);
    swift_beginAccess();
    v19 = *(_QWORD *)(v4 + 24);
    if (*(_QWORD *)(v19 + 16))
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v20 = v27;
      v21 = sub_1A5EDD9D0(v27, a4, v28, a2);
      if ((v22 & 1) != 0)
      {
        v23 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 16 * v21);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return v23;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v20 = v27;
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1A5F63F20();
    v23 = sub_1A5F63F14();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v29 = *v18;
    *v18 = 0x8000000000000000;
    sub_1A5EBDCB0(v23, v25, v20, a4, v28, a2, isUniquelyReferenced_nonNull_native);
    *v18 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    return v23;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A5EDD9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_1A5F64910();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  v8 = sub_1A5F64928();
  return sub_1A5EDDA7C(a1, a2, a3, a4, v8);
}

unint64_t sub_1A5EDDA7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v13 = ~v7;
    v14 = *(_QWORD *)(v5 + 48);
    do
    {
      v15 = (_QWORD *)(v14 + 32 * v8);
      v16 = v15[2];
      v17 = v15[3];
      v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (sub_1A5F64880() & 1) != 0)
      {
        v19 = v16 == a3 && v17 == a4;
        if (v19 || (sub_1A5F64880() & 1) != 0)
          break;
      }
      v8 = (v8 + 1) & v13;
    }
    while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

_QWORD *sub_1A5EDDB78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v33 = sub_1A5F63DD0();
  v2 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v4 = (_QWORD *)((char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
  os_unfair_lock_lock_with_options();
  v6 = (_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24);
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), v7);
  v32 = v0;
  sub_1A5ED7F90();
  v9 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v8 + 128))(v4, v7, v8);
  if (v1)
  {
    (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v33);
    goto LABEL_3;
  }
  v10 = v9;
  v38 = 0;
  v31 = v6;
  v29 = v5;
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v33);
  v11 = *(_QWORD *)(v10 + 16);
  v28[1] = v10;
  if (!v11)
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_22:
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v32 + v29) + 16));
    return v4;
  }
  v30 = v32 + 40;
  swift_beginAccess();
  v12 = (uint64_t *)(v10 + 40);
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v33 = (uint64_t)v4;
    v13 = *(v12 - 1);
    v14 = *v12;
    v15 = *(_QWORD *)(*(_QWORD *)v30 + 16);
    swift_bridgeObjectRetain();
    if (v15)
    {
      swift_bridgeObjectRetain();
      sub_1A5EF11E8(v13, v14);
      v17 = v16;
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = 0;
    }
    v18 = v13;
    v19 = sub_1A5ED89B8(v13, v14);
    v20 = v31[3];
    v4 = (_QWORD *)v31[4];
    __swift_project_boxed_opaque_existential_1(v31, v20);
    v21 = v38;
    ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, _QWORD *))v4[4])(&v36, v19, v20, v4);
    v38 = v21;
    if (v21)
      break;
    if (v37 != 1)
      goto LABEL_16;
    if (v36 && (v17 & 1) == 0)
    {
      v22 = v31[3];
      v23 = v31[4];
      __swift_project_boxed_opaque_existential_1(v31, v22);
      v34 = 1;
      v35 = 0;
      (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v23 + 40))(v19, &v34, v22, v23);
LABEL_16:
      v4 = (_QWORD *)v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_1A5EDB2D8(0, v4[2] + 1, 1, v4);
      v25 = v4[2];
      v24 = v4[3];
      if (v25 >= v24 >> 1)
        v4 = sub_1A5EDB2D8((_QWORD *)(v24 > 1), v25 + 1, 1, v4);
      v4[2] = v25 + 1;
      v26 = &v4[2 * v25];
      v26[4] = v18;
      v26[5] = v14;
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    v4 = (_QWORD *)v33;
LABEL_7:
    v12 += 2;
    swift_release();
    if (!--v11)
      goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v5 = v29;
LABEL_3:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v32 + v5) + 16));
  return v4;
}

char *sub_1A5EDDEAC()
{
  return sub_1A5EDDEC0();
}

char *sub_1A5EDDEC0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *result;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  char v24;
  char *v25;
  char *v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  char v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  int64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  _QWORD v47[2];
  char *v48;
  void (*v49)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;

  v1 = v0;
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CE6B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v47 - v3;
  v5 = sub_1A5F63DD0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v47 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v47 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v47 - v16;
  result = (char *)sub_1A5EDE39C();
  if (v0)
    return v1;
  v54 = (uint64_t)v4;
  v55 = v8;
  v47[1] = 0;
  v56 = (char *)MEMORY[0x1E0DEE9D8];
  v51 = *((_QWORD *)result + 2);
  v53 = result;
  if (!v51)
  {
    v20 = v54;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v54, 1, 1, v5);
LABEL_20:
    swift_bridgeObjectRelease();
    sub_1A5ED43E0(v20, (unint64_t *)&qword_1ED1CE6B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v36 = v56;
    v37 = *((_QWORD *)v56 + 2);
    if (v37)
    {
      v56 = (char *)MEMORY[0x1E0DEE9D8];
      sub_1A5EDE4B0(0, v37, 0);
      v38 = &v36[(*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)];
      v54 = *(_QWORD *)(v6 + 72);
      v39 = *(char **)(v6 + 16);
      v52 = (void (*)(char *, uint64_t, uint64_t))v36;
      v53 = v39;
      do
      {
        v40 = v55;
        ((void (*)(char *, char *, uint64_t))v53)(v55, v38, v5);
        v41 = sub_1A5F63D58();
        v43 = v42;
        (*(void (**)(char *, uint64_t))(v6 + 8))(v40, v5);
        v1 = v56;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A5EDE4B0(0, *((_QWORD *)v1 + 2) + 1, 1);
          v1 = v56;
        }
        v45 = *((_QWORD *)v1 + 2);
        v44 = *((_QWORD *)v1 + 3);
        if (v45 >= v44 >> 1)
        {
          sub_1A5EDE4B0(v44 > 1, v45 + 1, 1);
          v1 = v56;
        }
        *((_QWORD *)v1 + 2) = v45 + 1;
        v46 = &v1[16 * v45];
        *((_QWORD *)v46 + 4) = v41;
        *((_QWORD *)v46 + 5) = v43;
        v38 += v54;
        --v37;
      }
      while (v37);
      swift_release();
    }
    else
    {
      swift_release();
      return (char *)MEMORY[0x1E0DEE9D8];
    }
    return v1;
  }
  v50 = v14;
  v48 = v11;
  v19 = 0;
  v20 = v54;
  while (v19 < *((_QWORD *)result + 2))
  {
    v21 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v22 = *(_QWORD *)(v6 + 72);
    v23 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 16);
    v23(v20, &result[v21 + v22 * v19], v5);
    v49 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56);
    v49(v20, 0, 1, v5);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v20, 1, v5) == 1)
      goto LABEL_20;
    v52 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 32);
    v52(v17, v20, v5);
    v24 = sub_1A5F63D4C();
    v25 = v17;
    v26 = v50;
    v27 = v25;
    ((void (*)(char *))v23)(v50);
    if ((v24 & 1) != 0)
      goto LABEL_9;
    sub_1A5F63D1C();
    if ((sub_1A5F64214() & 1) != 0)
    {
      swift_bridgeObjectRelease();
LABEL_9:
      v28 = *(void (**)(char *, uint64_t))(v6 + 8);
      v28(v26, v5);
      goto LABEL_10;
    }
    v29 = sub_1A5F64214();
    swift_bridgeObjectRelease();
    v28 = *(void (**)(char *, uint64_t))(v6 + 8);
    v28(v26, v5);
    if ((v29 & 1) == 0)
    {
      v17 = v27;
      v30 = v27;
      v31 = (void (*)(char *, char *, uint64_t))v52;
      v52(v48, (uint64_t)v30, v5);
      v32 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A5EDE648(0, *((_QWORD *)v32 + 2) + 1, 1);
        v32 = v56;
      }
      v34 = *((_QWORD *)v32 + 2);
      v33 = *((_QWORD *)v32 + 3);
      v35 = v34 + 1;
      if (v34 >= v33 >> 1)
      {
        v47[0] = v34 + 1;
        sub_1A5EDE648(v33 > 1, v34 + 1, 1);
        v35 = v47[0];
        v32 = v56;
      }
      *((_QWORD *)v32 + 2) = v35;
      v31(&v32[v21 + v34 * v22], v48, v5);
      v56 = v32;
      goto LABEL_11;
    }
LABEL_10:
    v17 = v27;
    v28(v27, v5);
LABEL_11:
    ++v19;
    result = v53;
    v20 = v54;
    if (v51 == v19)
    {
      v49(v54, 1, 1, v5);
      goto LABEL_20;
    }
  }
  __break(1u);
  return result;
}

void *sub_1A5EDE39C()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v1 = (void *)sub_1A5F63D64();
  v7[0] = 0;
  v2 = objc_msgSend(v0, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v1, 0, 4, v7);

  v3 = v7[0];
  if (v2)
  {
    sub_1A5F63DD0();
    v1 = (void *)sub_1A5F642A4();
    v4 = v3;

  }
  else
  {
    v5 = v7[0];
    sub_1A5F63CE0();

    swift_willThrow();
  }
  return v1;
}

uint64_t sub_1A5EDE4B0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A5EDE4CC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A5EDE4CC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1A5EDCBFC(0, &qword_1ED1CE568, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5EDE648(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A5EDE674(a1, a2, a3, (_QWORD *)*v3, &qword_1ED1CE1D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  *v3 = result;
  return result;
}

uint64_t sub_1A5EDE674(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1A5ECD49C(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for BatchRepair()
{
  uint64_t result;

  result = qword_1ED1CCC18;
  if (!qword_1ED1CCC18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5EDE8A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1A5EF11E8(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1A5F05308();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_release();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1A5EDE9FC(v15, a4 & 1);
  v21 = sub_1A5EF11E8(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A5F648C8();
  __break(1u);
  return result;
}

uint64_t sub_1A5EDE9FC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  sub_1A5EDD010(0, &qword_1ED1CD940, 255, (void (*)(uint64_t))type metadata accessor for UploadDropboxFile);
  v36 = a2;
  v6 = sub_1A5F6473C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1A5F64910();
    sub_1A5F6419C();
    result = sub_1A5F64928();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A5EDED20(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1A5EDEE44(a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (uint64_t *)(v18[7] + 16 * v12);
        result = swift_bridgeObjectRelease();
        *v19 = a1;
        v19[1] = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1A5F05688();
      goto LABEL_7;
    }
    sub_1A5EDF814(v15, a4 & 1);
    v21 = sub_1A5EDEE44(a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A5EDF790(v12, a3, a1, a2, v18);
      return sub_1A5EDF75C(a3);
    }
  }
  result = sub_1A5F648C8();
  __break(1u);
  return result;
}

unint64_t sub_1A5EDEE44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;
  char v5;

  sub_1A5F64910();
  sub_1A5EDF1F8(a1, (uint64_t)&v4);
  if ((v5 & 1) != 0)
  {
    sub_1A5F6491C();
    sub_1A5F6419C();
  }
  else
  {
    sub_1A5F6491C();
  }
  sub_1A5F6419C();
  v2 = sub_1A5F64928();
  return sub_1A5EDEF10(a1, v2);
}

unint64_t sub_1A5EDEF10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v18;
  char v20;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[4];
  char v29;
  _QWORD v30[4];
  char v31;
  _QWORD v32[4];
  char v33;

  sub_1A5EDF1F8(a1, (uint64_t)v28);
  v5 = -1 << *(_BYTE *)(v2 + 32);
  v6 = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v7 = v28[0];
    v26 = v28[2];
    v27 = v28[1];
    v25 = v28[3];
    v22 = v28[0];
    v23 = ~v5;
    v24 = v29;
    do
    {
      v9 = *(_QWORD *)(v2 + 48) + 40 * v6;
      v11 = *(_QWORD *)v9;
      v10 = *(_QWORD *)(v9 + 8);
      v13 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v9 + 24);
      v8 = *(_BYTE *)(v9 + 32);
      if ((v8 & 1) != 0)
      {
        sub_1A5EDF1F8(a1, (uint64_t)v32);
        if ((v33 & 1) == 0)
          goto LABEL_4;
        v14 = v32[2];
        v15 = v32[3];
        v16 = v11 == v32[0] && v10 == v32[1];
        if (!v16 && (sub_1A5F64880() & 1) == 0)
        {
          v8 = 1;
          v7 = v22;
LABEL_4:
          sub_1A5EDF730(v11, v10, v13, v12, v8);
          sub_1A5EDF75C(a1);
          sub_1A5EDF6F4(v11, v10, v13, v12, v8);
          sub_1A5EDF6F4(v7, v27, v26, v25, v24);
          goto LABEL_5;
        }
        if (v13 == v14 && v12 == v15)
          goto LABEL_27;
        v18 = sub_1A5F64880();
        sub_1A5EDF730(v11, v10, v13, v12, 1);
        sub_1A5EDF75C(a1);
        sub_1A5EDF6F4(v11, v10, v13, v12, 1);
        v7 = v22;
        sub_1A5EDF6F4(v22, v27, v26, v25, v24);
        if ((v18 & 1) != 0)
          return v6;
      }
      else
      {
        sub_1A5EDF1F8(a1, (uint64_t)v30);
        if ((v31 & 1) != 0)
          goto LABEL_4;
        if (v11 == v30[0] && v10 == v30[1])
        {
LABEL_27:
          sub_1A5EDF730(v11, v10, v13, v12, v8);
          sub_1A5EDF75C(a1);
          sub_1A5EDF6F4(v11, v10, v13, v12, v8);
          sub_1A5EDF6F4(v22, v27, v26, v25, v24);
          return v6;
        }
        v20 = sub_1A5F64880();
        sub_1A5EDF730(v11, v10, v13, v12, 0);
        sub_1A5EDF75C(a1);
        sub_1A5EDF6F4(v11, v10, v13, v12, 0);
        v7 = v22;
        sub_1A5EDF6F4(v22, v27, v26, v25, v24);
        if ((v20 & 1) != 0)
          return v6;
      }
LABEL_5:
      v6 = (v6 + 1) & v23;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

uint64_t sub_1A5EDF1F8(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

void sub_1A5EDF234(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t), char a6, uint64_t *a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char isUniquelyReferenced_nonNull_native;
  void *v33;
  char v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t *v53;
  void (*v54)(char *, uint64_t);
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  _QWORD v61[4];
  BOOL v62;
  void *v63;

  v54 = a5;
  v8 = v7;
  v50 = a1;
  v52 = a6 & 1;
  v13 = sub_1A5F63F2C();
  v47 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a7;
  v48 = a7[1];
  v49 = v16;
  v53 = a2;
  v18 = *a2;
  v17 = a2[1];
  v51 = a3;
  if (!a4)
    a3 = 0;
  v61[0] = v18;
  v61[1] = v17;
  v61[2] = a3;
  v61[3] = a4;
  v62 = a4 != 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_unfair_lock_lock_with_options();
  v19 = (void **)(v8 + 10);
  swift_beginAccess();
  v20 = v8[10];
  v21 = *(_QWORD *)(v20 + 16);
  v56 = v18;
  v57 = a3;
  v58 = v17;
  if (v21)
  {
    sub_1A5EDF730(v18, v17, a3, a4, a4 != 0);
    v22 = sub_1A5EDEE44((uint64_t)v61);
    if ((v23 & 1) != 0)
    {
      v24 = (uint64_t *)(*(_QWORD *)(v20 + 56) + 16 * v22);
      v25 = *v24;
      v26 = v24[1];
      swift_endAccess();
      swift_bridgeObjectRetain();
      v27 = v25;
      sub_1A5EDF6F4(v18, v17, a3, a4, a4 != 0);
      goto LABEL_8;
    }
    sub_1A5EDF6F4(v18, v17, a3, a4, a4 != 0);
  }
  v46 = v8;
  swift_endAccess();
  sub_1A5F63F20();
  v28 = sub_1A5F63F14();
  v29 = v13;
  v26 = v30;
  v31 = v15;
  v27 = v28;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v31, v29);
  swift_beginAccess();
  sub_1A5EDF730(v18, v17, a3, a4, a4 != 0);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v63 = *v19;
  *v19 = (void *)0x8000000000000000;
  sub_1A5EDED20(v27, v26, (uint64_t)v61, isUniquelyReferenced_nonNull_native);
  *v19 = v63;
  swift_bridgeObjectRelease();
  v8 = v46;
  sub_1A5EDF6F4(v18, v17, a3, a4, a4 != 0);
  swift_endAccess();
LABEL_8:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8[11] + 16));
  __swift_project_boxed_opaque_existential_1(v8 + 4, v8[7]);
  v59 = v49;
  v60 = v48;
  v33 = v55;
  v34 = sub_1A5ED6AB8(v50, v27, v26, v51, a4, v54, v52, (uint64_t)v53, a4 == 0, &v59);
  if (v33)
  {
    swift_bridgeObjectRelease();
    sub_1A5EDF6F4(v56, v58, v57, a4, a4 != 0);
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v35 = (id)qword_1ED1CE7B0;
    sub_1A5F6443C();
    sub_1A5EDD448();
    v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1A5F679D0;
    v59 = 0;
    v60 = 0xE000000000000000;
    v63 = v33;
    sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
    sub_1A5F646F4();
    v37 = v59;
    v38 = v60;
    *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v36 + 64) = sub_1A5EE19C8();
    *(_QWORD *)(v36 + 32) = v37;
    *(_QWORD *)(v36 + 40) = v38;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = v34;
    swift_bridgeObjectRelease();
    v40 = v58;
    if ((v39 & 1) != 0)
    {
      os_unfair_lock_lock_with_options();
      swift_beginAccess();
      sub_1A5EBD268((uint64_t)v61);
      swift_endAccess();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8[11] + 16));
      swift_bridgeObjectRelease();
      v42 = v56;
      v43 = v57;
      v44 = v40;
      v45 = a4;
      v41 = a4 != 0;
    }
    else
    {
      v41 = a4 != 0;
      v42 = v56;
      v43 = v57;
      v44 = v58;
      v45 = a4;
    }
    sub_1A5EDF6F4(v42, v44, v43, v45, v41);
  }
}

uint64_t sub_1A5EDF6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if ((a5 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A5EDF730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A5EDF75C(uint64_t a1)
{
  sub_1A5EDF730(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_1A5EDF790(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t result;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  result = sub_1A5EDF1F8(a2, a5[6] + 40 * a1);
  v10 = (_QWORD *)(a5[7] + 16 * a1);
  *v10 = a3;
  v10[1] = a4;
  v11 = a5[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a5[2] = v13;
  return result;
}

uint64_t sub_1A5EDF814(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t i;
  char v43;
  int64_t v44;
  uint64_t v45;

  v3 = v2;
  v5 = *v2;
  sub_1A5F069E8(0, &qword_1ED1CE1C8, (void (*)(void))sub_1A5EF8D14);
  v43 = a2;
  v6 = sub_1A5F6473C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v41 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v40 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v44 = v13;
        v18 = v17 | (v13 << 6);
      }
      else
      {
        v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v19 >= v40)
          goto LABEL_35;
        v20 = v41[v19];
        v21 = v13 + 1;
        if (!v20)
        {
          v21 = v13 + 2;
          if (v13 + 2 >= v40)
            goto LABEL_35;
          v20 = v41[v21];
          if (!v20)
          {
            v22 = v13 + 3;
            if (v13 + 3 >= v40)
            {
LABEL_35:
              swift_release();
              v3 = v2;
              if ((v43 & 1) != 0)
              {
                v39 = 1 << *(_BYTE *)(v5 + 32);
                if (v39 >= 64)
                  bzero(v41, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v41 = -1 << v39;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v41[v22];
            if (!v20)
            {
              while (1)
              {
                v21 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v21 >= v40)
                  goto LABEL_35;
                v20 = v41[v21];
                ++v22;
                if (v20)
                  goto LABEL_21;
              }
            }
            v21 = v13 + 3;
          }
        }
LABEL_21:
        v10 = (v20 - 1) & v20;
        v44 = v21;
        v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      v23 = *(_QWORD *)(v5 + 56);
      v24 = *(_QWORD *)(v5 + 48) + 40 * v18;
      v26 = *(_QWORD *)v24;
      v25 = *(_QWORD *)(v24 + 8);
      v28 = *(_QWORD *)(v24 + 16);
      v27 = *(_QWORD *)(v24 + 24);
      v29 = *(_BYTE *)(v24 + 32);
      v30 = (uint64_t *)(v23 + 16 * v18);
      v31 = v30[1];
      v45 = *v30;
      if ((v43 & 1) == 0)
      {
        sub_1A5EDF730(v26, v25, v28, v27, v29);
        swift_bridgeObjectRetain();
      }
      sub_1A5F64910();
      sub_1A5F6491C();
      if ((v29 & 1) != 0)
        sub_1A5F6419C();
      sub_1A5F6419C();
      result = sub_1A5F64928();
      v32 = -1 << *(_BYTE *)(v7 + 32);
      v33 = result & ~v32;
      v34 = v33 >> 6;
      if (((-1 << v33) & ~*(_QWORD *)(v11 + 8 * (v33 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v11 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v35 = 0;
        v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v37 = v34 == v36;
          if (v34 == v36)
            v34 = 0;
          v35 |= v37;
          v38 = *(_QWORD *)(v11 + 8 * v34);
        }
        while (v38 == -1);
        v14 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = *(_QWORD *)(v7 + 48) + 40 * v14;
      *(_QWORD *)v15 = v26;
      *(_QWORD *)(v15 + 8) = v25;
      *(_QWORD *)(v15 + 16) = v28;
      *(_QWORD *)(v15 + 24) = v27;
      *(_BYTE *)(v15 + 32) = v29;
      v16 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v14);
      v13 = v44;
      *v16 = v45;
      v16[1] = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A5EDFBA4(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9D8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_1A5F3D024(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_1A5F64220();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_1A5F641A8();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_1A5F641A8();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_1A5F64238();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_1A5EE0094(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_1A5EE0094((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_1A5F641A8();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_1A5F64238();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1A5EE0094(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_1A5EE0094((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1A5F64700();
  __break(1u);
LABEL_42:
  result = sub_1A5F64700();
  __break(1u);
  return result;
}

uint64_t sub_1A5EE0040(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_1A5F64880() & 1;
}

_QWORD *sub_1A5EE0094(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1A5EDCBFC(0, &qword_1ED1CE1F8, MEMORY[0x1E0DEBAF0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A5EE01B4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5EE01B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

void sub_1A5EE02A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CC190)
  {
    sub_1A5EF84F0(255, (unint64_t *)&qword_1ED1CFAE0);
    v0 = sub_1A5F6431C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CC190);
  }
}

void sub_1A5EE030C(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1A5EE0360(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unsigned __int8 *a7)
{
  sub_1A5EE03DC(a1, a2, a3, a4, a5, a6, a7);
}

void sub_1A5EE0374(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_lock;
  os_unfair_lock_lock_with_options();
  v6 = v3;
  v7 = v4;
  sub_1A5EE45E0(a1, &v6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(a1 + v5) + 16));
}

void sub_1A5EE03DC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unsigned __int8 *a7)
{
  void *v7;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v87;
  unint64_t v90;
  uint64_t v91;

  v83 = *a7;
  v82 = OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_lock;
  os_unfair_lock_lock_with_options();
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v91 = a1;
  sub_1A5F63DAC();
  v11 = (void *)sub_1A5F6410C();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_createFileAtPath_contents_attributes_, v11, 0, 0);

  v12 = sub_1A5EE7084();
  v14 = v13;
  swift_bridgeObjectRetain();
  v80 = sub_1A5EE259C(v12, v14);
  v81 = v15;
  sub_1A5EE1A0C(v80, v15);
  v16 = &unk_1ED1CF000;
  v84 = a5;
  if (v7)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v17 = (id)qword_1ED1CE7B0;
    sub_1A5F6443C();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1A5F66C40;
    v19 = sub_1A5F63DAC();
    v21 = v20;
    v22 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
    v23 = sub_1A5EE19C8();
    *(_QWORD *)(v18 + 64) = v23;
    *(_QWORD *)(v18 + 32) = v19;
    *(_QWORD *)(v18 + 40) = v21;
    sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
    sub_1A5F646F4();
    *(_QWORD *)(v18 + 96) = v22;
    *(_QWORD *)(v18 + 104) = v23;
    *(_QWORD *)(v18 + 72) = 0;
    *(_QWORD *)(v18 + 80) = 0xE000000000000000;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    v16 = (_QWORD *)&unk_1ED1CF000;
  }
  else
  {
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v24 = (id)qword_1ED1CE7B0;
    sub_1A5F64430();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1A5F66C40;
    v26 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
    v27 = sub_1A5EE19C8();
    *(_QWORD *)(v25 + 32) = v12;
    *(_QWORD *)(v25 + 40) = v14;
    v29 = *(_QWORD *)(v91 + 16);
    v28 = *(_QWORD *)(v91 + 24);
    *(_QWORD *)(v25 + 96) = v26;
    *(_QWORD *)(v25 + 104) = v27;
    *(_QWORD *)(v25 + 64) = v27;
    *(_QWORD *)(v25 + 72) = v29;
    *(_QWORD *)(v25 + 80) = v28;
    swift_bridgeObjectRetain();
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
  }
  sub_1A5EE3314();
  v30 = sub_1A5F645BC();
  v78 = sub_1A5EE259C(v30, v31);
  v79 = v32;
  sub_1A5EE1A0C(v78, v32);
  if (v16[385] != -1)
    swift_once();
  v33 = (id)qword_1ED1CE7B0;
  sub_1A5F64430();
  sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1A5F66C40;
  v35 = ContentType.description.getter(a4);
  v37 = v36;
  v38 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
  v39 = sub_1A5EE19C8();
  *(_QWORD *)(v34 + 32) = v35;
  *(_QWORD *)(v34 + 40) = v37;
  v41 = *(_QWORD *)(v91 + 16);
  v40 = *(_QWORD *)(v91 + 24);
  *(_QWORD *)(v34 + 96) = v38;
  *(_QWORD *)(v34 + 104) = v39;
  *(_QWORD *)(v34 + 64) = v39;
  *(_QWORD *)(v34 + 72) = v41;
  *(_QWORD *)(v34 + 80) = v40;
  swift_bridgeObjectRetain();
  sub_1A5F63F80();

  swift_bridgeObjectRelease();
  if (a6)
  {
    swift_bridgeObjectRetain_n();
    v42 = sub_1A5EE259C(v84, a6);
    v44 = v43;
    sub_1A5EE1A0C(v42, v43);
    if (v16[385] != -1)
      swift_once();
    v45 = (id)qword_1ED1CE7B0;
    sub_1A5F64430();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_1A5F66C40;
    v47 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v46 + 56) = MEMORY[0x1E0DEA968];
    v48 = sub_1A5EE19C8();
    *(_QWORD *)(v46 + 32) = v84;
    *(_QWORD *)(v46 + 40) = a6;
    v50 = *(_QWORD *)(v91 + 16);
    v49 = *(_QWORD *)(v91 + 24);
    *(_QWORD *)(v46 + 96) = v47;
    *(_QWORD *)(v46 + 104) = v48;
    *(_QWORD *)(v46 + 64) = v48;
    *(_QWORD *)(v46 + 72) = v50;
    *(_QWORD *)(v46 + 80) = v49;
    swift_bridgeObjectRetain();
    sub_1A5F63F80();
    sub_1A5EF0908(v42, v44);

    swift_bridgeObjectRelease();
  }
  type metadata accessor for Session();
  sub_1A5F63ED8();
  v51 = sub_1A5F64364();
  v85 = sub_1A5EE259C(v51, v52);
  v87 = v53;
  sub_1A5EE1A0C(v85, v53);
  if (v16[385] != -1)
    swift_once();
  v54 = (id)qword_1ED1CE7B0;
  sub_1A5F64430();
  sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_1A5F679D0;
  v56 = *(_QWORD *)(v91 + 16);
  v57 = *(_QWORD *)(v91 + 24);
  *(_QWORD *)(v55 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v55 + 64) = sub_1A5EE19C8();
  *(_QWORD *)(v55 + 32) = v56;
  *(_QWORD *)(v55 + 40) = v57;
  swift_bridgeObjectRetain();
  sub_1A5F63F80();

  swift_bridgeObjectRelease();
  v59 = *a2;
  v58 = a2[1];
  swift_bridgeObjectRetain();
  v77 = sub_1A5EE259C(v59, v58);
  v90 = v60;
  sub_1A5EE1A0C(v77, v60);
  if (qword_1ED1CFC08 != -1)
    swift_once();
  v61 = (id)qword_1ED1CE7B0;
  sub_1A5F64430();
  sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v62 = swift_allocObject();
  *(_OWORD *)(v62 + 16) = xmmword_1A5F66C40;
  v63 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v62 + 56) = MEMORY[0x1E0DEA968];
  v64 = sub_1A5EE19C8();
  *(_QWORD *)(v62 + 32) = v59;
  *(_QWORD *)(v62 + 40) = v58;
  v65 = *(_QWORD *)(v91 + 16);
  v66 = *(_QWORD *)(v91 + 24);
  *(_QWORD *)(v62 + 96) = v63;
  *(_QWORD *)(v62 + 104) = v64;
  *(_QWORD *)(v62 + 64) = v64;
  *(_QWORD *)(v62 + 72) = v65;
  *(_QWORD *)(v62 + 80) = v66;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A5F63F80();

  swift_bridgeObjectRelease();
  if (v83 != 5)
  {
    v67 = sub_1A5F64364();
    v69 = sub_1A5EE259C(v67, v68);
    sub_1A5EE1A0C(v69, v70);
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v71 = (id)qword_1ED1CE7B0;
    sub_1A5F64430();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = xmmword_1A5F66C40;
    v73 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v72 + 56) = MEMORY[0x1E0DEA968];
    v74 = sub_1A5EE19C8();
    *(_QWORD *)(v72 + 32) = v59;
    *(_QWORD *)(v72 + 40) = v58;
    v75 = *(_QWORD *)(v91 + 16);
    v76 = *(_QWORD *)(v91 + 24);
    *(_QWORD *)(v72 + 96) = v73;
    *(_QWORD *)(v72 + 104) = v74;
    *(_QWORD *)(v72 + 64) = v74;
    *(_QWORD *)(v72 + 72) = v75;
    *(_QWORD *)(v72 + 80) = v76;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    __asm { BR              X10 }
  }
  sub_1A5EF0908(v77, v90);
  sub_1A5EF0908(v85, v87);
  sub_1A5EF0908(v78, v79);
  sub_1A5EF0908(v80, v81);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v91 + v82) + 16));
}

void sub_1A5EE1634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1A5EE1648(a1, a2, a3);
}

void sub_1A5EE1648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD v26[4];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v7 = sub_1A5F63DD0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_lock;
  os_unfair_lock_lock_with_options();
  v12 = OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_fileHandle;
  v13 = *(void **)(a3 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_fileHandle);
  if (v13)
  {
    v14 = *(id *)(a3 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_fileHandle);
  }
  else
  {
    v29 = a2;
    sub_1A5EE3554();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_url, v7);
    v16 = sub_1A5EE3590((uint64_t)v10);
    if (v3)
      goto LABEL_8;
    v17 = *(void **)(a3 + v12);
    *(_QWORD *)(a3 + v12) = v16;
    v14 = v16;

    v13 = 0;
    a2 = v29;
  }
  v15 = v13;
  sub_1A5F64418();
  if (!v3)
  {
    v27 = a1;
    v28 = a2;
    sub_1A5F47EB8();
    sub_1A5F64400();
    v29 = a1;
    v18 = sub_1A5EE2354((uint64_t)&unk_1E4FCE858);
    v20 = v19;
    sub_1A5EE1A0C(v18, v19);
    sub_1A5EF0908(v18, v20);
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v21 = (id)qword_1ED1CE7B0;
    v26[3] = sub_1A5F64430();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1A5F679D0;
    v23 = UploadDropboxFile.description.getter();
    v25 = v24;
    *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v22 + 64) = sub_1A5EE19C8();
    *(_QWORD *)(v22 + 32) = v23;
    *(_QWORD *)(v22 + 40) = v25;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    __asm { BR              X11 }
  }

LABEL_8:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(a3 + v11) + 16));
}

unint64_t sub_1A5EE19C8()
{
  unint64_t result;

  result = qword_1ED1CF808;
  if (!qword_1ED1CF808)
  {
    result = MEMORY[0x1A85B8C3C](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED1CF808);
  }
  return result;
}

void sub_1A5EE1A0C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5EE1A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t result;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t inited;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  void *v27;
  int v28;
  char v29;
  char v30;
  char v31;
  char v32;
  __int16 v33;
  char v34;
  char v35;
  char v36;
  char v37;

  LOWORD(v28) = v2;
  BYTE2(v28) = BYTE2(v2);
  HIBYTE(v28) = BYTE3(v2);
  v29 = BYTE4(v2);
  v30 = BYTE5(v2);
  v31 = BYTE6(v2);
  v32 = HIBYTE(v2);
  v33 = v3;
  v34 = BYTE2(v3);
  v35 = BYTE3(v3);
  v36 = BYTE4(v3);
  v37 = BYTE5(v3);
  sub_1A5F63DAC();
  v4 = BYTE6(v3);
  v5 = sub_1A5F64184();
  swift_bridgeObjectRelease();
  v6 = sub_1A5F64184();
  v7 = setxattr((const char *)(v5 + 32), (const char *)(v6 + 32), &v28, v4, 0, 0);
  swift_release();
  result = swift_release();
  if (v7 < 0)
  {
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v9 = (id)qword_1ED1CE7B0;
    sub_1A5F6443C();
    sub_1A5F50EB8(0, (unint64_t *)&qword_1ED1CFBF8, (void (*)(uint64_t))sub_1A5EF7500);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1A5F66C50;
    v11 = sub_1A5F63DAC();
    v13 = v12;
    v14 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    v15 = sub_1A5EE19C8();
    *(_QWORD *)(v10 + 32) = v11;
    *(_QWORD *)(v10 + 40) = v13;
    *(_QWORD *)(v10 + 96) = v14;
    *(_QWORD *)(v10 + 104) = v15;
    *(_QWORD *)(v10 + 64) = v15;
    *(_QWORD *)(v10 + 72) = v1;
    *(_QWORD *)(v10 + 80) = v0;
    v16 = swift_bridgeObjectRetain();
    v28 = MEMORY[0x1A85B7CD0](v16);
    v17 = sub_1A5F64844();
    *(_QWORD *)(v10 + 136) = v14;
    *(_QWORD *)(v10 + 144) = v15;
    *(_QWORD *)(v10 + 112) = v17;
    *(_QWORD *)(v10 + 120) = v18;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    sub_1A5F64130();
    v19 = MEMORY[0x1A85B7CD0]();
    sub_1A5F50EB8(0, &qword_1ED1CE1F0, (void (*)(uint64_t))sub_1A5ED7E58);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A5F679D0;
    *(_QWORD *)(inited + 32) = sub_1A5F64130();
    *(_QWORD *)(inited + 40) = v21;
    v22 = MEMORY[0x1A85B7CD0]();
    if (!strerror(v22))
    {
      __break(1u);
      JUMPOUT(0x1A5EE1ECCLL);
    }
    v23 = sub_1A5F641C0();
    *(_QWORD *)(inited + 72) = v14;
    *(_QWORD *)(inited + 48) = v23;
    *(_QWORD *)(inited + 56) = v24;
    sub_1A5ED7CC8(inited);
    v25 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v26 = (void *)sub_1A5F6410C();
    swift_bridgeObjectRelease();
    v27 = (void *)sub_1A5F640A0();
    swift_bridgeObjectRelease();
    objc_msgSend(v25, sel_initWithDomain_code_userInfo_, v26, v19, v27);

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1A5EE1EF0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t UploadDropboxFile.description.getter()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = MEMORY[0x1E0DEB940];
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - v3;
  v5 = MEMORY[0x1E0DEA968];
  sub_1A5EDCBFC(0, &qword_1ED1CE568, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1A5F6A660;
  v7 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v6 + 32) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v6 + 40) = v7;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v6 + 48) = sub_1A5F63D1C();
  *(_QWORD *)(v6 + 56) = v8;
  v26 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_eventCount);
  v28 = sub_1A5F64844();
  v29 = v9;
  sub_1A5F641B4();
  v10 = v29;
  *(_QWORD *)(v6 + 64) = v28;
  *(_QWORD *)(v6 + 72) = v10;
  v26 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_byteSize);
  v28 = sub_1A5F64844();
  v29 = v11;
  sub_1A5F641B4();
  v12 = v29;
  *(_QWORD *)(v6 + 80) = v28;
  *(_QWORD *)(v6 + 88) = v12;
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_userAgent + 8);
  v28 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_userAgent);
  v29 = v13;
  sub_1A5EDCBFC(0, &qword_1ED1CC458, v5, (uint64_t (*)(_QWORD, uint64_t))v1);
  swift_bridgeObjectRetain();
  *(_QWORD *)(v6 + 96) = sub_1A5F6416C();
  *(_QWORD *)(v6 + 104) = v14;
  v15 = *(_BYTE *)(v0 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_contentType + 8);
  v28 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_contentType);
  LOBYTE(v29) = v15;
  sub_1A5EDCBFC(0, &qword_1ED1CC5A8, (uint64_t)&type metadata for ContentType, (uint64_t (*)(_QWORD, uint64_t))v1);
  *(_QWORD *)(v6 + 112) = sub_1A5F6416C();
  *(_QWORD *)(v6 + 120) = v16;
  v17 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_groupName + 8);
  v28 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_groupName);
  v29 = v17;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v6 + 128) = sub_1A5F6416C();
  *(_QWORD *)(v6 + 136) = v18;
  v19 = v0 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_sessionStartDate;
  swift_beginAccess();
  sub_1A5EE229C(v19, (uint64_t)v4);
  *(_QWORD *)(v6 + 144) = sub_1A5F6416C();
  *(_QWORD *)(v6 + 152) = v20;
  v21 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_sessionID + 8);
  v26 = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_sessionID);
  v27 = v21;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v6 + 160) = sub_1A5F6416C();
  *(_QWORD *)(v6 + 168) = v22;
  v26 = v6;
  sub_1A5EDCBFC(0, (unint64_t *)&qword_1ED1CD930, v5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1A5EE2420((unint64_t *)&qword_1ED1CE1B0, (unint64_t *)&qword_1ED1CD930, v5, MEMORY[0x1E0DEAF20]);
  v23 = sub_1A5F64100();
  swift_bridgeObjectRelease();
  return v23;
}

void sub_1A5EE2254(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEA968]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1A5EE229C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5EE22F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CE6B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5EE2354(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v10;
  _QWORD v11[5];

  v2 = MEMORY[0x1E0DEDE70];
  sub_1A5EDCBFC(0, qword_1ED1CC460, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v4 = v3;
  v11[3] = v3;
  v11[4] = sub_1A5EE2420(&qword_1ED1CC588, qword_1ED1CC460, v2, MEMORY[0x1E0CB1B08]);
  v11[0] = a1;
  v5 = __swift_project_boxed_opaque_existential_1(v11, v4);
  v6 = (_BYTE *)(*v5 + 32);
  v7 = &v6[*(_QWORD *)(*v5 + 16)];
  swift_bridgeObjectRetain();
  sub_1A5EE2468(v6, v7, &v10);
  v8 = v10;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  return v8;
}

uint64_t sub_1A5EE2420(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1A5EDCBFC(255, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1A85B8C3C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

_BYTE *sub_1A5EE2468@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_1A5EE24DC(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_1A5F472A0((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_1A5EE30BC((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1A5EE24DC(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_1A5EE259C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  _BYTE *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x1E0C80C00];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  sub_1A5EE2EE8(0, &qword_1ED1CC598);
  swift_bridgeObjectRetain();
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_1A5EE2F34((uint64_t)v14);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_1A5F64670();
      }
      if (v2)
        v4 = (_BYTE *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_BYTE *)v2;
    }
    v6 = sub_1A5EE3058(v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_1A5F641CC();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = sub_1A5EE40F4(v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x1E0C80A78](*(_QWORD *)&v14[0]);
    sub_1A5F46300();
    __asm { BR              X12 }
  }
  sub_1A5EC1D18(v14, (uint64_t)v17);
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  sub_1A5F63C74();
  swift_bridgeObjectRelease();
  v14[0] = v16;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

uint64_t sub_1A5EE2A9C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16[2];
  uint64_t v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)&v18 = a1;
  *((_QWORD *)&v18 + 1) = a2;
  v19 = a3;
  v20 = a4;
  sub_1A5EE2EE8(0, &qword_1ED1CC598);
  swift_bridgeObjectRetain();
  if (swift_dynamicCast())
  {
    sub_1A5EC1D18(v16, (uint64_t)&v13);
    __swift_project_boxed_opaque_existential_1(&v13, v15);
    sub_1A5F63C74();
    swift_bridgeObjectRelease();
    v16[0] = v18;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v13);
  }
  else
  {
    v17 = 0;
    memset(v16, 0, sizeof(v16));
    sub_1A5EE2F34((uint64_t)v16);
    sub_1A5F46F54(a1, a2, a3, a4, &v13);
    v5 = v13;
    v4 = v14;
    if (v14 >> 60 == 15)
    {
      v6 = sub_1A5F45FF4(a1, a2, a3, a4);
      *(_QWORD *)&v16[0] = sub_1A5EE40F4(v6);
      *((_QWORD *)&v16[0] + 1) = v7;
      MEMORY[0x1E0C80A78](*(_QWORD *)&v16[0]);
      sub_1A5F465F0();
      __asm { BR              X12 }
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)&v16[0] = v5;
    *((_QWORD *)&v16[0] + 1) = v4;
  }
  return *(_QWORD *)&v16[0];
}

uint64_t sub_1A5EE2EE8(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1A5EE2F34(uint64_t a1)
{
  uint64_t v2;

  sub_1A5EBB7B0(0, &qword_1ED1CC5A0, &qword_1ED1CC598, MEMORY[0x1E0CAEE40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A5EE2F90@<X0>(uint64_t __src@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!__src)
    goto LABEL_7;
  if (!a2)
  {
    __src = 0;
LABEL_7:
    v6 = 0xC000000000000000;
    goto LABEL_10;
  }
  if (a2 <= 14)
  {
    __src = sub_1A5EE24DC((_BYTE *)__src, (_BYTE *)(__src + a2));
    v6 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else
  {
    sub_1A5F63C68();
    swift_allocObject();
    v5 = sub_1A5F63C20();
    if ((unint64_t)a2 >= 0x7FFFFFFF)
    {
      sub_1A5F63DE8();
      __src = swift_allocObject();
      *(_QWORD *)(__src + 16) = 0;
      *(_QWORD *)(__src + 24) = a2;
      v6 = v5 | 0x8000000000000000;
    }
    else
    {
      __src = a2 << 32;
      v6 = v5 | 0x4000000000000000;
    }
  }
LABEL_10:
  *a3 = __src;
  a3[1] = v6;
  return __src;
}

_BYTE *sub_1A5EE3058(_BYTE *result, _BYTE *a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (_BYTE *)sub_1A5EE24DC(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (_BYTE *)sub_1A5F472A0((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (_BYTE *)sub_1A5EE30BC((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_1A5EE30BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1A5F63C68();
  swift_allocObject();
  result = sub_1A5F63C20();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

_QWORD *sub_1A5EE313C(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, _QWORD *, char *))
{
  uint64_t v3;
  _QWORD *result;
  _QWORD *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  result = (_QWORD *)sub_1A5F63C2C();
  v8 = result;
  if (result)
  {
    result = (_QWORD *)sub_1A5F63C50();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v8 = (_QWORD *)((char *)v8 + a1 - (_QWORD)result);
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_15;
  }
  v11 = sub_1A5F63C44();
  if (v11 >= v10)
    v12 = v10;
  else
    v12 = v11;
  v13 = (char *)v8 + v12;
  if (v8)
    v14 = v13;
  else
    v14 = 0;
  result = a3(&v15, v8, v14);
  if (!v3)
    return (_QWORD *)v15;
  return result;
}

void sub_1A5EE31E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1A5EE3204(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

void sub_1A5EE3204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1A5F63DAC();
  __asm { BR              X10 }
}

uint64_t sub_1A5EE3268()
{
  int *v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t result;

  v3 = sub_1A5F64184();
  swift_bridgeObjectRelease();
  v4 = sub_1A5F64184();
  v5 = setxattr((const char *)(v3 + 32), (const char *)(v4 + 32), v1, BYTE6(v2), 0, 0);
  swift_release();
  result = swift_release();
  *v0 = v5;
  return result;
}

unint64_t sub_1A5EE3314()
{
  unint64_t result;

  result = qword_1ED1CE188;
  if (!qword_1ED1CE188)
  {
    result = MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED1CE188);
  }
  return result;
}

char *sub_1A5EE3358(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  unsigned __int8 v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  _BYTE *v16;
  id v17;
  id v18;
  void *v20;
  id v21[2];

  v21[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = sub_1A5F63DD0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_lock;
  os_unfair_lock_lock_with_options();
  v8 = OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_fileHandle;
  v9 = *(void **)(a1 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_fileHandle);
  if (v9)
  {
    v10 = *(id *)(a1 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_fileHandle);
  }
  else
  {
    sub_1A5EE3554();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_url, v3);
    v18 = sub_1A5EE3590((uint64_t)v6);
    if (v1)
      goto LABEL_11;
    v20 = *(void **)(a1 + v8);
    *(_QWORD *)(a1 + v8) = v18;
    v10 = v18;

    v9 = 0;
  }
  v21[0] = 0;
  v11 = v9;
  v12 = objc_msgSend(v10, sel_seekToOffset_error_, 0, v21);
  v6 = (char *)v21[0];
  if ((v12 & 1) == 0)
  {
    v17 = v21[0];
    sub_1A5F63CE0();

LABEL_8:
    swift_willThrow();
    goto LABEL_9;
  }
  v13 = v21[0];
  v14 = sub_1A5F6440C();
  if (!v1)
  {
    if (v15 >> 60 != 15)
    {
      v6 = (char *)v14;

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(a1 + v7) + 16));
      return v6;
    }
    sub_1A5F47E74();
    swift_allocError();
    *v16 = 1;
    goto LABEL_8;
  }
LABEL_9:

LABEL_11:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(a1 + v7) + 16));
  return v6;
}

unint64_t sub_1A5EE3554()
{
  unint64_t result;

  result = qword_1ED1CE1B8;
  if (!qword_1ED1CE1B8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1CE1B8);
  }
  return result;
}

id sub_1A5EE3590(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)sub_1A5F63D64();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForUpdatingURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = sub_1A5F63DD0();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_1A5F63CE0();

    swift_willThrow();
    v9 = sub_1A5F63DD0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t sub_1A5EE36A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  int v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unsigned __int8 *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t *v57;
  char v58;
  _QWORD v59[2];
  uint64_t v60;

  v2 = sub_1A5F64160();
  MEMORY[0x1E0C80A78](v2);
  result = (uint64_t)sub_1A5EE3ECC(0xD00000000000003DLL, 0x80000001A5F71810, 512);
  v5 = v4;
  if (v4 >> 60 == 15)
    goto LABEL_13;
  v6 = result;
  sub_1A5F64154();
  v7 = sub_1A5F6413C();
  if (!v8)
  {
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v18 = (id)qword_1ED1CE7B0;
    LODWORD(v57) = sub_1A5F6443C();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1A5F66C40;
    v20 = sub_1A5F63DAC();
    v22 = v21;
    v23 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
    v24 = sub_1A5EE19C8();
    *(_QWORD *)(v19 + 64) = v24;
    *(_QWORD *)(v19 + 32) = v20;
    *(_QWORD *)(v19 + 40) = v22;
    v25 = (void *)sub_1A5F63E24();
    v26 = objc_msgSend(v25, sel_description);

    v27 = sub_1A5F64130();
    v29 = v28;

    *(_QWORD *)(v19 + 96) = v23;
    *(_QWORD *)(v19 + 104) = v24;
    *(_QWORD *)(v19 + 72) = v27;
    *(_QWORD *)(v19 + 80) = v29;
    sub_1A5F63F80();
    sub_1A5EE45CC(v6, v5);

    goto LABEL_2;
  }
  v9 = v7;
  v10 = v8;
  v60 = 0;
  MEMORY[0x1E0C80A78](v7);
  *(&v56 - 2) = (uint64_t)&v60;
  if ((v11 & 0x1000000000000000) != 0 || !(v10 & 0x2000000000000000 | v9 & 0x1000000000000000))
  {
    swift_bridgeObjectRetain();
    sub_1A5F64628();
    swift_bridgeObjectRelease();
    if ((v58 & 1) != 0)
      goto LABEL_12;
    goto LABEL_23;
  }
  v57 = &v56;
  if ((v10 & 0x2000000000000000) != 0)
  {
    v59[0] = v9;
    v59[1] = v10 & 0xFFFFFFFFFFFFFFLL;
    if (v9 <= 0x20u && ((1 << v9) & 0x100003E01) != 0)
    {
      swift_bridgeObjectRetain();
LABEL_22:
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    swift_bridgeObjectRetain();
    v39 = (unsigned __int8 *)_swift_stdlib_strtod_clocale();
    if (!v39)
      goto LABEL_22;
    v40 = *v39;
    swift_bridgeObjectRelease();
    if (!v40)
      goto LABEL_12;
LABEL_23:
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v31 = (id)qword_1ED1CE7B0;
    LODWORD(v57) = sub_1A5F6443C();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1A5F66C40;
    v33 = sub_1A5F63DAC();
    v35 = v34;
    v36 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEA968];
    v37 = sub_1A5EE19C8();
    *(_QWORD *)(v32 + 32) = v33;
    *(_QWORD *)(v32 + 40) = v35;
    *(_QWORD *)(v32 + 96) = v36;
    *(_QWORD *)(v32 + 104) = v37;
    *(_QWORD *)(v32 + 64) = v37;
    *(_QWORD *)(v32 + 72) = v9;
    *(_QWORD *)(v32 + 80) = v10;
    sub_1A5F63F80();
    sub_1A5EE45CC(v6, v5);

    goto LABEL_2;
  }
  v56 = (uint64_t)&v56;
  if ((v9 & 0x1000000000000000) != 0)
  {
    v12 = (v10 & 0xFFFFFFFFFFFFFFFLL) + 32;
    swift_bridgeObjectRetain();
LABEL_10:
    v13 = (_BYTE *)v12;
    goto LABEL_11;
  }
  v12 = sub_1A5F64670();
  swift_bridgeObjectRetain();
  if (v12)
    goto LABEL_10;
  v13 = 0;
LABEL_11:
  sub_1A5F481A0(v13, (BOOL *)v59);
  v14 = LOBYTE(v59[0]);
  swift_bridgeObjectRelease();
  if (!v14)
    goto LABEL_23;
LABEL_12:
  swift_bridgeObjectRelease();
  v15 = v60;
  v16 = sub_1A5EE3ECC(0xD000000000000042, 0x80000001A5F71920, 512);
  v38 = v17;
  if (v17 >> 60 == 15)
  {
    result = sub_1A5EE45CC(v6, v5);
    goto LABEL_13;
  }
  v41 = (uint64_t)v16;
  sub_1A5F64154();
  v42 = sub_1A5F6413C();
  if (!v43
    || (TimestampGranularity.init(rawValue:)(*(Swift::String *)&v42), v44 = LOBYTE(v59[0]), LOBYTE(v59[0]) == 5))
  {
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v57 = (uint64_t *)(id)qword_1ED1CE7B0;
    LODWORD(v56) = sub_1A5F6443C();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1A5F66C40;
    v46 = sub_1A5F63DAC();
    v48 = v47;
    *(_QWORD *)(v45 + 56) = MEMORY[0x1E0DEA968];
    v49 = sub_1A5EE19C8();
    *(_QWORD *)(v45 + 64) = v49;
    *(_QWORD *)(v45 + 32) = v46;
    *(_QWORD *)(v45 + 40) = v48;
    v50 = (void *)sub_1A5F63E24();
    v51 = objc_msgSend(v50, sel_description);

    v52 = sub_1A5F64130();
    v54 = v53;

    *(_QWORD *)(v45 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v45 + 104) = v49;
    *(_QWORD *)(v45 + 72) = v52;
    *(_QWORD *)(v45 + 80) = v54;
    v55 = v57;
    sub_1A5F63F80();
    sub_1A5EE45CC(v41, v38);
    sub_1A5EE45CC(v6, v5);

LABEL_2:
    result = swift_bridgeObjectRelease();
LABEL_13:
    *(_OWORD *)a1 = xmmword_1A5F68AE0;
    return result;
  }
  sub_1A5EE45CC(v41, v38);
  result = sub_1A5EE45CC(v6, v5);
  *(_QWORD *)a1 = v44;
  *(_QWORD *)(a1 + 8) = v15;
  return result;
}

char *sub_1A5EE3ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  ssize_t v17;
  uint64_t v18;
  ssize_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  int v23;
  char *result;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;

  v5 = v3;
  v28 = sub_1A5EE40F4(a3);
  v29 = v8;
  v9 = &v28;
  sub_1A5EE4190();
  if ((v10 & 0x8000000000000000) == 0)
  {
    v11 = v28;
    v12 = v29;
    v9 = (uint64_t *)sub_1A5F63E18();
    sub_1A5EF0908(v11, v12);
    return (char *)v9;
  }
  v13 = MEMORY[0x1A85B7CD0]();
  switch(v13)
  {
    case 93:
      sub_1A5EF0908(v28, v29);
      return 0;
    case 34:
      sub_1A5F63DAC();
      v15 = sub_1A5F64184();
      swift_bridgeObjectRelease();
      v16 = sub_1A5F64184();
      v17 = getxattr((const char *)(v15 + 32), (const char *)(v16 + 32), 0, 0, 0, 0);
      swift_release();
      v18 = swift_release();
      if ((v17 & 0x8000000000000000) == 0)
      {
        v19 = v17;
        v9 = v5;
        v20 = sub_1A5EE3ECC(a1, a2, v19);
        if (!v4)
        {
          v9 = (uint64_t *)v20;
          sub_1A5EF0908(v28, v29);
          return (char *)v9;
        }
LABEL_16:
        sub_1A5EF0908(v28, v29);
        return (char *)v9;
      }
      break;
    case 2:
      sub_1A5EE4B18();
      swift_allocError();
      v14[1] = 0;
      v14[2] = 0;
      *v14 = 0;
LABEL_15:
      swift_willThrow();
      goto LABEL_16;
    default:
      v21 = MEMORY[0x1A85B7CD0]();
      v22 = MEMORY[0x1A85B7CD0]();
      v18 = (uint64_t)strerror(v22);
      if (v18)
      {
LABEL_14:
        v9 = (uint64_t *)sub_1A5F641C0();
        v26 = v25;
        sub_1A5EE4B18();
        swift_allocError();
        *v27 = v21;
        v27[1] = v9;
        v27[2] = v26;
        goto LABEL_15;
      }
      __break(1u);
      break;
  }
  v21 = MEMORY[0x1A85B7CD0](v18);
  v23 = MEMORY[0x1A85B7CD0]();
  result = strerror(v23);
  if (result)
    goto LABEL_14;
  __break(1u);
  return result;
}

uint64_t sub_1A5EE40F4(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_1A5F63C68();
      swift_allocObject();
      sub_1A5F63C38();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1A5F63DE8();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

void sub_1A5EE4190()
{
  __asm { BR              X11 }
}

_QWORD *sub_1A5EE41F0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

char *sub_1A5EE4458(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_1A5F63C2C();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_1A5F63C50();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_1A5F63C44();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

uint64_t sub_1A5EE4500@<X0>(void *a1@<X0>, ssize_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1A5EE451C(a1, *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_1A5EE451C@<X0>(void *a1@<X0>, size_t a2@<X5>, ssize_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  ssize_t v8;
  uint64_t result;

  sub_1A5F63DAC();
  v6 = sub_1A5F64184();
  swift_bridgeObjectRelease();
  v7 = sub_1A5F64184();
  v8 = getxattr((const char *)(v6 + 32), (const char *)(v7 + 32), a1, a2, 0, 0);
  swift_release();
  result = swift_release();
  *a3 = v8;
  return result;
}

uint64_t sub_1A5EE45CC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1A5EF0908(a1, a2);
  return a1;
}

uint64_t sub_1A5EE45E0(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *a2;
  v3 = *((_BYTE *)a2 + 8);
  v4 = result + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_state;
  *(_QWORD *)v4 = *a2;
  *(_WORD *)(v4 + 8) = v3;
  if ((v3 & 1) == 0)
  {
    v5 = result;
    sub_1A5EE3314();
    v6 = MEMORY[0x1E0DEB418];
    v7 = sub_1A5F645BC();
    v9 = sub_1A5EE259C(v7, v8);
    v11 = v10;
    sub_1A5EE1A0C(v9, v10);
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v12 = (id)qword_1ED1CE7B0;
    sub_1A5F64430();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1A5F66C40;
    v14 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v13 + 56) = v6;
    *(_QWORD *)(v13 + 64) = v14;
    *(_QWORD *)(v13 + 32) = v2;
    v16 = *(_QWORD *)(v5 + 16);
    v15 = *(_QWORD *)(v5 + 24);
    *(_QWORD *)(v13 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v13 + 104) = sub_1A5EE19C8();
    *(_QWORD *)(v13 + 72) = v16;
    *(_QWORD *)(v13 + 80) = v15;
    swift_bridgeObjectRetain();
    sub_1A5F63F80();
    sub_1A5EF0908(v9, v11);

    return swift_bridgeObjectRelease();
  }
  return result;
}

AppAnalytics::TimestampGranularity_optional __swiftcall TimestampGranularity.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  AppAnalytics::TimestampGranularity_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A5F64778();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t type metadata accessor for UploadDropboxFile()
{
  uint64_t result;

  result = qword_1ED1CD488;
  if (!qword_1ED1CD488)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5EE4974(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UploadDropbox.Debugging(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_1A5EE49B8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1A5EF3B58();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v9 = sub_1A5F63DD0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1A5EE4A68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A5EE4A74(*(_QWORD *)(v1 + 16), (_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1A5EE4A74@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (*(_BYTE *)(a1 + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled) == 1)
  {
    v4 = a2[3];
    v5 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    sub_1A5EF3B58();
    v7 = v6;
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v9 = a3;
    v10 = 0;
  }
  else
  {
    sub_1A5EF3B58();
    v7 = v11;
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    v9 = a3;
    v10 = 1;
  }
  return v8(v9, v10, 1, v7);
}

unint64_t sub_1A5EE4B18()
{
  unint64_t result;

  result = qword_1ED1CDE30;
  if (!qword_1ED1CDE30)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F6B4C8, &_s22ExtendedAttributeErrorON);
    atomic_store(result, (unint64_t *)&qword_1ED1CDE30);
  }
  return result;
}

uint64_t sub_1A5EE4B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(void);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  unint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  void *v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  __int16 v86;
  __int16 v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  int *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  _QWORD *v123;
  __int128 v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  _QWORD *v132;
  uint64_t v133;

  v4 = v3;
  v123 = a3;
  v118 = sub_1A5F63F68();
  v117 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v119 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A5F63F08();
  v9 = *(_QWORD *)(v8 - 8);
  v120 = v8;
  v121 = v9;
  MEMORY[0x1E0C80A78](v8);
  v122 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v106 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v106 - v19;
  v21 = sub_1A5F64160();
  MEMORY[0x1E0C80A78](v21);
  v127 = a1;
  *(_QWORD *)&v124 = a2;
  v22 = sub_1A5ED89B8(a1, a2);
  v23 = *(_QWORD *)(v4 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24);
  v24 = *(_QWORD *)(v4 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
  v125 = (_QWORD *)(v4 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), v23);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  v126 = v22;
  v35 = v25(v22, v23, v24);
  v37 = v36;
  v114 = v4;
  v113 = v14;
  v115 = v20;
  v112 = v17;
  sub_1A5F64154();
  v38 = sub_1A5F6413C();
  if (!v39)
  {
    sub_1A5EE5F08();
    v79 = (void *)swift_allocError();
    *(_OWORD *)v80 = 0u;
    *(_OWORD *)(v80 + 16) = 0u;
    *(_BYTE *)(v80 + 32) = 0x80;
    swift_willThrow();
    sub_1A5EF0908(v35, v37);
    v44 = v124;
LABEL_2:
    v26 = v127;
    goto LABEL_3;
  }
  v40 = v38;
  v41 = v39;
  v116 = v35;
  v130 = 10;
  v131 = 0xE100000000000000;
  MEMORY[0x1E0C80A78](v38);
  *(&v106 - 2) = (uint64_t)&v130;
  swift_bridgeObjectRetain_n();
  v42 = sub_1A5EDFBA4(0x7FFFFFFFFFFFFFFFLL, 1, sub_1A5EE0040, (uint64_t)(&v106 - 4), v40, v41);
  swift_bridgeObjectRelease();
  v43 = *(_QWORD *)(v42 + 16);
  v44 = v124;
  if (!v43)
  {
    swift_bridgeObjectRelease();
    v81 = v37;
    sub_1A5EE1EF0(v116, v37);
    v82 = sub_1A5EE3ECC(0xD00000000000003CLL, 0x80000001A5F70240, 512);
    v84 = v83;
    v26 = v127;
    v88 = v83 >> 60 != 15
       && (v85 = (uint64_t)v82, sub_1A5F45A60((uint64_t)v82, v83), v87 = v86, sub_1A5EE45CC(v85, v84), (v87 & 0x100) == 0)
       && v87 == 1;
    sub_1A5EE5F08();
    v79 = (void *)swift_allocError();
    *(_QWORD *)v91 = v40;
    *(_QWORD *)(v91 + 8) = v41;
    v92 = v116;
    *(_QWORD *)(v91 + 16) = v116;
    *(_QWORD *)(v91 + 24) = v81;
    *(_BYTE *)(v91 + 32) = v88;
    swift_willThrow();
    sub_1A5EF0908(v92, v81);
    goto LABEL_3;
  }
  v111 = v37;
  v45 = v124;
  swift_bridgeObjectRelease();
  v133 = 0;
  v132 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v46 = (unint64_t *)(v42 + 56);
  do
  {
    v48 = *(v46 - 1);
    v47 = *v46;
    v50 = *(v46 - 3);
    v49 = *(v46 - 2);
    v51 = swift_bridgeObjectRetain();
    v52 = (void *)MEMORY[0x1A85B8720](v51);
    sub_1A5EE582C(v50, v49, v48, v47, &v132, &v133);
    objc_autoreleasePoolPop(v52);
    swift_bridgeObjectRelease();
    v46 += 4;
    --v43;
  }
  while (v43);
  swift_bridgeObjectRelease();
  v53 = v133;
  v44 = v45;
  if (!v133)
  {
    v89 = v132[2];
    sub_1A5EE5F08();
    v79 = (void *)swift_allocError();
    *(_QWORD *)v90 = v89;
    *(_QWORD *)(v90 + 8) = 0;
    *(_QWORD *)(v90 + 16) = 0;
    *(_QWORD *)(v90 + 24) = 0;
    *(_BYTE *)(v90 + 32) = 32;
    swift_willThrow();
    sub_1A5EF0908(v116, v111);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_2;
  }
  v54 = v125;
  if (v132[2])
  {
    v55 = v125[4];
    __swift_project_boxed_opaque_existential_1(v125, v125[3]);
    v56 = v114;
    v57 = *(uint64_t (**)(void))(v55 + 64);
    swift_bridgeObjectRetain();
    v58 = v126;
    v110 = v57();
    v109 = v59;
    v60 = v54[3];
    v61 = v54[4];
    __swift_project_boxed_opaque_existential_1(v54, v60);
    v114 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 72))(v58, *(_QWORD *)(v56 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_contentType), v60, v61);
    v62 = v54[3];
    v63 = v54[4];
    __swift_project_boxed_opaque_existential_1(v54, v62);
    v108 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 80))(v58, v62, v63);
    v107 = v64;
    v65 = v54[3];
    v66 = v54[4];
    __swift_project_boxed_opaque_existential_1(v54, v65);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 88))(v58, v65, v66);
    v67 = v54[3];
    v68 = v54[4];
    __swift_project_boxed_opaque_existential_1(v54, v67);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v68 + 104))(&v130, v58, v67, v68);
    v69 = v130;
    v70 = v54[3];
    v71 = v54[4];
    __swift_project_boxed_opaque_existential_1(v54, v70);
    v72 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 96))(v58, v70, v71);
    if (v73)
    {
      v74 = v73;
      v125 = v72;
      v75 = v123;
      v76 = v116;
    }
    else
    {
      v75 = v123;
      v76 = v116;
      if (*(_QWORD *)(v53 + 16)
        && (v94 = sub_1A5EF11E8(0x496E6F6973736573, 0xE900000000000044), v76 = v116, (v95 & 1) != 0)
        && (sub_1A5EF30B0(*(_QWORD *)(v53 + 56) + 32 * v94, (uint64_t)&v130), swift_dynamicCast()))
      {
        v96 = v128;
        v74 = v129;
      }
      else
      {
        v74 = 0xE90000000000006ELL;
        v96 = 0x6F69737365536F6ELL;
      }
      v125 = (_QWORD *)v96;
    }
    v97 = v120;
    if (v69 != 5)
    {
      sub_1A5F63EF0();
      __asm { BR              X9 }
    }
    swift_release();
    sub_1A5EF0908(v76, v111);
    v98 = (uint64_t)v112;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v121 + 56))(v112, 1, 1, v97);
    v99 = v109;
    v100 = v114;
    v101 = v108;
    v102 = v107;
    v103 = v132;
    v75[4] = v110;
    v75[5] = v99;
    v75[6] = v100;
    v75[7] = v101;
    v75[8] = v102;
    v104 = (int *)type metadata accessor for Batch();
    sub_1A5EE5D8C((uint64_t)v115, (uint64_t)v75 + v104[10]);
    v105 = (_QWORD *)((char *)v75 + v104[11]);
    *v105 = v125;
    v105[1] = v74;
    *v75 = v53;
    v75[1] = v103;
    v75[2] = v127;
    v75[3] = v44;
    *((_BYTE *)v75 + v104[12]) = 0;
    sub_1A5EE5D8C(v98, (uint64_t)v75 + v104[13]);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(*((_QWORD *)v104 - 1) + 56))(v75, 0, 1, v104);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  sub_1A5EE5F08();
  v79 = (void *)swift_allocError();
  v26 = v127;
  *(_QWORD *)v93 = v127;
  *(_QWORD *)(v93 + 8) = v44;
  *(_QWORD *)(v93 + 16) = 0;
  *(_QWORD *)(v93 + 24) = 0;
  *(_BYTE *)(v93 + 32) = 64;
  swift_bridgeObjectRetain();
  swift_willThrow();
  sub_1A5EF0908(v116, v111);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_3:
  if (qword_1ED1CFC08 != -1)
    swift_once();
  v27 = (id)qword_1ED1CE7B0;
  sub_1A5F64448();
  sub_1A5EDD448();
  v28 = swift_allocObject();
  v124 = xmmword_1A5F66C40;
  *(_OWORD *)(v28 + 16) = xmmword_1A5F66C40;
  v29 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v28 + 56) = MEMORY[0x1E0DEA968];
  v30 = sub_1A5EE19C8();
  *(_QWORD *)(v28 + 64) = v30;
  *(_QWORD *)(v28 + 32) = v26;
  *(_QWORD *)(v28 + 40) = v44;
  v130 = 0;
  v131 = 0xE000000000000000;
  v128 = (uint64_t)v79;
  sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
  swift_bridgeObjectRetain();
  sub_1A5F646F4();
  v31 = v130;
  v32 = v131;
  *(_QWORD *)(v28 + 96) = v29;
  *(_QWORD *)(v28 + 104) = v30;
  *(_QWORD *)(v28 + 72) = v31;
  *(_QWORD *)(v28 + 80) = v32;
  sub_1A5F63F80();

  swift_bridgeObjectRelease();
  v33 = v125[3];
  v34 = v125[4];
  __swift_project_boxed_opaque_existential_1(v125, v33);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v126, v33, v34);

  swift_release();
  v77 = type metadata accessor for Batch();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v123, 1, 1, v77);
}

uint64_t sub_1A5EE582C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, _QWORD **a5, _QWORD *a6)
{
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  unsigned int v26;
  _QWORD *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  char v34;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD **v41;
  uint64_t v42;
  id v43[5];

  v43[4] = *(id *)MEMORY[0x1E0C80C00];
  swift_bridgeObjectRetain();
  v12 = sub_1A5EE2A9C(a1, a2, a3, a4);
  v14 = v13;
  v15 = (void *)objc_opt_self();
  v16 = (void *)sub_1A5F63E24();
  v43[0] = 0;
  v17 = objc_msgSend(v15, sel_JSONObjectWithData_options_error_, v16, 0, v43);

  if (!v17)
  {
    v31 = v43[0];
    v32 = (void *)sub_1A5F63CE0();

    swift_willThrow();
    goto LABEL_18;
  }
  v18 = v43[0];
  sub_1A5F645C8();
  swift_unknownObjectRelease();
  sub_1A5EF08A0();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    sub_1A5EE5F08();
    swift_allocError();
    *(_QWORD *)v33 = 1;
    v34 = 0x80;
LABEL_20:
    *(_QWORD *)(v33 + 8) = 0;
    *(_QWORD *)(v33 + 16) = 0;
    *(_QWORD *)(v33 + 24) = 0;
    *(_BYTE *)(v33 + 32) = v34;
    swift_willThrow();
    return sub_1A5EF0908(v12, v14);
  }
  if (!*(_QWORD *)(v42 + 16)
    || (v19 = sub_1A5EF11E8(1701869940, 0xE400000000000000), (v20 & 1) == 0)
    || (sub_1A5EF30B0(*(_QWORD *)(v42 + 56) + 32 * v19, (uint64_t)v43), (swift_dynamicCast() & 1) == 0)
    || (v41 = a5, v21 = sub_1A5F64778(), swift_bridgeObjectRelease(), v21 > 1)
    || !*(_QWORD *)(v42 + 16)
    || (v22 = sub_1A5EF11E8(1635017060, 0xE400000000000000), (v23 & 1) == 0)
    || (sub_1A5EF30B0(*(_QWORD *)(v42 + 56) + 32 * v22, (uint64_t)v43), (swift_dynamicCast() & 1) == 0))
  {
    sub_1A5EE5F08();
    swift_allocError();
    *(_QWORD *)v33 = v42;
    v34 = 96;
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  v24 = MEMORY[0x1E0DEA968];
  v25 = (void *)sub_1A5F640A0();
  v26 = objc_msgSend(v15, sel_isValidJSONObject_, v25);

  if ((v21 & 1) != 0)
  {
    if (v26)
    {
      v27 = *v41;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v41 = v27;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v27 = sub_1A5EE5DE8(0, v27[2] + 1, 1, v27);
        *v41 = v27;
      }
      v30 = v27[2];
      v29 = v27[3];
      if (v30 >= v29 >> 1)
      {
        v27 = sub_1A5EE5DE8((_QWORD *)(v29 > 1), v30 + 1, 1, v27);
        *v41 = v27;
      }
      v27[2] = v30 + 1;
      v27[v30 + 4] = v42;
      return sub_1A5EF0908(v12, v14);
    }
    if (qword_1ED1CFC08 == -1)
      goto LABEL_27;
    goto LABEL_29;
  }
  if (!v26)
  {
    if (qword_1ED1CFC08 == -1)
    {
LABEL_27:
      v36 = (id)qword_1ED1CE7B0;
      sub_1A5F64448();
      sub_1A5EDD448();
      v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_1A5F679D0;
      v38 = sub_1A5F640C4();
      v40 = v39;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v37 + 56) = v24;
      *(_QWORD *)(v37 + 64) = sub_1A5EE19C8();
      *(_QWORD *)(v37 + 32) = v38;
      *(_QWORD *)(v37 + 40) = v40;
      sub_1A5F63F80();
      sub_1A5EF0908(v12, v14);

      return swift_bridgeObjectRelease();
    }
LABEL_29:
    swift_once();
    goto LABEL_27;
  }
  sub_1A5EF0908(v12, v14);
  *a6 = v42;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5EE5D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1A5EE5DE8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1A5ECD49C(0, &qword_1ED1CD968, (uint64_t (*)(uint64_t))sub_1A5EF08A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A5EE5F4C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A5EE5F08()
{
  unint64_t result;

  result = qword_1ED1CB708;
  if (!qword_1ED1CB708)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F69AAC, &type metadata for UploadDropbox.Errors);
    atomic_store(result, (unint64_t *)&qword_1ED1CB708);
  }
  return result;
}

uint64_t sub_1A5EE5F4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1A5EF08A0();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for Batch()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5EE6060(uint64_t a1)
{
  return sub_1A5EE60A8(a1, &OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_sessionID, (uint64_t (*)(uint64_t))sub_1A5EE714C);
}

uint64_t sub_1A5EE6084(uint64_t a1)
{
  return sub_1A5EE60A8(a1, &OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_groupName, (uint64_t (*)(uint64_t))sub_1A5EE7504);
}

uint64_t sub_1A5EE60A8(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;

  v6 = OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_lock;
  os_unfair_lock_lock_with_options();
  v7 = (uint64_t *)(a1 + *a2);
  if (v7[1])
  {
    v8 = *v7;
  }
  else
  {
    v8 = a3(a1);
    *v7 = v8;
    v7[1] = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v10 = *(os_unfair_lock_s **)(*(_QWORD *)(a1 + v6) + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v10);
  return v8;
}

char *sub_1A5EE6160(uint64_t a1)
{
  return sub_1A5EE3358(a1);
}

void sub_1A5EE6174(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1A5EE6260(a1, a2);
}

void sub_1A5EE6188(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1A5EE62EC(a1, a2);
}

uint64_t sub_1A5EE61AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v2 = OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_lock;
  os_unfair_lock_lock_with_options();
  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_userAgent);
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_userAgent + 8))
  {
    v4 = *v3;
  }
  else
  {
    v4 = sub_1A5EE6BEC();
    *v3 = v4;
    v3[1] = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v6 = *(os_unfair_lock_s **)(*(_QWORD *)(a1 + v2) + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v6);
  return v4;
}

void sub_1A5EE6260(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  v4 = OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_lock;
  os_unfair_lock_lock_with_options();
  v5 = (_QWORD *)(a1 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_timestampConfiguration);
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_timestampConfiguration);
  if (v6 == 5)
  {
    sub_1A5EE36A4((uint64_t)v8);
    v6 = v8[0];
    v7 = v8[1];
    *v5 = v8[0];
    v5[1] = v7;
  }
  else
  {
    v7 = v5[1];
  }
  *a2 = v6;
  a2[1] = v7;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(a1 + v4) + 16));
}

void sub_1A5EE62EC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_lock;
  os_unfair_lock_lock_with_options();
  sub_1A5EE6340(a1, a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(a1 + v4) + 16));
}

uint64_t sub_1A5EE6340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v14[-v8];
  v10 = a1 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_sessionStartDate;
  swift_beginAccess();
  sub_1A5EE229C(v10, (uint64_t)v9);
  v11 = sub_1A5F63F08();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    sub_1A5ED43E0((uint64_t)v9, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1A5EE64C8(a2);
    sub_1A5EE229C(a2, (uint64_t)v6);
    swift_beginAccess();
    sub_1A5ED46A0((uint64_t)v6, v10);
    return swift_endAccess();
  }
  else
  {
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v12 + 32))(a2, v9, v11);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
}

uint64_t sub_1A5EE64C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  int v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unsigned __int8 *v43;
  int v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t *v48;
  char v49;
  _QWORD v50[2];
  uint64_t v51;

  v2 = sub_1A5F64160();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1A5F63F08();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5F63EFC();
  sub_1A5F63ED8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1A5F64364();
  swift_bridgeObjectRelease();
  v7 = sub_1A5EE3ECC(0xD00000000000003FLL, 0x80000001A5F71710, 16);
  v9 = v8;
  if (v8 >> 60 == 15)
  {
    v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_25:
    v20 = a1;
    v21 = 1;
    return v19(v20, v21, 1, v3);
  }
  v10 = (uint64_t)v7;
  sub_1A5F64154();
  v11 = sub_1A5F6413C();
  if (!v12)
  {
    v48 = (uint64_t *)v4;
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v22 = (id)qword_1ED1CE7B0;
    LODWORD(v47) = sub_1A5F6443C();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1A5F66C40;
    v24 = sub_1A5F63DAC();
    v26 = v25;
    *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
    v27 = sub_1A5EE19C8();
    *(_QWORD *)(v23 + 64) = v27;
    *(_QWORD *)(v23 + 32) = v24;
    *(_QWORD *)(v23 + 40) = v26;
    v28 = (void *)sub_1A5F63E24();
    v29 = objc_msgSend(v28, sel_description);

    v30 = sub_1A5F64130();
    v32 = v31;

    *(_QWORD *)(v23 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v23 + 104) = v27;
    *(_QWORD *)(v23 + 72) = v30;
    *(_QWORD *)(v23 + 80) = v32;
    sub_1A5F63F80();
    sub_1A5EE45CC(v10, v9);

    goto LABEL_24;
  }
  v13 = v12;
  v51 = 0;
  MEMORY[0x1E0C80A78](v11);
  *(&v45 - 2) = (uint64_t)&v51;
  v47 = v14;
  if ((v15 & 0x1000000000000000) != 0 || !(v13 & 0x2000000000000000 | v14 & 0x1000000000000000))
  {
    v46 = &v45;
    swift_bridgeObjectRetain();
    sub_1A5F64628();
    swift_bridgeObjectRelease();
    if ((v49 & 1) != 0)
      goto LABEL_10;
    goto LABEL_21;
  }
  v48 = &v45;
  if ((v13 & 0x2000000000000000) != 0)
  {
    v50[0] = v14;
    v50[1] = v13 & 0xFFFFFFFFFFFFFFLL;
    if (v14 > 0x20u || ((1 << v14) & 0x100003E01) == 0)
    {
      swift_bridgeObjectRetain();
      v43 = (unsigned __int8 *)_swift_stdlib_strtod_clocale();
      if (v43)
      {
        v44 = *v43;
        swift_bridgeObjectRelease();
        if (!v44)
          goto LABEL_10;
        goto LABEL_21;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
LABEL_21:
    v48 = (uint64_t *)v4;
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v34 = (id)qword_1ED1CE7B0;
    LODWORD(v46) = sub_1A5F6443C();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1A5F66C40;
    v36 = sub_1A5F63DAC();
    v38 = v37;
    v39 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEA968];
    v40 = sub_1A5EE19C8();
    *(_QWORD *)(v35 + 32) = v36;
    *(_QWORD *)(v35 + 40) = v38;
    *(_QWORD *)(v35 + 96) = v39;
    *(_QWORD *)(v35 + 104) = v40;
    v41 = v47;
    *(_QWORD *)(v35 + 64) = v40;
    *(_QWORD *)(v35 + 72) = v41;
    *(_QWORD *)(v35 + 80) = v13;
    sub_1A5F63F80();
    sub_1A5EE45CC(v10, v9);

LABEL_24:
    swift_bridgeObjectRelease();
    v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v48[7];
    goto LABEL_25;
  }
  v46 = &v45;
  if ((v14 & 0x1000000000000000) != 0)
  {
    v16 = (v13 & 0xFFFFFFFFFFFFFFFLL) + 32;
    swift_bridgeObjectRetain();
LABEL_8:
    v17 = (_BYTE *)v16;
    goto LABEL_9;
  }
  v16 = sub_1A5F64670();
  swift_bridgeObjectRetain();
  if (v16)
    goto LABEL_8;
  v17 = 0;
LABEL_9:
  sub_1A5F481A0(v17, (BOOL *)v50);
  v18 = LOBYTE(v50[0]);
  swift_bridgeObjectRelease();
  if (!v18)
    goto LABEL_21;
LABEL_10:
  swift_bridgeObjectRelease();
  sub_1A5F63ECC();
  sub_1A5EE45CC(v10, v9);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v20 = a1;
  v21 = 0;
  return v19(v20, v21, 1, v3);
}

uint64_t sub_1A5EE6BEC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v0 = sub_1A5F64160();
  MEMORY[0x1E0C80A78](v0);
  sub_1A5EE6FBC();
  v2 = sub_1A5EE3ECC(0xD00000000000003ELL, 0x80000001A5F71550, v1);
  v4 = v3;
  if (v3 >> 60 == 15)
    return sub_1A5EE7084();
  v6 = (uint64_t)v2;
  sub_1A5F64154();
  v7 = sub_1A5F6413C();
  if (!v8)
  {
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v9 = (id)qword_1ED1CE7B0;
    sub_1A5F6443C();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1A5F66C40;
    v11 = sub_1A5F63DAC();
    v13 = v12;
    v14 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    v15 = sub_1A5EE19C8();
    *(_QWORD *)(v10 + 64) = v15;
    *(_QWORD *)(v10 + 32) = v11;
    *(_QWORD *)(v10 + 40) = v13;
    v16 = (void *)sub_1A5F63E24();
    v17 = objc_msgSend(v16, sel_description);

    v18 = sub_1A5F64130();
    v20 = v19;

    *(_QWORD *)(v10 + 96) = v14;
    *(_QWORD *)(v10 + 104) = v15;
    *(_QWORD *)(v10 + 72) = v18;
    *(_QWORD *)(v10 + 80) = v20;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    v7 = sub_1A5EE7084();
  }
  v5 = v7;
  sub_1A5EE45CC(v6, v4);
  return v5;
}

void sub_1A5EE6FBC()
{
  uint64_t v0;
  unint64_t v1;

  v0 = sub_1A5EE7084();
  sub_1A5EE259C(v0, v1);
  __asm { BR              X10 }
}

uint64_t sub_1A5EE6FFC()
{
  unint64_t v0;
  uint64_t v1;

  sub_1A5EF0908(v1, v0);
  if (BYTE6(v0) + 0x4000000000000000 < 0)
  {
    __break(1u);
    JUMPOUT(0x1A5EE7058);
  }
  return 2 * BYTE6(v0);
}

uint64_t sub_1A5EE7084()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + OBJC_IVAR___AAClient_identifier);
  swift_bridgeObjectRetain();
  sub_1A5F641B4();
  swift_bridgeObjectRetain();
  sub_1A5F641B4();
  swift_bridgeObjectRetain();
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1A5EE714C()
{
  uint64_t v0;
  char *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v0 = sub_1A5F64160();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1A5EE3ECC(0xD00000000000003FLL, 0x80000001A5F711D0, 512);
  v3 = v2;
  if (v2 >> 60 == 15)
    return 0;
  v5 = (uint64_t)v1;
  sub_1A5F64154();
  v4 = sub_1A5F6413C();
  if (v6)
  {
    sub_1A5EE45CC(v5, v3);
  }
  else
  {
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v7 = (id)qword_1ED1CE7B0;
    sub_1A5F6443C();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1A5F66C40;
    v9 = sub_1A5F63DAC();
    v11 = v10;
    v12 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
    v13 = sub_1A5EE19C8();
    *(_QWORD *)(v8 + 64) = v13;
    *(_QWORD *)(v8 + 32) = v9;
    *(_QWORD *)(v8 + 40) = v11;
    v14 = (void *)sub_1A5F63E24();
    v15 = objc_msgSend(v14, sel_description);

    v16 = sub_1A5F64130();
    v18 = v17;

    *(_QWORD *)(v8 + 96) = v12;
    *(_QWORD *)(v8 + 104) = v13;
    *(_QWORD *)(v8 + 72) = v16;
    *(_QWORD *)(v8 + 80) = v18;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    sub_1A5EE45CC(v5, v3);
  }
  return v4;
}

uint64_t sub_1A5EE7504()
{
  uint64_t v0;
  char *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v0 = sub_1A5F64160();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1A5EE3ECC(0xD000000000000037, 0x80000001A5F712D0, 512);
  v3 = v2;
  if (v2 >> 60 == 15)
    return 0;
  v5 = (uint64_t)v1;
  sub_1A5F64154();
  v4 = sub_1A5F6413C();
  if (v6)
  {
    sub_1A5EE45CC(v5, v3);
  }
  else
  {
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v7 = (id)qword_1ED1CE7B0;
    sub_1A5F6443C();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1A5F66C40;
    v9 = sub_1A5F63DAC();
    v11 = v10;
    v12 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
    v13 = sub_1A5EE19C8();
    *(_QWORD *)(v8 + 64) = v13;
    *(_QWORD *)(v8 + 32) = v9;
    *(_QWORD *)(v8 + 40) = v11;
    v14 = (void *)sub_1A5F63E24();
    v15 = objc_msgSend(v14, sel_description);

    v16 = sub_1A5F64130();
    v18 = v17;

    *(_QWORD *)(v8 + 96) = v12;
    *(_QWORD *)(v8 + 104) = v13;
    *(_QWORD *)(v8 + 72) = v16;
    *(_QWORD *)(v8 + 80) = v18;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    sub_1A5EE45CC(v5, v3);
  }
  return v4;
}

uint64_t sub_1A5EE78BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_lock;
  os_unfair_lock_lock_with_options();
  v5 = a1 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_contentType;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC12AppAnalytics17UploadDropboxFile_contentType + 8) == 1)
  {
    v6 = sub_1A5EE7944(a1, a2);
    *(_QWORD *)v5 = v6;
    *(_BYTE *)(v5 + 8) = 0;
  }
  else
  {
    v6 = *(_QWORD *)v5;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(a1 + v4) + 16));
  return v6;
}

uint64_t sub_1A5EE7944(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  int64_t v16;
  char v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  unsigned __int8 *v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  unsigned int v44;
  uint64_t v45;
  unsigned __int8 *v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[2];

  v3 = sub_1A5F64160();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1A5EE3ECC(0xD000000000000039, 0x80000001A5F713D0, 8);
  v6 = v5;
  if (v5 >> 60 == 15)
    return a2;
  v7 = (uint64_t)v4;
  sub_1A5F64154();
  result = sub_1A5F6413C();
  if (!v9)
  {
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v18 = (id)qword_1ED1CE7B0;
    LODWORD(v59) = sub_1A5F6443C();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1A5F66C40;
    v20 = sub_1A5F63DAC();
    v22 = v21;
    v23 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
    v24 = sub_1A5EE19C8();
    *(_QWORD *)(v19 + 64) = v24;
    *(_QWORD *)(v19 + 32) = v20;
    *(_QWORD *)(v19 + 40) = v22;
    v25 = (void *)sub_1A5F63E24();
    v26 = objc_msgSend(v25, sel_description, v59);

    v27 = sub_1A5F64130();
    v29 = v28;

    *(_QWORD *)(v19 + 96) = v23;
    *(_QWORD *)(v19 + 104) = v24;
    *(_QWORD *)(v19 + 72) = v27;
    *(_QWORD *)(v19 + 80) = v29;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    v30 = v7;
    goto LABEL_64;
  }
  v10 = result;
  v11 = v9;
  v12 = HIBYTE(v9) & 0xF;
  v13 = result & 0xFFFFFFFFFFFFLL;
  if ((v11 & 0x2000000000000000) != 0)
    v14 = v12;
  else
    v14 = result & 0xFFFFFFFFFFFFLL;
  if (!v14)
    goto LABEL_61;
  if ((v11 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v46 = sub_1A5F46B6C(v10, v11, 10);
    v48 = v47;
    swift_bridgeObjectRelease();
    if ((v48 & 1) == 0)
    {
      v35 = sub_1A5EE80A0((unint64_t)v46);
      if ((v49 & 1) == 0)
        goto LABEL_42;
    }
    goto LABEL_61;
  }
  if ((v11 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v15 = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v15 = (unsigned __int8 *)sub_1A5F64670();
    v16 = (int64_t)sub_1A5F46C50(v15, v13, 10);
    if ((v17 & 1) == 0)
    {
LABEL_41:
      v35 = sub_1A5EE80A0(v16);
      if ((v36 & 1) == 0)
      {
LABEL_42:
        v37 = v35;
        swift_bridgeObjectRelease();
        sub_1A5EE45CC(v7, v6);
        return v37;
      }
    }
LABEL_61:
    v60 = v7;
    v50 = v11;
    v51 = v10;
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v52 = (id)qword_1ED1CE7B0;
    sub_1A5F6443C();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1A5F66C40;
    v54 = sub_1A5F63DAC();
    v56 = v55;
    v57 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v53 + 56) = MEMORY[0x1E0DEA968];
    v58 = sub_1A5EE19C8();
    *(_QWORD *)(v53 + 32) = v54;
    *(_QWORD *)(v53 + 40) = v56;
    *(_QWORD *)(v53 + 96) = v57;
    *(_QWORD *)(v53 + 104) = v58;
    *(_QWORD *)(v53 + 64) = v58;
    *(_QWORD *)(v53 + 72) = v51;
    *(_QWORD *)(v53 + 80) = v50;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    v30 = v60;
LABEL_64:
    sub_1A5EE45CC(v30, v6);
    return a2;
  }
  v61[0] = result;
  v61[1] = v11 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v12)
      goto LABEL_69;
    if (v12 == 1)
      goto LABEL_67;
    if ((BYTE1(result) - 48) <= 9u)
    {
      v16 = (BYTE1(result) - 48);
      if (v12 == 2)
        goto LABEL_39;
      if ((BYTE2(v10) - 48) <= 9u)
      {
        v16 = 10 * v16 + (BYTE2(v10) - 48);
        v31 = v12 - 3;
        if (v12 != 3)
        {
          v32 = (unsigned __int8 *)v61 + 3;
          while (1)
          {
            v33 = *v32 - 48;
            if (v33 > 9)
              goto LABEL_37;
            v34 = 10 * v16;
            if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
              goto LABEL_37;
            v16 = v34 + v33;
            if (__OFADD__(v34, v33))
              goto LABEL_37;
            LOBYTE(v12) = 0;
            ++v32;
            if (!--v31)
              goto LABEL_40;
          }
        }
        goto LABEL_39;
      }
    }
LABEL_37:
    v16 = 0;
    LOBYTE(v12) = 1;
    goto LABEL_40;
  }
  if (result != 45)
  {
    if (!v12 || (result - 48) > 9u)
      goto LABEL_37;
    v16 = (result - 48);
    if (v12 == 1)
    {
LABEL_39:
      LOBYTE(v12) = 0;
      goto LABEL_40;
    }
    if ((BYTE1(v10) - 48) <= 9u)
    {
      v16 = 10 * v16 + (BYTE1(v10) - 48);
      v38 = v12 - 2;
      if (v12 != 2)
      {
        v39 = (unsigned __int8 *)v61 + 2;
        while (1)
        {
          v40 = *v39 - 48;
          if (v40 > 9)
            goto LABEL_37;
          v41 = 10 * v16;
          if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
            goto LABEL_37;
          v16 = v41 + v40;
          if (__OFADD__(v41, v40))
            goto LABEL_37;
          LOBYTE(v12) = 0;
          ++v39;
          if (!--v38)
            goto LABEL_40;
        }
      }
      goto LABEL_39;
    }
    goto LABEL_37;
  }
  if (v12)
  {
    if (v12 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_37;
      if (v12 == 2)
      {
        LOBYTE(v12) = 0;
        v16 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_40;
      }
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_37;
      v16 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
      v42 = v12 - 3;
      if (v12 != 3)
      {
        v43 = (unsigned __int8 *)v61 + 3;
        while (1)
        {
          v44 = *v43 - 48;
          if (v44 > 9)
            goto LABEL_37;
          v45 = 10 * v16;
          if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
            goto LABEL_37;
          v16 = v45 - v44;
          if (__OFSUB__(v45, v44))
            goto LABEL_37;
          LOBYTE(v12) = 0;
          ++v43;
          if (!--v42)
            goto LABEL_40;
        }
      }
      goto LABEL_39;
    }
LABEL_67:
    v16 = 0;
LABEL_40:
    if ((v12 & 1) == 0)
      goto LABEL_41;
    goto LABEL_61;
  }
  __break(1u);
LABEL_69:
  __break(1u);
  return result;
}

unint64_t sub_1A5EE80A0(unint64_t result)
{
  if (result > 8)
    return 0;
  return result;
}

void sub_1A5EE80B0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  _DWORD *v67;
  uint64_t (*v68)(uint64_t);
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  _BOOL4 v79;
  uint8_t *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  NSObject **v91;
  char *v92;
  NSObject *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  unint64_t v99;
  char v100;
  char v101;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(uint64_t);
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  _QWORD v123[2];
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  _UNKNOWN **v131;
  _QWORD *v132;
  uint64_t v133;
  char *v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  __int128 v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  NSObject *v147;
  uint64_t v148;
  __int128 v149;
  uint64_t v150;
  _UNKNOWN **v151;
  _QWORD *v152;
  uint64_t v153;
  _UNKNOWN **v154;
  char v155[8];

  v6 = (_QWORD *)v5;
  v130 = a5;
  v129 = a4;
  v124 = a3;
  v147 = a2;
  sub_1A5ECD49C(0, &qword_1ED1CD060, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF560], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v126 = (char *)v123 - v9;
  v137 = sub_1A5F63DD0();
  v138 = *(_QWORD *)(v137 - 8);
  MEMORY[0x1E0C80A78](v137);
  v123[1] = (char *)v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v128 = (char *)v123 - v12;
  v127 = v13;
  MEMORY[0x1E0C80A78](v14);
  v125 = (char *)v123 - v15;
  v16 = type metadata accessor for BatchRepair();
  v146 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v145 = (char *)v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_1A5F6449C();
  v143 = *(_QWORD *)(v144 - 8);
  MEMORY[0x1E0C80A78](v144);
  v142 = (char *)v123 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_1A5F64490();
  MEMORY[0x1E0C80A78](v141);
  *(_QWORD *)&v140 = (char *)v123 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1A5F64028();
  MEMORY[0x1E0C80A78](v20);
  v134 = (char *)v123 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = a1;
  sub_1A5EC20C0(a1, v5, (uint64_t)v155);
  sub_1A5ECE02C(v5 + 104, (uint64_t)&v152);
  sub_1A5ECE02C(v5 + 64, (uint64_t)&v149);
  sub_1A5ED4F64(0);
  v22 = swift_allocObject();
  v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v152, v153);
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (_QWORD *)((char *)v123 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v27 + 16))(v26, v24);
  v28 = *v26;
  v30 = v150;
  v29 = (uint64_t)v151;
  v31 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v149, v150);
  v32 = MEMORY[0x1E0C80A78](v31);
  v34 = (char *)v123 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v35 + 16))(v34, v32);
  v36 = swift_unknownObjectRetain();
  v133 = sub_1A5F1928C(v36, v28, (uint64_t)v34, 1885960807, 0xE400000000000000, 0, v22, v30, v29);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v149);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v152);
  v37 = (void *)v6[4];
  v38 = (void *)v6[7];
  sub_1A5ECE02C((uint64_t)v155, (uint64_t)&v152);
  sub_1A5ECE02C((uint64_t)(v6 + 23), (uint64_t)&v149);
  v135 = (_QWORD *)v6[6];
  v139 = v6;
  v39 = (void *)v6[28];
  v40 = type metadata accessor for UploadDropbox(0);
  v132 = (_QWORD *)swift_allocObject();
  v41 = v153;
  v131 = v154;
  v42 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v152, v153);
  v43 = MEMORY[0x1E0C80A78](v42);
  v45 = (char *)v123 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v46 + 16))(v45, v43);
  v48 = v150;
  v47 = (uint64_t)v151;
  v49 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v149, v150);
  v50 = MEMORY[0x1E0C80A78](v49);
  v52 = (char *)v123 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v53 + 16))(v52, v50);
  v54 = v37;
  v55 = v38;
  v56 = v39;
  v57 = sub_1A5EC26C8(v54, v55, (uint64_t)v45, (uint64_t)v52, (uint64_t)v135, v56, v132, v41, v48, (uint64_t)v131, v47);

  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v149);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v152);
  v153 = v40;
  v154 = &off_1E4FD3418;
  v152 = v57;
  type metadata accessor for UploadManager();
  v58 = (_QWORD *)swift_allocObject();
  v59 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v152, v40);
  v60 = MEMORY[0x1E0C80A78](v59);
  v62 = (_QWORD *)((char *)v123 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v63 + 16))(v62, v60);
  v64 = *v62;
  v150 = v40;
  v151 = &off_1E4FD3418;
  *(_QWORD *)&v149 = v64;
  v58[10] = MEMORY[0x1E0DEE9E0];
  v132 = v58 + 10;
  type metadata accessor for UnfairLock();
  v65 = swift_allocObject();
  v66 = v55;
  v67 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v65 + 16) = v67;
  *v67 = 0;
  *(_DWORD *)(v65 + 24) = 0x10000;
  v58[11] = v65;
  sub_1A5F06F60(0, (unint64_t *)&qword_1ED1CF828);
  sub_1A5F6401C();
  v148 = MEMORY[0x1E0DEE9D8];
  v68 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  sub_1A5ECC4D8((unint64_t *)&qword_1ED1CF820, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CF810, v68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1A5ED26BC((unint64_t *)&qword_1ED1CF818, (unint64_t *)&qword_1ED1CF810, v68);
  sub_1A5F645E0();
  (*(void (**)(char *, _QWORD, uint64_t))(v143 + 104))(v142, *MEMORY[0x1E0DEF8D8], v144);
  v58[12] = sub_1A5F644D8();
  v58[2] = v133;
  v58[3] = &off_1E4FD0B00;
  v69 = v58 + 4;
  sub_1A5EC1D18(&v149, (uint64_t)(v58 + 4));
  v58[9] = v66;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v152);
  v135 = v58;
  if (v147)
  {
    __swift_project_boxed_opaque_existential_1(v58 + 4, v58[7]);
    v70 = v124;
    swift_retain();
    sub_1A5EC5178();
    v72 = v71;
    swift_retain();
    v73 = sub_1A5F0A6E8(v72, (uint64_t)v58);
    swift_bridgeObjectRelease();
    swift_release();
    v74 = *(_QWORD *)(v73 + 16);
    if (v74)
    {
      v75 = v70;
      v76 = (uint64_t)v139;
      swift_bridgeObjectRetain();
      v77 = sub_1A5F63F8C();
      v78 = sub_1A5F64454();
      v79 = os_log_type_enabled(v77, v78);
      v144 = (uint64_t)(v58 + 4);
      if (v79)
      {
        v80 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v80 = 134217984;
        v76 = (uint64_t)v139;
        v152 = *(_QWORD **)(v73 + 16);
        sub_1A5F6458C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A5EB9000, v77, v78, "Will attempt to repair %ld batches", v80, 0xCu);
        MEMORY[0x1A85B8D2C](v80, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease();
      }

      v116 = 0;
      v117 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
      v143 = v73;
      v118 = v73 + v117;
      v119 = (uint64_t)v145;
      while (1)
      {
        v120 = v116 + 1;
        if (__OFADD__(v116, 1))
          break;
        v121 = sub_1A5ED7E14(v118 + *(_QWORD *)(v146 + 72) * v116, v119, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
        v122 = (void *)MEMORY[0x1A85B8720](v121);
        sub_1A5EE9358(v76, v119, v147, v75);
        objc_autoreleasePoolPop(v122);
        sub_1A5ED4D44(v119, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
        ++v116;
        if (v120 == v74)
        {
          swift_bridgeObjectRelease();
          sub_1A5ED0004((uint64_t)v147);
          v81 = v137;
          v58 = v135;
          v82 = v125;
          v83 = MEMORY[0x1E0DEE9E0];
          v69 = (_QWORD *)v144;
          goto LABEL_7;
        }
      }
      __break(1u);
      return;
    }
    swift_bridgeObjectRelease();
    sub_1A5ED0004((uint64_t)v147);
  }
  v81 = v137;
  v82 = v125;
  v83 = MEMORY[0x1E0DEE9E0];
LABEL_7:
  os_unfair_lock_lock_with_options();
  swift_beginAccess();
  v58[10] = v83;
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v58[11] + 16));
  v84 = __swift_project_boxed_opaque_existential_1(v69, v58[7]);
  v85 = *v84;
  v86 = (char *)(*v84 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager);
  v87 = *((_QWORD *)v86 + 3);
  v88 = *((_QWORD *)v86 + 4);
  __swift_project_boxed_opaque_existential_1(v86, v87);
  sub_1A5ED7F90();
  v89 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v88 + 128))(v82, v87, v88);
  v142 = v86;
  (*(void (**)(char *, uint64_t))(v138 + 8))(v82, v81);
  v90 = *(_QWORD *)(v89 + 16);
  if (v90)
  {
    v134 = (char *)v89;
    v91 = (NSObject **)(v89 + 40);
    v140 = xmmword_1A5F66C40;
    v92 = v142;
    v144 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
    v141 = v85;
    v143 = v85 + 40;
    do
    {
      v94 = (uint64_t)*(v91 - 1);
      v93 = *v91;
      swift_bridgeObjectRetain();
      os_unfair_lock_lock_with_options();
      v146 = v94;
      v147 = v93;
      v95 = sub_1A5ED89B8(v94, (uint64_t)v93);
      v96 = *((_QWORD *)v92 + 3);
      v97 = *((_QWORD *)v92 + 4);
      __swift_project_boxed_opaque_existential_1(v92, v96);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 24))(v95, v96, v97);
      swift_release();
      v98 = (uint64_t *)v143;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v99 = sub_1A5EF11E8(v146, (uint64_t)v147);
      v101 = v100;
      swift_bridgeObjectRelease();
      if ((v101 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v103 = *v98;
        v148 = *v98;
        *v98 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1A5F05308();
          v103 = v148;
        }
        swift_bridgeObjectRelease();
        sub_1A5EF763C(v99, v103);
        *v98 = v103;
        swift_bridgeObjectRelease();
      }
      v91 += 2;
      swift_endAccess();
      swift_release();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v85 + v144) + 16));
      swift_bridgeObjectRelease();
      --v90;
    }
    while (v90);
    swift_bridgeObjectRelease();
    v81 = v137;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v104 = sub_1A5F63FEC();
  v105 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF560];
  v106 = (uint64_t)v126;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v126, 1, 1, v104);
  v107 = _s12AppAnalytics11AccessQueueC6globalyAC8Dispatch0F3QoSV0G6SClassOSgFZ_0(v106);
  sub_1A5ED43E0(v106, &qword_1ED1CD060, v105);
  v108 = swift_allocObject();
  swift_weakInit();
  v109 = v138;
  v110 = v128;
  (*(void (**)(char *, uint64_t, uint64_t))(v138 + 16))(v128, v136, v81);
  v111 = (*(unsigned __int8 *)(v109 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
  v112 = (v127 + v111 + 7) & 0xFFFFFFFFFFFFFFF8;
  v113 = swift_allocObject();
  *(_QWORD *)(v113 + 16) = v108;
  (*(void (**)(unint64_t, char *, uint64_t))(v109 + 32))(v113 + v111, v110, v81);
  *(_QWORD *)(v113 + v112) = v135;
  v114 = (_QWORD *)(v113 + ((v112 + 15) & 0xFFFFFFFFFFFFFFF8));
  v115 = v130;
  *v114 = v129;
  v114[1] = v115;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A5ED00AC(v107, (uint64_t)sub_1A5EF97F8, v113);
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v155);
  swift_release();
}

uint64_t sub_1A5EE932C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A5EDE674(a1, a2, a3, (_QWORD *)*v3, &qword_1ED1CC008, (uint64_t (*)(uint64_t))type metadata accessor for BatchRepair);
  *v3 = result;
  return result;
}

void sub_1A5EE9358(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  os_log_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  unsigned __int8 v48;
  _QWORD *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  id v68;
  uint64_t v69;
  _QWORD *v70;
  os_log_t v71;
  uint64_t v72;
  _BYTE v73[12];
  int v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  os_log_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v81 = a4;
  v82 = a3;
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v83 = &v73[-v7];
  v8 = type metadata accessor for Batch();
  MEMORY[0x1E0C80A78](v8);
  v84 = &v73[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for BatchRepair();
  MEMORY[0x1E0C80A78](v10);
  v86 = &v73[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v14 = &v73[-v13];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v73[-v16];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v73[-v19];
  MEMORY[0x1E0C80A78](v21);
  v23 = &v73[-v22];
  MEMORY[0x1E0C80A78](v24);
  v26 = &v73[-v25];
  v80 = a1;
  v27 = a1 + OBJC_IVAR____TtC12AppAnalytics12FlushManager_logger;
  sub_1A5ED7E14(a2, (uint64_t)&v73[-v25], (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
  sub_1A5ED7E14(a2, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
  sub_1A5ED7E14(a2, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
  v78 = v27;
  v28 = sub_1A5F63F8C();
  v29 = sub_1A5F64454();
  v30 = v29;
  v31 = os_log_type_enabled(v28, v29);
  v79 = v17;
  v77 = v10;
  if (v31)
  {
    v32 = swift_slowAlloc();
    v75 = swift_slowAlloc();
    v89 = v75;
    *(_DWORD *)v32 = 136446722;
    v76 = v14;
    v33 = *((_QWORD *)v26 + 2);
    v34 = *((_QWORD *)v26 + 3);
    swift_bridgeObjectRetain();
    v87 = sub_1A5F18694(v33, v34, &v89);
    v74 = v30;
    sub_1A5F6458C();
    swift_bridgeObjectRelease();
    sub_1A5ED4D44((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
    *(_WORD *)(v32 + 12) = 2082;
    v35 = ContentType.description.getter(*((_QWORD *)v23 + 6));
    v87 = sub_1A5F18694(v35, v36, &v89);
    sub_1A5F6458C();
    swift_bridgeObjectRelease();
    sub_1A5ED4D44((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
    *(_WORD *)(v32 + 22) = 2082;
    v14 = v76;
    v37 = *((_QWORD *)v20 + 8);
    v87 = *((_QWORD *)v20 + 7);
    v88 = v37;
    sub_1A5EDCBFC(0, &qword_1ED1CC458, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    swift_bridgeObjectRetain();
    v38 = sub_1A5F6416C();
    v87 = sub_1A5F18694(v38, v39, &v89);
    sub_1A5F6458C();
    swift_bridgeObjectRelease();
    sub_1A5ED4D44((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
    _os_log_impl(&dword_1A5EB9000, v28, (os_log_type_t)v74, "Attempting to repair batch, identifier=%{public}s, contentType=%{public}s, groupName=%{public}s)", (uint8_t *)v32, 0x20u);
    v40 = v75;
    swift_arrayDestroy();
    MEMORY[0x1A85B8D2C](v40, -1, -1);
    MEMORY[0x1A85B8D2C](v32, -1, -1);

  }
  else
  {

    sub_1A5ED4D44((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
    sub_1A5ED4D44((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
    sub_1A5ED4D44((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
  }
  v41 = v82;
  v42 = *(_QWORD **)(v80 + 16);
  v43 = v42[11];
  v44 = v42[12];
  __swift_project_boxed_opaque_existential_1(v42 + 8, v43);
  LOBYTE(v43) = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v43, v44);
  v45 = sub_1A5F63F08();
  v46 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v47 = (uint64_t)v83;
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v83, 1, 1, v45);
  v48 = v43 & 1;
  v49 = v84;
  sub_1A5EEAC94(v48, v47, v84);
  sub_1A5ED43E0(v47, (unint64_t *)&qword_1ED1CFC10, v46);
  v50 = (void *)v85;
  ((void (*)(_QWORD *))v41)(v49);
  v51 = v50;
  if (v50)
  {
    sub_1A5ED4D44((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
    v52 = (uint64_t)v79;
    sub_1A5ED7E14(a2, (uint64_t)v79, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
    sub_1A5ED7E14(a2, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
    sub_1A5ED7E14(a2, (uint64_t)v86, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
    v53 = v50;
    v54 = v50;
    v55 = sub_1A5F63F8C();
    v56 = sub_1A5F6443C();
    v57 = v56;
    if (os_log_type_enabled(v55, v56))
    {
      v58 = swift_slowAlloc();
      v59 = swift_slowAlloc();
      v60 = v86;
      v83 = (_QWORD *)v59;
      v85 = swift_slowAlloc();
      v89 = v85;
      *(_DWORD *)v58 = 136446978;
      LODWORD(v84) = v57;
      v61 = *(_QWORD *)(v52 + 16);
      v62 = *(_QWORD *)(v52 + 24);
      swift_bridgeObjectRetain();
      v87 = sub_1A5F18694(v61, v62, &v89);
      sub_1A5F6458C();
      swift_bridgeObjectRelease();
      v82 = v55;
      sub_1A5ED4D44(v52, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
      *(_WORD *)(v58 + 12) = 2082;
      v63 = ContentType.description.getter(*((_QWORD *)v14 + 6));
      v87 = sub_1A5F18694(v63, v64, &v89);
      sub_1A5F6458C();
      swift_bridgeObjectRelease();
      sub_1A5ED4D44((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
      *(_WORD *)(v58 + 22) = 2082;
      v65 = *((_QWORD *)v60 + 8);
      v87 = *((_QWORD *)v60 + 7);
      v88 = v65;
      sub_1A5EDCBFC(0, &qword_1ED1CC458, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      swift_bridgeObjectRetain();
      v66 = sub_1A5F6416C();
      v87 = sub_1A5F18694(v66, v67, &v89);
      sub_1A5F6458C();
      swift_bridgeObjectRelease();
      sub_1A5ED4D44((uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
      *(_WORD *)(v58 + 32) = 2114;
      v68 = v51;
      v69 = _swift_stdlib_bridgeErrorToNSError();
      v87 = v69;
      sub_1A5F6458C();
      v70 = v83;
      *v83 = v69;

      v71 = v82;
      _os_log_impl(&dword_1A5EB9000, v82, (os_log_type_t)v84, "Failed to repair batch, identifier=%{public}s, contentType=%{public}s, groupName=%{public}s, error: %{public}@", (uint8_t *)v58, 0x2Au);
      sub_1A5F0A684();
      swift_arrayDestroy();
      MEMORY[0x1A85B8D2C](v70, -1, -1);
      v72 = v85;
      swift_arrayDestroy();
      MEMORY[0x1A85B8D2C](v72, -1, -1);
      MEMORY[0x1A85B8D2C](v58, -1, -1);

    }
    else
    {

      sub_1A5ED4D44(v52, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
      sub_1A5ED4D44((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
      sub_1A5ED4D44((uint64_t)v86, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);

    }
  }
  else
  {
    (*(void (**)(void))(a2 + *(int *)(v77 + 20)))();
    swift_bridgeObjectRelease();
    sub_1A5ED4D44((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
  }
}

uint64_t sub_1A5EE9B90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = type metadata accessor for Batch();
  v3 = a1 + *(int *)(v2 + 40);
  v4 = sub_1A5F63F08();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(v2 + 52);
  if (!v6(v7, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  return swift_release();
}

uint64_t sub_1A5EE9C84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for Batch() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1A5EE9CD4(a1, v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A5EE9CD4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v20 = a3 + 32;
    v4 = result + 32;
    swift_bridgeObjectRetain();
    do
    {
      v22 = v4;
      sub_1A5ECE02C(v4, (uint64_t)v25);
      if (qword_1ED1CFC08 != -1)
        swift_once();
      v5 = (void *)qword_1ED1CE7B0;
      sub_1A5EDD448();
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1A5F66C40;
      v8 = *(_QWORD *)(a2 + 16);
      v7 = *(_QWORD *)(a2 + 24);
      v9 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
      v10 = sub_1A5EE19C8();
      *(_QWORD *)(v6 + 64) = v10;
      v23 = v8;
      *(_QWORD *)(v6 + 32) = v8;
      *(_QWORD *)(v6 + 40) = v7;
      v11 = v26;
      v12 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
      v14 = v5;
      swift_bridgeObjectRetain();
      v15 = v13(v11, v12);
      *(_QWORD *)(v6 + 96) = v9;
      *(_QWORD *)(v6 + 104) = v10;
      *(_QWORD *)(v6 + 72) = v15;
      *(_QWORD *)(v6 + 80) = v16;
      sub_1A5F64454();
      sub_1A5F63F80();

      swift_bridgeObjectRelease();
      sub_1A5ECE02C(v20, (uint64_t)v24);
      __swift_project_boxed_opaque_existential_1(v24, v24[3]);
      v18 = v26;
      v17 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v17 + 8) + 8))(v18);
      sub_1A5F3C834(v19, v23, v7);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
      v4 = v22 + 40;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A5EE9FCC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 24);
}

uint64_t sub_1A5EE9FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  const void *v27;
  uint64_t v28;
  void *__dst;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = (int *)type metadata accessor for Batch();
  v9 = v8[10];
  __dst = (void *)(a1 + v9);
  v27 = (const void *)(a2 + v9);
  v10 = sub_1A5F63F08();
  v28 = *(_QWORD *)(v10 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v27, 1, v10))
  {
    sub_1A5ED4EF0();
    memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    v13 = v28;
  }
  else
  {
    v13 = v28;
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(__dst, v27, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v10);
  }
  v14 = v8[11];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  *(_BYTE *)(a1 + v8[12]) = *(_BYTE *)(a2 + v8[12]);
  v18 = v8[13];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  swift_bridgeObjectRetain();
  if (v11(v20, 1, v10))
  {
    sub_1A5ED4EF0();
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v19, v20, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v10);
  }
  v22 = *(int *)(a3 + 20);
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_retain();
  return a1;
}

unint64_t Batch.toJSONObject()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unsigned int v32;
  size_t v33;
  uint64_t isStackAllocationSafe;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int64_t v40;
  unint64_t v41;
  unint64_t v42;
  BOOL v43;
  unint64_t v44;
  int64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  char v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  int64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  char v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  int64_t v81;
  uint64_t v82;
  uint64_t *v83;
  char *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  __int128 v90;
  _QWORD v91[4];
  _QWORD v92[60];

  v1 = v0;
  v92[58] = *MEMORY[0x1E0C80C00];
  v2 = sub_1A5F63F08();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v77 - v8;
  v10 = type metadata accessor for Batch();
  sub_1A5EE229C((uint64_t)v1 + *(int *)(v10 + 52), (uint64_t)v9);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2);
  v12 = 0;
  if (v11 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    sub_1A5F63ED8();
    v14 = v13 * 1000.0;
    if ((~*(_QWORD *)&v14 & 0x7FF0000000000000) == 0)
      goto LABEL_85;
    if (v14 <= -9.22337204e18)
    {
LABEL_86:
      __break(1u);
    }
    else if (v14 < 9.22337204e18)
    {
      v12 = (uint64_t)v14;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      goto LABEL_6;
    }
    __break(1u);
  }
LABEL_6:
  sub_1A5ECD49C(0, &qword_1ED1CE1F0, (uint64_t (*)(uint64_t))sub_1A5ED7E58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  v88 = xmmword_1A5F66C40;
  *(_OWORD *)(inited + 16) = xmmword_1A5F66C40;
  *(_QWORD *)(inited + 32) = 0x617461646174656DLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v80 = (_QWORD *)inited;
  v16 = swift_initStackObject();
  v17 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_1A5F66C50;
  *(_QWORD *)(v16 + 32) = 0x6E6F6973726576;
  *(_QWORD *)(v16 + 40) = 0xE700000000000000;
  v18 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v16 + 48) = 0x312E312E30;
  *(_QWORD *)(v16 + 56) = 0xE500000000000000;
  *(_QWORD *)(v16 + 72) = v18;
  *(_QWORD *)(v16 + 80) = 0x696669746E656469;
  *(_QWORD *)(v16 + 88) = 0xEA00000000007265;
  v19 = v1[3];
  *(_QWORD *)(v16 + 96) = v1[2];
  *(_QWORD *)(v16 + 104) = v19;
  *(_QWORD *)(v16 + 120) = v18;
  *(_QWORD *)(v16 + 128) = 0x7461446873756C66;
  *(_QWORD *)(v16 + 136) = 0xE900000000000065;
  if (v11 == 1)
  {
    v20 = objc_allocWithZone(MEMORY[0x1E0C99E38]);
    swift_bridgeObjectRetain();
    v21 = objc_msgSend(v20, sel_init);
    *(_QWORD *)(v17 + 168) = sub_1A5EFD068();
    *(_QWORD *)(v17 + 144) = v21;
  }
  else
  {
    v91[1] = MEMORY[0x1E0DEDC60];
    *(_QWORD *)&v90 = v12;
    sub_1A5EF1B2C(&v90, (_OWORD *)(v16 + 144));
    swift_bridgeObjectRetain();
  }
  v22 = sub_1A5ED7CC8(v17);
  sub_1A5EF1B3C(0, (unint64_t *)&qword_1ED1CE4E8, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  v24 = v23;
  v25 = v80;
  v80[6] = v22;
  v25[9] = v23;
  v25[10] = 1635017060;
  v25[11] = 0xE400000000000000;
  v26 = swift_initStackObject();
  *(_OWORD *)(v26 + 16) = v88;
  *(_QWORD *)(v26 + 32) = 0x6E6F6973736573;
  *(_QWORD *)(v26 + 40) = 0xE700000000000000;
  *(_QWORD *)(v26 + 48) = *v1;
  *(_QWORD *)(v26 + 72) = v24;
  *(_QWORD *)(v26 + 80) = 0x73746E657665;
  *(_QWORD *)(v26 + 88) = 0xE600000000000000;
  v27 = v1[1];
  v28 = *(_QWORD *)(v27 + 16);
  if (!v28)
  {
    swift_bridgeObjectRetain();
    v70 = MEMORY[0x1E0DEE9D8];
    goto LABEL_78;
  }
  v78 = v26;
  v79 = v24;
  v89 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A5EF7834(0, v28, 0);
  v29 = 0;
  v77 = v27;
  v81 = v28;
  v82 = v27 + 32;
  *(_QWORD *)&v88 = v91;
  do
  {
    v30 = *(_QWORD *)(v82 + 8 * v29);
    v31 = *(_BYTE *)(v30 + 32);
    v32 = v31 & 0x3F;
    v85 = (unint64_t)((1 << v31) + 63) >> 6;
    v86 = v29;
    v33 = 8 * v85;
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v32 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
    {
      v83 = &v77;
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      v84 = (char *)&v77 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0);
      bzero(v84, v33);
      v87 = 0;
      v35 = 0;
      v36 = v30 + 64;
      v37 = 1 << *(_BYTE *)(v30 + 32);
      if (v37 < 64)
        v38 = ~(-1 << v37);
      else
        v38 = -1;
      v39 = v38 & *(_QWORD *)(v30 + 64);
      v40 = (unint64_t)(v37 + 63) >> 6;
      while (1)
      {
        if (v39)
        {
          v41 = __clz(__rbit64(v39));
          v39 &= v39 - 1;
          v42 = v41 | (v35 << 6);
        }
        else
        {
          v43 = __OFADD__(v35++, 1);
          if (v43)
          {
            __break(1u);
            goto LABEL_80;
          }
          if (v35 >= v40)
            goto LABEL_41;
          v44 = *(_QWORD *)(v36 + 8 * v35);
          if (!v44)
          {
            v45 = v35 + 1;
            if (v35 + 1 >= v40)
              goto LABEL_41;
            v44 = *(_QWORD *)(v36 + 8 * v45);
            if (!v44)
            {
              v45 = v35 + 2;
              if (v35 + 2 >= v40)
              {
LABEL_41:
                v51 = v81;
                v52 = v86;
                v53 = sub_1A5EF36E8((unint64_t *)v84, v85, v87, v30);
                goto LABEL_71;
              }
              v44 = *(_QWORD *)(v36 + 8 * v45);
              if (!v44)
              {
                while (1)
                {
                  v35 = v45 + 1;
                  if (__OFADD__(v45, 1))
                    break;
                  if (v35 >= v40)
                    goto LABEL_41;
                  v44 = *(_QWORD *)(v36 + 8 * v35);
                  ++v45;
                  if (v44)
                    goto LABEL_28;
                }
LABEL_80:
                __break(1u);
LABEL_81:
                __break(1u);
LABEL_82:
                __break(1u);
LABEL_83:
                __break(1u);
LABEL_84:
                __break(1u);
LABEL_85:
                __break(1u);
                goto LABEL_86;
              }
            }
            v35 = v45;
          }
LABEL_28:
          v39 = (v44 - 1) & v44;
          v42 = __clz(__rbit64(v44)) + (v35 << 6);
        }
        v46 = (uint64_t *)(*(_QWORD *)(v30 + 48) + 16 * v42);
        v48 = *v46;
        v47 = v46[1];
        sub_1A5EF30B0(*(_QWORD *)(v30 + 56) + 32 * v42, (uint64_t)v92);
        *(_QWORD *)&v90 = v48;
        *((_QWORD *)&v90 + 1) = v47;
        sub_1A5EF30B0((uint64_t)v92, v88);
        if (v48 == 0x4D65746176697270 && v47 == 0xEF61746164617465)
        {
          swift_bridgeObjectRetain_n();
          sub_1A5ED4D44((uint64_t)&v90, (uint64_t (*)(_QWORD))sub_1A5EF1BE0);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v92);
          swift_bridgeObjectRelease();
        }
        else
        {
          v50 = sub_1A5F64880();
          swift_bridgeObjectRetain_n();
          sub_1A5ED4D44((uint64_t)&v90, (uint64_t (*)(_QWORD))sub_1A5EF1BE0);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v92);
          swift_bridgeObjectRelease();
          if ((v50 & 1) == 0)
          {
            *(_QWORD *)&v84[(v42 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v42;
            v43 = __OFADD__(v87++, 1);
            if (v43)
              goto LABEL_83;
          }
        }
      }
    }
    v84 = (char *)swift_slowAlloc();
    bzero(v84, v33);
    v87 = 0;
    v54 = 0;
    v55 = v30 + 64;
    v56 = 1 << *(_BYTE *)(v30 + 32);
    if (v56 < 64)
      v57 = ~(-1 << v56);
    else
      v57 = -1;
    v58 = v57 & *(_QWORD *)(v30 + 64);
    v59 = (unint64_t)(v56 + 63) >> 6;
    while (v58)
    {
      v60 = __clz(__rbit64(v58));
      v58 &= v58 - 1;
      v61 = v60 | (v54 << 6);
LABEL_58:
      v64 = (uint64_t *)(*(_QWORD *)(v30 + 48) + 16 * v61);
      v66 = *v64;
      v65 = v64[1];
      sub_1A5EF30B0(*(_QWORD *)(v30 + 56) + 32 * v61, (uint64_t)v92);
      *(_QWORD *)&v90 = v66;
      *((_QWORD *)&v90 + 1) = v65;
      sub_1A5EF30B0((uint64_t)v92, v88);
      if (v66 == 0x4D65746176697270 && v65 == 0xEF61746164617465)
      {
        swift_bridgeObjectRetain_n();
        sub_1A5ED4D44((uint64_t)&v90, (uint64_t (*)(_QWORD))sub_1A5EF1BE0);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v92);
        swift_bridgeObjectRelease();
      }
      else
      {
        v68 = sub_1A5F64880();
        swift_bridgeObjectRetain_n();
        sub_1A5ED4D44((uint64_t)&v90, (uint64_t (*)(_QWORD))sub_1A5EF1BE0);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v92);
        swift_bridgeObjectRelease();
        if ((v68 & 1) == 0)
        {
          *(_QWORD *)&v84[(v61 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v61;
          v43 = __OFADD__(v87++, 1);
          if (v43)
            goto LABEL_84;
        }
      }
    }
    v43 = __OFADD__(v54++, 1);
    if (v43)
      goto LABEL_81;
    if (v54 >= v59)
      goto LABEL_70;
    v62 = *(_QWORD *)(v55 + 8 * v54);
    if (v62)
      goto LABEL_57;
    v63 = v54 + 1;
    if (v54 + 1 >= v59)
      goto LABEL_70;
    v62 = *(_QWORD *)(v55 + 8 * v63);
    if (v62)
      goto LABEL_56;
    v63 = v54 + 2;
    if (v54 + 2 >= v59)
      goto LABEL_70;
    v62 = *(_QWORD *)(v55 + 8 * v63);
    if (v62)
    {
LABEL_56:
      v54 = v63;
LABEL_57:
      v58 = (v62 - 1) & v62;
      v61 = __clz(__rbit64(v62)) + (v54 << 6);
      goto LABEL_58;
    }
    while (1)
    {
      v54 = v63 + 1;
      if (__OFADD__(v63, 1))
        goto LABEL_82;
      if (v54 >= v59)
        break;
      v62 = *(_QWORD *)(v55 + 8 * v54);
      ++v63;
      if (v62)
        goto LABEL_57;
    }
LABEL_70:
    v51 = v81;
    v52 = v86;
    v69 = v84;
    v53 = sub_1A5EF36E8((unint64_t *)v84, v85, v87, v30);
    MEMORY[0x1A85B8D2C](v69, -1, -1);
LABEL_71:
    swift_bridgeObjectRelease();
    v70 = v89;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1A5EF7834(0, *(_QWORD *)(v70 + 16) + 1, 1);
      v70 = v89;
    }
    v72 = *(_QWORD *)(v70 + 16);
    v71 = *(_QWORD *)(v70 + 24);
    if (v72 >= v71 >> 1)
    {
      sub_1A5EF7834(v71 > 1, v72 + 1, 1);
      v70 = v89;
    }
    v29 = v52 + 1;
    *(_QWORD *)(v70 + 16) = v72 + 1;
    *(_QWORD *)(v70 + 8 * v72 + 32) = v53;
  }
  while (v29 != v51);
  swift_bridgeObjectRelease();
  v26 = v78;
  v24 = v79;
LABEL_78:
  sub_1A5EF7554(0, &qword_1ED1CE1A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  *(_QWORD *)(v26 + 120) = v73;
  *(_QWORD *)(v26 + 96) = v70;
  v74 = sub_1A5ED7CC8(v26);
  v75 = (uint64_t)v80;
  v80[15] = v24;
  *(_QWORD *)(v75 + 96) = v74;
  return sub_1A5ED7CC8(v75);
}

uint64_t destroy for Batch(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_1A5F63F08();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(a2 + 52);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return result;
}

uint64_t sub_1A5EEAC94@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  int v6;
  int *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v38[4];
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v4 = v3;
  v40 = a2;
  v6 = a1;
  v7 = (int *)type metadata accessor for Batch();
  MEMORY[0x1E0C80A78](v7);
  v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v38[-v11];
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = &v38[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v18 = &v38[-v17];
  MEMORY[0x1E0C80A78](v19);
  v21 = &v38[-v20];
  v22 = v4[4];
  v23 = v4[5];
  v44 = v4[6];
  v45 = v22;
  v43 = v4[7];
  v49 = v4[8];
  v50 = v23;
  sub_1A5EE229C((uint64_t)v4 + v7[10], (uint64_t)&v38[-v20]);
  v24 = (uint64_t *)((char *)v4 + v7[11]);
  v25 = *v24;
  v26 = v24[1];
  v27 = *v4;
  v47 = v4[1];
  v48 = v26;
  v41 = v4[2];
  v42 = v25;
  v46 = v4[3];
  sub_1A5ED7E14((uint64_t)v4, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
  if (v6 == 2)
    v28 = v12[v7[12]];
  else
    v28 = v6 & 1;
  v39 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A5ED4D44((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
  sub_1A5EE229C(v40, (uint64_t)v15);
  sub_1A5ED7E14((uint64_t)v4, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
  v29 = sub_1A5F63F08();
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v30 + 48))(v15, 1, v29) == 1)
  {
    sub_1A5EE229C((uint64_t)&v9[v7[13]], (uint64_t)v18);
    sub_1A5ED4D44((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
    sub_1A5EFE6B0((uint64_t)v15);
  }
  else
  {
    sub_1A5ED4D44((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v30 + 32))(v18, v15, v29);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v18, 0, 1, v29);
  }
  v31 = v50;
  a3[4] = v45;
  a3[5] = v31;
  v32 = v43;
  a3[6] = v44;
  a3[7] = v32;
  a3[8] = v49;
  sub_1A5EE5D8C((uint64_t)v21, (uint64_t)a3 + v7[10]);
  v33 = (_QWORD *)((char *)a3 + v7[11]);
  v34 = v48;
  *v33 = v42;
  v33[1] = v34;
  v35 = v47;
  *a3 = v27;
  a3[1] = v35;
  v36 = v46;
  a3[2] = v41;
  a3[3] = v36;
  *((_BYTE *)a3 + v7[12]) = v39;
  return sub_1A5EE5D8C((uint64_t)v18, (uint64_t)a3 + v7[13]);
}

void sub_1A5EEAFA8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1A5EEB0AC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1A5EEB120);
}

void sub_1A5EEB0B4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1A5EEB0BCLL);
  JUMPOUT(0x1A5EEB120);
}

void sub_1A5EEB0FC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A5EEB120);
}

void sub_1A5EEB104()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A5EEB120);
}

uint64_t sub_1A5EEB10C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1A5EEB120);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1A5EEB11CLL);
    JUMPOUT(0x1A5EEB118);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t type metadata accessor for EventProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EventProperty);
}

_BYTE *sub_1A5EEB1BC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

uint64_t sub_1A5EEB1C4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A5EEB1CC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5EEB1FC + 4 * byte_1A5F66F30[*v0]))(0x4449746E657665, 0xE700000000000000);
}

uint64_t sub_1A5EEB1FC()
{
  return 0x6D6954746E657665;
}

uint64_t sub_1A5EEB220()
{
  return 0x746150746E657665;
}

uint64_t sub_1A5EEB240()
{
  return 0x496E6F6973736573;
}

uint64_t sub_1A5EEB25C()
{
  return 0x6973736553707061;
}

uint64_t getEnumTagSinglePayload for EventMirrorProperty(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1A5EEB3B4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t Tracker.transaction(block:)(uint64_t a1, uint64_t a2)
{
  return sub_1A5EEC6FC(a1, a2, (uint64_t)&unk_1E4FD2A68, (uint64_t)sub_1A5EF1E00);
}

uint64_t SessionManager.tracker.getter()
{
  return swift_retain();
}

uint64_t SessionData.init(key:data:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  char *v8;

  *a6 = a1;
  a6[1] = a2;
  v8 = (char *)a6 + *(int *)(type metadata accessor for SessionData(0, a4, a5, a4) + 36);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v8, a3, a4);
}

ValueMetadata *type metadata accessor for DataEventTrait()
{
  return &type metadata for DataEventTrait;
}

uint64_t storeEnumTagSinglePayload for EventMirrorProperty(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionGroup()
{
  return &type metadata for SessionGroup;
}

BOOL sub_1A5EEB4AC(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

ValueMetadata *type metadata accessor for DenylistDescriptor()
{
  return &type metadata for DenylistDescriptor;
}

uint64_t sub_1A5EEB4EC()
{
  return swift_allocateGenericValueMetadata();
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for PrivacyValidation()
{
  return &type metadata for PrivacyValidation;
}

ValueMetadata *type metadata accessor for TimestampGranularity()
{
  return &type metadata for TimestampGranularity;
}

uint64_t getEnumTagSinglePayload for AnyDataEventEntry(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1A5EEB570()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x73656D6954646E65;
  if (*v0 != 1)
    v1 = 0x6E6F697461727564;
  if (*v0)
    return v1;
  else
    return 0x6D69547472617473;
}

uint64_t getEnumTagSinglePayload for EventData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for SessionManager.Options()
{
  return &type metadata for SessionManager.Options;
}

ValueMetadata *type metadata accessor for FlushEvents()
{
  return &type metadata for FlushEvents;
}

uint64_t storeEnumTagSinglePayload for EventData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A5EEB6E0 + 4 * byte_1A5F66F3A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A5EEB714 + 4 * byte_1A5F66F35[v4]))();
}

uint64_t sub_1A5EEB714(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5EEB71C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5EEB724);
  return result;
}

uint64_t sub_1A5EEB730(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5EEB738);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A5EEB73C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5EEB744(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t SessionManager.processorManager.getter()
{
  return swift_retain();
}

uint64_t storeEnumTagSinglePayload for TimedData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A5EEB7A4 + 4 * byte_1A5F6C525[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A5EEB7D8 + 4 * byte_1A5F6C520[v4]))();
}

uint64_t sub_1A5EEB7D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5EEB7E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5EEB7E8);
  return result;
}

uint64_t sub_1A5EEB7F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5EEB7FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A5EEB800(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5EEB808(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for FlushManager.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for TimestampJitter()
{
  return &type metadata for TimestampJitter;
}

uint64_t sub_1A5EEB8B4(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A5EEB8DC()
{
  uint64_t *v0;

  return sub_1A5EEBA04(v0[5], v0[6], v0[2], v0[3]);
}

uint64_t AccessTracker.pop<A>(type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  void *v10;
  id v11;
  uint64_t v12;

  v5 = sub_1A5F64070();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = *(void **)(*(_QWORD *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v8 = v10;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
    v11 = v10;
    LOBYTE(v10) = sub_1A5F64088();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
    if ((v10 & 1) != 0)
    {
      sub_1A5EEBA04(0, 0, a2, a3);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1A5EEBA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  _UNKNOWN **v36;
  __int128 v37;
  uint64_t v38;

  v9 = sub_1A5F64568();
  v32 = *(_QWORD *)(v9 - 8);
  v33 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v32 - v10;
  v12 = sub_1A5F64070();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (uint64_t *)((char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(*(_QWORD *)(v4 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v13 + 104))(v16, *MEMORY[0x1E0DEF740], v12, v14);
  v18 = v17;
  LOBYTE(v17) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v16, v12);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  v20 = sub_1A5EC6A94(a1, a2);
  v22 = v21;
  swift_beginAccess();
  v23 = *(_QWORD *)(v4 + 120);
  if (!*(_QWORD *)(v23 + 16))
  {
    v36 = 0;
    v34 = 0u;
    v35 = 0u;
LABEL_11:
    swift_bridgeObjectRelease();
    return sub_1A5EF1CF8((uint64_t)&v34, (unint64_t *)&qword_1ED1CE4D8, (unint64_t *)&qword_1ED1CE4D0, (uint64_t)&protocol descriptor for DataEventStackType);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = sub_1A5EF11E8(v20, v22);
  if ((v25 & 1) != 0)
  {
    sub_1A5ECE02C(*(_QWORD *)(v23 + 56) + 40 * v24, (uint64_t)&v34);
  }
  else
  {
    v36 = 0;
    v34 = 0u;
    v35 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v35 + 1))
    goto LABEL_11;
  sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE4D0);
  v27 = type metadata accessor for DataEventStack(0, a3, a4, v26);
  if ((swift_dynamicCast() & 1) == 0)
    return swift_bridgeObjectRelease();
  v28 = v37;
  v29 = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30 = sub_1A5EEBD78(v28, *((uint64_t *)&v28 + 1), v29, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v30 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  sub_1A5EEBDE0(v27, v31, (uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v33);
  *((_QWORD *)&v35 + 1) = v27;
  v36 = &off_1E4FD1350;
  v34 = v37;
  *(_QWORD *)&v35 = v38;
  swift_beginAccess();
  sub_1A5EF0D60((uint64_t)&v34, v20, v22);
  return swift_endAccess();
}

uint64_t sub_1A5EEBD20(uint64_t a1, uint64_t a2)
{
  if (!a2)
    a1 = sub_1A5EF2700();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A5EEBD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  type metadata accessor for DataEventStack.Entry(255, a4, a5, a4);
  v5 = sub_1A5F6431C();
  MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEAF50], v5);
  return sub_1A5F643D0() & 1;
}

uint64_t sub_1A5EEBDE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = type metadata accessor for DataEventStack.Entry(0, v4, *(_QWORD *)(a1 + 24), a2);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - v7;
  v9 = sub_1A5F6431C();
  MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEAF20], v9);
  MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEAF58], v9);
  sub_1A5F643E8();
  v10 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(a3, v8, v4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a3, 0, 1, v4);
}

uint64_t sub_1A5EEBEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(a2 + 32);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a1;
  v8[4] = a4;
  swift_retain();
  swift_unknownObjectRetain();
  sub_1A5EEC784(v7, (uint64_t)sub_1A5EF428C, (uint64_t)v8);
  return swift_release();
}

uint64_t Tracker.time<A>(_:submitAndRestartWithSession:)(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v15;

  v9 = sub_1A5F63F08();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v4 + 96);
  swift_retain();
  sub_1A5F63EFC();
  sub_1A5EEC028(a1, v13, a2, (uint64_t)v12, a3, a4);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1A5EEC028(void *a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;

  v20 = a6;
  v22 = a3;
  v11 = sub_1A5F63F08();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x1E0C80A78](v11);
  v21 = *(_QWORD *)(v6 + 88);
  v19 = *(_QWORD *)(v6 + 80);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))((char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v11, v14);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = (char *)swift_allocObject();
  v17 = v20;
  *((_QWORD *)v16 + 2) = a5;
  *((_QWORD *)v16 + 3) = v17;
  *((_QWORD *)v16 + 4) = v6;
  *((_QWORD *)v16 + 5) = a1;
  *((_QWORD *)v16 + 6) = a2;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v16[v15], (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v16[v15 + v13] = v22;
  swift_retain();
  sub_1A5EEC96C(a1, a2);
  sub_1A5EEC784(v19, (uint64_t)sub_1A5EF3D78, (uint64_t)v16);
  return swift_release();
}

uint64_t SessionManager.transaction(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v2 + 48);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = v2;
  swift_retain();
  swift_retain();
  sub_1A5EEC784(v5, (uint64_t)sub_1A5EF3DDC, (uint64_t)v6);
  return swift_release();
}

uint64_t Tracker.push<A>(data:traits:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;

  v14 = type metadata accessor for PushEvent(0, a6, a7, a4);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v20 - v17;
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(_QWORD *)(a6 - 8) + 16))((char *)&v20 - v17, a1, a6, v16);
  swift_storeEnumTagMultiPayload();
  sub_1A5EEC2E0((uint64_t)v18, a2, a3, a4, a5, a6, a7);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_1A5EEC2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v8 = v7;
  v26 = a7;
  v31 = a4;
  v32 = a5;
  v30 = a3;
  v28 = a2;
  v11 = type metadata accessor for PushEvent(0, a6, a7, a4);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v25 - v15;
  v29 = *(_QWORD *)(v8 + 88);
  v27 = *(_QWORD *)(v8 + 80);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))((char *)&v25 - v15, a1, v11, v14);
  v17 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v18 = (v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = (char *)swift_allocObject();
  v21 = v26;
  *((_QWORD *)v20 + 2) = a6;
  *((_QWORD *)v20 + 3) = v21;
  *((_QWORD *)v20 + 4) = v8;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v20[v17], v16, v11);
  *(_QWORD *)&v20[v18] = v28;
  v22 = &v20[v19];
  v23 = v31;
  *(_QWORD *)v22 = v30;
  *((_QWORD *)v22 + 1) = v23;
  *(_QWORD *)&v20[(v19 + 23) & 0xFFFFFFFFFFFFFFF8] = v32;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A5EEC784(v27, (uint64_t)sub_1A5EF3BA4, (uint64_t)v20);
  return swift_release();
}

uint64_t SessionManager.push<A>(_:traits:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;

  v22 = a5;
  v13 = type metadata accessor for SessionData(255, a6, a7, a4);
  v14 = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for SessionData<A>, v13);
  v16 = type metadata accessor for PushEvent(0, v13, v14, v15);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v22 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(_QWORD *)(v13 - 8) + 16))((char *)&v22 - v19, a1, v13, v18);
  swift_storeEnumTagMultiPayload();
  sub_1A5EEC568((uint64_t)v20, a2, a3, a4, v22, a6, a7);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
}

uint64_t sub_1A5EEC568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = v7;
  v31 = a7;
  v35 = a4;
  v36 = a5;
  v33 = a2;
  v34 = a3;
  v11 = type metadata accessor for SessionData(255, a6, a7, a4);
  v12 = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for SessionData<A>, v11);
  v14 = type metadata accessor for PushEvent(0, v11, v12, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v29 - v18;
  v32 = *(_QWORD *)(v8 + 56);
  v30 = *(_QWORD *)(v8 + 48);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))((char *)&v29 - v18, a1, v14, v17);
  v20 = (*(unsigned __int8 *)(v15 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v21 = (v16 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = (char *)swift_allocObject();
  v24 = v31;
  *((_QWORD *)v23 + 2) = a6;
  *((_QWORD *)v23 + 3) = v24;
  *((_QWORD *)v23 + 4) = v8;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v23[v20], v19, v14);
  v25 = v34;
  *(_QWORD *)&v23[v21] = v33;
  v26 = &v23[v22];
  v27 = v35;
  *(_QWORD *)v26 = v25;
  *((_QWORD *)v26 + 1) = v27;
  *(_QWORD *)&v23[(v22 + 23) & 0xFFFFFFFFFFFFFFF8] = v36;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A5EEC784(v30, (uint64_t)sub_1A5EF3AA8, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_1A5EEC6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *(_QWORD *)(v4 + 80);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v4;
  v9[3] = a1;
  v9[4] = a2;
  swift_retain();
  swift_retain();
  sub_1A5EEC784(v8, a4, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_1A5EEC784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD **v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  _QWORD aBlock[6];

  v14 = a2;
  sub_1A5F63FE0();
  MEMORY[0x1E0C80A78]();
  v5 = sub_1A5F64028();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD **)(a1 + OBJC_IVAR___AAAccessQueue__qos);
  swift_beginAccess();
  v10 = *v9;
  v11 = v10[2];
  swift_retain();
  os_unfair_lock_lock_with_options();
  v12 = (char *)v10 + *(_QWORD *)(*v10 + 96);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v12, v5);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  swift_release();
  sub_1A5F63FD4();
  aBlock[4] = v14;
  aBlock[5] = a3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A5ECE4D0;
  aBlock[3] = &block_descriptor_6;
  _Block_copy(aBlock);
  sub_1A5F64064();
  swift_allocObject();
  swift_retain();
  sub_1A5F64058();
  swift_release();
  sub_1A5F64484();
  return swift_release();
}

id sub_1A5EEC96C(id result, unint64_t a2)
{
  if (a2 >> 62 == 2)
    return result;
  if ((a2 >> 62) <= 1)
    return (id)swift_retain();
  return result;
}

uint64_t sub_1A5EEC99C(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  int EnumCaseMultiPayload;
  unint64_t *v23;
  uint64_t (*v24)();
  uint64_t (*v25)();
  void *v26;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  double v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char isUniquelyReferenced_nonNull_native;
  char v50;
  unint64_t v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  char v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  objc_class *v65;
  id v66;
  id v67;
  uint64_t result;
  _QWORD v69[2];
  __int128 v70;
  _QWORD *v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  __int128 *v82;
  id v83;
  _QWORD *v84;
  uint64_t v85;
  _OWORD v86[2];
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  objc_super v90;
  _QWORD *v91;

  v3 = v2;
  v4 = v1;
  v74 = type metadata accessor for SequenceEntry.Kind(0);
  MEMORY[0x1E0C80A78](v74);
  v82 = (__int128 *)((char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v81 = type metadata accessor for SequenceEntry(0);
  v7 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v9 = (_QWORD *)((char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v73 = type metadata accessor for Sequence(0);
  v10 = *(_QWORD *)((char *)v4 + *(int *)(v73 + 28));
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
  {
    v63 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_30:
    sub_1A5EF08A0();
    v88 = v64;
    *(_QWORD *)&v87 = v63;
    v65 = (objc_class *)type metadata accessor for JSON();
    v66 = objc_allocWithZone(v65);
    sub_1A5EDCB9C((uint64_t)&v87, (uint64_t)v66 + OBJC_IVAR___AAJSON_value);
    v90.receiver = v66;
    v90.super_class = v65;
    v67 = objc_msgSendSuper2(&v90, sel_init);
    sub_1A5EDCB44((uint64_t)&v87);
    return (uint64_t)v67;
  }
  v83 = v3;
  v79 = *(_QWORD *)(a1 + 16);
  v12 = v10 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v13 = *(_QWORD *)(v7 + 72);
  v77 = a1;
  v78 = v13;
  v69[1] = v10;
  swift_bridgeObjectRetain();
  v71 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v70 = xmmword_1A5F66C40;
  v72 = xmmword_1A5F66C50;
  v80 = v4;
  v84 = v9;
  while (1)
  {
    v85 = v11;
    sub_1A5ED7E14(v12, (uint64_t)v9, type metadata accessor for SequenceEntry);
    if (!v79)
      break;
    v16 = *v4;
    v15 = v4[1];
    v17 = *(_QWORD *)(v77 + 24);
    v19 = *v9;
    v18 = v9[1];
    sub_1A5EDCBFC(0, (unint64_t *)&qword_1ED1CB880, (uint64_t)&type metadata for DenylistDescriptor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 32) = 42;
    *(_OWORD *)(inited + 16) = v72;
    *(_QWORD *)(inited + 40) = 0xE100000000000000;
    *(_QWORD *)(inited + 48) = 42;
    *(_QWORD *)(inited + 56) = 0xE100000000000000;
    *(_QWORD *)(inited + 64) = 42;
    *(_QWORD *)(inited + 72) = 0xE100000000000000;
    *(_QWORD *)(inited + 80) = v16;
    *(_QWORD *)(inited + 88) = v15;
    *(_QWORD *)(inited + 96) = 42;
    *(_QWORD *)(inited + 104) = 0xE100000000000000;
    *(_QWORD *)(inited + 112) = 42;
    *(_QWORD *)(inited + 120) = 0xE100000000000000;
    *(_QWORD *)(inited + 128) = v16;
    *(_QWORD *)(inited + 136) = v15;
    *(_QWORD *)(inited + 144) = v19;
    v4 = v80;
    *(_QWORD *)(inited + 152) = v18;
    *(_QWORD *)(inited + 160) = 42;
    *(_QWORD *)(inited + 168) = 0xE100000000000000;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v21 = sub_1A5F47EFC(inited);
    v9 = v84;
    swift_setDeallocating();
    swift_arrayDestroy();
    LOBYTE(v18) = sub_1A5EF3268(v21, *(_QWORD *)(v17 + 16));
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
      break;
LABEL_5:
    sub_1A5ED4D44((uint64_t)v9, type metadata accessor for SequenceEntry);
LABEL_6:
    v12 += v78;
    v11 = v85 - 1;
    if (v85 == 1)
    {
      swift_bridgeObjectRelease();
      v63 = v71;
      goto LABEL_30;
    }
  }
  sub_1A5ED7E14((uint64_t)v9 + *(int *)(v81 + 20), (uint64_t)v82, type metadata accessor for SequenceEntry.Kind);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v88 = type metadata accessor for TimedData();
    v23 = (unint64_t *)&qword_1ED1CE170;
    v24 = type metadata accessor for TimedData;
    v25 = type metadata accessor for TimedData;
    v26 = &protocol conformance descriptor for TimedData;
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v88 = type metadata accessor for EventData();
    v23 = (unint64_t *)&unk_1ED1CD7D0;
    v24 = type metadata accessor for EventData;
    v25 = type metadata accessor for EventData;
    v26 = &protocol conformance descriptor for EventData;
LABEL_13:
    v89 = sub_1A5ECC4D8(v23, (uint64_t (*)(uint64_t))v25, (uint64_t)v26);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v87);
    sub_1A5ECD6B0((uint64_t)v82, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))v24);
    goto LABEL_15;
  }
  sub_1A5EC1D18(v82, (uint64_t)&v87);
LABEL_15:
  v28 = v88;
  v29 = v89;
  __swift_project_boxed_opaque_existential_1(&v87, v88);
  v30 = (double *)((char *)v4 + *(int *)(v73 + 24));
  v31 = v30[1];
  LOBYTE(v86[0]) = *(_BYTE *)v30;
  v32 = v83;
  v33 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t, double))(v29 + 32))(v86, v28, v29, v31);
  if (v32)
  {
    v76 = v12;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v87);
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v83 = (id)qword_1ED1CE7B0;
    v75 = sub_1A5F64448();
    sub_1A5EDD448();
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = v70;
    *(_QWORD *)&v87 = 0;
    *((_QWORD *)&v87 + 1) = 0xE000000000000000;
    *(_QWORD *)&v86[0] = v32;
    sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
    sub_1A5F646F4();
    v36 = *((_QWORD *)&v87 + 1);
    v35 = v87;
    v37 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
    v38 = sub_1A5EE19C8();
    *(_QWORD *)(v34 + 64) = v38;
    *(_OWORD *)(v34 + 32) = __PAIR128__(v36, v35);
    *(_QWORD *)&v87 = 0;
    *((_QWORD *)&v87 + 1) = 0xE000000000000000;
    v9 = v84;
    sub_1A5F646F4();
    v39 = v87;
    *(_QWORD *)(v34 + 96) = v37;
    *(_QWORD *)(v34 + 104) = v38;
    *(_OWORD *)(v34 + 72) = v39;
    v40 = v83;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    sub_1A5ED4D44((uint64_t)v9, type metadata accessor for SequenceEntry);
    v83 = 0;
    v4 = v80;
    v12 = v76;
    goto LABEL_6;
  }
  v41 = v33;
  v42 = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v87);
  MEMORY[0x1E0C80A78](v42);
  v43 = v84;
  v69[-4] = v77;
  v69[-3] = v43;
  v69[-2] = v4;
  v44 = sub_1A5F57828(v41, (uint64_t (*)(uint64_t, uint64_t, _BYTE *))sub_1A5EF30EC, (uint64_t)&v69[-6]);
  v83 = 0;
  swift_bridgeObjectRelease();
  v45 = *v43;
  v46 = v43[1];
  sub_1A5EF08A0();
  v88 = v47;
  *(_QWORD *)&v87 = v44;
  sub_1A5EF1B2C(&v87, v86);
  swift_bridgeObjectRetain();
  v48 = v71;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v91 = v48;
  v51 = sub_1A5EF11E8(v45, v46);
  v52 = v48[2];
  v53 = (v50 & 1) == 0;
  v54 = v52 + v53;
  if (!__OFADD__(v52, v53))
  {
    v55 = v50;
    if (v48[3] >= v54)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1A5F0510C();
    }
    else
    {
      sub_1A5EF1814(v54, isUniquelyReferenced_nonNull_native);
      v56 = sub_1A5EF11E8(v45, v46);
      if ((v55 & 1) != (v57 & 1))
        goto LABEL_33;
      v51 = v56;
    }
    v9 = v84;
    v58 = v91;
    v71 = v91;
    if ((v55 & 1) != 0)
    {
      v14 = (_OWORD *)(v91[7] + 32 * v51);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
      sub_1A5EF1B2C(v86, v14);
    }
    else
    {
      v91[(v51 >> 6) + 8] |= 1 << v51;
      v59 = (uint64_t *)(v58[6] + 16 * v51);
      *v59 = v45;
      v59[1] = v46;
      sub_1A5EF1B2C(v86, (_OWORD *)(v58[7] + 32 * v51));
      v60 = v58[2];
      v61 = __OFADD__(v60, 1);
      v62 = v60 + 1;
      if (v61)
        goto LABEL_32;
      v58[2] = v62;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  result = sub_1A5F648C8();
  __break(1u);
  return result;
}

_QWORD *sub_1A5EED0A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v32;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  type metadata accessor for SequenceEntry.Kind(0);
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v27 = *(_OWORD *)(v7 + 24);
    *(_OWORD *)(v6 + 24) = v27;
    (**(void (***)(char *, char *))(v27 - 8))(v6, v7);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v9 = *((_QWORD *)v7 + 1);
    *(_QWORD *)v6 = *(_QWORD *)v7;
    *((_QWORD *)v6 + 1) = v9;
    v10 = (int *)type metadata accessor for EventData();
    v11 = v10[5];
    v32 = &v6[v11];
    v12 = &v7[v11];
    v13 = sub_1A5F63F08();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v32, v12, v13);
    v15 = v10[6];
    v16 = &v6[v15];
    v17 = &v7[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v19 = v10[7];
    v20 = &v6[v19];
    v21 = &v7[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v23 = v10[8];
    v24 = &v6[v23];
    v25 = &v7[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v28 = sub_1A5F63F08();
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    v29(v6, v7, v28);
    v30 = type metadata accessor for TimedData();
    v29(&v6[*(int *)(v30 + 20)], &v7[*(int *)(v30 + 20)], v28);
    *(_QWORD *)&v6[*(int *)(v30 + 24)] = *(_QWORD *)&v7[*(int *)(v30 + 24)];
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1A5EED260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for SequenceEntry.Kind(0);
  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      return __swift_destroy_boxed_opaque_existential_0(v4);
    case 1:
      swift_bridgeObjectRelease();
      v8 = v4 + *(int *)(type metadata accessor for EventData() + 20);
      v9 = sub_1A5F63F08();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 0:
      v6 = sub_1A5F63F08();
      v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
      v10(v4, v6);
      v7 = v4 + *(int *)(type metadata accessor for TimedData() + 20);
      return ((uint64_t (*)(uint64_t, uint64_t))v10)(v7, v6);
  }
  return result;
}

uint64_t type metadata accessor for SequenceEntry.Kind(uint64_t a1)
{
  return sub_1A5EBC540(a1, qword_1ED1CC5B0);
}

uint64_t type metadata accessor for EventData()
{
  uint64_t result;

  result = qword_1ED1CE0E0;
  if (!qword_1ED1CE0E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5EED3EC(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v24 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v24;
    (**(void (***)(uint64_t, uint64_t))(v24 - 8))(a1, a2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = (int *)type metadata accessor for EventData();
    v7 = v6[5];
    v8 = a1 + v7;
    v9 = a2 + v7;
    v10 = sub_1A5F63F08();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    v12 = v6[6];
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v6[7];
    v17 = (_QWORD *)(a1 + v16);
    v18 = (_QWORD *)(a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = v6[8];
    v21 = (_QWORD *)(a1 + v20);
    v22 = (_QWORD *)(a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v25 = sub_1A5F63F08();
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v26(a1, a2, v25);
    v27 = type metadata accessor for TimedData();
    v26(a1 + *(int *)(v27 + 20), a2 + *(int *)(v27 + 20), v25);
    *(_QWORD *)(a1 + *(int *)(v27 + 24)) = *(_QWORD *)(a2 + *(int *)(v27 + 24));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1A5EED58C@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  void *v44;
  uint64_t v45;
  void (*v46)(_QWORD *, uint64_t, uint64_t);
  id v47;
  void (*v48)(_QWORD *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char v53;
  uint64_t v54;
  int EnumCaseMultiPayload;
  uint64_t *v56;
  int *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  void (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char v89;
  void (*v90)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  void (*v120)(char *, uint64_t, uint64_t);
  char *v121;
  char *v122;
  double v123;
  double v124;
  void (*v125)(char *, uint64_t);
  double v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  unint64_t v138;
  char v139;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  unint64_t v148;
  unint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  unint64_t v155;
  char v156;
  char v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  id v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  void (*v168)(_QWORD, _QWORD, _QWORD);
  unint64_t v169;
  _QWORD *v170;
  _QWORD v172[2];
  uint64_t v173;
  _QWORD *v174;
  uint64_t *v175;
  char *v176;
  void (*v177)(char *, uint64_t, uint64_t);
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  void (*v192)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v193;
  uint64_t *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  void *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  char *v211;
  uint64_t v212;
  uint64_t *v213;
  uint64_t v214;
  __int128 v215;
  uint64_t v216;
  _OWORD v217[2];
  uint64_t v218;
  _QWORD v219[2];
  uint64_t v220;
  uint64_t v221;
  void (*v222)(_QWORD *, uint64_t, uint64_t);
  unint64_t v223;
  char v224;

  v9 = v8;
  v199 = a7;
  v203 = a6;
  v208 = a5;
  v207 = a4;
  v193 = a3;
  v201 = a2;
  v204 = a1;
  v173 = a8;
  v206 = type metadata accessor for SequenceEntry(0);
  v205 = *(_QWORD *)(v206 - 8);
  v10 = MEMORY[0x1E0C80A78](v206);
  v209 = (uint64_t)v172 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (_QWORD *)((char *)v172 - v13);
  v15 = MEMORY[0x1E0C80A78](v12);
  v184 = (uint64_t)v172 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v183 = (char *)v172 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v198 = (uint64_t)v172 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v197 = (_QWORD *)((char *)v172 - v22);
  v23 = MEMORY[0x1E0C80A78](v21);
  v188 = (uint64_t)v172 - v24;
  MEMORY[0x1E0C80A78](v23);
  v187 = (_QWORD *)((char *)v172 - v25);
  v182 = sub_1A5F63F08();
  v181 = *(_QWORD *)(v182 - 8);
  v26 = MEMORY[0x1E0C80A78](v182);
  v180 = (char *)v172 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v179 = (char *)v172 - v28;
  v202 = type metadata accessor for TimedData();
  v29 = MEMORY[0x1E0C80A78](v202);
  v190 = (char *)v172 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v186 = (uint64_t)v172 - v31;
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CE0C0, (uint64_t (*)(uint64_t))type metadata accessor for Tracker.Timer, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v33 = MEMORY[0x1E0C80A78](v32);
  v176 = (char *)v172 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v191 = (uint64_t)v172 - v35;
  v195 = type metadata accessor for Tracker.Timer();
  v200 = *(_QWORD *)(v195 - 8);
  MEMORY[0x1E0C80A78](v195);
  v189 = (uint64_t)v172 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = type metadata accessor for Sequence(0);
  MEMORY[0x1E0C80A78](v212);
  v213 = (_QWORD *)((char *)v172 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v196 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v196);
  v39 = (_QWORD *)((char *)v172 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = sub_1A5F64070();
  v41 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v43 = (_QWORD *)((char *)v172 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = *(void **)(v9[10] + OBJC_IVAR___AAAccessQueue_queue);
  *v43 = v44;
  v45 = *MEMORY[0x1E0DEF740];
  v46 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v41 + 104);
  v46(v43, v45, v40);
  v47 = v44;
  LOBYTE(v44) = sub_1A5F64088();
  v48 = *(void (**)(_QWORD *, uint64_t))(v41 + 8);
  v48(v43, v40);
  if ((v44 & 1) == 0)
    goto LABEL_83;
  sub_1A5EF5014((unint64_t)v204, v201, v203, v199, (char *)&v222);
  LODWORD(v211) = v222;
  v210 = v9;
  v49 = MEMORY[0x1A85B8E10](v9 + 8);
  v50 = 0;
  if (!v49)
  {
    v58 = v199;
    v59 = v201;
    v60 = (uint64_t)v204;
    v56 = v213;
    v57 = (int *)v212;
LABEL_10:
    v61 = (char)v211;
    goto LABEL_11;
  }
  v51 = v49;
  v9 = *(_QWORD **)(*(_QWORD *)(v49 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *v43 = v9;
  v46(v43, v45, v40);
  v52 = v9;
  v53 = sub_1A5F64088();
  v48(v43, v40);
  if ((v53 & 1) == 0)
    goto LABEL_84;
  v54 = v51 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
  swift_beginAccess();
  sub_1A5ED7E14(v54, (uint64_t)v39, type metadata accessor for SessionManager.SessionState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v56 = v213;
  v57 = (int *)v212;
  if (!EnumCaseMultiPayload)
  {
    v62 = *v39;
    swift_unknownObjectRelease();
    v50 = *(_QWORD *)(v62 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_timestampConfiguration + 8);
    swift_release();
    v58 = v199;
    v59 = v201;
    v60 = (uint64_t)v204;
    goto LABEL_10;
  }
  v58 = v199;
  v59 = v201;
  v60 = (uint64_t)v204;
  v61 = (char)v211;
  if (EnumCaseMultiPayload == 1)
    sub_1A5ED4D44((uint64_t)v39, type metadata accessor for SessionManager.SessionState);
  swift_unknownObjectRelease();
LABEL_11:
  v63 = v203;
  v64 = sub_1A5EEFA84(v60, v59);
  v66 = v65;
  v196 = type metadata accessor for EventData();
  v67 = (char *)v56 + v57[5];
  v68 = *(void (**)(_QWORD))(v181 + 16);
  v178 = v193 + *(int *)(v196 + 20);
  v177 = (void (*)(char *, uint64_t, uint64_t))v68;
  v68(v67);
  v212 = v57[7];
  *(uint64_t *)((char *)v56 + v212) = MEMORY[0x1E0DEE9D8];
  *v56 = v64;
  v56[1] = v66;
  v69 = (char *)v56 + v57[6];
  *v69 = v61;
  *((_QWORD *)v69 + 1) = v50;
  v70 = sub_1A5EF5144(v204, v59, v63, v58);
  v9 = (_QWORD *)v70[2];
  if (v9)
  {
    v211 = &v224;
    v71 = v210 + 13;
    v175 = v210 + 14;
    v172[1] = v70;
    v72 = (uint64_t)(v70 + 4);
    swift_beginAccess();
    v185 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v174 = v14;
    v194 = v71;
    while (1)
    {
      sub_1A5EEED18(v72, (uint64_t)&v222);
      v46 = v222;
      v73 = v223;
      sub_1A5ECE02C((uint64_t)v211, (uint64_t)v219);
      swift_bridgeObjectRetain();
      sub_1A5EEECBC((uint64_t)&v222);
      v74 = v220;
      v75 = v221;
      __swift_project_boxed_opaque_existential_1(v219, v220);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v75 + 16))(v74, v75) & 1) != 0)
      {
        v93 = v220;
        v94 = v221;
        __swift_project_boxed_opaque_existential_1(v219, v220);
        v95 = (*(uint64_t (**)(uint64_t, uint64_t))(v94 + 8))(v93, v94);
        sub_1A5EEEDC8(v95, v96, v207, v208, 0, (uint64_t)&v215);
        swift_bridgeObjectRelease();
        if (v216)
        {
          sub_1A5EC1D18(&v215, (uint64_t)v217);
          sub_1A5ECE02C((uint64_t)v217, (uint64_t)v14 + *(int *)(v206 + 20));
          *v14 = v46;
          v14[1] = v73;
          type metadata accessor for SequenceEntry.Kind(0);
          swift_storeEnumTagMultiPayload();
          sub_1A5ED7E14((uint64_t)v14, v209, type metadata accessor for SequenceEntry);
          v56 = v213;
          v97 = *(uint64_t *)((char *)v213 + v212);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1A5EEF688(0, *(_QWORD *)(v97 + 16) + 1, 1, v97);
          v99 = *(_QWORD *)(v97 + 16);
          v98 = *(_QWORD *)(v97 + 24);
          if (v99 >= v98 >> 1)
            v97 = sub_1A5EEF688(v98 > 1, v99 + 1, 1, v97);
          *(_QWORD *)(v97 + 16) = v99 + 1;
          sub_1A5ECD6B0(v209, v97+ ((*(unsigned __int8 *)(v205 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80))+ *(_QWORD *)(v205 + 72) * v99, type metadata accessor for SequenceEntry);
          *(uint64_t *)((char *)v56 + v212) = v97;
          v100 = (uint64_t)v14;
          goto LABEL_28;
        }
        swift_bridgeObjectRelease();
        sub_1A5EF1CF8((uint64_t)&v215, &qword_1ED1CD458, qword_1ED1CE020, (uint64_t)&protocol descriptor for DataEventType);
        goto LABEL_14;
      }
      v76 = v220;
      v77 = v221;
      __swift_project_boxed_opaque_existential_1(v219, v220);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v77 + 24))(v76, v77) & 1) != 0)
        break;
      v78 = v220;
      v79 = v221;
      __swift_project_boxed_opaque_existential_1(v219, v220);
      v80 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 40))(v202, v202, v78, v79);
      v81 = v200;
      if ((v80 & 1) == 0)
        goto LABEL_35;
      v82 = sub_1A5EEFA84((uint64_t)v204, v201);
      v84 = v83;
      v85 = *v194;
      if (*(_QWORD *)(*v194 + 16))
      {
        v86 = v82;
        swift_bridgeObjectRetain();
        v87 = sub_1A5EF11E8(v86, v84);
        v88 = v191;
        if ((v89 & 1) != 0)
        {
          sub_1A5ED7E14(*(_QWORD *)(v85 + 56) + *(_QWORD *)(v81 + 72) * v87, v191, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
          v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56);
          v91 = v88;
          v92 = 0;
        }
        else
        {
          v90 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56);
          v91 = v191;
          v92 = 1;
        }
        v102 = v195;
        v192 = v90;
        v90(v91, v92, 1, v195);
        swift_bridgeObjectRelease();
        v101 = v102;
        v81 = v200;
      }
      else
      {
        v88 = v191;
        v101 = v195;
        v192 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56);
        v192(v191, 1, 1, v195);
      }
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v88, 1, v101) == 1)
      {
        sub_1A5EEFC44(v88);
LABEL_35:
        v103 = v220;
        v104 = v221;
        __swift_project_boxed_opaque_existential_1(v219, v220);
        if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 40))(v196, v196, v103, v104) & 1) != 0)
        {
          v105 = v197;
          sub_1A5ED7E14(v193, (uint64_t)v197 + *(int *)(v206 + 20), (uint64_t (*)(_QWORD))type metadata accessor for EventData);
          *v105 = v46;
          v105[1] = v73;
          type metadata accessor for SequenceEntry.Kind(0);
          swift_storeEnumTagMultiPayload();
          sub_1A5ED7E14((uint64_t)v105, v198, type metadata accessor for SequenceEntry);
          v56 = v213;
          v106 = *(uint64_t *)((char *)v213 + v212);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v106 = sub_1A5EEF688(0, *(_QWORD *)(v106 + 16) + 1, 1, v106);
          v108 = *(_QWORD *)(v106 + 16);
          v107 = *(_QWORD *)(v106 + 24);
          if (v108 >= v107 >> 1)
            v106 = sub_1A5EEF688(v107 > 1, v108 + 1, 1, v106);
          *(_QWORD *)(v106 + 16) = v108 + 1;
          sub_1A5ECD6B0(v198, v106+ ((*(unsigned __int8 *)(v205 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80))+ *(_QWORD *)(v205 + 72) * v108, type metadata accessor for SequenceEntry);
          *(uint64_t *)((char *)v56 + v212) = v106;
          sub_1A5ED4D44((uint64_t)v197, type metadata accessor for SequenceEntry);
          goto LABEL_15;
        }
        v109 = v220;
        v110 = v221;
        __swift_project_boxed_opaque_existential_1(v219, v220);
        v111 = (*(uint64_t (**)(uint64_t, uint64_t))(v110 + 8))(v109, v110);
        sub_1A5EEEDC8(v111, v112, v207, v208, 0, (uint64_t)&v215);
        swift_bridgeObjectRelease();
        if (v216)
        {
          sub_1A5EC1D18(&v215, (uint64_t)v217);
          v113 = v183;
          sub_1A5ECE02C((uint64_t)v217, (uint64_t)&v183[*(int *)(v206 + 20)]);
          *v113 = v46;
          v113[1] = v73;
          type metadata accessor for SequenceEntry.Kind(0);
          swift_storeEnumTagMultiPayload();
          sub_1A5ED7E14((uint64_t)v113, v184, type metadata accessor for SequenceEntry);
          v56 = v213;
          v114 = *(uint64_t *)((char *)v213 + v212);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v114 = sub_1A5EEF688(0, *(_QWORD *)(v114 + 16) + 1, 1, v114);
          v116 = *(_QWORD *)(v114 + 16);
          v115 = *(_QWORD *)(v114 + 24);
          if (v116 >= v115 >> 1)
            v114 = sub_1A5EEF688(v115 > 1, v116 + 1, 1, v114);
          *(_QWORD *)(v114 + 16) = v116 + 1;
          sub_1A5ECD6B0(v184, v114+ ((*(unsigned __int8 *)(v205 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80))+ *(_QWORD *)(v205 + 72) * v116, type metadata accessor for SequenceEntry);
          *(uint64_t *)((char *)v56 + v212) = v114;
          v100 = (uint64_t)v183;
LABEL_28:
          sub_1A5ED4D44(v100, type metadata accessor for SequenceEntry);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v217);
          goto LABEL_15;
        }
        sub_1A5EF1CF8((uint64_t)&v215, &qword_1ED1CD458, qword_1ED1CE020, (uint64_t)&protocol descriptor for DataEventType);
        v144 = v220;
        v145 = v221;
        __swift_project_boxed_opaque_existential_1(v219, v220);
        v146 = (*(uint64_t (**)(uint64_t, uint64_t))(v145 + 32))(v144, v145);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v147 = v185;
        else
          v147 = sub_1A5F082A8(0, v185[2] + 1, 1, v185);
        v149 = v147[2];
        v148 = v147[3];
        if (v149 >= v148 >> 1)
          v147 = sub_1A5F082A8((_QWORD *)(v148 > 1), v149 + 1, 1, v147);
        v147[2] = v149 + 1;
        v185 = v147;
        v150 = &v147[3 * v149];
        v150[4] = v46;
        v150[5] = v73;
        v150[6] = v146;
LABEL_14:
        v56 = v213;
        goto LABEL_15;
      }
      v117 = v189;
      sub_1A5ECD6B0(v88, v189, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
      v118 = v179;
      v119 = v182;
      v120 = v177;
      v177(v179, v117, v182);
      v121 = v180;
      v120(v180, v178, v119);
      v122 = v190;
      v120(v190, (uint64_t)v118, v119);
      v120(&v122[*(int *)(v202 + 20)], (uint64_t)v121, v119);
      sub_1A5F63E90();
      v124 = v123;
      v125 = *(void (**)(char *, uint64_t))(v181 + 8);
      v125(v121, v119);
      v125(v118, v119);
      v126 = v124 * 1000.0;
      v127 = (char *)v213;
      if ((~COERCE__INT64(v124 * 1000.0) & 0x7FF0000000000000) == 0)
      {
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        swift_once();
LABEL_77:
        v161 = (id)qword_1ED1CE7B0;
        sub_1A5F64448();
        sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v162 = swift_allocObject();
        *(_OWORD *)(v162 + 16) = xmmword_1A5F66C40;
        v163 = sub_1A5EEFA84((uint64_t)v204, v201);
        v165 = v164;
        v166 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v162 + 56) = MEMORY[0x1E0DEA968];
        v167 = sub_1A5EE19C8();
        *(_QWORD *)(v162 + 64) = v167;
        *(_QWORD *)(v162 + 32) = v163;
        *(_QWORD *)(v162 + 40) = v165;
        v222 = 0;
        v223 = 0xE000000000000000;
        v219[0] = v46;
        v219[1] = v9;
        sub_1A5F646F4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v168 = (void (*)(_QWORD, _QWORD, _QWORD))v222;
        v169 = v223;
        *(_QWORD *)(v162 + 96) = v166;
        *(_QWORD *)(v162 + 104) = v167;
        *(_QWORD *)(v162 + 72) = v168;
        *(_QWORD *)(v162 + 80) = v169;
        sub_1A5F63F80();

        swift_bridgeObjectRelease();
        v56 = v213;
        return sub_1A5ECD6B0((uint64_t)v56, v173, type metadata accessor for Sequence);
      }
      if (v126 <= -9.22337204e18)
        goto LABEL_81;
      if (v126 >= 9.22337204e18)
        goto LABEL_82;
      v128 = (uint64_t)v190;
      *(_QWORD *)&v190[*(int *)(v202 + 24)] = (uint64_t)v126;
      v129 = v186;
      sub_1A5ECD6B0(v128, v186, (uint64_t (*)(_QWORD))type metadata accessor for TimedData);
      v130 = v187;
      sub_1A5ED7E14(v129, (uint64_t)v187 + *(int *)(v206 + 20), (uint64_t (*)(_QWORD))type metadata accessor for TimedData);
      *v130 = v46;
      v130[1] = v73;
      type metadata accessor for SequenceEntry.Kind(0);
      swift_storeEnumTagMultiPayload();
      sub_1A5ED7E14((uint64_t)v130, v188, type metadata accessor for SequenceEntry);
      v131 = *(_QWORD *)&v127[v212];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v131 = sub_1A5EEF688(0, *(_QWORD *)(v131 + 16) + 1, 1, v131);
      v14 = v174;
      v133 = *(_QWORD *)(v131 + 16);
      v132 = *(_QWORD *)(v131 + 24);
      if (v133 >= v132 >> 1)
        v131 = sub_1A5EEF688(v132 > 1, v133 + 1, 1, v131);
      *(_QWORD *)(v131 + 16) = v133 + 1;
      sub_1A5ECD6B0(v188, v131+ ((*(unsigned __int8 *)(v205 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80))+ *(_QWORD *)(v205 + 72) * v133, type metadata accessor for SequenceEntry);
      *(_QWORD *)&v127[v212] = v131;
      sub_1A5ED4D44((uint64_t)v187, type metadata accessor for SequenceEntry);
      v134 = sub_1A5EEFA84((uint64_t)v204, v201);
      v136 = v135;
      v137 = v194;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v138 = sub_1A5EF11E8(v134, v136);
      LOBYTE(v134) = v139;
      swift_bridgeObjectRelease();
      if ((v134 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v141 = *v137;
        *(_QWORD *)&v215 = *v137;
        *v137 = 0x8000000000000000;
        v142 = (uint64_t)v176;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A5F05CB0();
          v141 = v215;
        }
        swift_bridgeObjectRelease();
        sub_1A5ECD6B0(*(_QWORD *)(v141 + 56) + *(_QWORD *)(v200 + 72) * v138, v142, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
        sub_1A5EF60CC(v138, v141);
        *v137 = v141;
        swift_bridgeObjectRelease();
        v143 = 0;
      }
      else
      {
        v143 = 1;
        v142 = (uint64_t)v176;
      }
      v192(v142, v143, 1, v195);
      sub_1A5EEFC44(v142);
      swift_endAccess();
      swift_bridgeObjectRelease();
      v151 = sub_1A5EEFA84((uint64_t)v204, v201);
      v153 = v152;
      v154 = v175;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v155 = sub_1A5EF11E8(v151, v153);
      LOBYTE(v151) = v156;
      swift_bridgeObjectRelease();
      if ((v151 & 1) != 0)
      {
        v157 = swift_isUniquelyReferenced_nonNull_native();
        v158 = *v154;
        v214 = *v154;
        *v154 = 0x8000000000000000;
        v56 = v213;
        if ((v157 & 1) == 0)
        {
          sub_1A5F05A94();
          v158 = v214;
        }
        swift_bridgeObjectRelease();
        sub_1A5EC1D18((__int128 *)(*(_QWORD *)(v158 + 56) + 40 * v155), (uint64_t)v217);
        sub_1A5F5472C(v155, v158);
        *v154 = v158;
        swift_bridgeObjectRelease();
      }
      else
      {
        v218 = 0;
        memset(v217, 0, sizeof(v217));
        v56 = v213;
      }
      sub_1A5EF1CF8((uint64_t)v217, &qword_1ED1CD468, &qword_1ED1CE4C8, (uint64_t)&protocol descriptor for RestartTimerType);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_1A5ED4D44(v186, (uint64_t (*)(_QWORD))type metadata accessor for TimedData);
      sub_1A5ED4D44(v189, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
LABEL_15:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v219);
      v72 += 56;
      v9 = (_QWORD *)((char *)v9 - 1);
      if (!v9)
      {
        swift_bridgeObjectRelease();
        v159 = v210;
        v160 = v185;
        goto LABEL_73;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  v160 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v159 = v210;
LABEL_73:
  if (!v160[2])
  {
    swift_bridgeObjectRelease();
    return sub_1A5ECD6B0((uint64_t)v56, v173, type metadata accessor for Sequence);
  }
  v46 = (void (*)(_QWORD *, uint64_t, uint64_t))v160;
  v9 = (_QWORD *)sub_1A5F57224();
  if (*((_BYTE *)v159 + 176) == 1)
  {
    if (qword_1ED1CFC08 != -1)
      goto LABEL_85;
    goto LABEL_77;
  }
  sub_1A5F22D74();
  swift_allocError();
  *v170 = v46;
  v170[1] = v9;
  swift_willThrow();
  return sub_1A5ED4D44((uint64_t)v56, type metadata accessor for Sequence);
}

_QWORD *sub_1A5EEEBB8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t type metadata accessor for Tracker.Timer()
{
  uint64_t result;

  result = qword_1ED1CD748;
  if (!qword_1ED1CD748)
    return swift_getSingletonMetadata();
  return result;
}

BOOL sub_1A5EEEC34()
{
  return sub_1A5EEEC44();
}

BOOL sub_1A5EEEC44()
{
  return swift_dynamicCastMetatype() != 0;
}

uint64_t type metadata accessor for TimedData()
{
  uint64_t result;

  result = qword_1ED1CE178;
  if (!qword_1ED1CE178)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for Sequence(uint64_t a1)
{
  return sub_1A5EBC540(a1, (uint64_t *)&unk_1ED1CCD68);
}

uint64_t sub_1A5EEECBC(uint64_t a1)
{
  destroy for EventMirrorProperty(a1);
  return a1;
}

uint64_t destroy for EventMirrorProperty(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0(a1 + 16);
}

uint64_t sub_1A5EEED18(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for EventMirrorProperty(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for EventMirrorProperty(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = a2 + 16;
  v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v7(a1 + 16, v4, v6);
  return a1;
}

uint64_t sub_1A5EEEDC0()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1A5EEEDC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;

  v7 = v6;
  HIDWORD(v40) = a5;
  v42 = a1;
  v12 = sub_1A5F64070();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(void **)(v7[10] + OBJC_IVAR___AAAccessQueue_queue);
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF740], v12);
  v17 = v16;
  LOBYTE(v16) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  v41 = a6;
  swift_beginAccess();
  v19 = v7[15];
  if (!*(_QWORD *)(v19 + 16))
  {
    *(_QWORD *)&v51 = 0;
    v50 = 0u;
    v49 = 0u;
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = sub_1A5EF11E8(v42, a2);
  if ((v21 & 1) != 0)
  {
    sub_1A5ECE02C(*(_QWORD *)(v19 + 56) + 40 * v20, (uint64_t)&v49);
  }
  else
  {
    *(_QWORD *)&v51 = 0;
    v50 = 0u;
    v49 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v50 + 1))
  {
LABEL_14:
    sub_1A5EF1CF8((uint64_t)&v49, (unint64_t *)&qword_1ED1CE4D8, (unint64_t *)&qword_1ED1CE4D0, (uint64_t)&protocol descriptor for DataEventStackType);
    v27 = a4;
    if (a4)
      goto LABEL_16;
    goto LABEL_15;
  }
  sub_1A5EC1D18(&v49, (uint64_t)v55);
  v22 = v56;
  v23 = v57;
  __swift_project_boxed_opaque_existential_1(v55, v56);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v23 + 24))(&v43, v22, v23);
  if (!*((_QWORD *)&v43 + 1))
  {
    sub_1A5EF4054((uint64_t)&v43, &qword_1ED1CE0A8, (uint64_t)&type metadata for AnyDataEventEntry);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
    v27 = a4;
    if (a4)
    {
LABEL_16:
      swift_beginAccess();
      v28 = v7[16];
      v29 = *(_QWORD *)(v28 + 16);
      swift_bridgeObjectRetain();
      if (v29)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30 = sub_1A5EF11E8(v42, a2);
        if ((v31 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v7[17])
            goto LABEL_36;
          goto LABEL_28;
        }
        v32 = *(_QWORD *)(v28 + 56) + 24 * v30;
        v33 = *(uint64_t (**)(uint64_t, uint64_t))v32;
        v34 = *(_BYTE *)(v32 + 16);
        sub_1A5EC6A8C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v27)
        {
          if ((v34 & 1) != 0)
          {
            sub_1A5EC6A8C();
            swift_bridgeObjectRetain();
            v35 = v33(a3, v27);
            if (v35)
            {
              v36 = v35;
              *((_QWORD *)&v44 + 1) = &type metadata for BridgedDataEvent;
              *(_QWORD *)&v45 = sub_1A5EF8E70();
              sub_1A5EF6928();
              *(_QWORD *)&v43 = v36;
              sub_1A5EF6928();
              swift_bridgeObjectRelease();
LABEL_33:
              swift_bridgeObjectRelease();
              sub_1A5EC1D18(&v43, (uint64_t)&v49);
              return sub_1A5EC1D18(&v49, v41);
            }
            *(_QWORD *)&v45 = 0;
            v43 = 0u;
            v44 = 0u;
            sub_1A5EF6928();
            sub_1A5EF6928();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1A5EC6A8C();
            swift_bridgeObjectRetain();
            ((void (*)(__int128 *__return_ptr, uint64_t, uint64_t))v33)(&v43, a3, v27);
            sub_1A5EF6928();
            sub_1A5EF6928();
            swift_bridgeObjectRelease();
            if (*((_QWORD *)&v44 + 1))
              goto LABEL_33;
          }
          sub_1A5EF1CF8((uint64_t)&v43, &qword_1ED1CD458, qword_1ED1CE020, (uint64_t)&protocol descriptor for DataEventType);
          if (!v7[17])
          {
LABEL_36:
            result = swift_bridgeObjectRelease();
            v39 = (_OWORD *)v41;
            *(_QWORD *)(v41 + 32) = 0;
            *v39 = 0u;
            v39[1] = 0u;
            return result;
          }
LABEL_28:
          sub_1A5EEEDC8(v42, a2, a3, v27, BYTE4(v40) & 1);
          return swift_bridgeObjectRelease();
        }
        sub_1A5EF6928();
      }
      if (!v7[17])
        goto LABEL_36;
      goto LABEL_28;
    }
LABEL_15:
    a3 = v7[6];
    v27 = v7[7];
    swift_bridgeObjectRetain();
    goto LABEL_16;
  }
  v52 = v46;
  v53 = v47;
  v54 = v48;
  v49 = v43;
  v50 = v44;
  v51 = v45;
  v24 = *(_QWORD *)(*((_QWORD *)&v46 + 1) + 16);
  if (v24)
  {
    v25 = (unsigned __int8 *)(*((_QWORD *)&v52 + 1) + 32);
    while (*v25++)
    {
      if (!--v24)
        goto LABEL_31;
    }
    if ((v40 & 0x100000000) == 0)
    {
      v37 = v56;
      v38 = v57;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v55, v56);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v38 + 32))(&v43, v37, v38);
      sub_1A5EF4054((uint64_t)&v43, &qword_1ED1CE0A8, (uint64_t)&type metadata for AnyDataEventEntry);
      sub_1A5ECE02C((uint64_t)v55, (uint64_t)&v43);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1A5EF0D60((uint64_t)&v43, v42, a2);
      swift_endAccess();
    }
  }
LABEL_31:
  sub_1A5ECE02C((uint64_t)&v50, v41);
  sub_1A5EF03FC((uint64_t)&v49);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
}

uint64_t sub_1A5EEF328()
{
  return sub_1A5EEF338();
}

uint64_t sub_1A5EEF338()
{
  return sub_1A5F64994();
}

uint64_t type metadata accessor for SessionObserverChange()
{
  uint64_t result;

  result = qword_1ED1CE430;
  if (!qword_1ED1CE430)
    return swift_getSingletonMetadata();
  return result;
}

BOOL sub_1A5EEF37C(uint64_t a1)
{
  return sub_1A5EEF3A0(*(_QWORD *)(a1 + 16));
}

BOOL sub_1A5EEF3A0(uint64_t a1)
{
  uint64_t v2;

  if (swift_conformsToProtocol2())
    v2 = a1;
  else
    v2 = 0;
  return v2 == 0;
}

uint64_t sub_1A5EEF3D8(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1A5ECD49C(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1A5F64700();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1A5EF4C50(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t type metadata accessor for SequenceEntry(uint64_t a1)
{
  return sub_1A5EBC540(a1, qword_1ED1CC658);
}

uint64_t destroy for EventData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5EEF688(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A5EEF3D8(a1, a2, a3, a4, &qword_1ED1CE1E0, type metadata accessor for SequenceEntry);
}

uint64_t sub_1A5EEF69C(uint64_t a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[5];

  v7 = v6;
  v62 = a4;
  v60 = a3;
  v12 = type metadata accessor for Tracker.Timer();
  v64 = *(_QWORD *)(v12 - 8);
  v65 = v12;
  MEMORY[0x1E0C80A78](v12);
  v66 = (uint64_t)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CE0C0, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v16 = MEMORY[0x1E0C80A78](v15);
  v61 = (uint64_t)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v57 - v18;
  v20 = sub_1A5F64070();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (uint64_t *)((char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = *(void **)(*(_QWORD *)(v7 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v23 = v24;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E0DEF740], v20);
  v25 = v24;
  LOBYTE(v24) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v21 + 8))(v23, v20);
  if ((v24 & 1) != 0)
  {
    v58 = a6;
    v59 = (void *)a1;
    v27 = a1;
    v63 = a2;
    v28 = a5;
    v29 = sub_1A5EEFA84(v27, a2);
    v31 = v30;
    swift_beginAccess();
    v32 = *(_QWORD *)(v7 + 104);
    v33 = *(_QWORD *)(v32 + 16);
    v57 = v7;
    if (v33)
    {
      swift_bridgeObjectRetain();
      v34 = sub_1A5EF11E8(v29, v31);
      v35 = v64;
      if ((v36 & 1) != 0)
      {
        sub_1A5ED7E14(*(_QWORD *)(v32 + 56) + *(_QWORD *)(v64 + 72) * v34, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
        v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
        v38 = v19;
        v39 = 0;
      }
      else
      {
        v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56);
        v38 = v19;
        v39 = 1;
      }
      v40 = v65;
      v37(v38, v39, 1, v65);
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = v64;
      v40 = v65;
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56);
      v37(v19, 1, 1, v65);
    }
    swift_bridgeObjectRelease();
    v41 = v28;
    v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v19, 1, v40);
    result = sub_1A5EEFC44((uint64_t)v19);
    v43 = v63;
    if (v42 == 1)
    {
      v44 = sub_1A5F63F08();
      v45 = v66;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v66, v60, v44);
      v47 = v58;
      v46 = v59;
      v48 = sub_1A5EEFA84((uint64_t)v59, v43);
      v50 = v49;
      v51 = v45;
      v52 = v61;
      sub_1A5ED7E14(v51, v61, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
      v37((char *)v52, 0, 1, v40);
      swift_beginAccess();
      sub_1A5ECD338(v52, v48, v50);
      swift_endAccess();
      if ((v62 & 1) != 0)
      {
        v53 = sub_1A5EEFA84((uint64_t)v46, v43);
        v55 = v54;
        v67[3] = type metadata accessor for Tracker.RestartTimer(0, v41, v47, v56);
        v67[4] = &off_1E4FD30E0;
        v67[0] = v46;
        v67[1] = v43;
        swift_beginAccess();
        sub_1A5EEC96C(v46, v43);
        sub_1A5EBD7C4((uint64_t)v67, v53, v55);
        swift_endAccess();
      }
      return sub_1A5ED4D44(v66, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5EEFA84(uint64_t a1, unint64_t a2)
{
  id v2;
  uint64_t v3;

  if (!(a2 >> 62))
    return sub_1A5EF2700();
  if (a2 >> 62 == 1)
  {
    v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
    v3 = sub_1A5F64130();

  }
  else
  {
    v3 = *(_QWORD *)(a1 + OBJC_IVAR___AARawEvent_name);
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_1A5EEFB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;

  v7 = a5(0, a3, a4, MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

_QWORD *initializeWithCopy for EventData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A5F63F08();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[8];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A5EEFC44(uint64_t a1)
{
  uint64_t v2;

  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CE0C0, (uint64_t (*)(uint64_t))type metadata accessor for Tracker.Timer, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A5EEFC98(uint64_t a1, uint64_t a2, unsigned __int8 *a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  void (*v16)(_QWORD *, uint64_t, uint64_t);
  id v17;
  void (*v18)(_QWORD *, uint64_t);
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  int64_t v52;
  uint64_t result;
  int64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 *v57;
  __int128 *v58;
  uint64_t v59;
  int64_t v60;
  int v61;
  unint64_t v62;
  _OWORD v63[2];
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  _QWORD v74[3];
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[2];
  __int128 v78[2];
  uint64_t v79;

  v5 = v4;
  v10 = sub_1A5F64070();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (int64_t *)((char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(*(_QWORD *)(v5 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  v61 = *a3;
  *v13 = v14;
  v15 = *MEMORY[0x1E0DEF740];
  v16 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v11 + 104);
  v16(v13, v15, v10);
  v17 = v14;
  LOBYTE(v14) = sub_1A5F64088();
  v18 = *(void (**)(_QWORD *, uint64_t))(v11 + 8);
  v18(v13, v10);
  if ((v14 & 1) != 0)
  {
    *((_QWORD *)&v69 + 1) = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v68 = a1;
    *((_QWORD *)&v68 + 1) = a2;
    sub_1A5EF1B2C(&v68, v63);
    swift_bridgeObjectRetain();
    v19 = MEMORY[0x1E0DEE9E0];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v77[0] = v19;
    sub_1A5EF0FD8(v63, 0x496E6F6973736573, 0xE900000000000044, isUniquelyReferenced_nonNull_native);
    v79 = v77[0];
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x1A85B8E10](v5 + 32);
    if (!v21)
      goto LABEL_6;
    v22 = v21;
    v23 = *(void **)(*(_QWORD *)(v21 + 24) + OBJC_IVAR___AAAccessQueue_queue);
    *v13 = v23;
    v16(v13, v15, v10);
    v24 = v23;
    v25 = sub_1A5F64088();
    v18(v13, v10);
    if ((v25 & 1) != 0)
    {
      v27 = *(_QWORD *)(v22 + 40);
      v26 = *(_QWORD *)(v22 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      if (v26)
      {
        *((_QWORD *)&v69 + 1) = MEMORY[0x1E0DEA968];
        *(_QWORD *)&v68 = v27;
        *((_QWORD *)&v68 + 1) = v26;
        sub_1A5EF1B2C(&v68, v63);
        v28 = v79;
        v29 = swift_isUniquelyReferenced_nonNull_native();
        v77[0] = v28;
        sub_1A5EF0FD8(v63, 0x6973736553707061, 0xEC00000044496E6FLL, v29);
        v79 = v77[0];
        swift_bridgeObjectRelease();
LABEL_7:
        v30 = (uint64_t *)(v5 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_dataStacks);
        swift_beginAccess();
        v31 = *v30;
        v32 = *(_QWORD *)(*v30 + 64);
        v55 = *v30 + 64;
        v33 = 1 << *(_BYTE *)(v31 + 32);
        v34 = -1;
        if (v33 < 64)
          v34 = ~(-1 << v33);
        v35 = v34 & v32;
        v60 = (unint64_t)(v33 + 63) >> 6;
        v54 = v60 - 1;
        swift_bridgeObjectRetain();
        v36 = 0;
        v56 = xmmword_1A5F66C40;
        v58 = &v69;
        v59 = v31;
        v57 = v78;
        while (!v35)
        {
          v43 = v36 + 1;
          if (__OFADD__(v36, 1))
          {
            __break(1u);
            goto LABEL_41;
          }
          if (v43 < v60)
          {
            v44 = *(_QWORD *)(v55 + 8 * v43);
            if (v44)
              goto LABEL_18;
            v36 += 2;
            if (v43 + 1 >= v60)
            {
              v36 = v43;
            }
            else
            {
              v44 = *(_QWORD *)(v55 + 8 * v36);
              if (v44)
              {
                ++v43;
                goto LABEL_18;
              }
              if (v43 + 2 < v60)
              {
                v44 = *(_QWORD *)(v55 + 8 * (v43 + 2));
                if (v44)
                {
                  v43 += 2;
                  goto LABEL_18;
                }
                v52 = v43 + 3;
                if (v43 + 3 < v60)
                {
                  v44 = *(_QWORD *)(v55 + 8 * v52);
                  if (!v44)
                  {
                    while (1)
                    {
                      v43 = v52 + 1;
                      if (__OFADD__(v52, 1))
                        goto LABEL_43;
                      if (v43 >= v60)
                      {
                        v36 = v54;
                        goto LABEL_23;
                      }
                      v44 = *(_QWORD *)(v55 + 8 * v43);
                      ++v52;
                      if (v44)
                        goto LABEL_18;
                    }
                  }
                  v43 += 3;
LABEL_18:
                  v38 = (v44 - 1) & v44;
                  v39 = __clz(__rbit64(v44)) + (v43 << 6);
                  v36 = v43;
LABEL_14:
                  v40 = *(_QWORD *)(v31 + 56);
                  v41 = (_QWORD *)(*(_QWORD *)(v31 + 48) + 16 * v39);
                  v42 = v41[1];
                  *(_QWORD *)&v68 = *v41;
                  *((_QWORD *)&v68 + 1) = v42;
                  sub_1A5ECE02C(v40 + 40 * v39, (uint64_t)&v69);
                  swift_bridgeObjectRetain();
                  goto LABEL_24;
                }
                v36 = v43 + 2;
              }
            }
          }
LABEL_23:
          v38 = 0;
          *(_QWORD *)&v71 = 0;
          v70 = 0u;
          v68 = 0u;
          v69 = 0u;
LABEL_24:
          sub_1A5ED1578((uint64_t)&v68, (uint64_t)v77, &qword_1ED1CE508, (void (*)(uint64_t))sub_1A5EF7A9C);
          if (!v77[1])
          {
            swift_release();
            return v79;
          }
          v62 = v38;
          swift_bridgeObjectRelease();
          sub_1A5EC1D18(v78, (uint64_t)v74);
          v45 = v75;
          v46 = v76;
          __swift_project_boxed_opaque_existential_1(v74, v75);
          (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v46 + 24))(v63, v45, v46);
          if (*((_QWORD *)&v63[0] + 1))
          {
            v70 = v64;
            v71 = v65;
            v72 = v66;
            v73 = v67;
            v68 = v63[0];
            v69 = v63[1];
            v47 = *((_QWORD *)&v64 + 1);
            v48 = v65;
            __swift_project_boxed_opaque_existential_1(&v69, *((uint64_t *)&v64 + 1));
            LOBYTE(v63[0]) = v61;
            v49 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t, double))(v48 + 32))(v63, v47, v48, a4);
            v50 = v79;
            v51 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)&v63[0] = v50;
            sub_1A5EF137C(v49, (uint64_t)sub_1A5EF1C4C, 0, v51, (uint64_t *)v63);
            v79 = *(_QWORD *)&v63[0];
            swift_bridgeObjectRelease();
            v35 = v62;
            sub_1A5EF03FC((uint64_t)&v68);
          }
          else
          {
            sub_1A5EF6AEC((uint64_t)v63, &qword_1ED1CE0A8);
            v35 = v62;
          }
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v74);
        }
        v37 = __clz(__rbit64(v35));
        v38 = (v35 - 1) & v35;
        v39 = v37 | (v36 << 6);
        goto LABEL_14;
      }
LABEL_6:
      sub_1A5EF6930(0x6973736553707061, 0xEC00000044496E6FLL, &v68);
      sub_1A5EF6AEC((uint64_t)&v68, (unint64_t *)&qword_1ED1CF848);
      goto LABEL_7;
    }
  }
  else
  {
LABEL_41:
    __break(1u);
  }
  __break(1u);
LABEL_43:
  __break(1u);
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1A5EF03D4()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5EF03FC(uint64_t a1)
{
  destroy for AnyDataEventEntry(a1);
  return a1;
}

uint64_t destroy for AnyDataEventEntry(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5EF0468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1A5EF2AE8(*v2, v2[1], v2[2], *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

char *sub_1A5EF047C(_BYTE *a1, uint64_t a2, double a3)
{
  return SessionData.toDict(timestampConfiguration:)(a1, a2, a3);
}

char *SessionData.toDict(timestampConfiguration:)(_BYTE *a1, uint64_t a2, double a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_OWORD *, uint64_t, uint64_t, double);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v18[2];
  __int128 v19;
  uint64_t v20;
  char *v21;

  v7 = *v3;
  v6 = v3[1];
  v8 = (char *)v3 + *(int *)(a2 + 36);
  LOBYTE(v18[0]) = *a1;
  v10 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v11 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t, double))(v9 + 32);
  swift_bridgeObjectRetain();
  v12 = v11(v18, v10, v9, a3);
  if (!v4)
  {
    v13 = v12;
    sub_1A5EF08A0();
    v20 = v14;
    *(_QWORD *)&v19 = v13;
    sub_1A5EF1B2C(&v19, v18);
    v15 = (char *)MEMORY[0x1E0DEE9E0];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = v15;
    sub_1A5EF0FD8(v18, v7, v6, isUniquelyReferenced_nonNull_native);
    v8 = v21;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

_QWORD *DataEventType.toDict(timestampConfiguration:)(char *a1, double a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(uint64_t, uint64_t);
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  unsigned __int8 v20;
  void *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  id v25[4];
  _BYTE v26[32];
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v5 = (_QWORD *)sub_1A5F63BC0();
  v6 = *(v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v8 = (void (**)(uint64_t, uint64_t))((char *)&v25[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *a1;
  sub_1A5F63BF0();
  swift_allocObject();
  sub_1A5F63BE4();
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v9;
  *(double *)(v10 + 24) = a2;
  *v8 = sub_1A5ECDAC0;
  v8[1] = (void (*)(uint64_t, uint64_t))v10;
  (*(void (**)(void (**)(uint64_t, uint64_t), _QWORD, _QWORD *))(v6 + 104))(v8, *MEMORY[0x1E0CAE148], v5);
  sub_1A5F63BCC();
  v11 = sub_1A5F63BD8();
  if (!v2)
  {
    v14 = v11;
    v15 = v12;
    v16 = (void *)objc_opt_self();
    v17 = (void *)sub_1A5F63E24();
    v25[0] = 0;
    v5 = objc_msgSend(v16, sel_JSONObjectWithData_options_error_, v17, 0, v25);

    v18 = v25[0];
    if (v5)
    {
      sub_1A5F645C8();
      swift_unknownObjectRelease();
      sub_1A5EF30B0((uint64_t)v26, (uint64_t)v25);
      sub_1A5EF08A0();
      if (swift_dynamicCast())
      {
        v5 = v24;
        v19 = (void *)sub_1A5F640A0();
        v20 = objc_msgSend(v16, sel_isValidJSONObject_, v19);

        if ((v20 & 1) != 0)
        {
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
          sub_1A5EF0908(v14, v15);
          swift_release();
          return v5;
        }
        sub_1A5F08EC0();
        swift_allocError();
        *v23 = v5;
      }
      else
      {
        sub_1A5F08EC0();
        swift_allocError();
        *v22 = 0;
      }
      swift_willThrow();
      sub_1A5EF0908(v14, v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
      return v5;
    }
    v21 = v18;
    sub_1A5F63CE0();

    swift_willThrow();
    sub_1A5EF0908(v14, v15);
  }
  swift_release();
  return v5;
}

void sub_1A5EF08A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CE4E8)
  {
    v0 = sub_1A5F640D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CE4E8);
  }
}

uint64_t sub_1A5EF0908(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1A5EF094C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[2];
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  _UNKNOWN **v64;
  __int128 v65;
  uint64_t v66;

  v8 = v7;
  v60 = a3;
  v14 = *(_QWORD *)(a6 - 8);
  v58 = a4;
  v59 = v14;
  MEMORY[0x1E0C80A78](a1);
  v57 = (char *)v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A5F64070();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (uint64_t *)((char *)v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = *(void **)(*(_QWORD *)(v8 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v20 = v21;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v17 + 104))(v20, *MEMORY[0x1E0DEF740], v16, v18);
  v22 = v21;
  LOBYTE(v21) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v17 + 8))(v20, v16);
  if ((v21 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  v56 = a5;
  v25 = a7;
  v26 = type metadata accessor for PushEvent(0, a6, a7, v24);
  v27 = sub_1A5EF2498(v26);
  v29 = v27;
  v30 = v28;
  v31 = *(_QWORD *)(a2 + 16);
  if (v31)
  {
    v32 = (unsigned __int8 *)(a2 + 32);
    v33 = *(_QWORD *)(a2 + 16);
    while (1)
    {
      v34 = *v32++;
      if (v34 == 2)
        break;
      if (!--v33)
        goto LABEL_9;
    }
    sub_1A5EEEDC8(v27, v28, 0, 0, 1, (uint64_t)&v62);
    v35 = *((_QWORD *)&v63 + 1);
    sub_1A5EF1CF8((uint64_t)&v62, &qword_1ED1CD458, qword_1ED1CE020, (uint64_t)&protocol descriptor for DataEventType);
    if (v35)
      return swift_bridgeObjectRelease();
  }
LABEL_9:
  v55[0] = v26;
  v61 = a2;
  v55[1] = a1;
  swift_beginAccess();
  v36 = *(_QWORD *)(v8 + 120);
  if (!*(_QWORD *)(v36 + 16))
  {
    v64 = 0;
    v62 = 0u;
    v63 = 0u;
    v39 = v25;
    v41 = (uint64_t)v57;
    v38 = v58;
LABEL_17:
    sub_1A5EF1CF8((uint64_t)&v62, (unint64_t *)&qword_1ED1CE4D8, (unint64_t *)&qword_1ED1CE4D0, (uint64_t)&protocol descriptor for DataEventStackType);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v37 = sub_1A5EF11E8(v29, v30);
  v38 = v58;
  v39 = v25;
  if ((v40 & 1) != 0)
  {
    sub_1A5ECE02C(*(_QWORD *)(v36 + 56) + 40 * v37, (uint64_t)&v62);
  }
  else
  {
    v64 = 0;
    v62 = 0u;
    v63 = 0u;
  }
  v41 = (uint64_t)v57;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v63 + 1))
    goto LABEL_17;
  sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE4D0);
  type metadata accessor for DataEventStack(0, a6, v39, v42);
  if (!swift_dynamicCast())
  {
LABEL_18:
    swift_bridgeObjectRetain();
    v44 = sub_1A5EF3060(v29, v30, a6, v39);
    goto LABEL_19;
  }
  v45 = *((_QWORD *)&v65 + 1);
  v44 = v65;
  v46 = v66;
LABEL_19:
  *(_QWORD *)&v65 = v44;
  *((_QWORD *)&v65 + 1) = v45;
  v66 = v46;
  if (v31)
  {
    v47 = (unsigned __int8 *)(v61 + 32);
    while (1)
    {
      v48 = *v47++;
      if (v48 == 1)
        break;
      if (!--v31)
        goto LABEL_25;
    }
    v49 = type metadata accessor for DataEventStack(0, a6, v39, v43);
    sub_1A5EF3C44(v49, v50, v51, v52);
  }
LABEL_25:
  sub_1A5EF12B4(v55[0], v41);
  v54 = type metadata accessor for DataEventStack(0, a6, v39, v53);
  sub_1A5EF2748(v41, v61, v60, v38, v56, v54);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v41, a6);
  *((_QWORD *)&v63 + 1) = v54;
  v64 = &off_1E4FD1350;
  v62 = v65;
  *(_QWORD *)&v63 = v66;
  swift_beginAccess();
  sub_1A5EF0D60((uint64_t)&v62, v29, v30);
  return swift_endAccess();
}

uint64_t type metadata accessor for PushEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PushEvent);
}

uint64_t type metadata accessor for DataEventStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DataEventStack);
}

uint64_t sub_1A5EF0D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _BYTE v9[40];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1A5EC1D18((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A5EF0FBC((uint64_t)v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A5EF1CF8(a1, (unint64_t *)&qword_1ED1CE4D8, (unint64_t *)&qword_1ED1CE4D0, (uint64_t)&protocol descriptor for DataEventStackType);
    sub_1A5F54084(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_1A5EF1CF8((uint64_t)v9, (unint64_t *)&qword_1ED1CE4D8, (unint64_t *)&qword_1ED1CE4D0, (uint64_t)&protocol descriptor for DataEventStackType);
  }
}

uint64_t sub_1A5EF0E5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), uint64_t (*a7)(uint64_t, uint64_t))
{
  _QWORD *v7;
  _QWORD **v10;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;

  v10 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = sub_1A5EF11E8(a2, a3);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v10;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = v23[7] + 40 * v17;
        __swift_destroy_boxed_opaque_existential_0(v24);
        return a7(a1, v24);
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    v26 = sub_1A5EF11E8(a2, a3);
    if ((v21 & 1) == (v27 & 1))
    {
      v17 = v26;
      v23 = *v10;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A5EF1C8C(v17, a2, a3, a1, v23, a7);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1A5F648C8();
  __break(1u);
  return result;
}

uint64_t sub_1A5EF0FBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1A5EF0E5C(a1, a2, a3, a4, (void (*)(void))sub_1A5F05A70, (void (*)(void))sub_1A5EF39F8, (uint64_t (*)(uint64_t, uint64_t))sub_1A5EC1D18);
}

_OWORD *sub_1A5EF0FD8(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1A5EF11E8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
        return sub_1A5EF1B2C(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1A5F0510C();
      goto LABEL_7;
    }
    sub_1A5EF1814(v15, a4 & 1);
    v21 = sub_1A5EF11E8(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A5EF124C(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1A5F648C8();
  __break(1u);
  return result;
}

unint64_t sub_1A5EF1108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1A5F64880() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1A5F64880() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1A5EF11E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5F64910();
  sub_1A5F6419C();
  v4 = sub_1A5F64928();
  return sub_1A5EF1108(a1, a2, v4);
}

_OWORD *sub_1A5EF124C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1A5EF1B2C(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1A5EF12B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v11;

  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v7 + 16))(v6, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v9 = *(_QWORD *)(a1 + 16);
  if (EnumCaseMultiPayload == 1)
  {
    swift_getTupleTypeMetadata2();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a2, v6, v9);
}

uint64_t sub_1A5EF137C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;
  _BYTE v31[32];
  _OWORD v32[2];
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v36 = a1;
  v37 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v38 = v8;
  v39 = 0;
  v40 = v11 & v9;
  v41 = a2;
  v42 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5EF15DC(&v34);
  v12 = *((_QWORD *)&v34 + 1);
  if (!*((_QWORD *)&v34 + 1))
  {
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1A5F12BAC();
    return swift_release();
  }
  while (1)
  {
    v15 = v34;
    sub_1A5EF1B2C(&v35, v33);
    v16 = *a5;
    v18 = sub_1A5EF11E8(v15, v12);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = (v17 & 1) == 0;
    v21 = v19 + v20;
    if (__OFADD__(v19, v20))
      break;
    v22 = v17;
    if (*(_QWORD *)(v16 + 24) >= v21)
    {
      if ((a4 & 1) != 0)
      {
        if ((v17 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_1A5F0510C();
        if ((v22 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_1A5EF1814(v21, a4 & 1);
      v23 = sub_1A5EF11E8(v15, v12);
      if ((v22 & 1) != (v24 & 1))
        goto LABEL_22;
      v18 = v23;
      if ((v22 & 1) != 0)
      {
LABEL_6:
        v13 = 32 * v18;
        sub_1A5EF30B0(*(_QWORD *)(*a5 + 56) + v13, (uint64_t)v31);
        sub_1A5EF30B0((uint64_t)v31, (uint64_t)v32);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
        swift_bridgeObjectRelease();
        v14 = (_OWORD *)(*(_QWORD *)(*a5 + 56) + v13);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
        sub_1A5EF1B2C(v32, v14);
        goto LABEL_7;
      }
    }
    v25 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    v26 = (uint64_t *)(v25[6] + 16 * v18);
    *v26 = v15;
    v26[1] = v12;
    sub_1A5EF1B2C(v33, (_OWORD *)(v25[7] + 32 * v18));
    v27 = v25[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_21;
    v25[2] = v29;
LABEL_7:
    sub_1A5EF15DC(&v34);
    v12 = *((_QWORD *)&v34 + 1);
    a4 = 1;
    if (!*((_QWORD *)&v34 + 1))
      goto LABEL_19;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_1A5F648C8();
  __break(1u);
  return result;
}

uint64_t sub_1A5EF15DC@<X0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void (*v19)(_OWORD *);
  uint64_t result;
  _OWORD v21[3];
  _OWORD v22[3];
  __int128 v23;
  _OWORD v24[2];

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    sub_1A5EF30B0(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(_QWORD *)&v23 = v13;
    *((_QWORD *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    v16 = *(_QWORD *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      v9 = (v16 - 1) & v16;
      v10 = __clz(__rbit64(v16)) + (v14 << 6);
      v7 = v14;
      goto LABEL_3;
    }
    v17 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        v14 = v17;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        v16 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          v14 = v5 + 3;
          goto LABEL_7;
        }
        v17 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          v16 = *(_QWORD *)(v4 + 8 * v17);
          if (v16)
            goto LABEL_10;
          v14 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            v16 = *(_QWORD *)(v4 + 8 * v14);
            if (v16)
              goto LABEL_7;
            v7 = v15 - 1;
            v18 = v5 + 6;
            while (v15 != v18)
            {
              v16 = *(_QWORD *)(v4 + 8 * v18++);
              if (v16)
              {
                v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  memset(v24, 0, sizeof(v24));
  v23 = 0u;
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v19 = (void (*)(_OWORD *))v1[5];
  result = sub_1A5ED1578((uint64_t)&v23, (uint64_t)v22, (unint64_t *)&qword_1ED1CE198, (void (*)(uint64_t))sub_1A5EF1BE0);
  if (*((_QWORD *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_1A5ED4D44((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1A5EF1BE0);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

void sub_1A5EF17C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1A5F64568();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1A5EF1814(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  sub_1A5EF1B3C(0, &qword_1ED1CE560, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v6 = a2;
  v7 = sub_1A5F6473C();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v35 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v14 << 6);
      }
      else
      {
        v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v19 >= v34)
          goto LABEL_34;
        v20 = v35[v19];
        ++v14;
        if (!v20)
        {
          v14 = v19 + 1;
          if (v19 + 1 >= v34)
            goto LABEL_34;
          v20 = v35[v14];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v34)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v35[v21];
            if (!v20)
            {
              while (1)
              {
                v14 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_41;
                if (v14 >= v34)
                  goto LABEL_34;
                v20 = v35[v14];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v14 = v21;
          }
        }
LABEL_21:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v24 = *v22;
      v23 = v22[1];
      v25 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v18);
      if ((v6 & 1) != 0)
      {
        sub_1A5EF1B2C(v25, v36);
      }
      else
      {
        sub_1A5EF30B0((uint64_t)v25, (uint64_t)v36);
        swift_bridgeObjectRetain();
      }
      sub_1A5F64910();
      sub_1A5F6419C();
      result = sub_1A5F64928();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v15);
      *v16 = v24;
      v16[1] = v23;
      result = (uint64_t)sub_1A5EF1B2C(v36, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

_OWORD *sub_1A5EF1B2C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_1A5EF1B3C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, _QWORD))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, MEMORY[0x1E0DEA968], a3, MEMORY[0x1E0DEA978]);
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1A5EF1B90(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1A5F640D0();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_1A5EF1BE0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED1CE510)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED1CE510);
  }
}

uint64_t sub_1A5EF1C4C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  v3 = a1[1];
  sub_1A5EF30B0((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A5EF1C8C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v7 = (_QWORD *)(a5[6] + 16 * a1);
  *v7 = a2;
  v7[1] = a3;
  result = a6(a4, a5[7] + 40 * a1);
  v9 = a5[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a5[2] = v11;
  return result;
}

uint64_t sub_1A5EF1CF8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v5;

  sub_1A5EBB7B0(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1A85B8BDC](a1, v6, a5);
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1A5EF1E00()
{
  uint64_t v0;

  return sub_1A5EF1E0C(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1A5EF1E0C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  type metadata accessor for AccessTracker();
  v3 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  *(_QWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  a2(v3);
  return swift_release();
}

uint64_t type metadata accessor for AccessTracker()
{
  return objc_opt_self();
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t sub_1A5EF1EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  id v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t (*v60)(_QWORD);
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  unsigned __int8 v86[24];
  __int128 v87;
  __int128 v88;
  _UNKNOWN **v89;
  __int128 v90;
  uint64_t v91;

  v8 = v7;
  v80 = a3;
  v81 = a4;
  v79 = a2;
  v73 = type metadata accessor for Session();
  MEMORY[0x1E0C80A78](v73);
  v74 = (uint64_t *)((char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v82 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v82);
  v83 = (uint64_t *)((char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for SessionData(0, a6, a7, v15);
  v78 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v77 = (uint64_t)&v73 - v18;
  v76 = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for SessionData<A>, v16, v17);
  v20 = type metadata accessor for PushEvent(0, v16, v76, v19);
  v85 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v73 - v21;
  v23 = sub_1A5F64070();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x1E0C80A78](v23);
  v27 = (uint64_t *)((char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = *(void **)(*(_QWORD *)(v8 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *v27 = v28;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v24 + 104))(v27, *MEMORY[0x1E0DEF740], v23, v25);
  v29 = v28;
  LOBYTE(v28) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v24 + 8))(v27, v23);
  if ((v28 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  v75 = a5;
  v31 = a1;
  v32 = sub_1A5EF2498(v20);
  v34 = v33;
  v84 = v8;
  v35 = (uint64_t *)(v8 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_dataStacks);
  swift_beginAccess();
  v36 = *v35;
  if (*(_QWORD *)(*v35 + 16))
  {
    v37 = sub_1A5EF11E8(v32, v34);
    v38 = v76;
    if ((v39 & 1) != 0)
    {
      sub_1A5ECE02C(*(_QWORD *)(v36 + 56) + 40 * v37, (uint64_t)&v87);
    }
    else
    {
      v89 = 0;
      v87 = 0u;
      v88 = 0u;
    }
    v40 = v31;
  }
  else
  {
    v89 = 0;
    v87 = 0u;
    v88 = 0u;
    v40 = a1;
    v38 = v76;
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  v41 = v75;
  if (*((_QWORD *)&v88 + 1))
  {
    sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE4D0);
    type metadata accessor for DataEventStack(0, v16, v38, v42);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v44 = *((_QWORD *)&v90 + 1);
      v43 = v90;
      v45 = v91;
      (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v22, v40, v20);
      if (v43)
        goto LABEL_15;
      goto LABEL_14;
    }
  }
  else
  {
    sub_1A5EF399C((uint64_t)&v87);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v22, v40, v20);
LABEL_14:
  v46 = sub_1A5EF2498(v20);
  v43 = sub_1A5EF3060(v46, v47, v16, v38);
  v44 = v48;
  v45 = v49;
LABEL_15:
  (*(void (**)(char *, uint64_t))(v85 + 8))(v22, v20);
  *(_QWORD *)&v90 = v43;
  *((_QWORD *)&v90 + 1) = v44;
  v91 = v45;
  v50 = v77;
  sub_1A5EF12B4(v20, v77);
  v52 = type metadata accessor for DataEventStack(0, v16, v38, v51);
  sub_1A5EF2748(v50, v79, v80, v81, v41, v52);
  (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v50, v16);
  v53 = sub_1A5EF2498(v20);
  v55 = v54;
  *((_QWORD *)&v88 + 1) = v52;
  v89 = &off_1E4FD1350;
  v87 = v90;
  *(_QWORD *)&v88 = v91;
  swift_beginAccess();
  sub_1A5EF0D60((uint64_t)&v87, v53, v55);
  swift_endAccess();
  v56 = v84;
  v57 = v84 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
  swift_beginAccess();
  v58 = v57;
  v59 = v83;
  sub_1A5ED7E14(v58, (uint64_t)v83, type metadata accessor for SessionManager.SessionState);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result)
  {
    if ((_DWORD)result != 1)
      return result;
    v60 = type metadata accessor for SessionManager.SessionState;
  }
  else
  {
    v61 = (_QWORD *)*v59;
    v85 = *(_QWORD *)(v56 + 24);
    v62 = v61[2];
    v63 = v61[3];
    v64 = *(_QWORD *)((char *)v61 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier + 8);
    v83 = *(uint64_t **)((char *)v61 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
    v65 = v61[4];
    v66 = v61[5];
    v67 = (char *)v61 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate;
    v68 = v73;
    v59 = v74;
    v69 = (char *)v74 + *(int *)(v73 + 28);
    v70 = sub_1A5F63F08();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v69, v67, v70);
    v71 = *(double *)((char *)v61 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_timestampConfiguration + 8);
    v86[0] = *((_BYTE *)v61 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_timestampConfiguration);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A5EF3C30(v65, v66);
    v72 = sub_1A5EEFC98(v62, v63, v86, v71);
    *v59 = v62;
    v59[1] = v63;
    v59[2] = (uint64_t)v83;
    v59[3] = v64;
    v59[4] = v65;
    v59[5] = v66;
    *(uint64_t *)((char *)v59 + *(int *)(v68 + 32)) = v72;
    sub_1A5EF4098((uint64_t)v59);
    swift_release();
    v60 = (uint64_t (*)(_QWORD))type metadata accessor for Session;
  }
  return sub_1A5ED4D44((uint64_t)v59, v60);
}

uint64_t type metadata accessor for SessionData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SessionData);
}

uint64_t sub_1A5EF2498(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v2 + 16))(v5, v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v7 = *(_QWORD *)(a1 + 16);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = *(_QWORD *)&v5[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    v8 = sub_1A5EF2700();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
  }
  return v8;
}

uint64_t sub_1A5EF2588(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t result;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v4 <= v3)
    v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(a1 + v4);
  if (v5 >= 2)
  {
    if (v4 <= 3)
      v6 = v4;
    else
      v6 = 4;
    __asm { BR              X13 }
  }
  result = (*(uint64_t (**)(uint64_t))(v2 + 8))(a1);
  if (v5 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A5EF2670(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5EF26BC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_1A5EF2700()
{
  return sub_1A5F64994();
}

uint64_t type metadata accessor for Session()
{
  uint64_t result;

  result = qword_1ED1CF510;
  if (!qword_1ED1CF510)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5EF2748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a5;
  v26 = a3;
  v9 = *(_QWORD *)(a6 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for DataEventStack.Entry(0, v9, *(_QWORD *)(v13 + 24), v14);
  v16 = *((_QWORD *)v15 - 1);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v25 - v21;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v12, a1, v9, v20);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v22, v12, v9);
  *(_QWORD *)&v22[v15[9]] = a2;
  v23 = &v22[v15[10]];
  *(_QWORD *)v23 = v26;
  *((_QWORD *)v23 + 1) = a4;
  *(_QWORD *)&v22[v15[11]] = v27;
  (*(void (**)(char *, char *, int *))(v16 + 16))(v18, v22, v15);
  sub_1A5F6431C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A5F64304();
  return (*(uint64_t (**)(char *, int *))(v16 + 8))(v22, v15);
}

uint64_t sub_1A5EF28C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  *(_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A5EF2960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  char v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 <= v6)
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X12 }
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a1, a2);
  if (v8 == 1)
  {
    v10 = (_QWORD *)((a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)((a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
    v12 = 1;
  }
  else
  {
    v12 = 0;
  }
  *(_BYTE *)(a1 + v7) = v12;
  return a1;
}

_QWORD *sub_1A5EF2A78(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v10(v8, v9, v5);
  return a1;
}

uint64_t sub_1A5EF2AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, int *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;

  v29 = a2;
  v30 = a3;
  v28 = a5;
  v9 = (int *)type metadata accessor for DataEventStack.Entry(255, a4, a5, a4);
  v10 = sub_1A5F64568();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - v12;
  v14 = *((_QWORD *)v9 - 1);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v28 - v16;
  *(_QWORD *)&v31 = a1;
  v18 = sub_1A5F6431C();
  MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEAF20], v18);
  sub_1A5F640E8();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v13, 1, v9) == 1)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    *(_QWORD *)(a6 + 80) = 0;
    *(_OWORD *)(a6 + 48) = 0u;
    *(_OWORD *)(a6 + 64) = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
    *(_OWORD *)(a6 + 32) = 0u;
    *(_OWORD *)a6 = 0u;
  }
  else
  {
    (*(void (**)(char *, char *, int *))(v14 + 32))(v17, v13, v9);
    v32 = a4;
    v33 = v28;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v31);
    (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1, v17, a4);
    v21 = v9[10];
    v22 = *(_QWORD *)&v17[v9[9]];
    v24 = *(_QWORD *)&v17[v21];
    v23 = *(_QWORD *)&v17[v21 + 8];
    v25 = *(_QWORD *)&v17[v9[11]];
    v26 = *(void (**)(char *, int *))(v14 + 8);
    v27 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v17, v9);
    *(_QWORD *)a6 = v29;
    *(_QWORD *)(a6 + 8) = v27;
    result = sub_1A5EC1D18(&v31, a6 + 16);
    *(_QWORD *)(a6 + 56) = v22;
    *(_QWORD *)(a6 + 64) = v24;
    *(_QWORD *)(a6 + 72) = v23;
    *(_QWORD *)(a6 + 80) = v25;
  }
  return result;
}

uint64_t type metadata accessor for DataEventStack.Entry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DataEventStack.Entry);
}

uint64_t sub_1A5EF2CD0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1A5EF2D5C + 4 * byte_1A5F68D70[v10]))();
  }
}

uint64_t sub_1A5EF2DE0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 16) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 16) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A5EF2EB4 + 4 * byte_1A5F677B0[(v9 - 1)]))();
}

uint64_t type metadata accessor for SessionManager.SessionState(uint64_t a1)
{
  return sub_1A5EBC540(a1, qword_1ED1CEBB8);
}

_QWORD *sub_1A5EF2F38(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2 + 4;
    v10 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 >= 3)
    {
      a1[4] = *v9;
      a1[5] = v10;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)a1 + 2) = *(_OWORD *)v9;
    }
    v11 = type metadata accessor for Session();
    v12 = *(int *)(v11 + 28);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1A5F63F08();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    *(_QWORD *)((char *)a1 + *(int *)(v11 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v11 + 32));
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    *a1 = *a2;
    swift_retain();
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_1A5EF3060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for DataEventStack.Entry(0, a3, a4, a4);
  return sub_1A5F64094();
}

uint64_t type metadata accessor for SummaryEventConfiguration(uint64_t a1)
{
  return sub_1A5EBC540(a1, (uint64_t *)&unk_1ED1CD368);
}

uint64_t sub_1A5EF30B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

BOOL sub_1A5EF30EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1A5EF30F8(a1, a2, a3, *(_QWORD *)(v3 + 16), *(uint64_t **)(v3 + 24), *(uint64_t **)(v3 + 32));
}

BOOL sub_1A5EF30F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  return !*(_QWORD *)(a4 + 16) || !sub_1A5EF3148(*a6, a6[1], *a5, a5[1], a1, a2);
}

BOOL sub_1A5EF3148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t inited;
  uint64_t v14;
  char v15;

  sub_1A5EF3694();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A5F68B40;
  *(_QWORD *)(inited + 32) = 42;
  *(_QWORD *)(inited + 40) = 0xE100000000000000;
  *(_QWORD *)(inited + 48) = 42;
  *(_QWORD *)(inited + 56) = 0xE100000000000000;
  *(_QWORD *)(inited + 64) = 42;
  *(_QWORD *)(inited + 72) = 0xE100000000000000;
  *(_QWORD *)(inited + 80) = a1;
  *(_QWORD *)(inited + 88) = a2;
  *(_QWORD *)(inited + 96) = 42;
  *(_QWORD *)(inited + 104) = 0xE100000000000000;
  *(_QWORD *)(inited + 112) = 42;
  *(_QWORD *)(inited + 120) = 0xE100000000000000;
  *(_QWORD *)(inited + 128) = a1;
  *(_QWORD *)(inited + 136) = a2;
  *(_QWORD *)(inited + 144) = a3;
  *(_QWORD *)(inited + 152) = a4;
  *(_QWORD *)(inited + 160) = 42;
  *(_QWORD *)(inited + 168) = 0xE100000000000000;
  *(_QWORD *)(inited + 176) = a1;
  *(_QWORD *)(inited + 184) = a2;
  *(_QWORD *)(inited + 192) = a3;
  *(_QWORD *)(inited + 200) = a4;
  *(_QWORD *)(inited + 208) = a5;
  *(_QWORD *)(inited + 216) = a6;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v14 = sub_1A5F47EFC(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v15 = sub_1A5EF3268(v14, *(_QWORD *)(v6 + 16));
  swift_bridgeObjectRelease();
  return (v15 & 1) == 0;
}

uint64_t sub_1A5EF3268(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  BOOL v36;
  BOOL v37;
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 1;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 1;
  if (v2 >= v3)
    v4 = a1;
  else
    v4 = a2;
  if (v2 >= v3)
    v5 = a2;
  else
    v5 = a1;
  v42 = v4;
  v43 = v4 + 56;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v4 + 56);
  v39 = (unint64_t)(63 - v6) >> 6;
  v45 = v5 + 56;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v10 = 0;
  v44 = v5;
  while (1)
  {
    while (1)
    {
      v11 = v10;
      if (!v8)
        break;
      v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v13 = v12 | (v10 << 6);
      if (*(_QWORD *)(v5 + 16))
        goto LABEL_31;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (v14 >= v39)
      goto LABEL_53;
    v15 = *(_QWORD *)(v43 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v11 + 2;
      if (v11 + 2 >= v39)
        goto LABEL_53;
      v15 = *(_QWORD *)(v43 + 8 * v10);
      if (!v15)
      {
        v10 = v11 + 3;
        if (v11 + 3 >= v39)
          goto LABEL_53;
        v15 = *(_QWORD *)(v43 + 8 * v10);
        if (!v15)
          break;
      }
    }
LABEL_30:
    v8 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
    if (*(_QWORD *)(v5 + 16))
    {
LABEL_31:
      v40 = v8;
      v41 = v10;
      v17 = (uint64_t *)(*(_QWORD *)(v42 + 48) + 48 * v13);
      v18 = *v17;
      v19 = v17[1];
      v21 = v17[2];
      v20 = v17[3];
      v23 = v17[4];
      v22 = v17[5];
      sub_1A5F64910();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = v18;
      sub_1A5F6419C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v47 = v21;
      sub_1A5F6419C();
      v48 = v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v46 = v23;
      sub_1A5F6419C();
      swift_bridgeObjectRelease();
      v25 = sub_1A5F64928();
      v26 = -1 << *(_BYTE *)(v5 + 32);
      v27 = v25 & ~v26;
      if (((*(_QWORD *)(v45 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0)
      {
        v28 = ~v26;
        v29 = *(_QWORD *)(v44 + 48);
        while (1)
        {
          v30 = (_QWORD *)(v29 + 48 * v27);
          v31 = v30[2];
          v32 = v30[3];
          v33 = v30[4];
          v34 = v30[5];
          v35 = *v30 == v24 && v30[1] == v19;
          if (v35 || (sub_1A5F64880() & 1) != 0)
          {
            v36 = v31 == v47 && v32 == v48;
            if (v36 || (sub_1A5F64880() & 1) != 0)
            {
              v37 = v33 == v46 && v34 == v22;
              if (v37 || (sub_1A5F64880() & 1) != 0)
                break;
            }
          }
          v27 = (v27 + 1) & v28;
          if (((*(_QWORD *)(v45 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
            goto LABEL_13;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v38 = 0;
        goto LABEL_50;
      }
LABEL_13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v5 = v44;
      v8 = v40;
      v10 = v41;
    }
  }
  v16 = v11 + 4;
  if (v11 + 4 >= v39)
  {
LABEL_53:
    v38 = 1;
LABEL_50:
    swift_bridgeObjectRelease();
    sub_1A5F12BAC();
    return v38;
  }
  v15 = *(_QWORD *)(v43 + 8 * v16);
  if (v15)
  {
    v10 = v11 + 4;
    goto LABEL_30;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v39)
      goto LABEL_53;
    v15 = *(_QWORD *)(v43 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_30;
  }
LABEL_55:
  __break(1u);
  return result;
}

void sub_1A5EF363C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CB878)
  {
    sub_1A5EF6AA8();
    v0 = sub_1A5F6461C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CB878);
  }
}

void sub_1A5EF3694()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CB880)
  {
    v0 = sub_1A5F64850();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CB880);
  }
}

uint64_t sub_1A5EF36E8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  _OWORD v32[2];
  _OWORD v33[2];

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1A5EF1B3C(0, &qword_1ED1CE560, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  result = sub_1A5F64748();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v14 >= v30)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v30)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v16 = v14 + 2;
          if (v16 >= v30)
            return v8;
          v15 = a1[v16];
          if (!v15)
          {
            while (1)
            {
              v10 = v16 + 1;
              if (__OFADD__(v16, 1))
                goto LABEL_39;
              if (v10 >= v30)
                return v8;
              v15 = a1[v10];
              ++v16;
              if (v15)
                goto LABEL_22;
            }
          }
          v10 = v16;
        }
      }
LABEL_22:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v19 = *v17;
    v18 = v17[1];
    sub_1A5EF30B0(*(_QWORD *)(v4 + 56) + 32 * v13, (uint64_t)v33);
    sub_1A5EF1B2C(v33, v32);
    sub_1A5F64910();
    swift_bridgeObjectRetain();
    sub_1A5F6419C();
    result = sub_1A5F64928();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v19;
    v28[1] = v18;
    result = (uint64_t)sub_1A5EF1B2C(v32, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v23));
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1A5EF399C(uint64_t a1)
{
  uint64_t v2;

  sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CE4D8, (unint64_t *)&qword_1ED1CE4D0, (uint64_t)&protocol descriptor for DataEventStackType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A5EF39F8(uint64_t a1, char a2)
{
  return sub_1A5F04A90(a1, a2, &qword_1ED1CE558, (unint64_t *)&qword_1ED1CE4D0, (uint64_t)&protocol descriptor for DataEventStackType, (void (*)(uint64_t, _BYTE *))sub_1A5EC1D18);
}

uint64_t destroy for Session(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40) >= 3uLL)
    swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_1A5EF3AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = type metadata accessor for SessionData(255, v5, v6, a4);
  v8 = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for SessionData<A>, v7);
  v10 = *(_QWORD *)(type metadata accessor for PushEvent(0, v7, v8, v9) - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = (*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A5EF1EB8(v4 + v11, *(_QWORD *)(v4 + v12), *(_QWORD *)(v4 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v4 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v4 + ((((v12 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)), v5, v6);
}

void sub_1A5EF3B58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CE6A0)
  {
    v0 = sub_1A5F63DD0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CE6A0);
  }
}

uint64_t sub_1A5EF3BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(_QWORD *)(type metadata accessor for PushEvent(0, v5, v6, a4) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A5EF094C(v4 + v8, *(_QWORD *)(v4 + v9), *(_QWORD *)(v4 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v4 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v4 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)), v5, v6);
}

uint64_t sub_1A5EF3C30(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1A5EF3C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for DataEventStack.Entry(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  sub_1A5F6431C();
  return sub_1A5F64310();
}

uint64_t initializeWithCopy for SummaryEventConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1A5F63DD0();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t type metadata accessor for SummaryEventConfiguration.StorageURLOptions(uint64_t a1)
{
  return sub_1A5EBC540(a1, (uint64_t *)&unk_1ED1CD320);
}

void sub_1A5EF3D48(void *a1, unint64_t a2)
{
  if (a2 >> 62 == 2)
  {

  }
  else if ((a2 >> 62) <= 1)
  {
    swift_release();
  }
}

uint64_t sub_1A5EF3D78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1 = v0[2];
  v2 = v0[3];
  v3 = *(_QWORD *)(sub_1A5F63F08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1A5EEF69C(v0[5], v0[6], (uint64_t)v0 + v4, *((unsigned __int8 *)v0 + v4 + *(_QWORD *)(v3 + 64)), v1, v2);
}

uint64_t sub_1A5EF3DDC()
{
  uint64_t v0;

  return sub_1A5EF3DE8(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1A5EF3DE8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  type metadata accessor for AccessSessionManager();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a3;
  swift_retain();
  a1(v5);
  return swift_release();
}

uint64_t type metadata accessor for AccessSessionManager()
{
  return objc_opt_self();
}

uint64_t sub_1A5EF3E60()
{
  uint64_t v0;

  return sub_1A5EF3E68(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A5EF3E68(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_observers);
  swift_beginAccess();
  v2 = *v1;
  v9 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1A5F64724();
    v3 = result;
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_14;
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      v6 = MEMORY[0x1A85B836C](i, v2);
    }
    else
    {
      v6 = *(_QWORD *)(v2 + 8 * i + 32);
      swift_retain();
    }
    if (MEMORY[0x1A85B8E10](v6 + 16))
    {
      swift_unknownObjectRelease();
      sub_1A5F6467C();
      sub_1A5F646AC();
      sub_1A5F646B8();
      sub_1A5F64688();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v7 = v9;
LABEL_15:
  *v1 = v7;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v8 = swift_retain();
  MEMORY[0x1A85B7FAC](v8);
  if (*(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1A5F642D4();
  sub_1A5F642F8();
  sub_1A5F642BC();
  return swift_endAccess();
}

uint64_t sub_1A5EF4054(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v4;

  sub_1A5EDCBFC(0, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1A5EF4098(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t ObjectType;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;

  v3 = sub_1A5F64070();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(*(_QWORD *)(v1 + 32) + OBJC_IVAR___AAAccessQueue_queue);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x1E0DEF740], v3, v5);
  v9 = v8;
  LOBYTE(v8) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  if ((v8 & 1) != 0)
  {
    result = swift_beginAccess();
    v11 = *(_QWORD *)(v1 + 48);
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain();
      v13 = (uint64_t *)(v11 + 40);
      do
      {
        v14 = *v13;
        ObjectType = swift_getObjectType();
        v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 40);
        swift_unknownObjectRetain();
        v16(a1, ObjectType, v14);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 48))(a1, 0, ObjectType, v14);
        swift_unknownObjectRelease();
        v13 += 2;
        --v12;
      }
      while (v12);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A5EF41F0()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;

  if ((*(_BYTE *)(v0 + 32) & 2) != 0)
  {
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v2 = (void *)Strong;
      if (qword_1ED1CD058 != -1)
        swift_once();
      objc_msgSend(v2, sel_flushWithCallbackQueue_completion_, qword_1ED1CCCD0, 0);
      swift_release();
    }
  }
}

uint64_t sub_1A5EF428C()
{
  uint64_t *v0;

  return sub_1A5EF4298(v0[2], v0[3], v0[4]);
}

uint64_t sub_1A5EF4298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t ObjectType;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v17;

  sub_1A5EF4430();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for Session();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_unknownObjectRetain();
  sub_1A5EF4720(0, 0, a2, a3);
  swift_endAccess();
  if (!MEMORY[0x1A85B8E10](a1 + 16))
  {
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_5;
  }
  sub_1A5EF4484(v8);
  swift_unknownObjectRelease();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_5:
    v14 = (uint64_t (*)(_QWORD))sub_1A5EF4430;
    v15 = (uint64_t)v8;
    return sub_1A5ED4D44(v15, v14);
  }
  sub_1A5EF8174((uint64_t)v8, (uint64_t)v12);
  ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 32))(v12, ObjectType, a3);
  v14 = (uint64_t (*)(_QWORD))type metadata accessor for Session;
  v15 = (uint64_t)v12;
  return sub_1A5ED4D44(v15, v14);
}

uint64_t getEnumTagSinglePayload for Session()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1A5EF4430()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CFBE8)
  {
    type metadata accessor for Session();
    v0 = sub_1A5F64568();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CFBE8);
  }
}

uint64_t sub_1A5EF4484@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;

  v3 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A5F64070();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(*(_QWORD *)(v1 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v11 = v10;
  LOBYTE(v10) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    v13 = v1 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
    swift_beginAccess();
    sub_1A5ED7E14(v13, (uint64_t)v5, type metadata accessor for SessionManager.SessionState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
        sub_1A5ED4D44((uint64_t)v5, type metadata accessor for SessionManager.SessionState);
      v15 = type metadata accessor for Session();
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);
    }
    else
    {
      v16 = *(_QWORD *)v5;
      v17 = *(_QWORD *)(*(_QWORD *)v5 + 24);
      v28 = *(_QWORD *)(*(_QWORD *)v5 + 16);
      v18 = *(_QWORD *)(v16 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier + 8);
      v29 = *(_QWORD *)(v16 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
      v19 = *(_QWORD *)(v16 + 32);
      v20 = *(_QWORD *)(v16 + 40);
      v21 = v16 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate;
      v22 = type metadata accessor for Session();
      v23 = (char *)a1 + *(int *)(v22 + 28);
      v24 = sub_1A5F63F08();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v23, v21, v24);
      v25 = *(double *)(v16 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_timestampConfiguration + 8);
      v30 = *(_BYTE *)(v16 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_timestampConfiguration);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A5EF3C30(v19, v20);
      v26 = v28;
      v27 = sub_1A5EEFC98(v28, v17, &v30, v25);
      swift_release();
      *a1 = v26;
      a1[1] = v17;
      a1[2] = v29;
      a1[3] = v18;
      a1[4] = v19;
      a1[5] = v20;
      *(uint64_t *)((char *)a1 + *(int *)(v22 + 32)) = v27;
      return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 0, 1, v22);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Session()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1A5EF4720(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  char *result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_1A5EF48F4(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  sub_1A5EF48A4();
  result = (char *)swift_arrayDestroy();
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20])
      result = (char *)memmove(result, v21, 16 * v20);
    v22 = v6[2];
    v19 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *(_QWORD *)v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1A5F64760();
  __break(1u);
  return result;
}

unint64_t sub_1A5EF48A4()
{
  unint64_t result;

  result = qword_1ED1CFAE0;
  if (!qword_1ED1CFAE0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1CFAE0);
  }
  return result;
}

_QWORD *sub_1A5EF48F4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A5F08D98(a1, a2, a3, a4, &qword_1ED1CFBF0, (uint64_t (*)(uint64_t))sub_1A5EF48A4, (void (*)(_QWORD))sub_1A5EF48A4);
}

uint64_t destroy for SummaryEventConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1A5F63DD0();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

_QWORD *sub_1A5EF4978(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2 + 4;
    v10 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 >= 3)
    {
      a1[4] = *v9;
      a1[5] = v10;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)a1 + 2) = *(_OWORD *)v9;
    }
    v11 = type metadata accessor for Session();
    v12 = *(int *)(v11 + 28);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1A5F63F08();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    *(_QWORD *)((char *)a1 + *(int *)(v11 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v11 + 32));
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload <= 1)
  {
    *a1 = *a2;
    swift_retain();
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_1A5EF4AC4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1A5F64430();
  sub_1A5EDD448();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A5F66C50;
  v3 = *a1;
  v4 = a1[1];
  v5 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v6 = sub_1A5EE19C8();
  *(_QWORD *)(v2 + 64) = v6;
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  type metadata accessor for Session();
  sub_1A5F63F08();
  sub_1A5EF4C08();
  swift_bridgeObjectRetain();
  v7 = sub_1A5F64844();
  *(_QWORD *)(v2 + 96) = v5;
  *(_QWORD *)(v2 + 104) = v6;
  *(_QWORD *)(v2 + 72) = v7;
  *(_QWORD *)(v2 + 80) = v8;
  swift_bridgeObjectRetain();
  v9 = sub_1A5F640C4();
  v11 = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 136) = v5;
  *(_QWORD *)(v2 + 144) = v6;
  *(_QWORD *)(v2 + 112) = v9;
  *(_QWORD *)(v2 + 120) = v11;
  sub_1A5F63F80();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A5EF4C08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1CE440[0];
  if (!qword_1ED1CE440[0])
  {
    v1 = sub_1A5F63F08();
    result = MEMORY[0x1A85B8C3C](MEMORY[0x1E0CB08F0], v1);
    atomic_store(result, qword_1ED1CE440);
  }
  return result;
}

uint64_t sub_1A5EF4C50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5EF4D68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t LoggingEventProcessor.didUpdateSession(_:)(uint64_t *a1)
{
  return sub_1A5EF4AC4(a1);
}

uint64_t sub_1A5EF4DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;
  void (*v20)(char *, int *);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  v5 = *(_QWORD *)(a1 + 24);
  v34 = *(_QWORD *)(a1 + 16);
  v32 = v5;
  v6 = (int *)type metadata accessor for DataEventStack.Entry(255, v34, v5, a2);
  v31 = sub_1A5F64568();
  v7 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v9 = (char *)&v30 - v8;
  v10 = *((_QWORD *)v6 - 1);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v30 - v15;
  v33 = v3;
  *(_QWORD *)&v35 = *v3;
  v17 = sub_1A5F6431C();
  MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEAF20], v17);
  sub_1A5F640E8();
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v9, 1, v6) == 1)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v31);
    *(_QWORD *)(a3 + 80) = 0;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  else
  {
    (*(void (**)(char *, char *, int *))(v10 + 32))(v16, v9, v6);
    MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEAF58], v17);
    v19 = v33;
    sub_1A5F643E8();
    v20 = *(void (**)(char *, int *))(v10 + 8);
    v20(v13, v6);
    v22 = v19[1];
    v21 = v19[2];
    v23 = v34;
    v36 = v34;
    v37 = v32;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v35);
    (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(boxed_opaque_existential_1, v16, v23);
    v25 = v6[10];
    v26 = *(_QWORD *)&v16[v6[9]];
    v28 = *(_QWORD *)&v16[v25];
    v27 = *(_QWORD *)&v16[v25 + 8];
    v29 = *(_QWORD *)&v16[v6[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20(v16, v6);
    *(_QWORD *)a3 = v22;
    *(_QWORD *)(a3 + 8) = v21;
    result = sub_1A5EC1D18(&v35, a3 + 16);
    *(_QWORD *)(a3 + 56) = v26;
    *(_QWORD *)(a3 + 64) = v28;
    *(_QWORD *)(a3 + 72) = v27;
    *(_QWORD *)(a3 + 80) = v29;
  }
  return result;
}

unint64_t sub_1A5EF5014@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  void *ObjCClassFromMetadata;
  char v7;
  id v8;

  if (!(a2 >> 62))
    return (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  if (a2 >> 62 == 1)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    result = (unint64_t)objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_timestampGranularity);
    if ((result & 1) != 0)
    {
      result = (unint64_t)objc_msgSend(ObjCClassFromMetadata, sel_timestampGranularity);
      if (result >= 5)
      {
LABEL_15:
        result = sub_1A5F648A4();
        __break(1u);
      }
      else
      {
        *a5 = 0x302040100uLL >> (8 * result);
      }
    }
    else
    {
LABEL_8:
      *a5 = 0;
    }
  }
  else
  {
    switch(*(_QWORD *)(result + OBJC_IVAR___AARawEvent_timestampGranularity))
    {
      case 0:
        goto LABEL_8;
      case 1:
        v7 = 1;
        break;
      case 2:
        v7 = 4;
        break;
      case 3:
        v7 = 2;
        break;
      case 4:
        v7 = 3;
        break;
      default:
        v8 = (id)result;
        goto LABEL_15;
    }
    *a5 = v7;
  }
  return result;
}

_QWORD *sub_1A5EF5144(void *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  id v9;
  _QWORD *v10;

  if (a2 >> 62)
  {
    if (a2 >> 62 == 1)
    {
      swift_retain();
      sub_1A5F06AFC();
    }
    else
    {
      v9 = a1;
      sub_1A5EC10E0();
    }
  }
  else
  {
    swift_retain();
    v6 = sub_1A5EF51D8(a3, a4);
  }
  v10 = v6;
  sub_1A5EF3D48(a1, a2);
  return v10;
}

_QWORD *sub_1A5EF51D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char isUniquelyReferenced_nonNull_native;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44[3];
  uint64_t v45;
  uint64_t v46;

  v5 = sub_1A5F6494C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getMetatypeMetadata();
  v9 = sub_1A5F64994();
  v11 = v10;
  v12 = (_QWORD *)(v2 + 16);
  swift_beginAccess();
  v13 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1A5EF11E8(v9, v11);
    if ((v15 & 1) != 0)
    {
      v16 = *(_QWORD **)(*(_QWORD *)(v13 + 56) + 8 * v14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return v16;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v35 = v9;
  v17 = *(void (**)(uint64_t, uint64_t))(a2 + 24);
  v45 = a1;
  v46 = a2;
  __swift_allocate_boxed_opaque_existential_1(v44);
  v17(a1, a2);
  v18 = v45;
  v19 = __swift_project_boxed_opaque_existential_1(v44, v45);
  *((_QWORD *)&v41 + 1) = v18;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v40);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(boxed_opaque_existential_1, v19, v18);
  sub_1A5F64934();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  sub_1A5F64940();
  sub_1A5EF5664();
  v21 = sub_1A5F646E8();
  swift_release();
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v32 = v8;
    v33 = v6;
    v34 = v5;
    v23 = v21 + 32;
    swift_bridgeObjectRetain();
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1A5EF55DC(v23, (uint64_t)v44);
      sub_1A5EF5620((uint64_t)v44, (uint64_t)&v40);
      if (*((_QWORD *)&v40 + 1))
      {
        v36 = v40;
        v37 = v41;
        v38 = v42;
        v39 = v43;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v16 = sub_1A5EF56C4(0, v16[2] + 1, 1, v16);
        v25 = v16[2];
        v24 = v16[3];
        if (v25 >= v24 >> 1)
          v16 = sub_1A5EF56C4((_QWORD *)(v24 > 1), v25 + 1, 1, v16);
        v16[2] = v25 + 1;
        v26 = &v16[7 * v25];
        v27 = v36;
        v28 = v37;
        v29 = v38;
        v26[10] = v39;
        *((_OWORD *)v26 + 3) = v28;
        *((_OWORD *)v26 + 4) = v29;
        *((_OWORD *)v26 + 2) = v27;
      }
      else
      {
        sub_1A5ED4D44((uint64_t)&v40, (uint64_t (*)(_QWORD))sub_1A5EF5664);
      }
      v23 += 56;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease_n();
    v5 = v34;
    v6 = v33;
    v8 = v32;
  }
  else
  {
    swift_bridgeObjectRelease();
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v40 = *v12;
  *v12 = 0x8000000000000000;
  sub_1A5EF5C38((uint64_t)v16, v35, v11, isUniquelyReferenced_nonNull_native);
  *v12 = v40;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v16;
}

uint64_t sub_1A5EF55DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5EF5664();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5EF5620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5EF5664();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1A5EF5664()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CBE58)
  {
    v0 = sub_1A5F64568();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CBE58);
  }
}

_BYTE *sub_1A5EF56B8(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

_QWORD *sub_1A5EF56C4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1A5EDCBFC(0, &qword_1ED1CE1E8, (uint64_t)&type metadata for EventMirrorProperty, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A5EF5D94(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void (**sub_1A5EF5800(char *a1, double a2))(uint64_t a1, uint64_t a2)
{
  return sub_1A5EF5818(*a1, a2);
}

void (**sub_1A5EF5818(char a1, double a2))(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  unsigned __int8 v19;
  void *v20;
  _QWORD *v21;
  void (***v22)(uint64_t, uint64_t);
  void (**v23)(uint64_t, uint64_t);
  id v24[4];
  _BYTE v25[32];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v5 = sub_1A5F63BC0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (void (**)(uint64_t, uint64_t))((char *)&v24[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A5F63BF0();
  swift_allocObject();
  sub_1A5F63BE4();
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = a1;
  *(double *)(v9 + 24) = a2;
  *v8 = sub_1A5ECDAAC;
  v8[1] = (void (*)(uint64_t, uint64_t))v9;
  (*(void (**)(void (**)(uint64_t, uint64_t), _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CAE148], v5);
  sub_1A5F63BCC();
  type metadata accessor for EventData();
  sub_1A5ECC4D8(&qword_1ED1CD7C0, (uint64_t (*)(uint64_t))type metadata accessor for EventData, (uint64_t)&protocol conformance descriptor for EventData);
  v10 = sub_1A5F63BD8();
  if (!v2)
  {
    v13 = v10;
    v14 = v11;
    v15 = (void *)objc_opt_self();
    v16 = (void *)sub_1A5F63E24();
    v24[0] = 0;
    v8 = (void (**)(uint64_t, uint64_t))objc_msgSend(v15, sel_JSONObjectWithData_options_error_, v16, 0, v24);

    v17 = v24[0];
    if (v8)
    {
      sub_1A5F645C8();
      swift_unknownObjectRelease();
      sub_1A5EF30B0((uint64_t)v25, (uint64_t)v24);
      sub_1A5EF08A0();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v8 = v23;
        v18 = (void *)sub_1A5F640A0();
        v19 = objc_msgSend(v15, sel_isValidJSONObject_, v18);

        if ((v19 & 1) != 0)
        {
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
          sub_1A5EF0908(v13, v14);
          swift_release();
          return v8;
        }
        sub_1A5F08EC0();
        swift_allocError();
        *v22 = v8;
      }
      else
      {
        sub_1A5F08EC0();
        swift_allocError();
        *v21 = 0;
      }
      swift_willThrow();
      sub_1A5EF0908(v13, v14);
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
      return v8;
    }
    v20 = v17;
    sub_1A5F63CE0();

    swift_willThrow();
    sub_1A5EF0908(v13, v14);
  }
  swift_release();
  return v8;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1A5EF5B80(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 40) >= 3uLL)
      swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(type metadata accessor for Session() + 28);
    v4 = sub_1A5F63F08();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
    return swift_bridgeObjectRelease();
  }
  else if (result <= 1)
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_1A5EF5C38(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1A5EF11E8(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1A5F0586C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1A5EF5E88(v15, a4 & 1);
  v21 = sub_1A5EF11E8(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A5F648C8();
  __break(1u);
  return result;
}

uint64_t sub_1A5EF5D94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5EF5E88(uint64_t a1, char a2)
{
  return sub_1A5EC5BE0(a1, a2, &qword_1ED1CD958, &qword_1ED1CE1A0, (uint64_t)&type metadata for EventMirrorProperty);
}

uint64_t sub_1A5EF5EA4()
{
  uint64_t v0;

  return sub_1A5EF5EB0(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1A5EF5EB0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A5F64070();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x1A85B8E10](a1 + 64, v9);
  if (result)
  {
    v13 = result;
    v14 = *(void **)(*(_QWORD *)(result + 48) + OBJC_IVAR___AAAccessQueue_queue);
    *v11 = v14;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E0DEF740], v7);
    v15 = v14;
    LOBYTE(v14) = sub_1A5F64088();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
    if ((v14 & 1) != 0)
    {
      v16 = v13 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
      swift_beginAccess();
      sub_1A5ED7E14(v16, (uint64_t)v6, type metadata accessor for SessionManager.SessionState);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
          sub_1A5ED4D44((uint64_t)v6, type metadata accessor for SessionManager.SessionState);
        return swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
        swift_unknownObjectRelease();
        type metadata accessor for AccessTracker();
        v18 = swift_allocObject();
        swift_weakInit();
        swift_weakAssign();
        *(_QWORD *)(v18 + 24) = 0;
        *(_QWORD *)(v18 + 32) = 0;
        a2(v18);
        return swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1A5EF6088()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A5F63F08() - 8) + 80);
  return sub_1A5ED0A40(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void (**)(char *, char *, uint64_t))(v0 + 56), v0 + ((v1 + 64) & ~v1));
}

uint64_t sub_1A5EF60C4()
{
  uint64_t v0;

  return sub_1A5ECC110(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1A5EF60CC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A5F645EC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_1A5F64910();
        swift_bridgeObjectRetain();
        sub_1A5F6419C();
        v9 = sub_1A5F64928();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Tracker.Timer() - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void (**sub_1A5EF62C8(char *a1, double a2))(uint64_t a1, uint64_t a2)
{
  return sub_1A5EF6600(*a1, a2);
}

uint64_t sub_1A5EF62E0()
{
  uint64_t v0;

  return sub_1A5EC6720(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
}

uint64_t sub_1A5EF62F8()
{
  uint64_t v0;

  return sub_1A5EF6320(*(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32));
}

uint64_t sub_1A5EF6320(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  _QWORD v20[3];
  __int128 v21;
  __int128 v22;
  _UNKNOWN **v23;

  v6 = sub_1A5F64070();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (_QWORD *)((char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(*(_QWORD *)(v2 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, unint64_t, double))(v7 + 104))(v10, *MEMORY[0x1E0DEF740], v6, v8);
  v12 = v11;
  v13 = sub_1A5F64088();
  (*(void (**)(_QWORD *, unint64_t))(v7 + 8))(v10, v6);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (a2)
    v6 = a1;
  else
    v6 = 0xD000000000000010;
  if (a2)
    a1 = (uint64_t)a2;
  else
    a1 = 0x80000001A5F6EDC0;
  swift_beginAccess();
  v14 = *(_QWORD *)(v2 + 120);
  if (!*(_QWORD *)(v14 + 16))
  {
    v23 = 0;
    v21 = 0u;
    v22 = 0u;
    swift_bridgeObjectRetain();
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1A5EF1CF8((uint64_t)&v21, (unint64_t *)&qword_1ED1CE4D8, (unint64_t *)&qword_1ED1CE4D0, (uint64_t)&protocol descriptor for DataEventStackType);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_1A5EF11E8(v6, a1);
  if ((v16 & 1) != 0)
  {
    sub_1A5ECE02C(*(_QWORD *)(v14 + 56) + 40 * v15, (uint64_t)&v21);
  }
  else
  {
    v23 = 0;
    v21 = 0u;
    v22 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v22 + 1))
    goto LABEL_19;
  sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE4D0);
  sub_1A5EC62CC(0);
  v2 = v17;
  if ((swift_dynamicCast() & 1) != 0)
  {
    a2 = (_QWORD *)v20[0];
    v13 = v20[2];
    if (*(_QWORD *)(v20[0] + 16))
    {
      v3 = v20[1];
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) != 0)
      {
        v19 = a2[2];
        if (v19)
        {
LABEL_18:
          a2[2] = v19 - 1;
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *((_QWORD *)&v22 + 1) = v2;
          v23 = &off_1E4FD1350;
          *(_QWORD *)&v21 = a2;
          *((_QWORD *)&v21 + 1) = v3;
          *(_QWORD *)&v22 = v13;
          swift_beginAccess();
          sub_1A5EF0D60((uint64_t)&v21, v6, a1);
          return swift_endAccess();
        }
        goto LABEL_26;
      }
LABEL_25:
      result = (uint64_t)sub_1A5F62DE0(a2);
      a2 = (_QWORD *)result;
      v19 = *(_QWORD *)(result + 16);
      if (v19)
        goto LABEL_18;
LABEL_26:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void (**sub_1A5EF6600(char a1, double a2))(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  unsigned __int8 v19;
  void *v20;
  _QWORD *v21;
  void (***v22)(uint64_t, uint64_t);
  void (**v23)(uint64_t, uint64_t);
  id v24[4];
  _BYTE v25[32];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v5 = sub_1A5F63BC0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (void (**)(uint64_t, uint64_t))((char *)&v24[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A5F63BF0();
  swift_allocObject();
  sub_1A5F63BE4();
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = a1;
  *(double *)(v9 + 24) = a2;
  *v8 = sub_1A5ECDAAC;
  v8[1] = (void (*)(uint64_t, uint64_t))v9;
  (*(void (**)(void (**)(uint64_t, uint64_t), _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CAE148], v5);
  sub_1A5F63BCC();
  type metadata accessor for TimedData();
  sub_1A5ECC4D8(&qword_1ED1CD880, (uint64_t (*)(uint64_t))type metadata accessor for TimedData, (uint64_t)&protocol conformance descriptor for TimedData);
  v10 = sub_1A5F63BD8();
  if (!v2)
  {
    v13 = v10;
    v14 = v11;
    v15 = (void *)objc_opt_self();
    v16 = (void *)sub_1A5F63E24();
    v24[0] = 0;
    v8 = (void (**)(uint64_t, uint64_t))objc_msgSend(v15, sel_JSONObjectWithData_options_error_, v16, 0, v24);

    v17 = v24[0];
    if (v8)
    {
      sub_1A5F645C8();
      swift_unknownObjectRelease();
      sub_1A5EF30B0((uint64_t)v25, (uint64_t)v24);
      sub_1A5EF08A0();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v8 = v23;
        v18 = (void *)sub_1A5F640A0();
        v19 = objc_msgSend(v15, sel_isValidJSONObject_, v18);

        if ((v19 & 1) != 0)
        {
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
          sub_1A5EF0908(v13, v14);
          swift_release();
          return v8;
        }
        sub_1A5F08EC0();
        swift_allocError();
        *v22 = v8;
      }
      else
      {
        sub_1A5F08EC0();
        swift_allocError();
        *v21 = 0;
      }
      swift_willThrow();
      sub_1A5EF0908(v13, v14);
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
      return v8;
    }
    v20 = v17;
    sub_1A5F63CE0();

    swift_willThrow();
    sub_1A5EF0908(v13, v14);
  }
  swift_release();
  return v8;
}

uint64_t sub_1A5EF6928()
{
  return swift_release();
}

double sub_1A5EF6930@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1A5EF11E8(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A5F0510C();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1A5EF1B2C((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_1A5F542E8(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1A5EF6A20(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  result = swift_unknownObjectRelease();
  if ((a4 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A5EF6A58()
{
  uint64_t v0;

  return sub_1A5EC5EFC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t sub_1A5EF6A8C()
{
  uint64_t v0;

  return sub_1A5ECC5B8(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1A5EF6A98()
{
  uint64_t v0;
  NSObject *v1;

  v1 = *(NSObject **)(v0 + 16);
  if (v1)
    dispatch_group_leave(v1);
}

unint64_t sub_1A5EF6AA8()
{
  unint64_t result;

  result = qword_1ED1CB8C8;
  if (!qword_1ED1CB8C8)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for DenylistDescriptor, &type metadata for DenylistDescriptor);
    atomic_store(result, (unint64_t *)&qword_1ED1CB8C8);
  }
  return result;
}

uint64_t sub_1A5EF6AEC(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;

  sub_1A5EDCC40(0, a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_QWORD *sub_1A5EF6B28(int a1)
{
  id *v1;

  return sub_1A5EC7B68(a1, *v1);
}

uint64_t sub_1A5EF6B40()
{
  uint64_t *v0;

  return sub_1A5ECF6C0(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1A5EF6B4C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 40) >= 3uLL)
      swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(type metadata accessor for Session() + 28);
    v4 = sub_1A5F63F08();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
    return swift_bridgeObjectRelease();
  }
  else if (!(_DWORD)result)
  {
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for MescalSigner.Contract()
{
  return objc_opt_self();
}

void sub_1A5EF6CF0(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t Tracker.ifSession(block:)(uint64_t a1, uint64_t a2)
{
  return sub_1A5EEC6FC(a1, a2, (uint64_t)&unk_1E4FD2AE0, (uint64_t)sub_1A5EF5EA4);
}

_QWORD *sub_1A5EF6D10(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

uint64_t sub_1A5EF6D30(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    *(_BYTE *)(result + 16) = 0;
  }
  return result;
}

id static OS_os_log.analytics.getter()
{
  if (qword_1ED1CFC08 != -1)
    swift_once();
  return (id)qword_1ED1CE7B0;
}

uint64_t Tracker.register<A>(_:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_retain();
  sub_1A5EC69B8(0, 0, a2, a3, 0, a4, a5);
  return swift_release();
}

uint64_t Tracker.pop<A>(type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5EC0ACC(0, 0, a2, a3);
}

uint64_t SessionManagerConfiguration.init(options:flushProcessor:timestampConfigurationProvider:privacyValidationProvider:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t result;

  *a6 = *a1;
  a6[1] = a2;
  result = sub_1A5EC1D18(a3, (uint64_t)(a6 + 2));
  a6[7] = a4;
  a6[8] = a5;
  return result;
}

void sub_1A5EF6E60(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_1A5EF7058(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5EF70A4 + 4 * byte_1A5F69D4D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5EF70D8 + 4 * byte_1A5F69D48[v4]))();
}

uint64_t sub_1A5EF70D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5EF70E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5EF70E8);
  return result;
}

uint64_t sub_1A5EF70F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5EF70FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5EF7100(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5EF7108(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for UploadResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

id static AccessQueue.background.getter()
{
  return sub_1A5EBE2EC(&qword_1ED1CE2C0, (id *)&qword_1ED1CE2B0);
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

double static Double.defaultJitterDeviation.getter()
{
  return 600.0;
}

uint64_t sub_1A5EF71E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for EventData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5EF7220()
{
  return swift_deallocClassInstance();
}

uint64_t Tracker.whenSession(block:)(uint64_t a1, uint64_t a2)
{
  return sub_1A5EEC6FC(a1, a2, (uint64_t)&unk_1E4FD2AB8, (uint64_t)sub_1A5EF6A8C);
}

unint64_t destroy for Session.Kind(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *sub_1A5EF725C(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Session.Kind()
{
  return &type metadata for Session.Kind;
}

uint64_t Batch.contentType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t DisabledPrivacyValidationProvider.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0;
  return result;
}

uint64_t sub_1A5EF72A0(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LoggingEventProcessorFormat()
{
  return &type metadata for LoggingEventProcessorFormat;
}

uint64_t type metadata accessor for UploadBatchEventConfig()
{
  uint64_t result;

  result = qword_1ED1CE608;
  if (!qword_1ED1CE608)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5EF7318()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x696669746E656469;
  if (*v0 != 1)
    v1 = 0x6E6F6973726576;
  if (*v0)
    return v1;
  else
    return 0x7461446873756C66;
}

uint64_t TimestampGranularity.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5EF73AC + 4 * byte_1A5F69BD0[*v0]))(0x65736963657270, 0xE700000000000000);
}

uint64_t sub_1A5EF73AC()
{
  return 7954788;
}

uint64_t sub_1A5EF73BC()
{
  return 1920298856;
}

uint64_t sub_1A5EF73CC()
{
  return 0x6574756E696DLL;
}

uint64_t sub_1A5EF73E0()
{
  return 0x72657474696ALL;
}

uint64_t sub_1A5EF73F8()
{
  return sub_1A5F645D4();
}

uint64_t sub_1A5EF7420()
{
  char *v0;

  return sub_1A5EF7438(*v0);
}

uint64_t sub_1A5EF7438(char a1)
{
  if ((a1 & 1) != 0)
    return 1635017060;
  else
    return 0x617461646174656DLL;
}

uint64_t sub_1A5EF7468()
{
  char *v0;

  return sub_1A5EF7438(*v0);
}

void static FlushEvents.didStartSession.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static FlushEvents.didLeaveGroup.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void static FlushEvents.didEndSession.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

uint64_t type metadata accessor for BatchEvent(uint64_t a1)
{
  return sub_1A5EBC540(a1, qword_1ED1CBF50);
}

ValueMetadata *type metadata accessor for BatchEvent.Metadata()
{
  return &type metadata for BatchEvent.Metadata;
}

ValueMetadata *type metadata accessor for BatchEvent.PrivateMetadata()
{
  return &type metadata for BatchEvent.PrivateMetadata;
}

uint64_t type metadata accessor for BatchEvent.Event(uint64_t a1)
{
  return sub_1A5EBC540(a1, (uint64_t *)&unk_1ED1CBEB0);
}

uint64_t _s22ExtendedAttributeErrorOwxx()
{
  return swift_bridgeObjectRelease();
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

unint64_t sub_1A5EF7500()
{
  unint64_t result;

  result = qword_1ED1CF840;
  if (!qword_1ED1CF840)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1CF840);
  }
  return result;
}

void sub_1A5EF7554(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1A5EF1B3C(255, (unint64_t *)&qword_1ED1CE4E8, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1A5EF75C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CBD50)
  {
    sub_1A5EF8C6C();
    v0 = sub_1A5F64838();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CBD50);
  }
}

uint64_t sub_1A5EF7620(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1A5EF0E5C(a1, a2, a3, a4, (void (*)(void))sub_1A5F05A94, (void (*)(void))sub_1A5EF7810, (uint64_t (*)(uint64_t, uint64_t))sub_1A5EC1D18);
}

unint64_t sub_1A5EF763C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A5F645EC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A5F64910();
        swift_bridgeObjectRetain();
        sub_1A5F6419C();
        v9 = sub_1A5F64928();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1A5EF7810(uint64_t a1, char a2)
{
  return sub_1A5F04A90(a1, a2, &qword_1ED1CCE10, &qword_1ED1CE4C8, (uint64_t)&protocol descriptor for RestartTimerType, (void (*)(uint64_t, _BYTE *))sub_1A5EC1D18);
}

uint64_t sub_1A5EF7834(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A5EBFA14(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A5EF7850(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1A5EFFDDC();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1A5F004E8();
      goto LABEL_22;
    }
    sub_1A5F009DC();
  }
  v11 = *v4;
  sub_1A5F64910();
  sub_1A5F6419C();
  result = sub_1A5F64928();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1A5F64880(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1A5F648BC();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1A5F64880();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void sub_1A5EF79E8(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1A5EF79E8(a1, qword_1ED1CD3B0);
}

void sub_1A5EF7A40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CCFC0[0])
  {
    v0 = sub_1A5F64394();
    if (!v1)
      atomic_store(v0, qword_1ED1CCFC0);
  }
}

void sub_1A5EF7A9C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED1CE500)
  {
    sub_1A5EE2EE8(255, (unint64_t *)&qword_1ED1CE4D0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED1CE500);
  }
}

void sub_1A5EF7B14(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    sub_1A5EE2EE8(255, a3);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

unint64_t sub_1A5EF7B7C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED1CBD40;
  if (!qword_1ED1CBD40)
  {
    sub_1A5EF7BD4();
    v2[0] = MEMORY[0x1E0DEA970];
    v2[1] = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED1CBD40);
  }
  return result;
}

void sub_1A5EF7BD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CE190)
  {
    v0 = sub_1A5F640D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CE190);
  }
}

uint64_t sub_1A5EF7C34(uint64_t a1)
{
  uint64_t v2;

  sub_1A5ECD49C(0, &qword_1ED1CD060, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF560], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A5EF7C88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5ECD49C(0, &qword_1ED1CD060, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF560], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A5EF7CEC()
{
  unint64_t result;

  result = qword_1ED1CD878;
  if (!qword_1ED1CD878)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F6C5D4, &type metadata for TimedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1CD878);
  }
  return result;
}

unint64_t sub_1A5EF7D30()
{
  unint64_t result;

  result = qword_1ED1CD870;
  if (!qword_1ED1CD870)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F6C5FC, &type metadata for TimedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1CD870);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EventData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5EF7D80(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A5EF7DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1A5EF7E00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CBFE8)
  {
    type metadata accessor for EventData();
    v0 = sub_1A5F64568();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CBFE8);
  }
}

uint64_t sub_1A5EF7E54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EventData.init(from:)(a1, a2);
}

unint64_t sub_1A5EF7E70()
{
  unint64_t result;

  result = qword_1ED1CE0D8;
  if (!qword_1ED1CE0D8)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F67024, &type metadata for EventData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1CE0D8);
  }
  return result;
}

unint64_t sub_1A5EF7EB4()
{
  unint64_t result;

  result = qword_1ED1CD7B8;
  if (!qword_1ED1CD7B8)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F6704C, &type metadata for EventData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1CD7B8);
  }
  return result;
}

uint64_t sub_1A5EF7EF8()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1A5EE259C(10, 0xE100000000000000);
  qword_1ED1CE0C8 = result;
  unk_1ED1CE0D0 = v1;
  return result;
}

void sub_1A5EF7F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(sub_1A5F63F08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A5ED9F98(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56), v0 + v4, 0, 0, v0 + v5, *(_QWORD *)(v0 + ((v5 + 39) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v5 + 39) & 0xFFFFFFFFFFFFFFF8) + 8), v1, v2);
}

void sub_1A5EF7FB0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_1A5F63F08() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A5ECAEA0(*(char **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), v0 + v2, 0, 0, v0 + v3, *(void (**)(uint64_t *))(v0 + ((v3 + 39) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(uint64_t *))(v0 + ((v3 + 39) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void sub_1A5EF8034()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CE0C0)
  {
    type metadata accessor for Tracker.Timer();
    v0 = sub_1A5F64568();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CE0C0);
  }
}

uint64_t type metadata accessor for Tracker.RestartTimer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Tracker.RestartTimer);
}

uint64_t sub_1A5EF8094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);

  result = swift_beginAccess();
  v11 = *(_QWORD *)(a2 + 168);
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    v13 = v11 + 48;
    do
    {
      if (*(_QWORD *)(v13 - 16) == a1)
      {
        v14 = *(void (**)(uint64_t))(v13 - 8);
        swift_retain();
        v14(a3);
        swift_release();
      }
      v13 += 24;
      --v12;
    }
    while (v12);
    result = swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a2 + 136))
    return sub_1A5EBE0A8(a1, a3, a4, a5);
  return result;
}

uint64_t sub_1A5EF8174(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Session();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1A5EF81B8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 96));
  return v0;
}

uint64_t sub_1A5EF81FC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 96));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Atomic(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Atomic);
}

uint64_t destroy for UploadResult(uint64_t a1)
{
  return sub_1A5EF8280(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1A5EF8268(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

uint64_t sub_1A5EF8280(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

ValueMetadata *type metadata accessor for Action()
{
  return &type metadata for Action;
}

uint64_t sub_1A5EF82A8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Batch();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A5EF82E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Batch();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1A5EF8328()
{
  unint64_t v0;

  sub_1A5ECD49C(319, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1A5EF83E8()
{
  return 0x312E312E30;
}

uint64_t Batch.groupName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for Lazy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Lazy);
}

void sub_1A5EF8434()
{
  sub_1A5EC0A28();
}

uint64_t sub_1A5EF8448@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5EBD8C0(a1);
}

uint64_t sub_1A5EF8468@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A5EF8470(v1, a1);
}

uint64_t sub_1A5EF8470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A5ED94A4(a1, &OBJC_IVAR____TtC12AppAnalytics46BaseDocumentDirectoryUploadDropboxPathProvider_debugBaseURL, a2);
}

uint64_t type metadata accessor for HeartbeatEventServiceURLSessionDelegate()
{
  return objc_opt_self();
}

void sub_1A5EF849C()
{
  sub_1A5EC0A28();
}

uint64_t sub_1A5EF84B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5EF84D0(a1);
}

uint64_t sub_1A5EF84D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5ED8D74(&OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider____lazy_storage___debugBaseURL, &OBJC_IVAR____TtC12AppAnalytics31StaticUploadDropboxPathProvider_debugURLProvider, a1);
}

uint64_t sub_1A5EF84F0(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t URLSessionUploadClientFactory.init()()
{
  uint64_t v0;

  return v0;
}

void sub_1A5EF8544(uint64_t *a1@<X8>)
{
  URLSessionUploadClientFactory.makeUploadClient()(a1);
}

ValueMetadata *type metadata accessor for SessionManagerConfiguration()
{
  return &type metadata for SessionManagerConfiguration;
}

__n128 SessionManagerConfiguration.init(options:flushProcessor:timestampJitter:privacyValidationProvider:)@<Q0>(unint64_t *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, __n128 *a6@<X8>)
{
  unsigned __int8 v6;
  __n128 result;

  v6 = a3[1].n128_u8[0];
  a6->n128_u64[0] = *a1;
  a6->n128_u64[1] = a2;
  a6[2].n128_u64[1] = (unint64_t)&type metadata for TimestampJitter;
  a6[3].n128_u64[0] = (unint64_t)&protocol witness table for TimestampJitter;
  result = *a3;
  a6[1] = *a3;
  a6[2].n128_u8[0] = v6;
  a6[3].n128_u64[1] = a4;
  a6[4].n128_u64[0] = a5;
  return result;
}

void sub_1A5EF859C()
{
  unint64_t v0;

  sub_1A5ECD49C(319, (unint64_t *)&qword_1ED1CFBE8, (uint64_t (*)(uint64_t))type metadata accessor for Session, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1A5EF8634()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1A5EF86A8()
{
  qword_1ED1CD350 = 0x4122750000000000;
}

uint64_t sub_1A5EF86BC()
{
  uint64_t result;

  if (qword_1ED1CD358 != -1)
    result = swift_once();
  qword_1ED1CD340 = qword_1ED1CD350;
  byte_1ED1CD348 = 0;
  return result;
}

uint64_t sub_1A5EF870C(uint64_t a1)
{
  return sub_1A5EBE8B0(a1, qword_1ED1CD2F8);
}

id sub_1A5EF8718()
{
  id *v0;

  return objc_msgSend(*v0, sel_resume);
}

void sub_1A5EF8728(uint64_t a1)
{
  sub_1A5EC018C(a1);
}

uint64_t type metadata accessor for URLSessionUploadClient()
{
  return objc_opt_self();
}

void sub_1A5EF875C(unint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  sub_1A5EC03FC(a1, a2, a3, a4);
}

uint64_t type metadata accessor for ViewingSessionManager()
{
  return objc_opt_self();
}

uint64_t sub_1A5EF87D0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Session();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t LoggingEventProcessor.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t LoggingEventProcessor.init(logFormat:subsystem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  id v10;
  __int128 v12[2];
  char v13;
  __int128 v14;
  ValueMetadata *v15;
  _UNKNOWN **v16;

  v4 = v3;
  sub_1A5EC1C54(a1, (uint64_t)v12);
  if (v13)
  {
    if (v13 == 1)
    {
      sub_1A5EC1D18(v12, (uint64_t)&v14);
    }
    else
    {
      v15 = &type metadata for DefaultLoggingEventProcessorFormatter;
      v16 = &off_1E4FD31A8;
    }
  }
  else
  {
    v7 = *(_QWORD *)&v12[0];
    v15 = &type metadata for JSONLoggingEventProcessorFormatter;
    v16 = &off_1E4FD31B8;
    v8 = (_QWORD *)swift_allocObject();
    *(_QWORD *)&v14 = v8;
    v8[6] = &type metadata for DefaultLoggingEventProcessorFormatter;
    v8[7] = &off_1E4FD31A8;
    v8[2] = v7;
  }
  sub_1A5EC1D18(&v14, v4 + 16);
  if (a3)
  {
    sub_1A5EBE658();
    v9 = (id)sub_1A5F64550();
  }
  else
  {
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v9 = (id)qword_1ED1CE7B0;
  }
  v10 = v9;
  sub_1A5EC1BFC(a1);
  *(_QWORD *)(v4 + 56) = v10;
  return v4;
}

uint64_t sub_1A5EF89C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeartbeatEventService.Metadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5EF8A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HeartbeatEventService.Metadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5EF8A50(_QWORD *a1)
{
  return HeartbeatEventService.Metadata.encode(to:)(a1);
}

uint64_t type metadata accessor for HeartbeatEventService.Metadata()
{
  uint64_t result;

  result = qword_1ED1CB998;
  if (!qword_1ED1CB998)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t HeartbeatEventService.Metadata.init(flushDate:identifier:version:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  _QWORD *v15;

  v12 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  result = type metadata accessor for HeartbeatEventService.Metadata();
  v14 = (_QWORD *)(a6 + *(int *)(result + 20));
  *v14 = a2;
  v14[1] = a3;
  v15 = (_QWORD *)(a6 + *(int *)(result + 24));
  *v15 = a4;
  v15[1] = a5;
  return result;
}

uint64_t storeEnumTagSinglePayload for HeartbeatEventService.Metadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A5EF8B6C + 4 * byte_1A5F69D35[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A5EF8BA0 + 4 * byte_1A5F69D30[v4]))();
}

uint64_t sub_1A5EF8BA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5EF8BA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5EF8BB0);
  return result;
}

uint64_t sub_1A5EF8BBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5EF8BC4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A5EF8BC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5EF8BD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1A5EF8BE4()
{
  unint64_t result;

  result = qword_1ED1CBD28;
  if (!qword_1ED1CBD28)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F69E14, &type metadata for HeartbeatEventService.Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1CBD28);
  }
  return result;
}

unint64_t sub_1A5EF8C28()
{
  unint64_t result;

  result = qword_1ED1CBD20;
  if (!qword_1ED1CBD20)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F69E3C, &type metadata for HeartbeatEventService.Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1CBD20);
  }
  return result;
}

unint64_t sub_1A5EF8C6C()
{
  unint64_t result;

  result = qword_1ED1CBD18;
  if (!qword_1ED1CBD18)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F69ECC, &type metadata for HeartbeatEventService.Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1CBD18);
  }
  return result;
}

id sub_1A5EF8CB0()
{
  id result;

  result = sub_1A5EC1840();
  qword_1ED1CBCF0 = (uint64_t)result;
  return result;
}

unint64_t sub_1A5EF8CD0()
{
  unint64_t result;

  result = qword_1ED1CD6C0[0];
  if (!qword_1ED1CD6C0[0])
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for UploadBatchQueueKey, &type metadata for UploadBatchQueueKey);
    atomic_store(result, qword_1ED1CD6C0);
  }
  return result;
}

unint64_t sub_1A5EF8D14()
{
  unint64_t result;

  result = qword_1ED1CE0B8;
  if (!qword_1ED1CE0B8)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for UploadBatchQueueKey, &type metadata for UploadBatchQueueKey);
    atomic_store(result, (unint64_t *)&qword_1ED1CE0B8);
  }
  return result;
}

unint64_t sub_1A5EF8D5C()
{
  unint64_t result;

  result = qword_1ED1CB870;
  if (!qword_1ED1CB870)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F67B2C, &type metadata for SessionGroupManager.Key);
    atomic_store(result, (unint64_t *)&qword_1ED1CB870);
  }
  return result;
}

unint64_t sub_1A5EF8DA0()
{
  unint64_t result;

  result = qword_1ED1CB8D8;
  if (!qword_1ED1CB8D8)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F67B54, &type metadata for SessionGroupManager.Key);
    atomic_store(result, (unint64_t *)&qword_1ED1CB8D8);
  }
  return result;
}

id static BridgedSessionGroup.default.getter()
{
  if (qword_1ED1CC1A8 != -1)
    swift_once();
  return (id)qword_1ED1CC1A0;
}

unint64_t sub_1A5EF8E2C()
{
  unint64_t result;

  result = qword_1ED1CB8D0;
  if (!qword_1ED1CB8D0)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for DenylistDescriptor, &type metadata for DenylistDescriptor);
    atomic_store(result, (unint64_t *)&qword_1ED1CB8D0);
  }
  return result;
}

unint64_t sub_1A5EF8E70()
{
  unint64_t result;

  result = qword_1ED1CC9C8;
  if (!qword_1ED1CC9C8)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F6C760, &type metadata for BridgedDataEvent);
    atomic_store(result, (unint64_t *)&qword_1ED1CC9C8);
  }
  return result;
}

unint64_t sub_1A5EF8EB4()
{
  unint64_t result;

  result = qword_1ED1CC9C0;
  if (!qword_1ED1CC9C0)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F6C738, &type metadata for BridgedDataEvent);
    atomic_store(result, (unint64_t *)&qword_1ED1CC9C0);
  }
  return result;
}

unint64_t sub_1A5EF8EF8()
{
  unint64_t result;

  result = qword_1ED1CC9B8;
  if (!qword_1ED1CC9B8)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F6C710, &type metadata for BridgedDataEvent);
    atomic_store(result, (unint64_t *)&qword_1ED1CC9B8);
  }
  return result;
}

unint64_t sub_1A5EF8F3C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1A5EF8EB4();
  result = sub_1A5EF8EF8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

Swift::Void __swiftcall TrackingConsent.push()()
{
  sub_1A5EBFFE0((uint64_t)"Tracking consent pushed", MEMORY[0x1E0C82D28]);
}

Swift::Void __swiftcall TrackingConsent.pop()()
{
  sub_1A5EBFFE0((uint64_t)"Tracking consent popped", MEMORY[0x1E0C82D30]);
}

uint64_t storeEnumTagSinglePayload for TimestampJitter(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for TimestampJitter(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A5EF9000(uint64_t result)
{
  uint64_t v1;
  _BYTE *v2;
  char v3;
  double v4;

  v2 = (_BYTE *)result;
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v3 = 0;
LABEL_5:
    *v2 = v3;
    return result;
  }
  v4 = *(double *)(v1 + 8);
  if (*(double *)v1 <= v4)
  {
    result = sub_1A5EC0F08(result, *(double *)v1, v4);
    v3 = 4;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

Swift::tuple_granularity_AppAnalytics_TimestampGranularity_jitter_Double __swiftcall TimestampJitter.makeTimestampConfiguration()()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  char v3;
  double v4;
  double v5;
  Swift::tuple_granularity_AppAnalytics_TimestampGranularity_jitter_Double result;

  v2 = (_BYTE *)v0;
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v3 = 0;
    v4 = 0.0;
  }
  else
  {
    v4 = *(double *)v1;
    v5 = *(double *)(v1 + 8);
    if (*(double *)v1 > v5)
    {
      __break(1u);
      goto LABEL_7;
    }
    LOBYTE(v0) = sub_1A5EC0F08(v0, v4, v5);
    v3 = 4;
  }
  *v2 = v3;
LABEL_7:
  result.jitter = v4;
  result.granularity = v0;
  return result;
}

uint64_t SessionObserver.dispose(on:)()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t type metadata accessor for BridgedRawEvent()
{
  return objc_opt_self();
}

uint64_t sub_1A5EF90C4()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A5EF90E8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SessionManager.SessionState(319);
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

unint64_t sub_1A5EF91AC()
{
  unint64_t result;

  result = qword_1ED1CCF00;
  if (!qword_1ED1CCF00)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for SessionManager.Options, &type metadata for SessionManager.Options);
    atomic_store(result, (unint64_t *)&qword_1ED1CCF00);
  }
  return result;
}

unint64_t sub_1A5EF91F0()
{
  unint64_t result;

  result = qword_1ED1CCEF8;
  if (!qword_1ED1CCEF8)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for SessionManager.Options, &type metadata for SessionManager.Options);
    atomic_store(result, (unint64_t *)&qword_1ED1CCEF8);
  }
  return result;
}

void static SessionManager.Options.gracefulEventCreation.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static SessionManager.Options.gracefulNoSessionEventSubmission.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1A5EF924C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Session();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionSequence()
{
  return &type metadata for ActionSequence;
}

Swift::Bool __swiftcall ActionSequence.match(lastActions:)(Swift::OpaquePointer lastActions)
{
  uint64_t *v1;
  void *rawValue;
  unint64_t v3;
  uint64_t v4;
  Swift::Bool result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  void *v24;
  uint64_t v25;

  rawValue = lastActions._rawValue;
  v3 = *((_QWORD *)lastActions._rawValue + 2);
  if (!v3)
    return 0;
  v4 = *v1;
  if (*(_QWORD *)(v4 + 16) < v3)
    return 0;
  result = sub_1A5F37DE4(v3, v4);
  v9 = v8 >> 1;
  v10 = (v8 >> 1) - v7;
  if (__OFSUB__(v8 >> 1, v7))
    goto LABEL_19;
  if (v10)
  {
    v11 = v6;
    v12 = v7;
    v24 = rawValue;
    v25 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    result = sub_1A5EFD178(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0)
    {
LABEL_20:
      __break(1u);
      return result;
    }
    v13 = v25;
    if (v12 <= v9)
      v14 = v9;
    else
      v14 = v12;
    v15 = v14 - v12;
    v16 = (unsigned __int8 *)(v11 + 40 * v12 + 16);
    while (v15)
    {
      v17 = *((_QWORD *)v16 - 2);
      v18 = *((_QWORD *)v16 - 1);
      v19 = *v16;
      result = sub_1A5F0CDE4(v17, v18, *v16);
      v21 = *(_QWORD *)(v25 + 16);
      v20 = *(_QWORD *)(v25 + 24);
      if (v21 >= v20 >> 1)
        result = sub_1A5EFD178(v20 > 1, v21 + 1, 1);
      *(_QWORD *)(v25 + 16) = v21 + 1;
      v22 = v25 + 24 * v21;
      *(_QWORD *)(v22 + 32) = v17;
      *(_QWORD *)(v22 + 40) = v18;
      *(_BYTE *)(v22 + 48) = v19;
      --v15;
      v16 += 40;
      if (!--v10)
      {
        swift_unknownObjectRelease();
        rawValue = v24;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  v13 = MEMORY[0x1E0DEE9D8];
LABEL_17:
  v23 = sub_1A5F5D648(v13, (uint64_t)rawValue);
  swift_bridgeObjectRelease();
  return v23 & 1;
}

uint64_t sub_1A5EF9480()
{
  sub_1A5EBBCFC();
  return swift_deallocClassInstance();
}

uint64_t sub_1A5EF94A4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63F98();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for UploadService(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UploadService);
}

uint64_t sub_1A5EF954C()
{
  sub_1A5EBEDE0();
  return swift_deallocClassInstance();
}

void sub_1A5EF9570()
{
  unint64_t v0;

  sub_1A5ECD49C(319, (unint64_t *)&qword_1ED1CFBE8, (uint64_t (*)(uint64_t))type metadata accessor for Session, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1A5EF9640(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_1A5EF3B58();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1A5F63DD0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

uint64_t sub_1A5EF96A4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SequenceEntry.Kind(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A5EF9718()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for TimedData();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for EventData();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1A5EF97A0()
{
  uint64_t result;

  type metadata accessor for CrashDetector();
  swift_allocObject();
  result = sub_1A5EC9078();
  qword_1ED1CDCB8 = result;
  return result;
}

uint64_t dispatch thunk of FlushManager.flush(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

void sub_1A5EF97E4(void (*a1)(void), uint64_t a2)
{
  sub_1A5EC8138(0, 0, a1, a2);
}

uint64_t sub_1A5EF97F8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_1A5F63DD0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A5EBF0CC(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), *(uint64_t (**)(void))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void sub_1A5EF984C()
{
  uint64_t v0;

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

void sub_1A5EF9854()
{
  uint64_t v0;

  sub_1A5EC749C(*(_QWORD **)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), *(NSObject **)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1A5EF9864@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5EC465C();
  *a1 = result;
  return result;
}

uint64_t dispatch thunk of FlushManager.repairThenFlush(repair:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

char *FlushManager.__allocating_init(appSessionManager:client:endpoint:contentType:config:clientFactory:)(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;

  v13 = *(_QWORD *)(a6 + 24);
  v14 = *(_QWORD *)(a6 + 32);
  v15 = __swift_mutable_project_boxed_opaque_existential_1(a6, v13);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v19 + 16))(v18, v16);
  v20 = sub_1A5F0A124(a1, a2, a3, a4, a5, (uint64_t)v18, v6, v13, v14);
  __swift_destroy_boxed_opaque_existential_0(a6);
  return v20;
}

uint64_t sub_1A5EF998C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5EBFE28(a1, a2, a3, a4);
}

uint64_t sub_1A5EF99A0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for HeartbeatEventService.Metadata();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for RequestData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RequestData);
}

void sub_1A5EF9A20()
{
  JUMPOUT(0x1A85B8C3CLL);
}

void sub_1A5EF9A30()
{
  JUMPOUT(0x1A85B8C3CLL);
}

uint64_t sub_1A5EF9A40()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for RequestData.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RequestData.CodingKeys);
}

void sub_1A5EF9A54()
{
  sub_1A5EC051C();
}

uint64_t sub_1A5EF9A78()
{
  return swift_allocateGenericValueMetadata();
}

void type metadata accessor for RequestData.EventData()
{
  JUMPOUT(0x1A85B8BDCLL);
}

uint64_t sub_1A5EF9A8C()
{
  return 0x73746E657665;
}

void sub_1A5EF9AA0()
{
  JUMPOUT(0x1A85B8C3CLL);
}

void sub_1A5EF9AB0()
{
  JUMPOUT(0x1A85B8C3CLL);
}

uint64_t sub_1A5EF9AC0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5EF9B00 + 4 * byte_1A5F69D52[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5EF9B20 + 4 * byte_1A5F69D57[v4]))();
}

_BYTE *sub_1A5EF9B00(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5EF9B20(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5EF9B28(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5EF9B30(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5EF9B38(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5EF9B40(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t getEnumTagSinglePayload for ExternalAnalyticsUploader.Errors(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

void type metadata accessor for RequestData.EventData.CodingKeys()
{
  JUMPOUT(0x1A85B8BDCLL);
}

void sub_1A5EF9BA8()
{
  sub_1A5EBEEC0();
}

void type metadata accessor for RequestData.EventData.Event()
{
  JUMPOUT(0x1A85B8BDCLL);
}

void sub_1A5EF9BC8()
{
  JUMPOUT(0x1A85B8C3CLL);
}

void sub_1A5EF9BD8()
{
  JUMPOUT(0x1A85B8C3CLL);
}

void type metadata accessor for RequestData.EventData.Event.CodingKeys()
{
  JUMPOUT(0x1A85B8BDCLL);
}

unint64_t sub_1A5EF9BFC()
{
  unint64_t result;

  result = qword_1ED1CCEF0;
  if (!qword_1ED1CCEF0)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for FlushEvents, &type metadata for FlushEvents);
    atomic_store(result, (unint64_t *)&qword_1ED1CCEF0);
  }
  return result;
}

unint64_t sub_1A5EF9C40()
{
  unint64_t result;

  result = qword_1ED1CCEE8;
  if (!qword_1ED1CCEE8)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for FlushEvents, &type metadata for FlushEvents);
    atomic_store(result, (unint64_t *)&qword_1ED1CCEE8);
  }
  return result;
}

unint64_t sub_1A5EF9C84@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  unint64_t v4;
  void *ObjCClassFromMetadata;
  char v6;
  unint64_t v7;
  id v8;

  v4 = a2 >> 62;
  if (!(a2 >> 62))
    goto LABEL_10;
  if ((_DWORD)v4 == 1)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    result = (unint64_t)objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_timestampGranularity);
    if ((result & 1) == 0)
    {
      LOBYTE(v4) = 0;
      goto LABEL_10;
    }
    result = (unint64_t)objc_msgSend(ObjCClassFromMetadata, sel_timestampGranularity);
    if (result < 5)
    {
      v6 = 8 * result;
LABEL_8:
      v4 = 0x302040100uLL >> v6;
LABEL_10:
      *a3 = v4;
      return result;
    }
  }
  else
  {
    v7 = *(_QWORD *)(result + OBJC_IVAR___AARawEvent_timestampGranularity);
    if (v7 <= 4)
    {
      v6 = 8 * v7;
      goto LABEL_8;
    }
    v8 = (id)result;
  }
  result = sub_1A5F648A4();
  __break(1u);
  return result;
}

uint64_t sub_1A5EF9D64(uint64_t a1)
{
  uint64_t result;

  result = 0xD000000000000034;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0xD000000000000039;
      break;
    case 2:
    case 4:
      result = 0xD000000000000038;
      break;
    case 3:
      result = 0xD00000000000003DLL;
      break;
    case 5:
      result = 0xD000000000000044;
      break;
    case 6:
      result = 0xD000000000000036;
      break;
    case 7:
      result = 0xD00000000000003ALL;
      break;
    case 8:
      result = 0xD000000000000039;
      break;
    default:
      result = sub_1A5F648A4();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1A5EF9E64()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Batch();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1A5EF9F10()
{
  unint64_t v0;

  sub_1A5EF7E00();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1A5EF9F8C()
{
  unint64_t v0;

  sub_1A5EF7E00();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1A5EF9FF4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SummaryEventConfiguration(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for AppSessionManager()
{
  uint64_t result;

  result = qword_1ED1CD068;
  if (!qword_1ED1CD068)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5EFA0D8()
{
  uint64_t v0;

  return sub_1A5EC58B4(*(_BYTE *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_1A5EFA0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5EFA128();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1A5EFA128()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CE6B0)
  {
    sub_1A5F63DD0();
    v0 = sub_1A5F64568();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CE6B0);
  }
}

Class initAMSBag()
{
  Class result;

  if (LoadAppleMediaServices_loadPredicate != -1)
    dispatch_once(&LoadAppleMediaServices_loadPredicate, &__block_literal_global);
  result = objc_getClass("AMSBag");
  classAMSBag = (uint64_t)result;
  getAMSBagClass[0] = (uint64_t (*)())AMSBagFunction;
  return result;
}

id AMSBagFunction()
{
  return (id)classAMSBag;
}

Class initAMSMutableBagKeySet()
{
  Class result;

  if (LoadAppleMediaServices_loadPredicate != -1)
    dispatch_once(&LoadAppleMediaServices_loadPredicate, &__block_literal_global);
  result = objc_getClass("AMSMutableBagKeySet");
  classAMSMutableBagKeySet = (uint64_t)result;
  getAMSMutableBagKeySetClass[0] = (uint64_t (*)())AMSMutableBagKeySetFunction;
  return result;
}

id AMSMutableBagKeySetFunction()
{
  return (id)classAMSMutableBagKeySet;
}

Class initAMSMescal()
{
  Class result;

  if (LoadAppleMediaServices_loadPredicate != -1)
    dispatch_once(&LoadAppleMediaServices_loadPredicate, &__block_literal_global);
  result = objc_getClass("AMSMescal");
  classAMSMescal = (uint64_t)result;
  getAMSMescalClass = (uint64_t (*)())AMSMescalFunction;
  return result;
}

id AMSMescalFunction()
{
  return (id)classAMSMescal;
}

uint64_t sub_1A5EFA4D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for SummaryEventConfiguration(0);
  __swift_allocate_value_buffer(v0, qword_1EE80C7C8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE80C7C8);
  v2 = v1 + *(int *)(v0 + 20);
  v3 = sub_1A5F63DD0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 1;
  return result;
}

uint64_t static SummaryEventConfiguration.disabled.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5EFA75C(&qword_1EE80C7C0, (uint64_t)qword_1EE80C7C8, a1);
}

uint64_t static SummaryEventConfiguration.defaultCadence.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5EFA75C(&qword_1ED1CD310, (uint64_t)qword_1ED1CD2F8, a1);
}

uint64_t sub_1A5EFA58C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v0 = type metadata accessor for SummaryEventConfiguration(0);
  __swift_allocate_value_buffer(v0, qword_1EE80C7E8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE80C7E8);
  if (qword_1EE80C840 != -1)
    swift_once();
  v2 = qword_1EE80C848;
  v3 = byte_1EE80C850;
  v4 = v1 + *(int *)(v0 + 20);
  v5 = sub_1A5F63DD0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)v1 = v2;
  *(_BYTE *)(v1 + 8) = v3;
  return result;
}

uint64_t static SummaryEventConfiguration.dailyCadence.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5EFA75C(&qword_1EE80C7E0, (uint64_t)qword_1EE80C7E8, a1);
}

uint64_t sub_1A5EFA660(uint64_t a1)
{
  return sub_1A5EBE8B0(a1, qword_1EE80C808);
}

uint64_t static SummaryEventConfiguration.weeklyCadence.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5EFA75C(&qword_1ED1CCD60, (uint64_t)qword_1EE80C808, a1);
}

uint64_t sub_1A5EFA688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v0 = type metadata accessor for SummaryEventConfiguration(0);
  __swift_allocate_value_buffer(v0, qword_1EE80C828);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE80C828);
  if (qword_1EE80C860 != -1)
    swift_once();
  v2 = qword_1EE80C868;
  v3 = byte_1EE80C870;
  v4 = v1 + *(int *)(v0 + 20);
  v5 = sub_1A5F63DD0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)v1 = v2;
  *(_BYTE *)(v1 + 8) = v3;
  return result;
}

uint64_t static SummaryEventConfiguration.monthlyCadence.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5EFA75C(&qword_1EE80C820, (uint64_t)qword_1EE80C828, a1);
}

uint64_t sub_1A5EFA75C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = type metadata accessor for SummaryEventConfiguration(0);
  v6 = __swift_project_value_buffer(v5, a2);
  return sub_1A5ED7E14(v6, a3, type metadata accessor for SummaryEventConfiguration);
}

uint64_t static SummaryEventConfiguration.custom(timeInterval:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = a1 + *(int *)(type metadata accessor for SummaryEventConfiguration(0) + 20);
  v5 = sub_1A5F63DD0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(double *)a1 = a2;
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

void SummaryEventConfiguration.flushCadence.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t SummaryEventConfiguration.storageURLOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SummaryEventConfiguration(0);
  return sub_1A5ED7E14(v1 + *(int *)(v3 + 20), a1, type metadata accessor for SummaryEventConfiguration.StorageURLOptions);
}

_QWORD *initializeBufferWithCopyOfBuffer for SummaryEventConfiguration(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v5 = *(int *)(a3 + 20);
    v6 = (void *)(a1 + v5);
    v7 = (char *)a2 + v5;
    v8 = sub_1A5F63DD0();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      v10 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t assignWithCopy for SummaryEventConfiguration(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void *, uint64_t, uint64_t);
  int v11;
  int v12;
  uint64_t v13;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (void *)(a1 + v5);
  v7 = (char *)a2 + v5;
  v8 = sub_1A5F63DD0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v6, 1, v8);
  v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 24))(v6, v7, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v6, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v13 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  return a1;
}

uint64_t initializeWithTake for SummaryEventConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1A5F63DD0();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for SummaryEventConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = (void *)(a1 + v4);
  v6 = (void *)(a2 + v4);
  v7 = sub_1A5F63DD0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v12 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for SummaryEventConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5EFAC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for SummaryEventConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5EFAC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SummaryEventConfiguration.FlushCadence(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SummaryEventConfiguration.FlushCadence(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1A5EFAD38(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A5EFAD54(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SummaryEventConfiguration.FlushCadence()
{
  return &type metadata for SummaryEventConfiguration.FlushCadence;
}

uint64_t *initializeBufferWithCopyOfBuffer for SummaryEventConfiguration.StorageURLOptions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1A5F63DD0();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

void *assignWithCopy for SummaryEventConfiguration.StorageURLOptions(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1A5F63DD0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for SummaryEventConfiguration.StorageURLOptions(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A5F63DD0();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for SummaryEventConfiguration.StorageURLOptions(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1A5F63DD0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1A5EFB0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1A5F63DD0();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SummaryEventConfiguration.StorageURLOptions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5EFB128(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1A5F63DD0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1A5EFB178(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A5F63DD0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1A5EFB1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A5F63DD0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

void type metadata accessor for WritingOptions(uint64_t a1)
{
  sub_1A5EF79E8(a1, &qword_1EE80C900);
}

void type metadata accessor for os_unfair_lock_options_t(uint64_t a1)
{
  sub_1A5EF79E8(a1, (unint64_t *)&unk_1EE80C908);
}

uint64_t sub_1A5EFB218()
{
  uint64_t result;

  if (qword_1EE80C878 != -1)
    result = swift_once();
  qword_1EE80C848 = qword_1EE80C880;
  byte_1EE80C850 = 0;
  return result;
}

uint64_t sub_1A5EFB268()
{
  uint64_t result;

  if (qword_1EE80C888 != -1)
    result = swift_once();
  qword_1EE80C868 = qword_1EE80C890;
  byte_1EE80C870 = 0;
  return result;
}

void sub_1A5EFB2B8()
{
  qword_1EE80C880 = 0x40F5180000000000;
}

void sub_1A5EFB2CC()
{
  qword_1EE80C890 = 0x4143C68000000000;
}

_QWORD *sub_1A5EFB2E0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1A5EFB2F4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_1A5EFB308@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_1A5EFB31C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1A5EFB348@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1A5EFB36C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1A5EFB380(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_1A5EFB394(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1A5EFB3A8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1A5EFB3BC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1A5EFB3D0(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1A5EFB3E4(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1A5EFB3F8()
{
  _QWORD *v0;

  return *v0 == 0;
}

_QWORD *sub_1A5EFB408(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_1A5EFB41C(uint64_t a1, uint64_t a2)
{
  return sub_1A5EFB578(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1A5EFB43C(uint64_t a1, uint64_t a2)
{
  return sub_1A5EFB578(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1A5EFB448(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1A5F64118();
  *a2 = 0;
  return result;
}

uint64_t sub_1A5EFB4BC(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1A5F64124();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1A5EFB538@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1A5F64130();
  v2 = sub_1A5F6410C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A5EFB578(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1A5F64130();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A5EFB5B4()
{
  sub_1A5F64130();
  sub_1A5F6419C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5EFB5F4()
{
  uint64_t v0;

  sub_1A5F64130();
  sub_1A5F64910();
  sub_1A5F6419C();
  v0 = sub_1A5F64928();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_1A5EFB664(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A5EFB678@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A5F3BC00();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

_QWORD *sub_1A5EFB6B8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A5EFB6C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1A5F64130();
  v2 = v1;
  if (v0 == sub_1A5F64130() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1A5F64880();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

_QWORD *sub_1A5EFB74C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1A5EFB75C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1A5EFB768()
{
  return sub_1A5ECC4D8(&qword_1EE80C918, (uint64_t (*)(uint64_t))type metadata accessor for WritingOptions, (uint64_t)&unk_1A5F664B0);
}

uint64_t sub_1A5EFB794()
{
  return sub_1A5ECC4D8(&qword_1EE80C920, (uint64_t (*)(uint64_t))type metadata accessor for WritingOptions, (uint64_t)&unk_1A5F6647C);
}

uint64_t sub_1A5EFB7C0()
{
  return sub_1A5ECC4D8(&qword_1EE80C928, (uint64_t (*)(uint64_t))type metadata accessor for WritingOptions, (uint64_t)&unk_1A5F664DC);
}

uint64_t sub_1A5EFB7EC()
{
  return sub_1A5ECC4D8(&qword_1EE80C930, (uint64_t (*)(uint64_t))type metadata accessor for WritingOptions, (uint64_t)&unk_1A5F66518);
}

uint64_t sub_1A5EFB81C()
{
  sub_1A5ECC4D8((unint64_t *)&qword_1EE80C978, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1A5F668A0);
  sub_1A5ECC4D8((unint64_t *)&unk_1EE80C980, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1A5F667F4);
  return sub_1A5F6476C();
}

uint64_t sub_1A5EFB8A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A5F6410C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A5EFB8E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1A5F64130();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A5EFB90C()
{
  sub_1A5ECC4D8((unint64_t *)&qword_1ED1CC358, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1A5F668E4);
  sub_1A5ECC4D8((unint64_t *)&unk_1EE80C990, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1A5F666E0);
  return sub_1A5F6476C();
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_1A5EF79E8(a1, (unint64_t *)&unk_1EE80C938);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_1A5EF79E8(a1, &qword_1ED1CF8A0);
}

uint64_t sub_1A5EFB9B8()
{
  return sub_1A5ECC4D8(&qword_1EE80C948, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1A5F666A4);
}

uint64_t sub_1A5EFB9E4()
{
  return sub_1A5ECC4D8(&qword_1EE80C950, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1A5F66678);
}

uint64_t sub_1A5EFBA10()
{
  return sub_1A5ECC4D8(&qword_1EE80C958, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1A5F667B8);
}

uint64_t sub_1A5EFBA3C()
{
  return sub_1A5ECC4D8(&qword_1EE80C960, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1A5F6678C);
}

uint64_t sub_1A5EFBA68()
{
  return sub_1A5ECC4D8((unint64_t *)&unk_1EE80C968, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1A5F66828);
}

uint64_t sub_1A5EFBA94()
{
  return sub_1A5ECC4D8(&qword_1ED1CE280, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1A5F66714);
}

uint64_t sub_1A5EFBAD4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t ProcessorManager.deinit()
{
  uint64_t v0;

  sub_1A5EFBB34(v0 + 16);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A5EFBB34(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t ProcessorManager.__deallocating_deinit()
{
  uint64_t v0;

  sub_1A5EFBB34(v0 + 16);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ProcessorManager.remove(eventProcessor:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v2 + 32);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  swift_retain();
  swift_unknownObjectRetain();
  sub_1A5EEC784(v5, (uint64_t)sub_1A5EFC0DC, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_1A5EFBC18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  swift_unknownObjectRetain();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1A5EFC138(v4, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 48) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5EFBCB0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  swift_beginAccess();
  *a2 = *(_QWORD *)(a1 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A5EFBD08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t ObjectType;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;

  v3 = sub_1A5F64070();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(*(_QWORD *)(v1 + 32) + OBJC_IVAR___AAAccessQueue_queue);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x1E0DEF740], v3, v5);
  v9 = v8;
  LOBYTE(v8) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  if ((v8 & 1) != 0)
  {
    result = swift_beginAccess();
    v11 = *(_QWORD *)(v1 + 48);
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain();
      v13 = (uint64_t *)(v11 + 40);
      do
      {
        v14 = *v13;
        ObjectType = swift_getObjectType();
        v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
        swift_unknownObjectRetain();
        v16(a1, ObjectType, v14);
        swift_unknownObjectRelease();
        v13 += 2;
        --v12;
      }
      while (v12);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5EFBE48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t ObjectType;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;

  v3 = sub_1A5F64070();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(*(_QWORD *)(v1 + 32) + OBJC_IVAR___AAAccessQueue_queue);
  *v7 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x1E0DEF740], v3, v5);
  v9 = v8;
  LOBYTE(v8) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v7, v3);
  if ((v8 & 1) != 0)
  {
    result = swift_beginAccess();
    v11 = *(_QWORD *)(v1 + 48);
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain();
      v13 = (uint64_t *)(v11 + 40);
      do
      {
        v14 = *v13;
        ObjectType = swift_getObjectType();
        v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24);
        swift_unknownObjectRetain();
        v16(a1, ObjectType, v14);
        swift_unknownObjectRelease();
        v13 += 2;
        --v12;
      }
      while (v12);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5EFBF88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;

  v5 = sub_1A5F64070();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(*(_QWORD *)(v2 + 32) + OBJC_IVAR___AAAccessQueue_queue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x1E0DEF740], v5, v7);
  v11 = v10;
  LOBYTE(v10) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
  if ((v10 & 1) != 0)
  {
    result = swift_beginAccess();
    v13 = *(_QWORD *)(v2 + 48);
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      v15 = (uint64_t *)(v13 + 40);
      do
      {
        v16 = *v15;
        ObjectType = swift_getObjectType();
        v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
        swift_unknownObjectRetain();
        v18(a1, a2, ObjectType, v16);
        swift_unknownObjectRelease();
        v15 += 2;
        --v14;
      }
      while (v14);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5EFC0DC()
{
  uint64_t v0;

  return sub_1A5EFBC18(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t method lookup function for ProcessorManager()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for ProcessorManager.DeferredBackgroundResuming()
{
  return objc_opt_self();
}

uint64_t sub_1A5EFC114()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A5EFC138(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = 0;
  v4 = *(_QWORD *)(result + 16);
  v5 = result + 32;
  v6 = MEMORY[0x1E0DEE9D8];
LABEL_2:
  if (v3 <= v4)
    v7 = v4;
  else
    v7 = v3;
  v8 = v7 + 1;
  v9 = (uint64_t *)(v5 + 16 * v3);
  while (1)
  {
    if (v4 == v3)
      return v6;
    if (v8 == ++v3)
      break;
    v10 = v9 + 2;
    v11 = *v9;
    v9 += 2;
    if (v11 != a2)
    {
      v15 = *(v10 - 1);
      swift_unknownObjectRetain();
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_1A5EFD0A4(0, *(_QWORD *)(v6 + 16) + 1, 1);
      v13 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      if (v13 >= v12 >> 1)
        result = sub_1A5EFD0A4(v12 > 1, v13 + 1, 1);
      *(_QWORD *)(v6 + 16) = v13 + 1;
      v14 = v6 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_QWORD *)(v14 + 40) = v15;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5EFC25C()
{
  return 1;
}

uint64_t sub_1A5EFC264()
{
  sub_1A5F64910();
  sub_1A5F6491C();
  return sub_1A5F64928();
}

uint64_t sub_1A5EFC2A4()
{
  return sub_1A5F6491C();
}

uint64_t sub_1A5EFC2C8()
{
  sub_1A5F64910();
  sub_1A5F6491C();
  return sub_1A5F64928();
}

uint64_t ExternalAnalyticsUploader.__allocating_init()()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;

  v0 = swift_allocObject();
  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
  if (qword_1ED1CC878 != -1)
    swift_once();
  if (qword_1EE80D738)
  {
    v2 = (void *)sub_1A5F6410C();
    objc_msgSend(v1, sel_set_sourceApplicationBundleIdentifier_, v2);

  }
  v3 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, v1, 0, 0);

  *(_QWORD *)(v0 + 16) = v3;
  return v0;
}

uint64_t ExternalAnalyticsUploader.init()()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
  if (qword_1ED1CC878 != -1)
    swift_once();
  if (qword_1EE80D738)
  {
    v2 = (void *)sub_1A5F6410C();
    objc_msgSend(v1, sel_set_sourceApplicationBundleIdentifier_, v2);

  }
  v3 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_delegate_delegateQueue_, v1, 0, 0);

  *(_QWORD *)(v0 + 16) = v3;
  return v0;
}

uint64_t ExternalAnalyticsUploader.submitExternalAnalytics(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  _QWORD aBlock[6];

  v7 = sub_1A5F63DD0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A5F63B90();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)aBlock - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v10, a1, v7, v13);
  sub_1A5F63B60();
  v16 = *(void **)(v3 + 16);
  v17 = (void *)sub_1A5F63B3C();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  aBlock[4] = sub_1A5EFC7F0;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A5EBBD68;
  aBlock[3] = &block_descriptor_0;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v20 = objc_msgSend(v16, sel_dataTaskWithRequest_completionHandler_, v17, v19);
  _Block_release(v19);

  objc_msgSend(v20, sel_resume);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

void sub_1A5EFC69C(int a1, int a2, void *a3, id a4, void (*a5)(uint64_t *))
{
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  char v12;

  if (a3 && (objc_opt_self(), (v8 = swift_dynamicCastObjCClass()) != 0))
  {
    v11 = v8;
    v12 = 0;
    v9 = a3;
    a5(&v11);

  }
  else
  {
    if (a4)
    {
      v11 = (uint64_t)a4;
      v12 = 1;
      v10 = a4;
    }
    else
    {
      sub_1A5EFC834();
      a4 = (id)swift_allocError();
      v11 = (uint64_t)a4;
      v12 = 1;
    }
    a5(&v11);

  }
}

uint64_t ExternalAnalyticsUploader.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ExternalAnalyticsUploader.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1A5EFC7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ExternalAnalyticsUploader.submitExternalAnalytics(with:completion:)(a1, a2, a3);
}

uint64_t sub_1A5EFC7CC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A5EFC7F0(int a1, int a2, void *a3, void *a4)
{
  uint64_t v4;

  sub_1A5EFC69C(a1, a2, a3, a4, *(void (**)(uint64_t *))(v4 + 16));
}

uint64_t dispatch thunk of ExternalAnalyticsUploaderType.submitExternalAnalytics(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for ExternalAnalyticsUploader()
{
  return objc_opt_self();
}

uint64_t method lookup function for ExternalAnalyticsUploader()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExternalAnalyticsUploader.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t sub_1A5EFC834()
{
  unint64_t result;

  result = qword_1EE80CB08;
  if (!qword_1EE80CB08)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F66AC0, &type metadata for ExternalAnalyticsUploader.Errors);
    atomic_store(result, (unint64_t *)&qword_1EE80CB08);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsUploader.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5EFC8B8 + 4 * asc_1A5F669C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5EFC8D8 + 4 * byte_1A5F669C5[v4]))();
}

_BYTE *sub_1A5EFC8B8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5EFC8D8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5EFC8E0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5EFC8E8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5EFC8F0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5EFC8F8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsUploader.Errors()
{
  return &type metadata for ExternalAnalyticsUploader.Errors;
}

unint64_t sub_1A5EFC918()
{
  unint64_t result;

  result = qword_1EE80CB10;
  if (!qword_1EE80CB10)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F66A98, &type metadata for ExternalAnalyticsUploader.Errors);
    atomic_store(result, (unint64_t *)&qword_1EE80CB10);
  }
  return result;
}

unint64_t BridgedSessionKind.init(rawValue:)(unint64_t a1)
{
  return sub_1A5EFCD88(a1);
}

uint64_t sub_1A5EFC978()
{
  sub_1A5F64910();
  sub_1A5F6491C();
  return sub_1A5F64928();
}

uint64_t sub_1A5EFC9BC()
{
  return sub_1A5F6491C();
}

uint64_t sub_1A5EFC9E4()
{
  sub_1A5F64910();
  sub_1A5F6491C();
  return sub_1A5F64928();
}

unint64_t sub_1A5EFCA24@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1A5EFCD88(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t BridgedSession.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AASession_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedSession.kind.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___AASession_kind);
}

uint64_t BridgedSession.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AASession_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedSession.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___AASession_startDate;
  v4 = sub_1A5F63F08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BridgedSession.sessionData.getter()
{
  return swift_bridgeObjectRetain();
}

id BridgedSession.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BridgedSession.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BridgedSession.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedSession();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1A5EFCD88(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

uint64_t type metadata accessor for BridgedSession()
{
  uint64_t result;

  result = qword_1EE80CB60;
  if (!qword_1EE80CB60)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1A5EFCDD8()
{
  unint64_t result;

  result = qword_1EE80CB30;
  if (!qword_1EE80CB30)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for BridgedSessionKind, &type metadata for BridgedSessionKind);
    atomic_store(result, (unint64_t *)&qword_1EE80CB30);
  }
  return result;
}

ValueMetadata *type metadata accessor for BridgedSessionKind()
{
  return &type metadata for BridgedSessionKind;
}

uint64_t sub_1A5EFCE2C()
{
  return type metadata accessor for BridgedSession();
}

uint64_t sub_1A5EFCE34()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63F08();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BridgedSession()
{
  return swift_lookUpClassMethod();
}

uint64_t Batch.sessionData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Batch.events.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Batch.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Batch.userAgent.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Batch.sessionStartDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Batch() + 40);
  return sub_1A5EE229C(v3, a1);
}

uint64_t Batch.sessionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Batch() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Batch.sessionCrashDetected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Batch() + 48));
}

uint64_t Batch.flushDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Batch() + 52);
  return sub_1A5EE229C(v3, a1);
}

uint64_t static Batch.version.getter()
{
  return 0x312E312E30;
}

uint64_t Batch.version.getter()
{
  return 0x312E312E30;
}

uint64_t sub_1A5EFD028()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1A5EFD054()
{
  return Batch.toJSONObject()();
}

unint64_t sub_1A5EFD068()
{
  unint64_t result;

  result = qword_1ED1CBE18;
  if (!qword_1ED1CBE18)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1CBE18);
  }
  return result;
}

uint64_t sub_1A5EFD0A4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A5EFD194(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A5EFD0C0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A5EFD32C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A5EFD0DC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A5EFD4C4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A5EFD0F8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A5EFD660(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A5EFD114(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A5EDE674(a1, a2, a3, (_QWORD *)*v3, &qword_1ED1CE1E0, type metadata accessor for SequenceEntry);
  *v3 = result;
  return result;
}

uint64_t sub_1A5EFD140(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A5EFD7F8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A5EFD15C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A5EFD990(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A5EFD178(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A5EFDB24(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A5EFD194(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1A5ECD49C(0, &qword_1ED1CFBF0, (uint64_t (*)(uint64_t))sub_1A5EF48A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1A5EF48A4();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5EFD32C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1A5EDCBFC(0, (unint64_t *)&qword_1ED1CB880, (uint64_t)&type metadata for DenylistDescriptor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5EFD4C4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1A5EFE764();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_1A5EDCBFC(0, (unint64_t *)&qword_1ED1CF848, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5EFD660(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1A5EDCBFC(0, &qword_1ED1CC448, (uint64_t)&type metadata for TrackerError.FoundData, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5EFD7F8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1A5EDCBFC(0, &qword_1EE80CB78, (uint64_t)&type metadata for SummaryEventDataItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5EFD990(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1A5EDCBFC(0, &qword_1ED1CB710, (uint64_t)&type metadata for Action.Entry, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5EFDB24(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1A5EDCBFC(0, &qword_1ED1CB718, (uint64_t)&type metadata for Action, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 24 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Batch(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  unsigned int (*v25)(const void *, uint64_t, uint64_t);
  uint64_t v26;
  void *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v8;
    v9 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    v10 = a3[10];
    __dst = (void *)(a1 + v10);
    v11 = (char *)a2 + v10;
    *(_QWORD *)(a1 + 64) = a2[8];
    v12 = sub_1A5F63F08();
    v26 = *(_QWORD *)(v12 - 8);
    v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25(v11, 1, v12))
    {
      sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(__dst, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v12);
    }
    v14 = a3[11];
    v15 = a3[12];
    v16 = (_QWORD *)(v7 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v19 = *v17;
    v18 = v17[1];
    LOBYTE(v17) = *((_BYTE *)a2 + v15);
    *v16 = v19;
    v16[1] = v18;
    *(_BYTE *)(v7 + v15) = (_BYTE)v17;
    v20 = a3[13];
    v21 = (void *)(v7 + v20);
    v22 = (char *)a2 + v20;
    swift_bridgeObjectRetain();
    if (v25(v22, 1, v12))
    {
      sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v21, v22, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v21, 0, 1, v12);
    }
  }
  return v7;
}

_QWORD *assignWithCopy for Batch(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[10];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A5F63F08();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[11];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  v18 = a3[13];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = v11((char *)a1 + v18, 1, v9);
  v22 = v11(v20, 1, v9);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v19, v20, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for Batch(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = a3[10];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1A5F63F08();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[13];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  if (v12(v17, 1, v10))
  {
    sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v16, v17, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for Batch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  int v25;
  int v26;
  uint64_t v27;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  v8 = a3[10];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_1A5F63F08();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = a3[11];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v23 = (void *)(a1 + v22);
  v24 = (void *)(a2 + v22);
  v25 = v13((void *)(a1 + v22), 1, v11);
  v26 = v13(v24, 1, v11);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v23, v24, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v23, v11);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v23, v24, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v23, 0, 1, v11);
  return a1;
}

uint64_t sub_1A5EFE590(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 40)], a2, v8);
  }
}

char *sub_1A5EFE624(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 40)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A5EFE6B0(uint64_t a1)
{
  uint64_t v2;

  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A5EFE704()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CB8E0)
  {
    sub_1A5EF8DA0();
    v0 = sub_1A5F64754();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CB8E0);
  }
}

void sub_1A5EFE764()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CCE18)
  {
    sub_1A5EDCBFC(255, (unint64_t *)&qword_1ED1CF848, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v0 = sub_1A5F64850();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CCE18);
  }
}

void sub_1A5EFE7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;

  v5 = *(void **)(v4 + 16);
  v6 = type metadata accessor for ProcessEvent(0, a2, a3, a4);
  v7 = sub_1A5F5F514(v6, (uint64_t)&protocol witness table for ProcessEvent<A>);
  objc_msgSend(v5, sel_processEvent_, v7);

}

uint64_t sub_1A5EFE838()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BridgedEventProcessor()
{
  return objc_opt_self();
}

id sub_1A5EFE880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5EFE898(a1, a2, a3, (SEL *)&selRef_didEnterGroup_);
}

id sub_1A5EFE88C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5EFE898(a1, a2, a3, (SEL *)&selRef_didLeaveGroup_);
}

id sub_1A5EFE898(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v4;
  void *v7;
  id result;

  v7 = *(void **)(v4 + 16);
  result = objc_msgSend(v7, sel_respondsToSelector_, *a4);
  if ((result & 1) != 0)
    return objc_msgSend(v7, *a4, a1);
  return result;
}

uint64_t sub_1A5EFE8F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5EFE910(a1, a2, a3, (SEL *)&selRef_didStartSession_);
}

uint64_t sub_1A5EFE904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5EFE910(a1, a2, a3, (SEL *)&selRef_didUpdateSession_);
}

uint64_t sub_1A5EFE910(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v4;
  void *v6;
  uint64_t result;
  id v8;

  v6 = *(void **)(v4 + 16);
  result = (uint64_t)objc_msgSend(v6, sel_respondsToSelector_, *a4);
  if ((result & 1) != 0)
  {
    swift_unknownObjectRetain();
    v8 = sub_1A5F2F390();
    objc_msgSend(v6, *a4, v8);

    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1A5EFE990()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + 16);
  if ((objc_msgSend(v1, sel_respondsToSelector_, sel_didEndSession_endDate_) & 1) != 0)
  {
    swift_unknownObjectRetain();
    v2 = sub_1A5F2F390();
    v3 = (id)sub_1A5F63EA8();
    objc_msgSend(v1, sel_didEndSession_endDate_, v2, v3);

    swift_unknownObjectRelease();
  }
}

uint64_t sub_1A5EFEA44()
{
  return swift_unknownObjectRetain();
}

ValueMetadata *type metadata accessor for BridgedEvent()
{
  return &type metadata for BridgedEvent;
}

uint64_t DenylistDescriptor.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  return swift_bridgeObjectRelease();
}

uint64_t DenylistDescriptor.hashValue.getter()
{
  sub_1A5F64910();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  return sub_1A5F64928();
}

uint64_t sub_1A5EFEBB0()
{
  sub_1A5F64910();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  return sub_1A5F64928();
}

uint64_t sub_1A5EFEC60()
{
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  return swift_bridgeObjectRelease();
}

uint64_t DenylistDescriptor.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v6 = v0[4];
  v5 = v0[5];
  sub_1A5EE2254(0, &qword_1ED1CE568, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1A5F66C50;
  *(_QWORD *)(v7 + 32) = v2;
  *(_QWORD *)(v7 + 40) = v1;
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v3;
  *(_QWORD *)(v7 + 64) = v6;
  *(_QWORD *)(v7 + 72) = v5;
  sub_1A5EE2254(0, (unint64_t *)&qword_1ED1CD930, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1A5EDB074();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1A5F64100();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t initializeBufferWithCopyOfBuffer for DenylistDescriptor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

_QWORD *assignWithCopy for DenylistDescriptor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for DenylistDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DenylistDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DenylistDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t static PrivacyValidation.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = *a1;
  v3 = *a2;
  if (v2)
    v4 = v3 == 0;
  else
    v4 = 1;
  if (v4)
    return (v2 | v3) == 0;
  else
    return sub_1A5EFEFC4(v2, v3);
}

uint64_t sub_1A5EFEFC4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t i;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  BOOL v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  if (result == a2)
    return 1;
  v2 = a2;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v35 = result;
  v36 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v37 = (unint64_t)(v4 + 63) >> 6;
  v42 = a2 + 56;
  if (!v6)
    goto LABEL_8;
LABEL_7:
  v38 = (v6 - 1) & v6;
  v39 = v3;
  for (i = __clz(__rbit64(v6)) | (v3 << 6); ; i = __clz(__rbit64(v9)) + (v10 << 6))
  {
    v12 = (uint64_t *)(*(_QWORD *)(result + 48) + 48 * i);
    v13 = *v12;
    v14 = v12[1];
    v16 = v12[2];
    v15 = v12[3];
    v18 = v12[4];
    v17 = v12[5];
    sub_1A5F64910();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = v13;
    sub_1A5F6419C();
    v20 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v43 = v16;
    sub_1A5F6419C();
    v44 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v21 = v18;
    sub_1A5F6419C();
    v22 = v17;
    swift_bridgeObjectRelease();
    v23 = sub_1A5F64928();
    v24 = -1 << *(_BYTE *)(v2 + 32);
    v25 = v23 & ~v24;
    if (((*(_QWORD *)(v42 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
    {
LABEL_45:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    v41 = ~v24;
    v26 = *(_QWORD *)(a2 + 48);
    while (1)
    {
      v27 = (_QWORD *)(v26 + 48 * v25);
      v29 = v27[2];
      v28 = v27[3];
      v30 = v27[4];
      v31 = v27[5];
      v32 = *v27 == v19 && v27[1] == v20;
      if (v32 || (sub_1A5F64880() & 1) != 0)
      {
        v33 = v29 == v43 && v28 == v44;
        if (v33 || (sub_1A5F64880() & 1) != 0)
        {
          v34 = v30 == v21 && v31 == v22;
          if (v34 || (sub_1A5F64880() & 1) != 0)
            break;
        }
      }
      v25 = (v25 + 1) & v41;
      if (((*(_QWORD *)(v42 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
        goto LABEL_45;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = v39;
    v2 = a2;
    result = v35;
    v6 = v38;
    if (v38)
      goto LABEL_7;
LABEL_8:
    v8 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v8 >= v37)
      return 1;
    v9 = *(_QWORD *)(v36 + 8 * v8);
    v10 = v3 + 1;
    if (!v9)
    {
      v10 = v3 + 2;
      if (v3 + 2 >= v37)
        return 1;
      v9 = *(_QWORD *)(v36 + 8 * v10);
      if (!v9)
      {
        v10 = v3 + 3;
        if (v3 + 3 >= v37)
          return 1;
        v9 = *(_QWORD *)(v36 + 8 * v10);
        if (!v9)
        {
          v10 = v3 + 4;
          if (v3 + 4 >= v37)
            return 1;
          v9 = *(_QWORD *)(v36 + 8 * v10);
          if (!v9)
            break;
        }
      }
    }
LABEL_23:
    v38 = (v9 - 1) & v9;
    v39 = v10;
  }
  v11 = v3 + 5;
  if (v3 + 5 >= v37)
    return 1;
  v9 = *(_QWORD *)(v36 + 8 * v11);
  if (v9)
  {
    v10 = v3 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v10 >= v37)
      return 1;
    v9 = *(_QWORD *)(v36 + 8 * v10);
    ++v11;
    if (v9)
      goto LABEL_23;
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1A5EFF358(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = *a1;
  v3 = *a2;
  if (v2)
    v4 = v3 == 0;
  else
    v4 = 1;
  if (v4)
    return (v2 | v3) == 0;
  else
    return sub_1A5EFEFC4(v2, v3);
}

uint64_t sub_1A5EFF384@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  char v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  void *v13;
  Swift::String v14;
  void *object;
  uint64_t countAndFlagsBits;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  char v24;
  uint64_t v25;
  void *v26;
  void *v27;
  char v29;
  int v30;
  AppAnalytics::DenylistDescriptor v31;
  uint64_t v32;

  v3 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v32 = MEMORY[0x1E0DEE9D8];
    sub_1A5EFD0C0(0, v4, 0);
    v5 = v32;
    result = sub_1A5F00C84(a1);
    v8 = result;
    v10 = v9 & 1;
    while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_14;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v7)
        goto LABEL_15;
      v29 = v10;
      v30 = v7;
      v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v8);
      v12 = *v11;
      v13 = (void *)v11[1];
      swift_bridgeObjectRetain();
      v14._countAndFlagsBits = v12;
      v14._object = v13;
      DenylistDescriptor.init(value:)(&v31, v14);
      countAndFlagsBits = v31.eventName._countAndFlagsBits;
      object = v31.eventName._object;
      v18 = v31.dataName._countAndFlagsBits;
      v17 = v31.dataName._object;
      v20 = v31.propertyName._countAndFlagsBits;
      v19 = v31.propertyName._object;
      v32 = v5;
      v22 = *(_QWORD *)(v5 + 16);
      v21 = *(_QWORD *)(v5 + 24);
      if (v22 >= v21 >> 1)
      {
        v26 = v31.dataName._object;
        v27 = v31.eventName._object;
        sub_1A5EFD0C0(v21 > 1, v22 + 1, 1);
        v17 = v26;
        object = v27;
        v5 = v32;
      }
      *(_QWORD *)(v5 + 16) = v22 + 1;
      v23 = (_QWORD *)(v5 + 48 * v22);
      v23[4] = countAndFlagsBits;
      v23[5] = object;
      v23[6] = v18;
      v23[7] = v17;
      v23[8] = v20;
      v23[9] = v19;
      result = sub_1A5F00D24(v8, v30, v29 & 1, a1);
      v8 = result;
      v10 = v24 & 1;
      if (!--v4)
      {
        sub_1A5F00E08(result, v7, v10);
        swift_bridgeObjectRelease();
        v3 = a2;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v5 = MEMORY[0x1E0DEE9D8];
LABEL_12:
    v25 = sub_1A5F00E14(v5);
    result = swift_bridgeObjectRelease();
    *v3 = v25;
  }
  return result;
}

uint64_t PrivacyValidation.denylistDescriptors.getter()
{
  uint64_t *v0;
  uint64_t v1;

  if (*v0)
    v1 = *v0;
  else
    v1 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRetain();
  return v1;
}

BOOL PrivacyValidation.isEnabled.getter()
{
  _QWORD *v0;

  return *v0 != 0;
}

uint64_t destroy for PrivacyValidation()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for PrivacyValidation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivacyValidation(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PrivacyValidation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_1A5EFF67C(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *initializeBufferWithCopyOfBuffer for PrivacyValidationError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PrivacyValidationError()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for PrivacyValidationError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for PrivacyValidationError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrivacyValidationError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrivacyValidationError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivacyValidationError()
{
  return &type metadata for PrivacyValidationError;
}

uint64_t sub_1A5EFF7D8(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  __int128 v35;
  _QWORD *v36;
  _OWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v3 = v2;
  v6 = *v2;
  sub_1A5F64910();
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = a2[4];
  v12 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v42 = v9;
  sub_1A5F6419C();
  v41 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v40 = v11;
  sub_1A5F6419C();
  v39 = v12;
  swift_bridgeObjectRelease();
  v13 = sub_1A5F64928();
  v14 = -1 << *(_BYTE *)(v6 + 32);
  v15 = v13 & ~v14;
  v16 = v6 + 56;
  v37 = a2;
  v38 = a1;
  v36 = v3;
  if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
  {
    v17 = ~v14;
    v18 = *(_QWORD *)(v6 + 48);
    while (1)
    {
      v19 = (_QWORD *)(v18 + 48 * v15);
      v20 = v19[2];
      v21 = v19[3];
      v22 = v19[4];
      v23 = v19[5];
      v24 = *v19 == v7 && v19[1] == v8;
      if (v24 || (sub_1A5F64880() & 1) != 0)
      {
        v25 = v20 == v42 && v21 == v41;
        if (v25 || (sub_1A5F64880() & 1) != 0)
        {
          v26 = v22 == v40 && v23 == v39;
          if (v26 || (sub_1A5F64880() & 1) != 0)
            break;
        }
      }
      v15 = (v15 + 1) & v17;
      if (((*(_QWORD *)(v16 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
        goto LABEL_20;
    }
    swift_bridgeObjectRelease();
    sub_1A5F00F08((uint64_t)v37);
    v27 = (_QWORD *)(*(_QWORD *)(*v36 + 48) + 48 * v15);
    v28 = v27[1];
    v29 = v27[2];
    v30 = v27[3];
    v31 = v27[4];
    v32 = v27[5];
    *v38 = *v27;
    v38[1] = v28;
    v38[2] = v29;
    v38[3] = v30;
    v38[4] = v31;
    v38[5] = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_20:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v43 = *v36;
    *v36 = 0x8000000000000000;
    sub_1A5F00EC0((uint64_t)v37);
    sub_1A5F000B4((uint64_t)v37, v15, isUniquelyReferenced_nonNull_native);
    *v36 = v43;
    swift_bridgeObjectRelease();
    v35 = v37[1];
    *(_OWORD *)v38 = *v37;
    *((_OWORD *)v38 + 1) = v35;
    *((_OWORD *)v38 + 2) = v37[2];
    return 1;
  }
}

uint64_t sub_1A5EFFA70()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  int64_t v37;

  v1 = v0;
  v2 = *v0;
  sub_1A5EF363C();
  v3 = sub_1A5F64604();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v35 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v34 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    v36 = v2;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v37 = v10;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v34)
          goto LABEL_33;
        v16 = v35[v15];
        v17 = v10 + 1;
        if (!v16)
        {
          v17 = v10 + 2;
          if (v10 + 2 >= v34)
            goto LABEL_33;
          v16 = v35[v17];
          if (!v16)
          {
            v17 = v10 + 3;
            if (v10 + 3 >= v34)
              goto LABEL_33;
            v16 = v35[v17];
            if (!v16)
            {
              v18 = v10 + 4;
              if (v10 + 4 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v33 = 1 << *(_BYTE *)(v2 + 32);
                if (v33 > 63)
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v33;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v35[v18];
              if (!v16)
              {
                while (1)
                {
                  v17 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v17 >= v34)
                    goto LABEL_33;
                  v16 = v35[v17];
                  ++v18;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v17 = v10 + 4;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v37 = v17;
        v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 48 * v14);
      v20 = *v19;
      v21 = v19[1];
      v22 = v19[2];
      v23 = v19[3];
      v25 = v19[4];
      v24 = v19[5];
      sub_1A5F64910();
      swift_bridgeObjectRetain();
      sub_1A5F6419C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1A5F6419C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1A5F6419C();
      swift_bridgeObjectRelease();
      result = sub_1A5F64928();
      v26 = -1 << *(_BYTE *)(v4 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v8 + 8 * v28);
        }
        while (v32 == -1);
        v11 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 48 * v11);
      *v12 = v20;
      v12[1] = v21;
      v12[2] = v22;
      v12[3] = v23;
      v12[4] = v25;
      v12[5] = v24;
      ++*(_QWORD *)(v4 + 16);
      v2 = v36;
      v10 = v37;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A5EFFDDC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_1A5F00F50();
  v3 = sub_1A5F64604();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1A5F64910();
      sub_1A5F6419C();
      result = sub_1A5F64928();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A5F000B4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  BOOL v25;
  uint64_t v27;
  _OWORD *v28;
  __int128 v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t *v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v5 = (uint64_t *)result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v34 = (_OWORD *)result;
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_27;
  if ((a3 & 1) != 0)
  {
    sub_1A5EFFA70();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1A5F00310();
      goto LABEL_27;
    }
    sub_1A5F00694();
  }
  v8 = *v3;
  sub_1A5F64910();
  v9 = *v5;
  v10 = v5[1];
  v11 = v5[2];
  v12 = v5[3];
  v14 = v5[4];
  v13 = v5[5];
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v36 = v11;
  sub_1A5F6419C();
  v35 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v38 = v14;
  sub_1A5F6419C();
  v37 = v13;
  swift_bridgeObjectRelease();
  result = sub_1A5F64928();
  v15 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v15;
  v16 = v8 + 56;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v17 = ~v15;
    v18 = *(_QWORD *)(v8 + 48);
    while (1)
    {
      v19 = (_QWORD *)(v18 + 48 * a2);
      v20 = v19[2];
      v21 = v19[3];
      v22 = v19[4];
      v23 = v19[5];
      v24 = *v19 == v9 && v19[1] == v10;
      if (v24 || (result = sub_1A5F64880(), (result & 1) != 0))
      {
        v25 = v20 == v36 && v21 == v35;
        if (v25 || (result = sub_1A5F64880(), (result & 1) != 0))
        {
          if (v22 == v38 && v23 == v37)
            break;
          result = sub_1A5F64880();
          if ((result & 1) != 0)
            break;
        }
      }
      a2 = (a2 + 1) & v17;
      if (((*(_QWORD *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_27;
    }
    result = sub_1A5F648BC();
    __break(1u);
  }
LABEL_27:
  v27 = *v33;
  *(_QWORD *)(*v33 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v28 = (_OWORD *)(*(_QWORD *)(v27 + 48) + 48 * a2);
  v29 = v34[1];
  *v28 = *v34;
  v28[1] = v29;
  v28[2] = v34[2];
  v30 = *(_QWORD *)(v27 + 16);
  v31 = __OFADD__(v30, 1);
  v32 = v30 + 1;
  if (v31)
    __break(1u);
  else
    *(_QWORD *)(v27 + 16) = v32;
  return result;
}

void *sub_1A5F00310()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_1A5EF363C();
  v2 = *v0;
  v3 = sub_1A5F645F8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_28;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
      {
        v9 = v24 + 2;
        if (v24 + 2 >= v13)
          goto LABEL_28;
        v25 = *(_QWORD *)(v6 + 8 * v9);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 48 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = v17[2];
    v20 = v17[3];
    v21 = v17[4];
    v22 = v17[5];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = *v17;
    v23[1] = v18;
    v23[2] = v19;
    v23[3] = v20;
    v23[4] = v21;
    v23[5] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 3;
  if (v26 >= v13)
    goto LABEL_28;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A5F004E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1A5F00F50();
  v2 = *v0;
  v3 = sub_1A5F645F8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A5F00694()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  int64_t v36;

  v1 = v0;
  v2 = *v0;
  sub_1A5EF363C();
  v3 = sub_1A5F64604();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v33 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v34 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  v35 = v2;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v36 = v10;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v34)
      goto LABEL_33;
    v16 = *(_QWORD *)(v33 + 8 * v15);
    v17 = v10 + 1;
    if (!v16)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v34)
        goto LABEL_33;
      v16 = *(_QWORD *)(v33 + 8 * v17);
      if (!v16)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v34)
          goto LABEL_33;
        v16 = *(_QWORD *)(v33 + 8 * v17);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v36 = v17;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 48 * v14);
    v20 = *v19;
    v21 = v19[1];
    v22 = v19[2];
    v23 = v19[3];
    v24 = v19[4];
    v25 = v19[5];
    sub_1A5F64910();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A5F6419C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1A5F6419C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1A5F6419C();
    swift_bridgeObjectRelease();
    result = sub_1A5F64928();
    v26 = -1 << *(_BYTE *)(v4 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v8 + 8 * v28);
      }
      while (v32 == -1);
      v11 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 48 * v11);
    *v12 = v20;
    v12[1] = v21;
    v12[2] = v22;
    v12[3] = v23;
    v12[4] = v24;
    v12[5] = v25;
    ++*(_QWORD *)(v4 + 16);
    v2 = v35;
    v10 = v36;
  }
  v18 = v10 + 4;
  if (v10 + 4 >= v34)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v33 + 8 * v18);
  if (v16)
  {
    v17 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v34)
      goto LABEL_33;
    v16 = *(_QWORD *)(v33 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A5F009DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_1A5F00F50();
  v3 = sub_1A5F64604();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1A5F64910();
    swift_bridgeObjectRetain();
    sub_1A5F6419C();
    result = sub_1A5F64928();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A5F00C84(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1A5F00D24(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1A5F00E08(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1A5F00E14(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v8[3];

  v2 = *(_QWORD *)(a1 + 16);
  sub_1A5EF6AA8();
  result = sub_1A5F64388();
  v7 = result;
  if (v2)
  {
    v4 = (_OWORD *)(a1 + 32);
    do
    {
      v5 = v4[1];
      v8[0] = *v4;
      v8[1] = v5;
      v8[2] = v4[2];
      sub_1A5F00EC0((uint64_t)v8);
      sub_1A5EFF7D8(&v6, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 3;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1A5F00EC0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A5F00F08(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1A5F00F50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE80CC20)
  {
    v0 = sub_1A5F6461C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE80CC20);
  }
}

uint64_t EventData.eventID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventData.eventTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EventData() + 20);
  v4 = sub_1A5F63F08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EventData.eventPath.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for EventData() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventData.sessionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for EventData() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventData.appSessionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for EventData() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventData.init(eventID:eventTimestamp:eventPath:sessionID:appSessionID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  int *v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;

  *a9 = a1;
  a9[1] = a2;
  v17 = (int *)type metadata accessor for EventData();
  v18 = (char *)a9 + v17[5];
  v19 = sub_1A5F63F08();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a3, v19);
  v21 = (_QWORD *)((char *)a9 + v17[6]);
  *v21 = a4;
  v21[1] = a5;
  v22 = (_QWORD *)((char *)a9 + v17[7]);
  *v22 = a6;
  v22[1] = a7;
  v23 = (_QWORD *)((char *)a9 + v17[8]);
  *v23 = a8;
  v23[1] = a10;
  return result;
}

BOOL sub_1A5F0118C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A5F011A0()
{
  sub_1A5F64910();
  sub_1A5F6491C();
  return sub_1A5F64928();
}

uint64_t sub_1A5F011E4()
{
  return sub_1A5F6491C();
}

uint64_t sub_1A5F0120C()
{
  sub_1A5F64910();
  sub_1A5F6491C();
  return sub_1A5F64928();
}

uint64_t sub_1A5F0124C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5F0177C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5F01270()
{
  return 0;
}

void sub_1A5F0127C(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1A5F01288()
{
  sub_1A5ECC518();
  return sub_1A5F6497C();
}

uint64_t sub_1A5F012B0()
{
  sub_1A5ECC518();
  return sub_1A5F64988();
}

uint64_t *initializeBufferWithCopyOfBuffer for EventData(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A5F63F08();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (uint64_t *)((char *)v4 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (uint64_t *)((char *)v4 + v14);
    v19 = (uint64_t *)((char *)a2 + v14);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[8];
    v22 = (uint64_t *)((char *)v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

_QWORD *assignWithCopy for EventData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A5F63F08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for EventData(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A5F63F08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for EventData(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A5F63F08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A5F0162C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1A5F63F08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1A5F016A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1A5F63F08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A5F0171C(unsigned __int8 *a1)
{
  return *a1;
}

ValueMetadata *type metadata accessor for EventData.CodingKeys()
{
  return &type metadata for EventData.CodingKeys;
}

unint64_t sub_1A5F01738()
{
  unint64_t result;

  result = qword_1EE80CC28;
  if (!qword_1EE80CC28)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F670B4, &type metadata for EventData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE80CC28);
  }
  return result;
}

uint64_t sub_1A5F0177C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4449746E657665 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A5F64880() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6954746E657665 && a2 == 0xEE00706D61747365 || (sub_1A5F64880() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746150746E657665 && a2 == 0xE900000000000068 || (sub_1A5F64880() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000044 || (sub_1A5F64880() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6973736553707061 && a2 == 0xEC00000044496E6FLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A5F64880();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void sub_1A5F019E4(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 16) = 0;
}

void static EventType.sessionGroup.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 16) = 0;
}

void sub_1A5F01A04(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static EventType.timestampGranularity.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t dispatch thunk of static EventType.sessionGroup.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1A5F01A1C(uint64_t a1@<X8>)
{
  static EventType.sessionGroup.getter(a1);
}

uint64_t dispatch thunk of static EventType.timestampGranularity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_1A5F01A38(_BYTE *a1@<X8>)
{
  static EventType.timestampGranularity.getter(a1);
}

uint64_t dispatch thunk of EventType.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

id BridgedFlushManager.__allocating_init(appSessionManager:client:endpoint:config:)(char *a1, void *a2, void *a3, void *a4)
{
  objc_class *v4;
  objc_class *v5;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  char *v16;
  id v17;
  objc_super v19;

  v5 = v4;
  v10 = objc_allocWithZone(v5);
  v11 = *(_QWORD *)&a1[OBJC_IVAR___AAAppSessionManager_appSessionManager];
  type metadata accessor for URLSessionUploadClientFactory();
  v12 = swift_allocObject();
  v13 = (char *)v10;
  swift_retain();
  v14 = a2;
  swift_unknownObjectRetain();
  v15 = a4;
  v16 = sub_1A5F02348(v11, v14, a3, 0, v15, v12);
  swift_release();
  *(_QWORD *)&v13[OBJC_IVAR___AAFlushManager_flushManager] = v16;

  v19.receiver = v13;
  v19.super_class = v5;
  v17 = objc_msgSendSuper2(&v19, sel_init);

  swift_unknownObjectRelease();
  return v17;
}

id BridgedFlushManager.init(appSessionManager:client:endpoint:config:)(char *a1, void *a2, void *a3, void *a4)
{
  void *v4;
  void *v5;
  objc_class *ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  char *v16;
  id v17;
  objc_super v19;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = *(_QWORD *)&a1[OBJC_IVAR___AAAppSessionManager_appSessionManager];
  type metadata accessor for URLSessionUploadClientFactory();
  v12 = swift_allocObject();
  v13 = v5;
  swift_retain();
  v14 = a2;
  swift_unknownObjectRetain();
  v15 = a4;
  v16 = sub_1A5F02348(v11, v14, a3, 0, v15, v12);
  swift_release();
  *(_QWORD *)&v13[OBJC_IVAR___AAFlushManager_flushManager] = v16;

  v19.receiver = v13;
  v19.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v19, sel_init);

  swift_unknownObjectRelease();
  return v17;
}

void BridgedFlushManager.flush(_:)(void (*a1)(void), uint64_t a2)
{
  sub_1A5EC8138(0, 0, a1, a2);
}

id BridgedFlushManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BridgedFlushManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BridgedFlushManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *sub_1A5F01F30(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  _BYTE *v30;
  _DWORD *v31;
  id v32;
  id v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  _QWORD v42[5];
  _QWORD v43[5];
  _QWORD v44[5];
  _QWORD v45[6];

  v35 = a7;
  v40 = a5;
  v36 = a4;
  v39 = a3;
  v38 = a2;
  v37 = a1;
  v12 = sub_1A5F6449C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A5F64490();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1A5F64028();
  MEMORY[0x1E0C80A78](v17);
  v45[3] = type metadata accessor for URLSessionUploadClientFactory();
  v45[4] = &protocol witness table for URLSessionUploadClientFactory;
  v45[0] = a6;
  v44[3] = type metadata accessor for DocumentDirectoryUploadDropboxPathProvider(0);
  v44[4] = &off_1E4FD57A8;
  v44[0] = a8;
  v43[3] = type metadata accessor for UploadDropboxFileManager();
  v43[4] = &off_1E4FD3EE8;
  v43[0] = a9;
  v42[3] = type metadata accessor for SHA1Base64SigningService();
  v42[4] = &off_1E4FD0158;
  v42[0] = v35;
  sub_1A5ED4A58();
  sub_1A5F63FF8();
  v41 = MEMORY[0x1E0DEE9D8];
  sub_1A5ECC4D8((unint64_t *)&qword_1ED1CF820, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1A5F02624();
  sub_1A5ECC4D8((unint64_t *)&qword_1ED1CF818, (uint64_t (*)(uint64_t))sub_1A5F02624, MEMORY[0x1E0DEAF38]);
  sub_1A5F645E0();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF8D0], v12);
  *((_QWORD *)a10 + 30) = sub_1A5F644D8();
  v18 = OBJC_IVAR____TtC12AppAnalytics12FlushManager_logger;
  if (qword_1ED1CD440 != -1)
    swift_once();
  v19 = sub_1A5F63F98();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED1D2190);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(&a10[v18], v20, v19);
  *((_QWORD *)a10 + 2) = v37;
  *((_QWORD *)a10 + 3) = &off_1E4FD4890;
  v21 = v38;
  v22 = v39;
  *((_QWORD *)a10 + 4) = v38;
  *((_QWORD *)a10 + 5) = v22;
  v23 = v40;
  *((_QWORD *)a10 + 6) = v36;
  *((_QWORD *)a10 + 7) = v23;
  sub_1A5ECE02C((uint64_t)v45, (uint64_t)(a10 + 64));
  sub_1A5ECE02C((uint64_t)v42, (uint64_t)(a10 + 104));
  sub_1A5ECE02C((uint64_t)v44, (uint64_t)(a10 + 144));
  sub_1A5ECE02C((uint64_t)v43, (uint64_t)(a10 + 184));
  swift_beginAccess();
  sub_1A5F02678(0, v24, v25, v26);
  v27 = swift_allocObject();
  type metadata accessor for UnfairLock();
  v28 = swift_allocObject();
  swift_retain();
  v29 = v21;
  swift_unknownObjectRetain();
  v30 = v23;
  v31 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v28 + 16) = v31;
  *v31 = 0;
  *(_DWORD *)(v28 + 24) = 0x10000;
  *(_QWORD *)(v27 + 16) = v28;
  *(_BYTE *)(v27 + 24) = 0;
  *((_QWORD *)a10 + 29) = v27;
  swift_endAccess();
  LOBYTE(v27) = v30[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled];
  v32 = objc_allocWithZone((Class)type metadata accessor for TransparencyLogging());
  v33 = sub_1A5ED33E8(v27);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
  *((_QWORD *)a10 + 28) = v33;
  return a10;
}

char *sub_1A5F02348(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _QWORD v37[5];

  v34 = a6;
  v35 = a2;
  v36 = a4;
  v9 = sub_1A5F63DD0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UploadDropboxFileManager();
  v13 = swift_allocObject();
  type metadata accessor for MescalSigner();
  v14 = swift_allocObject();
  v15 = type metadata accessor for SHA1Base64SigningService();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v14;
  *(_QWORD *)(v16 + 24) = &off_1E4FCFB58;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, (uint64_t)a5 + OBJC_IVAR___AAUploadBatchEventConfig_directory, v9);
  swift_retain();
  v17 = objc_msgSend(a3, sel_name);
  v18 = sub_1A5F64130();
  v20 = v19;

  type metadata accessor for DocumentDirectoryUploadDropboxPathProvider(0);
  v21 = swift_allocObject();
  swift_retain();
  v22 = sub_1A5ED5260((uint64_t)v12, v18, v20, v13, v21);
  v37[3] = v15;
  v37[4] = &off_1E4FD0158;
  v37[0] = v16;
  type metadata accessor for FlushManager();
  v23 = (char *)swift_allocObject();
  v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v15);
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (uint64_t *)((char *)&v34 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v28 + 16))(v27, v25);
  v29 = *v27;
  swift_retain();
  v30 = v34;
  swift_retain();
  swift_retain();
  swift_retain();
  v31 = v35;
  v32 = sub_1A5F01F30(a1, v35, (uint64_t)a3, v36, a5, v30, v29, v22, v13, v23);
  swift_release();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v32;
}

uint64_t type metadata accessor for BridgedFlushManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for BridgedFlushManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BridgedFlushManager.__allocating_init(appSessionManager:client:endpoint:config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1A5F02600()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1A5F02624()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CF810)
  {
    sub_1A5F64490();
    v0 = sub_1A5F6431C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CF810);
  }
}

void sub_1A5F02678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED1CDB28)
  {
    v4 = type metadata accessor for Atomic(0, (uint64_t)&type metadata for FlushManager.State, a3, a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED1CDB28);
  }
}

id BridgedRawDataEvent.__allocating_init(name:dictionary:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  objc_super v10;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = &v7[OBJC_IVAR___AARawDataEvent_name];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  *(_QWORD *)&v7[OBJC_IVAR___AARawDataEvent_dictionary] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

void static BridgedRawDataEvent.dataName.getter()
{
  sub_1A5F6470C();
  __break(1u);
}

uint64_t BridgedRawDataEvent.toDict()()
{
  return swift_bridgeObjectRetain();
}

id BridgedRawDataEvent.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BridgedRawDataEvent.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BridgedRawDataEvent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for BridgedRawDataEvent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BridgedRawDataEvent.__allocating_init(name:dictionary:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1A5F029E0()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___AADataEventTraits_onlyOnce);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1A5F02A6C(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR___AADataEventTraits_onlyOnce);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1A5F02AB4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A5F02B3C()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___AADataEventTraits_unique);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1A5F02BC8(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR___AADataEventTraits_unique);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1A5F02C10())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1A5F02C98()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___AADataEventTraits_discardWhenPresent);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1A5F02D24(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR___AADataEventTraits_discardWhenPresent);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1A5F02D6C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id BridgedDataEventTraits.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id BridgedDataEventTraits.init()()
{
  _BYTE *v0;
  objc_super v2;

  v0[OBJC_IVAR___AADataEventTraits_onlyOnce] = 0;
  v0[OBJC_IVAR___AADataEventTraits_unique] = 0;
  v0[OBJC_IVAR___AADataEventTraits_discardWhenPresent] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedDataEventTraits();
  return objc_msgSendSuper2(&v2, sel_init);
}

id BridgedDataEventTraits.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedDataEventTraits();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A5F02E58@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___AADataEventTraits_onlyOnce, a2);
}

uint64_t sub_1A5F02E64(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR___AADataEventTraits_onlyOnce);
}

uint64_t sub_1A5F02E70@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___AADataEventTraits_unique, a2);
}

uint64_t sub_1A5F02E7C(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR___AADataEventTraits_unique);
}

uint64_t sub_1A5F02E88@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___AADataEventTraits_discardWhenPresent, a2);
}

uint64_t keypath_getTm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t result;

  v4 = (_BYTE *)(*a1 + *a2);
  result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_1A5F02EE0(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR___AADataEventTraits_discardWhenPresent);
}

uint64_t keypath_setTm(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char v5;
  _BYTE *v6;
  uint64_t result;

  v5 = *a1;
  v6 = (_BYTE *)(*a2 + *a5);
  result = swift_beginAccess();
  *v6 = v5;
  return result;
}

uint64_t method lookup function for BridgedDataEventTraits()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BridgedDataEventTraits.onlyOnce.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of BridgedDataEventTraits.onlyOnce.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of BridgedDataEventTraits.onlyOnce.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of BridgedDataEventTraits.unique.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of BridgedDataEventTraits.unique.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of BridgedDataEventTraits.unique.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BridgedDataEventTraits.discardWhenPresent.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of BridgedDataEventTraits.discardWhenPresent.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of BridgedDataEventTraits.discardWhenPresent.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

id sub_1A5F03040()
{
  objc_class *v0;
  _BYTE *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for BridgedTimestampJitter();
  v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR___AATimestampJitter_enabled] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___AATimestampJitter_lowerBound] = 0xC082C00000000000;
  *(_QWORD *)&v1[OBJC_IVAR___AATimestampJitter_upperBound] = 0x4082C00000000000;
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, sel_init);
  qword_1ED1CC0D0 = (uint64_t)result;
  return result;
}

id static BridgedTimestampJitter.default.getter()
{
  if (qword_1ED1CC0D8 != -1)
    swift_once();
  return (id)qword_1ED1CC0D0;
}

uint64_t BridgedTimestampJitter.enabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___AATimestampJitter_enabled);
}

double BridgedTimestampJitter.lowerBound.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___AATimestampJitter_lowerBound);
}

double BridgedTimestampJitter.upperBound.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___AATimestampJitter_upperBound);
}

id BridgedTimestampJitter.with(enabled:)(char a1)
{
  uint64_t v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___AATimestampJitter_lowerBound);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___AATimestampJitter_upperBound);
  v6 = objc_allocWithZone(ObjectType);
  v6[OBJC_IVAR___AATimestampJitter_enabled] = a1;
  *(_QWORD *)&v6[OBJC_IVAR___AATimestampJitter_lowerBound] = v4;
  *(_QWORD *)&v6[OBJC_IVAR___AATimestampJitter_upperBound] = v5;
  v8.receiver = v6;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

id BridgedTimestampJitter.with(lowerBound:)(double a1)
{
  uint64_t v1;
  objc_class *ObjectType;
  char v4;
  uint64_t v5;
  _BYTE *v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = *(_BYTE *)(v1 + OBJC_IVAR___AATimestampJitter_enabled);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___AATimestampJitter_upperBound);
  v6 = objc_allocWithZone(ObjectType);
  v6[OBJC_IVAR___AATimestampJitter_enabled] = v4;
  *(double *)&v6[OBJC_IVAR___AATimestampJitter_lowerBound] = a1;
  *(_QWORD *)&v6[OBJC_IVAR___AATimestampJitter_upperBound] = v5;
  v8.receiver = v6;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

id BridgedTimestampJitter.with(upperBound:)(double a1)
{
  uint64_t v1;
  objc_class *ObjectType;
  char v4;
  uint64_t v5;
  _BYTE *v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = *(_BYTE *)(v1 + OBJC_IVAR___AATimestampJitter_enabled);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___AATimestampJitter_lowerBound);
  v6 = objc_allocWithZone(ObjectType);
  v6[OBJC_IVAR___AATimestampJitter_enabled] = v4;
  *(_QWORD *)&v6[OBJC_IVAR___AATimestampJitter_lowerBound] = v5;
  *(double *)&v6[OBJC_IVAR___AATimestampJitter_upperBound] = a1;
  v8.receiver = v6;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

id BridgedTimestampJitter.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BridgedTimestampJitter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BridgedTimestampJitter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedTimestampJitter()
{
  return objc_opt_self();
}

uint64_t method lookup function for BridgedTimestampJitter()
{
  return swift_lookUpClassMethod();
}

uint64_t JSONError.init(rawValue:)()
{
  return 0;
}

unint64_t static JSONError._nsErrorDomain.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1A5F03620()
{
  sub_1A5F64910();
  sub_1A5F640DC();
  return sub_1A5F64928();
}

uint64_t sub_1A5F03680()
{
  sub_1A5F06AB8();
  return sub_1A5F63C8C();
}

uint64_t sub_1A5F036B8()
{
  sub_1A5F64910();
  sub_1A5F640DC();
  return sub_1A5F64928();
}

_QWORD *sub_1A5F03714@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 0;
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1A5F0372C()
{
  sub_1A5F06AB8();
  return sub_1A5F63CA4();
}

uint64_t sub_1A5F03754()
{
  sub_1A5F06AB8();
  return sub_1A5F63C98();
}

unint64_t sub_1A5F0377C()
{
  return 0xD000000000000016;
}

uint64_t sub_1A5F03798()
{
  sub_1A5F06AB8();
  return sub_1A5F63C80();
}

id JSON.__allocating_init(_:)(uint64_t a1, unint64_t a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_1A5F06490();
  sub_1A5EF0908(a1, a2);
  return v6;
}

id JSON.init(_:)(uint64_t a1, unint64_t a2)
{
  id v4;

  v4 = sub_1A5F06490();
  sub_1A5EF0908(a1, a2);
  return v4;
}

id sub_1A5F03930(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  char v6;
  objc_class *v7;
  id v8;
  id v9;
  objc_class *v10;
  id v11;
  id v12;
  objc_super v14;
  uint64_t v15;
  objc_super v16;
  __int128 v17;
  __int128 v18;

  sub_1A5EDCB9C(v2 + OBJC_IVAR___AAJSON_value, (uint64_t)&v17);
  if (!*((_QWORD *)&v18 + 1))
  {
    sub_1A5EDCB44((uint64_t)&v17);
    goto LABEL_7;
  }
  sub_1A5EF1B3C(0, (unint64_t *)&qword_1ED1CE4E8, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v7 = (objc_class *)type metadata accessor for JSON();
    v17 = 0u;
    v18 = 0u;
    v8 = objc_allocWithZone(v7);
    sub_1A5EDCB9C((uint64_t)&v17, (uint64_t)v8 + OBJC_IVAR___AAJSON_value);
    v16.receiver = v8;
    v16.super_class = v7;
    v9 = objc_msgSendSuper2(&v16, sel_init);
    goto LABEL_12;
  }
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    v5 = sub_1A5EF11E8(a1, a2);
    if ((v6 & 1) != 0)
    {
      sub_1A5EF30B0(*(_QWORD *)(v15 + 56) + 32 * v5, (uint64_t)&v17);
    }
    else
    {
      v17 = 0u;
      v18 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  swift_bridgeObjectRelease();
  v10 = (objc_class *)type metadata accessor for JSON();
  v11 = objc_allocWithZone(v10);
  sub_1A5EDCB9C((uint64_t)&v17, (uint64_t)v11 + OBJC_IVAR___AAJSON_value);
  v14.receiver = v11;
  v14.super_class = v10;
  v9 = objc_msgSendSuper2(&v14, sel_init);
LABEL_12:
  v12 = v9;
  sub_1A5EDCB44((uint64_t)&v17);
  return v12;
}

id sub_1A5F03AE8(unint64_t a1)
{
  uint64_t v1;
  objc_class *v3;
  id v4;
  id v5;
  objc_class *v6;
  id v7;
  objc_class *v8;
  id v9;
  id v10;
  objc_super v12;
  objc_super v13;
  uint64_t v14;
  objc_super v15;
  __int128 v16;
  __int128 v17;

  sub_1A5EDCB9C(v1 + OBJC_IVAR___AAJSON_value, (uint64_t)&v16);
  if (!*((_QWORD *)&v17 + 1))
  {
    sub_1A5EDCB44((uint64_t)&v16);
    goto LABEL_7;
  }
  sub_1A5EDCBFC(0, &qword_1ED1CCB00, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v6 = (objc_class *)type metadata accessor for JSON();
    v16 = 0u;
    v17 = 0u;
    v7 = objc_allocWithZone(v6);
    sub_1A5EDCB9C((uint64_t)&v16, (uint64_t)v7 + OBJC_IVAR___AAJSON_value);
    v15.receiver = v7;
    v15.super_class = v6;
    v5 = objc_msgSendSuper2(&v15, sel_init);
    goto LABEL_9;
  }
  if ((a1 & 0x8000000000000000) != 0 || *(_QWORD *)(v14 + 16) <= a1)
  {
    swift_bridgeObjectRelease();
    v8 = (objc_class *)type metadata accessor for JSON();
    v16 = 0u;
    v17 = 0u;
    v9 = objc_allocWithZone(v8);
    sub_1A5EDCB9C((uint64_t)&v16, (uint64_t)v9 + OBJC_IVAR___AAJSON_value);
    v13.receiver = v9;
    v13.super_class = v8;
    v5 = objc_msgSendSuper2(&v13, sel_init);
  }
  else
  {
    sub_1A5EF30B0(v14 + 32 * a1 + 32, (uint64_t)&v16);
    swift_bridgeObjectRelease();
    v3 = (objc_class *)type metadata accessor for JSON();
    v4 = objc_allocWithZone(v3);
    sub_1A5EDCB9C((uint64_t)&v16, (uint64_t)v4 + OBJC_IVAR___AAJSON_value);
    v12.receiver = v4;
    v12.super_class = v3;
    v5 = objc_msgSendSuper2(&v12, sel_init);
  }
LABEL_9:
  v10 = v5;
  sub_1A5EDCB44((uint64_t)&v16);
  return v10;
}

BOOL sub_1A5F03CB8()
{
  uint64_t v0;
  _BOOL8 v1;
  _QWORD v3[4];

  sub_1A5EDCB9C(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)v3);
  v1 = v3[3] != 0;
  sub_1A5EDCB44((uint64_t)v3);
  return v1;
}

uint64_t sub_1A5F03DD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A5EDCB9C(v1 + OBJC_IVAR___AAJSON_value, a1);
}

uint64_t sub_1A5F03EA0()
{
  uint64_t v0;
  uint64_t v2;
  _BYTE v3[24];
  uint64_t v4;

  sub_1A5EDCB9C(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast())
      return v2;
    else
      return 0;
  }
  else
  {
    sub_1A5EDCB44((uint64_t)v3);
    return 0;
  }
}

uint64_t sub_1A5F03F1C()
{
  return sub_1A5F03F34();
}

uint64_t sub_1A5F03F28()
{
  return sub_1A5F03F34();
}

uint64_t sub_1A5F03F34()
{
  uint64_t v0;
  uint64_t v2;
  _BYTE v3[24];
  uint64_t v4;

  sub_1A5EDCB9C(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast())
      return v2;
    else
      return 0;
  }
  else
  {
    sub_1A5EDCB44((uint64_t)v3);
    return 0;
  }
}

uint64_t sub_1A5F03FBC()
{
  uint64_t v0;
  uint64_t v2;
  _BYTE v3[24];
  uint64_t v4;

  sub_1A5EDCB9C(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast())
      return v2;
    else
      return 0;
  }
  else
  {
    sub_1A5EDCB44((uint64_t)v3);
    return 0;
  }
}

uint64_t sub_1A5F0403C()
{
  uint64_t v0;
  unsigned __int8 v2;
  _BYTE v3[24];
  uint64_t v4;

  sub_1A5EDCB9C(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)v3);
  if (v4)
  {
    if (swift_dynamicCast())
      return v2;
    else
      return 2;
  }
  else
  {
    sub_1A5EDCB44((uint64_t)v3);
    return 2;
  }
}

uint64_t sub_1A5F0410C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  id v4;
  uint64_t v5;
  objc_super v7;
  _QWORD v8[4];
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;

  sub_1A5EDCB9C(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)v10);
  if (!v11)
  {
    sub_1A5EDCB44((uint64_t)v10);
    return 0;
  }
  sub_1A5EDCBFC(0, &qword_1ED1CCB00, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v1 = *(_QWORD *)(v8[0] + 16);
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1A5F646A0();
    v2 = v8[0] + 32;
    do
    {
      sub_1A5EF30B0(v2, (uint64_t)v10);
      sub_1A5EF30B0((uint64_t)v10, (uint64_t)v8);
      v3 = (objc_class *)type metadata accessor for JSON();
      v4 = objc_allocWithZone(v3);
      sub_1A5EDCB9C((uint64_t)v8, (uint64_t)v4 + OBJC_IVAR___AAJSON_value);
      v7.receiver = v4;
      v7.super_class = v3;
      objc_msgSendSuper2(&v7, sel_init);
      sub_1A5EDCB44((uint64_t)v8);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
      sub_1A5F6467C();
      sub_1A5F646AC();
      sub_1A5F646B8();
      sub_1A5F64688();
      v2 += 32;
      --v1;
    }
    while (v1);
    v5 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

id sub_1A5F04338()
{
  uint64_t v0;
  uint64_t v1;
  double v3;
  _BYTE v4[24];
  uint64_t v5;

  v1 = v0 + OBJC_IVAR___AAJSON_value;
  sub_1A5EDCB9C(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)v4);
  if (v5)
  {
    if ((swift_dynamicCast() & 1) != 0)
      return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *(_QWORD *)&v3);
  }
  else
  {
    sub_1A5EDCB44((uint64_t)v4);
  }
  sub_1A5EDCB9C(v1, (uint64_t)v4);
  if (v5)
  {
    if ((swift_dynamicCast() & 1) != 0)
      return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v3);
  }
  else
  {
    sub_1A5EDCB44((uint64_t)v4);
  }
  sub_1A5EDCB9C(v1, (uint64_t)v4);
  if (v5)
  {
    if ((swift_dynamicCast() & 1) != 0)
      return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, LOBYTE(v3));
  }
  else
  {
    sub_1A5EDCB44((uint64_t)v4);
  }
  return 0;
}

id JSON.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void JSON.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id JSON.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSON();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A5F045FC()
{
  return JSON.payload()();
}

unint64_t JSON.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  unint64_t v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v1 = sub_1A5F64160();
  MEMORY[0x1E0C80A78](v1);
  sub_1A5EDCB9C(v0 + OBJC_IVAR___AAJSON_value, (uint64_t)&v16);
  if (v17)
  {
    sub_1A5EF1B2C(&v16, &v18);
  }
  else
  {
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
    v19 = sub_1A5EFD068();
    *(_QWORD *)&v18 = v2;
    sub_1A5EDCB44((uint64_t)&v16);
  }
  v3 = (void *)objc_opt_self();
  __swift_project_boxed_opaque_existential_1(&v18, v19);
  v4 = sub_1A5F64874();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v18);
  *(_QWORD *)&v18 = 0;
  v5 = objc_msgSend(v3, sel_dataWithJSONObject_options_error_, v4, 4, &v18);
  swift_unknownObjectRelease();
  v6 = (id)v18;
  if (v5)
  {
    v7 = sub_1A5F63E3C();
    v9 = v8;

    sub_1A5F64154();
    v10 = sub_1A5F6413C();
    v12 = v11;
    sub_1A5EF0908(v7, v9);
    if (!v12)
      return 0xD00000000000001ELL;
  }
  else
  {
    v13 = v6;
    v14 = (void *)sub_1A5F63CE0();

    swift_willThrow();
    *(_QWORD *)&v18 = 0;
    *((_QWORD *)&v18 + 1) = 0xE000000000000000;
    *(_QWORD *)&v16 = v14;
    sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
    sub_1A5F646F4();

    return v18;
  }
  return v10;
}

unint64_t sub_1A5F0489C(uint64_t a1)
{
  uint64_t v2;

  sub_1A5F64130();
  sub_1A5F64910();
  sub_1A5F6419C();
  v2 = sub_1A5F64928();
  swift_bridgeObjectRelease();
  return sub_1A5F0491C(a1, v2);
}

unint64_t sub_1A5F0491C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1A5F64130();
    v8 = v7;
    if (v6 == sub_1A5F64130() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1A5F64880();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1A5F64130();
          v15 = v14;
          if (v13 == sub_1A5F64130() && v15 == v16)
            break;
          v18 = sub_1A5F64880();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_1A5F04A90(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(uint64_t, _BYTE *))
{
  uint64_t *v6;
  uint64_t *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  _QWORD *v39;
  char v40;
  _BYTE v41[40];

  v8 = v6;
  v10 = *v6;
  sub_1A5F06984(0, a3, a4);
  v40 = a2;
  v11 = sub_1A5F6473C();
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v13 = 1 << *(_BYTE *)(v10 + 32);
    v39 = (_QWORD *)(v10 + 64);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & *(_QWORD *)(v10 + 64);
    v38 = (unint64_t)(v13 + 63) >> 6;
    v16 = v11 + 64;
    result = swift_retain();
    v18 = 0;
    while (1)
    {
      if (v15)
      {
        v21 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v22 = v21 | (v18 << 6);
      }
      else
      {
        v23 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v23 >= v38)
          goto LABEL_34;
        v24 = v39[v23];
        ++v18;
        if (!v24)
        {
          v18 = v23 + 1;
          if (v23 + 1 >= v38)
            goto LABEL_34;
          v24 = v39[v18];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v38)
            {
LABEL_34:
              swift_release();
              v8 = v6;
              if ((v40 & 1) != 0)
              {
                v37 = 1 << *(_BYTE *)(v10 + 32);
                if (v37 >= 64)
                  bzero(v39, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v39 = -1 << v37;
                *(_QWORD *)(v10 + 16) = 0;
              }
              break;
            }
            v24 = v39[v25];
            if (!v24)
            {
              while (1)
              {
                v18 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v18 >= v38)
                  goto LABEL_34;
                v24 = v39[v18];
                ++v25;
                if (v24)
                  goto LABEL_21;
              }
            }
            v18 = v25;
          }
        }
LABEL_21:
        v15 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v18 << 6);
      }
      v26 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * v22);
      v28 = *v26;
      v27 = v26[1];
      v29 = *(_QWORD *)(v10 + 56) + 40 * v22;
      if ((v40 & 1) != 0)
      {
        a6(v29, v41);
      }
      else
      {
        sub_1A5ECE02C(v29, (uint64_t)v41);
        swift_bridgeObjectRetain();
      }
      sub_1A5F64910();
      sub_1A5F6419C();
      result = sub_1A5F64928();
      v30 = -1 << *(_BYTE *)(v12 + 32);
      v31 = result & ~v30;
      v32 = v31 >> 6;
      if (((-1 << v31) & ~*(_QWORD *)(v16 + 8 * (v31 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v35 = v32 == v34;
          if (v32 == v34)
            v32 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v16 + 8 * v32);
        }
        while (v36 == -1);
        v19 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = (_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v19);
      *v20 = v28;
      v20[1] = v27;
      result = ((uint64_t (*)(_BYTE *, unint64_t))a6)(v41, *(_QWORD *)(v12 + 56) + 40 * v19);
      ++*(_QWORD *)(v12 + 16);
    }
  }
  result = swift_release();
  *v8 = v12;
  return result;
}

uint64_t sub_1A5F04DB0(uint64_t a1, char a2)
{
  return sub_1A5EC5BE0(a1, a2, &qword_1EE80CCB0, &qword_1EE80CCB8, (uint64_t)&type metadata for AnyDataEventEntry);
}

uint64_t sub_1A5F04DCC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  __int128 v41;

  v3 = v2;
  v5 = *v2;
  sub_1A5EF1B3C(0, &qword_1EE80CB70, (uint64_t)&type metadata for SummaryEventDatabaseEntity, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v40 = a2;
  v6 = sub_1A5F6473C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v37 = v2;
  v38 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v39 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_33;
      v24 = *(_QWORD *)(v39 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_33:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v39 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v38)
              goto LABEL_33;
            v24 = *(_QWORD *)(v39 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 32 * v21;
    v34 = *(_QWORD *)v33;
    v35 = *(_QWORD *)(v33 + 8);
    v41 = *(_OWORD *)(v33 + 16);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A5F64910();
    sub_1A5F6419C();
    result = sub_1A5F64928();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 32 * v17;
    *(_QWORD *)v19 = v34;
    *(_QWORD *)(v19 + 8) = v35;
    *(_OWORD *)(v19 + 16) = v41;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = (_QWORD *)(v5 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void *sub_1A5F0510C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_1A5EF1B3C(0, &qword_1ED1CE560, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v2 = *v0;
  v3 = sub_1A5F64730();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1A5EF30B0(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1A5EF1B2C(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A5F05308()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1A5EDD010(0, &qword_1ED1CD940, 255, (void (*)(uint64_t))type metadata accessor for UploadDropboxFile);
  v2 = *v0;
  v3 = sub_1A5F64730();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A5F054CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v4 = v3;
  sub_1A5EDD010(0, &qword_1ED1CD948, a3, (void (*)(uint64_t))type metadata accessor for JSON);
  v5 = *v3;
  v6 = sub_1A5F64730();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v4 = v7;
    return result;
  }
  result = (id)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v9 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v9 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v21 = v20[1];
    v22 = 8 * v18;
    v23 = *(void **)(*(_QWORD *)(v5 + 56) + v22);
    v24 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v19);
    *v24 = *v20;
    v24[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v22) = v23;
    swift_bridgeObjectRetain();
    result = v23;
  }
  v27 = v25 + 2;
  if (v27 >= v16)
    goto LABEL_26;
  v26 = *(_QWORD *)(v9 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v9 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A5F05688()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;

  v1 = v0;
  sub_1A5F069E8(0, &qword_1ED1CE1C8, (void (*)(void))sub_1A5EF8D14);
  v2 = *v0;
  v3 = sub_1A5F64730();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      v9 = v29 + 1;
      if (v29 + 1 >= v13)
        goto LABEL_26;
      v30 = *(_QWORD *)(v6 + 8 * v9);
      if (!v30)
        break;
    }
LABEL_25:
    v12 = (v30 - 1) & v30;
    v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 40 * v15;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = *(_QWORD *)(v17 + 24);
    v22 = *(_BYTE *)(v17 + 32);
    v23 = 16 * v15;
    v24 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v23);
    v25 = *v24;
    v26 = v24[1];
    v27 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v27 = v18;
    *(_QWORD *)(v27 + 8) = v19;
    *(_QWORD *)(v27 + 16) = v20;
    *(_QWORD *)(v27 + 24) = v21;
    *(_BYTE *)(v27 + 32) = v22;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v23);
    *v28 = v25;
    v28[1] = v26;
    sub_1A5EDF730(v18, v19, v20, v21, v22);
    result = (void *)swift_bridgeObjectRetain();
  }
  v31 = v29 + 2;
  if (v31 >= v13)
    goto LABEL_26;
  v30 = *(_QWORD *)(v6 + 8 * v31);
  if (v30)
  {
    v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v9);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A5F0586C()
{
  return sub_1A5F060FC(&qword_1ED1CD958, &qword_1ED1CE1A0, (uint64_t)&type metadata for EventMirrorProperty);
}

void *sub_1A5F05888()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;

  v1 = v0;
  sub_1A5F069E8(0, (unint64_t *)&qword_1ED1CB8E0, (void (*)(void))sub_1A5EF8DA0);
  v2 = *v0;
  v3 = sub_1A5F64730();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = v17[2];
    v21 = v17[3];
    v22 = 16 * v15;
    v23 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v22);
    v24 = *v23;
    v25 = v23[1];
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v26 = v19;
    v26[1] = v18;
    v26[2] = v20;
    v26[3] = v21;
    v27 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v22);
    *v27 = v24;
    v27[1] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A5F05A70()
{
  return sub_1A5F05AB8(&qword_1ED1CE558, (unint64_t *)&qword_1ED1CE4D0, (uint64_t)&protocol descriptor for DataEventStackType, (void (*)(_BYTE *, uint64_t))sub_1A5EC1D18);
}

void *sub_1A5F05A94()
{
  return sub_1A5F05AB8(&qword_1ED1CCE10, &qword_1ED1CE4C8, (uint64_t)&protocol descriptor for RestartTimerType, (void (*)(_BYTE *, uint64_t))sub_1A5EC1D18);
}

void *sub_1A5F05AB8(unint64_t *a1, unint64_t *a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t))
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  _BYTE v31[40];

  v5 = v4;
  sub_1A5F06984(0, a1, a2);
  v6 = *v4;
  v7 = sub_1A5F64730();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v5 = v8;
    return result;
  }
  v29 = v5;
  result = (void *)(v7 + 64);
  v10 = v6 + 64;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 64);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v17)
      goto LABEL_26;
    v27 = *(_QWORD *)(v10 + 8 * v26);
    ++v13;
    if (!v27)
    {
      v13 = v26 + 1;
      if (v26 + 1 >= v17)
        goto LABEL_26;
      v27 = *(_QWORD *)(v10 + 8 * v13);
      if (!v27)
        break;
    }
LABEL_25:
    v16 = (v27 - 1) & v27;
    v19 = __clz(__rbit64(v27)) + (v13 << 6);
LABEL_12:
    v20 = 16 * v19;
    v21 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v19);
    v22 = *v21;
    v23 = v21[1];
    v24 = 40 * v19;
    sub_1A5ECE02C(*(_QWORD *)(v6 + 56) + 40 * v19, (uint64_t)v31);
    v25 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v20);
    *v25 = v22;
    v25[1] = v23;
    a4(v31, *(_QWORD *)(v8 + 56) + v24);
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v17)
  {
LABEL_26:
    result = (void *)swift_release();
    v5 = v29;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v10 + 8 * v28);
  if (v27)
  {
    v13 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v13 >= v17)
      goto LABEL_26;
    v27 = *(_QWORD *)(v10 + 8 * v13);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A5F05CB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = type metadata accessor for Tracker.Timer();
  v31 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5EDD010(0, &qword_1ED1CD950, 255, v5);
  v6 = *v0;
  v7 = sub_1A5F64730();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v29 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v30 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v30 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v18);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(v31 + 72) * v18;
    sub_1A5F06940(*(_QWORD *)(v6 + 56) + v23, (uint64_t)v4);
    v24 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v24 = v22;
    v24[1] = v21;
    sub_1A5ECD6B0((uint64_t)v4, *(_QWORD *)(v8 + 56) + v23, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v29;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v30 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v30 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A5F05EF4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  sub_1A5EF1B3C(0, &qword_1ED1CB660, (uint64_t)&type metadata for DataProvider, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v2 = *v0;
  v3 = sub_1A5F64730();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 56);
    v18 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = v18[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v17 + v20);
    v22 = *(_QWORD *)(v17 + v20 + 8);
    v23 = *(_BYTE *)(v17 + v20 + 16);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v24 = *v18;
    v24[1] = v19;
    v25 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v25 = v21;
    *(_QWORD *)(v25 + 8) = v22;
    *(_BYTE *)(v25 + 16) = v23;
    swift_bridgeObjectRetain();
    result = (void *)sub_1A5EC6A8C();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A5F060E0()
{
  return sub_1A5F060FC(&qword_1EE80CCB0, &qword_1EE80CCB8, (uint64_t)&type metadata for AnyDataEventEntry);
}

void *sub_1A5F060FC(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v4 = v3;
  sub_1A5F06A48(0, a1, a2, a3);
  v5 = *v3;
  v6 = sub_1A5F64730();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v4 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v9 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v9 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v21 = v20[1];
    v22 = 8 * v18;
    v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
    v24 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v19);
    *v24 = *v20;
    v24[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v22) = v23;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v16)
    goto LABEL_26;
  v26 = *(_QWORD *)(v9 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v9 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A5F062B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  sub_1A5EF1B3C(0, &qword_1EE80CB70, (uint64_t)&type metadata for SummaryEventDatabaseEntity, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v2 = *v0;
  v3 = sub_1A5F64730();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v25 = *(_OWORD *)(v21 + 16);
    *v24 = v19;
    v24[1] = v18;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v26 = v22;
    *(_QWORD *)(v26 + 8) = v23;
    *(_OWORD *)(v26 + 16) = v25;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A5F06490()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  objc_super v9;
  _OWORD v10[2];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v1 = (void *)objc_opt_self();
  v2 = v0;
  v3 = (void *)sub_1A5F63E24();
  *(_QWORD *)&v10[0] = 0;
  v4 = objc_msgSend(v1, sel_JSONObjectWithData_options_error_, v3, 4, v10);

  v5 = *(id *)&v10[0];
  if (v4)
  {
    sub_1A5F645C8();
    swift_unknownObjectRelease();
  }
  else
  {
    v6 = v5;
    v7 = (void *)sub_1A5F63CE0();

    swift_willThrow();
    memset(v10, 0, sizeof(v10));
  }
  sub_1A5EDB014((uint64_t)v10, (uint64_t)v2 + OBJC_IVAR___AAJSON_value);

  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for JSON();
  return objc_msgSendSuper2(&v9, sel_init);
}

unint64_t sub_1A5F065C8()
{
  unint64_t result;

  result = qword_1EE80CC80;
  if (!qword_1EE80CC80)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for JSONError, &type metadata for JSONError);
    atomic_store(result, (unint64_t *)&qword_1EE80CC80);
  }
  return result;
}

unint64_t sub_1A5F06610()
{
  unint64_t result;

  result = qword_1EE80CC88;
  if (!qword_1EE80CC88)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for JSONError, &type metadata for JSONError);
    atomic_store(result, (unint64_t *)&qword_1EE80CC88);
  }
  return result;
}

unint64_t sub_1A5F06658()
{
  unint64_t result;

  result = qword_1EE80CC90;
  if (!qword_1EE80CC90)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for JSONError, &type metadata for JSONError);
    atomic_store(result, (unint64_t *)&qword_1EE80CC90);
  }
  return result;
}

unint64_t sub_1A5F066A0()
{
  unint64_t result;

  result = qword_1EE80CC98;
  if (!qword_1EE80CC98)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for JSONError, &type metadata for JSONError);
    atomic_store(result, (unint64_t *)&qword_1EE80CC98);
  }
  return result;
}

unint64_t sub_1A5F066E8()
{
  unint64_t result;

  result = qword_1EE80CCA0;
  if (!qword_1EE80CCA0)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for JSONError, &type metadata for JSONError);
    atomic_store(result, (unint64_t *)&qword_1EE80CCA0);
  }
  return result;
}

unint64_t sub_1A5F06730()
{
  unint64_t result;

  result = qword_1ED1CD918;
  if (!qword_1ED1CD918)
  {
    result = MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEB470], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED1CD918);
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONError()
{
  return &type metadata for JSONError;
}

uint64_t method lookup function for JSON()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of JSON.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of JSON.subscript.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of JSON.exists.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of JSON.any.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of JSON.string.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of JSON.integer.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of JSON.integer64.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of JSON.double.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of JSON.BOOL.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of JSON.array.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of JSON.object.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of JSON.number.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t sub_1A5F06940(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Tracker.Timer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1A5F06984(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1A5EE2EE8(255, a3);
    v4 = sub_1A5F64754();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1A5F069E8(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_1A5F64754();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1A5F06A48(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1A5EDCBFC(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v5 = sub_1A5F64754();
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_1A5F06AB8()
{
  unint64_t result;

  result = qword_1EE80CCA8;
  if (!qword_1EE80CCA8)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for JSONError, &type metadata for JSONError);
    atomic_store(result, (unint64_t *)&qword_1EE80CCA8);
  }
  return result;
}

void sub_1A5F06AFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;

  v1 = sub_1A5F64994();
  v3 = v2;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A5EF11E8(v1, v3);
    if ((v4 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v27 = v1;
  v28 = (uint64_t *)(v0 + 16);
  v29 = v3;
  v5 = objc_msgSend(objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init), sel_eventProperties);
  type metadata accessor for BridgedEventProperty();
  v6 = sub_1A5F640B8();

  v7 = 0;
  v8 = *(_QWORD *)(v6 + 64);
  v30 = v6 + 64;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v13 = (unint64_t)(v9 + 63) >> 6;
  if ((v10 & v8) == 0)
    goto LABEL_9;
LABEL_8:
  v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v14 | (v7 << 6); ; i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    v19 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * i);
    v20 = *v19;
    v21 = v19[1];
    v22 = *(id *)(*(_QWORD *)(v6 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A5EF56C4(0, v12[2] + 1, 1, v12);
    v24 = v12[2];
    v23 = v12[3];
    if (v24 >= v23 >> 1)
      v12 = sub_1A5EF56C4((_QWORD *)(v23 > 1), v24 + 1, 1, v12);
    v12[2] = v24 + 1;
    v25 = &v12[7 * v24];
    v25[4] = v20;
    v25[5] = v21;
    v25[6] = v22;
    *(_OWORD *)(v25 + 7) = v32;
    v25[9] = &type metadata for BridgedEventMirrorProperty;
    v25[10] = &off_1E4FD35B0;

    if (v11)
      goto LABEL_8;
LABEL_9:
    v16 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v16 >= v13)
      goto LABEL_29;
    v17 = *(_QWORD *)(v30 + 8 * v16);
    ++v7;
    if (!v17)
    {
      v7 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_29;
      v17 = *(_QWORD *)(v30 + 8 * v7);
      if (!v17)
      {
        v7 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_29;
        v17 = *(_QWORD *)(v30 + 8 * v7);
        if (!v17)
          break;
      }
    }
LABEL_22:
    v11 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
  {
LABEL_29:
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v31 = *v28;
    *v28 = 0x8000000000000000;
    sub_1A5EF5C38((uint64_t)v12, v27, v29, isUniquelyReferenced_nonNull_native);
    *v28 = v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_unknownObjectRelease();
    return;
  }
  v17 = *(_QWORD *)(v30 + 8 * v18);
  if (v17)
  {
    v7 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v7 >= v13)
      goto LABEL_29;
    v17 = *(_QWORD *)(v30 + 8 * v7);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
}

id NSNull.toJsonValue()@<X0>(_QWORD *a1@<X8>)
{
  void *v1;

  a1[3] = sub_1A5F06F60(0, (unint64_t *)&qword_1ED1CBE18);
  *a1 = v1;
  return v1;
}

id NSString.toJsonValue()@<X0>(_QWORD *a1@<X8>)
{
  void *v1;

  a1[3] = sub_1A5F06F60(0, &qword_1ED1CBE28);
  *a1 = v1;
  return v1;
}

id NSNumber.toJsonValue()@<X0>(_QWORD *a1@<X8>)
{
  void *v1;

  a1[3] = sub_1A5F06F60(0, &qword_1ED1CBE20);
  *a1 = v1;
  return v1;
}

uint64_t sub_1A5F06F60(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id NSDate.toJsonValue()@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  void *v2;
  id result;
  double v5;
  double v6;

  v2 = v1;
  result = objc_msgSend(v2, sel_timeIntervalSince1970);
  v6 = v5 * 1000.0;
  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v6 < 9.22337204e18)
  {
    a1[3] = MEMORY[0x1E0DEDC60];
    *a1 = (uint64_t)v6;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_1A5F07030(void *a1)
{
  id result;
  double v2;
  double v3;

  result = objc_msgSend(a1, sel_timeIntervalSince1970);
  v3 = v2 * 1000.0;
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 < 9.22337204e18)
    return (id)sub_1A5F648B0();
LABEL_7:
  __break(1u);
  return result;
}

void NSArray.toJsonValue()(_QWORD *a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;

  v3 = v2;
  v5 = sub_1A5F63CF8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)objc_msgSend(v1, sel_count, v7);
  *(_QWORD *)&v31 = MEMORY[0x1E0DEE9D8];
  sub_1A5EFD0DC(0, v10 & ~(v10 >> 63), 0);
  v11 = v1;
  sub_1A5F64538();

  if (v10 < 0)
  {
    __break(1u);
LABEL_35:
    __break(1u);
    return;
  }
  v29 = a1;
  v30 = v6;
  v12 = MEMORY[0x1E0DEE9B8];
  if (v10)
  {
    sub_1A5ECC4D8(&qword_1ED1CDE28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
    v13 = v12 + 8;
    do
    {
      sub_1A5F64580();
      if (!v34)
        goto LABEL_35;
      sub_1A5F07590((uint64_t)&v33, &v36);
      if (v3)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v5);
        swift_release();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v33);
        return;
      }
      v3 = 0;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v33);
      v14 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A5EFD0DC(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v31;
      }
      v16 = *(_QWORD *)(v14 + 16);
      v15 = *(_QWORD *)(v14 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1A5EFD0DC(v15 > 1, v16 + 1, 1);
        v14 = v31;
      }
      *(_QWORD *)(v14 + 16) = v16 + 1;
      sub_1A5EEFB20((uint64_t)v35, v14 + 32 * v16 + 32, (uint64_t)&qword_1ED1CF848, v13, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1A5EDCBFC);
    }
    while (--v10);
  }
  sub_1A5ECC4D8(&qword_1ED1CDE28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
  sub_1A5F64580();
  if (v34)
  {
    v17 = MEMORY[0x1E0DEE9B8] + 8;
    while (1)
    {
      sub_1A5EF1B2C(&v33, v35);
      sub_1A5F07590((uint64_t)v35, &v36);
      if (v3)
        break;
      v3 = 0;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
      v18 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A5EFD0DC(0, *(_QWORD *)(v18 + 16) + 1, 1);
        v18 = v31;
      }
      v20 = *(_QWORD *)(v18 + 16);
      v19 = *(_QWORD *)(v18 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1A5EFD0DC(v19 > 1, v20 + 1, 1);
        v18 = v31;
      }
      *(_QWORD *)(v18 + 16) = v20 + 1;
      sub_1A5EEFB20((uint64_t)&v33, v18 + 32 * v20 + 32, (uint64_t)&qword_1ED1CF848, v17, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1A5EDCBFC);
      sub_1A5F64580();
      if (!v34)
        goto LABEL_19;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v5);
    swift_release();
  }
  else
  {
LABEL_19:
    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v5);
    sub_1A5EDCB44((uint64_t)&v33);
    v21 = *(_QWORD *)(v31 + 16);
    if (v21)
    {
      v22 = v31 + 32;
      v30 = v31;
      swift_retain();
      v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v24 = MEMORY[0x1E0DEE9B8] + 8;
      do
      {
        sub_1A5EDCB9C(v22, (uint64_t)v35);
        sub_1A5EEFB20((uint64_t)v35, (uint64_t)&v31, (uint64_t)&qword_1ED1CF848, v24, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1A5EDCBFC);
        if (v32)
        {
          sub_1A5EF1B2C(&v31, &v33);
          sub_1A5EF1B2C(&v33, &v31);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v23 = sub_1A5F0806C(0, v23[2] + 1, 1, v23);
          v26 = v23[2];
          v25 = v23[3];
          if (v26 >= v25 >> 1)
            v23 = sub_1A5F0806C((_QWORD *)(v25 > 1), v26 + 1, 1, v23);
          v23[2] = v26 + 1;
          sub_1A5EF1B2C(&v31, &v23[4 * v26 + 4]);
        }
        else
        {
          sub_1A5EDCB44((uint64_t)&v31);
        }
        v22 += 32;
        --v21;
      }
      while (v21);
      swift_release_n();
    }
    else
    {
      swift_release();
      v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    sub_1A5EDCBFC(0, &qword_1ED1CCB00, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v27 = v29;
    v29[3] = v28;
    *v27 = v23;
  }
}

void sub_1A5F07590(uint64_t a1, uint64_t *a2)
{
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  void *v12;
  id v13;
  id v14[5];

  v14[4] = *(id *)MEMORY[0x1E0C80C00];
  sub_1A5EF30B0(a1, (uint64_t)v14);
  sub_1A5F08F04(0, &qword_1ED1CCA18);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v4 = objc_msgSend(v13, sel_toDict);
    v14[0] = 0;
    v5 = objc_msgSend(v4, sel_toJsonValueAndReturnError_, v14);
    v6 = v14[0];
    if (v5)
    {
      sub_1A5F645C8();
      swift_unknownObjectRelease();

LABEL_7:
      swift_unknownObjectRelease();
      return;
    }
    v11 = v6;
    v9 = sub_1A5F63CE0();

    swift_willThrow();
    swift_unknownObjectRelease();

  }
  else
  {
    sub_1A5EF30B0(a1, (uint64_t)v14);
    sub_1A5F08F04(0, qword_1ED1CCD88);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v14[0] = 0;
      v7 = objc_msgSend(v13, sel_toJsonValueAndReturnError_, v14);
      v8 = v14[0];
      if (v7)
      {
        sub_1A5F645C8();
        swift_unknownObjectRelease();
        goto LABEL_7;
      }
      v12 = v8;
      v9 = sub_1A5F63CE0();

      swift_willThrow();
      swift_unknownObjectRelease();
    }
    else
    {
      sub_1A5F08EC0();
      v9 = swift_allocError();
      *v10 = 3;
      swift_willThrow();
    }
  }
  *a2 = v9;
}

id sub_1A5F077D4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5F07FA8(a1, a2, a3, (void (*)(_QWORD *__return_ptr))NSArray.toJsonValue());
}

void NSDictionary.toJsonValue()()
{
  _QWORD *v0;

  sub_1A5F640AC();
  sub_1A5F08EC0();
  swift_allocError();
  *v0 = 4;
  swift_willThrow();
}

id sub_1A5F07F9C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5F07FA8(a1, a2, a3, (void (*)(_QWORD *__return_ptr))NSDictionary.toJsonValue());
}

id sub_1A5F07FA8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr))
{
  id v5;
  void *v6;
  _QWORD v8[4];

  v5 = a1;
  a4(v8);

  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  v6 = (void *)sub_1A5F64874();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  return v6;
}

char *sub_1A5F08058(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1A5F081A4(a1, a2, a3, a4, &qword_1ED1CCB08, (uint64_t)&type metadata for DataEventTrait);
}

_QWORD *sub_1A5F0806C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1A5EDCBFC(0, &qword_1ED1CCB10, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A5F090E8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1A5F08190(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1A5F081A4(a1, a2, a3, a4, &qword_1ED1CD978, MEMORY[0x1E0DEDE70]);
}

char *sub_1A5F081A4(char *result, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  int64_t v11;
  char *v12;
  size_t v13;
  char *v14;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = *((_QWORD *)a4 + 3);
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = *((_QWORD *)a4 + 2);
    if (v9 <= v10)
      v11 = *((_QWORD *)a4 + 2);
    else
      v11 = v9;
    if (v11)
    {
      sub_1A5EDCBFC(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (char *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      *((_QWORD *)v12 + 2) = v10;
      *((_QWORD *)v12 + 3) = 2 * v13 - 64;
      v14 = v12 + 32;
      if ((v7 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[v10 + 32])
          memmove(v14, a4 + 32, v10);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = (char *)MEMORY[0x1E0DEE9D8];
      v14 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A5F091DC(0, v10, v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A5F082A8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1A5EDCBFC(0, &qword_1ED1CCC08, (uint64_t)&type metadata for TrackerError.MissingData, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A5F093C8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A5F083E0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1A5F09F64(0, &qword_1ED1CBE40, (uint64_t)&qword_1ED1CBE30, (uint64_t)type metadata accessor for DataEventStack.Entry, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A5EC7440);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A5F094BC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5F0851C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A5EEF3D8(a1, a2, a3, a4, &qword_1EE80CCE0, (uint64_t (*)(uint64_t))sub_1A5F09C4C);
}

_QWORD *sub_1A5F08530(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1A5EDCBFC(0, &qword_1EE80CD18, (uint64_t)&type metadata for TrackerWillSubmitObserver, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A5F095D4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A5F08668(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1A5EDCBFC(0, &qword_1EE80CCD8, (uint64_t)&type metadata for AnyDataEventEntry, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4])
          memmove(v12, a4 + 4, 88 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A5F097DC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A5F087A4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1A5F09F64(0, &qword_1EE80CCF0, (uint64_t)&qword_1EE80CCF8, (uint64_t)type metadata accessor for SnapshotLevel, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A5F09AC0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A5F096C8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A5F088CC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1A5ECD49C(0, &qword_1EE80CD00, (uint64_t (*)(uint64_t))sub_1A5F09FB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A5F098CC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A5F089EC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1A5F09AC0(0, &qword_1EE80CCD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A5F09B30(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A5F08B04(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1A5EDCBFC(0, &qword_1EE80CCC8, (uint64_t)&type metadata for SnapshotEntry, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 104);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[13 * v8 + 4])
          memmove(v12, a4 + 4, 104 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A5F099D0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A5F08C40(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1A5ECD49C(0, &qword_1ED1CBE48, (uint64_t (*)(uint64_t))sub_1A5F09E58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A5F092C0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A5F08D7C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A5F08D98(a1, a2, a3, a4, &qword_1ED1CB648, (uint64_t (*)(uint64_t))sub_1A5F09CC4, (void (*)(_QWORD))sub_1A5F09E18);
}

_QWORD *sub_1A5F08D98(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), void (*a7)(_QWORD))
{
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    v11 = a2;
    goto LABEL_8;
  }
  v10 = a4[3];
  v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2)
    goto LABEL_8;
  if (v11 + 0x4000000000000000 >= 0)
  {
    v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v11 = a2;
LABEL_8:
    v12 = a4[2];
    if (v11 <= v12)
      v13 = a4[2];
    else
      v13 = v11;
    if (v13)
    {
      sub_1A5ECD49C(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v14 = (_QWORD *)swift_allocObject();
      v15 = _swift_stdlib_malloc_size(v14);
      v16 = v15 - 32;
      if (v15 < 32)
        v16 = v15 - 17;
      v14[2] = v12;
      v14[3] = 2 * (v16 >> 4);
      v17 = v14 + 4;
      if ((v9 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v17 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[2 * v12 + 4])
          memmove(v17, a4 + 4, 16 * v12);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A5F09D14(0, v12, (unint64_t)v17, (uint64_t)a4, a7);
LABEL_24:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A5F08EC0()
{
  unint64_t result;

  result = qword_1EE80CCC0;
  if (!qword_1EE80CCC0)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for DataEventError, &type metadata for DataEventError);
    atomic_store(result, (unint64_t *)&qword_1EE80CCC0);
  }
  return result;
}

uint64_t sub_1A5F08F04(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1A5F08F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t result;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  v8 = v7;
  v15 = *v7;
  v17 = sub_1A5EF11E8(a5, a6);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0)
    goto LABEL_7;
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_1A5F062B8();
LABEL_7:
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = (_QWORD *)(v23[7] + 32 * v17);
      result = swift_bridgeObjectRelease();
      *v24 = a1;
      v24[1] = a2;
      v24[2] = a3;
      v24[3] = a4;
      return result;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    v28 = (uint64_t *)(v23[6] + 16 * v17);
    *v28 = a5;
    v28[1] = a6;
    v29 = (_QWORD *)(v23[7] + 32 * v17);
    *v29 = a1;
    v29[1] = a2;
    v29[2] = a3;
    v29[3] = a4;
    v30 = v23[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (!v31)
    {
      v23[2] = v32;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1A5F04DCC(v20, a7 & 1);
  v26 = sub_1A5EF11E8(a5, a6);
  if ((v21 & 1) == (v27 & 1))
  {
    v17 = v26;
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A5F648C8();
  __break(1u);
  return result;
}

uint64_t sub_1A5F090E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

char *sub_1A5F091DC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5F092C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      sub_1A5F09E58(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5F093C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5F094BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1A5EC7440(0, &qword_1ED1CBE30, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for DataEventStack.Entry);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5F095D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5F096C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_1A5F09AC0(0, (unint64_t *)&qword_1EE80CCF8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SnapshotLevel);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5F097DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 88 * a1 + 32;
    v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5F098CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_1A5F09FB8(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t sub_1A5F099D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 104 * a1 + 32;
    v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

void sub_1A5F09AC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1A5EDCBFC(255, &qword_1EE80CCB8, (uint64_t)&type metadata for AnyDataEventEntry, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1A5F09B30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1A5EDCBFC(0, &qword_1EE80CCB8, (uint64_t)&type metadata for AnyDataEventEntry, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

void sub_1A5F09C4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EE80CCE8)
  {
    v2 = type metadata accessor for SummaryEventData();
    v3 = sub_1A5ECC4D8((unint64_t *)&qword_1ED1CC970, (uint64_t (*)(uint64_t))type metadata accessor for SummaryEventData, (uint64_t)&unk_1A5F6B624);
    v5 = type metadata accessor for DataEventStack.Entry(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EE80CCE8);
  }
}

unint64_t sub_1A5F09CC4()
{
  unint64_t result;

  result = qword_1ED1CB650;
  if (!qword_1ED1CB650)
  {
    type metadata accessor for ViewingSession();
    result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1ED1CB650);
  }
  return result;
}

uint64_t sub_1A5F09D14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      a5(0);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

unint64_t sub_1A5F09E18()
{
  unint64_t result;

  result = qword_1ED1CB658;
  if (!qword_1ED1CB658)
  {
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1ED1CB658);
  }
  return result;
}

void sub_1A5F09E58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED1CBE38)
  {
    sub_1A5EC7440(255, (unint64_t *)&qword_1ED1CC9A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for SessionData);
    v3 = v2;
    v4 = sub_1A5F09EC8();
    v6 = type metadata accessor for DataEventStack.Entry(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED1CBE38);
  }
}

unint64_t sub_1A5F09EC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1CC998;
  if (!qword_1ED1CC998)
  {
    sub_1A5EC7440(255, (unint64_t *)&qword_1ED1CC9A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for SessionData);
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for SessionData<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED1CC998);
  }
  return result;
}

uint64_t sub_1A5F09F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Tracker.Timer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1A5F09F64(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    v6 = sub_1A5F64850();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1A5F09FB8(uint64_t a1)
{
  sub_1A5ECD49C(a1, &qword_1EE80CD08, (uint64_t (*)(uint64_t))sub_1A5F09FD4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SnapshotLevel);
}

void sub_1A5F09FD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE80CD10)
  {
    sub_1A5EDCBFC(255, &qword_1EE80CCB8, (uint64_t)&type metadata for AnyDataEventEntry, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1A5F640D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE80CD10);
  }
}

id *FlushManager.deinit()
{
  id *v0;
  char *v1;
  uint64_t v2;

  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 8));
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 13));
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 18));
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 23));

  swift_release();
  v1 = (char *)v0 + OBJC_IVAR____TtC12AppAnalytics12FlushManager_logger;
  v2 = sub_1A5F63F98();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t FlushManager.__deallocating_deinit()
{
  FlushManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1A5F0A114(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

char *sub_1A5F0A124(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  char *v44;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD v55[5];

  v46 = a1;
  v47 = a5;
  v50 = a2;
  v51 = a4;
  v49 = a9;
  v12 = sub_1A5F63DD0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a8 - 8);
  v52 = a8;
  v53 = v16;
  MEMORY[0x1E0C80A78](v17);
  v48 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v19);
  v54 = (char *)&v46 - v21;
  (*(void (**)(double))(v22 + 32))(v20);
  type metadata accessor for UploadDropboxFileManager();
  v23 = swift_allocObject();
  type metadata accessor for MescalSigner();
  v24 = swift_allocObject();
  v25 = type metadata accessor for SHA1Base64SigningService();
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v24;
  *(_QWORD *)(v26 + 24) = &off_1E4FCFB58;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, (uint64_t)a5 + OBJC_IVAR___AAUploadBatchEventConfig_directory, v12);
  swift_retain();
  v27 = objc_msgSend(a3, sel_name);
  v28 = sub_1A5F64130();
  v30 = v29;

  type metadata accessor for DocumentDirectoryUploadDropboxPathProvider(0);
  v31 = swift_allocObject();
  swift_retain();
  v32 = sub_1A5ED5260((uint64_t)v15, v28, v30, v23, v31);
  v55[3] = v25;
  v55[4] = &off_1E4FD0158;
  v55[0] = v26;
  type metadata accessor for FlushManager();
  v33 = (char *)swift_allocObject();
  v34 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v55, v25);
  v35 = MEMORY[0x1E0C80A78](v34);
  v37 = (uint64_t *)((char *)&v46 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v38 + 16))(v37, v35);
  v39 = *v37;
  v40 = (uint64_t)v48;
  v41 = v52;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v48, v54, v52);
  swift_retain();
  swift_retain();
  swift_retain();
  v42 = v47;
  v43 = v50;
  v44 = sub_1A5F0A928(v46, v50, (uint64_t)a3, v51, v47, v40, v39, v32, v23, v33, v41, v49);
  swift_release();

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v52);
  return v44;
}

uint64_t sub_1A5F0A450()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F0A494()
{
  return type metadata accessor for FlushManager();
}

uint64_t sub_1A5F0A49C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63F98();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for FlushManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FlushManager.repairThenFlushOnQueue(repair:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t storeEnumTagSinglePayload for FlushManager.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A5F0A5BC + 4 * byte_1A5F6745D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A5F0A5F0 + 4 * byte_1A5F67458[v4]))();
}

uint64_t sub_1A5F0A5F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5F0A5F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5F0A600);
  return result;
}

uint64_t sub_1A5F0A60C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5F0A614);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A5F0A618(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5F0A620(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FlushManager.State()
{
  return &type metadata for FlushManager.State;
}

unint64_t sub_1A5F0A640()
{
  unint64_t result;

  result = qword_1EE80CD20[0];
  if (!qword_1EE80CD20[0])
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F67590, &type metadata for FlushManager.State);
    atomic_store(result, qword_1EE80CD20);
  }
  return result;
}

void sub_1A5F0A684()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CB700)
  {
    sub_1A5F06F60(255, (unint64_t *)&qword_1ED1CB6F8);
    v0 = sub_1A5F64568();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CB700);
  }
}

uint64_t sub_1A5F0A6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (**v16)(uint64_t);
  unint64_t v17;
  unint64_t v18;
  _QWORD v20[2];
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a2;
  v3 = type metadata accessor for Batch();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for BatchRepair();
  v7 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1A5EE932C(0, v10, 0);
    v12 = *(unsigned __int8 *)(v4 + 80);
    v13 = a1 + ((v12 + 32) & ~v12);
    v14 = *(_QWORD *)(v4 + 72);
    v23 = (v12 + 16) & ~v12;
    v24 = v14;
    v21 = (v5 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = v12 | 7;
    v20[1] = v21 + 8;
    do
    {
      sub_1A5ED7E14(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
      v15 = swift_allocObject();
      sub_1A5ECD6B0((uint64_t)v6, v15 + v23, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
      *(_QWORD *)(v15 + v21) = v26;
      sub_1A5ED7E14(v13, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Batch);
      v16 = (uint64_t (**)(uint64_t))&v9[*(int *)(v25 + 20)];
      *v16 = sub_1A5EE9C84;
      v16[1] = (uint64_t (*)(uint64_t))v15;
      v11 = v27;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A5EE932C(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v11 = v27;
      }
      v18 = *(_QWORD *)(v11 + 16);
      v17 = *(_QWORD *)(v11 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1A5EE932C(v17 > 1, v18 + 1, 1);
        v11 = v27;
      }
      *(_QWORD *)(v11 + 16) = v18 + 1;
      sub_1A5ECD6B0((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for BatchRepair);
      v13 += v24;
      --v10;
    }
    while (v10);
  }
  return v11;
}

char *sub_1A5F0A928(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *boxed_opaque_existential_1;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _BYTE *v29;
  _DWORD *v30;
  id v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  _QWORD v43[5];
  _QWORD v44[5];
  _QWORD v45[5];
  uint64_t v46[6];

  v34 = a7;
  v41 = a5;
  v37 = a4;
  v40 = a3;
  v39 = a2;
  v38 = a1;
  v36 = sub_1A5F6449C();
  v35 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A5F64490();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1A5F64028();
  MEMORY[0x1E0C80A78](v17);
  v46[3] = a11;
  v46[4] = a12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v46);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a11 - 8) + 32))(boxed_opaque_existential_1, a6, a11);
  v45[3] = type metadata accessor for DocumentDirectoryUploadDropboxPathProvider(0);
  v45[4] = &off_1E4FD57A8;
  v45[0] = a8;
  v44[3] = type metadata accessor for UploadDropboxFileManager();
  v44[4] = &off_1E4FD3EE8;
  v44[0] = a9;
  v43[3] = type metadata accessor for SHA1Base64SigningService();
  v43[4] = &off_1E4FD0158;
  v43[0] = v34;
  sub_1A5F06F60(0, (unint64_t *)&qword_1ED1CF828);
  sub_1A5F63FF8();
  v42 = MEMORY[0x1E0DEE9D8];
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  sub_1A5ECC4D8((unint64_t *)&qword_1ED1CF820, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CF810, v19, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1A5ED26BC((unint64_t *)&qword_1ED1CF818, (unint64_t *)&qword_1ED1CF810, v19);
  sub_1A5F645E0();
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v15, *MEMORY[0x1E0DEF8D0], v36);
  *((_QWORD *)a10 + 30) = sub_1A5F644D8();
  v20 = OBJC_IVAR____TtC12AppAnalytics12FlushManager_logger;
  if (qword_1ED1CD440 != -1)
    swift_once();
  v21 = sub_1A5F63F98();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED1D2190);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(&a10[v20], v22, v21);
  *((_QWORD *)a10 + 2) = v38;
  *((_QWORD *)a10 + 3) = &off_1E4FD4890;
  v23 = v39;
  v24 = v40;
  *((_QWORD *)a10 + 4) = v39;
  *((_QWORD *)a10 + 5) = v24;
  v25 = v41;
  *((_QWORD *)a10 + 6) = v37;
  *((_QWORD *)a10 + 7) = v25;
  sub_1A5ECE02C((uint64_t)v46, (uint64_t)(a10 + 64));
  sub_1A5ECE02C((uint64_t)v43, (uint64_t)(a10 + 104));
  sub_1A5ECE02C((uint64_t)v45, (uint64_t)(a10 + 144));
  sub_1A5ECE02C((uint64_t)v44, (uint64_t)(a10 + 184));
  swift_beginAccess();
  sub_1A5EDCBFC(0, (unint64_t *)&qword_1ED1CDB28, (uint64_t)&type metadata for FlushManager.State, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for Atomic);
  v26 = swift_allocObject();
  type metadata accessor for UnfairLock();
  v27 = swift_allocObject();
  swift_retain();
  v28 = v23;
  swift_unknownObjectRetain();
  v29 = v25;
  v30 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v27 + 16) = v30;
  *v30 = 0;
  *(_DWORD *)(v27 + 24) = 0x10000;
  *(_QWORD *)(v26 + 16) = v27;
  *(_BYTE *)(v26 + 24) = 0;
  *((_QWORD *)a10 + 29) = v26;
  swift_endAccess();
  LOBYTE(v26) = v29[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled];
  v31 = objc_allocWithZone((Class)type metadata accessor for TransparencyLogging());
  v32 = sub_1A5ED33E8(v26);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
  *((_QWORD *)a10 + 28) = v32;
  return a10;
}

uint64_t sub_1A5F0ADA0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A5F0ADC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A5F63DD0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F0AE68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  v1 = type metadata accessor for Batch();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v2 + *(int *)(v1 + 40);
  v4 = sub_1A5F63F08();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_bridgeObjectRelease();
  v7 = v2 + *(int *)(v1 + 52);
  if (!v6(v7, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A5F63DD0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1A5F0AFFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A5F63DD0();
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80)), v3);
}

uint64_t sub_1A5F0B040()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t SnapshotEvent.isValid.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t SnapshotEvent.entries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SnapshotEvent.missingData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A5F0B07C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  char v9;
  uint64_t result;

  type metadata accessor for SnapshotEvent.MissingData(255, a3, a4, a4);
  v8 = sub_1A5F6431C();
  swift_bridgeObjectRetain();
  MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEAF38], v8);
  v9 = sub_1A5F64244();
  result = swift_bridgeObjectRelease();
  *(_BYTE *)a5 = (v9 & 1) == 0;
  *(_QWORD *)(a5 + 8) = a1;
  *(_QWORD *)(a5 + 16) = a2;
  return result;
}

BOOL static SnapshotEvent.MissingData.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v2 = *a1;
  v3 = *a2;
  v4 = (*a1 & 0x7FFFFFFFFFFFFFFFLL) == (*a2 & 0x7FFFFFFFFFFFFFFFLL);
  if (*a2 >= 0)
    v4 = 0;
  v5 = v3 >= 0 && v2 == v3;
  if (v2 >= 0)
    return v5;
  else
    return v4;
}

uint64_t sub_1A5F0B178()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5F0B1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A5F0B1DC(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A5F0B240(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrackerWillSubmitObserver(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TrackerWillSubmitObserver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for SnapshotEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SnapshotEvent);
}

uint64_t sub_1A5F0B318(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_1A5F0B374(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A5F0B3C4(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_1A5F0B3D0(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1A5F0B3E0(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

uint64_t type metadata accessor for SnapshotEvent.MissingData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SnapshotEvent.MissingData);
}

BOOL sub_1A5F0B400(_QWORD *a1)
{
  return *a1 >= 0;
}

void sub_1A5F0B478(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v5;
  id v6;
  char *v7;

  v5 = qword_1ED1CFC08;
  v7 = a1;
  if (v5 != -1)
    swift_once();
  v6 = (id)qword_1ED1CE7B0;
  sub_1A5F64454();
  sub_1A5F63F80();

  a4(*(_QWORD *)&v7[OBJC_IVAR___AATrackingConsent_accessGroup]);
}

void sub_1A5F0B530(uint64_t a1)
{
  id v2;

  if ((*(_BYTE *)(a1 + OBJC_IVAR___AATrackingConsent_consented) & 1) == 0)
  {
    *(_BYTE *)(a1 + OBJC_IVAR___AATrackingConsent_consented) = 1;
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v2 = (id)qword_1ED1CE7B0;
    sub_1A5F64454();
    sub_1A5F63F80();

    dispatch_group_leave(*(dispatch_group_t *)(a1 + OBJC_IVAR___AATrackingConsent_accessGroup));
  }
}

id TrackingConsent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A5F0B6BC()
{
  swift_release();
  return swift_deallocObject();
}

BOOL BridgedEventPropertyRequirement.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

unint64_t sub_1A5F0B708()
{
  unint64_t result;

  result = qword_1EE80CE40;
  if (!qword_1EE80CE40)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for BridgedEventPropertyRequirement, &type metadata for BridgedEventPropertyRequirement);
    atomic_store(result, (unint64_t *)&qword_1EE80CE40);
  }
  return result;
}

_QWORD *sub_1A5F0B74C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1 && *result != 0;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for BridgedEventPropertyRequirement()
{
  return &type metadata for BridgedEventPropertyRequirement;
}

uint64_t sub_1A5F0B78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1A5F0B810;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1A5F0B810(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

id _s12AppAnalytics14ViewingSessionCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A5F0B8A4()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1A5F64778();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1A5F0B8F4(char a1)
{
  if ((a1 & 1) != 0)
    return 1635017060;
  else
    return 7955819;
}

uint64_t sub_1A5F0B91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85B8C3C](&unk_1A5F678E0, a3);
  return sub_1A5F64898();
}

uint64_t sub_1A5F0B970(uint64_t a1)
{
  MEMORY[0x1A85B8C3C](&unk_1A5F678E0, a1);
  return sub_1A5F6425C();
}

uint64_t sub_1A5F0B9BC()
{
  MEMORY[0x1A85B8C3C](&unk_1A5F678E0);
  return sub_1A5F64274();
}

uint64_t sub_1A5F0BA0C()
{
  MEMORY[0x1A85B8C3C](&unk_1A5F678E0);
  return sub_1A5F64268();
}

uint64_t sub_1A5F0BA5C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5F0B8A4();
  *a1 = result;
  return result;
}

uint64_t sub_1A5F0BA88@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A5F0B8F4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A5F0BAB0()
{
  char *v0;

  return sub_1A5F0B8F4(*v0);
}

uint64_t sub_1A5F0BAB8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5F0B8A4();
  *a1 = result;
  return result;
}

uint64_t sub_1A5F0BADC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5F0C23C();
  *a1 = result;
  return result;
}

uint64_t sub_1A5F0BB04(uint64_t a1)
{
  MEMORY[0x1A85B8C3C](&unk_1A5F67980, a1);
  return sub_1A5F6497C();
}

uint64_t sub_1A5F0BB38(uint64_t a1)
{
  MEMORY[0x1A85B8C3C](&unk_1A5F67980, a1);
  return sub_1A5F64988();
}

uint64_t SessionData.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14[4];
  char v15;
  char v16;

  v6 = *(_QWORD *)(a2 + 16);
  v14[0] = *(_QWORD *)(a2 + 24);
  v14[1] = v6;
  v7 = type metadata accessor for SessionData.Keys(255, v6, v14[0], a4);
  MEMORY[0x1A85B8C3C](&unk_1A5F67980, v7);
  v8 = sub_1A5F64838();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5F64970();
  v16 = 0;
  v12 = v14[3];
  sub_1A5F647FC();
  if (!v12)
  {
    v15 = 1;
    sub_1A5F64820();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t type metadata accessor for SessionData.Keys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SessionData.Keys);
}

uint64_t SessionData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  char v36;
  char v37;

  v28 = a4;
  v27 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v30 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SessionData.Keys(255, v8, v9, v10);
  MEMORY[0x1A85B8C3C](&unk_1A5F67980, v11);
  v34 = sub_1A5F647D8();
  v29 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v13 = (char *)&v26 - v12;
  v31 = a2;
  v32 = a3;
  v15 = type metadata accessor for SessionData(0, a2, a3, v14);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v26 - v17);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v33 = v13;
  v19 = (uint64_t)v35;
  sub_1A5F64958();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v20 = v29;
  v21 = v30;
  v26 = v16;
  v22 = v31;
  v35 = a1;
  v37 = 0;
  *v18 = sub_1A5F6479C();
  v18[1] = v23;
  v36 = 1;
  sub_1A5F647C0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v33, v34);
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))((char *)v18 + *(int *)(v15 + 36), v21, v22);
  v24 = v26;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v26 + 16))(v28, v18, v15);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v24 + 8))(v18, v15);
}

uint64_t sub_1A5F0BF30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return SessionData.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_1A5F0BF4C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return SessionData.encode(to:)(a1, a2, a3, a4);
}

uint64_t *sub_1A5F0BF60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v13(v11, v12, v4);
  }
  return a1;
}

_QWORD *sub_1A5F0C020(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_1A5F0C098(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_1A5F0C0E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A5F0C150(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5F0C19C + 4 * byte_1A5F677C3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5F0C1D0 + 4 * byte_1A5F677BE[v4]))();
}

uint64_t sub_1A5F0C1D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5F0C1D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5F0C1E0);
  return result;
}

uint64_t sub_1A5F0C1EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5F0C1F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5F0C1F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5F0C200(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1A5F0C20C()
{
  JUMPOUT(0x1A85B8C3CLL);
}

void sub_1A5F0C21C()
{
  JUMPOUT(0x1A85B8C3CLL);
}

void sub_1A5F0C22C()
{
  JUMPOUT(0x1A85B8C3CLL);
}

uint64_t sub_1A5F0C23C()
{
  return 2;
}

uint64_t URLSessionUploadClientFactory.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t URLSessionUploadClientFactory.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t URLSessionUploadClientFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1A5F0C26C()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_taskDescription);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1A5F64130();

  return v3;
}

void (*sub_1A5F0C2D0(uint64_t *a1))(uint64_t a1, char a2)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = (uint64_t)v1;
  v3 = objc_msgSend(*v1, sel_taskDescription);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1A5F64130();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1A5F0C344;
}

void sub_1A5F0C344(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v3;
  id v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = **(void ***)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    if (v2)
    {
      swift_bridgeObjectRetain();
      v4 = (id)sub_1A5F6410C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = 0;
    }
    objc_msgSend(v3, sel_setTaskDescription_, v4);
    swift_bridgeObjectRelease();
  }
  else if (v2)
  {
    v4 = (id)sub_1A5F6410C();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setTaskDescription_, v4);
  }
  else
  {
    v4 = 0;
    objc_msgSend(v3, sel_setTaskDescription_, 0);
  }

}

uint64_t dispatch thunk of UploadClient.uploadTask(with:from:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of UploadClientFactory.makeUploadClient()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of UploadTask.taskDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of UploadTask.taskDescription.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of UploadTask.taskDescription.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of UploadTask.resume()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t method lookup function for URLSessionUploadClientFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of URLSessionUploadClientFactory.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

ValueMetadata *type metadata accessor for ProxyURLSessionUploadTask()
{
  return &type metadata for ProxyURLSessionUploadTask;
}

uint64_t sub_1A5F0C458()
{
  sub_1A5F64910();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  return sub_1A5F64928();
}

uint64_t sub_1A5F0C4DC()
{
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5F0C54C()
{
  sub_1A5F64910();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  return sub_1A5F64928();
}

uint64_t sub_1A5F0C5CC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1A5F64880(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_1A5F64880();
  }
  return result;
}

_QWORD *SessionGroupManager.__allocating_init(accessQueue:)(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)swift_allocObject();
  v3 = MEMORY[0x1E0DEE9D8];
  v2[3] = sub_1A5ECE1F8(MEMORY[0x1E0DEE9D8]);
  v2[4] = sub_1A5ECE1F8(v3);
  v2[2] = a1;
  return v2;
}

uint64_t SessionGroupManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SessionGroupManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for SessionGroupManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SessionGroupManager.__allocating_init(accessQueue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t destroy for SessionGroupManager.Key()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SessionGroupManager.Key(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SessionGroupManager.Key(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for SessionGroupManager.Key(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionGroupManager.Key(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionGroupManager.Key(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionGroupManager.Key()
{
  return &type metadata for SessionGroupManager.Key;
}

uint64_t sub_1A5F0C8E8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A5F0C8F0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5F0C928
                                                            + 4 * asc_1A5F67BD4[a3]))(0x73736563637573, 0xE700000000000000);
}

uint64_t sub_1A5F0C928()
{
  return 0x7972746572;
}

uint64_t sub_1A5F0C93C()
{
  return 0x64656C696166;
}

uint64_t sub_1A5F0C950@<X0>(uint64_t a1@<X8>)
{
  ContentType.description.getter(a1);
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  return 0x696F70646E456F6ELL;
}

uint64_t sub_1A5F0C9B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = a1 | v1;
  if (a1 ^ 1 | v1)
    v3 = 0x656E6F646E616261;
  else
    v3 = 0x656E696C66666FLL;
  if (v2)
    return v3;
  else
    return 0x64656C6261736964;
}

void sub_1A5F0CA18(uint64_t a1)
{
  sub_1A5F0D1F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1A5F0CA34()
{
  sub_1A5F64634();
  swift_bridgeObjectRelease();
  sub_1A5F64844();
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  swift_bridgeObjectRetain();
  sub_1A5F640C4();
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x6F43737574617473;
}

uint64_t sub_1A5F0CB30(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];
  char v13;
  char v14;

  sub_1A5F0D610(0, &qword_1EE80CED8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v12 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5F0CFA8();
  sub_1A5F64970();
  v14 = 0;
  sub_1A5F64814();
  if (!v3)
  {
    v12[1] = a3;
    v13 = 1;
    sub_1A5EF7BD4();
    sub_1A5F0D66C((unint64_t *)&qword_1ED1CBD40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1A5F64820();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

BOOL sub_1A5F0CC8C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1A5F0CCA4()
{
  _BYTE *v0;

  if (*v0)
    return 0x73726564616568;
  else
    return 0x6F43737574617473;
}

uint64_t sub_1A5F0CCE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5F0D388(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A5F0CD08(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1A5F0CD14()
{
  sub_1A5F0CFA8();
  return sub_1A5F6497C();
}

uint64_t sub_1A5F0CD3C()
{
  sub_1A5F0CFA8();
  return sub_1A5F64988();
}

uint64_t sub_1A5F0CD64(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2)
    return sub_1A5F0CFEC(a1[1], a2[1]);
  else
    return 0;
}

uint64_t sub_1A5F0CD88@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1A5F0D484(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1A5F0CDB0(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A5F0CB30(a1, *v1, v1[1]);
}

uint64_t sub_1A5F0CDC8()
{
  return sub_1A5F0CA34();
}

ValueMetadata *type metadata accessor for UploadResponse()
{
  return &type metadata for UploadResponse;
}

uint64_t sub_1A5F0CDE4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t _s12AppAnalytics12UploadResultOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A5F0CDE4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for UploadResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A5F0CDE4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A5EF8280(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for UploadResult(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A5EF8280(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for UploadResult(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UploadResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A5F0CF68(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1A5F0CF80(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UploadResult()
{
  return &type metadata for UploadResult;
}

unint64_t sub_1A5F0CFA8()
{
  unint64_t result;

  result = qword_1EE80CEE0;
  if (!qword_1EE80CEE0)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F67DA0, &type metadata for UploadResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE80CEE0);
  }
  return result;
}

uint64_t sub_1A5F0CFEC(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  char v26;
  int64_t v27;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v27)
        return 1;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v27)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
          break;
      }
    }
LABEL_22:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    v14 = 16 * v10;
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v14);
    v20 = *v18;
    v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_1A5EF11E8(v16, v17);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v24 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v26 = sub_1A5F64880();
      result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
        return 0;
    }
  }
  v13 = v11 + 3;
  if (v13 >= v27)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_34:
  __break(1u);
  return result;
}

void sub_1A5F0D1F0(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

BOOL sub_1A5F0D22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return !a6 && v8 == a4 && (sub_1A5F0CFEC(v7, v6) & 1) != 0;
}

uint64_t sub_1A5F0D388(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F43737574617473 && a2 == 0xEA00000000006564;
  if (v2 || (sub_1A5F64880() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73726564616568 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A5F64880();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A5F0D484(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[32];

  sub_1A5F0D610(0, &qword_1EE80CEE8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v10[-v6];
  v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1A5F0CFA8();
  sub_1A5F64958();
  if (!v1)
  {
    v10[31] = 0;
    v8 = sub_1A5F647B4();
    sub_1A5EF7BD4();
    v10[15] = 1;
    sub_1A5F0D66C(&qword_1EE80CEF0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    sub_1A5F647C0();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v8;
}

void sub_1A5F0D610(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1A5F0CFA8();
    v7 = a3(a1, &type metadata for UploadResponse.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1A5F0D66C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    sub_1A5EF7BD4();
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x1A85B8C3C](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UploadResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5F0D714 + 4 * byte_1A5F67BE3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5F0D748 + 4 * byte_1A5F67BDE[v4]))();
}

uint64_t sub_1A5F0D748(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5F0D750(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5F0D758);
  return result;
}

uint64_t sub_1A5F0D764(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5F0D76CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5F0D770(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5F0D778(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UploadResponse.CodingKeys()
{
  return &type metadata for UploadResponse.CodingKeys;
}

unint64_t sub_1A5F0D798()
{
  unint64_t result;

  result = qword_1EE80CEF8;
  if (!qword_1EE80CEF8)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F67D78, &type metadata for UploadResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE80CEF8);
  }
  return result;
}

unint64_t sub_1A5F0D7E0()
{
  unint64_t result;

  result = qword_1EE80CF00;
  if (!qword_1EE80CF00)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F67CE8, &type metadata for UploadResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE80CF00);
  }
  return result;
}

unint64_t sub_1A5F0D828()
{
  unint64_t result;

  result = qword_1EE80CF08;
  if (!qword_1EE80CF08)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F67D10, &type metadata for UploadResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE80CF08);
  }
  return result;
}

uint64_t sub_1A5F0D86C()
{
  return MEMORY[0x1E0DEE9B8] + 8;
}

ValueMetadata *type metadata accessor for BridgedRawEventMirrorProperty()
{
  return &type metadata for BridgedRawEventMirrorProperty;
}

uint64_t Client.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AAClient_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Client.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AAClient_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A5F0D950()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  char v19;

  v1 = v0 + OBJC_IVAR___AAClient_buildNumber;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR___AAClient_buildNumber);
  v2 = *(_QWORD *)(v1 + 8);
  if ((v2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(v2) & 0xF;
  else
    v4 = v3 & 0xFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  if (v4)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      v5 = sub_1A5F64220();
      v7 = v6;
      swift_bridgeObjectRelease();
      if (v5 == 46 && v7 == 0xE100000000000000)
        break;
      v8 = sub_1A5F64880();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0 || 4 * v4 == (unint64_t)sub_1A5F641A8() >> 14)
        goto LABEL_12;
    }
    swift_bridgeObjectRelease();
  }
LABEL_12:
  v9 = sub_1A5F64238();
  v11 = v10;
  v13 = v12;
  v15 = v14;
  swift_bridgeObjectRelease();
  if ((v9 ^ v11) < 0x4000)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v16 = sub_1A5F0E408(v9, v11, v13, v15, 10);
    if ((v17 & 0x100) != 0)
      v16 = (uint64_t)sub_1A5F0E09C(v9, v11, v13, v15, 10);
    v18 = v16;
    v19 = v17;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      return 0;
    else
      return v18;
  }
}

id sub_1A5F0DAF8()
{
  void *v0;

  swift_bridgeObjectRetain();
  v0 = (void *)sub_1A5F6410C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A5F0DBEC()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + OBJC_IVAR___AAClient_version);
  swift_bridgeObjectRetain();
  sub_1A5F641B4();
  swift_bridgeObjectRetain();
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  return v2;
}

id Client.__allocating_init(identifier:name:version:buildNumber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  objc_class *v8;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  objc_super v23;

  v17 = (char *)objc_allocWithZone(v8);
  v18 = &v17[OBJC_IVAR___AAClient_identifier];
  *(_QWORD *)v18 = a1;
  *((_QWORD *)v18 + 1) = a2;
  v19 = &v17[OBJC_IVAR___AAClient_name];
  *(_QWORD *)v19 = a3;
  *((_QWORD *)v19 + 1) = a4;
  v20 = &v17[OBJC_IVAR___AAClient_version];
  *(_QWORD *)v20 = a5;
  *((_QWORD *)v20 + 1) = a6;
  v21 = &v17[OBJC_IVAR___AAClient_buildNumber];
  *(_QWORD *)v21 = a7;
  *((_QWORD *)v21 + 1) = a8;
  v23.receiver = v17;
  v23.super_class = v8;
  return objc_msgSendSuper2(&v23, sel_init);
}

id Client.__allocating_init(identifier:name:version:build:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v1 = objc_allocWithZone(v0);
  v2 = (void *)sub_1A5F6410C();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1A5F6410C();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1A5F6410C();
  swift_bridgeObjectRelease();
  sub_1A5F64844();
  v5 = (void *)sub_1A5F6410C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v1, sel_initWithIdentifier_name_version_buildNumber_, v2, v3, v4, v5);

  return v6;
}

id Client.init(identifier:name:version:build:)()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v1 = (void *)sub_1A5F6410C();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_1A5F6410C();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1A5F6410C();
  swift_bridgeObjectRelease();
  sub_1A5F64844();
  v4 = (void *)sub_1A5F6410C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v0, sel_initWithIdentifier_name_version_buildNumber_, v1, v2, v3, v4);

  return v5;
}

id Client.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void Client.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id Client.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Client();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unsigned __int8 *sub_1A5F0E09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  sub_1A5F0E524();
  swift_bridgeObjectRetain();
  v7 = sub_1A5F6422C();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_1A5F45E34();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_1A5F64670();
  }
LABEL_7:
  v13 = sub_1A5F0E18C(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1A5F0E18C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  v13 = 0;
                  if (v11 < 0x61 || v11 >= v8)
                    return (unsigned __int8 *)v13;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v23 = a3 + 48;
      v24 = a3 + 55;
      v25 = a3 + 87;
      if (a3 > 10)
      {
        v23 = 58;
      }
      else
      {
        v25 = 97;
        v24 = 65;
      }
      if (result)
      {
        v26 = 0;
        do
        {
          v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              v13 = 0;
              if (v27 < 0x61 || v27 >= v25)
                return (unsigned __int8 *)v13;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
            return 0;
          v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v15 = a2 - 1;
  if (a2 == 1)
    return 0;
  v16 = a3 + 48;
  v17 = a3 + 55;
  v18 = a3 + 87;
  if (a3 > 10)
  {
    v16 = 58;
  }
  else
  {
    v18 = 97;
    v17 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v19 = result + 1;
  do
  {
    v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        v13 = 0;
        if (v20 < 0x61 || v20 >= v18)
          return (unsigned __int8 *)v13;
        v21 = -87;
      }
      else
      {
        v21 = -55;
      }
    }
    else
    {
      v21 = -48;
    }
    v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21)))
      return 0;
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1A5F0E408(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t result;
  char v13;
  _QWORD v14[2];
  char v15;

  if ((a4 & 0x1000000000000000) != 0)
  {
    result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    v11 = (_QWORD *)sub_1A5F64670();
  }
  result = sub_1A5F0E568((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

uint64_t method lookup function for Client()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Client.build.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of Client.fullVersion.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of Client.__allocating_init(identifier:name:version:buildNumber:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

unint64_t sub_1A5F0E524()
{
  unint64_t result;

  result = qword_1EE80CF30;
  if (!qword_1EE80CF30)
  {
    result = MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EE80CF30);
  }
  return result;
}

uint64_t sub_1A5F0E568(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 *v19;
  int v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unsigned int v36;
  char v37;
  uint64_t v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  uint64_t v42;
  unsigned int v43;
  char v44;
  uint64_t v45;

  v10 = a2;
  v11 = result;
  v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    result = sub_1A5F18B9C(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      v15 = a2 >> 16;
      if (v14 != v13)
        goto LABEL_6;
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0)
    v16 = HIBYTE(a5) & 0xF;
  if (v16 < a2 >> 16)
    goto LABEL_95;
  result = sub_1A5F641F0();
  v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    result = sub_1A5F18B9C(v10, a4, a5);
    v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    result = sub_1A5F18B9C(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0)
      goto LABEL_8;
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0)
    v17 = a4 & 0xFFFFFFFFFFFFLL;
  if (v17 < v10 >> 16)
    goto LABEL_91;
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  result = sub_1A5F641F0();
LABEL_21:
  v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11)
    v19 = 0;
  v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        v31 = a6 + 48;
        v32 = a6 + 55;
        v33 = a6 + 87;
        if (a6 > 10)
        {
          v31 = 58;
        }
        else
        {
          v33 = 97;
          v32 = 65;
        }
        if (v19)
        {
          v24 = 0;
          v34 = v19 + 1;
          v35 = result - 1;
          do
          {
            v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                v29 = 0;
                if (v36 < 0x61 || v36 >= v33)
                  return v29;
                v37 = -87;
              }
              else
              {
                v37 = -55;
              }
            }
            else
            {
              v37 = -48;
            }
            v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
              return 0;
            v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37)))
              return 0;
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      v39 = a6 + 48;
      v40 = a6 + 55;
      v41 = a6 + 87;
      if (a6 > 10)
      {
        v39 = 58;
      }
      else
      {
        v41 = 97;
        v40 = 65;
      }
      if (v19)
      {
        v42 = 0;
        do
        {
          v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              v29 = 0;
              if (v43 < 0x61 || v43 >= v41)
                return v29;
              v44 = -87;
            }
            else
            {
              v44 = -55;
            }
          }
          else
          {
            v44 = -48;
          }
          v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63)
            return 0;
          v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44)))
            return 0;
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      v21 = a6 + 48;
      v22 = a6 + 55;
      v23 = a6 + 87;
      if (a6 > 10)
      {
        v21 = 58;
      }
      else
      {
        v23 = 97;
        v22 = 65;
      }
      if (v19)
      {
        v24 = 0;
        v25 = v19 + 1;
        v26 = result - 1;
        while (1)
        {
          v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              v29 = 0;
              if (v27 < 0x61 || v27 >= v23)
                return v29;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
            return 0;
          v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28)))
            return 0;
          ++v25;
          if (!--v26)
            return v24;
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

void sub_1A5F0E98C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_1A5F0E9E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int16 v23;
  char v24;
  char v25;
  char v26;
  char v27;
  unsigned __int8 v28;

  v4 = v28;
  if (v28)
  {
    *(_QWORD *)(v3 - 104) = v1;
    v5 = v28;
    sub_1A5EDE4B0(0, v28, 0);
    v6 = a1;
    v1 = *(_QWORD *)(v3 - 104);
    if ((_DWORD)v2)
    {
      if ((_DWORD)v2 == 1)
        v7 = (int)a1;
      else
        v7 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v7 = 0;
    }
    *(_OWORD *)(v3 - 144) = xmmword_1A5F679D0;
    *(_QWORD *)(v3 - 128) = v2;
    while (v5)
    {
      if ((_DWORD)v2)
      {
        if ((_DWORD)v2 == 1)
        {
          if (v7 < (int)a1 || v7 >= a1 >> 32)
            goto LABEL_29;
          v8 = sub_1A5F63C2C();
          if (!v8)
          {
            __break(1u);
LABEL_36:
            __break(1u);
          }
          v9 = v8;
          v10 = sub_1A5F63C50();
          v11 = v7 - v10;
          if (__OFSUB__(v7, v10))
            goto LABEL_32;
        }
        else
        {
          if (v7 < *(_QWORD *)(v6 + 16))
            goto LABEL_31;
          if (v7 >= *(_QWORD *)(v6 + 24))
            goto LABEL_33;
          v13 = sub_1A5F63C2C();
          if (!v13)
            goto LABEL_36;
          v9 = v13;
          v14 = sub_1A5F63C50();
          v11 = v7 - v14;
          if (__OFSUB__(v7, v14))
            goto LABEL_34;
        }
        v12 = *(_BYTE *)(v9 + v11);
        v6 = a1;
      }
      else
      {
        if (v7 >= v28)
          goto LABEL_30;
        *(_BYTE *)(v3 - 118) = v6;
        *(_DWORD *)(v3 - 117) = *(_DWORD *)((char *)&a1 + 1);
        *(_WORD *)(v3 - 113) = *(_WORD *)((char *)&a1 + 5);
        *(_BYTE *)(v3 - 111) = HIBYTE(a1);
        *(_WORD *)(v3 - 110) = v23;
        *(_BYTE *)(v3 - 108) = v24;
        *(_BYTE *)(v3 - 107) = v25;
        *(_BYTE *)(v3 - 106) = v26;
        *(_BYTE *)(v3 - 105) = v27;
        v12 = *(_BYTE *)(v3 - 118 + v7);
      }
      sub_1A5EDD448();
      v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = *(_OWORD *)(v3 - 144);
      *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEDE70];
      *(_QWORD *)(v15 + 64) = MEMORY[0x1E0DEDEC8];
      *(_BYTE *)(v15 + 32) = v12;
      v16 = sub_1A5F64148();
      v18 = v17;
      *(_QWORD *)(v3 - 104) = v1;
      v20 = *(_QWORD *)(v1 + 16);
      v19 = *(_QWORD *)(v1 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1A5EDE4B0(v19 > 1, v20 + 1, 1);
        v6 = a1;
        v1 = *(_QWORD *)(v3 - 104);
      }
      *(_QWORD *)(v1 + 16) = v20 + 1;
      v21 = v1 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v16;
      *(_QWORD *)(v21 + 40) = v18;
      ++v7;
      --v5;
      --v4;
      v2 = *(_QWORD *)(v3 - 128);
      if (!v4)
        return v1;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    __break(1u);
    JUMPOUT(0x1A5F0ED0CLL);
  }
  return v1;
}

void sub_1A5F0ED34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

unsigned __int8 *sub_1A5F0ED78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  const void *v4;
  char **v5;
  CC_LONG v6;
  char *v7;
  char isUniquelyReferenced_nonNull_native;

  v6 = BYTE6(a4);
  v7 = *v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v5 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v7 = sub_1A5F08190(0, *((_QWORD *)v7 + 2), 0, v7);
  *v5 = v7;
  return CC_SHA1(v4, v6, (unsigned __int8 *)v7 + 32);
}

uint64_t sub_1A5F0EEA4()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A5F0EEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_1A5F63C2C();
  v10 = result;
  if (result)
  {
    result = sub_1A5F63C50();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v10 += a1 - result;
  }
  v11 = __OFSUB__(a2, a1);
  v12 = a2 - a1;
  if (v11)
  {
    __break(1u);
    goto LABEL_13;
  }
  v13 = sub_1A5F63C44();
  if (v13 >= v12)
    v14 = v12;
  else
    v14 = v13;
  v15 = v10 + v14;
  if (v10)
    v16 = v15;
  else
    v16 = 0;
  sub_1A5F0ED34(v10, v16, a4, a5);
  return sub_1A5EF0908(a4, a5);
}

uint64_t sub_1A5F0EF94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return swift_task_switch();
}

void sub_1A5F0EFF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = sub_1A5F642EC();
  *(_QWORD *)(v2 + 16) = 20;
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_DWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v0 + 32) = v2;
  __asm { BR              X10 }
}

uint64_t sub_1A5F0F080()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  void *v15;
  id v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 64);
  *(_BYTE *)(v0 + 166) = v1;
  v2 = *(_QWORD *)(v0 + 72);
  *(_BYTE *)(v0 + 167) = BYTE1(v1);
  *(_BYTE *)(v0 + 168) = BYTE2(v1);
  *(_BYTE *)(v0 + 169) = BYTE3(v1);
  *(_BYTE *)(v0 + 170) = BYTE4(v1);
  *(_BYTE *)(v0 + 171) = BYTE5(v1);
  *(_BYTE *)(v0 + 172) = BYTE6(v1);
  *(_BYTE *)(v0 + 173) = HIBYTE(v1);
  *(_WORD *)(v0 + 174) = v2;
  *(_BYTE *)(v0 + 176) = BYTE2(v2);
  *(_BYTE *)(v0 + 177) = BYTE3(v2);
  *(_BYTE *)(v0 + 178) = BYTE4(v2);
  *(_BYTE *)(v0 + 179) = BYTE5(v2);
  sub_1A5F0ED34(v0 + 166, v0 + 166 + BYTE6(v2), v1, v2);
  sub_1A5EF0908(v1, v2);
  sub_1A5EF0908(v1, v2);
  v3 = sub_1A5ECDD68((_BYTE *)(*(_QWORD *)(v0 + 32) + 32), *(_QWORD *)(*(_QWORD *)(v0 + 32) + 16));
  v5 = v4;
  *(_QWORD *)(v0 + 80) = v3;
  *(_QWORD *)(v0 + 88) = v4;
  if (qword_1ED1CD438 != -1)
    swift_once();
  v6 = sub_1A5F63F98();
  *(_QWORD *)(v0 + 96) = v6;
  *(_QWORD *)(v0 + 104) = __swift_project_value_buffer(v6, (uint64_t)qword_1ED1D21B0);
  sub_1A5EE1EF0(v3, v5);
  sub_1A5EE1EF0(v3, v5);
  v7 = sub_1A5F63F8C();
  v8 = sub_1A5F64454();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v20 = v19;
    *(_DWORD *)v9 = 136315138;
    sub_1A5F0E98C(v3, v5);
    *(_QWORD *)(v0 + 56) = v10;
    sub_1A5ECDD14();
    sub_1A5EDB074();
    v11 = sub_1A5F64100();
    v13 = v12;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 40) = sub_1A5F18694(v11, v13, &v20);
    sub_1A5F6458C();
    swift_bridgeObjectRelease();
    sub_1A5EF0908(v3, v5);
    sub_1A5EF0908(v3, v5);
    _os_log_impl(&dword_1A5EB9000, v7, v8, "Generated SHA1 from data, %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B8D2C](v19, -1, -1);
    MEMORY[0x1A85B8D2C](v9, -1, -1);
  }
  else
  {
    sub_1A5EF0908(v3, v5);
    sub_1A5EF0908(v3, v5);
  }

  sub_1A5F06F60(0, &qword_1ED1CC990);
  v14 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MescalSigner.Contract()), sel_init);
  v15 = *(void **)&v14[OBJC_IVAR____TtCC12AppAnalytics12MescalSignerP33_50212C62307B91282DB5DA35D73009738Contract_bag];
  *(_QWORD *)(v0 + 112) = v15;
  v16 = v15;

  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v17;
  *v17 = v0;
  v17[1] = sub_1A5F0F524;
  return sub_1A5F64544();
}

uint64_t sub_1A5F0F524(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 128) = v2;
  swift_task_dealloc();
  if (!v2)
  {

    *(_QWORD *)(v6 + 136) = a2;
    *(_QWORD *)(v6 + 144) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1A5F0F5F0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13[2];

  v13[1] = *MEMORY[0x1E0C80C00];
  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = sub_1A5F63E30();
  v5 = v4;
  sub_1A5EF0908(v2, v1);
  swift_bridgeObjectRetain_n();
  v6 = sub_1A5F63F8C();
  v7 = sub_1A5F64454();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(_QWORD *)(v0 + 80);
    v12 = *(_QWORD *)(v0 + 88);
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v13[0] = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_1A5F18694(v3, v5, v13);
    sub_1A5F6458C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5EB9000, v6, v7, "Generated base64 signature from SHA1, base64=%s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B8D2C](v10, -1, -1);
    MEMORY[0x1A85B8D2C](v9, -1, -1);

    sub_1A5EF0908(v8, v12);
  }
  else
  {
    sub_1A5EF0908(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
    swift_bridgeObjectRelease_n();

  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v3, v5);
}

uint64_t sub_1A5F0F7DC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);

  sub_1A5EF0908(v1, v2);
  swift_bridgeObjectRelease();
  if (qword_1ED1CD440 != -1)
    swift_once();
  v3 = *(void **)(v0 + 128);
  __swift_project_value_buffer(*(_QWORD *)(v0 + 96), (uint64_t)qword_1ED1D2190);
  v4 = v3;
  v5 = v3;
  v6 = sub_1A5F63F8C();
  v7 = sub_1A5F6443C();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 128);
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v12 = v9;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 48) = v13;
    sub_1A5F6458C();
    *v11 = v13;

    _os_log_impl(&dword_1A5EB9000, v6, v7, "Failed to sign our data, error=%@", v10, 0xCu);
    sub_1A5F0A684();
    swift_arrayDestroy();
    MEMORY[0x1A85B8D2C](v11, -1, -1);
    MEMORY[0x1A85B8D2C](v10, -1, -1);
  }
  else
  {

  }
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t ContentType.init(rawValue:)(unint64_t a1)
{
  return sub_1A5EE80A0(a1);
}

unint64_t sub_1A5F0FA00@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1A5EE80A0(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1A5F0FA30()
{
  uint64_t *v0;

  return ContentType.description.getter(*v0);
}

unint64_t sub_1A5F0FA3C()
{
  unint64_t result;

  result = qword_1EE80CF48;
  if (!qword_1EE80CF48)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for ContentType, &type metadata for ContentType);
    atomic_store(result, (unint64_t *)&qword_1EE80CF48);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentType()
{
  return &type metadata for ContentType;
}

uint64_t sub_1A5F0FA90(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

unint64_t BridgedTimestampGranularity.init(rawValue:)(unint64_t a1)
{
  return sub_1A5F0FCB8(a1);
}

unint64_t sub_1A5F0FAB4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_1A5F0FCB8(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

id sub_1A5F0FAE4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BridgedTimestampGranularityFactory()), sel_init);
  qword_1ED1CB888 = (uint64_t)result;
  return result;
}

id BridgedTimestampGranularityFactory.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static BridgedTimestampGranularityFactory.sharedInstance.getter()
{
  if (qword_1ED1CB898 != -1)
    swift_once();
  return (id)qword_1ED1CB888;
}

id BridgedTimestampGranularityFactory.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id BridgedTimestampGranularityFactory.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1A5F0FCB8(unint64_t result)
{
  if (result > 4)
    return 0;
  return result;
}

uint64_t _s12AppAnalytics34BridgedTimestampGranularityFactoryC04makedE0yAA0cdE0OSSF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v4;

  v1 = sub_1A5F64178();
  v2 = v0;
  if (v1 == 7954788 && v0 == 0xE300000000000000 || (sub_1A5F64880() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (v1 == 1920298856 && v2 == 0xE400000000000000 || (sub_1A5F64880() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (v1 == 0x6574756E696DLL && v2 == 0xE600000000000000 || (sub_1A5F64880() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (v1 == 0x72657474696ALL && v2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v4 = sub_1A5F64880();
    swift_bridgeObjectRelease();
    if ((v4 & 1) != 0)
      return 2;
    else
      return 0;
  }
}

unint64_t sub_1A5F0FE64()
{
  unint64_t result;

  result = qword_1EE80CF50;
  if (!qword_1EE80CF50)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for BridgedTimestampGranularity, &type metadata for BridgedTimestampGranularity);
    atomic_store(result, (unint64_t *)&qword_1EE80CF50);
  }
  return result;
}

ValueMetadata *type metadata accessor for BridgedTimestampGranularity()
{
  return &type metadata for BridgedTimestampGranularity;
}

uint64_t type metadata accessor for BridgedTimestampGranularityFactory()
{
  return objc_opt_self();
}

AppAnalytics::SessionManager::Options __swiftcall SessionManager.Options.init(rawValue:)(AppAnalytics::SessionManager::Options rawValue)
{
  AppAnalytics::SessionManager::Options *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t SessionManager.Options.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

_QWORD *SessionManager.__allocating_init(accessQueue:sessionGroupManager:flushProcessor:timestampJitter:privacyValidationProvider:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t ObjectType;
  _QWORD *v14;

  ObjectType = swift_getObjectType();
  v14 = sub_1A5F12018(a1, a2, a3, a4, a5, v6, ObjectType, a6);

  return v14;
}

_QWORD *SessionManager.__allocating_init(accessQueue:accessGroup:sessionGroupManager:options:flushProcessor:timestampJitter:privacyValidationProvider:)(void *a1, void *a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  dispatch_group_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t ObjectType;
  _QWORD *v23;
  unint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;

  v26 = a8;
  v27 = a2;
  v28 = a5;
  v13 = type metadata accessor for SummaryEventConfiguration(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *a4;
  v17 = *(_QWORD *)a6;
  v16 = *(_QWORD *)(a6 + 8);
  v18 = *(_BYTE *)(a6 + 16);
  v19 = dispatch_group_create();
  if (qword_1ED1CD310 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v13, (uint64_t)qword_1ED1CD2F8);
  sub_1A5ED7E14(v20, (uint64_t)v15, type metadata accessor for SummaryEventConfiguration);
  v21 = (_QWORD *)swift_allocObject();
  ObjectType = swift_getObjectType();
  v23 = sub_1A5F11CF4(a1, v19, a3, v25, v28, v17, v16, v18, a7, (uint64_t)v15, v21, ObjectType, v26);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v23;
}

_QWORD *SessionManager.__allocating_init(accessQueue:accessGroup:sessionGroupManager:options:flushProcessor:timestampConfigurationProvider:privacyValidationProvider:summaryEventConfiguration:)(void *a1, void *a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v17 = *(_QWORD *)(a6 + 24);
  v16 = *(_QWORD *)(a6 + 32);
  v18 = __swift_mutable_project_boxed_opaque_existential_1(a6, v17);
  v19 = sub_1A5ECE084(a1, a2, a3, a4, a5, v18, a7, a8, a9, v9, v17, v16);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a6);
  return v19;
}

_QWORD *SessionManager.init(accessQueue:accessGroup:sessionGroupManager:options:flushProcessor:timestampConfigurationProvider:privacyValidationProvider:summaryEventConfiguration:)(void *a1, void *a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a7;
  v27 = a8;
  v25 = a4;
  v16 = *(_QWORD *)(a6 + 24);
  v15 = *(_QWORD *)(a6 + 32);
  v17 = __swift_mutable_project_boxed_opaque_existential_1(a6, v16);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v21 + 16))(v20, v18);
  v22 = sub_1A5F12178(a1, a2, a3, v25, a5, (uint64_t)v20, v26, v27, a9, v9, v16, v15);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a6);
  return v22;
}

uint64_t SessionManager.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1A5EFBB34(v0 + 32);

  swift_release();
  sub_1A5ED4D44(v0 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state, type metadata accessor for SessionManager.SessionState);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider);
  return v0;
}

uint64_t SessionManager.__deallocating_deinit()
{
  SessionManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t SessionManager.push<A>(_:traits:submitEventQueues:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return SessionManager.push<A>(_:traits:file:line:)(a1, a2, a4, a5, a6, a7, a8);
}

uint64_t SessionManager.flush(callbackQueue:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;

  v7 = *(_QWORD *)(v3 + 48);
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v8;
  v9[3] = a1;
  v9[4] = a2;
  v9[5] = a3;
  swift_retain();
  v10 = a1;
  sub_1A5EC84CC(a2);
  sub_1A5EEC784(v7, (uint64_t)sub_1A5EF6B40, (uint64_t)v9);
  swift_release();
  return swift_release();
}

uint64_t SessionManager.end(endDate:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v16 = a3;
  v6 = sub_1A5F63F08();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = *(_QWORD *)(v3 + 48);
  sub_1A5F27680();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v12 = (uint64_t *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  v13 = v16;
  *v12 = a2;
  v12[1] = v13;
  swift_retain();
  sub_1A5EC84CC(a2);
  sub_1A5EEC784(v9, (uint64_t)sub_1A5F12610, v11);
  return swift_release();
}

uint64_t sub_1A5F10598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  _QWORD *v8;

  v7 = swift_allocObject();
  swift_weakInit();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v7;
  v8[3] = a3;
  v8[4] = a4;
  swift_retain();
  sub_1A5EC84CC(a3);
  sub_1A5F1071C(a2, (uint64_t (*)(uint64_t))sub_1A5F12C70, (uint64_t)v8);
  swift_release();
  return swift_release();
}

void sub_1A5F1064C(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  id v7;
  uint64_t v8;

  v3 = sub_1A5F64028();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v7 = *(id *)(Strong + 48);
    swift_release();
    sub_1A5F63FF8();
    sub_1A5F2799C((uint64_t)v5);

  }
  if (a2)
    a2();
}

uint64_t sub_1A5F1071C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  void (*v21)(_QWORD, double);
  id v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t i;
  uint64_t v32;
  void (*v33)(uint64_t, _QWORD *);
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t *v42;
  char *v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  _QWORD *v54;
  id v55;
  uint64_t v56;
  uint64_t j;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t k;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 *v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  char v92;
  uint64_t v93;
  char isUniquelyReferenced_nonNull_native;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  void (*v108)(uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  unsigned int v113;
  uint64_t v114;
  void (*v115)(uint64_t, _QWORD, uint64_t);
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  uint64_t v128;
  __int128 v129[5];
  uint64_t v130;
  _QWORD v131[3];
  uint64_t v132;
  uint64_t v133;

  v118 = a3;
  v119 = a2;
  v111 = a1;
  v110 = type metadata accessor for Session();
  MEMORY[0x1E0C80A78](v110);
  v112 = (uint64_t *)((char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v120 = type metadata accessor for SessionObserverChange();
  MEMORY[0x1E0C80A78](v120);
  v121 = (uint64_t)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t **)((char *)&v100 - v7);
  v9 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v9);
  v109 = (uint64_t)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t)&v100 - v12;
  v14 = sub_1A5F64070();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (uint64_t **)((char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *(_QWORD *)(v3 + 48);
  v114 = OBJC_IVAR___AAAccessQueue_queue;
  v20 = *(void **)(v19 + OBJC_IVAR___AAAccessQueue_queue);
  *v18 = v20;
  v21 = *(void (**)(_QWORD, double))(v15 + 104);
  v113 = *MEMORY[0x1E0DEF740];
  v115 = (void (*)(uint64_t, _QWORD, uint64_t))v21;
  v21(v18, v16);
  v22 = v20;
  LOBYTE(v20) = sub_1A5F64088();
  v23 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v116 = v18;
  v117 = v14;
  v23((uint64_t)v18, v14);
  if ((v20 & 1) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  v18 = (_QWORD *)(v3 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state);
  swift_beginAccess();
  sub_1A5ED7E14((uint64_t)v18, v13, type metadata accessor for SessionManager.SessionState);
  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    v108 = v23;
    v25 = *(_QWORD **)v13;
    *v8 = *(_QWORD *)v13;
    swift_storeEnumTagMultiPayload();
    v26 = *(void **)(v19 + v114);
    v13 = (uint64_t)v116;
    v27 = v117;
    *v116 = v26;
    v115(v13, v113, v27);
    v107 = v25;
    swift_retain();
    v28 = v26;
    LOBYTE(v26) = sub_1A5F64088();
    v108(v13, v27);
    if ((v26 & 1) != 0)
    {
      v29 = (uint64_t *)(v3 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_observers);
      swift_beginAccess();
      v100 = v29;
      v13 = *v29;
      if (!((unint64_t)*v29 >> 62))
      {
        v30 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
        result = swift_bridgeObjectRetain();
        goto LABEL_10;
      }
LABEL_32:
      swift_bridgeObjectRetain();
      result = sub_1A5F64724();
      v30 = result;
LABEL_10:
      v103 = v18;
      v104 = v9;
      v105 = v19;
      v106 = v3;
      if (v30)
      {
        if (v30 < 1)
        {
LABEL_83:
          __break(1u);
          goto LABEL_84;
        }
        for (i = 0; i != v30; ++i)
        {
          if ((v13 & 0xC000000000000001) != 0)
          {
            v32 = MEMORY[0x1A85B836C](i, v13);
          }
          else
          {
            v32 = *(_QWORD *)(v13 + 8 * i + 32);
            swift_retain();
          }
          if (MEMORY[0x1A85B8E10](v32 + 16))
          {
            swift_unknownObjectRelease();
            v33 = *(void (**)(uint64_t, _QWORD *))(v32 + 32);
            v34 = swift_retain();
            v33(v34, v8);
            swift_release();
          }
          swift_release();
        }
      }
      swift_bridgeObjectRelease();
      sub_1A5ED4D44((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SessionObserverChange);
      v35 = v107;
      v36 = v107[3];
      v101 = v107[2];
      v37 = *(_QWORD *)((char *)v107 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier + 8);
      v102 = *(_QWORD *)((char *)v107 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
      v38 = v107[4];
      v39 = v107[5];
      v40 = (char *)v107 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate;
      v41 = v110;
      v42 = v112;
      v43 = (char *)v112 + *(int *)(v110 + 28);
      v44 = sub_1A5F63F08();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v43, v40, v44);
      v45 = *(double *)((char *)v35 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_timestampConfiguration + 8);
      LOBYTE(v129[0]) = *((_BYTE *)v35 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_timestampConfiguration);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A5EF3C30(v38, v39);
      v46 = v101;
      v47 = v106;
      v48 = sub_1A5EEFC98(v101, v36, (unsigned __int8 *)v129, v45);
      *v42 = v46;
      v42[1] = v36;
      v42[2] = v102;
      v42[3] = v37;
      v49 = v47;
      v42[4] = v38;
      v42[5] = v39;
      *(uint64_t *)((char *)v42 + *(int *)(v41 + 32)) = v48;
      v50 = v109;
      sub_1A5ED7E14((uint64_t)v42, v109, (uint64_t (*)(_QWORD))type metadata accessor for Session);
      swift_storeEnumTagMultiPayload();
      v51 = (uint64_t)v103;
      swift_beginAccess();
      sub_1A5ED2088(v50, v51);
      swift_endAccess();
      sub_1A5EFBF88((uint64_t)v42, v111);
      sub_1A5ED7E14((uint64_t)v42, v121, (uint64_t (*)(_QWORD))type metadata accessor for Session);
      swift_storeEnumTagMultiPayload();
      v52 = *(void **)(v105 + v114);
      v54 = v116;
      v53 = v117;
      *v116 = v52;
      v115((uint64_t)v54, v113, v53);
      v55 = v52;
      LOBYTE(v52) = sub_1A5F64088();
      v108((uint64_t)v54, v53);
      if ((v52 & 1) != 0)
      {
        v53 = *v100;
        if (!((unint64_t)*v100 >> 62))
        {
          v56 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
          result = swift_bridgeObjectRetain();
          if (!v56)
            goto LABEL_35;
LABEL_22:
          if (v56 < 1)
          {
LABEL_84:
            __break(1u);
            return result;
          }
          for (j = 0; j != v56; ++j)
          {
            if ((v53 & 0xC000000000000001) != 0)
            {
              v58 = MEMORY[0x1A85B836C](j, v53);
            }
            else
            {
              v58 = *(_QWORD *)(v53 + 8 * j + 32);
              swift_retain();
            }
            if (MEMORY[0x1A85B8E10](v58 + 16))
            {
              swift_unknownObjectRelease();
              v59 = *(void (**)(uint64_t, uint64_t))(v58 + 32);
              v60 = swift_retain();
              v59(v60, v121);
              swift_release();
            }
            swift_release();
          }
LABEL_35:
          swift_bridgeObjectRelease();
          sub_1A5ED4D44(v121, (uint64_t (*)(_QWORD))type metadata accessor for SessionObserverChange);
          v61 = (uint64_t *)(v49 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_dataStacks);
          swift_beginAccess();
          v62 = *v61;
          v63 = *(_QWORD *)(*v61 + 64);
          v120 = *v61 + 64;
          v64 = 1 << *(_BYTE *)(v62 + 32);
          v65 = -1;
          if (v64 < 64)
            v65 = ~(-1 << v64);
          v66 = v65 & v63;
          v121 = (unint64_t)(v64 + 63) >> 6;
          result = swift_bridgeObjectRetain_n();
          v67 = 0;
          if (v66)
            goto LABEL_40;
LABEL_41:
          v70 = v67 + 1;
          if (__OFADD__(v67, 1))
          {
            __break(1u);
LABEL_82:
            __break(1u);
            goto LABEL_83;
          }
          if (v70 < v121)
          {
            v71 = *(_QWORD *)(v120 + 8 * v70);
            ++v67;
            if (v71)
              goto LABEL_58;
            v67 = v70 + 1;
            if (v70 + 1 >= v121)
              goto LABEL_79;
            v71 = *(_QWORD *)(v120 + 8 * v67);
            if (v71)
              goto LABEL_58;
            v67 = v70 + 2;
            if (v70 + 2 >= v121)
              goto LABEL_79;
            v71 = *(_QWORD *)(v120 + 8 * v67);
            if (v71)
              goto LABEL_58;
            v67 = v70 + 3;
            if (v70 + 3 >= v121)
              goto LABEL_79;
            v71 = *(_QWORD *)(v120 + 8 * v67);
            if (v71)
              goto LABEL_58;
            v67 = v70 + 4;
            if (v70 + 4 >= v121)
              goto LABEL_79;
            v71 = *(_QWORD *)(v120 + 8 * v67);
            if (v71)
            {
LABEL_58:
              v66 = (v71 - 1) & v71;
              for (k = __clz(__rbit64(v71)) + (v67 << 6); ; k = v68 | (v67 << 6))
              {
                v73 = (uint64_t *)(*(_QWORD *)(v62 + 48) + 16 * k);
                v75 = *v73;
                v74 = v73[1];
                swift_beginAccess();
                v76 = *v61;
                v77 = *(_QWORD *)(*v61 + 16);
                swift_bridgeObjectRetain();
                if (!v77 || (v78 = sub_1A5EF11E8(v75, v74), (v79 & 1) == 0))
                {
                  swift_endAccess();
                  result = swift_bridgeObjectRelease();
                  if (!v66)
                    goto LABEL_41;
                  goto LABEL_40;
                }
                sub_1A5ECE02C(*(_QWORD *)(v76 + 56) + 40 * v78, (uint64_t)v129);
                sub_1A5EC1D18(v129, (uint64_t)v131);
                swift_endAccess();
                v80 = v132;
                v81 = v133;
                __swift_project_boxed_opaque_existential_1(v131, v132);
                (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v81 + 24))(&v123, v80, v81);
                if (!*((_QWORD *)&v123 + 1))
                {
                  swift_bridgeObjectRelease();
                  sub_1A5EF6AEC((uint64_t)&v123, &qword_1ED1CE0A8);
                  goto LABEL_77;
                }
                v129[2] = v125;
                v129[3] = v126;
                v129[4] = v127;
                v130 = v128;
                v129[0] = v123;
                v129[1] = v124;
                v82 = *(_QWORD *)(*((_QWORD *)&v126 + 1) + 16);
                if (v82)
                {
                  v83 = (unsigned __int8 *)(*((_QWORD *)&v126 + 1) + 32);
                  while (*v83++)
                  {
                    if (!--v82)
                      goto LABEL_76;
                  }
                  v85 = v132;
                  v86 = v133;
                  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v131, v132);
                  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v86 + 32))(&v123, v85, v86);
                  sub_1A5EF6AEC((uint64_t)&v123, &qword_1ED1CE0A8);
                  v87 = v132;
                  v88 = v133;
                  __swift_project_boxed_opaque_existential_1(v131, v132);
                  if (((*(uint64_t (**)(uint64_t, uint64_t))(v88 + 8))(v87, v88) & 1) == 0)
                  {
                    swift_beginAccess();
                    sub_1A5ECE02C((uint64_t)v131, (uint64_t)&v123);
                    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    v122 = *v61;
                    *v61 = 0x8000000000000000;
                    sub_1A5EF0FBC((uint64_t)&v123, v75, v74, isUniquelyReferenced_nonNull_native);
                    *v61 = v122;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_endAccess();
                    sub_1A5EF03FC((uint64_t)v129);
                    goto LABEL_77;
                  }
                  swift_beginAccess();
                  swift_bridgeObjectRetain();
                  v89 = sub_1A5EF11E8(v75, v74);
                  v91 = v90;
                  swift_bridgeObjectRelease();
                  if ((v91 & 1) != 0)
                  {
                    v92 = swift_isUniquelyReferenced_nonNull_native();
                    v93 = *v61;
                    v122 = *v61;
                    *v61 = 0x8000000000000000;
                    if ((v92 & 1) == 0)
                    {
                      sub_1A5F05A70();
                      v93 = v122;
                    }
                    swift_bridgeObjectRelease();
                    sub_1A5EC1D18((__int128 *)(*(_QWORD *)(v93 + 56) + 40 * v89), (uint64_t)&v123);
                    sub_1A5F5472C(v89, v93);
                    *v61 = v93;
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    *(_QWORD *)&v125 = 0;
                    v123 = 0u;
                    v124 = 0u;
                  }
                  swift_endAccess();
                  sub_1A5EF399C((uint64_t)&v123);
                }
LABEL_76:
                sub_1A5EF03FC((uint64_t)v129);
                swift_bridgeObjectRelease();
LABEL_77:
                result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v131);
                if (!v66)
                  goto LABEL_41;
LABEL_40:
                v68 = __clz(__rbit64(v66));
                v66 &= v66 - 1;
              }
            }
            v72 = v70 + 5;
            if (v72 < v121)
            {
              v71 = *(_QWORD *)(v120 + 8 * v72);
              if (v71)
              {
                v67 = v72;
                goto LABEL_58;
              }
              while (1)
              {
                v67 = v72 + 1;
                if (__OFADD__(v72, 1))
                  goto LABEL_82;
                if (v67 >= v121)
                  break;
                v71 = *(_QWORD *)(v120 + 8 * v67);
                ++v72;
                if (v71)
                  goto LABEL_58;
              }
            }
          }
LABEL_79:
          swift_release();
          v95 = *(void **)(*(_QWORD *)(v106 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_flushProcessor) + 24);
          v96 = swift_allocObject();
          v97 = v118;
          v98 = (uint64_t)v119;
          *(_QWORD *)(v96 + 16) = v119;
          *(_QWORD *)(v96 + 24) = v97;
          v99 = v95;
          sub_1A5EC84CC(v98);
          sub_1A5EEC784(v105, (uint64_t)sub_1A5F12BE0, v96);
          swift_release();
          swift_bridgeObjectRelease();

          swift_release();
          return sub_1A5ED4D44((uint64_t)v112, (uint64_t (*)(_QWORD))type metadata accessor for Session);
        }
      }
      else
      {
        __break(1u);
      }
      swift_bridgeObjectRetain();
      result = sub_1A5F64724();
      v56 = result;
      if (!result)
        goto LABEL_35;
      goto LABEL_22;
    }
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if ((_DWORD)result == 1)
    result = sub_1A5ED4D44(v13, type metadata accessor for SessionManager.SessionState);
  if (v119)
    return v119(result);
  return result;
}

Swift::Void __swiftcall SessionManager.endSync()()
{
  SessionManager.endSync(timeout:)(4.0);
}

Swift::Void __swiftcall SessionManager.endSync(timeout:)(Swift::Double timeout)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  NSObject *v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  NSObject *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  id v30;
  char *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  char *v38;

  v3 = sub_1A5F63F08();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - v8;
  v10 = sub_1A5F6404C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v38 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v33 - v14;
  v16 = v1;
  v17 = *(_QWORD *)(v1 + 56);
  sub_1A5F64040();
  v37 = v17;
  sub_1A5F64460();
  v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v15, v10);
  if ((sub_1A5F63FC8() & 1) != 0)
  {
    sub_1A5F63EFC();
    v19 = dispatch_group_create();
    v36 = v18;
    v20 = v19;
    dispatch_group_enter(v19);
    v34 = *(_QWORD *)(v16 + 48);
    sub_1A5F27680();
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
    v21 = *(unsigned __int8 *)(v4 + 80);
    v35 = v9;
    v22 = v4;
    v23 = v3;
    v24 = (v21 + 24) & ~v21;
    v25 = (v5 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = v16;
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v26 + v24, v6, v23);
    *(_QWORD *)(v26 + v25) = v20;
    swift_retain();
    v27 = v20;
    sub_1A5EEC784(v34, (uint64_t)sub_1A5F126E8, v26);
    swift_release();
    v28 = v38;
    sub_1A5F64040();
    MEMORY[0x1A85B7D9C](v28, timeout);
    v29 = v36;
    v36(v28, v10);
    LOBYTE(v28) = sub_1A5F64460();
    v29(v15, v10);
    if ((v28 & 1) != 0)
    {
      v31 = v35;
      if (qword_1ED1CFC08 != -1)
        swift_once();
      v32 = (id)qword_1ED1CE7B0;
      sub_1A5F6443C();
      sub_1A5F63F80();

      (*(void (**)(char *, uint64_t))(v22 + 8))(v31, v23);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v35, v23);

    }
  }
  else
  {
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v30 = (id)qword_1ED1CE7B0;
    sub_1A5F6443C();
    sub_1A5F63F80();

  }
}

uint64_t sub_1A5F115F0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;

  v5 = swift_allocObject();
  swift_weakInit();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = v5;
  v7 = a3;
  swift_retain();
  sub_1A5F1071C(a2, (uint64_t (*)(uint64_t))sub_1A5F12C34, v6);
  swift_release();
  return swift_release();
}

void sub_1A5F11694(NSObject *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t Strong;
  id v6;
  uint64_t v7;

  v2 = sub_1A5F64028();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_group_leave(a1);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v6 = *(id *)(Strong + 48);
    swift_release();
    sub_1A5F63FF8();
    sub_1A5F2799C((uint64_t)v4);

  }
}

uint64_t sub_1A5F11754(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_observers);
  swift_beginAccess();
  v4 = *v3;
  v13 = MEMORY[0x1E0DEE9D8];
  if (*v3 >> 62)
  {
LABEL_18:
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v5 = sub_1A5F64724();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      v12 = v3;
      v6 = 0;
      while (1)
      {
        if ((v4 & 0xC000000000000001) != 0)
        {
          v7 = MEMORY[0x1A85B836C](v6, v4);
          v3 = (_QWORD *)(v6 + 1);
          if (__OFADD__(v6, 1))
          {
LABEL_15:
            __break(1u);
LABEL_16:
            v3 = v12;
            v10 = v13;
            goto LABEL_20;
          }
        }
        else
        {
          if (v6 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_18;
          }
          v7 = *(_QWORD *)(v4 + 8 * v6 + 32);
          swift_retain();
          v3 = (_QWORD *)(v6 + 1);
          if (__OFADD__(v6, 1))
            goto LABEL_15;
        }
        v8 = MEMORY[0x1A85B8E10](v7 + 16);
        if (v8 && (v9 = v8, swift_unknownObjectRelease(), v9 == a2) || !MEMORY[0x1A85B8E10](v7 + 16))
        {
          swift_release();
        }
        else
        {
          swift_unknownObjectRelease();
          sub_1A5F6467C();
          sub_1A5F646AC();
          sub_1A5F646B8();
          sub_1A5F64688();
        }
        ++v6;
        if (v3 == (_QWORD *)v5)
          goto LABEL_16;
      }
    }
  }
  v10 = MEMORY[0x1E0DEE9D8];
LABEL_20:
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *v3 = v10;
  return swift_bridgeObjectRelease();
}

uint64_t AccessSessionManager.isActive.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;

  v1 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A5F64070();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(v0 + 16);
  v10 = *(void **)(*(_QWORD *)(v9 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *v8 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x1E0DEF740], v4, v6);
  v11 = v10;
  LOBYTE(v10) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v10 & 1) != 0)
  {
    v13 = v9 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
    swift_beginAccess();
    sub_1A5ED7E14(v13, (uint64_t)v3, type metadata accessor for SessionManager.SessionState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
        sub_1A5ED4D44((uint64_t)v3, type metadata accessor for SessionManager.SessionState);
      return 0;
    }
    else
    {
      swift_release();
      return 1;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t AccessSessionManager.activeKind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1A5F64070();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(v1 + 16);
  v12 = *(void **)(*(_QWORD *)(v11 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *v10 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v7 + 104))(v10, *MEMORY[0x1E0DEF740], v6, v8);
  v13 = v12;
  LOBYTE(v12) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v10, v6);
  if ((v12 & 1) != 0)
  {
    v15 = v11 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
    swift_beginAccess();
    sub_1A5ED7E14(v15, (uint64_t)v5, type metadata accessor for SessionManager.SessionState);
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result)
    {
      if ((_DWORD)result == 1)
        result = sub_1A5ED4D44((uint64_t)v5, type metadata accessor for SessionManager.SessionState);
      v16 = 0;
      v17 = 3;
    }
    else
    {
      v18 = *v5;
      v16 = *(_QWORD *)(v18 + 32);
      v17 = *(_QWORD *)(v18 + 40);
      sub_1A5EF3C30(v16, v17);
      result = swift_release();
    }
    *a1 = v16;
    a1[1] = v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5F11C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1A5EF1EB8(a1, a2, a3, a4, a5, a6, a7);
}

Swift::Void __swiftcall AccessSessionManager.flush()()
{
  uint64_t v0;
  id v1;

  v0 = qword_1ED1CD058;
  swift_retain();
  if (v0 != -1)
    swift_once();
  v1 = (id)qword_1ED1CCCD0;
  sub_1A5ECF738((uint64_t)v1, 0, 0);
  swift_release();

}

uint64_t AccessSessionManager.push<A>(_:traits:submitEventQueues:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return AccessSessionManager.push<A>(_:traits:file:line:)(a1, a2, a4, a5, a6, a7, a8);
}

uint64_t AccessSessionManager.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

_QWORD *sub_1A5F11CF4(void *a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, _QWORD *a11, uint64_t a12, uint64_t a13)
{
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[2];
  char v46;
  ValueMetadata *v47;
  _UNKNOWN **v48;

  v39 = a3;
  v40 = a4;
  v43 = a13;
  v44 = a10;
  v41 = a9;
  v42 = a12;
  v20 = type metadata accessor for SummaryEventConfiguration(0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = &type metadata for TimestampJitter;
  v48 = &protocol witness table for TimestampJitter;
  v45[0] = a6;
  v45[1] = a7;
  v46 = a8 & 1;
  a11[5] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for SessionManager.SessionState(0);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)((char *)a11 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_dataStacks) = MEMORY[0x1E0DEE9E0];
  v23 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)((char *)a11 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_observers) = MEMORY[0x1E0DEE9D8];
  a11[6] = a1;
  a11[7] = a2;
  a11[8] = a3;
  type metadata accessor for ProcessorManager();
  v24 = (_QWORD *)swift_allocObject();
  v24[3] = 0;
  swift_unknownObjectWeakInit();
  v24[5] = a2;
  v24[6] = v23;
  v24[4] = a1;
  a11[3] = v24;
  v25 = type metadata accessor for Tracker();
  v26 = v40;
  sub_1A5ED7E14(a10, (uint64_t)v22, type metadata accessor for SummaryEventConfiguration);
  v27 = a1;
  v28 = a2;
  v29 = v27;
  v30 = v28;
  v31 = v29;
  v32 = v30;
  swift_retain();
  v33 = v41;
  swift_unknownObjectRetain();
  a11[2] = sub_1A5F38B34(1953460082, 0xE400000000000000, v31, v32, (v26 >> 1) & 1, v33, (uint64_t)v22, v25, v42, v43);
  *(_QWORD *)((char *)a11 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_options) = v26;
  *(_QWORD *)((char *)a11 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_flushProcessor) = a5;
  sub_1A5ECE02C((uint64_t)v45, (uint64_t)a11 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider);
  swift_beginAccess();
  swift_weakAssign();
  v34 = a11[3];
  v35 = *(_QWORD *)(v34 + 32);
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = v34;
  v36[3] = a5;
  v36[4] = &protocol witness table for FlushProcessor;
  swift_retain_n();
  swift_retain_n();
  sub_1A5EEC784(v35, (uint64_t)sub_1A5F12DBC, (uint64_t)v36);
  swift_release();
  swift_release();
  v37 = swift_retain();
  sub_1A5ED3524(v37, (uint64_t)&off_1E4FD0378);
  swift_release();
  sub_1A5ED4D44(v44, type metadata accessor for SummaryEventConfiguration);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
  *(_QWORD *)(a11[3] + 24) = &off_1E4FD03D8;
  swift_unknownObjectWeakAssign();
  return a11;
}

_QWORD *sub_1A5F12018(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  dispatch_group_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;

  v25 = a8;
  v26 = a7;
  v24 = a1;
  v12 = type metadata accessor for SummaryEventConfiguration(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)a4;
  v16 = *(_QWORD *)(a4 + 8);
  v17 = *(_BYTE *)(a4 + 16);
  v18 = dispatch_group_create();
  if (qword_1ED1CD310 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED1CD2F8);
  sub_1A5ED7E14(v19, (uint64_t)v14, type metadata accessor for SummaryEventConfiguration);
  v20 = (_QWORD *)swift_allocObject();
  v21 = sub_1A5F11CF4(v24, v18, a2, 0, a3, v15, v16, v17, a5, (uint64_t)v14, v20, v26, v25);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v21;
}

_QWORD *sub_1A5F12178(void *a1, void *a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[5];

  v41 = a7;
  v42 = a8;
  v43 = a5;
  v17 = type metadata accessor for SummaryEventConfiguration(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[3] = a11;
  v44[4] = a12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v44);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a11 - 8) + 32))(boxed_opaque_existential_1, a6, a11);
  v40 = *a4;
  v21 = v40;
  a10[5] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for SessionManager.SessionState(0);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)((char *)a10 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_dataStacks) = MEMORY[0x1E0DEE9E0];
  v22 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)((char *)a10 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_observers) = MEMORY[0x1E0DEE9D8];
  a10[6] = a1;
  a10[7] = a2;
  a10[8] = a3;
  type metadata accessor for ProcessorManager();
  v23 = (_QWORD *)swift_allocObject();
  v23[3] = 0;
  swift_unknownObjectWeakInit();
  v23[5] = a2;
  v23[6] = v22;
  v23[4] = a1;
  a10[3] = v23;
  v24 = type metadata accessor for Tracker();
  v25 = (v21 >> 1) & 1;
  sub_1A5ED7E14(a9, (uint64_t)v19, type metadata accessor for SummaryEventConfiguration);
  v26 = v41;
  ObjectType = swift_getObjectType();
  v28 = a1;
  v29 = a2;
  v30 = v28;
  v31 = v29;
  v32 = v30;
  v33 = v31;
  swift_retain();
  swift_unknownObjectRetain();
  a10[2] = sub_1A5F38B34(1953460082, 0xE400000000000000, v32, v33, v25, v26, (uint64_t)v19, v24, ObjectType, v42);
  *(_QWORD *)((char *)a10 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_options) = v40;
  v34 = v43;
  *(_QWORD *)((char *)a10 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_flushProcessor) = v43;
  sub_1A5ECE02C((uint64_t)v44, (uint64_t)a10 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider);
  swift_beginAccess();
  swift_weakAssign();
  v35 = a10[3];
  v36 = *(_QWORD *)(v35 + 32);
  v37 = (_QWORD *)swift_allocObject();
  v37[2] = v35;
  v37[3] = v34;
  v37[4] = &protocol witness table for FlushProcessor;
  swift_retain_n();
  swift_retain_n();
  sub_1A5EEC784(v36, (uint64_t)sub_1A5EF428C, (uint64_t)v37);
  swift_release();
  swift_release();
  v38 = swift_retain();
  sub_1A5ED3524(v38, (uint64_t)&off_1E4FD0378);
  swift_release();
  sub_1A5ED4D44(a9, type metadata accessor for SummaryEventConfiguration);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  *(_QWORD *)(a10[3] + 24) = &off_1E4FD03D8;
  swift_unknownObjectWeakAssign();
  return a10;
}

uint64_t sub_1A5F1249C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F124C8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A5F124F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_1A5F63F08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  swift_release();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 56) >= 3uLL)
    swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 64) & ~v3), v1);
  return swift_deallocObject();
}

uint64_t sub_1A5F12584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1A5F63F08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F12610()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(sub_1A5F63F08() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1A5F10598(*(_QWORD *)(v0 + 16), v0 + v2, *v3, v3[1]);
}

uint64_t sub_1A5F12658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1A5F63F08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1A5F126E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_1A5F63F08() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1A5F115F0(*(_QWORD *)(v0 + 16), v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

unint64_t sub_1A5F12730()
{
  unint64_t result;

  result = qword_1EE80CF58;
  if (!qword_1EE80CF58)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for SessionManager.Options, &type metadata for SessionManager.Options);
    atomic_store(result, (unint64_t *)&qword_1EE80CF58);
  }
  return result;
}

unint64_t sub_1A5F12778()
{
  unint64_t result;

  result = qword_1EE80CF60;
  if (!qword_1EE80CF60)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for SessionManager.Options, &type metadata for SessionManager.Options);
    atomic_store(result, (unint64_t *)&qword_1EE80CF60);
  }
  return result;
}

uint64_t sub_1A5F127BC()
{
  return type metadata accessor for SessionManager(0);
}

uint64_t method lookup function for SessionManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SessionManager.__allocating_init(accessQueue:accessGroup:sessionGroupManager:options:flushProcessor:timestampConfigurationProvider:privacyValidationProvider:summaryEventConfiguration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t method lookup function for AccessSessionManager()
{
  return swift_lookUpClassMethod();
}

uint64_t *sub_1A5F127EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      v11 = a2 + 4;
      v12 = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v12 >= 3)
      {
        a1[4] = *v11;
        a1[5] = v12;
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)a1 + 2) = *(_OWORD *)v11;
      }
      v13 = type metadata accessor for Session();
      v14 = *(int *)(v13 + 28);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_1A5F63F08();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      *(uint64_t *)((char *)a1 + *(int *)(v13 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(v13 + 32));
      swift_bridgeObjectRetain();
      goto LABEL_11;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      swift_retain();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

_QWORD *sub_1A5F1293C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1A5ED4D44((uint64_t)a1, type metadata accessor for SessionManager.SessionState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      v7 = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v7 >= 3)
      {
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      }
      v8 = type metadata accessor for Session();
      v9 = *(int *)(v8 + 28);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1A5F63F08();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      *(_QWORD *)((char *)a1 + *(int *)(v8 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 32));
      swift_bridgeObjectRetain();
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      swift_retain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1A5F12A90(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    v7 = type metadata accessor for Session();
    v8 = *(int *)(v7 + 28);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A5F63F08();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    *(_QWORD *)((char *)a1 + *(int *)(v7 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 32));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1A5F12B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_1A5F12B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1A5F12B74()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1A5F12B88()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A5F12BAC()
{
  return swift_release();
}

uint64_t sub_1A5F12BB4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F12BE0()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_1A5F12C08()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1A5F12C34()
{
  uint64_t v0;

  sub_1A5F11694(*(NSObject **)(v0 + 16));
}

uint64_t sub_1A5F12C3C()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

void sub_1A5F12C70()
{
  uint64_t v0;

  sub_1A5F1064C(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_1A5F12C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int EnumCaseMultiPayload;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for SessionData(255, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for SessionData<A>, v6);
  v9 = *(_QWORD *)(type metadata accessor for PushEvent(0, v6, v7, v8) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  swift_release();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v10 + *(int *)(v6 + 36), v5);
  if (EnumCaseMultiPayload == 1)
  {
    swift_getTupleTypeMetadata2();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t assignWithCopy for LoggingEventProcessorFormat(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
      __swift_destroy_boxed_opaque_existential_0(a1);
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      v7 = *a2;
      v8 = a2[1];
      *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LoggingEventProcessorFormat(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
      __swift_destroy_boxed_opaque_existential_0(a1);
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for LoggingEventProcessorFormat(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LoggingEventProcessorFormat(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A5F12FC8(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

ValueMetadata *type metadata accessor for SummaryEventDatabase()
{
  return &type metadata for SummaryEventDatabase;
}

uint64_t sub_1A5F12FF4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  sub_1A5F134D0(0, &qword_1EE80CF90, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5F133E4();
  sub_1A5F64970();
  v10[1] = a2;
  sub_1A5F13428();
  sub_1A5F1352C(&qword_1EE80CF98, (uint64_t (*)(void))sub_1A5F1359C, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
  sub_1A5F64820();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A5F1311C()
{
  return 0x615473746E657665;
}

uint64_t sub_1A5F1313C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x615473746E657665 && a2 == 0xEB00000000656C62)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A5F64880();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_1A5F131E8(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1A5F131F4()
{
  sub_1A5F133E4();
  return sub_1A5F6497C();
}

uint64_t sub_1A5F1321C()
{
  sub_1A5F133E4();
  return sub_1A5F64988();
}

_QWORD *sub_1A5F13244@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1A5F13284(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A5F1326C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A5F12FF4(a1, *v1);
}

_QWORD *sub_1A5F13284(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD v10[2];

  sub_1A5F134D0(0, &qword_1EE80CF68, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5F133E4();
  sub_1A5F64958();
  if (!v1)
  {
    sub_1A5F13428();
    sub_1A5F1352C(&qword_1EE80CF80, (uint64_t (*)(void))sub_1A5F1348C, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    sub_1A5F647C0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v8 = (_QWORD *)v10[1];
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v8;
}

unint64_t sub_1A5F133E4()
{
  unint64_t result;

  result = qword_1EE80CF70;
  if (!qword_1EE80CF70)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F6855C, &type metadata for SummaryEventDatabase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE80CF70);
  }
  return result;
}

void sub_1A5F13428()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE80CF78)
  {
    v0 = sub_1A5F640D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE80CF78);
  }
}

unint64_t sub_1A5F1348C()
{
  unint64_t result;

  result = qword_1EE80CF88;
  if (!qword_1EE80CF88)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F6B364, &type metadata for SummaryEventDatabaseEntity);
    atomic_store(result, (unint64_t *)&qword_1EE80CF88);
  }
  return result;
}

void sub_1A5F134D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1A5F133E4();
    v7 = a3(a1, &type metadata for SummaryEventDatabase.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1A5F1352C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  result = *a1;
  if (!result)
  {
    sub_1A5F13428();
    v10 = v9;
    v11[0] = a3;
    v11[1] = a2();
    result = MEMORY[0x1A85B8C3C](a4, v10, v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A5F1359C()
{
  unint64_t result;

  result = qword_1EE80CFA0;
  if (!qword_1EE80CFA0)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F6B33C, &type metadata for SummaryEventDatabaseEntity);
    atomic_store(result, (unint64_t *)&qword_1EE80CFA0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SummaryEventDatabase.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5F13620 + 4 * byte_1A5F68410[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5F13640 + 4 * byte_1A5F68415[v4]))();
}

_BYTE *sub_1A5F13620(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5F13640(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5F13648(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5F13650(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5F13658(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5F13660(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SummaryEventDatabase.CodingKeys()
{
  return &type metadata for SummaryEventDatabase.CodingKeys;
}

unint64_t sub_1A5F13680()
{
  unint64_t result;

  result = qword_1EE80CFA8;
  if (!qword_1EE80CFA8)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F68534, &type metadata for SummaryEventDatabase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE80CFA8);
  }
  return result;
}

unint64_t sub_1A5F136C8()
{
  unint64_t result;

  result = qword_1EE80CFB0;
  if (!qword_1EE80CFB0)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F684A4, &type metadata for SummaryEventDatabase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE80CFB0);
  }
  return result;
}

unint64_t sub_1A5F13710()
{
  unint64_t result;

  result = qword_1EE80CFB8;
  if (!qword_1EE80CFB8)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F684CC, &type metadata for SummaryEventDatabase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE80CFB8);
  }
  return result;
}

uint64_t BridgedProcessEvent.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AAProcessEvent_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedProcessEvent.version.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AAProcessEvent_version);
  swift_bridgeObjectRetain();
  return v1;
}

id BridgedProcessEvent.json.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___AAProcessEvent_json);
}

uint64_t BridgedProcessEvent.groupName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AAProcessEvent_groupName);
  swift_bridgeObjectRetain();
  return v1;
}

id BridgedProcessEvent.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BridgedProcessEvent.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BridgedProcessEvent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedProcessEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedProcessEvent()
{
  return objc_opt_self();
}

uint64_t method lookup function for BridgedProcessEvent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TimestampConfigurationProviderType.makeTimestampConfiguration()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

id BridgedUploadBatchEventProcessor.__allocating_init(client:endpoint:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t *v10;
  id v11;
  objc_super v13;

  v5 = objc_allocWithZone(v2);
  v6 = qword_1ED1CE580;
  v7 = (char *)v5;
  v8 = a1;
  swift_unknownObjectRetain();
  if (v6 != -1)
    swift_once();
  v9 = _s12AppAnalytics25UploadBatchEventProcessorC6client8endpoint11contentType6configAcA6ClientC_AA08EndpointJ0_pAA07ContentJ0OAA0cdE6ConfigCtcfC_0(v8, a2, 0, (id)qword_1ED1CE4E0);
  v10 = (uint64_t *)&v7[OBJC_IVAR___AAUploadBatchEventProcessor_proxyEventProcessor];
  *v10 = v9;
  v10[1] = (uint64_t)&protocol witness table for UploadBatchEventProcessor;

  v13.receiver = v7;
  v13.super_class = v2;
  v11 = objc_msgSendSuper2(&v13, sel_init);

  swift_unknownObjectRelease();
  return v11;
}

id BridgedUploadBatchEventProcessor.init(client:endpoint:)(void *a1, void *a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t *v11;
  id v12;
  objc_super v14;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = qword_1ED1CE580;
  v8 = v3;
  v9 = a1;
  swift_unknownObjectRetain();
  if (v7 != -1)
    swift_once();
  v10 = _s12AppAnalytics25UploadBatchEventProcessorC6client8endpoint11contentType6configAcA6ClientC_AA08EndpointJ0_pAA07ContentJ0OAA0cdE6ConfigCtcfC_0(v9, a2, 0, (id)qword_1ED1CE4E0);
  v11 = (uint64_t *)&v8[OBJC_IVAR___AAUploadBatchEventProcessor_proxyEventProcessor];
  *v11 = v10;
  v11[1] = (uint64_t)&protocol witness table for UploadBatchEventProcessor;

  v14.receiver = v8;
  v14.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v14, sel_init);

  swift_unknownObjectRelease();
  return v12;
}

id BridgedUploadBatchEventProcessor.__allocating_init(client:endpoint:config:)(void *a1, void *a2, void *a3)
{
  objc_class *v3;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t *v11;
  id v12;
  objc_super v14;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = a1;
  swift_unknownObjectRetain();
  v9 = a3;
  v10 = _s12AppAnalytics25UploadBatchEventProcessorC6client8endpoint11contentType6configAcA6ClientC_AA08EndpointJ0_pAA07ContentJ0OAA0cdE6ConfigCtcfC_0(v8, a2, 0, v9);
  v11 = (uint64_t *)&v7[OBJC_IVAR___AAUploadBatchEventProcessor_proxyEventProcessor];
  *v11 = v10;
  v11[1] = (uint64_t)&protocol witness table for UploadBatchEventProcessor;

  v14.receiver = v7;
  v14.super_class = v3;
  v12 = objc_msgSendSuper2(&v14, sel_init);

  swift_unknownObjectRelease();
  return v12;
}

id BridgedUploadBatchEventProcessor.init(client:endpoint:config:)(void *a1, void *a2, void *a3)
{
  void *v3;
  objc_class *ObjectType;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t *v12;
  id v13;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = v3;
  v9 = a1;
  swift_unknownObjectRetain();
  v10 = a3;
  v11 = _s12AppAnalytics25UploadBatchEventProcessorC6client8endpoint11contentType6configAcA6ClientC_AA08EndpointJ0_pAA07ContentJ0OAA0cdE6ConfigCtcfC_0(v9, a2, 0, v10);
  v12 = (uint64_t *)&v8[OBJC_IVAR___AAUploadBatchEventProcessor_proxyEventProcessor];
  *v12 = v11;
  v12[1] = (uint64_t)&protocol witness table for UploadBatchEventProcessor;

  v15.receiver = v8;
  v15.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v15, sel_init);

  swift_unknownObjectRelease();
  return v13;
}

id BridgedUploadBatchEventProcessor.__allocating_init(client:endpoint:contentType:config:)(void *a1, void *a2, uint64_t a3, void *a4)
{
  objc_class *v4;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t *v13;
  id v14;
  objc_super v16;

  v9 = (char *)objc_allocWithZone(v4);
  v10 = a1;
  swift_unknownObjectRetain();
  v11 = a4;
  v12 = _s12AppAnalytics25UploadBatchEventProcessorC6client8endpoint11contentType6configAcA6ClientC_AA08EndpointJ0_pAA07ContentJ0OAA0cdE6ConfigCtcfC_0(v10, a2, a3, v11);
  v13 = (uint64_t *)&v9[OBJC_IVAR___AAUploadBatchEventProcessor_proxyEventProcessor];
  *v13 = v12;
  v13[1] = (uint64_t)&protocol witness table for UploadBatchEventProcessor;

  v16.receiver = v9;
  v16.super_class = v4;
  v14 = objc_msgSendSuper2(&v16, sel_init);

  swift_unknownObjectRelease();
  return v14;
}

id BridgedUploadBatchEventProcessor.init(client:endpoint:contentType:config:)(void *a1, void *a2, uint64_t a3, void *a4)
{
  void *v4;
  objc_class *ObjectType;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t *v14;
  id v15;
  objc_super v17;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = v4;
  v11 = a1;
  swift_unknownObjectRetain();
  v12 = a4;
  v13 = _s12AppAnalytics25UploadBatchEventProcessorC6client8endpoint11contentType6configAcA6ClientC_AA08EndpointJ0_pAA07ContentJ0OAA0cdE6ConfigCtcfC_0(v11, a2, a3, v12);
  v14 = (uint64_t *)&v10[OBJC_IVAR___AAUploadBatchEventProcessor_proxyEventProcessor];
  *v14 = v13;
  v14[1] = (uint64_t)&protocol witness table for UploadBatchEventProcessor;

  v17.receiver = v10;
  v17.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v17, sel_init);

  swift_unknownObjectRelease();
  return v15;
}

void BridgedUploadBatchEventProcessor.process(processEvent:)()
{
  sub_1A5F6470C();
  __break(1u);
}

id BridgedUploadBatchEventProcessor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BridgedUploadBatchEventProcessor.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BridgedUploadBatchEventProcessor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A5F142C4()
{
  return swift_unknownObjectRetain();
}

uint64_t type metadata accessor for BridgedUploadBatchEventProcessor()
{
  return objc_opt_self();
}

uint64_t method lookup function for BridgedUploadBatchEventProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BridgedUploadBatchEventProcessor.__allocating_init(client:endpoint:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of BridgedUploadBatchEventProcessor.__allocating_init(client:endpoint:config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of BridgedUploadBatchEventProcessor.__allocating_init(client:endpoint:contentType:config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ActiveSessionType.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ActiveSessionType.kind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ActiveSessionType.startDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ActiveSessionType.appSessionIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ActiveSessionType.timestampConfiguration.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1A5F14364()
{
  return type metadata accessor for ActiveSession();
}

uint64_t sub_1A5F1436C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A5F1439C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *a1 = v2;
  a1[1] = v3;
  return sub_1A5EF3C30(v2, v3);
}

uint64_t sub_1A5F143AC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_startDate;
  v4 = sub_1A5F63F08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1A5F143F4()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

double sub_1A5F14430(_BYTE *a1)
{
  _QWORD *v1;
  uint64_t v2;
  double result;

  v2 = *v1 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_timestampConfiguration;
  result = *(double *)(v2 + 8);
  *a1 = *(_BYTE *)v2;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DataEventError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_bridgeObjectRetain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for DataEventError(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t *assignWithCopy for DataEventError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_bridgeObjectRetain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t *assignWithTake for DataEventError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DataEventError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF9 && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483642);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 5;
  if (v4 >= 7)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DataEventError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 5;
  }
  return result;
}

ValueMetadata *type metadata accessor for DataEventError()
{
  return &type metadata for DataEventError;
}

unint64_t BridgedLoggingEventProcessorFormat.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

uint64_t *sub_1A5F14654@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;

  v2 = *result;
  v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

id BridgingLoggingEventProcessor.__allocating_init(format:subsystem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  id v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  id result;
  id v14;
  objc_super v15;
  _OWORD v16[2];
  uint64_t v17;
  char v18;

  v4 = v3;
  v8 = objc_allocWithZone(v4);
  v9 = v8;
  switch(a1)
  {
    case 2:
      *(_QWORD *)&v16[0] = 1;
      goto LABEL_5;
    case 1:
      *(_QWORD *)&v16[0] = 0;
LABEL_5:
      v18 = 0;
LABEL_8:
      type metadata accessor for LoggingEventProcessor();
      swift_allocObject();
      v10 = v9;
      v11 = LoggingEventProcessor.init(logFormat:subsystem:)((uint64_t)v16, a2, a3);
      v12 = (uint64_t *)&v10[OBJC_IVAR___AALoggingEventProcessor_proxyEventProcessor];
      *v12 = v11;
      v12[1] = (uint64_t)&protocol witness table for LoggingEventProcessor;

      v15.receiver = v9;
      v15.super_class = v4;
      return objc_msgSendSuper2(&v15, sel_init);
    case 0:
      v17 = 0;
      memset(v16, 0, sizeof(v16));
      v18 = 2;
      goto LABEL_8;
  }
  v14 = v8;
  result = (id)sub_1A5F648A4();
  __break(1u);
  return result;
}

id BridgingLoggingEventProcessor.init(format:subsystem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  objc_class *ObjectType;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  id result;
  id v13;
  objc_super v14;
  _OWORD v15[2];
  uint64_t v16;
  char v17;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  switch(a1)
  {
    case 2:
      *(_QWORD *)&v15[0] = 1;
      goto LABEL_5;
    case 1:
      *(_QWORD *)&v15[0] = 0;
LABEL_5:
      v17 = 0;
LABEL_8:
      type metadata accessor for LoggingEventProcessor();
      swift_allocObject();
      v9 = v4;
      v10 = LoggingEventProcessor.init(logFormat:subsystem:)((uint64_t)v15, a2, a3);
      v11 = (uint64_t *)&v9[OBJC_IVAR___AALoggingEventProcessor_proxyEventProcessor];
      *v11 = v10;
      v11[1] = (uint64_t)&protocol witness table for LoggingEventProcessor;

      v14.receiver = v4;
      v14.super_class = ObjectType;
      return objc_msgSendSuper2(&v14, sel_init);
    case 0:
      v16 = 0;
      memset(v15, 0, sizeof(v15));
      v17 = 2;
      goto LABEL_8;
  }
  v13 = v4;
  result = (id)sub_1A5F648A4();
  __break(1u);
  return result;
}

id BridgingLoggingEventProcessor.__allocating_init(format:)(uint64_t a1)
{
  objc_class *v1;

  return objc_msgSend(objc_allocWithZone(v1), sel_initWithFormat_subsystem_, a1, 0);
}

id BridgingLoggingEventProcessor.init(format:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_initWithFormat_subsystem_, a1, 0);
}

void BridgingLoggingEventProcessor.process(processEvent:)()
{
  sub_1A5F6470C();
  __break(1u);
}

id BridgingLoggingEventProcessor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BridgingLoggingEventProcessor.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BridgingLoggingEventProcessor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A5F14AB8()
{
  return swift_unknownObjectRetain();
}

unint64_t sub_1A5F14AF0()
{
  unint64_t result;

  result = qword_1EE80D018;
  if (!qword_1EE80D018)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for BridgedLoggingEventProcessorFormat, &type metadata for BridgedLoggingEventProcessorFormat);
    atomic_store(result, (unint64_t *)&qword_1EE80D018);
  }
  return result;
}

ValueMetadata *type metadata accessor for BridgedLoggingEventProcessorFormat()
{
  return &type metadata for BridgedLoggingEventProcessorFormat;
}

uint64_t type metadata accessor for BridgingLoggingEventProcessor()
{
  return objc_opt_self();
}

uint64_t method lookup function for BridgingLoggingEventProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BridgingLoggingEventProcessor.__allocating_init(format:subsystem:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1A5F14B78(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  v10 = a1[1];
  v11 = *a1;
  v9 = a1[2];
  v6 = *((_QWORD *)a1 + 6);
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_OWORD *)(v3 + 16) = v11;
  *(_OWORD *)(v3 + 32) = v10;
  *(_OWORD *)(v3 + 48) = v9;
  *(_QWORD *)(v3 + 64) = v6;
  *(_QWORD *)(v3 + 72) = v7;
  *v7 = v3;
  v7[1] = sub_1A5F14C20;
  return v12(v3 + 16, a2, a3);
}

uint64_t sub_1A5F14C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  v8 = *v3;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, a3);
}

uint64_t sub_1A5F14C88(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_1A5F14CD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = v1;
  return swift_task_switch();
}

uint64_t sub_1A5F14CE8()
{
  int8x16_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t *v4;
  uint8_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int8x16_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;

  v1 = v0[5].i64[0];
  v0[6].i64[0] = qword_1ED1CD448;
  sub_1A5EBF724(v1);
  sub_1A5EBF724(v1);
  v2 = sub_1A5F63F8C();
  v3 = sub_1A5F64454();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint64_t *)v0[5].i64[0];
    v5 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v17 = v15;
    *(_DWORD *)v5 = 136315138;
    v7 = *v4;
    v6 = v4[1];
    swift_bridgeObjectRetain();
    v0[4].i64[1] = sub_1A5F18694(v7, v6, &v17);
    sub_1A5F6458C();
    swift_bridgeObjectRelease();
    sub_1A5F18558((uint64_t)v4);
    sub_1A5F18558((uint64_t)v4);
    _os_log_impl(&dword_1A5EB9000, v2, v3, "Upload service will sign data for upload, identifier=%s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B8D2C](v15, -1, -1);
    MEMORY[0x1A85B8D2C](v5, -1, -1);

  }
  else
  {
    v8 = v0[5].i64[0];

    sub_1A5F18558(v8);
    sub_1A5F18558(v8);
  }
  v9 = swift_task_alloc();
  v0[6].i64[1] = v9;
  *(_QWORD *)v9 = v0;
  *(_QWORD *)(v9 + 8) = sub_1A5F14EF0;
  v10 = v0[5];
  *(int8x16_t *)(v9 + 56) = vextq_s8(v10, v10, 8uLL);
  v16 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE80CF40 + dword_1EE80CF40);
  v11 = *(_QWORD *)(v10.i64[0] + 16);
  v12 = *(_QWORD *)(v10.i64[0] + 24);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 72) = v13;
  *v13 = v9;
  v13[1] = sub_1A5F15248;
  return v16(v11, v12);
}

uint64_t sub_1A5F14EF0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  v3[4] = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5F14F4C()
{
  int8x16_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t *v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int8x16_t *v12;
  _QWORD *v13;
  uint64_t v15;

  v1 = v0[5].i64[0];
  sub_1A5EBF724(v1);
  sub_1A5EBF724(v1);
  v2 = sub_1A5F63F8C();
  v3 = sub_1A5F64454();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint64_t *)v0[5].i64[0];
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v15 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = *v4;
    v8 = v4[1];
    swift_bridgeObjectRetain();
    v0[4].i64[0] = sub_1A5F18694(v7, v8, &v15);
    sub_1A5F6458C();
    swift_bridgeObjectRelease();
    sub_1A5F18558((uint64_t)v4);
    sub_1A5F18558((uint64_t)v4);
    _os_log_impl(&dword_1A5EB9000, v2, v3, "Upload service did sign data for upload, identifier=%s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B8D2C](v6, -1, -1);
    MEMORY[0x1A85B8D2C](v5, -1, -1);

  }
  else
  {
    v9 = v0[5].i64[0];

    sub_1A5F18558(v9);
    sub_1A5F18558(v9);
  }
  v10 = v0[1].i64[1];
  v11 = v0[2].i64[0];
  v0[7].i64[0] = v11;
  v12 = (int8x16_t *)swift_task_alloc();
  v0[7].i64[1] = (uint64_t)v12;
  v12[1] = vextq_s8(v0[5], v0[5], 8uLL);
  v12[2].i64[0] = v10;
  v12[2].i64[1] = v11;
  v13 = (_QWORD *)swift_task_alloc();
  v0[8].i64[0] = (uint64_t)v13;
  *v13 = v0;
  v13[1] = sub_1A5F15164;
  return sub_1A5F6485C();
}

uint64_t sub_1A5F15164()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5F151CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_1A5F151DC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v2[7] = a1;
  v2[8] = a2;
  v4 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE80CF40 + dword_1EE80CF40);
  v5 = (_QWORD *)swift_task_alloc();
  v2[9] = v5;
  *v5 = v2;
  v5[1] = sub_1A5F15248;
  return v7(v4, v3);
}

uint64_t sub_1A5F15248(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 80) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_1A5F152D0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v1 = *(void **)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  sub_1A5EBF724(v2);
  v3 = v1;
  sub_1A5EBF724(v2);
  v4 = v1;
  v5 = sub_1A5F63F8C();
  v6 = sub_1A5F6443C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 80);
    v8 = *(uint64_t **)(v0 + 64);
    v9 = swift_slowAlloc();
    v19 = (_QWORD *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v21 = v20;
    *(_DWORD *)v9 = 136315394;
    v11 = *v8;
    v10 = v8[1];
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 40) = sub_1A5F18694(v11, v10, &v21);
    sub_1A5F6458C();
    swift_bridgeObjectRelease();
    sub_1A5F18558((uint64_t)v8);
    sub_1A5F18558((uint64_t)v8);
    *(_WORD *)(v9 + 12) = 2112;
    v12 = v7;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 48) = v13;
    sub_1A5F6458C();
    *v19 = v13;

    _os_log_impl(&dword_1A5EB9000, v5, v6, "Upload service failed to sign data for upload; fallback to no signature, identifier=%s, error=%@",
      (uint8_t *)v9,
      0x16u);
    sub_1A5EF17C8(0, (unint64_t *)&qword_1ED1CB700, (void (*)(uint64_t))sub_1A5F1916C);
    swift_arrayDestroy();
    MEMORY[0x1A85B8D2C](v19, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85B8D2C](v20, -1, -1);
    MEMORY[0x1A85B8D2C](v9, -1, -1);

  }
  else
  {
    v14 = *(void **)(v0 + 80);
    v15 = *(_QWORD *)(v0 + 64);

    sub_1A5F18558(v15);
    sub_1A5F18558(v15);

  }
  v16 = *(void **)(v0 + 80);
  v21 = 0;
  v22 = 0xE000000000000000;
  sub_1A5F64634();
  v17 = v22;
  *(_QWORD *)(v0 + 16) = v21;
  *(_QWORD *)(v0 + 24) = v17;
  sub_1A5F641B4();
  *(_QWORD *)(v0 + 32) = v16;
  sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
  sub_1A5F646F4();

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1A5F155C4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, char *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_1A5F18D84();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10, v13);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  sub_1A5F15704(a3, a4, a5, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1A5F18E48, v15);
  return swift_release();
}

uint64_t sub_1A5F156C0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  sub_1A5F0CDE4(a1, a2, a3);
  sub_1A5F18D84();
  return sub_1A5F64334();
}

uint64_t sub_1A5F15704(uint64_t a1, _QWORD *a2, char *a3, uint64_t (*a4)(uint64_t, _QWORD, uint64_t), uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  NSObject *v47;
  os_log_type_t v48;
  int v49;
  _BOOL4 v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t (*v67)(_QWORD, _QWORD, _QWORD);
  uint64_t v68;
  void (*v69)(uint64_t *__return_ptr, char *, uint64_t, uint64_t, uint64_t (*)(uint64_t, unint64_t, void *, void *), uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  void (*v82)(uint64_t, char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t (*v96)(uint64_t, _QWORD, uint64_t);
  uint64_t v97;
  _QWORD *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103[3];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106[3];
  uint64_t v107;
  uint64_t v108;

  v6 = v5;
  v98 = a2;
  v99 = a3;
  v101 = a1;
  v9 = *v5;
  v10 = sub_1A5F63B90();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5EF17C8(0, (unint64_t *)&qword_1ED1CE6B0, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v82 - v18;
  v20 = sub_1A5F63DD0();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v26 = MEMORY[0x1E0C80A78](v22);
  if (*((_BYTE *)v6 + 120) == 1)
    return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, double))a4)(0, 0, 4, v26);
  v91 = v9;
  v92 = v25;
  v93 = (uint64_t)v16;
  v89 = v13;
  v96 = a4;
  v97 = v10;
  v94 = v11;
  v95 = (char *)&v82 - v24;
  v100 = v23;
  v28 = *(_QWORD *)(v101 + 48);
  sub_1A5EBF770(v28, (uint64_t)v19);
  v29 = v100;
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v30((uint64_t)v19, 1, v100) == 1)
  {
    sub_1A5F1950C((uint64_t)v19, (uint64_t)&qword_1ED1CE6B0, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1A5EF17C8);
    return v96(v28, 0, 3);
  }
  else
  {
    v31 = v6;
    v87 = a5;
    v88 = 7104878;
    v32 = v95;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v95, v19, v29);
    v85 = v6[3];
    v84 = v6[4];
    v90 = swift_allocBox();
    v34 = v33;
    v35 = v92;
    v82 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 16);
    v82(v92, v32, v29);
    sub_1A5F63B60();
    sub_1A5F63B30();
    v106[0] = sub_1A5EF9D64(v28);
    v106[1] = v36;
    sub_1A5F641B4();
    v37 = *(_QWORD *)(v91 + 88);
    v38 = *(void (**)(void))(v37 + 8);
    v91 = *(_QWORD *)(v91 + 80);
    v86 = v37;
    v38();
    sub_1A5F641B4();
    swift_bridgeObjectRelease();
    sub_1A5F63B84();
    swift_bridgeObjectRelease();
    v39 = v101;
    sub_1A5F63B84();
    sub_1A5F63B84();
    sub_1A5F63B84();
    v40 = v93;
    sub_1A5F63B6C();
    v41 = v100;
    if (v30(v40, 1, v100))
    {
      sub_1A5F1950C(v40, (uint64_t)&qword_1ED1CE6B0, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1A5EF17C8);
      v42 = 0xE300000000000000;
      v93 = 7104878;
    }
    else
    {
      v82(v35, (char *)v40, v41);
      sub_1A5F1950C(v40, (uint64_t)&qword_1ED1CE6B0, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1A5EF17C8);
      v93 = sub_1A5F63D04();
      v42 = v43;
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v35, v41);
    }
    v83 = v21;
    if (sub_1A5F63B48())
    {
      v88 = sub_1A5F640C4();
      v45 = v44;
      swift_bridgeObjectRelease();
    }
    else
    {
      v45 = 0xE300000000000000;
    }
    v98 = v31;
    v46 = (char *)v31 + qword_1ED1CD448;
    sub_1A5EBF724(v39);
    sub_1A5EBF724(v39);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47 = sub_1A5F63F8C();
    v48 = sub_1A5F64454();
    v49 = v48;
    v50 = os_log_type_enabled(v47, v48);
    v51 = (uint64_t *)v39;
    v99 = v46;
    if (v50)
    {
      v52 = swift_slowAlloc();
      v92 = swift_slowAlloc();
      v106[0] = v92;
      *(_DWORD *)v52 = 136315650;
      LODWORD(v85) = v49;
      v53 = v42;
      v55 = *(_QWORD *)v39;
      v54 = *(_QWORD *)(v39 + 8);
      swift_bridgeObjectRetain();
      v103[0] = sub_1A5F18694(v55, v54, v106);
      sub_1A5F6458C();
      swift_bridgeObjectRelease();
      sub_1A5F18558(v39);
      sub_1A5F18558(v39);
      *(_WORD *)(v52 + 12) = 2080;
      swift_bridgeObjectRetain();
      v103[0] = sub_1A5F18694(v93, v53, v106);
      sub_1A5F6458C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v52 + 22) = 2080;
      swift_bridgeObjectRetain();
      v103[0] = sub_1A5F18694(v88, v45, v106);
      sub_1A5F6458C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A5EB9000, v47, (os_log_type_t)v85, "Upload service sending upload request, identifier=%s, url=%s, headers=%s", (uint8_t *)v52, 0x20u);
      v56 = v92;
      swift_arrayDestroy();
      MEMORY[0x1A85B8D2C](v56, -1, -1);
      MEMORY[0x1A85B8D2C](v52, -1, -1);

    }
    else
    {

      sub_1A5F18558(v39);
      sub_1A5F18558(v39);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v57 = v94;
    v58 = v89;
    sub_1A5EBDB88((uint64_t)v103);
    v59 = v104;
    v60 = v105;
    v98 = __swift_project_boxed_opaque_existential_1(v103, v104);
    v61 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v58, v34, v97);
    v62 = *(_QWORD *)(v39 + 16);
    v92 = *(_QWORD *)(v39 + 24);
    v93 = v62;
    v63 = swift_allocObject();
    swift_weakInit();
    v64 = swift_allocObject();
    v65 = *(_OWORD *)(v39 + 16);
    *(_OWORD *)(v64 + 56) = *(_OWORD *)v39;
    v66 = v86;
    *(_QWORD *)(v64 + 16) = v91;
    *(_QWORD *)(v64 + 24) = v66;
    v67 = v96;
    *(_QWORD *)(v64 + 32) = v63;
    *(_QWORD *)(v64 + 40) = v67;
    *(_QWORD *)(v64 + 48) = v87;
    *(_OWORD *)(v64 + 72) = v65;
    *(_OWORD *)(v64 + 88) = *(_OWORD *)(v39 + 32);
    v68 = v90;
    *(_QWORD *)(v64 + 104) = v51[6];
    *(_QWORD *)(v64 + 112) = v68;
    v69 = *(void (**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t, uint64_t (*)(uint64_t, unint64_t, void *, void *), uint64_t, uint64_t, uint64_t))(v60 + 8);
    sub_1A5EBF724((uint64_t)v51);
    swift_retain();
    swift_retain();
    swift_retain();
    v69(v106, v58, v93, v92, sub_1A5F18F0C, v64, v59, v60);
    v70 = (uint64_t)v51;
    swift_release();
    (*(void (**)(char *, uint64_t))(v94 + 8))(v58, v61);
    swift_release();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v103);
    v72 = *v51;
    v71 = v51[1];
    v73 = v107;
    v74 = v108;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v106, v107);
    v75 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v74 + 16);
    swift_bridgeObjectRetain();
    v75(v72, v71, v73, v74);
    v76 = v107;
    v77 = v108;
    __swift_project_boxed_opaque_existential_1(v106, v107);
    (*(void (**)(uint64_t, uint64_t))(v77 + 32))(v76, v77);
    sub_1A5EBF724((uint64_t)v51);
    v78 = sub_1A5F63F8C();
    v79 = sub_1A5F64454();
    if (os_log_type_enabled(v78, v79))
    {
      v80 = (uint8_t *)swift_slowAlloc();
      v81 = swift_slowAlloc();
      v103[0] = v81;
      *(_DWORD *)v80 = 136315138;
      swift_bridgeObjectRetain();
      v102 = sub_1A5F18694(v72, v71, v103);
      sub_1A5F6458C();
      swift_bridgeObjectRelease();
      sub_1A5F18558(v70);
      _os_log_impl(&dword_1A5EB9000, v78, v79, "Upload task submitted, identifier=%s", v80, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B8D2C](v81, -1, -1);
      MEMORY[0x1A85B8D2C](v80, -1, -1);
    }
    else
    {
      sub_1A5F18558((uint64_t)v51);
    }

    (*(void (**)(char *, uint64_t))(v83 + 8))(v95, v100);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v106);
    return swift_release();
  }
}

uint64_t sub_1A5F160F0()
{
  _BYTE v1[40];

  sub_1A5EBDB88((uint64_t)v1);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v1);
}

uint64_t sub_1A5F16124(uint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);

  v26 = a7;
  v27 = a6;
  v25 = a4;
  v12 = sub_1A5F63B90();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_projectBox();
  swift_beginAccess();
  if (!swift_weakLoadStrong())
    return v27(2, 0, 4);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  sub_1A5F16298(a8, (uint64_t)v15, a3, a1, a2, v25);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v27(v18, v20, v22);
  sub_1A5EF8280(v18, v20, v22);
  return swift_release();
}

void sub_1A5F16298(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t *v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  id v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  os_log_type_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  id v72;
  const char *v73;
  id v74;
  id v75;
  os_log_type_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  unint64_t v86;
  id v87;
  id v88;
  uint64_t v89;
  unint64_t v90;
  id v91;
  id v92;
  uint64_t *v93;
  NSObject *v94;
  os_log_type_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t *v106;
  id v107;
  id v108;
  NSObject *v109;
  os_log_type_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  id v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  os_log_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  void *v128;
  void *v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  unint64_t v133;
  id v134;
  NSObject *v135;
  os_log_type_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  id v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  _BYTE v146[4];
  int v147;
  os_log_t v148;
  uint64_t v149;
  unint64_t v150;
  id v151;
  uint64_t v152;
  id v153;
  id v154;
  uint64_t *v155;
  id v156;
  id v157;
  uint64_t v158;
  unint64_t v159;
  id v160;

  v155 = (uint64_t *)a1;
  v11 = sub_1A5F63B90();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v146[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v146[-v16];
  v18 = sub_1A5F64160();
  MEMORY[0x1E0C80A78](v18);
  if (!a6)
  {
    v150 = (unint64_t)v14;
    v151 = v17;
    v152 = v12;
    if (!a3)
    {
      __break(1u);
      return;
    }
    objc_opt_self();
    v40 = (void *)swift_dynamicCastObjCClassUnconditional();
    v41 = a3;
    v153 = objc_msgSend(v40, sel_statusCode);
    v154 = v40;
    v42 = objc_msgSend(v40, sel_allHeaderFields);
    v43 = sub_1A5F640B8();

    v44 = sub_1A5F180C4(v43);
    swift_bridgeObjectRelease();
    if (!v44)
      sub_1A5ED6984(MEMORY[0x1E0DEE9D8]);
    v45 = (uint64_t)objc_msgSend(v154, sel_statusCode);
    if ((unint64_t)(v45 - 200) <= 0x63)
    {
      v46 = v155;
      sub_1A5EBF724((uint64_t)v155);
      v47 = v41;
      swift_bridgeObjectRetain();
      sub_1A5EBF724((uint64_t)v46);
      v48 = v47;
      swift_bridgeObjectRetain();
      v49 = sub_1A5F63F8C();
      v50 = sub_1A5F64454();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = swift_slowAlloc();
        v156 = (id)swift_slowAlloc();
        v160 = v156;
        *(_DWORD *)v51 = 136315650;
        v52 = *v46;
        v53 = v46[1];
        swift_bridgeObjectRetain();
        v158 = sub_1A5F18694(v52, v53, (uint64_t *)&v160);
        sub_1A5F6458C();
        swift_bridgeObjectRelease();
        sub_1A5F18558((uint64_t)v46);
        sub_1A5F18558((uint64_t)v46);
        *(_WORD *)(v51 + 12) = 2048;
        v54 = objc_msgSend(v154, sel_statusCode);

        v158 = (uint64_t)v54;
        sub_1A5F6458C();

        *(_WORD *)(v51 + 22) = 2080;
        v158 = 0;
        v159 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1A5F64634();
        swift_bridgeObjectRelease();
        v158 = 0x6F43737574617473;
        v159 = 0xEB000000003D6564;
        v157 = v153;
        sub_1A5F64844();
        sub_1A5F641B4();
        swift_bridgeObjectRelease();
        sub_1A5F641B4();
        swift_bridgeObjectRetain();
        sub_1A5F640C4();
        sub_1A5F641B4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v158 = sub_1A5F18694(v158, v159, (uint64_t *)&v160);
        sub_1A5F6458C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A5EB9000, v49, v50, "Upload completed successfully, identifier=%s, status=%ld, uploadResponse=%s", (uint8_t *)v51, 0x20u);
        v55 = v156;
        swift_arrayDestroy();
        MEMORY[0x1A85B8D2C](v55, -1, -1);
        MEMORY[0x1A85B8D2C](v51, -1, -1);

LABEL_15:
        return;
      }
LABEL_30:

      sub_1A5F18558((uint64_t)v46);
      sub_1A5F18558((uint64_t)v46);
      swift_bridgeObjectRelease_n();
      goto LABEL_15;
    }
    switch(v45)
    {
      case 429:
        v46 = v155;
        sub_1A5EBF724((uint64_t)v155);
        v88 = v41;
        swift_bridgeObjectRetain();
        sub_1A5EBF724((uint64_t)v46);
        v48 = v88;
        swift_bridgeObjectRetain();
        v49 = sub_1A5F63F8C();
        v68 = sub_1A5F6443C();
        if (!os_log_type_enabled(v49, v68))
          goto LABEL_30;
        v69 = swift_slowAlloc();
        v156 = (id)swift_slowAlloc();
        v160 = v156;
        *(_DWORD *)v69 = 136315650;
        v89 = *v46;
        v90 = v46[1];
        swift_bridgeObjectRetain();
        v158 = sub_1A5F18694(v89, v90, (uint64_t *)&v160);
        sub_1A5F6458C();
        swift_bridgeObjectRelease();
        sub_1A5F18558((uint64_t)v46);
        sub_1A5F18558((uint64_t)v46);
        *(_WORD *)(v69 + 12) = 2048;
        v91 = objc_msgSend(v154, sel_statusCode);

        v158 = (uint64_t)v91;
        sub_1A5F6458C();

        *(_WORD *)(v69 + 22) = 2080;
        v158 = 0;
        v159 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1A5F64634();
        swift_bridgeObjectRelease();
        v158 = 0x6F43737574617473;
        v159 = 0xEB000000003D6564;
        v157 = v153;
        sub_1A5F64844();
        sub_1A5F641B4();
        swift_bridgeObjectRelease();
        sub_1A5F641B4();
        swift_bridgeObjectRetain();
        sub_1A5F640C4();
        sub_1A5F641B4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v158 = sub_1A5F18694(v158, v159, (uint64_t *)&v160);
        sub_1A5F6458C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v73 = "Upload HTTP too many requests, and will retry, identifier=%s, status=%ld, uploadResponse=%s";
        goto LABEL_35;
      case 408:
        v46 = v155;
        sub_1A5EBF724((uint64_t)v155);
        v84 = v41;
        swift_bridgeObjectRetain();
        sub_1A5EBF724((uint64_t)v46);
        v48 = v84;
        swift_bridgeObjectRetain();
        v49 = sub_1A5F63F8C();
        v68 = sub_1A5F6443C();
        if (!os_log_type_enabled(v49, v68))
          goto LABEL_30;
        v69 = swift_slowAlloc();
        v156 = (id)swift_slowAlloc();
        v160 = v156;
        *(_DWORD *)v69 = 136315650;
        v85 = *v46;
        v86 = v46[1];
        swift_bridgeObjectRetain();
        v158 = sub_1A5F18694(v85, v86, (uint64_t *)&v160);
        sub_1A5F6458C();
        swift_bridgeObjectRelease();
        sub_1A5F18558((uint64_t)v46);
        sub_1A5F18558((uint64_t)v46);
        *(_WORD *)(v69 + 12) = 2048;
        v87 = objc_msgSend(v154, sel_statusCode);

        v158 = (uint64_t)v87;
        sub_1A5F6458C();

        *(_WORD *)(v69 + 22) = 2080;
        v158 = 0;
        v159 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1A5F64634();
        swift_bridgeObjectRelease();
        v158 = 0x6F43737574617473;
        v159 = 0xEB000000003D6564;
        v157 = v153;
        sub_1A5F64844();
        sub_1A5F641B4();
        swift_bridgeObjectRelease();
        sub_1A5F641B4();
        swift_bridgeObjectRetain();
        sub_1A5F640C4();
        sub_1A5F641B4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v158 = sub_1A5F18694(v158, v159, (uint64_t *)&v160);
        sub_1A5F6458C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v73 = "Upload HTTP timeout, and will retry, identifier=%s, status=%ld, uploadResponse=%s";
        goto LABEL_35;
      case 401:
        v46 = v155;
        sub_1A5EBF724((uint64_t)v155);
        v67 = v41;
        swift_bridgeObjectRetain();
        sub_1A5EBF724((uint64_t)v46);
        v48 = v67;
        swift_bridgeObjectRetain();
        v49 = sub_1A5F63F8C();
        v68 = sub_1A5F6443C();
        if (!os_log_type_enabled(v49, v68))
          goto LABEL_30;
        v69 = swift_slowAlloc();
        v156 = (id)swift_slowAlloc();
        v160 = v156;
        *(_DWORD *)v69 = 136315650;
        v70 = *v46;
        v71 = v46[1];
        swift_bridgeObjectRetain();
        v158 = sub_1A5F18694(v70, v71, (uint64_t *)&v160);
        sub_1A5F6458C();
        swift_bridgeObjectRelease();
        sub_1A5F18558((uint64_t)v46);
        sub_1A5F18558((uint64_t)v46);
        *(_WORD *)(v69 + 12) = 2048;
        v72 = objc_msgSend(v154, sel_statusCode);

        v158 = (uint64_t)v72;
        sub_1A5F6458C();

        *(_WORD *)(v69 + 22) = 2080;
        v158 = 0;
        v159 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1A5F64634();
        swift_bridgeObjectRelease();
        v158 = 0x6F43737574617473;
        v159 = 0xEB000000003D6564;
        v157 = v153;
        sub_1A5F64844();
        sub_1A5F641B4();
        swift_bridgeObjectRelease();
        sub_1A5F641B4();
        swift_bridgeObjectRetain();
        sub_1A5F640C4();
        sub_1A5F641B4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v158 = sub_1A5F18694(v158, v159, (uint64_t *)&v160);
        sub_1A5F6458C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v73 = "Upload HTTP failed authorization, and will retry, identifier=%s, status=%ld, uploadResponse=%s";
LABEL_35:
        _os_log_impl(&dword_1A5EB9000, v49, v68, v73, (uint8_t *)v69, 0x20u);
        v92 = v156;
        swift_arrayDestroy();
        MEMORY[0x1A85B8D2C](v92, -1, -1);
        MEMORY[0x1A85B8D2C](v69, -1, -1);

        return;
    }
    if ((unint64_t)(v45 - 430) < 0x46
      || (v45 & 0xFFFFFFFFFFFFFFF8) == 0x190
      || (unint64_t)(v45 - 409) <= 0x13)
    {
      if (a5 >> 60 == 15)
      {
        v149 = 0;
        v150 = 0xE000000000000000;
      }
      else
      {
        sub_1A5EE1EF0(a4, a5);
        sub_1A5F64154();
        v158 = sub_1A5F6413C();
        v159 = v100;
        sub_1A5EDCBFC(0, &qword_1ED1CC458, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
        v149 = sub_1A5F6455C();
        v150 = v101;
        sub_1A5EE45CC(a4, a5);
        swift_bridgeObjectRelease();
      }
      v102 = (void *)v11;
      v103 = a2;
      v105 = v151;
      v104 = v152;
      (*(void (**)(id, uint64_t, uint64_t))(v152 + 16))(v151, v103, v11);
      v106 = v155;
      sub_1A5EBF724((uint64_t)v155);
      v107 = v41;
      swift_bridgeObjectRetain();
      sub_1A5EBF724((uint64_t)v106);
      v108 = v107;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v109 = sub_1A5F63F8C();
      v110 = sub_1A5F64448();
      v111 = v110;
      if (os_log_type_enabled(v109, v110))
      {
        v112 = swift_slowAlloc();
        v148 = v109;
        v113 = v112;
        v151 = (id)swift_slowAlloc();
        v160 = v151;
        *(_DWORD *)v113 = 136316162;
        v147 = v111;
        v156 = v102;
        v114 = *v106;
        v115 = v106[1];
        swift_bridgeObjectRetain();
        v158 = sub_1A5F18694(v114, v115, (uint64_t *)&v160);
        sub_1A5F6458C();
        swift_bridgeObjectRelease();
        sub_1A5F18558((uint64_t)v106);
        sub_1A5F18558((uint64_t)v106);
        *(_WORD *)(v113 + 12) = 2048;
        v116 = objc_msgSend(v154, sel_statusCode);

        v158 = (uint64_t)v116;
        sub_1A5F6458C();

        *(_WORD *)(v113 + 22) = 2080;
        v158 = sub_1A5F63B48();
        sub_1A5F190B0();
        v117 = v150;
        v118 = sub_1A5F6455C();
        v120 = v119;
        swift_bridgeObjectRelease();
        v158 = sub_1A5F18694(v118, v120, (uint64_t *)&v160);
        sub_1A5F6458C();
        swift_bridgeObjectRelease();
        (*(void (**)(id, id))(v152 + 8))(v105, v156);
        *(_WORD *)(v113 + 32) = 2080;
        v158 = 0;
        v159 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1A5F64634();
        swift_bridgeObjectRelease();
        v158 = 0x6F43737574617473;
        v159 = 0xEB000000003D6564;
        v157 = v153;
        sub_1A5F64844();
        sub_1A5F641B4();
        swift_bridgeObjectRelease();
        sub_1A5F641B4();
        swift_bridgeObjectRetain();
        sub_1A5F640C4();
        sub_1A5F641B4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v158 = sub_1A5F18694(v158, v159, (uint64_t *)&v160);
        sub_1A5F6458C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v113 + 42) = 2080;
        swift_bridgeObjectRetain();
        v158 = sub_1A5F18694(v149, v117, (uint64_t *)&v160);
        sub_1A5F6458C();
        swift_bridgeObjectRelease_n();
        v121 = v148;
        _os_log_impl(&dword_1A5EB9000, v148, (os_log_type_t)v147, "Upload HTTP failed and won't retry, identifier=%s, status=%ld, headers=%s, uploadResponse=%s, body=%s", (uint8_t *)v113, 0x34u);
        v122 = (uint64_t)v151;
LABEL_54:
        swift_arrayDestroy();
        MEMORY[0x1A85B8D2C](v122, -1, -1);
        MEMORY[0x1A85B8D2C](v113, -1, -1);

        return;
      }

      sub_1A5F18558((uint64_t)v106);
      sub_1A5F18558((uint64_t)v106);

      (*(void (**)(id, void *))(v104 + 8))(v105, v102);
    }
    else
    {
      if (v45 >= 500)
      {
        v93 = v155;
        sub_1A5EBF724((uint64_t)v155);
        sub_1A5EBF724((uint64_t)v93);
        v48 = v41;
        v94 = sub_1A5F63F8C();
        v95 = sub_1A5F6443C();
        if (os_log_type_enabled(v94, v95))
        {
          v96 = swift_slowAlloc();
          v97 = swift_slowAlloc();
          v158 = v97;
          *(_DWORD *)v96 = 136315394;
          v98 = *v93;
          v99 = v93[1];
          swift_bridgeObjectRetain();
          v160 = (id)sub_1A5F18694(v98, v99, &v158);
          sub_1A5F6458C();
          swift_bridgeObjectRelease();
          sub_1A5F18558((uint64_t)v93);
          sub_1A5F18558((uint64_t)v93);
          *(_WORD *)(v96 + 12) = 2048;
          v160 = objc_msgSend(v154, sel_statusCode);
          sub_1A5F6458C();

          _os_log_impl(&dword_1A5EB9000, v94, v95, "Upload HTTP failed--will retry later, identifier=%s, statusCode=%ld", (uint8_t *)v96, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1A85B8D2C](v97, -1, -1);
          MEMORY[0x1A85B8D2C](v96, -1, -1);

        }
        else
        {

          sub_1A5F18558((uint64_t)v93);
          sub_1A5F18558((uint64_t)v93);
        }
        goto LABEL_15;
      }
      if (a5 >> 60 == 15)
      {
        v149 = 0;
        v151 = (id)0xE000000000000000;
      }
      else
      {
        v123 = a4;
        v124 = a5;
        v125 = a5;
        v126 = v123;
        sub_1A5EE1EF0(v123, v125);
        sub_1A5F64154();
        v158 = sub_1A5F6413C();
        v159 = v127;
        sub_1A5EDCBFC(0, &qword_1ED1CC458, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
        v149 = sub_1A5F6455C();
        v151 = v128;
        sub_1A5EE45CC(v126, v124);
        swift_bridgeObjectRelease();
      }
      v129 = (void *)v11;
      v130 = a2;
      v131 = v155;
      v132 = v152;
      v133 = v150;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v152 + 16))(v150, v130, v11);
      sub_1A5EBF724((uint64_t)v131);
      v134 = v41;
      swift_bridgeObjectRetain();
      sub_1A5EBF724((uint64_t)v131);
      v108 = v134;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v135 = sub_1A5F63F8C();
      v136 = sub_1A5F64448();
      v137 = v136;
      if (os_log_type_enabled(v135, v136))
      {
        v138 = swift_slowAlloc();
        v148 = v135;
        v113 = v138;
        v155 = (uint64_t *)swift_slowAlloc();
        v160 = v155;
        *(_DWORD *)v113 = 136316162;
        v147 = v137;
        v156 = v129;
        v139 = *v131;
        v140 = v131[1];
        swift_bridgeObjectRetain();
        v158 = sub_1A5F18694(v139, v140, (uint64_t *)&v160);
        sub_1A5F6458C();
        swift_bridgeObjectRelease();
        sub_1A5F18558((uint64_t)v131);
        sub_1A5F18558((uint64_t)v131);
        *(_WORD *)(v113 + 12) = 2048;
        v141 = objc_msgSend(v154, sel_statusCode);

        v158 = (uint64_t)v141;
        sub_1A5F6458C();

        *(_WORD *)(v113 + 22) = 2080;
        v158 = sub_1A5F63B48();
        sub_1A5F190B0();
        v142 = (unint64_t)v151;
        v143 = sub_1A5F6455C();
        v145 = v144;
        swift_bridgeObjectRelease();
        v158 = sub_1A5F18694(v143, v145, (uint64_t *)&v160);
        sub_1A5F6458C();
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, id))(v152 + 8))(v133, v156);
        *(_WORD *)(v113 + 32) = 2080;
        v158 = 0;
        v159 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1A5F64634();
        swift_bridgeObjectRelease();
        v158 = 0x6F43737574617473;
        v159 = 0xEB000000003D6564;
        v157 = v153;
        sub_1A5F64844();
        sub_1A5F641B4();
        swift_bridgeObjectRelease();
        sub_1A5F641B4();
        swift_bridgeObjectRetain();
        sub_1A5F640C4();
        sub_1A5F641B4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v158 = sub_1A5F18694(v158, v159, (uint64_t *)&v160);
        sub_1A5F6458C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v113 + 42) = 2080;
        swift_bridgeObjectRetain();
        v158 = sub_1A5F18694(v149, v142, (uint64_t *)&v160);
        sub_1A5F6458C();
        swift_bridgeObjectRelease_n();
        v121 = v148;
        _os_log_impl(&dword_1A5EB9000, v148, (os_log_type_t)v147, "Upload HTTP failed and unhandled. No retry, identifier=%s, status=%ld, headers=%s, uploadResponse=%s, body=%s", (uint8_t *)v113, 0x34u);
        v122 = (uint64_t)v155;
        goto LABEL_54;
      }

      sub_1A5F18558((uint64_t)v131);
      sub_1A5F18558((uint64_t)v131);

      (*(void (**)(unint64_t, void *))(v132 + 8))(v133, v129);
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    return;
  }
  v19 = a6;
  v20 = (void *)sub_1A5F63CD4();
  v21 = objc_msgSend(v20, sel_domain);
  v22 = sub_1A5F64130();
  v24 = v23;

  if (v22 == sub_1A5F64130() && v24 == v25)
  {
    swift_bridgeObjectRelease_n();
    v28 = v155;
  }
  else
  {
    v27 = sub_1A5F64880();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = v155;
    if ((v27 & 1) == 0)
    {
      v29 = a6;
      sub_1A5EBF724((uint64_t)v28);
      v30 = a6;
      sub_1A5EBF724((uint64_t)v28);
      v31 = sub_1A5F63F8C();
      v32 = sub_1A5F6443C();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = swift_slowAlloc();
        v34 = (_QWORD *)swift_slowAlloc();
        v35 = swift_slowAlloc();
        v158 = v35;
        *(_DWORD *)v33 = 136315394;
        v156 = v20;
        v36 = *v28;
        v37 = v28[1];
        swift_bridgeObjectRetain();
        v160 = (id)sub_1A5F18694(v36, v37, &v158);
        sub_1A5F6458C();
        swift_bridgeObjectRelease();
        sub_1A5F18558((uint64_t)v28);
        sub_1A5F18558((uint64_t)v28);
        *(_WORD *)(v33 + 12) = 2112;
        v38 = a6;
        v39 = (id)_swift_stdlib_bridgeErrorToNSError();
        v160 = v39;
        sub_1A5F6458C();
        *v34 = v39;

        _os_log_impl(&dword_1A5EB9000, v31, v32, "Upload encountered unknown error; will retry with attempt increment, identifier=%s, error=%@",
          (uint8_t *)v33,
          0x16u);
        sub_1A5EF17C8(0, (unint64_t *)&qword_1ED1CB700, (void (*)(uint64_t))sub_1A5F1916C);
        swift_arrayDestroy();
        MEMORY[0x1A85B8D2C](v34, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1A85B8D2C](v35, -1, -1);
        MEMORY[0x1A85B8D2C](v33, -1, -1);

        return;
      }
      goto LABEL_21;
    }
  }
  v56 = objc_msgSend(v20, sel_code);
  if ((unint64_t)v56 + 1009 <= 8 && ((1 << (v56 - 15)) & 0x131) != 0)
  {
    v57 = a6;
    sub_1A5EBF724((uint64_t)v28);
    v58 = a6;
    sub_1A5EBF724((uint64_t)v28);
    v31 = sub_1A5F63F8C();
    v59 = sub_1A5F6443C();
    if (os_log_type_enabled(v31, v59))
    {
      v60 = swift_slowAlloc();
      v61 = (_QWORD *)swift_slowAlloc();
      v62 = swift_slowAlloc();
      v158 = v62;
      *(_DWORD *)v60 = 136315394;
      v156 = v20;
      v64 = *v28;
      v63 = v28[1];
      swift_bridgeObjectRetain();
      v160 = (id)sub_1A5F18694(v64, v63, &v158);
      sub_1A5F6458C();
      swift_bridgeObjectRelease();
      sub_1A5F18558((uint64_t)v28);
      sub_1A5F18558((uint64_t)v28);
      *(_WORD *)(v60 + 12) = 2112;
      v65 = a6;
      v66 = (id)_swift_stdlib_bridgeErrorToNSError();
      v160 = v66;
      sub_1A5F6458C();
      *v61 = v66;

      _os_log_impl(&dword_1A5EB9000, v31, v59, "Upload attempted while offline; will retry without attempt increment, identifier=%s, error=%@",
        (uint8_t *)v60,
        0x16u);
      sub_1A5EF17C8(0, (unint64_t *)&qword_1ED1CB700, (void (*)(uint64_t))sub_1A5F1916C);
      swift_arrayDestroy();
      MEMORY[0x1A85B8D2C](v61, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1A85B8D2C](v62, -1, -1);
      MEMORY[0x1A85B8D2C](v60, -1, -1);

      return;
    }
    goto LABEL_21;
  }
  v74 = a6;
  sub_1A5EBF724((uint64_t)v28);
  v75 = a6;
  sub_1A5EBF724((uint64_t)v28);
  v31 = sub_1A5F63F8C();
  v76 = sub_1A5F6443C();
  if (!os_log_type_enabled(v31, v76))
  {
LABEL_21:

    sub_1A5F18558((uint64_t)v28);
    sub_1A5F18558((uint64_t)v28);

    return;
  }
  v77 = swift_slowAlloc();
  v78 = (_QWORD *)swift_slowAlloc();
  v79 = swift_slowAlloc();
  v158 = v79;
  *(_DWORD *)v77 = 136315394;
  v156 = v20;
  v80 = *v28;
  v81 = v28[1];
  swift_bridgeObjectRetain();
  v160 = (id)sub_1A5F18694(v80, v81, &v158);
  sub_1A5F6458C();
  swift_bridgeObjectRelease();
  sub_1A5F18558((uint64_t)v28);
  sub_1A5F18558((uint64_t)v28);
  *(_WORD *)(v77 + 12) = 2112;
  v82 = a6;
  v83 = (id)_swift_stdlib_bridgeErrorToNSError();
  v160 = v83;
  sub_1A5F6458C();
  *v78 = v83;

  _os_log_impl(&dword_1A5EB9000, v31, v76, "Upload URLError; will retry with attempt increment, identifier=%s, error=%@",
    (uint8_t *)v77,
    0x16u);
  sub_1A5EF17C8(0, (unint64_t *)&qword_1ED1CB700, (void (*)(uint64_t))sub_1A5F1916C);
  swift_arrayDestroy();
  MEMORY[0x1A85B8D2C](v78, -1, -1);
  swift_arrayDestroy();
  MEMORY[0x1A85B8D2C](v79, -1, -1);
  MEMORY[0x1A85B8D2C](v77, -1, -1);

}

unint64_t sub_1A5F180C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[40];
  _OWORD v30[2];
  _OWORD v31[2];
  uint64_t v32;
  _OWORD v33[2];
  _OWORD v34[2];
  uint64_t v35;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1A5F19114(0, &qword_1ED1CD938, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0DECD58]);
    v2 = sub_1A5F64748();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v25 = a1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(a1 + 64);
  v26 = (_QWORD *)v2;
  v23 = v2 + 64;
  v24 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = (v5 - 1) & v5;
      v12 = __clz(__rbit64(v5)) | (v7 << 6);
      v13 = v7;
    }
    else
    {
      v14 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_40;
      if (v14 >= v24)
      {
LABEL_36:
        sub_1A5F12BAC();
        return (unint64_t)v26;
      }
      v15 = *(_QWORD *)(v25 + 8 * v14);
      v13 = v7 + 1;
      if (!v15)
      {
        v13 = v7 + 2;
        if (v7 + 2 >= v24)
          goto LABEL_36;
        v15 = *(_QWORD *)(v25 + 8 * v13);
        if (!v15)
        {
          v13 = v7 + 3;
          if (v7 + 3 >= v24)
            goto LABEL_36;
          v15 = *(_QWORD *)(v25 + 8 * v13);
          if (!v15)
          {
            v13 = v7 + 4;
            if (v7 + 4 >= v24)
              goto LABEL_36;
            v15 = *(_QWORD *)(v25 + 8 * v13);
            if (!v15)
            {
              v16 = v7 + 5;
              if (v7 + 5 >= v24)
                goto LABEL_36;
              v15 = *(_QWORD *)(v25 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  v13 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_41;
                  if (v13 >= v24)
                    goto LABEL_36;
                  v15 = *(_QWORD *)(v25 + 8 * v13);
                  ++v16;
                  if (v15)
                    goto LABEL_26;
                }
              }
              v13 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      v11 = (v15 - 1) & v15;
      v12 = __clz(__rbit64(v15)) + (v13 << 6);
    }
    sub_1A5F191A8(*(_QWORD *)(a1 + 48) + 40 * v12, (uint64_t)v33);
    sub_1A5EF30B0(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_1A5F191A8((uint64_t)v30, (uint64_t)v29);
    if (!swift_dynamicCast())
    {
      sub_1A5F191E4((uint64_t)v30);
LABEL_35:
      swift_bridgeObjectRelease();
      sub_1A5F12BAC();
      swift_release();
      return 0;
    }
    sub_1A5EF30B0((uint64_t)v31 + 8, (uint64_t)v29);
    sub_1A5F191E4((uint64_t)v30);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    result = sub_1A5EF11E8(v27, v28);
    if ((v17 & 1) != 0)
    {
      v8 = 16 * result;
      v9 = (uint64_t *)(v26[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v9 = v27;
      v9[1] = v28;
      v10 = (uint64_t *)(v26[7] + v8);
      result = swift_bridgeObjectRelease();
      *v10 = v27;
      v10[1] = v28;
      goto LABEL_8;
    }
    if (v26[2] >= v26[3])
      break;
    *(_QWORD *)(v23 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = (uint64_t *)(v26[6] + 16 * result);
    *v18 = v27;
    v18[1] = v28;
    v19 = (uint64_t *)(v26[7] + 16 * result);
    *v19 = v27;
    v19[1] = v28;
    v20 = v26[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_39;
    v26[2] = v22;
LABEL_8:
    v7 = v13;
    v5 = v11;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A5F1848C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1A5F184EC;
  v4[10] = a1;
  v4[11] = v1;
  return swift_task_switch();
}

uint64_t sub_1A5F184EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  v8 = *v3;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, a3);
}

uint64_t sub_1A5F18558(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_1A5EF0908(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A5F185A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5F155C4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32), *(char **)(v1 + 40));
}

uint64_t sub_1A5F185B0(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1A5F185E4(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_1A5F18604(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1A5F18624(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_1A5F18694(v6, v7, a3);
  v8 = *a1 + 8;
  sub_1A5F6458C();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1A5F18694(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1A5F18764(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1A5EF30B0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1A5EF30B0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1A5F18764(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1A5F64598();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1A5F1891C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1A5F64670();
  if (!v8)
  {
    sub_1A5F64700();
    __break(1u);
LABEL_17:
    result = sub_1A5F64760();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1A5F1891C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1A5F189B0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A5F18C14(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1A5F18C14(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1A5F189B0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1A5F18B24(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1A5F64640();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1A5F64700();
      __break(1u);
LABEL_10:
      v2 = sub_1A5F641CC();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1A5F64760();
    __break(1u);
LABEL_14:
    result = sub_1A5F64700();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1A5F18B24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1A5EDCBFC(0, &qword_1ED1CD978, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1A5F18B9C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1A5F64208();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1A85B7F04](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_1A5F18C14(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1A5EDCBFC(0, &qword_1ED1CD978, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

_BYTE **sub_1A5F18D74(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void sub_1A5F18D84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CC870)
  {
    v0 = sub_1A5F64340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CC870);
  }
}

uint64_t sub_1A5F18DE8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A5F18D84();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1A5F18E48(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  sub_1A5F18D84();
  return sub_1A5F156C0(a1, a2, a3);
}

uint64_t sub_1A5F18E9C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A5F18EC0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A5EF0908(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F18F0C(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  uint64_t v4;

  return sub_1A5F16124(a1, a2, a3, a4, *(_QWORD *)(v4 + 32), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40), *(_QWORD *)(v4 + 48), v4 + 56);
}

void *sub_1A5F18F44(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_1A5F64760();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

void sub_1A5F18FD8(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_1A5F6458C();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_1A5F19088@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

void sub_1A5F190B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CB6C8)
  {
    sub_1A5F19114(255, (unint64_t *)&qword_1ED1CE190, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x1E0DEA048]);
    v0 = sub_1A5F64568();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CB6C8);
  }
}

void sub_1A5F19114(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1A5F1916C()
{
  unint64_t result;

  result = qword_1ED1CB6F8;
  if (!qword_1ED1CB6F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1CB6F8);
  }
  return result;
}

uint64_t sub_1A5F191A8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1A5F191E4(uint64_t a1)
{
  uint64_t v2;

  sub_1A5F19220();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A5F19220()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED1CE1C0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED1CE1C0);
  }
}

uint64_t sub_1A5F1928C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  __int128 v29[2];
  void *v30;
  _QWORD v31[5];
  uint64_t v32[5];

  v32[3] = a8;
  v32[4] = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v32);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(boxed_opaque_existential_1, a3, a8);
  v31[3] = type metadata accessor for SHA1Base64SigningService();
  v31[4] = &off_1E4FD0158;
  v31[0] = a2;
  v18 = qword_1ED1CD448;
  if (qword_1ED1CD438 != -1)
    swift_once();
  v19 = sub_1A5F63F98();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED1D21B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a7 + v18, v20, v19);
  type metadata accessor for UploadEndpoint();
  v21 = swift_allocObject();
  v30 = &unk_1EE817C60;
  v22 = swift_dynamicCastObjCProtocolConditional();
  if (v22)
    v23 = v22;
  else
    v23 = a1;
  *(_QWORD *)(v21 + 16) = v23;
  *(_BYTE *)(v21 + 24) = v22 != 0;
  *(_QWORD *)(a7 + 16) = v21;
  sub_1A5ECE02C((uint64_t)v31, a7 + 40);
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  sub_1A5ECE02C((uint64_t)v32, a7 + 80);
  *(_BYTE *)(a7 + 120) = a6 & 1;
  sub_1A5ECE02C((uint64_t)v32, (uint64_t)v29);
  v24 = swift_allocObject();
  sub_1A5EC1D18(v29, v24 + 16);
  sub_1A5F19604(0, &qword_1ED1CF500, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Lazy);
  v25 = swift_allocObject();
  type metadata accessor for UnfairLock();
  *(_OWORD *)(v25 + 32) = 0u;
  *(_OWORD *)(v25 + 48) = 0u;
  *(_QWORD *)(v25 + 64) = 0;
  v26 = swift_allocObject();
  swift_unknownObjectRetain();
  v27 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v26 + 16) = v27;
  *v27 = 0;
  *(_DWORD *)(v26 + 24) = 0x10000;
  *(_QWORD *)(v25 + 16) = sub_1A5F195B8;
  *(_QWORD *)(v25 + 24) = v24;
  *(_QWORD *)(v25 + 72) = v26;
  *(_QWORD *)(v25 + 80) = 1;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
  *(_QWORD *)(a7 + 128) = v25;
  return a7;
}

uint64_t sub_1A5F194C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1A5F1950C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v5;

  v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1A5F19548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(a2, a1, v7);
  return a2;
}

uint64_t sub_1A5F19594()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1A5F195B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

void sub_1A5F19604(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1A5EE2EE8(255, &qword_1ED1CE7A8);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t static ProcessError.== infix(_:_:)()
{
  return 1;
}

uint64_t ProcessError.hash(into:)()
{
  return sub_1A5F6491C();
}

uint64_t ProcessError.hashValue.getter()
{
  sub_1A5F64910();
  sub_1A5F6491C();
  return sub_1A5F64928();
}

unint64_t sub_1A5F196DC()
{
  unint64_t result;

  result = qword_1EE80D040;
  if (!qword_1EE80D040)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for ProcessError, &type metadata for ProcessError);
    atomic_store(result, (unint64_t *)&qword_1EE80D040);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ProcessError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5F19760 + 4 * byte_1A5F68A08[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5F19780 + 4 * byte_1A5F68A0D[v4]))();
}

_BYTE *sub_1A5F19760(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5F19780(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5F19788(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5F19790(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5F19798(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5F197A0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ProcessError()
{
  return &type metadata for ProcessError;
}

uint64_t sub_1A5F197BC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v19 = a1;
  v20 = a2;
  v6 = type metadata accessor for SequenceEntry(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1A5EFD114(0, v10, 0);
    v11 = v21;
    v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v12 = a3 + v18;
    v13 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      v19(v12);
      if (v4)
        break;
      v4 = 0;
      v21 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1A5EFD114(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      *(_QWORD *)(v11 + 16) = v15 + 1;
      sub_1A5ECD6B0((uint64_t)v9, v11 + v18 + v15 * v13, type metadata accessor for SequenceEntry);
      v12 += v13;
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1A5F19914(_QWORD *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t result;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  double v26;
  unsigned int v27;
  double *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _QWORD *v42;
  char *v43;
  double *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  unint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char v52[16];

  v5 = v4;
  v49 = a2;
  v50 = a3;
  v51 = a4;
  sub_1A5F232AC(0, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  v8 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)v48 - v9);
  v11 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD *)((char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1A5F64070();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (_QWORD *)((char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *(void **)(*(_QWORD *)(v5 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *v18 = v19;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v15 + 104))(v18, *MEMORY[0x1E0DEF740], v14, v16);
  v20 = v19;
  LOBYTE(v19) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v15 + 8))(v18, v14);
  if ((v19 & 1) != 0)
  {
    v22 = v5 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
    swift_beginAccess();
    sub_1A5ED7E14(v22, (uint64_t)v13, type metadata accessor for SessionManager.SessionState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v48[1] = v5;
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
        sub_1A5ED4D44((uint64_t)v13, type metadata accessor for SessionManager.SessionState);
      v24 = *(_QWORD *)(v5 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider + 24);
      v25 = *(_QWORD *)(v5 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider + 32);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_timestampConfigurationProvider), v24);
      v26 = (*(double (**)(char *, uint64_t, uint64_t))(v25 + 8))(v52, v24, v25);
      v27 = v52[0];
    }
    else
    {
      v28 = (double *)(*v13 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_timestampConfiguration);
      v27 = *(unsigned __int8 *)v28;
      v26 = v28[1];
      swift_release();
    }
    v48[0] = v27;
    v29 = *a1;
    v30 = a1[1];
    v31 = (void *)a1[2];
    v32 = v8[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)v10 + v32;
    v35 = sub_1A5F63F08();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v34, v33, v35);
    v36 = v8[13];
    v37 = (_QWORD *)((char *)a1 + v8[12]);
    v39 = *v37;
    v38 = v37[1];
    v40 = *(_QWORD *)((char *)a1 + v36);
    v41 = *((_BYTE *)a1 + v36 + 8);
    sub_1A5EDCB9C((uint64_t)a1 + v8[14], (uint64_t)v10 + v8[14]);
    *v10 = v29;
    v10[1] = v30;
    v10[3] = 0x302E312E30;
    v10[4] = 0xE500000000000000;
    v10[2] = v31;
    v42 = (_QWORD *)((char *)v10 + v8[12]);
    *v42 = v39;
    v42[1] = v38;
    v43 = (char *)v10 + v8[13];
    *(_QWORD *)v43 = v40;
    v43[8] = v41;
    v44 = (double *)((char *)v10 + v8[15]);
    *v44 = *(double *)v48;
    v44[1] = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v45 = v31;
    v47 = v50;
    v46 = v51;
    sub_1A5EDBD1C((uint64_t)v10, v50, v51);
    return sub_1A5ECC0D4((uint64_t)v10, v49, v47, v46, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id BridgedAccessTracker.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BridgedAccessTracker.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BridgedAccessTracker.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedAccessTracker();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedAccessTracker()
{
  return objc_opt_self();
}

uint64_t BridgedAccessTracker.time(eventType:)(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;
  void *v13;
  id v14;
  uint64_t v15;

  v3 = sub_1A5F63F08();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A5F64070();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(v1 + OBJC_IVAR___AAAccessTracker_eventMirrorStore);
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = *(void **)(*(_QWORD *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v10 = v13;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
    swift_retain();
    v14 = v13;
    LOBYTE(v13) = sub_1A5F64088();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
    if ((v13 & 1) != 0)
    {
      sub_1A5F63EFC();
      sub_1A5F1CF64(a1, v11 | 0x4000000000000000, (uint64_t)v6, 1);
      swift_release();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t BridgedAccessTracker.time(eventType:startTime:)(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t result;
  void *v11;
  id v12;
  uint64_t v13;

  v5 = sub_1A5F64070();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(v2 + OBJC_IVAR___AAAccessTracker_eventMirrorStore);
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = *(void **)(*(_QWORD *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v8 = v11;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
    swift_retain();
    v12 = v11;
    LOBYTE(v11) = sub_1A5F64088();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
    if ((v11 & 1) != 0)
    {
      sub_1A5F1CF64(a1, v9 | 0x4000000000000000, a2, 1);
      swift_release();
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t BridgedAccessTracker.time(eventType:submitAndRestartWithSession:)(char *a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t result;
  void *v14;
  id v15;
  _BYTE v16[12];
  int v17;

  v17 = a2;
  v4 = sub_1A5F63F08();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1A5F64070();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(_QWORD *)(v2 + OBJC_IVAR___AAAccessTracker_eventMirrorStore);
  result = swift_weakLoadStrong();
  if (result)
  {
    v14 = *(void **)(*(_QWORD *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v11 = v14;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
    swift_retain();
    v15 = v14;
    LOBYTE(v14) = sub_1A5F64088();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
    if ((v14 & 1) != 0)
    {
      sub_1A5F63EFC();
      sub_1A5F1CF64(a1, v12 | 0x4000000000000000, (uint64_t)v7, v17 & 1);
      swift_release();
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t BridgedAccessTracker.time(eventType:submitAndRestartWithSession:startTime:)(char *a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;
  void *v13;
  id v14;
  uint64_t v15;

  v7 = sub_1A5F64070();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(v3 + OBJC_IVAR___AAAccessTracker_eventMirrorStore);
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = *(void **)(*(_QWORD *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v10 = v13;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
    swift_retain();
    v14 = v13;
    LOBYTE(v13) = sub_1A5F64088();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
    if ((v13 & 1) != 0)
    {
      sub_1A5F1CF64(a1, v11 | 0x4000000000000000, a3, a2 & 1);
      swift_release();
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id BridgedAccessTracker.time(rawEvent:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_timeRawEvent_submitAndRestartWithSession_, a1, 1);
}

void BridgedAccessTracker.time(rawEvent:startTime:)(uint64_t a1, uint64_t a2)
{
  sub_1A5F1BCD4(a1, a2, (SEL *)&selRef_timeRawEvent_submitAndRestartWithSession_startTime_, 1);
}

void BridgedAccessTracker.time(rawEvent:submitAndRestartWithSession:)(void *a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t Strong;
  void *v13;
  id v14;
  id v15;
  _BYTE v16[12];
  int v17;

  v4 = sub_1A5F63F08();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1A5F64070();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v17 = a2;
    v13 = *(void **)(*(_QWORD *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v11 = v13;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
    v14 = a1;
    v15 = v13;
    LOBYTE(v13) = sub_1A5F64088();
    (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
    if ((v13 & 1) != 0)
    {
      sub_1A5F63EFC();
      sub_1A5F1CF64((char *)a1, 0x8000000000000000, (uint64_t)v7, v17 & 1);
      swift_release();
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t BridgedAccessTracker.time(rawEvent:submitAndRestartWithSession:startTime:)(void *a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;

  v6 = sub_1A5F64070();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = *(void **)(*(_QWORD *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v9 = v11;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
    v12 = a1;
    v13 = v11;
    LOBYTE(v11) = sub_1A5F64088();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
    if ((v11 & 1) != 0)
    {
      sub_1A5F1CF64((char *)a1, 0x8000000000000000, a3, a2 & 1);

      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id BridgedAccessTracker.submit(eventType:)()
{
  void *v0;

  return objc_msgSend(v0, sel_submitEventType_onlyIfTimed_, swift_getObjCClassFromMetadata(), 0);
}

uint64_t BridgedAccessTracker.submit(eventType:onlyIfTimed:)(char *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t Strong;
  void *v14;
  id v15;
  uint64_t result;
  _BYTE v17[4];
  int v18;
  char *v19;
  _OWORD v20[2];

  v18 = a2;
  v19 = a1;
  v3 = sub_1A5F63F08();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1A5F64070();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_QWORD *)(v2 + OBJC_IVAR___AAAccessTracker_eventMirrorStore);
  v12 = *(_QWORD *)(v2 + OBJC_IVAR___AAAccessTracker_accessTracker);
  memset(v20, 0, sizeof(v20));
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return sub_1A5EDCB44((uint64_t)v20);
  v14 = *(void **)(*(_QWORD *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v10 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  swift_retain();
  v15 = v14;
  LOBYTE(v14) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v14 & 1) != 0)
  {
    sub_1A5F63EFC();
    sub_1A5ECAEA0(v19, v11 | 0x4000000000000000, v18 & 1, (uint64_t)v6, *(_QWORD *)(v12 + 24), *(_QWORD *)(v12 + 32), (uint64_t)v20, 0, 0);
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    swift_release();
    return sub_1A5EDCB44((uint64_t)v20);
  }
  __break(1u);
  return result;
}

void BridgedAccessTracker.submit(eventType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  _QWORD v8[6];

  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8[4] = a2;
  v8[5] = a3;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1A5F1A97C;
  v8[3] = &block_descriptor_3;
  v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_submitEventType_onlyIfTimed_completion_, ObjCClassFromMetadata, 0, v7);
  _Block_release(v7);
}

void sub_1A5F1A97C(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t BridgedAccessTracker.submit(eventType:onlyIfTimed:completion:)(char *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  void *v18;
  id v19;
  uint64_t result;
  _BYTE v21[4];
  int v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD v26[2];

  v22 = a2;
  v23 = a1;
  v7 = sub_1A5F63F08();
  v24 = *(_QWORD *)(v7 - 8);
  v25 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1A5F64070();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *(_QWORD *)(v4 + OBJC_IVAR___AAAccessTracker_eventMirrorStore);
  v15 = *(_QWORD *)(v4 + OBJC_IVAR___AAAccessTracker_accessTracker);
  memset(v26, 0, sizeof(v26));
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = a4;
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    swift_retain();
    goto LABEL_5;
  }
  v18 = *(void **)(*(_QWORD *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v13 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  swift_retain();
  swift_retain();
  v19 = v18;
  LOBYTE(v18) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v18 & 1) != 0)
  {
    sub_1A5F63EFC();
    sub_1A5ECAEA0(v23, v14 | 0x4000000000000000, v22 & 1, (uint64_t)v9, *(_QWORD *)(v15 + 24), *(_QWORD *)(v15 + 32), (uint64_t)v26, (void (*)(uint64_t *))sub_1A5F2336C, (void (*)(uint64_t *))v16);
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v24 + 8))(v9, v25);
    swift_release();
LABEL_5:
    swift_release();
    return sub_1A5EDCB44((uint64_t)v26);
  }
  __break(1u);
  return result;
}

id BridgedAccessTracker.submit(rawEvent:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_submitRawEvent_onlyIfTimed_, a1, 0);
}

uint64_t BridgedAccessTracker.submit(rawEvent:onlyIfTimed:)(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t Strong;
  void *v14;
  id v15;
  uint64_t result;
  id v17;
  int v18;
  _OWORD v19[2];

  v18 = a2;
  v4 = sub_1A5F63F08();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A5F64070();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (id *)((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)(v2 + OBJC_IVAR___AAAccessTracker_accessTracker);
  memset(v19, 0, sizeof(v19));
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return sub_1A5EDCB44((uint64_t)v19);
  v14 = *(void **)(*(_QWORD *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v11 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v17 = a1;
  v15 = v14;
  LOBYTE(v14) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v14 & 1) != 0)
  {
    sub_1A5F63EFC();
    sub_1A5ECAEA0((char *)a1, 0x8000000000000000, v18 & 1, (uint64_t)v7, *(_QWORD *)(v12 + 24), *(_QWORD *)(v12 + 32), (uint64_t)v19, 0, 0);
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    return sub_1A5EDCB44((uint64_t)v19);
  }
  __break(1u);
  return result;
}

void BridgedAccessTracker.submit(rawEvent:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  _QWORD v6[6];

  v6[4] = a2;
  v6[5] = a3;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1A5F1A97C;
  v6[3] = &block_descriptor_3;
  v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_submitRawEvent_onlyIfTimed_completion_, a1, 0, v5);
  _Block_release(v5);
}

uint64_t BridgedAccessTracker.submit(rawEvent:onlyIfTimed:completion:)(char *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  id v18;
  uint64_t result;
  char *v20;
  int v21;
  uint64_t v22;
  char *v23;
  _OWORD v24[2];

  v21 = a2;
  v23 = a1;
  v22 = sub_1A5F63F08();
  v7 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A5F64070();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char **)((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(_QWORD *)(v4 + OBJC_IVAR___AAAccessTracker_accessTracker);
  memset(v24, 0, sizeof(v24));
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    swift_retain();
    goto LABEL_5;
  }
  v17 = *(void **)(*(_QWORD *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v13 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v20 = v23;
  swift_retain();
  v18 = v17;
  LOBYTE(v17) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v17 & 1) != 0)
  {
    sub_1A5F63EFC();
    sub_1A5ECAEA0(v23, 0x8000000000000000, v21 & 1, (uint64_t)v9, *(_QWORD *)(v14 + 24), *(_QWORD *)(v14 + 32), (uint64_t)v24, (void (*)(uint64_t *))sub_1A5F2336C, (void (*)(uint64_t *))v15);
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);

LABEL_5:
    swift_release();
    return sub_1A5EDCB44((uint64_t)v24);
  }
  __break(1u);
  return result;
}

uint64_t BridgedAccessTracker.explicitSubmit(eventType:submitTime:)(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  id v13;
  uint64_t result;
  _OWORD v15[2];

  v5 = sub_1A5F64070();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (_QWORD *)((char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(v2 + OBJC_IVAR___AAAccessTracker_eventMirrorStore);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR___AAAccessTracker_accessTracker);
  memset(v15, 0, sizeof(v15));
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return sub_1A5EDCB44((uint64_t)v15);
  v12 = *(void **)(*(_QWORD *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v8 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  swift_retain();
  v13 = v12;
  LOBYTE(v12) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v12 & 1) != 0)
  {
    sub_1A5ECAEA0(a1, v9 | 0x4000000000000000, 0, a2, *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), (uint64_t)v15, 0, 0);
    swift_release();
    swift_release();
    return sub_1A5EDCB44((uint64_t)v15);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5F1B500(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, char *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t ObjCClassMetadata;
  id v12;
  uint64_t v14;

  v7 = sub_1A5F63F08();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjCClassMetadata = swift_getObjCClassMetadata();
  sub_1A5F63EE4();
  v12 = a1;
  a5(ObjCClassMetadata, v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t BridgedAccessTracker.explicitSubmit(eventType:onlyIfTimed:submitTime:)(char *a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t Strong;
  void *v14;
  id v15;
  uint64_t result;
  _OWORD v17[2];

  v7 = sub_1A5F64070();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(v3 + OBJC_IVAR___AAAccessTracker_eventMirrorStore);
  v12 = *(_QWORD *)(v3 + OBJC_IVAR___AAAccessTracker_accessTracker);
  memset(v17, 0, sizeof(v17));
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return sub_1A5EDCB44((uint64_t)v17);
  v14 = *(void **)(*(_QWORD *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v10 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  swift_retain();
  v15 = v14;
  LOBYTE(v14) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v14 & 1) != 0)
  {
    sub_1A5ECAEA0(a1, v11 | 0x4000000000000000, a2 & 1, a3, *(_QWORD *)(v12 + 24), *(_QWORD *)(v12 + 32), (uint64_t)v17, 0, 0);
    swift_release();
    swift_release();
    return sub_1A5EDCB44((uint64_t)v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5F1B720(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t ObjCClassMetadata;
  id v14;
  uint64_t v16;

  v9 = sub_1A5F63F08();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjCClassMetadata = swift_getObjCClassMetadata();
  sub_1A5F63EE4();
  v14 = a1;
  a6(ObjCClassMetadata, a4, v12);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void BridgedAccessTracker.explicitSubmit(eventType:submitTime:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  void *v10;
  _QWORD v11[6];

  v5 = v4;
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)sub_1A5F63EA8();
  v11[4] = a3;
  v11[5] = a4;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A5F1A97C;
  v11[3] = &block_descriptor_9;
  v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_explicitSubmitEventType_onlyIfTimed_submitTime_completion_, ObjCClassFromMetadata, 0, v9, v10);
  _Block_release(v10);

}

uint64_t BridgedAccessTracker.explicitSubmit(eventType:onlyIfTimed:submitTime:completion:)(char *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  id v18;
  uint64_t result;
  char *v20;
  uint64_t v21;
  _OWORD v22[2];

  v20 = a1;
  v21 = a3;
  v9 = sub_1A5F64070();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char **)((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(_QWORD *)(v5 + OBJC_IVAR___AAAccessTracker_eventMirrorStore);
  v14 = *(_QWORD *)(v5 + OBJC_IVAR___AAAccessTracker_accessTracker);
  memset(v22, 0, sizeof(v22));
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = a5;
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    swift_retain();
    swift_retain();
    swift_release();
    goto LABEL_5;
  }
  v17 = *(void **)(*(_QWORD *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v12 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF740], v9);
  swift_retain();
  swift_retain();
  v18 = v17;
  LOBYTE(v17) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v17 & 1) != 0)
  {
    sub_1A5ECAEA0(v20, v13 | 0x4000000000000000, a2 & 1, v21, *(_QWORD *)(v14 + 24), *(_QWORD *)(v14 + 32), (uint64_t)v22, (void (*)(uint64_t *))sub_1A5F2336C, (void (*)(uint64_t *))v15);
    swift_release();
    swift_release();
LABEL_5:
    swift_release();
    return sub_1A5EDCB44((uint64_t)v22);
  }
  __break(1u);
  return result;
}

void BridgedAccessTracker.explicitSubmit(rawEvent:submitTime:)(uint64_t a1, uint64_t a2)
{
  sub_1A5F1BCD4(a1, a2, (SEL *)&selRef_explicitSubmitRawEvent_onlyIfTimed_submitTime_, 0);
}

void sub_1A5F1BCD4(uint64_t a1, uint64_t a2, SEL *a3, char a4)
{
  void *v4;
  id v8;

  v8 = (id)sub_1A5F63EA8();
  objc_msgSend(v4, *a3, a1, a4 & 1, v8);

}

uint64_t sub_1A5F1BD4C(void *a1, uint64_t a2, void *a3, uint64_t a4, SEL *a5, char a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v18;

  v10 = sub_1A5F63F08();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5F63EE4();
  v14 = a3;
  v15 = a1;
  v16 = (void *)sub_1A5F63EA8();
  objc_msgSend(v15, *a5, v14, a6 & 1, v16);

  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t BridgedAccessTracker.explicitSubmit(rawEvent:onlyIfTimed:submitTime:)(void *a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  id v14;
  id v15;
  uint64_t result;
  _OWORD v17[2];

  v7 = sub_1A5F64070();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(v3 + OBJC_IVAR___AAAccessTracker_accessTracker);
  memset(v17, 0, sizeof(v17));
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return sub_1A5EDCB44((uint64_t)v17);
  v13 = *(void **)(*(_QWORD *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v10 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v14 = a1;
  v15 = v13;
  LOBYTE(v13) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v13 & 1) != 0)
  {
    sub_1A5ECAEA0((char *)a1, 0x8000000000000000, a2 & 1, a3, *(_QWORD *)(v11 + 24), *(_QWORD *)(v11 + 32), (uint64_t)v17, 0, 0);

    swift_release();
    return sub_1A5EDCB44((uint64_t)v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5F1BF7C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(id, uint64_t, char *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v17;

  v10 = sub_1A5F63F08();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5F63EE4();
  v14 = a3;
  v15 = a1;
  a6(v14, a4, v13);

  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void BridgedAccessTracker.explicitSubmit(rawEvent:submitTime:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  void *v9;
  void *v10;
  _QWORD v11[6];

  v5 = v4;
  v9 = (void *)sub_1A5F63EA8();
  v11[4] = a3;
  v11[5] = a4;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A5F1A97C;
  v11[3] = &block_descriptor_15;
  v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_explicitSubmitRawEvent_onlyIfTimed_submitTime_completion_, a1, 0, v9, v10);
  _Block_release(v10);

}

uint64_t BridgedAccessTracker.explicitSubmit(rawEvent:onlyIfTimed:submitTime:completion:)(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  id v18;
  id v19;
  uint64_t result;
  id v21;
  uint64_t v22;
  int v23;
  _OWORD v24[2];

  v23 = a2;
  v10 = sub_1A5F64070();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(_QWORD *)(v5 + OBJC_IVAR___AAAccessTracker_accessTracker);
  memset(v24, 0, sizeof(v24));
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = a5;
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    v21 = a1;
    swift_retain();

    goto LABEL_5;
  }
  v22 = a3;
  v17 = *(void **)(*(_QWORD *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v13 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v18 = a1;
  swift_retain();
  v19 = v17;
  LOBYTE(v17) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v17 & 1) != 0)
  {
    sub_1A5ECAEA0((char *)a1, 0x8000000000000000, v23 & 1, v22, *(_QWORD *)(v14 + 24), *(_QWORD *)(v14 + 32), (uint64_t)v24, (void (*)(uint64_t *))sub_1A5F1D488, (void (*)(uint64_t *))v15);

    swift_release();
LABEL_5:
    swift_release();
    return sub_1A5EDCB44((uint64_t)v24);
  }
  __break(1u);
  return result;
}

void sub_1A5F1C424(uint64_t a1, void (*a2)(id, id))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  id v25;
  id v26;
  uint64_t v27;
  void (*v28)(id, id);
  objc_super v29;

  v28 = a2;
  sub_1A5F232AC(0, &qword_1ED1CC198, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  v4 = v3;
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v27 - v5);
  sub_1A5F232AC(0, (unint64_t *)&unk_1ED1CB9B0, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  MEMORY[0x1E0C80A78](v7);
  v9 = (id *)((char *)&v27 - v8);
  sub_1A5F22DFC(a1, (uint64_t)&v27 - v8, (unint64_t *)&unk_1ED1CB9B0, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = *v9;
    v11 = *v9;
    v28(0, v10);

  }
  else
  {
    sub_1A5F22FF0((uint64_t)v9, (uint64_t)v6);
    v13 = *v6;
    v12 = v6[1];
    v15 = v6[3];
    v14 = v6[4];
    v16 = (void *)v6[2];
    v17 = (uint64_t *)((char *)v6 + *(int *)(v4 + 48));
    v19 = *v17;
    v18 = v17[1];
    v20 = (objc_class *)type metadata accessor for BridgedProcessEvent();
    v21 = (char *)objc_allocWithZone(v20);
    v22 = &v21[OBJC_IVAR___AAProcessEvent_name];
    *(_QWORD *)v22 = v13;
    *((_QWORD *)v22 + 1) = v12;
    v23 = &v21[OBJC_IVAR___AAProcessEvent_version];
    *(_QWORD *)v23 = v15;
    *((_QWORD *)v23 + 1) = v14;
    *(_QWORD *)&v21[OBJC_IVAR___AAProcessEvent_json] = v16;
    v24 = &v21[OBJC_IVAR___AAProcessEvent_groupName];
    *(_QWORD *)v24 = v19;
    *((_QWORD *)v24 + 1) = v18;
    v29.receiver = v21;
    v29.super_class = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = v16;
    swift_bridgeObjectRetain();
    v26 = objc_msgSendSuper2(&v29, sel_init);
    v28(v26, 0);

    sub_1A5ECC0D4((uint64_t)v6, &qword_1ED1CC198, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  }
}

uint64_t BridgedAccessTracker.push(data:traits:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *ObjCClassFromMetadata;
  id v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  void *v20;
  id v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;

  v23 = a4;
  v24 = a5;
  v8 = sub_1A5F64070();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for BridgedRawDataEvent();
  v12 = swift_dynamicCastClass();
  if (v12)
  {
    v14 = *(_QWORD *)(v12 + OBJC_IVAR___AARawDataEvent_name);
    v13 = *(_QWORD *)(v12 + OBJC_IVAR___AARawDataEvent_name + 8);
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_getObjectType();
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    swift_unknownObjectRetain_n();
    v16 = objc_msgSend(ObjCClassFromMetadata, sel_dataName, v23, v24);
    v14 = sub_1A5F64130();
    v13 = v17;

  }
  if (a2)
    v18 = sub_1A5EC7208();
  else
    v18 = (char *)MEMORY[0x1E0DEE9D8];
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_11;
  }
  v20 = *(void **)(*(_QWORD *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v11 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v21 = v20;
  LOBYTE(v20) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v20 & 1) != 0)
  {
    sub_1A5EC5EFC(a1, v14, v13, 1, (uint64_t)v18, a3, v23, v24);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
LABEL_11:
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t BridgedAccessTracker.pop(dataType:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t Strong;
  void *v8;
  id v9;
  uint64_t result;
  uint64_t v11;

  v0 = sub_1A5F64070();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_1A5F64994();
  v6 = v5;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return swift_bridgeObjectRelease();
  v8 = *(void **)(*(_QWORD *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v3 = v8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF740], v0);
  v9 = v8;
  LOBYTE(v8) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
  if ((v8 & 1) != 0)
  {
    sub_1A5EF6320(v4, v6);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall BridgedAccessTracker.pop(dataName:)(Swift::String dataName)
{
  _QWORD *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t Strong;
  void *v8;
  id v9;
  uint64_t v10;

  object = dataName._object;
  countAndFlagsBits = dataName._countAndFlagsBits;
  v3 = sub_1A5F64070();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = *(void **)(*(_QWORD *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v6 = v8;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
    v9 = v8;
    LOBYTE(v8) = sub_1A5F64088();
    (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
    if ((v8 & 1) != 0)
    {
      sub_1A5EF6320(countAndFlagsBits, object);
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t BridgedAccessTracker.peek(dataName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *boxed_opaque_existential_1;
  _QWORD v17[3];
  uint64_t v18;

  v6 = sub_1A5F64070();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (_QWORD *)((char *)&v17[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = *(void **)(*(_QWORD *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v9 = v11;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
    v12 = v11;
    LOBYTE(v11) = sub_1A5F64088();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
    if ((v11 & 1) == 0)
    {
      __break(1u);
      return result;
    }
    sub_1A5EEEDC8(a1, a2, 0, 0, 1, (uint64_t)v17);
    v13 = v18;
    if (v18)
    {
      v14 = __swift_project_boxed_opaque_existential_1(v17, v18);
      *(_QWORD *)(a3 + 24) = v13;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(boxed_opaque_existential_1, v14, v13);
      swift_release();
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
    }
    swift_release();
    result = sub_1A5EF1CF8((uint64_t)v17, &qword_1ED1CD458, qword_1ED1CE020, (uint64_t)&protocol descriptor for DataEventType);
  }
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t sub_1A5F1CF64(char *a1, unint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  char v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  int v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char *v52;
  char *v53;
  uint64_t v54;
  _QWORD v55[5];

  v51 = a4;
  v49 = a3;
  v53 = a1;
  v6 = type metadata accessor for Tracker.Timer();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v52 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5EF8034();
  MEMORY[0x1E0C80A78](v9);
  v50 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v48 - v12;
  v14 = sub_1A5F64070();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (unint64_t *)((char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v54 = v4;
  v19 = *(void **)(*(_QWORD *)(v4 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v18 = v19;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v15 + 104))(v18, *MEMORY[0x1E0DEF740], v14, v16);
  v20 = v19;
  v21 = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v15 + 8))(v18, v14);
  if ((v21 & 1) != 0)
  {
    v23 = 0x4564656764697242;
    v24 = a2 >> 62;
    v48 = a2;
    if (a2 >> 62)
    {
      if ((_DWORD)v24 == 1)
      {
        v25 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
        v26 = sub_1A5F64130();
        v28 = v27;

      }
      else
      {
        v26 = *(_QWORD *)&v53[OBJC_IVAR___AARawEvent_name];
        v28 = *(_QWORD *)&v53[OBJC_IVAR___AARawEvent_name + 8];
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v26 = 0x4564656764697242;
      v28 = 0xEC000000746E6576;
    }
    v29 = v54;
    swift_beginAccess();
    v30 = *(_QWORD *)(v29 + 104);
    if (*(_QWORD *)(v30 + 16))
    {
      swift_bridgeObjectRetain();
      v31 = sub_1A5EF11E8(v26, v28);
      if ((v32 & 1) != 0)
      {
        sub_1A5ED7E14(*(_QWORD *)(v30 + 56) + *(_QWORD *)(v7 + 72) * v31, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
        v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
        v33(v13, 0, 1, v6);
      }
      else
      {
        v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
        v33(v13, 1, 1, v6);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v33(v13, 1, 1, v6);
    }
    swift_bridgeObjectRelease();
    v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6);
    result = sub_1A5ED4D44((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1A5EF8034);
    if (v34 == 1)
    {
      v35 = sub_1A5F63F08();
      v36 = (uint64_t)v52;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v52, v49, v35);
      if ((_DWORD)v24)
      {
        if ((_DWORD)v24 == 1)
        {
          v37 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
          v38 = sub_1A5F64130();
          v40 = v39;

        }
        else
        {
          v38 = *(_QWORD *)&v53[OBJC_IVAR___AARawEvent_name];
          v40 = *(_QWORD *)&v53[OBJC_IVAR___AARawEvent_name + 8];
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        v38 = 0x4564656764697242;
        v40 = 0xEC000000746E6576;
      }
      v41 = v50;
      sub_1A5ED7E14(v36, v50, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
      v33((char *)v41, 0, 1, v6);
      swift_beginAccess();
      sub_1A5ECD338(v41, v38, v40);
      swift_endAccess();
      if ((v51 & 1) != 0)
      {
        if ((_DWORD)v24)
        {
          v42 = v48;
          if ((_DWORD)v24 == 1)
          {
            v43 = v53;
            v44 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
            v23 = sub_1A5F64130();
            v46 = v45;

          }
          else
          {
            v43 = v53;
            v23 = *(_QWORD *)&v53[OBJC_IVAR___AARawEvent_name];
            v46 = *(_QWORD *)&v53[OBJC_IVAR___AARawEvent_name + 8];
            swift_bridgeObjectRetain();
          }
        }
        else
        {
          v42 = v48;
          v43 = v53;
          v46 = 0xEC000000746E6576;
        }
        sub_1A5F232AC(0, &qword_1ED1CCAF0, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for Tracker.RestartTimer);
        v55[3] = v47;
        v55[4] = &off_1E4FD30E0;
        v55[0] = v43;
        v55[1] = v42;
        swift_beginAccess();
        sub_1A5EEC96C(v43, v42);
        sub_1A5EBD7C4((uint64_t)v55, v23, v46);
        swift_endAccess();
      }
      return sub_1A5ED4D44(v36, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5F1D464()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A5F1D488(uint64_t a1)
{
  uint64_t v1;

  sub_1A5F1C424(a1, *(void (**)(id, id))(v1 + 16));
}

void sub_1A5F1D4A0(char *a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t *), void (*a9)(uint64_t *))
{
  _QWORD *v9;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  void (*v32)(_QWORD *, double);
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  _QWORD *v47;
  uint64_t v48;
  void (*v49)(_QWORD *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  int EnumCaseMultiPayload;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  _QWORD *v63;
  void (*v64)(uint64_t *);
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int *v87;
  uint64_t v88;
  uint64_t *v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t ObjectType;
  uint64_t v96;
  void (*v97)(uint64_t *);
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  unint64_t v107;
  char v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  char *v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  _BYTE *v116;
  _QWORD *v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  int *v126;
  _QWORD *v127;
  uint64_t *v128;
  char *v129;
  uint64_t v130;
  id v131;
  void (*v132)(uint64_t *);
  uint64_t v133;
  uint64_t *v134;
  _QWORD *v135;
  void (*v136)(uint64_t *);
  _QWORD *v137;
  int *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  void (*v156)(char *, uint64_t, uint64_t);
  __int128 v157;
  void (*v158)(_QWORD *, uint64_t);
  void (*v159)(uint64_t *);
  char *v160;
  unint64_t v161;
  _QWORD *v162;
  char *v163;
  __int128 v164;
  char v165;
  uint64_t v166;
  __int128 v167;
  char v168;

  v159 = a8;
  v147 = a7;
  v152 = a6;
  v151 = a5;
  v141 = a4;
  v160 = a1;
  v161 = a2;
  sub_1A5F232AC(0, &qword_1EE80D068, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1E4FD4E50, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  v138 = v11;
  MEMORY[0x1E0C80A78](v11);
  v139 = (char *)&v135 - v12;
  v13 = type metadata accessor for Sequence(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD **)((char *)&v135 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v150 = sub_1A5F63F08();
  v149 = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  v148 = (char *)&v135 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_1A5F63F2C();
  v143 = *(_QWORD *)(v140 - 8);
  MEMORY[0x1E0C80A78](v140);
  v142 = (char *)&v135 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = type metadata accessor for EventData();
  MEMORY[0x1E0C80A78](v144);
  v145 = (uint64_t *)((char *)&v135 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A5F232AC(0, &qword_1EE80D070, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1E4FD4E50, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  v153 = v19;
  MEMORY[0x1E0C80A78](v19);
  v21 = (uint64_t *)((char *)&v135 - v20);
  v154 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v154);
  v155 = (uint64_t *)((char *)&v135 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A5EF8034();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v135 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1A5F64070();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (_QWORD **)((char *)&v135 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v162 = v9;
  v31 = *(void **)(v9[10] + OBJC_IVAR___AAAccessQueue_queue);
  *v30 = v31;
  v32 = *(void (**)(_QWORD *, double))(v27 + 104);
  LODWORD(v156) = *MEMORY[0x1E0DEF740];
  *(_QWORD *)&v157 = v32;
  v32(v30, v28);
  v33 = v31;
  LOBYTE(v31) = sub_1A5F64088();
  v158 = *(void (**)(_QWORD *, uint64_t))(v27 + 8);
  v158(v30, v26);
  if ((v31 & 1) == 0)
  {
    __break(1u);
    goto LABEL_80;
  }
  if ((a3 & 1) != 0)
  {
    if (v161 >> 62)
    {
      if (v161 >> 62 == 1)
      {
        v34 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
        v35 = sub_1A5F64130();
        v37 = v36;

      }
      else
      {
        v35 = *(_QWORD *)&v160[OBJC_IVAR___AARawEvent_name];
        v37 = *(_QWORD *)&v160[OBJC_IVAR___AARawEvent_name + 8];
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v37 = 0xEC000000746E6576;
      v35 = 0x457972616D6D7553;
    }
    v38 = v162;
    swift_beginAccess();
    v39 = v38[13];
    if (*(_QWORD *)(v39 + 16))
    {
      v137 = v15;
      swift_bridgeObjectRetain();
      v40 = sub_1A5EF11E8(v35, v37);
      if ((v41 & 1) != 0)
      {
        v42 = v40;
        v146 = v21;
        v43 = *(_QWORD *)(v39 + 56);
        v44 = type metadata accessor for Tracker.Timer();
        v45 = *(_QWORD *)(v44 - 8);
        v21 = v146;
        sub_1A5ED7E14(v43 + *(_QWORD *)(v45 + 72) * v42, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v25, 0, 1, v44);
      }
      else
      {
        v44 = type metadata accessor for Tracker.Timer();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v25, 1, 1, v44);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v137;
    }
    else
    {
      v44 = type metadata accessor for Tracker.Timer();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v25, 1, 1, v44);
      swift_bridgeObjectRelease();
    }
    type metadata accessor for Tracker.Timer();
    v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v25, 1, v44);
    sub_1A5ED4D44((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1A5EF8034);
    if (v46 == 1)
      return;
  }
  v47 = v162 + 8;
  v48 = MEMORY[0x1A85B8E10](v162 + 8);
  v49 = (void (*)(_QWORD *, uint64_t, uint64_t))v157;
  v50 = v156;
  if (!v48)
    goto LABEL_21;
  v51 = v48;
  v52 = *(void **)(*(_QWORD *)(v48 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *v30 = v52;
  v49(v30, v50, v26);
  v53 = v52;
  LOBYTE(v52) = sub_1A5F64088();
  v158(v30, v26);
  if ((v52 & 1) == 0)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  v54 = v51 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
  swift_beginAccess();
  v55 = v54;
  v56 = v155;
  sub_1A5ED7E14(v55, (uint64_t)v155, type metadata accessor for SessionManager.SessionState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      sub_1A5ED4D44((uint64_t)v56, type metadata accessor for SessionManager.SessionState);
    swift_unknownObjectRelease();
LABEL_21:
    v58 = MEMORY[0x1A85B8E10](v47);
    if (!v58)
      goto LABEL_24;
    v59 = v58;
    v60 = *(void **)(*(_QWORD *)(v58 + 48) + OBJC_IVAR___AAAccessQueue_queue);
    *v30 = v60;
    v49(v30, v50, v26);
    v61 = v60;
    LOBYTE(v60) = sub_1A5F64088();
    v158(v30, v26);
    if ((v60 & 1) != 0)
    {
      v62 = *(_QWORD *)(v59 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_options);
      swift_unknownObjectRelease();
      if ((v62 & 1) != 0)
      {
        sub_1A5F1F084(v160, v161, v151, v152, v147, v159, a9);
        return;
      }
LABEL_24:
      sub_1A5F22D74();
      v30 = (_QWORD *)swift_allocError();
      *v63 = 0;
      v63[1] = 0;
      swift_willThrow();
      v64 = v159;
      if ((sub_1A5F391FC() & 1) != 0)
      {
        if (v64)
        {
LABEL_26:
          *v21 = (uint64_t)v30;
          swift_storeEnumTagMultiPayload();
          v65 = v30;
          v64(v21);

          sub_1A5ECC0D4((uint64_t)v21, &qword_1EE80D070, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1E4FD4E50, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
          return;
        }
LABEL_40:

        return;
      }
      v136 = a9;
      v146 = v21;
      if (qword_1ED1CFC08 == -1)
      {
LABEL_39:
        v98 = (id)qword_1ED1CE7B0;
        LODWORD(v162) = sub_1A5F64448();
        sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v99 = swift_allocObject();
        *(_OWORD *)(v99 + 16) = xmmword_1A5F66C40;
        v166 = 0;
        *(_QWORD *)&v167 = 0xE000000000000000;
        v163 = v160;
        *(_QWORD *)&v164 = v161;
        sub_1A5F232AC(0, &qword_1EE80D078, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1E4FD4E50, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmit);
        sub_1A5F646F4();
        v100 = v166;
        v101 = v167;
        v102 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v99 + 56) = MEMORY[0x1E0DEA968];
        v103 = sub_1A5EE19C8();
        *(_QWORD *)(v99 + 64) = v103;
        *(_QWORD *)(v99 + 32) = v100;
        *(_QWORD *)(v99 + 40) = v101;
        v166 = 0;
        *(_QWORD *)&v167 = 0xE000000000000000;
        v163 = (char *)v30;
        sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
        sub_1A5F646F4();
        v104 = v166;
        v105 = v167;
        *(_QWORD *)(v99 + 96) = v102;
        *(_QWORD *)(v99 + 104) = v103;
        *(_QWORD *)(v99 + 72) = v104;
        *(_QWORD *)(v99 + 80) = v105;
        sub_1A5F63F80();

        swift_bridgeObjectRelease();
        v64 = v159;
        v21 = v146;
        if (v159)
          goto LABEL_26;
        goto LABEL_40;
      }
LABEL_82:
      swift_once();
      goto LABEL_39;
    }
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v146 = v21;
  v66 = *v56;
  swift_unknownObjectRelease();
  v67 = MEMORY[0x1A85B8E10](v47);
  v136 = a9;
  v135 = v47;
  if (v67)
  {
    sub_1A5F1FA34(v160, v161, (uint64_t)&v166);
    v163 = (char *)v166;
    v157 = v167;
    v164 = v167;
    v165 = v168;
    v68 = sub_1A5EDBE74((uint64_t *)&v163);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v68 = 0;
  }
  v69 = v150;
  v70 = v141;
  v71 = v140;
  v137 = v15;
  v72 = v142;
  sub_1A5F63F20();
  v73 = sub_1A5F63F14();
  v75 = v74;
  (*(void (**)(char *, uint64_t))(v143 + 8))(v72, v71);
  v76 = *(void (**)(char *, uint64_t, uint64_t))(v149 + 16);
  v76(v148, v70, v69);
  v166 = 47;
  *(_QWORD *)&v167 = 0xE100000000000000;
  v163 = (char *)Tracker.path.getter();
  sub_1A5EDCBFC(0, (unint64_t *)&qword_1ED1CD930, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1A5EDB074();
  sub_1A5F64100();
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  v77 = v166;
  v78 = v167;
  v158 = (void (*)(_QWORD *, uint64_t))v66;
  *(_QWORD *)&v157 = v68;
  v156 = v76;
  if (v68)
  {
    v79 = v68;
    v80 = *(_QWORD *)(v68 + 16);
    v81 = *(_QWORD *)(v79 + 24);
    v82 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
    v83 = *(_QWORD *)(v79 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier + 8);
    if (v83)
    {
      v84 = *(_QWORD *)(v79 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_37;
    }
    swift_bridgeObjectRetain();
  }
  else
  {
    v80 = *(_QWORD *)(v66 + 16);
    v81 = *(_QWORD *)(v66 + 24);
    swift_bridgeObjectRetain();
    v82 = OBJC_IVAR____TtC12AppAnalytics13ActiveSession_appSessionIdentifier;
  }
  v85 = v66 + v82;
  v84 = *(_QWORD *)(v66 + v82);
  v83 = *(_QWORD *)(v85 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_37:
  v86 = (uint64_t)v145;
  *v145 = v73;
  *(_QWORD *)(v86 + 8) = v75;
  v87 = (int *)v144;
  v88 = v86 + *(int *)(v144 + 20);
  (*(void (**)(uint64_t, char *, uint64_t))(v149 + 32))(v88, v148, v150);
  v89 = (uint64_t *)(v86 + v87[6]);
  *v89 = v77;
  v89[1] = v78;
  v90 = (_QWORD *)(v86 + v87[7]);
  *v90 = v80;
  v90[1] = v81;
  v91 = (_QWORD *)(v86 + v87[8]);
  *v91 = v84;
  v91[1] = v83;
  v92 = v137;
  v93 = v162;
  sub_1A5F1FC8C((unint64_t)v160, v161, v86, v151, v152, (uint64_t)v137);
  v94 = v93[24];
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v94 + 8))(&v166, ObjectType, v94);
  v163 = (char *)v166;
  v96 = sub_1A5EDB7A8(v92, (uint64_t *)&v163);
  v97 = v159;
  v106 = (void *)v96;
  swift_bridgeObjectRelease();
  v107 = (unint64_t)v146;
  if (!v106)
  {
    if (qword_1ED1CFC08 != -1)
LABEL_89:
      swift_once();
    v119 = (id)qword_1ED1CE7B0;
    sub_1A5F64430();
    sub_1A5F63F80();

    if (v97)
    {
      v121 = *v92;
      v120 = v92[1];
      sub_1A5F22DB8();
      v122 = swift_allocError();
      *v123 = v121;
      v123[1] = v120;
      *(_QWORD *)v107 = v122;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      v97((uint64_t *)v107);
      swift_release();
      swift_release();
      sub_1A5ECC0D4(v107, &qword_1EE80D070, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1E4FD4E50, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
    }
    else
    {
      swift_release();
      swift_release();
    }
    v134 = v92;
    goto LABEL_78;
  }
  swift_retain();
  v97 = 0;
  v108 = 1;
  v92 = &OBJC_IVAR___AAGroup_name;
  do
  {
    swift_beginAccess();
    v107 = v93[18];
    if (v107 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v109 = sub_1A5F64724();
      if (!v109)
      {
LABEL_59:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v86 = 0;
        v107 = 0;
        goto LABEL_63;
      }
    }
    else
    {
      v109 = *(_QWORD *)((v107 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      if (!v109)
        goto LABEL_59;
    }
    v110 = v109 - 1;
    if (__OFSUB__(v109, 1))
    {
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
      goto LABEL_89;
    }
    if ((v107 & 0xC000000000000001) != 0)
    {
      v111 = (char *)MEMORY[0x1A85B836C](v110, v107);
    }
    else
    {
      if ((v110 & 0x8000000000000000) != 0)
        goto LABEL_84;
      if (v110 >= *(_QWORD *)((v107 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_85;
      v111 = (char *)*(id *)(v107 + 8 * v110 + 32);
    }
    v112 = v111;
    swift_bridgeObjectRelease();
    v86 = *(_QWORD *)&v112[OBJC_IVAR___AAGroup_name];
    v107 = *(_QWORD *)&v112[OBJC_IVAR___AAGroup_name + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();

    v113 = v93[18];
    if (v113 >> 62)
    {
      swift_bridgeObjectRetain();
      v114 = sub_1A5F64724();
      if (!v114)
      {
LABEL_62:
        swift_release();
        swift_bridgeObjectRelease();
        v97 = 0;
        v108 = 1;
        goto LABEL_63;
      }
    }
    else
    {
      v114 = *(_QWORD *)((v113 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v114)
        goto LABEL_62;
    }
    v115 = v114 - 1;
    if (__OFSUB__(v114, 1))
      goto LABEL_86;
    if ((v113 & 0xC000000000000001) != 0)
    {
      v118 = MEMORY[0x1A85B836C](v115, v113);
      swift_bridgeObjectRelease();
      v97 = *(void (**)(uint64_t *))(v118 + OBJC_IVAR___AAGroup_contentType);
      v108 = *(_BYTE *)(v118 + OBJC_IVAR___AAGroup_contentType + 8);
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      if ((v115 & 0x8000000000000000) != 0)
        goto LABEL_87;
      if (v115 >= *(_QWORD *)((v113 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_88;
      v116 = *(id *)(v113 + 8 * v115 + 32);
      swift_bridgeObjectRelease();
      v97 = *(void (**)(uint64_t *))&v116[OBJC_IVAR___AAGroup_contentType];
      v108 = v116[OBJC_IVAR___AAGroup_contentType + 8];
      swift_release();

    }
LABEL_63:
    v117 = (_QWORD *)v93[17];
    swift_retain();
    swift_release();
    if (!v117)
      goto LABEL_70;
    v93 = v117;
  }
  while (!v107);
  swift_release();
LABEL_70:
  v125 = *v137;
  v124 = v137[1];
  v126 = v138;
  v127 = v139;
  v156(&v139[v138[11]], v88, v150);
  sub_1A5EDCB9C(v147, (uint64_t)v127 + v126[14]);
  *v127 = v125;
  v127[1] = v124;
  v127[3] = 0x302E312E30;
  v127[4] = 0xE500000000000000;
  v127[2] = v106;
  v128 = (_QWORD *)((char *)v127 + v126[12]);
  *v128 = v86;
  v128[1] = v107;
  v129 = (char *)v127 + v126[13];
  *(_QWORD *)v129 = v97;
  v129[8] = v108 & 1;
  *(_OWORD *)((char *)v127 + v126[15]) = xmmword_1A5F68AE0;
  v130 = MEMORY[0x1A85B8E10](v135);
  swift_bridgeObjectRetain();
  v131 = v106;
  if (v130)
  {
    sub_1A5F19914(v127, &qword_1EE80D068, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1E4FD4E50);
    swift_unknownObjectRelease();
  }
  v132 = v159;
  v86 = (uint64_t)v145;
  if (v159)
  {
    v133 = (uint64_t)v146;
    sub_1A5F22DFC((uint64_t)v127, (uint64_t)v146, &qword_1EE80D068, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1E4FD4E50, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
    swift_storeEnumTagMultiPayload();
    v132((uint64_t *)v133);

    swift_release();
    swift_release();
    sub_1A5ECC0D4(v133, &qword_1EE80D070, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1E4FD4E50, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  }
  else
  {

    swift_release();
    swift_release();
  }
  sub_1A5ECC0D4((uint64_t)v127, &qword_1EE80D068, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1E4FD4E50, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  v134 = v137;
LABEL_78:
  sub_1A5ED4D44((uint64_t)v134, type metadata accessor for Sequence);
  sub_1A5ED4D44(v86, (uint64_t (*)(_QWORD))type metadata accessor for EventData);
}

void sub_1A5F1E6D4(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *), void (*a7)(uint64_t *))
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(uint64_t *);
  uint64_t *v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  id v72;
  void (**v73)(uint64_t *);
  uint64_t v74;
  void (*v75)(uint64_t *);
  _QWORD *v76;
  char *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  void (*v88)(uint64_t *);
  _QWORD *v89;
  void (*v90)(uint64_t *);
  id v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;

  v8 = v7;
  v90 = (void (*)(uint64_t *))a7;
  v91 = a1;
  v88 = a6;
  v85 = a5;
  v93 = a3;
  v94 = a4;
  v92 = a2;
  sub_1A5F232AC(0, (unint64_t *)&unk_1ED1CB9B0, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  v86 = v9;
  MEMORY[0x1E0C80A78](v9);
  v87 = (uint64_t *)((char *)&v80 - v10);
  v11 = sub_1A5F63F2C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for EventData();
  v84 = (_QWORD *)*((_QWORD *)v15 - 1);
  v16 = v84[8];
  MEMORY[0x1E0C80A78](v15);
  v83 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (uint64_t *)((char *)&v80 - v18);
  sub_1A5F63F20();
  v20 = sub_1A5F63F14();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1A5F63EFC();
  v95 = 47;
  v96 = 0xE100000000000000;
  v97 = Tracker.path.getter();
  sub_1A5EDCBFC(0, (unint64_t *)&qword_1ED1CD930, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1A5EDB074();
  sub_1A5F64100();
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  v23 = v95;
  v24 = v96;
  *v19 = v20;
  v19[1] = v22;
  v25 = (uint64_t *)((char *)v19 + v15[6]);
  *v25 = v23;
  v25[1] = v24;
  v26 = (uint64_t *)((char *)v19 + v15[7]);
  *v26 = 0x6F69737365536F6ELL;
  v26[1] = 0xE90000000000006ELL;
  *(_OWORD *)((char *)v19 + v15[8]) = xmmword_1A5F68AF0;
  type metadata accessor for Sequence(0);
  v27 = swift_allocBox();
  v89 = v8;
  sub_1A5EC9410((unint64_t)v91, v92, (uint64_t)v19, v93, v94, v28);
  v86 = v27;
  v87 = v19;
  v40 = v83;
  v41 = v89;
  swift_retain();
  v94 = 0;
  LODWORD(v93) = 1;
  v43 = v84;
  v42 = v85;
  v44 = v16;
  do
  {
    swift_beginAccess();
    v45 = v41[18];
    if (v45 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v46 = sub_1A5F64724();
      if (!v46)
      {
LABEL_19:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v50 = 0;
        v51 = 0;
        v54 = (uint64_t)v40;
        goto LABEL_23;
      }
    }
    else
    {
      v46 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      if (!v46)
        goto LABEL_19;
    }
    v47 = v46 - 1;
    if (__OFSUB__(v46, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      swift_once();
      v29 = (id)qword_1ED1CE7B0;
      LODWORD(v94) = sub_1A5F64448();
      sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1A5F66C40;
      v95 = 0;
      v96 = 0xE000000000000000;
      v97 = (uint64_t)v91;
      v98 = v92;
      sub_1A5F232AC(0, &qword_1ED1CC450, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmit);
      sub_1A5F646F4();
      v31 = v95;
      v32 = v96;
      v33 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
      v34 = sub_1A5EE19C8();
      *(_QWORD *)(v30 + 64) = v34;
      *(_QWORD *)(v30 + 32) = v31;
      *(_QWORD *)(v30 + 40) = v32;
      v95 = 0;
      v96 = 0xE000000000000000;
      v97 = (uint64_t)v41;
      sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
      sub_1A5F646F4();
      v35 = v95;
      v36 = v96;
      *(_QWORD *)(v30 + 96) = v33;
      *(_QWORD *)(v30 + 104) = v34;
      *(_QWORD *)(v30 + 72) = v35;
      *(_QWORD *)(v30 + 80) = v36;
      sub_1A5F63F80();

      swift_bridgeObjectRelease();
      v37 = v88;
      if (v88)
      {
        v38 = v87;
        *v87 = (uint64_t)v41;
        swift_storeEnumTagMultiPayload();
        v39 = v41;
        v37(v38);

        sub_1A5ECC0D4((uint64_t)v38, (unint64_t *)&unk_1ED1CB9B0, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
      }
      else
      {

      }
      return;
    }
    if ((v45 & 0xC000000000000001) != 0)
    {
      v48 = (char *)MEMORY[0x1A85B836C](v47, v45);
    }
    else
    {
      if ((v47 & 0x8000000000000000) != 0)
        goto LABEL_34;
      if (v47 >= *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_35;
      v48 = (char *)*(id *)(v45 + 8 * v47 + 32);
    }
    v49 = v48;
    swift_bridgeObjectRelease();
    v50 = *(_QWORD *)&v49[OBJC_IVAR___AAGroup_name];
    v51 = *(_QWORD *)&v49[OBJC_IVAR___AAGroup_name + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();

    v52 = v41[18];
    if (v52 >> 62)
    {
      swift_bridgeObjectRetain();
      v53 = sub_1A5F64724();
      v54 = (uint64_t)v40;
      if (!v53)
      {
LABEL_22:
        swift_release();
        swift_bridgeObjectRelease();
        v94 = 0;
        LODWORD(v93) = 1;
        goto LABEL_23;
      }
    }
    else
    {
      v53 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v54 = (uint64_t)v40;
      if (!v53)
        goto LABEL_22;
    }
    v55 = v53 - 1;
    if (__OFSUB__(v53, 1))
      goto LABEL_36;
    if ((v52 & 0xC000000000000001) != 0)
    {
      v59 = v42;
      v60 = MEMORY[0x1A85B836C](v55, v52);
      swift_bridgeObjectRelease();
      v94 = *(_QWORD *)(v60 + OBJC_IVAR___AAGroup_contentType);
      LODWORD(v93) = *(unsigned __int8 *)(v60 + OBJC_IVAR___AAGroup_contentType + 8);
      swift_release();
      v42 = v59;
      swift_unknownObjectRelease();
    }
    else
    {
      if ((v55 & 0x8000000000000000) != 0)
        goto LABEL_37;
      if (v55 >= *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_38;
      v56 = v42;
      v57 = (char *)*(id *)(v52 + 8 * v55 + 32);
      swift_bridgeObjectRelease();
      v94 = *(_QWORD *)&v57[OBJC_IVAR___AAGroup_contentType];
      LODWORD(v93) = v57[OBJC_IVAR___AAGroup_contentType + 8];
      swift_release();

      v42 = v56;
    }
LABEL_23:
    v58 = (_QWORD *)v41[17];
    swift_retain();
    swift_release();
    if (!v58)
      goto LABEL_28;
    v41 = v58;
  }
  while (!v51);
  swift_release();
  v54 = (uint64_t)v40;
LABEL_28:
  v61 = v42;
  v62 = swift_allocObject();
  v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DE7910]), sel_init);
  v84 = v63;
  v85 = v62;
  *(_QWORD *)(v62 + 16) = v63;
  if (v63)
  {
    type metadata accessor for AccessTracker();
    v64 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v83 = (char *)v64;
    *(_QWORD *)(v64 + 24) = 0;
    *(_QWORD *)(v64 + 32) = 0;
    v82 = swift_allocObject();
    swift_weakInit();
    sub_1A5ED7E14((uint64_t)v87, v54, (uint64_t (*)(_QWORD))type metadata accessor for EventData);
    sub_1A5EDCB9C(v61, (uint64_t)&v95);
    v65 = (*((unsigned __int8 *)v43 + 80) + 40) & ~(unint64_t)*((unsigned __int8 *)v43 + 80);
    v66 = (v44 + v65 + 7) & 0xFFFFFFFFFFFFFFF8;
    v67 = (v66 + 15) & 0xFFFFFFFFFFFFFFF8;
    v68 = (v67 + 23) & 0xFFFFFFFFFFFFFFF8;
    v81 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8;
    v69 = v54;
    v70 = (v68 + 39) & 0xFFFFFFFFFFFFFFF8;
    v71 = (_QWORD *)swift_allocObject();
    v72 = v91;
    v71[2] = v82;
    v71[3] = v72;
    v71[4] = v92;
    sub_1A5ECD6B0(v69, (uint64_t)v71 + v65, (uint64_t (*)(_QWORD))type metadata accessor for EventData);
    *(_QWORD *)((char *)v71 + v66) = v86;
    v73 = (void (**)(uint64_t *))((char *)v71 + v67);
    v74 = (uint64_t)v88;
    v75 = v90;
    *v73 = v88;
    v73[1] = v75;
    v76 = (_QWORD *)((char *)v71 + v68);
    *v76 = v50;
    v76[1] = v51;
    v77 = (char *)v71 + v81;
    *(_QWORD *)v77 = v94;
    v77[8] = v93 & 1;
    sub_1A5EDB014((uint64_t)&v95, (uint64_t)v71 + v70);
    *(_QWORD *)((char *)v71 + ((v70 + 39) & 0xFFFFFFFFFFFFFFF8)) = v85;
    type metadata accessor for SessionObserver();
    v78 = (_QWORD *)swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    v78[3] = v83;
    v78[4] = sub_1A5F231A0;
    v78[5] = v71;
    v79 = MEMORY[0x1A85B8E10](v89 + 8);
    sub_1A5EEC96C(v91, v92);
    swift_retain();
    sub_1A5EC84CC(v74);
    swift_retain();
    if (v79)
    {
      sub_1A5ECC8F4();
      swift_release();
      swift_unknownObjectRelease();
      sub_1A5ED4D44((uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for EventData);
    }
    else
    {
      sub_1A5ED4D44((uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for EventData);
      swift_release();
    }
    swift_release();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_1A5F1F084(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *), void (*a7)(uint64_t *))
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(uint64_t *);
  uint64_t *v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  id v72;
  void (**v73)(uint64_t *);
  uint64_t v74;
  void (*v75)(uint64_t *);
  _QWORD *v76;
  char *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  void (*v88)(uint64_t *);
  _QWORD *v89;
  void (*v90)(uint64_t *);
  id v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;

  v8 = v7;
  v90 = (void (*)(uint64_t *))a7;
  v91 = a1;
  v88 = a6;
  v85 = a5;
  v93 = a3;
  v94 = a4;
  v92 = a2;
  sub_1A5F232AC(0, &qword_1EE80D070, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1E4FD4E50, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  v86 = v9;
  MEMORY[0x1E0C80A78](v9);
  v87 = (uint64_t *)((char *)&v80 - v10);
  v11 = sub_1A5F63F2C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for EventData();
  v84 = (_QWORD *)*((_QWORD *)v15 - 1);
  v16 = v84[8];
  MEMORY[0x1E0C80A78](v15);
  v83 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (uint64_t *)((char *)&v80 - v18);
  sub_1A5F63F20();
  v20 = sub_1A5F63F14();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1A5F63EFC();
  v95 = 47;
  v96 = 0xE100000000000000;
  v97 = Tracker.path.getter();
  sub_1A5EDCBFC(0, (unint64_t *)&qword_1ED1CD930, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1A5EDB074();
  sub_1A5F64100();
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  v23 = v95;
  v24 = v96;
  *v19 = v20;
  v19[1] = v22;
  v25 = (uint64_t *)((char *)v19 + v15[6]);
  *v25 = v23;
  v25[1] = v24;
  v26 = (uint64_t *)((char *)v19 + v15[7]);
  *v26 = 0x6F69737365536F6ELL;
  v26[1] = 0xE90000000000006ELL;
  *(_OWORD *)((char *)v19 + v15[8]) = xmmword_1A5F68AF0;
  type metadata accessor for Sequence(0);
  v27 = swift_allocBox();
  v89 = v8;
  sub_1A5F1FC8C((unint64_t)v91, v92, (uint64_t)v19, v93, v94, v28);
  v86 = v27;
  v87 = v19;
  v40 = v83;
  v41 = v89;
  swift_retain();
  v94 = 0;
  LODWORD(v93) = 1;
  v43 = v84;
  v42 = v85;
  v44 = v16;
  do
  {
    swift_beginAccess();
    v45 = v41[18];
    if (v45 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v46 = sub_1A5F64724();
      if (!v46)
      {
LABEL_19:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v50 = 0;
        v51 = 0;
        v54 = (uint64_t)v40;
        goto LABEL_23;
      }
    }
    else
    {
      v46 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      if (!v46)
        goto LABEL_19;
    }
    v47 = v46 - 1;
    if (__OFSUB__(v46, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      swift_once();
      v29 = (id)qword_1ED1CE7B0;
      LODWORD(v94) = sub_1A5F64448();
      sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1A5F66C40;
      v95 = 0;
      v96 = 0xE000000000000000;
      v97 = (uint64_t)v91;
      v98 = v92;
      sub_1A5F232AC(0, &qword_1EE80D078, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1E4FD4E50, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmit);
      sub_1A5F646F4();
      v31 = v95;
      v32 = v96;
      v33 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
      v34 = sub_1A5EE19C8();
      *(_QWORD *)(v30 + 64) = v34;
      *(_QWORD *)(v30 + 32) = v31;
      *(_QWORD *)(v30 + 40) = v32;
      v95 = 0;
      v96 = 0xE000000000000000;
      v97 = (uint64_t)v41;
      sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
      sub_1A5F646F4();
      v35 = v95;
      v36 = v96;
      *(_QWORD *)(v30 + 96) = v33;
      *(_QWORD *)(v30 + 104) = v34;
      *(_QWORD *)(v30 + 72) = v35;
      *(_QWORD *)(v30 + 80) = v36;
      sub_1A5F63F80();

      swift_bridgeObjectRelease();
      v37 = v88;
      if (v88)
      {
        v38 = v87;
        *v87 = (uint64_t)v41;
        swift_storeEnumTagMultiPayload();
        v39 = v41;
        v37(v38);

        sub_1A5ECC0D4((uint64_t)v38, &qword_1EE80D070, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1E4FD4E50, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
      }
      else
      {

      }
      return;
    }
    if ((v45 & 0xC000000000000001) != 0)
    {
      v48 = (char *)MEMORY[0x1A85B836C](v47, v45);
    }
    else
    {
      if ((v47 & 0x8000000000000000) != 0)
        goto LABEL_34;
      if (v47 >= *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_35;
      v48 = (char *)*(id *)(v45 + 8 * v47 + 32);
    }
    v49 = v48;
    swift_bridgeObjectRelease();
    v50 = *(_QWORD *)&v49[OBJC_IVAR___AAGroup_name];
    v51 = *(_QWORD *)&v49[OBJC_IVAR___AAGroup_name + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();

    v52 = v41[18];
    if (v52 >> 62)
    {
      swift_bridgeObjectRetain();
      v53 = sub_1A5F64724();
      v54 = (uint64_t)v40;
      if (!v53)
      {
LABEL_22:
        swift_release();
        swift_bridgeObjectRelease();
        v94 = 0;
        LODWORD(v93) = 1;
        goto LABEL_23;
      }
    }
    else
    {
      v53 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v54 = (uint64_t)v40;
      if (!v53)
        goto LABEL_22;
    }
    v55 = v53 - 1;
    if (__OFSUB__(v53, 1))
      goto LABEL_36;
    if ((v52 & 0xC000000000000001) != 0)
    {
      v59 = v42;
      v60 = MEMORY[0x1A85B836C](v55, v52);
      swift_bridgeObjectRelease();
      v94 = *(_QWORD *)(v60 + OBJC_IVAR___AAGroup_contentType);
      LODWORD(v93) = *(unsigned __int8 *)(v60 + OBJC_IVAR___AAGroup_contentType + 8);
      swift_release();
      v42 = v59;
      swift_unknownObjectRelease();
    }
    else
    {
      if ((v55 & 0x8000000000000000) != 0)
        goto LABEL_37;
      if (v55 >= *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_38;
      v56 = v42;
      v57 = (char *)*(id *)(v52 + 8 * v55 + 32);
      swift_bridgeObjectRelease();
      v94 = *(_QWORD *)&v57[OBJC_IVAR___AAGroup_contentType];
      LODWORD(v93) = v57[OBJC_IVAR___AAGroup_contentType + 8];
      swift_release();

      v42 = v56;
    }
LABEL_23:
    v58 = (_QWORD *)v41[17];
    swift_retain();
    swift_release();
    if (!v58)
      goto LABEL_28;
    v41 = v58;
  }
  while (!v51);
  swift_release();
  v54 = (uint64_t)v40;
LABEL_28:
  v61 = v42;
  v62 = swift_allocObject();
  v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DE7910]), sel_init);
  v84 = v63;
  v85 = v62;
  *(_QWORD *)(v62 + 16) = v63;
  if (v63)
  {
    type metadata accessor for AccessTracker();
    v64 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v83 = (char *)v64;
    *(_QWORD *)(v64 + 24) = 0;
    *(_QWORD *)(v64 + 32) = 0;
    v82 = swift_allocObject();
    swift_weakInit();
    sub_1A5ED7E14((uint64_t)v87, v54, (uint64_t (*)(_QWORD))type metadata accessor for EventData);
    sub_1A5EDCB9C(v61, (uint64_t)&v95);
    v65 = (*((unsigned __int8 *)v43 + 80) + 40) & ~(unint64_t)*((unsigned __int8 *)v43 + 80);
    v66 = (v44 + v65 + 7) & 0xFFFFFFFFFFFFFFF8;
    v67 = (v66 + 15) & 0xFFFFFFFFFFFFFFF8;
    v68 = (v67 + 23) & 0xFFFFFFFFFFFFFFF8;
    v81 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8;
    v69 = v54;
    v70 = (v68 + 39) & 0xFFFFFFFFFFFFFFF8;
    v71 = (_QWORD *)swift_allocObject();
    v72 = v91;
    v71[2] = v82;
    v71[3] = v72;
    v71[4] = v92;
    sub_1A5ECD6B0(v69, (uint64_t)v71 + v65, (uint64_t (*)(_QWORD))type metadata accessor for EventData);
    *(_QWORD *)((char *)v71 + v66) = v86;
    v73 = (void (**)(uint64_t *))((char *)v71 + v67);
    v74 = (uint64_t)v88;
    v75 = v90;
    *v73 = v88;
    v73[1] = v75;
    v76 = (_QWORD *)((char *)v71 + v68);
    *v76 = v50;
    v76[1] = v51;
    v77 = (char *)v71 + v81;
    *(_QWORD *)v77 = v94;
    v77[8] = v93 & 1;
    sub_1A5EDB014((uint64_t)&v95, (uint64_t)v71 + v70);
    *(_QWORD *)((char *)v71 + ((v70 + 39) & 0xFFFFFFFFFFFFFFF8)) = v85;
    type metadata accessor for SessionObserver();
    v78 = (_QWORD *)swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    v78[3] = v83;
    v78[4] = sub_1A5F22E9C;
    v78[5] = v71;
    v79 = MEMORY[0x1A85B8E10](v89 + 8);
    sub_1A5EEC96C(v91, v92);
    swift_retain();
    sub_1A5EC84CC(v74);
    swift_retain();
    if (v79)
    {
      sub_1A5ECC8F4();
      swift_release();
      swift_unknownObjectRelease();
      sub_1A5ED4D44((uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for EventData);
    }
    else
    {
      sub_1A5ED4D44((uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for EventData);
      swift_release();
    }
    swift_release();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_1A5F1FA34(char *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *ObjCClassFromMetadata;
  char *v6;
  char *v7;
  uint64_t v8;
  char v10;
  char *v12;
  char *v13;
  uint64_t v14;
  char v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  if (a2 >> 62)
  {
    if (a2 >> 62 == 1)
    {
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      if ((objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_sessionGroup) & 1) != 0)
      {
        v6 = (char *)objc_msgSend(ObjCClassFromMetadata, sel_sessionGroup);
        v7 = &v6[OBJC_IVAR___AASessionGroup_groupName];
        swift_beginAccess();
        if (sub_1A5F64178() == 0x746C7561666564 && v8 == 0xE700000000000000)
        {

          swift_bridgeObjectRelease();
        }
        else
        {
          v10 = sub_1A5F64880();
          swift_bridgeObjectRelease();
          if ((v10 & 1) == 0)
          {
            v18 = *(_QWORD *)v7;
            v19 = *((_QWORD *)v7 + 1);
            swift_bridgeObjectRetain();

            v20 = 1;
            goto LABEL_23;
          }

        }
        v18 = 0;
        v19 = 0;
        v20 = 0;
LABEL_23:
        *(_QWORD *)a3 = v18;
        *(_QWORD *)(a3 + 8) = v19;
        *(_QWORD *)(a3 + 16) = 0;
        *(_BYTE *)(a3 + 24) = v20;
        return;
      }
    }
    else
    {
      v12 = *(char **)&a1[OBJC_IVAR___AARawEvent_sessionGroup];
      v13 = &v12[OBJC_IVAR___AASessionGroup_groupName];
      swift_beginAccess();
      if (sub_1A5F64178() == 0x746C7561666564 && v14 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v16 = sub_1A5F64880();
        sub_1A5EEC96C(a1, a2);
        v17 = v12;
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
        {
          v21 = *((_QWORD *)v13 + 1);
          *(_QWORD *)a3 = *(_QWORD *)v13;
          *(_QWORD *)(a3 + 8) = v21;
          *(_QWORD *)(a3 + 16) = 0;
          *(_BYTE *)(a3 + 24) = 1;
          swift_bridgeObjectRetain();

          sub_1A5EF3D48(a1, a2);
          return;
        }

        sub_1A5EF3D48(a1, a2);
      }
    }
  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 16) = 0;
}

uint64_t sub_1A5F1FC8C@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  void (*v45)(_QWORD *, uint64_t, uint64_t, double);
  id v46;
  void (*v47)(_QWORD *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  int EnumCaseMultiPayload;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  char *v65;
  void (*v66)(char *, uint64_t, uint64_t);
  char *v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t, uint64_t);
  double v124;
  double v125;
  void (*v126)(char *, uint64_t);
  double v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  unint64_t v143;
  unint64_t v144;
  _QWORD *v145;
  uint64_t *v146;
  unint64_t v147;
  char v148;
  char v149;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  unint64_t v159;
  char v160;
  char v161;
  char v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  id v169;
  unint64_t v170;
  _QWORD *v171;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  unint64_t v176;
  _QWORD v177[2];
  uint64_t v178;
  _QWORD *v179;
  uint64_t *v180;
  char *v181;
  void (*v182)(char *, uint64_t, uint64_t);
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  void (*v197)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  _QWORD *v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t *v213;
  uint64_t v214;
  char *v215;
  unint64_t v216;
  uint64_t v217;
  __int128 v218;
  uint64_t v219;
  _OWORD v220[2];
  uint64_t v221;
  _QWORD v222[2];
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  char v227;

  v7 = v6;
  v211 = a5;
  v210 = a4;
  v198 = a3;
  v216 = a2;
  v205 = (_QWORD *)a1;
  v178 = a6;
  v209 = type metadata accessor for SequenceEntry(0);
  v208 = *(_QWORD *)(v209 - 8);
  MEMORY[0x1E0C80A78](v209);
  v212 = (uint64_t)v177 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v177 - v10);
  MEMORY[0x1E0C80A78](v12);
  v189 = (uint64_t)v177 - v13;
  MEMORY[0x1E0C80A78](v14);
  v188 = (char *)v177 - v15;
  MEMORY[0x1E0C80A78](v16);
  v203 = (uint64_t)v177 - v17;
  MEMORY[0x1E0C80A78](v18);
  v202 = (_QWORD *)((char *)v177 - v19);
  MEMORY[0x1E0C80A78](v20);
  v193 = (uint64_t)v177 - v21;
  MEMORY[0x1E0C80A78](v22);
  v192 = (_QWORD *)((char *)v177 - v23);
  v187 = sub_1A5F63F08();
  v186 = *(_QWORD *)(v187 - 8);
  MEMORY[0x1E0C80A78](v187);
  v185 = (char *)v177 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v184 = (char *)v177 - v26;
  v207 = type metadata accessor for TimedData();
  MEMORY[0x1E0C80A78](v207);
  v195 = (char *)v177 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v191 = (uint64_t)v177 - v29;
  sub_1A5EF8034();
  MEMORY[0x1E0C80A78](v30);
  v181 = (char *)v177 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v196 = (uint64_t)v177 - v33;
  v200 = type metadata accessor for Tracker.Timer();
  v204 = *(_QWORD *)(v200 - 8);
  MEMORY[0x1E0C80A78](v200);
  v194 = (uint64_t)v177 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = (char *)type metadata accessor for Sequence(0);
  MEMORY[0x1E0C80A78](v215);
  v213 = (_QWORD *)((char *)v177 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v206 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v206);
  v37 = (_QWORD *)((char *)v177 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = sub_1A5F64070();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = MEMORY[0x1E0C80A78](v38);
  v42 = (_QWORD *)((char *)v177 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = *(void **)(*(_QWORD *)(v7 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v42 = v43;
  v44 = *MEMORY[0x1E0DEF740];
  v45 = *(void (**)(_QWORD *, uint64_t, uint64_t, double))(v39 + 104);
  v45(v42, v44, v38, v40);
  v46 = v43;
  LOBYTE(v43) = sub_1A5F64088();
  v47 = *(void (**)(_QWORD *, uint64_t))(v39 + 8);
  v47(v42, v38);
  if ((v43 & 1) == 0)
  {
LABEL_110:
    __break(1u);
    goto LABEL_111;
  }
  sub_1A5F22BA0((unint64_t)v205, v216, &v225);
  LODWORD(v199) = v225;
  v214 = v7;
  v48 = MEMORY[0x1A85B8E10](v7 + 64);
  v49 = 0;
  if (!v48)
  {
    v42 = v205;
    v56 = v214;
    v55 = v204;
LABEL_10:
    v57 = v216;
    goto LABEL_11;
  }
  v50 = v48;
  v51 = *(void **)(*(_QWORD *)(v48 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *v42 = v51;
  ((void (*)(_QWORD *, uint64_t, uint64_t))v45)(v42, v44, v38);
  v52 = v51;
  v44 = sub_1A5F64088();
  v47(v42, v38);
  if ((v44 & 1) == 0)
  {
LABEL_111:
    __break(1u);
LABEL_112:
    swift_once();
LABEL_98:
    v165 = (id)qword_1ED1CE7B0;
    sub_1A5F64448();
    sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v166 = swift_allocObject();
    *(_OWORD *)(v166 + 16) = xmmword_1A5F66C40;
    v167 = 0x457972616D6D7553;
    v168 = 0xEC000000746E6576;
    if ((_DWORD)v206)
    {
      if ((_DWORD)v206 == 1)
      {
        v169 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
        v167 = sub_1A5F64130();
        v168 = v170;

      }
      else
      {
        v167 = *(_QWORD *)((char *)v42 + OBJC_IVAR___AARawEvent_name);
        v168 = *(_QWORD *)((char *)v42 + OBJC_IVAR___AARawEvent_name + 8);
        swift_bridgeObjectRetain();
      }
    }
    v173 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v166 + 56) = MEMORY[0x1E0DEA968];
    v174 = sub_1A5EE19C8();
    *(_QWORD *)(v166 + 64) = v174;
    *(_QWORD *)(v166 + 32) = v167;
    *(_QWORD *)(v166 + 40) = v168;
    v225 = 0;
    v226 = 0xE000000000000000;
    v222[0] = v11;
    v222[1] = v44;
    sub_1A5F646F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v175 = v225;
    v176 = v226;
    *(_QWORD *)(v166 + 96) = v173;
    *(_QWORD *)(v166 + 104) = v174;
    *(_QWORD *)(v166 + 72) = v175;
    *(_QWORD *)(v166 + 80) = v176;
    sub_1A5F63F80();

    goto LABEL_106;
  }
  v53 = v50 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
  swift_beginAccess();
  sub_1A5ED7E14(v53, (uint64_t)v37, type metadata accessor for SessionManager.SessionState);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v55 = v204;
  if (!EnumCaseMultiPayload)
  {
    v58 = *v37;
    swift_unknownObjectRelease();
    v49 = *(_QWORD *)(v58 + OBJC_IVAR____TtC12AppAnalytics13ActiveSession_timestampConfiguration + 8);
    swift_release();
    v42 = v205;
    v56 = v214;
    goto LABEL_10;
  }
  v42 = v205;
  v56 = v214;
  v57 = v216;
  if (EnumCaseMultiPayload == 1)
    sub_1A5ED4D44((uint64_t)v37, type metadata accessor for SessionManager.SessionState);
  swift_unknownObjectRelease();
LABEL_11:
  v206 = v57 >> 62;
  if (v57 >> 62)
  {
    if (v57 >> 62 == 1)
    {
      v59 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
      v60 = sub_1A5F64130();
      v62 = v61;

    }
    else
    {
      v60 = *(_QWORD *)((char *)v42 + OBJC_IVAR___AARawEvent_name);
      v62 = *(_QWORD *)((char *)v42 + OBJC_IVAR___AARawEvent_name + 8);
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    v60 = 0x457972616D6D7553;
    v62 = 0xEC000000746E6576;
  }
  v201 = type metadata accessor for EventData();
  v63 = (uint64_t)v215;
  v64 = v213;
  v65 = (char *)v213 + *((int *)v215 + 5);
  v66 = *(void (**)(char *, uint64_t, uint64_t))(v186 + 16);
  v183 = v198 + *(int *)(v201 + 20);
  v182 = v66;
  ((void (*)(char *))v66)(v65);
  v216 = *(int *)(v63 + 28);
  *(uint64_t *)((char *)v64 + v216) = MEMORY[0x1E0DEE9D8];
  *v64 = v60;
  v64[1] = v62;
  v67 = (char *)v64 + *(int *)(v63 + 24);
  *v67 = (char)v199;
  *((_QWORD *)v67 + 1) = v49;
  if ((_DWORD)v206)
  {
    if ((_DWORD)v206 == 1)
    {
      swift_retain();
      sub_1A5F06AFC();
    }
    else
    {
      v69 = v42;
      sub_1A5EC10E0();
    }
  }
  else
  {
    swift_retain();
    v68 = sub_1A5EF51D8((uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1E4FD4E50);
  }
  v70 = v68;
  sub_1A5EF3D48(v42, v57);
  v71 = v70[2];
  if (!v71)
  {
    swift_bridgeObjectRelease();
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
      goto LABEL_96;
LABEL_106:
    swift_bridgeObjectRelease();
    return sub_1A5ECD6B0((uint64_t)v213, v178, type metadata accessor for Sequence);
  }
  v215 = &v227;
  v72 = (uint64_t *)(v56 + 104);
  v180 = (uint64_t *)(v56 + 112);
  v177[1] = v70;
  v73 = (uint64_t)(v70 + 4);
  v199 = v72;
  swift_beginAccess();
  v190 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v179 = v11;
  do
  {
    sub_1A5EEED18(v73, (uint64_t)&v225);
    v74 = v225;
    v44 = v226;
    sub_1A5ECE02C((uint64_t)v215, (uint64_t)v222);
    swift_bridgeObjectRetain();
    sub_1A5EEECBC((uint64_t)&v225);
    v75 = v223;
    v76 = v224;
    __swift_project_boxed_opaque_existential_1(v222, v223);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v76 + 16))(v75, v76) & 1) != 0)
    {
      v85 = v223;
      v86 = v224;
      __swift_project_boxed_opaque_existential_1(v222, v223);
      v87 = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 8))(v85, v86);
      sub_1A5EEEDC8(v87, v88, v210, v211, 0, (uint64_t)&v218);
      swift_bridgeObjectRelease();
      if (v219)
      {
        sub_1A5EC1D18(&v218, (uint64_t)v220);
        sub_1A5ECE02C((uint64_t)v220, (uint64_t)v11 + *(int *)(v209 + 20));
        *v11 = v74;
        v11[1] = v44;
        type metadata accessor for SequenceEntry.Kind(0);
        swift_storeEnumTagMultiPayload();
        sub_1A5ED7E14((uint64_t)v11, v212, type metadata accessor for SequenceEntry);
        v89 = (uint64_t)v213;
        v90 = *(uint64_t *)((char *)v213 + v216);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v90 = sub_1A5EEF688(0, *(_QWORD *)(v90 + 16) + 1, 1, v90);
        v92 = *(_QWORD *)(v90 + 16);
        v91 = *(_QWORD *)(v90 + 24);
        if (v92 >= v91 >> 1)
          v90 = sub_1A5EEF688(v91 > 1, v92 + 1, 1, v90);
        *(_QWORD *)(v90 + 16) = v92 + 1;
        sub_1A5ECD6B0(v212, v90+ ((*(unsigned __int8 *)(v208 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v208 + 80))+ *(_QWORD *)(v208 + 72) * v92, type metadata accessor for SequenceEntry);
        *(_QWORD *)(v89 + v216) = v90;
        v93 = (uint64_t)v11;
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      sub_1A5EF1CF8((uint64_t)&v218, &qword_1ED1CD458, qword_1ED1CE020, (uint64_t)&protocol descriptor for DataEventType);
    }
    else
    {
      v77 = v223;
      v78 = v224;
      __swift_project_boxed_opaque_existential_1(v222, v223);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v78 + 24))(v77, v78) & 1) != 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      v79 = v223;
      v80 = v224;
      __swift_project_boxed_opaque_existential_1(v222, v223);
      if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 40))(v207, v207, v79, v80) & 1) != 0)
      {
        if ((_DWORD)v206)
        {
          if ((_DWORD)v206 == 1)
          {
            v81 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
            v82 = sub_1A5F64130();
            v84 = v83;

          }
          else
          {
            v82 = *(_QWORD *)((char *)v205 + OBJC_IVAR___AARawEvent_name);
            v84 = *(_QWORD *)((char *)v205 + OBJC_IVAR___AARawEvent_name + 8);
            swift_bridgeObjectRetain();
          }
        }
        else
        {
          v82 = 0x457972616D6D7553;
          v84 = 0xEC000000746E6576;
        }
        v94 = *v199;
        if (*(_QWORD *)(*v199 + 16))
        {
          swift_bridgeObjectRetain();
          v95 = sub_1A5EF11E8(v82, v84);
          if ((v96 & 1) != 0)
          {
            v97 = v196;
            sub_1A5ED7E14(*(_QWORD *)(v94 + 56) + *(_QWORD *)(v55 + 72) * v95, v196, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
            v98 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
            v99 = v97;
            v100 = 0;
          }
          else
          {
            v98 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
            v97 = v196;
            v99 = v196;
            v100 = 1;
          }
          v102 = v200;
          v197 = v98;
          v98(v99, v100, 1, v200);
          swift_bridgeObjectRelease();
          v101 = v102;
          v55 = v204;
        }
        else
        {
          v97 = v196;
          v101 = v200;
          v197 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
          v197(v196, 1, 1, v200);
        }
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v97, 1, v101) != 1)
        {
          v119 = v194;
          sub_1A5ECD6B0(v97, v194, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
          v120 = v184;
          v121 = v119;
          v122 = v187;
          v123 = v182;
          v182(v184, v121, v187);
          v42 = v185;
          v123(v185, v183, v122);
          v11 = v195;
          v123(v195, (uint64_t)v120, v122);
          v123((char *)v11 + *(int *)(v207 + 20), (uint64_t)v42, v122);
          sub_1A5F63E90();
          v125 = v124;
          v126 = *(void (**)(_QWORD *, uint64_t))(v186 + 8);
          v126(v42, v122);
          v126(v120, v122);
          v127 = v125 * 1000.0;
          v128 = (uint64_t)v213;
          if ((~COERCE__INT64(v125 * 1000.0) & 0x7FF0000000000000) == 0)
          {
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
            goto LABEL_110;
          }
          if (v127 <= -9.22337204e18)
            goto LABEL_108;
          if (v127 >= 9.22337204e18)
            goto LABEL_109;
          v129 = (uint64_t)v195;
          *(_QWORD *)&v195[*(int *)(v207 + 24)] = (uint64_t)v127;
          v130 = v191;
          sub_1A5ECD6B0(v129, v191, (uint64_t (*)(_QWORD))type metadata accessor for TimedData);
          v131 = v192;
          sub_1A5ED7E14(v130, (uint64_t)v192 + *(int *)(v209 + 20), (uint64_t (*)(_QWORD))type metadata accessor for TimedData);
          *v131 = v74;
          v131[1] = v44;
          type metadata accessor for SequenceEntry.Kind(0);
          swift_storeEnumTagMultiPayload();
          sub_1A5ED7E14((uint64_t)v131, v193, type metadata accessor for SequenceEntry);
          v132 = *(_QWORD *)(v128 + v216);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v132 = sub_1A5EEF688(0, *(_QWORD *)(v132 + 16) + 1, 1, v132);
          v11 = v179;
          v134 = *(_QWORD *)(v132 + 16);
          v133 = *(_QWORD *)(v132 + 24);
          if (v134 >= v133 >> 1)
            v132 = sub_1A5EEF688(v133 > 1, v134 + 1, 1, v132);
          *(_QWORD *)(v132 + 16) = v134 + 1;
          sub_1A5ECD6B0(v193, v132+ ((*(unsigned __int8 *)(v208 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v208 + 80))+ *(_QWORD *)(v208 + 72) * v134, type metadata accessor for SequenceEntry);
          *(_QWORD *)(v128 + v216) = v132;
          sub_1A5ED4D44((uint64_t)v192, type metadata accessor for SequenceEntry);
          if ((_DWORD)v206)
          {
            if ((_DWORD)v206 == 1)
            {
              v135 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
              v136 = sub_1A5F64130();
              v138 = v137;

            }
            else
            {
              v136 = *(_QWORD *)((char *)v205 + OBJC_IVAR___AARawEvent_name);
              v138 = *(_QWORD *)((char *)v205 + OBJC_IVAR___AARawEvent_name + 8);
              swift_bridgeObjectRetain();
            }
          }
          else
          {
            v136 = 0x457972616D6D7553;
            v138 = 0xEC000000746E6576;
          }
          v146 = v199;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          v147 = sub_1A5EF11E8(v136, v138);
          v149 = v148;
          swift_bridgeObjectRelease();
          if ((v149 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v151 = *v146;
            *(_QWORD *)&v218 = *v146;
            *v146 = 0x8000000000000000;
            v152 = (uint64_t)v181;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1A5F05CB0();
              v151 = v218;
            }
            swift_bridgeObjectRelease();
            sub_1A5ECD6B0(*(_QWORD *)(v151 + 56) + *(_QWORD *)(v204 + 72) * v147, v152, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
            sub_1A5EF60CC(v147, v151);
            *v146 = v151;
            swift_bridgeObjectRelease();
            v153 = 0;
          }
          else
          {
            v153 = 1;
            v152 = (uint64_t)v181;
          }
          v197(v152, v153, 1, v200);
          sub_1A5ED4D44(v152, (uint64_t (*)(_QWORD))sub_1A5EF8034);
          swift_endAccess();
          swift_bridgeObjectRelease();
          v55 = v204;
          if ((_DWORD)v206)
          {
            if ((_DWORD)v206 == 1)
            {
              v154 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_eventName);
              v155 = sub_1A5F64130();
              v157 = v156;

            }
            else
            {
              v155 = *(_QWORD *)((char *)v205 + OBJC_IVAR___AARawEvent_name);
              v157 = *(_QWORD *)((char *)v205 + OBJC_IVAR___AARawEvent_name + 8);
              swift_bridgeObjectRetain();
            }
          }
          else
          {
            v155 = 0x457972616D6D7553;
            v157 = 0xEC000000746E6576;
          }
          v158 = v180;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          v159 = sub_1A5EF11E8(v155, v157);
          v161 = v160;
          swift_bridgeObjectRelease();
          if ((v161 & 1) != 0)
          {
            v162 = swift_isUniquelyReferenced_nonNull_native();
            v163 = *v158;
            v217 = *v158;
            *v158 = 0x8000000000000000;
            if ((v162 & 1) == 0)
            {
              sub_1A5F05A94();
              v163 = v217;
            }
            swift_bridgeObjectRelease();
            sub_1A5EC1D18((__int128 *)(*(_QWORD *)(v163 + 56) + 40 * v159), (uint64_t)v220);
            sub_1A5F5472C(v159, v163);
            *v158 = v163;
            swift_bridgeObjectRelease();
          }
          else
          {
            v221 = 0;
            memset(v220, 0, sizeof(v220));
          }
          sub_1A5EF1CF8((uint64_t)v220, &qword_1ED1CD468, &qword_1ED1CE4C8, (uint64_t)&protocol descriptor for RestartTimerType);
          swift_endAccess();
          swift_bridgeObjectRelease();
          sub_1A5ED4D44(v191, (uint64_t (*)(_QWORD))type metadata accessor for TimedData);
          sub_1A5ED4D44(v194, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
          goto LABEL_24;
        }
        sub_1A5ED4D44(v97, (uint64_t (*)(_QWORD))sub_1A5EF8034);
      }
      v103 = v223;
      v104 = v224;
      __swift_project_boxed_opaque_existential_1(v222, v223);
      if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 40))(v201, v201, v103, v104) & 1) != 0)
      {
        v105 = v202;
        sub_1A5ED7E14(v198, (uint64_t)v202 + *(int *)(v209 + 20), (uint64_t (*)(_QWORD))type metadata accessor for EventData);
        *v105 = v74;
        v105[1] = v44;
        type metadata accessor for SequenceEntry.Kind(0);
        swift_storeEnumTagMultiPayload();
        sub_1A5ED7E14((uint64_t)v105, v203, type metadata accessor for SequenceEntry);
        v106 = (uint64_t)v213;
        v107 = *(uint64_t *)((char *)v213 + v216);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v107 = sub_1A5EEF688(0, *(_QWORD *)(v107 + 16) + 1, 1, v107);
        v109 = *(_QWORD *)(v107 + 16);
        v108 = *(_QWORD *)(v107 + 24);
        if (v109 >= v108 >> 1)
          v107 = sub_1A5EEF688(v108 > 1, v109 + 1, 1, v107);
        *(_QWORD *)(v107 + 16) = v109 + 1;
        sub_1A5ECD6B0(v203, v107+ ((*(unsigned __int8 *)(v208 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v208 + 80))+ *(_QWORD *)(v208 + 72) * v109, type metadata accessor for SequenceEntry);
        *(_QWORD *)(v106 + v216) = v107;
        sub_1A5ED4D44((uint64_t)v202, type metadata accessor for SequenceEntry);
      }
      else
      {
        v110 = v223;
        v111 = v224;
        __swift_project_boxed_opaque_existential_1(v222, v223);
        v112 = (*(uint64_t (**)(uint64_t, uint64_t))(v111 + 8))(v110, v111);
        sub_1A5EEEDC8(v112, v113, v210, v211, 0, (uint64_t)&v218);
        swift_bridgeObjectRelease();
        if (v219)
        {
          sub_1A5EC1D18(&v218, (uint64_t)v220);
          v114 = v188;
          sub_1A5ECE02C((uint64_t)v220, (uint64_t)&v188[*(int *)(v209 + 20)]);
          *v114 = v74;
          v114[1] = v44;
          type metadata accessor for SequenceEntry.Kind(0);
          swift_storeEnumTagMultiPayload();
          sub_1A5ED7E14((uint64_t)v114, v189, type metadata accessor for SequenceEntry);
          v115 = (uint64_t)v213;
          v116 = *(uint64_t *)((char *)v213 + v216);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v116 = sub_1A5EEF688(0, *(_QWORD *)(v116 + 16) + 1, 1, v116);
          v118 = *(_QWORD *)(v116 + 16);
          v117 = *(_QWORD *)(v116 + 24);
          if (v118 >= v117 >> 1)
            v116 = sub_1A5EEF688(v117 > 1, v118 + 1, 1, v116);
          *(_QWORD *)(v116 + 16) = v118 + 1;
          sub_1A5ECD6B0(v189, v116+ ((*(unsigned __int8 *)(v208 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v208 + 80))+ *(_QWORD *)(v208 + 72) * v118, type metadata accessor for SequenceEntry);
          *(_QWORD *)(v115 + v216) = v116;
          v93 = (uint64_t)v188;
LABEL_37:
          sub_1A5ED4D44(v93, type metadata accessor for SequenceEntry);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v220);
          goto LABEL_24;
        }
        sub_1A5EF1CF8((uint64_t)&v218, &qword_1ED1CD458, qword_1ED1CE020, (uint64_t)&protocol descriptor for DataEventType);
        v139 = v223;
        v140 = v224;
        __swift_project_boxed_opaque_existential_1(v222, v223);
        v141 = (*(uint64_t (**)(uint64_t, uint64_t))(v140 + 32))(v139, v140);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v142 = v190;
        else
          v142 = sub_1A5F082A8(0, v190[2] + 1, 1, v190);
        v144 = v142[2];
        v143 = v142[3];
        if (v144 >= v143 >> 1)
          v142 = sub_1A5F082A8((_QWORD *)(v143 > 1), v144 + 1, 1, v142);
        v142[2] = v144 + 1;
        v190 = v142;
        v145 = &v142[3 * v144];
        v145[4] = v74;
        v145[5] = v44;
        v145[6] = v141;
      }
    }
LABEL_24:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v222);
    v73 += 56;
    --v71;
  }
  while (v71);
  swift_bridgeObjectRelease();
  v42 = v205;
  v56 = v214;
  v11 = v190;
  if (!v190[2])
    goto LABEL_106;
LABEL_96:
  v164 = (uint64_t)v213;
  v44 = sub_1A5F57224();
  if ((*(_BYTE *)(v56 + 176) & 1) != 0)
  {
    if (qword_1ED1CFC08 == -1)
      goto LABEL_98;
    goto LABEL_112;
  }
  sub_1A5F22D74();
  swift_allocError();
  *v171 = v11;
  v171[1] = v44;
  swift_willThrow();
  return sub_1A5ED4D44(v164, type metadata accessor for Sequence);
}

uint64_t sub_1A5F21490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, uint64_t a15, unint64_t *a16, uint64_t a17, uint64_t a18, unint64_t *a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t result;
  void *v40;
  id v41;
  char *v42;
  _QWORD v43[12];
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unint64_t *v49;
  uint64_t v50;
  char *v51;
  unint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;

  v56 = a8;
  v58 = a6;
  v54 = a5;
  v53 = a4;
  v68 = a2;
  v52 = a16;
  sub_1A5F232AC(0, a16, a17, a18, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for EventSubmitResult);
  v50 = v20;
  MEMORY[0x1E0C80A78](v20);
  v51 = (char *)v43 - v21;
  v49 = a19;
  v62 = a17;
  v63 = a18;
  sub_1A5F232AC(0, a19, a17, a18, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  v47 = v22;
  MEMORY[0x1E0C80A78](v22);
  v48 = (char *)v43 - v23;
  v55 = type metadata accessor for Sequence(0);
  MEMORY[0x1E0C80A78](v55);
  v57 = (char *)v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for TimedData();
  MEMORY[0x1E0C80A78](v61);
  v65 = (char *)v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1A5F63F08();
  v60 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v59 = (char *)v43 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  v29 = type metadata accessor for EventData();
  MEMORY[0x1E0C80A78](v29);
  v66 = (char *)v43 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for SessionObserverChange();
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)v43 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1A5F64070();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v37 = (_QWORD *)((char *)v43 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = swift_projectBox();
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v46 = v38;
    v67 = result;
    v40 = *(void **)(*(_QWORD *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v37 = v40;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v35 + 104))(v37, *MEMORY[0x1E0DEF740], v34);
    v41 = v40;
    LOBYTE(v40) = sub_1A5F64088();
    (*(void (**)(_QWORD *, uint64_t))(v35 + 8))(v37, v34);
    if ((v40 & 1) != 0)
    {
      v45 = a20;
      v44 = a13;
      v43[11] = a12;
      v43[10] = a10;
      v43[9] = a14;
      sub_1A5ED7E14(v68, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for SessionObserverChange);
      v42 = (char *)&loc_1A5F21878 + dword_1A5F22424[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1A5F223E8);
  }
  return result;
}

uint64_t sub_1A5F22434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  id v27;
  int EnumCaseMultiPayload;
  uint64_t v29;
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v39;
  unint64_t v40;
  char v41;
  unsigned __int8 *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  _QWORD *v65;
  __int128 v66;
  __int128 v67;
  _UNKNOWN **v68;

  v57 = a5;
  v58 = a4;
  v56 = a3;
  v62 = a2;
  sub_1A5F22AD8(0, (unint64_t *)&qword_1EE80CCE8, (uint64_t (*)(uint64_t, uint64_t, unint64_t))type metadata accessor for DataEventStack.Entry);
  v55 = v7;
  v60 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v59 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v61 = (char *)&v51 - v10;
  v11 = type metadata accessor for SummaryEventData();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5F22AD8(0, (unint64_t *)&qword_1ED1CC988, (uint64_t (*)(uint64_t, uint64_t, unint64_t))type metadata accessor for PushEvent);
  v15 = v14;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v51 - v19;
  v21 = sub_1A5F64070();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (_QWORD **)((char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = *(void **)(v5[10] + OBJC_IVAR___AAAccessQueue_queue);
  *v25 = v26;
  (*(void (**)(_QWORD *, _QWORD, unint64_t, double))(v22 + 104))(v25, *MEMORY[0x1E0DEF740], v21, v23);
  v27 = v26;
  LOBYTE(v26) = sub_1A5F64088();
  (*(void (**)(_QWORD *, unint64_t))(v22 + 8))(v25, v21);
  if ((v26 & 1) != 0)
  {
    sub_1A5F22C98(a1, (uint64_t)v20, (unint64_t *)&qword_1ED1CC988, (uint64_t (*)(uint64_t, uint64_t, unint64_t))type metadata accessor for PushEvent);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v53 = v15;
    v54 = a1;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1A5F22B3C();
      v30 = (unint64_t *)&v20[*(int *)(v29 + 48)];
      v21 = *v30;
      v25 = (_QWORD *)v30[1];
      sub_1A5ED4D44((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for SummaryEventData);
    }
    else
    {
      sub_1A5F22D38((uint64_t)v20, (unint64_t *)&qword_1ED1CC988, (uint64_t (*)(uint64_t, uint64_t, unint64_t))type metadata accessor for PushEvent);
      v25 = (_QWORD *)0x80000001A5F6EBD0;
      v21 = 0xD000000000000010;
    }
    v22 = (uint64_t)v13;
    v31 = v62;
    v32 = *(_QWORD *)(v62 + 16);
    v33 = (uint64_t)v17;
    v17 = v61;
    if (v32)
    {
      v34 = (unsigned __int8 *)(v62 + 32);
      v35 = *(_QWORD *)(v62 + 16);
      while (1)
      {
        v36 = *v34++;
        if (v36 == 2)
          break;
        if (!--v35)
          goto LABEL_12;
      }
      sub_1A5EEEDC8(v21, (uint64_t)v25, 0, 0, 1, (uint64_t)&v66);
      v37 = *((_QWORD *)&v67 + 1);
      sub_1A5EF1CF8((uint64_t)&v66, &qword_1ED1CD458, qword_1ED1CE020, (uint64_t)&protocol descriptor for DataEventType);
      if (v37)
        return swift_bridgeObjectRelease();
    }
LABEL_12:
    swift_beginAccess();
    v39 = v5[15];
    if (*(_QWORD *)(v39 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v40 = sub_1A5EF11E8(v21, (uint64_t)v25);
      if ((v41 & 1) != 0)
      {
        sub_1A5ECE02C(*(_QWORD *)(v39 + 56) + 40 * v40, (uint64_t)&v66);
      }
      else
      {
        v68 = 0;
        v66 = 0u;
        v67 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v67 + 1))
      {
        sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE4D0);
        sub_1A5F22AD8(0, &qword_1EE80D060, (uint64_t (*)(uint64_t, uint64_t, unint64_t))type metadata accessor for DataEventStack);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v5 = v63;
          v52 = v64;
          v51 = v65;
          if (!v32)
            goto LABEL_28;
          goto LABEL_23;
        }
LABEL_22:
        swift_bridgeObjectRetain();
        v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v52 = v21;
        v51 = v25;
        if (!v32)
          goto LABEL_28;
LABEL_23:
        v42 = (unsigned __int8 *)(v31 + 32);
        while (1)
        {
          v43 = *v42++;
          if (v43 == 1)
            break;
          if (!--v32)
            goto LABEL_28;
        }
        swift_bridgeObjectRelease();
        v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_28:
        sub_1A5F22C98(v54, v33, (unint64_t *)&qword_1ED1CC988, (uint64_t (*)(uint64_t, uint64_t, unint64_t))type metadata accessor for PushEvent);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1A5F22B3C();
          swift_bridgeObjectRelease();
        }
        sub_1A5ECD6B0(v33, v22, (uint64_t (*)(_QWORD))type metadata accessor for SummaryEventData);
        sub_1A5ED7E14(v22, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SummaryEventData);
        v45 = v55;
        v44 = v56;
        *(_QWORD *)&v17[*(int *)(v55 + 36)] = v31;
        v46 = &v17[*(int *)(v45 + 40)];
        v47 = v58;
        a1 = (uint64_t)v59;
        *(_QWORD *)v46 = v44;
        *((_QWORD *)v46 + 1) = v47;
        *(_QWORD *)&v17[*(int *)(v45 + 44)] = v57;
        sub_1A5F22C98((uint64_t)v17, a1, (unint64_t *)&qword_1EE80CCE8, (uint64_t (*)(uint64_t, uint64_t, unint64_t))type metadata accessor for DataEventStack.Entry);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_31;
        goto LABEL_35;
      }
    }
    else
    {
      v68 = 0;
      v66 = 0u;
      v67 = 0u;
    }
    sub_1A5EF1CF8((uint64_t)&v66, (unint64_t *)&qword_1ED1CE4D8, (unint64_t *)&qword_1ED1CE4D0, (uint64_t)&protocol descriptor for DataEventStackType);
    goto LABEL_22;
  }
  __break(1u);
LABEL_35:
  v5 = (_QWORD *)sub_1A5F0851C(0, v5[2] + 1, 1, (unint64_t)v5);
LABEL_31:
  v49 = v5[2];
  v48 = v5[3];
  if (v49 >= v48 >> 1)
    v5 = (_QWORD *)sub_1A5F0851C(v48 > 1, v49 + 1, 1, (unint64_t)v5);
  v5[2] = v49 + 1;
  sub_1A5F22CE4(a1, (uint64_t)v5+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(_QWORD *)(v60 + 72) * v49);
  sub_1A5F22D38((uint64_t)v17, (unint64_t *)&qword_1EE80CCE8, (uint64_t (*)(uint64_t, uint64_t, unint64_t))type metadata accessor for DataEventStack.Entry);
  sub_1A5ED4D44(v22, (uint64_t (*)(_QWORD))type metadata accessor for SummaryEventData);
  sub_1A5F22AD8(0, &qword_1EE80D060, (uint64_t (*)(uint64_t, uint64_t, unint64_t))type metadata accessor for DataEventStack);
  *((_QWORD *)&v67 + 1) = v50;
  v68 = &off_1E4FD1350;
  *(_QWORD *)&v66 = v5;
  *((_QWORD *)&v66 + 1) = v52;
  *(_QWORD *)&v67 = v51;
  swift_beginAccess();
  sub_1A5EF0D60((uint64_t)&v66, v21, (uint64_t)v25);
  return swift_endAccess();
}

uint64_t method lookup function for BridgedAccessTracker()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1A5F22A90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1CC970;
  if (!qword_1ED1CC970)
  {
    v1 = type metadata accessor for SummaryEventData();
    result = MEMORY[0x1A85B8C3C](&unk_1A5F6B624, v1);
    atomic_store(result, (unint64_t *)&qword_1ED1CC970);
  }
  return result;
}

void sub_1A5F22AD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for SummaryEventData();
    v7 = sub_1A5F22A90();
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1A5F22B3C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EE80D058)
  {
    type metadata accessor for SummaryEventData();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EE80D058);
  }
}

unint64_t sub_1A5F22BA0@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  void *ObjCClassFromMetadata;
  unint64_t v5;
  unint64_t v6;
  id v7;

  if (!(a2 >> 62))
  {
    LOBYTE(v5) = 2;
    goto LABEL_10;
  }
  if (a2 >> 62 == 1)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    result = (unint64_t)objc_msgSend(ObjCClassFromMetadata, sel_respondsToSelector_, sel_timestampGranularity);
    if ((result & 1) == 0)
    {
      LOBYTE(v5) = 0;
      goto LABEL_10;
    }
    result = (unint64_t)objc_msgSend(ObjCClassFromMetadata, sel_timestampGranularity);
    if (result < 5)
    {
      v5 = 0x302040100uLL >> (8 * result);
LABEL_10:
      *a3 = v5;
      return result;
    }
  }
  else
  {
    v6 = *(_QWORD *)(result + OBJC_IVAR___AARawEvent_timestampGranularity);
    if (v6 <= 4)
    {
      v5 = 0x302040100uLL >> (8 * v6);
      goto LABEL_10;
    }
    v7 = (id)result;
  }
  result = sub_1A5F648A4();
  __break(1u);
  return result;
}

uint64_t sub_1A5F22C98(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v6;

  sub_1A5F22AD8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1A5F22CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5F22AD8(0, (unint64_t *)&qword_1EE80CCE8, (uint64_t (*)(uint64_t, uint64_t, unint64_t))type metadata accessor for DataEventStack.Entry);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5F22D38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  uint64_t v4;

  sub_1A5F22AD8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1A5F22D74()
{
  unint64_t result;

  result = qword_1ED1CD048;
  if (!qword_1ED1CD048)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for TrackerError, &type metadata for TrackerError);
    atomic_store(result, (unint64_t *)&qword_1ED1CD048);
  }
  return result;
}

unint64_t sub_1A5F22DB8()
{
  unint64_t result;

  result = qword_1EE80D080;
  if (!qword_1EE80D080)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for PrivacyValidationError, &type metadata for PrivacyValidationError);
    atomic_store(result, (unint64_t *)&qword_1EE80D080);
  }
  return result;
}

uint64_t sub_1A5F22DFC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v8;

  sub_1A5F232AC(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_1A5F22E50()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A5F22E74()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A5F22E9C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v5 = *(_QWORD *)(type metadata accessor for EventData() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A5F21490(a1, a2, v2[2], v2[3], v2[4], (uint64_t)v2 + v6, *(uint64_t *)((char *)v2 + v7), *(uint64_t *)((char *)v2 + v8), *(uint64_t *)((char *)v2 + v8 + 8), *(uint64_t *)((char *)v2 + v9), *(uint64_t *)((char *)v2 + v9 + 8), *(uint64_t *)((char *)v2 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8)), *((_BYTE *)v2 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), (uint64_t)v2 + ((v9 + 39) & 0xFFFFFFFFFFFFFFF8), *(uint64_t *)((char *)v2 + ((((v9 + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFF8)), &qword_1EE80D070, (uint64_t)&type metadata for SummaryEvent, (uint64_t)&off_1E4FD4E50, &qword_1EE80D068,
           (uint64_t)sub_1A5F22FA8);
}

uint64_t sub_1A5F22FA8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1A5F574F8(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1A5F22FC4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1A5F22FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A5F285DC(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1A5F22FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5F232AC(0, &qword_1ED1CC198, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for ProcessEvent);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_26Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for EventData();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = (((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_1A5EF3D48(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  v6 = v0 + v3 + *(int *)(v1 + 20);
  v7 = sub_1A5F63F08();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v5 + 24))
    __swift_destroy_boxed_opaque_existential_0(v0 + v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F231A0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v5 = *(_QWORD *)(type metadata accessor for EventData() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A5F21490(a1, a2, v2[2], v2[3], v2[4], (uint64_t)v2 + v6, *(uint64_t *)((char *)v2 + v7), *(uint64_t *)((char *)v2 + v8), *(uint64_t *)((char *)v2 + v8 + 8), *(uint64_t *)((char *)v2 + v9), *(uint64_t *)((char *)v2 + v9 + 8), *(uint64_t *)((char *)v2 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8)), *((_BYTE *)v2 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), (uint64_t)v2 + ((v9 + 39) & 0xFFFFFFFFFFFFFFF8), *(uint64_t *)((char *)v2 + ((((v9 + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFF8)), (unint64_t *)&unk_1ED1CB9B0, (uint64_t)&type metadata for BridgedEvent, (uint64_t)&off_1E4FCF2A0, &qword_1ED1CC198,
           (uint64_t)sub_1A5F232F8);
}

void sub_1A5F232AC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v6 = a5(0, a3, a4);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1A5F232F8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1A5F22FA8(a1, a2);
}

uint64_t SessionObserver.deinit()
{
  uint64_t v0;

  sub_1A5EFBB34(v0 + 16);
  swift_release();
  swift_release();
  return v0;
}

uint64_t SessionObserver.__deallocating_deinit()
{
  uint64_t v0;

  sub_1A5EFBB34(v0 + 16);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for SessionObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t *sub_1A5F233DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  unsigned int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      v11 = a2 + 4;
      v12 = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v12 >= 3)
      {
        a1[4] = *v11;
        a1[5] = v12;
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)a1 + 2) = *(_OWORD *)v11;
      }
      v13 = type metadata accessor for Session();
      v14 = *(int *)(v13 + 28);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_1A5F63F08();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      *(uint64_t *)((char *)a1 + *(int *)(v13 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(v13 + 32));
      swift_bridgeObjectRetain();
      goto LABEL_11;
    }
    if (EnumCaseMultiPayload <= 1)
    {
      *a1 = *a2;
      swift_retain();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

_QWORD *sub_1A5F23550(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_1A5F236C0((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      v7 = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v7 >= 3)
      {
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      }
      v8 = type metadata accessor for Session();
      v9 = *(int *)(v8 + 28);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1A5F63F08();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
      *(_QWORD *)((char *)a1 + *(int *)(v8 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 32));
      swift_bridgeObjectRetain();
      goto LABEL_10;
    }
    if (EnumCaseMultiPayload <= 1)
    {
      *a1 = *a2;
      swift_retain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1A5F236C0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SessionObserverChange();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1A5F236FC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    v7 = type metadata accessor for Session();
    v8 = *(int *)(v7 + 28);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A5F63F08();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    *(_QWORD *)((char *)a1 + *(int *)(v7 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 32));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1A5F237C4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1A5F236C0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      v7 = type metadata accessor for Session();
      v8 = *(int *)(v7 + 28);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1A5F63F08();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      *(_QWORD *)((char *)a1 + *(int *)(v7 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 32));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A5F2389C()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + OBJC_IVAR___AADelayedToken_sealed) & 1) == 0)
  {
    *(_BYTE *)(v0 + OBJC_IVAR___AADelayedToken_sealed) = 1;
    return (*(uint64_t (**)(void))(v0 + OBJC_IVAR___AADelayedToken_block))();
  }
  return result;
}

id DelayedToken.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DelayedToken.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DelayedToken.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DelayedToken();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DelayedToken()
{
  return objc_opt_self();
}

uint64_t method lookup function for DelayedToken()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DelayedToken.commit()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t LoggingEventProcessor.__allocating_init(logFormat:subsystem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v9;
  __int128 v11[2];
  char v12;
  __int128 v13;
  ValueMetadata *v14;
  _UNKNOWN **v15;

  v5 = swift_allocObject();
  sub_1A5EC1C54(a1, (uint64_t)v11);
  if (v12)
  {
    if (v12 == 1)
    {
      sub_1A5EC1D18(v11, (uint64_t)&v13);
    }
    else
    {
      v14 = &type metadata for DefaultLoggingEventProcessorFormatter;
      v15 = &off_1E4FD31A8;
    }
  }
  else
  {
    v6 = *(_QWORD *)&v11[0];
    v14 = &type metadata for JSONLoggingEventProcessorFormatter;
    v15 = &off_1E4FD31B8;
    v7 = (_QWORD *)swift_allocObject();
    *(_QWORD *)&v13 = v7;
    v7[6] = &type metadata for DefaultLoggingEventProcessorFormatter;
    v7[7] = &off_1E4FD31A8;
    v7[2] = v6;
  }
  sub_1A5EC1D18(&v13, v5 + 16);
  if (a3)
  {
    sub_1A5EBE658();
    v8 = (id)sub_1A5F64550();
  }
  else
  {
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v8 = (id)qword_1ED1CE7B0;
  }
  v9 = v8;
  sub_1A5EC1BFC(a1);
  *(_QWORD *)(v5 + 56) = v9;
  return v5;
}

uint64_t LoggingEventProcessor.didEnterGroup(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1A5F64430();
  sub_1A5EDD448();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A5F66C40;
  v3 = *(_QWORD *)(a1 + OBJC_IVAR___AAGroup_name);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR___AAGroup_name + 8);
  v5 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v6 = sub_1A5EE19C8();
  *(_QWORD *)(v2 + 64) = v6;
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  sub_1A5F63F08();
  sub_1A5EF4C08();
  swift_bridgeObjectRetain();
  v7 = sub_1A5F64844();
  *(_QWORD *)(v2 + 96) = v5;
  *(_QWORD *)(v2 + 104) = v6;
  *(_QWORD *)(v2 + 72) = v7;
  *(_QWORD *)(v2 + 80) = v8;
  sub_1A5F63F80();
  return swift_bridgeObjectRelease();
}

uint64_t LoggingEventProcessor.didLeaveGroup(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1A5F64430();
  sub_1A5EDD448();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A5F679D0;
  v4 = *(_QWORD *)(a1 + OBJC_IVAR___AAGroup_name);
  v3 = *(_QWORD *)(a1 + OBJC_IVAR___AAGroup_name + 8);
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1A5EE19C8();
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = v3;
  swift_bridgeObjectRetain();
  sub_1A5F63F80();
  return swift_bridgeObjectRelease();
}

uint64_t LoggingEventProcessor.didEndSession(_:endDate:)(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1A5F64430();
  sub_1A5EDD448();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A5F68B40;
  v3 = *a1;
  v4 = a1[1];
  v5 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v6 = sub_1A5EE19C8();
  *(_QWORD *)(v2 + 64) = v6;
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  type metadata accessor for Session();
  sub_1A5F63F08();
  sub_1A5EF4C08();
  swift_bridgeObjectRetain();
  v7 = sub_1A5F64844();
  *(_QWORD *)(v2 + 96) = v5;
  *(_QWORD *)(v2 + 104) = v6;
  *(_QWORD *)(v2 + 72) = v7;
  *(_QWORD *)(v2 + 80) = v8;
  v9 = sub_1A5F64844();
  *(_QWORD *)(v2 + 136) = v5;
  *(_QWORD *)(v2 + 144) = v6;
  *(_QWORD *)(v2 + 112) = v9;
  *(_QWORD *)(v2 + 120) = v10;
  swift_bridgeObjectRetain();
  v11 = sub_1A5F640C4();
  v13 = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 176) = v5;
  *(_QWORD *)(v2 + 184) = v6;
  *(_QWORD *)(v2 + 152) = v11;
  *(_QWORD *)(v2 + 160) = v13;
  sub_1A5F63F80();
  return swift_bridgeObjectRelease();
}

uint64_t LoggingEventProcessor.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  return v0;
}

uint64_t sub_1A5F23F10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1A5F64430();
  sub_1A5EDD448();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A5F679D0;
  v4 = *(_QWORD *)(a1 + OBJC_IVAR___AAGroup_name);
  v3 = *(_QWORD *)(a1 + OBJC_IVAR___AAGroup_name + 8);
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1A5EE19C8();
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = v3;
  swift_bridgeObjectRetain();
  sub_1A5F63F80();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5F23FD0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  return swift_deallocObject();
}

uint64_t method lookup function for LoggingEventProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LoggingEventProcessor.__allocating_init(logFormat:subsystem:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_1A5F24068()
{
  unint64_t result;

  result = qword_1EE80D0C0;
  if (!qword_1EE80D0C0)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F68CA0, &type metadata for GZIPError);
    atomic_store(result, (unint64_t *)&qword_1EE80D0C0);
  }
  return result;
}

_DWORD *__swift_memcpy4_4(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for GZIPError(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for GZIPError(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 4) = v3;
  return result;
}

ValueMetadata *type metadata accessor for GZIPError()
{
  return &type metadata for GZIPError;
}

uint64_t ExternalResult.valueOrNil()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v4 + 16))(v7, v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a1);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 56))(a2, 1, 1, *(_QWORD *)(a1 + 16));
  }
  else
  {
    v9 = *(_QWORD *)(a1 + 16);
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, v9);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v9);
  }
}

uint64_t sub_1A5F241F0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id *sub_1A5F24260(id *a1, id *a2, uint64_t a3)
{
  id *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char *v8;
  unsigned int v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = (char *)*a2;
    *v3 = *a2;
    v3 = (id *)&v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      v11 = *a2;
      v12 = *a2;
      *v3 = v11;
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(id *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

void sub_1A5F24384(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *((unsigned __int8 *)a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)

    else
      (*(void (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    ((void (*)(void))((char *)&loc_1A5F243CC + 4 * byte_1A5F68CE5[v5]))();
  }
}

_QWORD *sub_1A5F24424(_QWORD *a1, id *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  id v8;
  id v9;
  char v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    v8 = *a2;
    v9 = *a2;
    *a1 = v8;
    v10 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v10 = 0;
  }
  *((_BYTE *)a1 + v5) = v10;
  return a1;
}

id *sub_1A5F24508(id *a1, void **a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  void *v12;
  id v13;
  char v14;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      v12 = *a2;
      v13 = v12;
      *a1 = v12;
      v14 = 1;
    }
    else
    {
      (*(void (**)(id *, void **, uint64_t))(v6 + 16))(a1, a2, v5);
      v14 = 0;
    }
    *((_BYTE *)a1 + v7) = v14;
  }
  return a1;
}

_QWORD *sub_1A5F2469C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

id *sub_1A5F24770(id *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_1A5F248FC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A5F249C0 + 4 * byte_1A5F68D08[(v4 - 1)]))();
}

void sub_1A5F24A0C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1A5F24BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A5F24BFC + 4 * byte_1A5F68D16[v3]))();
}

void sub_1A5F24C44(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for ExternalResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ExternalResult);
}

uint64_t AnyDataEventEntry.key.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnyDataEventEntry.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A5ECE02C(v1 + 16, a1);
}

uint64_t AnyDataEventEntry.traits.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AnyDataEventEntry.file.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnyDataEventEntry.line.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t sub_1A5F24D8C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1A5F24D94(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t initializeWithCopy for AnyDataEventEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 16;
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  v8(a1 + 16, v5, v7);
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AnyDataEventEntry(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for AnyDataEventEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t storeEnumTagSinglePayload for AnyDataEventEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyDataEventEntry()
{
  return &type metadata for AnyDataEventEntry;
}

uint64_t sub_1A5F25118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[10];

  type metadata accessor for DataEventStack.Entry(255, a4, a5, a4);
  v10 = sub_1A5F6431C();
  swift_bridgeObjectRetain();
  MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEAF20], v10);
  sub_1A5F640F4();
  v16[8] = v16[9];
  v16[2] = a4;
  v16[3] = a5;
  v16[4] = a1;
  v16[5] = a2;
  v16[6] = a3;
  v11 = sub_1A5F64718();
  v12 = MEMORY[0x1A85B8C3C](MEMORY[0x1E0DECD08], v11);
  v14 = sub_1A5F44150((void (*)(char *, char *))sub_1A5F25708, (uint64_t)v16, v11, (uint64_t)&type metadata for AnyDataEventEntry, MEMORY[0x1E0DEDCE8], v12, MEMORY[0x1E0DEDD18], v13);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1A5F25238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  a6[5] = a4;
  a6[6] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a6 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  v14 = (int *)type metadata accessor for DataEventStack.Entry(0, a4, a5, v13);
  v15 = *(_QWORD *)(a1 + v14[9]);
  v16 = (uint64_t *)(a1 + v14[10]);
  v17 = *v16;
  v18 = v16[1];
  v19 = *(_QWORD *)(a1 + v14[11]);
  *a6 = a2;
  a6[1] = a3;
  a6[7] = v15;
  a6[8] = v17;
  a6[9] = v18;
  a6[10] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_QWORD *sub_1A5F252F4(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1A5F25358(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A5F2539C(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1A5F253E4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t *sub_1A5F25424(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v10 = *v11;
    v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v12[1] = v13[1];
    *(_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1A5F25520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = v6 + a2;
  v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v7 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 &= 0xFFFFFFFFFFFFFFF8;
  *v10 = *(_QWORD *)v9;
  v10[1] = *(_QWORD *)(v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v9 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A5F255CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _OWORD *v9;
  _OWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A5F25648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A5F256E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1A5EEBD78(*v3, a2, a3, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_1A5F256F4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A5F25118(*v1, v1[1], v1[2], *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_1A5F25708@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_1A5F25238(a1, v2[5], v2[6], v2[2], v2[3], a2);
}

id BridgedProcessorManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BridgedProcessorManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BridgedProcessorManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedProcessorManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedProcessorManager()
{
  return objc_opt_self();
}

uint64_t BridgedProcessorManager.add(eventProcessor:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __int128 v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v20 = a1;
  sub_1A5F25A20();
  sub_1A5EF84F0(0, &qword_1ED1CCAE8);
  swift_unknownObjectRetain();
  if (swift_dynamicCast())
  {
    sub_1A5EC1D18(v18, (uint64_t)v21);
    v3 = *(_QWORD *)(v1 + OBJC_IVAR___AAProcessorManager_processorManager);
    v4 = v22;
    v5 = v23;
    __swift_project_boxed_opaque_existential_1(v21, v22);
    v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    swift_unknownObjectRetain();
    v7 = v6(v4, v5);
    v9 = v8;
    type metadata accessor for ProxyEventProcessor();
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = a1;
    v10[3] = v7;
    v10[4] = v9;
    v11 = *(_QWORD *)(v3 + 32);
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = v3;
    v12[3] = v10;
    v12[4] = &off_1E4FD56C8;
    swift_retain();
    swift_retain();
    sub_1A5EEC784(v11, (uint64_t)sub_1A5F12DBC, (uint64_t)v12);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  }
  else
  {
    v19 = 0;
    memset(v18, 0, sizeof(v18));
    sub_1A5F25CD8((uint64_t)v18, &qword_1EE80D0C8, &qword_1ED1CCAE8);
    v14 = *(_QWORD *)(v1 + OBJC_IVAR___AAProcessorManager_processorManager);
    type metadata accessor for BridgedEventProcessor();
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = a1;
    v16 = *(_QWORD *)(v14 + 32);
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v14;
    v17[3] = v15;
    v17[4] = &off_1E4FCF228;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    sub_1A5EEC784(v16, (uint64_t)sub_1A5EF428C, (uint64_t)v17);
    swift_release();
    return swift_release();
  }
}

unint64_t sub_1A5F25A20()
{
  unint64_t result;

  result = qword_1ED1CCAE0;
  if (!qword_1ED1CCAE0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1CCAE0);
  }
  return result;
}

uint64_t BridgedProcessorManager.remove(eventProcessor:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int128 v14;
  __int128 v15[2];
  uint64_t v16;
  __int128 v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR___AAProcessorManager_processorManager);
  sub_1A5EE02A4();
  sub_1A5F644B4();
  v4 = v18[0];
  v5 = *(_QWORD *)(v18[0] + 16);
  if (!v5)
    return swift_bridgeObjectRelease();
  v13 = v3;
  swift_bridgeObjectRetain();
  sub_1A5EF84F0(0, (unint64_t *)&qword_1ED1CFAE0);
  sub_1A5EF84F0(0, &qword_1EE80D0D8);
  for (i = 0; i != v5; ++i)
  {
    v17 = *(_OWORD *)(v4 + 16 * i + 32);
    v14 = v17;
    swift_unknownObjectRetain_n();
    if (swift_dynamicCast())
    {
      sub_1A5EC1D18(v15, (uint64_t)v18);
      v7 = v19;
      v8 = v20;
      __swift_project_boxed_opaque_existential_1(v18, v19);
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
      if (v9 == a1)
      {
        swift_bridgeObjectRelease_n();
        v10 = *(_QWORD *)(v13 + 32);
        v11 = swift_allocObject();
        *(_QWORD *)(v11 + 16) = v13;
        *(_OWORD *)(v11 + 24) = v14;
        swift_unknownObjectRetain_n();
        swift_retain();
        sub_1A5EEC784(v10, (uint64_t)sub_1A5EFC0DC, v11);
        swift_unknownObjectRelease_n();
        return swift_release();
      }
    }
    else
    {
      v16 = 0;
      memset(v15, 0, sizeof(v15));
      sub_1A5F25CD8((uint64_t)v15, &qword_1EE80D0E0, &qword_1EE80D0D8);
    }
    swift_unknownObjectRelease();
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1A5F25CC0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A5EFBCB0(v1, a1);
}

uint64_t sub_1A5F25CD8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v4;

  sub_1A5F25D14(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1A5F25D14(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1A5EF84F0(255, a3);
    v4 = sub_1A5F64568();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1A5F25D7C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  id v7;

  swift_unknownObjectRetain();
  v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();

}

uint64_t BridgedProcessorManager.flush(callbackQueue:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5ECF738(a1, a2, a3);
}

uint64_t method lookup function for BridgedProcessorManager()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1A5F25EE0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1A5F25F04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  unsigned int v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  id *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  unint64_t v58;
  void (*v59)(char *, uint64_t);
  __int128 v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  id v64;
  unint64_t v65;
  uint64_t v66;

  v63 = a1;
  v66 = *MEMORY[0x1E0C80C00];
  v2 = sub_1A5F63D10();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A5F63DD0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v58 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v58 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v58 - v17;
  if (*(_BYTE *)(v1 + OBJC_IVAR___AATransparencyLogging_isEnabled) == 1 && (sub_1A5F26718() & 1) != 0)
  {
    v61 = v6;
    v62 = v18;
    v19 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v20 = objc_msgSend(v19, sel_bundleIdentifier);

    if (v20)
    {
      v21 = sub_1A5F64130();
      v23 = v22;

    }
    else
    {
      v23 = 0xE700000000000000;
      v21 = 0x6C6172656E6567;
    }
    v64 = (id)v21;
    v65 = v23;
    sub_1A5F641B4();
    swift_bridgeObjectRetain();
    sub_1A5F641B4();
    swift_bridgeObjectRelease();
    v24 = v65;
    *(_QWORD *)&v60 = v64;
    sub_1A5F63D34();
    sub_1A5F63D70();
    v25 = *(void (**)(char *, uint64_t))(v7 + 8);
    v26 = v61;
    v25(v9, v61);
    v64 = (id)v60;
    v65 = v24;
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CAFD78], v2);
    sub_1A5ED57CC();
    v27 = MEMORY[0x1E0DEA968];
    sub_1A5F63DC4();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v25(v12, v26);
    swift_bridgeObjectRelease();
    sub_1A5F63D88();
    v59 = v25;
    v25(v15, v26);
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v28 = (id)qword_1ED1CE7B0;
    sub_1A5F64454();
    sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFBF8, (uint64_t (*)(uint64_t))sub_1A5EF7500, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v29 = swift_allocObject();
    v60 = xmmword_1A5F679D0;
    *(_OWORD *)(v29 + 16) = xmmword_1A5F679D0;
    v30 = *(_QWORD *)(v63 + 16);
    v31 = *(_QWORD *)(v63 + 24);
    *(_QWORD *)(v29 + 56) = v27;
    v58 = sub_1A5EE19C8();
    *(_QWORD *)(v29 + 64) = v58;
    *(_QWORD *)(v29 + 32) = v30;
    *(_QWORD *)(v29 + 40) = v31;
    swift_bridgeObjectRetain();
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    v36 = Batch.toJSONObject()();
    v37 = (void *)objc_opt_self();
    v38 = MEMORY[0x1E0DEA968];
    v39 = (void *)sub_1A5F640A0();
    v40 = objc_msgSend(v37, sel_isValidJSONObject_, v39);

    if (v40)
    {
      v41 = (void *)sub_1A5F640A0();
      swift_bridgeObjectRelease();
      v64 = 0;
      v42 = objc_msgSend(v37, sel_dataWithJSONObject_options_error_, v41, 0, &v64);

      v43 = v64;
      if (v42)
      {
        v44 = sub_1A5F63E3C();
        v46 = v45;

        v47 = v62;
        sub_1A5F63E48();
        v59(v47, v61);
        sub_1A5EF0908(v44, v46);
        return;
      }
      v57 = v43;
      v54 = (void *)sub_1A5F63CE0();

      swift_willThrow();
      v56 = v61;
      v48 = (id *)&unk_1ED1CE000;
      v52 = v58;
    }
    else
    {
      v48 = (id *)&unk_1ED1CE000;
      v49 = (id)qword_1ED1CE7B0;
      sub_1A5F64448();
      v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = v60;
      v51 = sub_1A5F640C4();
      v52 = v58;
      *(_QWORD *)(v50 + 56) = v38;
      *(_QWORD *)(v50 + 64) = v52;
      *(_QWORD *)(v50 + 32) = v51;
      *(_QWORD *)(v50 + 40) = v53;
      sub_1A5F63F80();

      swift_bridgeObjectRelease();
      sub_1A5F275F0();
      v54 = (void *)swift_allocError();
      *(_QWORD *)v55 = v36;
      *(_BYTE *)(v55 + 8) = 0;
      swift_willThrow();
      v56 = v61;
    }
    v32 = v48[246];
    sub_1A5F6443C();
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = v60;
    swift_getErrorValue();
    v34 = sub_1A5F648D4();
    *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v33 + 64) = v52;
    *(_QWORD *)(v33 + 32) = v34;
    *(_QWORD *)(v33 + 40) = v35;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    v59(v62, v56);
  }
}

id TransparencyLogging.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void TransparencyLogging.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TransparencyLogging.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static TransparencyLogging.logs()()
{
  return sub_1A5F26FB8();
}

id sub_1A5F26718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void (*v8)(char *, uint64_t);
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v21[2];

  v21[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = sub_1A5F63DD0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 32;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v21 - v5 + 32;
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1A5F63D34();
  sub_1A5F63D70();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v3, v0);
  v9 = (void *)sub_1A5F63D64();
  v8(v6, v0);
  v21[0] = 0;
  v10 = objc_msgSend(v7, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v9, 1, 0, v21);

  v11 = v21[0];
  if (!(_DWORD)v10)
  {
    v12 = v11;
    v13 = (void *)sub_1A5F63CE0();

    swift_willThrow();
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v14 = (id)qword_1ED1CE7B0;
    sub_1A5F6443C();
    sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFBF8, (uint64_t (*)(uint64_t))sub_1A5EF7500, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1A5F679D0;
    swift_getErrorValue();
    v16 = sub_1A5F648D4();
    v18 = v17;
    *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 64) = sub_1A5EE19C8();
    *(_QWORD *)(v15 + 32) = v16;
    *(_QWORD *)(v15 + 40) = v18;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t sub_1A5F269B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  char v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;

  v21[1] = a1;
  v1 = sub_1A5F63F5C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A5F63F68();
  v22 = *(_QWORD *)(v5 - 8);
  v23 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v21 - v9;
  v11 = sub_1A5F63F08();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v21 - v16;
  sub_1A5F63F50();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CB1130], v1);
  sub_1A5F63EFC();
  sub_1A5F63F44();
  v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  v18(v14, v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1A5ED43E0((uint64_t)v10, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v19 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    v19 = sub_1A5F63EB4();
    v18(v17, v11);
  }
  return v19 & 1;
}

uint64_t sub_1A5F26BE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  char v18;
  id v19;
  void *v20;
  int v22;
  id v23;
  void *v24;
  unsigned int v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v29 - v3;
  v5 = sub_1A5F63F08();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_defaultManager);
  v29 = a1;
  sub_1A5F63DA0();
  v11 = (void *)sub_1A5F6410C();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v30 = 0;
  v12 = objc_msgSend(v10, sel_attributesOfItemAtPath_error_, v11, &v30);

  v13 = (void *)v30;
  if (!v12)
  {
    v19 = (id)v30;
    v20 = (void *)sub_1A5F63CE0();

    swift_willThrow();
    goto LABEL_7;
  }
  type metadata accessor for FileAttributeKey(0);
  sub_1A5F27634();
  v14 = sub_1A5F640B8();
  v15 = v13;

  if (!v14)
  {
LABEL_7:
    v30 = 0u;
    v31 = 0u;
LABEL_8:
    sub_1A5EDCB44((uint64_t)&v30);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
LABEL_9:
    sub_1A5ED43E0((uint64_t)v4, (unint64_t *)&qword_1ED1CFC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    return 0;
  }
  if (*(_QWORD *)(v14 + 16))
  {
    v16 = (id)*MEMORY[0x1E0CB2A38];
    v17 = sub_1A5F0489C((uint64_t)v16);
    if ((v18 & 1) != 0)
    {
      sub_1A5EF30B0(*(_QWORD *)(v14 + 56) + 32 * v17, (uint64_t)&v30);
    }
    else
    {
      v30 = 0u;
      v31 = 0u;
    }

  }
  else
  {
    v30 = 0u;
    v31 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v31 + 1))
    goto LABEL_8;
  v22 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, v22 ^ 1u, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    goto LABEL_9;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  if ((sub_1A5F269B4((uint64_t)v8) & 1) == 0)
  {
    v23 = objc_msgSend(v9, sel_defaultManager);
    v24 = (void *)sub_1A5F63D64();
    *(_QWORD *)&v30 = 0;
    v25 = objc_msgSend(v23, sel_removeItemAtURL_error_, v24, &v30);

    if (v25)
    {
      v26 = (id)v30;
    }
    else
    {
      v27 = (id)v30;
      v28 = (void *)sub_1A5F63CE0();

      swift_willThrow();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return 1;
}

uint64_t sub_1A5F26FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void (*v16)(char *, uint64_t);
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, _QWORD *);
  void (*v27)(char *);
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  _QWORD *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  char *v48;
  void (*v49)(char *, uint64_t);
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  id v56[2];

  v56[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CE6B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v48 - v2;
  v4 = sub_1A5F63DD0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v52 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v54 = (char *)&v48 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v48 - v13;
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1A5F63D34();
  sub_1A5F63D70();
  v53 = v5;
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v11, v4);
  v17 = (void *)sub_1A5F63D64();
  v49 = v16;
  v16(v14, v4);
  v56[0] = 0;
  v18 = objc_msgSend(v15, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v17, 0, 0, v56);

  v19 = v56[0];
  if (!v18)
  {
    v38 = v19;
    sub_1A5F63CE0();

    swift_willThrow();
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v39 = (id)qword_1ED1CE7B0;
    sub_1A5F6443C();
    sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFBF8, (uint64_t (*)(uint64_t))sub_1A5EF7500, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1A5F679D0;
    swift_getErrorValue();
    v22 = (_QWORD *)sub_1A5F648D4();
    v42 = v41;
    *(_QWORD *)(v40 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v40 + 64) = sub_1A5EE19C8();
    *(_QWORD *)(v40 + 32) = v22;
    *(_QWORD *)(v40 + 40) = v42;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    swift_willThrow();
    return (uint64_t)v22;
  }
  v50 = (_QWORD *)v4;
  v20 = sub_1A5F642A4();

  v56[0] = (id)MEMORY[0x1E0DEE9D8];
  v51 = *(_QWORD *)(v20 + 16);
  v55 = v0;
  if (!v51)
  {
    v26 = *(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v53 + 56);
    v22 = v50;
LABEL_19:
    v26(v3, 1, 1, v22);
LABEL_20:
    swift_bridgeObjectRelease();
    sub_1A5ED43E0((uint64_t)v3, (unint64_t *)&qword_1ED1CE6B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v22 = v56[0];
    if (qword_1ED1CFC08 != -1)
LABEL_24:
      swift_once();
    v43 = (id)qword_1ED1CE7B0;
    sub_1A5F64454();
    sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CFBF8, (uint64_t (*)(uint64_t))sub_1A5EF7500, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_1A5F679D0;
    v45 = v22[2];
    v46 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v44 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v44 + 64) = v46;
    *(_QWORD *)(v44 + 32) = v45;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    return (uint64_t)v22;
  }
  v21 = 0;
  v48 = v3;
  v22 = v50;
  v23 = v53;
  while (1)
  {
    if (v21 >= *(_QWORD *)(v20 + 16))
    {
      __break(1u);
      goto LABEL_24;
    }
    v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    v25 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, _QWORD *))(v23 + 16))(v3, v20 + v24 + v25 * v21, v22);
    v26 = *(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v23 + 56);
    v26(v3, 0, 1, v22);
    if ((*(unsigned int (**)(char *, uint64_t, _QWORD *))(v23 + 48))(v3, 1, v22) == 1)
      goto LABEL_20;
    v27 = *(void (**)(char *))(v23 + 32);
    v28 = v3;
    v29 = (uint64_t)v54;
    v30 = v28;
    v27(v54);
    v31 = v55;
    v32 = sub_1A5F26BE8(v29);
    if (v31)
      break;
    v55 = 0;
    if ((v32 & 1) != 0)
    {
      ((void (*)(char *, char *, _QWORD *))v27)(v52, v54, v22);
      v33 = v56[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A5EDE648(0, v33[2] + 1, 1);
        v33 = v56[0];
      }
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
      {
        sub_1A5EDE648(v34 > 1, v35 + 1, 1);
        v33 = v56[0];
      }
      v33[2] = v35 + 1;
      v36 = (char *)v33 + v24 + v35 * v25;
      v37 = v50;
      ((void (*)(char *, char *, _QWORD *))v27)(v36, v52, v50);
      v56[0] = v33;
      v22 = v37;
      v3 = v48;
    }
    else
    {
      v49(v54, (uint64_t)v22);
      v3 = v30;
    }
    ++v21;
    v23 = v53;
    if (v51 == v21)
      goto LABEL_19;
  }
  v49(v54, (uint64_t)v22);
  swift_bridgeObjectRelease();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t method lookup function for TransparencyLogging()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1A5F275F0()
{
  unint64_t result;

  result = qword_1EE80D0F0;
  if (!qword_1EE80D0F0)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for ResourceError, &type metadata for ResourceError);
    atomic_store(result, (unint64_t *)&qword_1EE80D0F0);
  }
  return result;
}

unint64_t sub_1A5F27634()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE80C978;
  if (!qword_1EE80C978)
  {
    type metadata accessor for FileAttributeKey(255);
    result = MEMORY[0x1A85B8C3C](&unk_1A5F668A0, v1);
    atomic_store(result, (unint64_t *)&qword_1EE80C978);
  }
  return result;
}

uint64_t sub_1A5F27680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD aBlock[6];

  v0 = sub_1A5F63FE0();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1A5F64028();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5F64010();
  sub_1A5F2799C((uint64_t)v3);
  sub_1A5F64010();
  sub_1A5F63FD4();
  aBlock[4] = nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A5ECE4D0;
  aBlock[3] = &block_descriptor_3_0;
  _Block_copy(aBlock);
  sub_1A5F64064();
  swift_allocObject();
  sub_1A5F64058();
  sub_1A5F644CC();
  return swift_release();
}

id AccessQueue.__allocating_init(queue:)(void *a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  id v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _DWORD *v17;
  id v18;
  uint64_t v20;
  objc_super v21;

  v3 = sub_1A5F64028();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF5B0];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - v9;
  v11 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v11[OBJC_IVAR___AAAccessQueue_queue] = a1;
  v12 = v11;
  v13 = a1;
  sub_1A5F63FF8();
  v14 = &v12[OBJC_IVAR___AAAccessQueue__qos];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v3);
  sub_1A5ECD49C(0, &qword_1ED1CE2C8, v4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Atomic);
  v15 = (char *)swift_allocObject();
  type metadata accessor for UnfairLock();
  v16 = swift_allocObject();
  v17 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v16 + 16) = v17;
  *v17 = 0;
  *(_DWORD *)(v16 + 24) = 0x10000;
  *((_QWORD *)v15 + 2) = v16;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v15[*(_QWORD *)(*(_QWORD *)v15 + 96)], v7, v3);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v3);
  *(_QWORD *)v14 = v15;
  swift_endAccess();

  v21.receiver = v12;
  v21.super_class = v1;
  v18 = objc_msgSendSuper2(&v21, sel_init);

  return v18;
}

id static AccessQueue.main.getter()
{
  return sub_1A5EBE2EC(&qword_1ED1CD058, (id *)&qword_1ED1CCCD0);
}

uint64_t sub_1A5F2799C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _QWORD **v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  _BYTE v13[24];

  v3 = sub_1A5F64028();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = (_QWORD **)(v1 + OBJC_IVAR___AAAccessQueue__qos);
  swift_beginAccess();
  v8 = *v7;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v9 = v8[2];
  swift_retain();
  os_unfair_lock_lock_with_options();
  v10 = (char *)v8 + *(_QWORD *)(*v8 + 96);
  swift_beginAccess();
  (*(void (**)(char *, _BYTE *, uint64_t))(v4 + 24))(v10, v6, v3);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  v11((uint64_t)v6, v3);
  swift_release();
  return v11(a1, v3);
}

id AccessQueue.init(queue:)(void *a1)
{
  id v2;

  v2 = sub_1A5EC0BA0(a1);

  return v2;
}

BOOL AccessQueue.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v6;
  _BYTE v7[24];
  uint64_t v8;

  swift_getObjectType();
  sub_1A5EDCB9C(a1, (uint64_t)v7);
  if (v8)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v3 = *(_QWORD *)&v6[OBJC_IVAR___AAAccessQueue_queue];
      v4 = *(_QWORD *)(v1 + OBJC_IVAR___AAAccessQueue_queue);

      return v3 == v4;
    }
  }
  else
  {
    sub_1A5EDCB44((uint64_t)v7);
  }
  return 0;
}

id AccessQueue.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AccessQueue.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AccessQueue.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for AccessQueue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccessQueue.__allocating_init(queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t initializeWithCopy for SessionManagerConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 16;
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  v8(a1 + 16, v5, v7);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SessionManagerConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  v4 = a2[8];
  a1[7] = a2[7];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[8] = v4;
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SessionManagerConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 64) = v8;
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionManagerConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionManagerConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A5F27EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
}

uint64_t sub_1A5F27F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
}

uint64_t sub_1A5F27F40()
{
  return sub_1A5EF2700();
}

uint64_t destroy for DataProvider()
{
  return sub_1A5EF6928();
}

uint64_t _s12AppAnalytics12DataProviderOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1A5EC6A8C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DataProvider(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1A5EC6A8C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A5EF6928();
  return a1;
}

uint64_t assignWithTake for DataProvider(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A5EF6928();
  return a1;
}

uint64_t getEnumTagSinglePayload for DataProvider(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DataProvider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A5F280C8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1A5F280D0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DataProvider()
{
  return &type metadata for DataProvider;
}

uint64_t BridgedEventData.eventID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AAEventData_eventID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedEventData.eventDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___AAEventData_eventDate;
  v4 = sub_1A5F63F08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BridgedEventData.eventPath.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AAEventData_eventPath);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedEventData.sessionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AAEventData_sessionID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedEventData.appSessionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AAEventData_appSessionID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static BridgedEventData.dataName.getter()
{
  return 0x746144746E657645;
}

void sub_1A5F28300()
{
  sub_1A5F6470C();
  __break(1u);
}

id BridgedEventData.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BridgedEventData.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BridgedEventData.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedEventData();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedEventData()
{
  uint64_t result;

  result = qword_1ED1CC9D0;
  if (!qword_1ED1CC9D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5F28528()
{
  return type metadata accessor for BridgedEventData();
}

uint64_t sub_1A5F28530()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63F08();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BridgedEventData()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BridgedEventData.toDict()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

void sub_1A5F285DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_1A5F63CD4();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

uint64_t BridgedTracker.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AATracker_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BridgedTracker.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AATracker_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A5F2874C()
{
  return swift_retain();
}

id BridgedTracker.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BridgedTracker.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BridgedTracker.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedTracker();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id BridgedTracker.time(eventType:)()
{
  void *v0;

  return objc_msgSend(v0, sel_timeEventType_submitAndRestartWithSession_, swift_getObjCClassFromMetadata(), 1);
}

uint64_t BridgedTracker.time(eventType:startTime:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[2];

  v15[0] = a1;
  v4 = sub_1A5F63F08();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  v8 = *(_QWORD *)(v2 + OBJC_IVAR___AATracker_eventMirrorStore);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR___AATracker_tracker);
  v10 = *(_QWORD *)(v9 + 80);
  v15[1] = *(_QWORD *)(v9 + 88);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4, v7);
  v11 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = (char *)swift_allocObject();
  v13 = v15[0];
  *((_QWORD *)v12 + 2) = v9;
  *((_QWORD *)v12 + 3) = v13;
  *((_QWORD *)v12 + 4) = v8 | 0x4000000000000000;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v12[v11], (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v12[v11 + v6] = 1;
  swift_retain_n();
  swift_retain();
  sub_1A5EEC784(v10, (uint64_t)sub_1A5F2E000, (uint64_t)v12);
  swift_release();
  return swift_release();
}

uint64_t BridgedTracker.time(eventType:submitAndRestartWithSession:)(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18[2];
  uint64_t v19;
  int v20;

  v20 = a2;
  v19 = a1;
  v3 = sub_1A5F63F08();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v18 - v8;
  v10 = *(_QWORD *)(v2 + OBJC_IVAR___AATracker_eventMirrorStore);
  v11 = *(_QWORD *)(v2 + OBJC_IVAR___AATracker_tracker);
  swift_retain();
  sub_1A5F63EFC();
  v12 = *(_QWORD *)(v11 + 88);
  v18[0] = *(_QWORD *)(v11 + 80);
  v18[1] = v12;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  v13 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v14 = v13 + v5;
  v15 = (char *)swift_allocObject();
  v16 = v19;
  *((_QWORD *)v15 + 2) = v11;
  *((_QWORD *)v15 + 3) = v16;
  *((_QWORD *)v15 + 4) = v10 | 0x4000000000000000;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v15[v13], v6, v3);
  v15[v14] = v20;
  swift_retain();
  swift_retain();
  sub_1A5EEC784(v18[0], (uint64_t)sub_1A5F2E000, (uint64_t)v15);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t BridgedTracker.time(eventType:submitAndRestartWithSession:startTime:)(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;

  v19 = a2;
  v17 = a1;
  v5 = sub_1A5F63F08();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v5);
  v9 = *(_QWORD *)(v3 + OBJC_IVAR___AATracker_eventMirrorStore);
  v10 = *(_QWORD *)(v3 + OBJC_IVAR___AATracker_tracker);
  v11 = *(_QWORD *)(v10 + 80);
  v18 = *(_QWORD *)(v10 + 88);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v5, v8);
  v12 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = (char *)swift_allocObject();
  v14 = v17;
  *((_QWORD *)v13 + 2) = v10;
  *((_QWORD *)v13 + 3) = v14;
  *((_QWORD *)v13 + 4) = v9 | 0x4000000000000000;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v13[v12], (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v13[v12 + v7] = v19;
  swift_retain_n();
  swift_retain();
  sub_1A5EEC784(v11, (uint64_t)sub_1A5F2E000, (uint64_t)v13);
  swift_release();
  return swift_release();
}

id BridgedTracker.time(rawEvent:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_timeRawEvent_submitAndRestartWithSession_, a1, 1);
}

void BridgedTracker.time(rawEvent:startTime:)(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = (id)sub_1A5F63EA8();
  objc_msgSend(v1, sel_timeRawEvent_submitAndRestartWithSession_startTime_, a1, 1, v3);

}

uint64_t BridgedTracker.time(rawEvent:submitAndRestartWithSession:)(void *a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;

  v22 = a2;
  v4 = sub_1A5F63F08();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(v2 + OBJC_IVAR___AATracker_tracker);
  v12 = a1;
  sub_1A5F63EFC();
  v13 = *(_QWORD *)(v11 + 88);
  v20 = *(_QWORD *)(v11 + 80);
  v21 = v13;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  v14 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v15 = v14 + v6;
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = v11;
  *((_QWORD *)v16 + 3) = a1;
  *((_QWORD *)v16 + 4) = 0x8000000000000000;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v16[v14], v7, v4);
  v16[v15] = v22;
  v17 = v12;
  swift_retain();
  sub_1A5EEC784(v20, (uint64_t)sub_1A5F2E000, (uint64_t)v16);

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t BridgedTracker.time(rawEvent:submitAndRestartWithSession:startTime:)(void *a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  id v14;
  _BYTE v16[12];
  int v17;

  v17 = a2;
  v6 = sub_1A5F63F08();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](v6);
  v10 = *(_QWORD *)(v3 + OBJC_IVAR___AATracker_tracker);
  v11 = *(_QWORD *)(v10 + 80);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v7 + 16))(&v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], a3, v6, v9);
  v12 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = v10;
  *((_QWORD *)v13 + 3) = a1;
  *((_QWORD *)v13 + 4) = 0x8000000000000000;
  (*(void (**)(char *, _BYTE *, uint64_t))(v7 + 32))(&v13[v12], &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v6);
  v13[v12 + v8] = v17;
  v14 = a1;
  swift_retain();
  sub_1A5EEC784(v11, (uint64_t)sub_1A5F2E000, (uint64_t)v13);

  return swift_release();
}

id BridgedTracker.submit(eventType:)()
{
  void *v0;

  return objc_msgSend(v0, sel_submitEventType_onlyIfTimed_, swift_getObjCClassFromMetadata(), 0);
}

uint64_t BridgedTracker.submit(eventType:onlyIfTimed:)(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  _BYTE v24[32];
  _OWORD v25[2];

  v23 = a2;
  v22 = a1;
  v3 = sub_1A5F63F08();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - v8;
  v19 = *(_QWORD *)(v2 + OBJC_IVAR___AATracker_eventMirrorStore) | 0x4000000000000000;
  v10 = *(_QWORD *)(v2 + OBJC_IVAR___AATracker_tracker);
  memset(v25, 0, sizeof(v25));
  swift_retain();
  sub_1A5F63EFC();
  v11 = *(_QWORD *)(v10 + 88);
  v20 = *(_QWORD *)(v10 + 80);
  v21 = v11;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  sub_1A5EDCB9C((uint64_t)v25, (uint64_t)v24);
  v12 = (*(unsigned __int8 *)(v4 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v13 = (v5 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject();
  v15 = v22;
  *(_QWORD *)(v14 + 16) = v10;
  *(_QWORD *)(v14 + 24) = v15;
  *(_QWORD *)(v14 + 32) = v19;
  *(_BYTE *)(v14 + 40) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v14 + v12, v6, v3);
  sub_1A5EDB014((uint64_t)v24, v14 + v13);
  v16 = (_QWORD *)(v14 + ((v13 + 39) & 0xFFFFFFFFFFFFFFF8));
  *v16 = 0;
  v16[1] = 0;
  swift_retain();
  swift_retain();
  sub_1A5EEC784(v20, (uint64_t)sub_1A5EF8030, v14);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  return sub_1A5ED4D44((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1A5ED4438);
}

void BridgedTracker.submit(eventType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  _QWORD v8[6];

  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8[4] = a2;
  v8[5] = a3;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1A5F1A97C;
  v8[3] = &block_descriptor_6;
  v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_submitEventType_onlyIfTimed_completion_, ObjCClassFromMetadata, 0, v7);
  _Block_release(v7);
}

uint64_t BridgedTracker.submit(eventType:onlyIfTimed:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  int v30;
  _BYTE v31[32];
  _OWORD v32[2];

  v30 = a2;
  v29 = a1;
  v24 = sub_1A5F63F08();
  v7 = *(_QWORD *)(v24 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v24);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - v11;
  v26 = *(_QWORD *)(v4 + OBJC_IVAR___AATracker_eventMirrorStore) | 0x4000000000000000;
  v13 = *(_QWORD *)(v4 + OBJC_IVAR___AATracker_tracker);
  memset(v32, 0, sizeof(v32));
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  swift_retain();
  swift_retain();
  v28 = v12;
  sub_1A5F63EFC();
  v27 = *(_QWORD *)(v13 + 88);
  v25 = *(_QWORD *)(v13 + 80);
  v15 = v12;
  v16 = v24;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v15, v24);
  sub_1A5EDCB9C((uint64_t)v32, (uint64_t)v31);
  v17 = (*(unsigned __int8 *)(v7 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v18 = (v8 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject();
  v20 = v29;
  *(_QWORD *)(v19 + 16) = v13;
  *(_QWORD *)(v19 + 24) = v20;
  *(_QWORD *)(v19 + 32) = v26;
  *(_BYTE *)(v19 + 40) = v30;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v19 + v17, v9, v16);
  sub_1A5EDB014((uint64_t)v31, v19 + v18);
  v21 = (_QWORD *)(v19 + ((v18 + 39) & 0xFFFFFFFFFFFFFFF8));
  *v21 = sub_1A5F2EE48;
  v21[1] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A5EEC784(v25, (uint64_t)sub_1A5EF8030, v19);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v28, v16);
  return sub_1A5ED4D44((uint64_t)v32, (uint64_t (*)(_QWORD))sub_1A5ED4438);
}

id BridgedTracker.submit(rawEvent:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_submitRawEvent_onlyIfTimed_, a1, 0);
}

uint64_t BridgedTracker.submit(rawEvent:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  id v21;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[32];
  _OWORD v28[2];

  v26 = a2;
  v23 = a1;
  v6 = sub_1A5F63F08();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - v11;
  v13 = *(_QWORD *)(v3 + OBJC_IVAR___AATracker_tracker);
  memset(v28, 0, sizeof(v28));
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v26;
  *(_QWORD *)(v14 + 24) = a3;
  v24 = a1;
  swift_retain();
  sub_1A5F63EFC();
  v15 = *(_QWORD *)(v13 + 88);
  v25 = *(_QWORD *)(v13 + 80);
  v26 = v15;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  sub_1A5EDCB9C((uint64_t)v28, (uint64_t)v27);
  v16 = (*(unsigned __int8 *)(v7 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  v19 = v23;
  *(_QWORD *)(v18 + 16) = v13;
  *(_QWORD *)(v18 + 24) = v19;
  *(_QWORD *)(v18 + 32) = 0x8000000000000000;
  *(_BYTE *)(v18 + 40) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v16, v9, v6);
  sub_1A5EDB014((uint64_t)v27, v18 + v17);
  v20 = (_QWORD *)(v18 + ((v17 + 39) & 0xFFFFFFFFFFFFFFF8));
  *v20 = sub_1A5F2EE48;
  v20[1] = v14;
  v21 = v24;
  swift_retain();
  swift_retain();
  sub_1A5EEC784(v25, (uint64_t)sub_1A5EF8030, v18);

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  return sub_1A5ED4D44((uint64_t)v28, (uint64_t (*)(_QWORD))sub_1A5ED4438);
}

uint64_t BridgedTracker.submit(rawEvent:onlyIfTimed:completion:)(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  id v22;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  _BYTE v30[32];
  _OWORD v31[2];

  v28 = a3;
  v29 = a2;
  v25 = a1;
  v7 = sub_1A5F63F08();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v24 - v12;
  v14 = *(_QWORD *)(v4 + OBJC_IVAR___AATracker_tracker);
  memset(v31, 0, sizeof(v31));
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v28;
  *(_QWORD *)(v15 + 24) = a4;
  v26 = a1;
  swift_retain();
  sub_1A5F63EFC();
  v16 = *(_QWORD *)(v14 + 88);
  v27 = *(_QWORD *)(v14 + 80);
  v28 = v16;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  sub_1A5EDCB9C((uint64_t)v31, (uint64_t)v30);
  v17 = (*(unsigned __int8 *)(v8 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v18 = (v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject();
  v20 = v25;
  *(_QWORD *)(v19 + 16) = v14;
  *(_QWORD *)(v19 + 24) = v20;
  *(_QWORD *)(v19 + 32) = 0x8000000000000000;
  *(_BYTE *)(v19 + 40) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v19 + v17, v10, v7);
  sub_1A5EDB014((uint64_t)v30, v19 + v18);
  v21 = (_QWORD *)(v19 + ((v18 + 39) & 0xFFFFFFFFFFFFFFF8));
  *v21 = sub_1A5F2EE48;
  v21[1] = v15;
  v22 = v26;
  swift_retain();
  swift_retain();
  sub_1A5EEC784(v27, (uint64_t)sub_1A5EF8030, v19);

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  return sub_1A5ED4D44((uint64_t)v31, (uint64_t (*)(_QWORD))sub_1A5ED4438);
}

id BridgedTracker.delayedSubmit(eventType:onlyIfTimed:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  objc_class *v17;
  _BYTE *v18;
  uint64_t (**v19)();
  id v20;
  _BYTE v22[4];
  int v23;
  uint64_t v24;
  objc_super v25;

  v24 = a3;
  v23 = a2;
  v6 = sub_1A5F63F08();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v22[-v11];
  sub_1A5F63EFC();
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v12, v6);
  v14 = (*(unsigned __int8 *)(v7 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v15 + 24) = a1;
  *(_BYTE *)(v15 + 32) = v23;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v7 + 32))(v15 + v14, v9, v6);
  v16 = (_QWORD *)(v15 + ((v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v16 = v24;
  v16[1] = a4;
  v17 = (objc_class *)type metadata accessor for DelayedToken();
  v18 = objc_allocWithZone(v17);
  v18[OBJC_IVAR___AADelayedToken_sealed] = 0;
  v19 = (uint64_t (**)())&v18[OBJC_IVAR___AADelayedToken_block];
  *v19 = sub_1A5F2E104;
  v19[1] = (uint64_t (*)())v15;
  v25.receiver = v18;
  v25.super_class = v17;
  swift_retain();
  swift_retain();
  v20 = objc_msgSendSuper2(&v25, sel_init);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v6);
  swift_release();
  return v20;
}

void sub_1A5F2A020(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD v26[2];
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[32];
  _OWORD v34[2];

  v12 = sub_1A5F63F08();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v16 = MEMORY[0x1A85B8E10](a1 + 16);
  if (v16)
  {
    v17 = (void *)v16;
    v31 = *(_QWORD *)(v16 + OBJC_IVAR___AATracker_eventMirrorStore);
    v28 = a2;
    v29 = v31 | 0x4000000000000000;
    v18 = *(_QWORD *)(v16 + OBJC_IVAR___AATracker_tracker);
    memset(v34, 0, sizeof(v34));
    v19 = swift_allocObject();
    v27 = a3;
    v20 = v19;
    *(_QWORD *)(v19 + 16) = a5;
    *(_QWORD *)(v19 + 24) = a6;
    v32 = *(_QWORD *)(v18 + 88);
    v30 = *(_QWORD *)(v18 + 80);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v12);
    sub_1A5EDCB9C((uint64_t)v34, (uint64_t)v33);
    v21 = (*(unsigned __int8 *)(v13 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v22 = (v14 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    v26[1] = a6;
    v23 = swift_allocObject();
    v24 = v28;
    *(_QWORD *)(v23 + 16) = v18;
    *(_QWORD *)(v23 + 24) = v24;
    *(_QWORD *)(v23 + 32) = v29;
    *(_BYTE *)(v23 + 40) = v27 & 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v23 + v21, v15, v12);
    sub_1A5EDB014((uint64_t)v33, v23 + v22);
    v25 = (_QWORD *)(v23 + ((v22 + 39) & 0xFFFFFFFFFFFFFFF8));
    *v25 = sub_1A5F2EE48;
    v25[1] = v20;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A5EEC784(v30, (uint64_t)sub_1A5EF8030, v23);
    swift_release();
    swift_release();
    swift_release();
    sub_1A5ED4D44((uint64_t)v34, (uint64_t (*)(_QWORD))sub_1A5ED4438);

  }
}

id BridgedTracker.delayedSubmit(eventType:)()
{
  void *v0;
  uint64_t ObjCClassFromMetadata;
  void *v2;
  id v3;
  _QWORD v5[6];

  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5[4] = j_nullsub_1;
  v5[5] = 0;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 1107296256;
  v5[2] = sub_1A5F1A97C;
  v5[3] = &block_descriptor_53;
  v2 = _Block_copy(v5);
  v3 = objc_msgSend(v0, sel_delayedSubmitEventType_onlyIfTimed_completion_, ObjCClassFromMetadata, 0, v2);
  _Block_release(v2);
  return v3;
}

id BridgedTracker.delayedSubmit(eventType:onlyIfTimed:)(uint64_t a1, char a2)
{
  void *v2;
  uint64_t ObjCClassFromMetadata;
  void *v5;
  id v6;
  _QWORD v8[6];

  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8[4] = j_nullsub_1;
  v8[5] = 0;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1A5F1A97C;
  v8[3] = &block_descriptor_56;
  v5 = _Block_copy(v8);
  v6 = objc_msgSend(v2, sel_delayedSubmitEventType_onlyIfTimed_completion_, ObjCClassFromMetadata, a2 & 1, v5);
  _Block_release(v5);
  return v6;
}

id BridgedTracker.delayedSubmit(eventType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  _QWORD v10[6];

  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10[4] = a2;
  v10[5] = a3;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1A5F1A97C;
  v10[3] = &block_descriptor_59_0;
  v7 = _Block_copy(v10);
  swift_retain();
  swift_release();
  v8 = objc_msgSend(v3, sel_delayedSubmitEventType_onlyIfTimed_completion_, ObjCClassFromMetadata, 0, v7);
  _Block_release(v7);
  return v8;
}

id BridgedTracker.delayedSubmit(rawEvent:onlyIfTimed:completion:)(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  objc_class *v17;
  _BYTE *v18;
  uint64_t (**v19)();
  id v20;
  id v21;
  _BYTE v23[4];
  int v24;
  uint64_t v25;
  objc_super v26;

  v25 = a3;
  v24 = a2;
  v6 = sub_1A5F63F08();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v23[-v11];
  sub_1A5F63EFC();
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v12, v6);
  v14 = (*(unsigned __int8 *)(v7 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v15 + 24) = a1;
  *(_BYTE *)(v15 + 32) = v24;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v7 + 32))(v15 + v14, v9, v6);
  v16 = (_QWORD *)(v15 + ((v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v16 = v25;
  v16[1] = a4;
  v17 = (objc_class *)type metadata accessor for DelayedToken();
  v18 = objc_allocWithZone(v17);
  v18[OBJC_IVAR___AADelayedToken_sealed] = 0;
  v19 = (uint64_t (**)())&v18[OBJC_IVAR___AADelayedToken_block];
  *v19 = sub_1A5F2E1AC;
  v19[1] = (uint64_t (*)())v15;
  v26.receiver = v18;
  v26.super_class = v17;
  swift_retain();
  v20 = a1;
  swift_retain();
  v21 = objc_msgSendSuper2(&v26, sel_init);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v6);
  swift_release();
  return v21;
}

void sub_1A5F2A928(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (**v24)(uint64_t);
  id v25;
  _QWORD v26[2];
  int v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  _BYTE v31[32];
  _OWORD v32[2];

  v12 = sub_1A5F63F08();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v16 = (char *)MEMORY[0x1A85B8E10](a1 + 16);
  if (v16)
  {
    v27 = a3;
    v17 = *(_QWORD *)&v16[OBJC_IVAR___AATracker_tracker];
    memset(v32, 0, sizeof(v32));
    v30 = v16;
    v18 = a2;
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = a5;
    *(_QWORD *)(v19 + 24) = a6;
    v20 = *(_QWORD *)(v17 + 88);
    v28 = *(_QWORD *)(v17 + 80);
    v29 = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v12);
    sub_1A5EDCB9C((uint64_t)v32, (uint64_t)v31);
    v21 = (*(unsigned __int8 *)(v13 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v22 = (v14 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    v26[1] = a6;
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v17;
    *(_QWORD *)(v23 + 24) = v18;
    *(_QWORD *)(v23 + 32) = 0x8000000000000000;
    *(_BYTE *)(v23 + 40) = v27 & 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v23 + v21, v15, v12);
    sub_1A5EDB014((uint64_t)v31, v23 + v22);
    v24 = (void (**)(uint64_t))(v23 + ((v22 + 39) & 0xFFFFFFFFFFFFFFF8));
    *v24 = sub_1A5F2ED28;
    v24[1] = (void (*)(uint64_t))v19;
    v25 = v18;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1A5EEC784(v28, (uint64_t)sub_1A5EF8030, v23);

    swift_release();
    swift_release();
    sub_1A5ED4D44((uint64_t)v32, (uint64_t (*)(_QWORD))sub_1A5ED4438);

  }
}

id BridgedTracker.delayedSubmit(rawEvent:)(uint64_t a1)
{
  void *v1;
  void *v3;
  id v4;
  _QWORD v6[6];

  v6[4] = j_nullsub_1;
  v6[5] = 0;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1A5F1A97C;
  v6[3] = &block_descriptor_66;
  v3 = _Block_copy(v6);
  v4 = objc_msgSend(v1, sel_delayedSubmitRawEvent_onlyIfTimed_completion_, a1, 0, v3);
  _Block_release(v3);
  return v4;
}

id BridgedTracker.delayedSubmit(rawEvent:onlyIfTimed:)(uint64_t a1, char a2)
{
  void *v2;
  void *v5;
  id v6;
  _QWORD v8[6];

  v8[4] = nullsub_1;
  v8[5] = 0;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1A5F1A97C;
  v8[3] = &block_descriptor_69;
  v5 = _Block_copy(v8);
  v6 = objc_msgSend(v2, sel_delayedSubmitRawEvent_onlyIfTimed_completion_, a1, a2 & 1, v5);
  _Block_release(v5);
  return v6;
}

id BridgedTracker.delayedSubmit(rawEvent:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;
  _QWORD v8[6];

  v8[4] = a2;
  v8[5] = a3;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1A5F1A97C;
  v8[3] = &block_descriptor_72;
  v5 = _Block_copy(v8);
  swift_retain();
  swift_release();
  v6 = objc_msgSend(v3, sel_delayedSubmitRawEvent_onlyIfTimed_completion_, a1, 0, v5);
  _Block_release(v5);
  return v6;
}

uint64_t BridgedTracker.explicitSubmit(eventType:onlyIfTimed:submitTime:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  _BYTE v28[32];
  _OWORD v29[2];

  v23 = a5;
  v21 = a3;
  v27 = a2;
  v25 = a1;
  v8 = sub_1A5F63F08();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v5 + OBJC_IVAR___AATracker_eventMirrorStore) | 0x4000000000000000;
  v12 = *(_QWORD *)(v5 + OBJC_IVAR___AATracker_tracker);
  memset(v29, 0, sizeof(v29));
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a4;
  *(_QWORD *)(v13 + 24) = a5;
  v26 = *(_QWORD *)(v12 + 88);
  v24 = *(_QWORD *)(v12 + 80);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v21, v8);
  sub_1A5EDCB9C((uint64_t)v29, (uint64_t)v28);
  v14 = (*(unsigned __int8 *)(v9 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v15 = (v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject();
  v17 = v25;
  *(_QWORD *)(v16 + 16) = v12;
  *(_QWORD *)(v16 + 24) = v17;
  *(_QWORD *)(v16 + 32) = v22;
  *(_BYTE *)(v16 + 40) = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v14, v11, v8);
  sub_1A5EDB014((uint64_t)v28, v16 + v15);
  v18 = (_QWORD *)(v16 + ((v15 + 39) & 0xFFFFFFFFFFFFFFF8));
  *v18 = sub_1A5F2EE48;
  v18[1] = v13;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A5EEC784(v24, (uint64_t)sub_1A5EF8030, v16);
  swift_release();
  swift_release();
  swift_release();
  return sub_1A5ED4D44((uint64_t)v29, (uint64_t (*)(_QWORD))sub_1A5ED4438);
}

uint64_t BridgedTracker.explicitSubmit(eventType:onlyIfTimed:submitTime:)(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE v21[32];
  _OWORD v22[2];

  v19 = a2;
  v17 = a1;
  v5 = sub_1A5F63F08();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v3 + OBJC_IVAR___AATracker_eventMirrorStore);
  v10 = *(_QWORD *)(v3 + OBJC_IVAR___AATracker_tracker);
  memset(v22, 0, sizeof(v22));
  v20 = *(_QWORD *)(v10 + 88);
  v18 = *(_QWORD *)(v10 + 80);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
  sub_1A5EDCB9C((uint64_t)v22, (uint64_t)v21);
  v11 = (*(unsigned __int8 *)(v6 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v12 = (v7 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = swift_allocObject();
  v14 = v17;
  *(_QWORD *)(v13 + 16) = v10;
  *(_QWORD *)(v13 + 24) = v14;
  *(_QWORD *)(v13 + 32) = v9 | 0x4000000000000000;
  *(_BYTE *)(v13 + 40) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v11, v8, v5);
  sub_1A5EDB014((uint64_t)v21, v13 + v12);
  v15 = (_QWORD *)(v13 + ((v12 + 39) & 0xFFFFFFFFFFFFFFF8));
  *v15 = 0;
  v15[1] = 0;
  swift_retain_n();
  swift_retain();
  sub_1A5EEC784(v18, (uint64_t)sub_1A5EF8030, v13);
  swift_release();
  swift_release();
  return sub_1A5ED4D44((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1A5ED4438);
}

uint64_t BridgedTracker.explicitSubmit(eventType:submitTime:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[32];
  _OWORD v22[2];

  v18 = a1;
  v4 = sub_1A5F63F08();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v2 + OBJC_IVAR___AATracker_eventMirrorStore);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR___AATracker_tracker);
  memset(v22, 0, sizeof(v22));
  v10 = *(_QWORD *)(v9 + 88);
  v19 = *(_QWORD *)(v9 + 80);
  v20 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  sub_1A5EDCB9C((uint64_t)v22, (uint64_t)v21);
  v11 = (*(unsigned __int8 *)(v5 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = (v6 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = swift_allocObject();
  v14 = v18;
  *(_QWORD *)(v13 + 16) = v9;
  *(_QWORD *)(v13 + 24) = v14;
  *(_QWORD *)(v13 + 32) = v8 | 0x4000000000000000;
  *(_BYTE *)(v13 + 40) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13 + v11, v7, v4);
  sub_1A5EDB014((uint64_t)v21, v13 + v12);
  v15 = (_QWORD *)(v13 + ((v12 + 39) & 0xFFFFFFFFFFFFFFF8));
  *v15 = 0;
  v15[1] = 0;
  swift_retain_n();
  swift_retain();
  sub_1A5EEC784(v19, (uint64_t)sub_1A5EF8030, v13);
  swift_release();
  swift_release();
  return sub_1A5ED4D44((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1A5ED4438);
}

void BridgedTracker.explicitSubmit(eventType:submitTime:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  void *v10;
  _QWORD v11[6];

  v5 = v4;
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)sub_1A5F63EA8();
  v11[4] = a3;
  v11[5] = a4;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A5F1A97C;
  v11[3] = &block_descriptor_90;
  v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_explicitSubmitEvent_onlyIfTimed_submitTime_completion_, ObjCClassFromMetadata, 0, v9, v10);
  _Block_release(v10);

}

uint64_t BridgedTracker.explicitSubmit(rawEvent:onlyIfTimed:submitTime:completion:)(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  id v21;
  _QWORD v23[2];
  void *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[32];
  _OWORD v29[2];

  v23[1] = a5;
  v24 = a1;
  v25 = a2;
  v9 = sub_1A5F63F08();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v5 + OBJC_IVAR___AATracker_tracker);
  memset(v29, 0, sizeof(v29));
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a4;
  *(_QWORD *)(v14 + 24) = a5;
  v15 = *(_QWORD *)(v13 + 88);
  v26 = *(_QWORD *)(v13 + 80);
  v27 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  sub_1A5EDCB9C((uint64_t)v29, (uint64_t)v28);
  v16 = (*(unsigned __int8 *)(v10 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v17 = (v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  v19 = v24;
  *(_QWORD *)(v18 + 16) = v13;
  *(_QWORD *)(v18 + 24) = v19;
  *(_QWORD *)(v18 + 32) = 0x8000000000000000;
  *(_BYTE *)(v18 + 40) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v16, v12, v9);
  sub_1A5EDB014((uint64_t)v28, v18 + v17);
  v20 = (_QWORD *)(v18 + ((v17 + 39) & 0xFFFFFFFFFFFFFFF8));
  *v20 = sub_1A5F2EE48;
  v20[1] = v14;
  v21 = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A5EEC784(v26, (uint64_t)sub_1A5EF8030, v18);

  swift_release();
  swift_release();
  return sub_1A5ED4D44((uint64_t)v29, (uint64_t (*)(_QWORD))sub_1A5ED4438);
}

void sub_1A5F2BA74(uint64_t a1, void (*a2)(_QWORD, id))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  objc_class *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  id v26;
  id v27;
  uint64_t v28;
  void (*v29)(id, _QWORD);
  objc_super v30;

  sub_1A5F2EC34(0, &qword_1ED1CC198, (uint64_t (*)(_QWORD, ValueMetadata *, _UNKNOWN **))type metadata accessor for ProcessEvent);
  v5 = v4;
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v28 - v6);
  sub_1A5F2EC34(0, (unint64_t *)&unk_1ED1CB9B0, (uint64_t (*)(_QWORD, ValueMetadata *, _UNKNOWN **))type metadata accessor for EventSubmitResult);
  MEMORY[0x1E0C80A78](v8);
  v10 = (id *)((char *)&v28 - v9);
  sub_1A5F2EC88(a1, (uint64_t)&v28 - v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = *v10;
    v12 = *v10;
    a2(0, v11);

  }
  else
  {
    sub_1A5EC73F4((uint64_t)v10, (uint64_t)v7, (uint64_t)&qword_1ED1CC198, (uint64_t)type metadata accessor for ProcessEvent, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1A5F2EC34);
    v14 = *v7;
    v13 = v7[1];
    v16 = v7[3];
    v15 = v7[4];
    v17 = (void *)v7[2];
    v18 = (uint64_t *)((char *)v7 + *(int *)(v5 + 48));
    v29 = (void (*)(id, _QWORD))a2;
    v19 = *v18;
    v20 = v18[1];
    v21 = (objc_class *)type metadata accessor for BridgedProcessEvent();
    v22 = (char *)objc_allocWithZone(v21);
    v23 = &v22[OBJC_IVAR___AAProcessEvent_name];
    *(_QWORD *)v23 = v14;
    *((_QWORD *)v23 + 1) = v13;
    v24 = &v22[OBJC_IVAR___AAProcessEvent_version];
    *(_QWORD *)v24 = v16;
    *((_QWORD *)v24 + 1) = v15;
    *(_QWORD *)&v22[OBJC_IVAR___AAProcessEvent_json] = v17;
    v25 = &v22[OBJC_IVAR___AAProcessEvent_groupName];
    *(_QWORD *)v25 = v19;
    *((_QWORD *)v25 + 1) = v20;
    v30.receiver = v22;
    v30.super_class = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = v17;
    swift_bridgeObjectRetain();
    v27 = objc_msgSendSuper2(&v30, sel_init);
    v29(v27, 0);

    sub_1A5F2ECDC((uint64_t)v7);
  }
}

uint64_t BridgedTracker.explicitSubmit(rawEvent:onlyIfTimed:submitTime:)(void *a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v19[2];
  _BYTE v20[32];
  _OWORD v21[2];

  v7 = sub_1A5F63F08();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v3 + OBJC_IVAR___AATracker_tracker);
  memset(v21, 0, sizeof(v21));
  v12 = *(_QWORD *)(v11 + 88);
  v19[0] = *(_QWORD *)(v11 + 80);
  v19[1] = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  sub_1A5EDCB9C((uint64_t)v21, (uint64_t)v20);
  v13 = (*(unsigned __int8 *)(v8 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v14 = (v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v11;
  *(_QWORD *)(v15 + 24) = a1;
  *(_QWORD *)(v15 + 32) = 0x8000000000000000;
  *(_BYTE *)(v15 + 40) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v13, v10, v7);
  sub_1A5EDB014((uint64_t)v20, v15 + v14);
  v16 = (_QWORD *)(v15 + ((v14 + 39) & 0xFFFFFFFFFFFFFFF8));
  *v16 = 0;
  v16[1] = 0;
  v17 = a1;
  swift_retain();
  sub_1A5EEC784(v19[0], (uint64_t)sub_1A5EF8030, v15);

  swift_release();
  return sub_1A5ED4D44((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1A5ED4438);
}

uint64_t BridgedTracker.explicitRawSubmit(rawEvent:submitTime:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  _QWORD v17[2];
  _BYTE v18[32];
  _OWORD v19[2];

  v5 = sub_1A5F63F08();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR___AATracker_tracker);
  memset(v19, 0, sizeof(v19));
  v10 = *(_QWORD *)(v9 + 80);
  v17[1] = *(_QWORD *)(v9 + 88);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  sub_1A5EDCB9C((uint64_t)v19, (uint64_t)v18);
  v11 = (*(unsigned __int8 *)(v6 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v12 = (v7 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v9;
  *(_QWORD *)(v13 + 24) = a1;
  *(_QWORD *)(v13 + 32) = 0x8000000000000000;
  *(_BYTE *)(v13 + 40) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v11, v8, v5);
  sub_1A5EDB014((uint64_t)v18, v13 + v12);
  v14 = (_QWORD *)(v13 + ((v12 + 39) & 0xFFFFFFFFFFFFFFF8));
  *v14 = 0;
  v14[1] = 0;
  v15 = a1;
  swift_retain();
  sub_1A5EEC784(v10, (uint64_t)sub_1A5EF8030, v13);

  swift_release();
  return sub_1A5ED4D44((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1A5ED4438);
}

void BridgedTracker.explicitRawSubmit(rawEvent:submitTime:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  void *v9;
  void *v10;
  _QWORD v11[6];

  v5 = v4;
  v9 = (void *)sub_1A5F63EA8();
  v11[4] = a3;
  v11[5] = a4;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A5F1A97C;
  v11[3] = &block_descriptor_108;
  v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_explicitSubmitRawEvent_onlyIfTimed_submitTime_completion_, a1, 0, v9, v10);
  _Block_release(v10);

}

uint64_t BridgedTracker.register(dataType:block:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_dataName);
  v7 = sub_1A5F64130();
  v9 = v8;

  v10 = *(_QWORD *)(v3 + OBJC_IVAR___AATracker_tracker);
  v11 = *(_QWORD *)(v10 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v10;
  *(_QWORD *)(v12 + 24) = v7;
  *(_QWORD *)(v12 + 32) = v9;
  *(_QWORD *)(v12 + 40) = a2;
  *(_QWORD *)(v12 + 48) = a3;
  *(_BYTE *)(v12 + 56) = 1;
  swift_retain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A5EEC784(v11, (uint64_t)sub_1A5F2E360, v12);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

id sub_1A5F2C584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  id v5;

  v4 = (void *)sub_1A5F6410C();
  v5 = (id)(*(uint64_t (**)(uint64_t, void *))(a3 + 16))(a3, v4);

  return v5;
}

uint64_t BridgedTracker.pop(dataType:)(uint64_t a1)
{
  return sub_1A5F2C6C8(a1, (uint64_t)&unk_1E4FD1B88, (uint64_t)sub_1A5F2E68C);
}

Swift::Void __swiftcall BridgedTracker.pop(dataName:)(Swift::String dataName)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  object = dataName._object;
  countAndFlagsBits = dataName._countAndFlagsBits;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___AATracker_tracker);
  v5 = *(_QWORD *)(v4 + 80);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v4;
  v6[3] = countAndFlagsBits;
  v6[4] = object;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A5EEC784(v5, (uint64_t)sub_1A5F2E68C, (uint64_t)v6);
  swift_release();
}

uint64_t BridgedTracker.clearStack(dataType:)(uint64_t a1)
{
  return sub_1A5F2C6C8(a1, (uint64_t)&unk_1E4FD1BD8, (uint64_t)sub_1A5F2E68C);
}

uint64_t sub_1A5F2C6C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_dataName);
  v6 = sub_1A5F64130();
  v8 = v7;

  v9 = *(_QWORD *)(v3 + OBJC_IVAR___AATracker_tracker);
  v10 = *(_QWORD *)(v9 + 80);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v9;
  v11[3] = v6;
  v11[4] = v8;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A5EEC784(v10, a3, (uint64_t)v11);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t BridgedTracker.clearStack(of:includeParentTrackers:)(uint64_t a1, char a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_dataName);
  v5 = sub_1A5F64130();
  v7 = v6;

  v8 = *(_QWORD *)(v2 + OBJC_IVAR___AATracker_tracker);
  v9 = *(_QWORD *)(v8 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_QWORD *)(v10 + 24) = v5;
  *(_QWORD *)(v10 + 32) = v7;
  *(_BYTE *)(v10 + 40) = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A5EEC784(v9, (uint64_t)sub_1A5F2E6C0, v10);
  swift_bridgeObjectRelease();
  return swift_release();
}

id BridgedTracker.chain(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  objc_super v13;

  v3 = v2;
  v6 = Tracker.chain(name:identifier:)(a1, a2, 0, 0);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR___AATracker_eventMirrorStore);
  v8 = (objc_class *)type metadata accessor for BridgedTracker();
  v9 = (char *)objc_allocWithZone(v8);
  v10 = (uint64_t *)&v9[OBJC_IVAR___AATracker_name];
  *v10 = a1;
  v10[1] = a2;
  *(_QWORD *)&v9[OBJC_IVAR___AATracker_tracker] = v6;
  *(_QWORD *)&v9[OBJC_IVAR___AATracker_eventMirrorStore] = v7;
  v11 = &v9[OBJC_IVAR___AATracker_identifier];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v13.receiver = v9;
  v13.super_class = v8;
  swift_retain();
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v13, sel_init);
}

id BridgedTracker.chain(name:identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  uint64_t *v14;
  uint64_t *v15;
  objc_super v17;

  v5 = v4;
  v10 = Tracker.chain(name:identifier:)(a1, a2, a3, a4);
  v11 = *(_QWORD *)(v5 + OBJC_IVAR___AATracker_eventMirrorStore);
  v12 = (objc_class *)type metadata accessor for BridgedTracker();
  v13 = (char *)objc_allocWithZone(v12);
  v14 = (uint64_t *)&v13[OBJC_IVAR___AATracker_name];
  *v14 = a1;
  v14[1] = a2;
  *(_QWORD *)&v13[OBJC_IVAR___AATracker_tracker] = v10;
  *(_QWORD *)&v13[OBJC_IVAR___AATracker_eventMirrorStore] = v11;
  v15 = (uint64_t *)&v13[OBJC_IVAR___AATracker_identifier];
  *v15 = a3;
  v15[1] = a4;
  v17.receiver = v13;
  v17.super_class = v12;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v17, sel_init);
}

uint64_t BridgedTracker.path.getter()
{
  return Tracker.path.getter();
}

id sub_1A5F2CBD4(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  v5 = (void *)sub_1A5F64298();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t BridgedTracker.debugPath.getter()
{
  return Tracker.debugPath.getter();
}

id BridgedTracker.onSessionChange(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  objc_class *v7;
  char *v8;
  objc_super v10;

  v4 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v4;
  v5[3] = a1;
  v5[4] = a2;
  swift_retain();
  swift_retain();
  v6 = Tracker.onSessionChange(block:)((uint64_t)sub_1A5F2E720, (uint64_t)v5);
  swift_release();
  swift_release();
  swift_unknownObjectWeakAssign();
  v7 = (objc_class *)type metadata accessor for BridgedSessionObserver();
  v8 = (char *)objc_allocWithZone(v7);
  *(_QWORD *)&v8[OBJC_IVAR___AASessionObserver_sessionObserver] = v6;
  v10.receiver = v8;
  v10.super_class = v7;
  return objc_msgSendSuper2(&v10, sel_init);
}

void sub_1A5F2CD5C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(id, uint64_t))
{
  char *Strong;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  id v11;
  objc_super v12;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  v8 = *(_QWORD *)&Strong[OBJC_IVAR___AATracker_eventMirrorStore];
  swift_retain();
  swift_retain();

  v9 = (objc_class *)type metadata accessor for BridgedAccessTracker();
  v10 = (char *)objc_allocWithZone(v9);
  *(_QWORD *)&v10[OBJC_IVAR___AAAccessTracker_accessTracker] = a1;
  *(_QWORD *)&v10[OBJC_IVAR___AAAccessTracker_eventMirrorStore] = v8;
  v12.receiver = v10;
  v12.super_class = v9;
  v11 = objc_msgSendSuper2(&v12, sel_init);
  a4(v11, a2);

}

uint64_t BridgedTracker.removeSessionObservers(forObject:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1A85B8E10](*(_QWORD *)(v1 + OBJC_IVAR___AATracker_tracker) + 64);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(result + 48);
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = a1;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    sub_1A5EEC784(v5, (uint64_t)sub_1A5F2E758, v6);
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t BridgedTracker.transaction(block:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;

  v5 = *(_QWORD *)&v2[OBJC_IVAR___AATracker_tracker];
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  v7 = *(_QWORD *)(v5 + 80);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v5;
  v8[3] = sub_1A5F2E764;
  v8[4] = v6;
  v9 = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A5EEC784(v7, (uint64_t)sub_1A5EF1E00, (uint64_t)v8);
  swift_release();
  return swift_release();
}

uint64_t BridgedTracker.dynamicTransaction(identifier:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;

  v9 = *(_QWORD *)&v4[OBJC_IVAR___AATracker_tracker];
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v4;
  v10[3] = a3;
  v10[4] = a4;
  v11 = *(_QWORD *)(v9 + 80);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v9;
  v12[3] = a1;
  v12[4] = a2;
  v12[5] = sub_1A5F2ED48;
  v12[6] = v10;
  v13 = v4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5EEC784(v11, (uint64_t)sub_1A5F2E798, (uint64_t)v12);
  swift_release();
  return swift_release();
}

void sub_1A5F2D254(uint64_t a1, uint64_t a2, void (*a3)(id, uint64_t))
{
  uint64_t v5;
  objc_class *v6;
  char *v7;
  id v8;
  uint64_t v9;
  objc_super v10;

  v5 = *(_QWORD *)(a2 + OBJC_IVAR___AATracker_eventMirrorStore);
  v6 = (objc_class *)type metadata accessor for BridgedAccessTracker();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR___AAAccessTracker_accessTracker] = a1;
  *(_QWORD *)&v7[OBJC_IVAR___AAAccessTracker_eventMirrorStore] = v5;
  v10.receiver = v7;
  v10.super_class = v6;
  swift_retain();
  swift_retain();
  v8 = objc_msgSendSuper2(&v10, sel_init);
  a3(v8, v9);

}

uint64_t BridgedTracker.whenSession(block:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;

  v5 = *(_QWORD *)&v2[OBJC_IVAR___AATracker_tracker];
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = v2;
  v7 = *(_QWORD *)(v5 + 80);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v5;
  v8[3] = sub_1A5F2E7A0;
  v8[4] = v6;
  swift_retain();
  v9 = v2;
  swift_retain();
  swift_retain();
  sub_1A5EEC784(v7, (uint64_t)sub_1A5EF6A8C, (uint64_t)v8);
  swift_release();
  return swift_release();
}

uint64_t BridgedTracker.ifSession(block:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;

  v5 = *(_QWORD *)&v2[OBJC_IVAR___AATracker_tracker];
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = v2;
  v7 = *(_QWORD *)(v5 + 80);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v5;
  v8[3] = sub_1A5F2ED4C;
  v8[4] = v6;
  swift_retain();
  v9 = v2;
  swift_retain();
  swift_retain();
  sub_1A5EEC784(v7, (uint64_t)sub_1A5EF5EA4, (uint64_t)v8);
  swift_release();
  return swift_release();
}

void sub_1A5F2D6E0(uint64_t a1, void (*a2)(id, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  objc_class *v7;
  char *v8;
  id v9;
  uint64_t v10;
  objc_super v11;

  v6 = *(_QWORD *)(a4 + OBJC_IVAR___AATracker_eventMirrorStore);
  v7 = (objc_class *)type metadata accessor for BridgedAccessTracker();
  v8 = (char *)objc_allocWithZone(v7);
  *(_QWORD *)&v8[OBJC_IVAR___AAAccessTracker_accessTracker] = a1;
  *(_QWORD *)&v8[OBJC_IVAR___AAAccessTracker_eventMirrorStore] = v6;
  v11.receiver = v8;
  v11.super_class = v7;
  swift_retain();
  swift_retain();
  v9 = objc_msgSendSuper2(&v11, sel_init);
  a2(v9, v10);

}

Swift::Void __swiftcall BridgedTracker.enterGroup(groupName:)(Swift::String groupName)
{
  uint64_t v1;
  void *object;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t countAndFlagsBits;

  object = groupName._object;
  countAndFlagsBits = groupName._countAndFlagsBits;
  v3 = sub_1A5F63F08();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - v8;
  v10 = *(_QWORD *)(v1 + OBJC_IVAR___AATracker_tracker);
  sub_1A5F63EFC();
  v11 = *(_QWORD *)(v10 + 80);
  v17 = *(_QWORD *)(v10 + 88);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  v12 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v13 = (v5 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (char *)swift_allocObject();
  v15 = countAndFlagsBits;
  *((_QWORD *)v14 + 2) = v10;
  *((_QWORD *)v14 + 3) = v15;
  *((_QWORD *)v14 + 4) = object;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v14[v12], v6, v3);
  v16 = &v14[v13];
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A5EEC784(v11, (uint64_t)sub_1A5F2E7E4, (uint64_t)v14);
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t BridgedTracker.enterGroup(groupName:contentType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;

  v21 = a1;
  v22 = a3;
  v5 = sub_1A5F63F08();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v20 - v10;
  v12 = *(_QWORD *)(v3 + OBJC_IVAR___AATracker_tracker);
  sub_1A5F63EFC();
  v13 = *(_QWORD *)(v12 + 80);
  v20[1] = *(_QWORD *)(v12 + 88);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v14 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v15 = (v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (char *)swift_allocObject();
  v17 = v21;
  *((_QWORD *)v16 + 2) = v12;
  *((_QWORD *)v16 + 3) = v17;
  *((_QWORD *)v16 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v16[v14], v8, v5);
  v18 = &v16[v15];
  *(_QWORD *)v18 = v22;
  v18[8] = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A5EEC784(v13, (uint64_t)sub_1A5F2E7E4, (uint64_t)v16);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
}

Swift::Void __swiftcall BridgedTracker.enterGroup()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = sub_1A5F63F08();
  v1 = *(_QWORD *)(v24 - 8);
  v2 = *(_QWORD *)(v1 + 64);
  MEMORY[0x1E0C80A78](v24);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - v5;
  v7 = sub_1A5F63F2C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v0 + OBJC_IVAR___AATracker_tracker);
  sub_1A5F63F20();
  v12 = sub_1A5F63F14();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1A5F63EFC();
  v15 = *(_QWORD *)(v11 + 88);
  v22 = *(_QWORD *)(v11 + 80);
  v23 = v15;
  v16 = v24;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v24);
  v17 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v18 = (v2 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = v11;
  *((_QWORD *)v19 + 3) = v12;
  *((_QWORD *)v19 + 4) = v14;
  (*(void (**)(char *, char *, uint64_t))(v1 + 32))(&v19[v17], v3, v16);
  v20 = &v19[v18];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A5EEC784(v22, (uint64_t)sub_1A5F2E7E4, (uint64_t)v19);
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v16);
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall BridgedTracker.leaveGroup()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AATracker_tracker);
  v2 = *(_QWORD *)(v1 + 80);
  v3 = (_QWORD *)swift_allocObject();
  v3[3] = 0;
  v3[4] = 0;
  v3[2] = v1;
  swift_retain();
  sub_1A5EEC784(v2, (uint64_t)sub_1A5F2E8D8, (uint64_t)v3);
  swift_release();
}

Swift::Void __swiftcall BridgedTracker.suspend()()
{
  sub_1A5F2DF30((void (*)(_QWORD))MEMORY[0x1E0C82D28]);
}

Swift::Void __swiftcall BridgedTracker.resume()()
{
  sub_1A5F2DF30((void (*)(_QWORD))MEMORY[0x1E0C82D30]);
}

uint64_t sub_1A5F2DF30(void (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t result;

  result = MEMORY[0x1A85B8E10](*(_QWORD *)(v1 + OBJC_IVAR___AATracker_tracker) + 64);
  if (result)
  {
    a1(*(_QWORD *)(result + 56));
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1A5F2DF8C(char *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v6;
  char *v7;

  result = MEMORY[0x1A85B8E10](*(_QWORD *)&a1[OBJC_IVAR___AATracker_tracker] + 64);
  if (result)
  {
    v6 = *(_QWORD *)(result + 56);
    v7 = a1;
    a3(v6);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1A5F2E018()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F2E04C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A5F2E070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A5F63F08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F2E104()
{
  return sub_1A5F2E1B8((uint64_t (*)(_QWORD, _QWORD, _QWORD, unint64_t, _QWORD, _QWORD))sub_1A5F2A020);
}

uint64_t sub_1A5F2E110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A5F63F08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F2E1AC()
{
  return sub_1A5F2E1B8((uint64_t (*)(_QWORD, _QWORD, _QWORD, unint64_t, _QWORD, _QWORD))sub_1A5F2A928);
}

uint64_t sub_1A5F2E1B8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, unint64_t, _QWORD, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(sub_1A5F63F08() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), v1 + v3, *v4, v4[1]);
}

uint64_t sub_1A5F2E22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  if (a3)
    v10 = a2;
  else
    v10 = 0xD000000000000010;
  if (a3)
    v11 = a3;
  else
    v11 = 0x80000001A5F6EDC0;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1A5EC6A8C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = 0x8000000000000000;
  sub_1A5EC6808(a4, a5, a6 & 1, v10, v11, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a1 + 128) = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1A5F2E328()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A5EF6928();
  return swift_deallocObject();
}

uint64_t sub_1A5F2E360()
{
  uint64_t v0;

  return sub_1A5F2E22C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
}

uint64_t sub_1A5F2E374(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  _UNKNOWN **v34;

  v4 = v3;
  v8 = sub_1A5F64070();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v4[10] + OBJC_IVAR___AAAccessQueue_queue);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v9 + 104))(v12, *MEMORY[0x1E0DEF740], v8, v10);
  v14 = v13;
  LOBYTE(v13) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v12, v8);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  if (a2)
    v16 = a1;
  else
    v16 = 0xD000000000000010;
  if (a2)
    v17 = a2;
  else
    v17 = 0x80000001A5F6EDC0;
  swift_beginAccess();
  v18 = v4[15];
  if (!*(_QWORD *)(v18 + 16))
  {
    v34 = 0;
    v32 = 0u;
    v33 = 0u;
    swift_bridgeObjectRetain();
    if (*((_QWORD *)&v33 + 1))
      goto LABEL_15;
LABEL_12:
    swift_bridgeObjectRelease();
    result = sub_1A5ED4D44((uint64_t)&v32, (uint64_t (*)(_QWORD))sub_1A5F2EB8C);
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = sub_1A5EF11E8(v16, v17);
  if ((v20 & 1) != 0)
  {
    sub_1A5ECE02C(*(_QWORD *)(v18 + 56) + 40 * v19, (uint64_t)&v32);
  }
  else
  {
    v34 = 0;
    v32 = 0u;
    v33 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v33 + 1))
    goto LABEL_12;
LABEL_15:
  sub_1A5F2EBE0();
  sub_1A5EC7440(0, (unint64_t *)&qword_1ED1CC9A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for DataEventStack);
  v22 = v21;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v23 = v31;
    if (*(_QWORD *)(v29 + 16))
    {
      v28 = v16;
      v24 = a1;
      v25 = a3;
      v26 = v30;
      swift_bridgeObjectRelease();
      v34 = &off_1E4FD1350;
      *(_QWORD *)&v32 = MEMORY[0x1E0DEE9D8];
      *((_QWORD *)&v32 + 1) = v26;
      a3 = v25;
      a1 = v24;
      *(_QWORD *)&v33 = v23;
      *((_QWORD *)&v33 + 1) = v22;
      swift_beginAccess();
      sub_1A5EF0D60((uint64_t)&v32, v28, v17);
      result = swift_endAccess();
      goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = swift_bridgeObjectRelease();
LABEL_21:
  if ((a3 & 1) != 0)
  {
    if (v4[17])
      return sub_1A5F2E374(a1, a2, 1);
  }
  return result;
}

uint64_t sub_1A5F2E638()
{
  uint64_t v0;

  swift_release();
  sub_1A5EF6A20(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5F2E67C()
{
  return objectdestroy_116Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1A5F2E690()
{
  return objectdestroy_116Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1A5F2E6A0()
{
  return objectdestroy_116Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1A5F2E6B0()
{
  return objectdestroy_116Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1A5F2E6C0()
{
  uint64_t v0;

  return sub_1A5F2E374(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_1A5F2E6EC()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A5F2E710()
{
  return objectdestroy_116Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1A5F2E720(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A5F2CD5C(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(id, uint64_t))(v2 + 24));
}

uint64_t sub_1A5F2E72C()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5F2E758()
{
  uint64_t v0;

  return sub_1A5F11754(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1A5F2E764(uint64_t a1)
{
  uint64_t v1;

  sub_1A5F2D254(a1, *(_QWORD *)(v1 + 16), *(void (**)(id, uint64_t))(v1 + 24));
}

uint64_t sub_1A5F2E780()
{
  return objectdestroy_116Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1A5F2E7A0(uint64_t a1)
{
  uint64_t v1;

  sub_1A5F2D6E0(a1, *(void (**)(id, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1A5F2E7BC()
{
  return objectdestroy_116Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1A5F2E7D0()
{
  return objectdestroy_116Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_163Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A5F63F08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1A5F2E878()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  char *v3;

  v1 = *(_QWORD *)(sub_1A5F63F08() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (char *)v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_1A5F370A8(v0[2], v0[3], v0[4], (uint64_t)v0 + v2, *(_QWORD *)v3, v3[8]);
}

uint64_t sub_1A5F2E8C8()
{
  return objectdestroy_116Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1A5F2E8D8()
{
  uint64_t *v0;

  return sub_1A5F37490(v0[2], v0[3], v0[4]);
}

uint64_t method lookup function for BridgedTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BridgedTracker.swiftTracker.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t sub_1A5F2E90C()
{
  return objectdestroy_116Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1A5F2E91C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A5F2E940()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1A5F2E954()
{
  return objectdestroy_116Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_151Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A5F2E994()
{
  return objectdestroy_116Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_148Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F2E9E0()
{
  uint64_t v0;

  return sub_1A5F36DC0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40));
}

uint64_t objectdestroy_139Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F2EA20()
{
  return objectdestroy_116Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1A5F2EA30()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1A5F2EA44()
{
  return objectdestroy_116Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

id sub_1A5F2EA54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A5F2C584(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1A5F2EA60()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_1A5F63F08() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1A5F1CF64(*(char **)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + v2, *(unsigned __int8 *)(v0 + v2 + *(_QWORD *)(v1 + 64)));
}

id sub_1A5F2EAB0(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  char *v10;
  objc_super v12;

  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  type metadata accessor for BridgedEventMirrorStore();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = MEMORY[0x1E0DEE9E0];
  v5 = (objc_class *)type metadata accessor for BridgedTracker();
  v6 = (char *)objc_allocWithZone(v5);
  v7 = 0x6E6564646968;
  if (v2)
    v7 = v3;
  v8 = 0xE600000000000000;
  if (v2)
    v8 = v2;
  v9 = (uint64_t *)&v6[OBJC_IVAR___AATracker_name];
  *v9 = v7;
  v9[1] = v8;
  *(_QWORD *)&v6[OBJC_IVAR___AATracker_tracker] = a1;
  *(_QWORD *)&v6[OBJC_IVAR___AATracker_eventMirrorStore] = v4;
  v10 = &v6[OBJC_IVAR___AATracker_identifier];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v12.receiver = v6;
  v12.super_class = v5;
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v12, sel_init);
}

void sub_1A5F2EB8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CE4D8)
  {
    sub_1A5F2EBE0();
    v0 = sub_1A5F64568();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CE4D8);
  }
}

unint64_t sub_1A5F2EBE0()
{
  unint64_t result;

  result = qword_1ED1CE4D0;
  if (!qword_1ED1CE4D0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1CE4D0);
  }
  return result;
}

void sub_1A5F2EC34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *, _UNKNOWN **))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for BridgedEvent, &off_1E4FCF2A0);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1A5F2EC88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5F2EC34(0, (unint64_t *)&unk_1ED1CB9B0, (uint64_t (*)(_QWORD, ValueMetadata *, _UNKNOWN **))type metadata accessor for EventSubmitResult);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5F2ECDC(uint64_t a1)
{
  uint64_t v2;

  sub_1A5F2EC34(0, &qword_1ED1CC198, (uint64_t (*)(_QWORD, ValueMetadata *, _UNKNOWN **))type metadata accessor for ProcessEvent);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A5F2ED28(uint64_t a1)
{
  uint64_t v1;

  sub_1A5F2BA74(a1, *(void (**)(_QWORD, id))(v1 + 16));
}

uint64_t assignWithCopy for SessionGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SessionGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionGroup(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SessionGroup(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_1A5F2EFB0(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t BridgedTimedData.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5F2F030(&OBJC_IVAR___AATimedData_startDate, a1);
}

uint64_t BridgedTimedData.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5F2F030(&OBJC_IVAR___AATimedData_endDate, a1);
}

uint64_t sub_1A5F2F030@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *a1;
  v5 = sub_1A5F63F08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

double BridgedTimedData.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___AATimedData_duration);
}

uint64_t static BridgedTimedData.dataName.getter()
{
  return 0x74614464656D6954;
}

void sub_1A5F2F0D8()
{
  sub_1A5F6470C();
  __break(1u);
}

id BridgedTimedData.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BridgedTimedData.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BridgedTimedData.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BridgedTimedData();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BridgedTimedData()
{
  uint64_t result;

  result = qword_1ED1CC9E0;
  if (!qword_1ED1CC9E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5F2F2E4()
{
  return type metadata accessor for BridgedTimedData();
}

uint64_t sub_1A5F2F2EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63F08();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BridgedTimedData()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BridgedTimedData.toDict()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

id sub_1A5F2F390()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  objc_class *v15;
  char *v16;
  char *v17;
  char *v18;
  unint64_t v19;
  id v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_super v26;

  v1 = sub_1A5F63F08();
  v2 = *(_QWORD *)(v1 - 8);
  v25 = v2;
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0[4];
  v6 = v0[5];
  if (v6 >= 3)
    v7 = 3;
  else
    v7 = v0[5];
  if (v6 >= 3)
    v8 = v0[4];
  else
    v8 = 0;
  v24 = v8;
  if (v6 >= 3)
    v9 = v6;
  else
    v9 = 0;
  v22 = v7;
  v23 = v9;
  v11 = *v0;
  v10 = v0[1];
  v12 = type metadata accessor for Session();
  v13 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v13(v4, (char *)v0 + *(int *)(v12 + 28), v1);
  v14 = *(uint64_t *)((char *)v0 + *(int *)(v12 + 32));
  v15 = (objc_class *)type metadata accessor for BridgedSession();
  v16 = (char *)objc_allocWithZone(v15);
  v17 = &v16[OBJC_IVAR___AASession_identifier];
  *(_QWORD *)v17 = v11;
  *((_QWORD *)v17 + 1) = v10;
  *(_QWORD *)&v16[OBJC_IVAR___AASession_kind] = v22;
  v18 = &v16[OBJC_IVAR___AASession_name];
  v19 = v23;
  *(_QWORD *)v18 = v24;
  *((_QWORD *)v18 + 1) = v19;
  v13(&v16[OBJC_IVAR___AASession_startDate], v4, v1);
  *(_QWORD *)&v16[OBJC_IVAR___AASession_sessionData] = v14;
  sub_1A5EF3C30(v5, v6);
  v26.receiver = v16;
  v26.super_class = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = objc_msgSendSuper2(&v26, sel_init);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v1);
  return v20;
}

uint64_t Session.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Session.appSessionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Session.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  *a1 = v2;
  a1[1] = v3;
  return sub_1A5EF3C30(v2, v3);
}

uint64_t Session.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Session() + 28);
  v4 = sub_1A5F63F08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Session.sessionData.getter()
{
  type metadata accessor for Session();
  return swift_bridgeObjectRetain();
}

uint64_t _s12AppAnalytics7SessionV4KindO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      v3 = 0;
      v6 = 1;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v3 == 1)
  {
    if (v5 == 1)
    {
      v3 = 1;
      v6 = 1;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v3 != 2)
  {
    if (v5 >= 3)
    {
      if (v2 == v4 && v3 == v5)
        v6 = 1;
      else
        v6 = sub_1A5F64880();
      goto LABEL_12;
    }
LABEL_11:
    v6 = 0;
LABEL_12:
    sub_1A5EF3C30(v4, v5);
    sub_1A5EF3C30(v2, v3);
    goto LABEL_13;
  }
  if (v5 != 2)
    goto LABEL_11;
  v6 = 1;
  v3 = 2;
LABEL_13:
  sub_1A5EC1090(v2, v3);
  sub_1A5EC1090(v4, v5);
  return v6 & 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for Session(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2 + 4;
    v10 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 >= 3)
    {
      a1[4] = *v9;
      a1[5] = v10;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)a1 + 2) = *(_OWORD *)v9;
    }
    v12 = *(int *)(a3 + 28);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1A5F63F08();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 32));
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for Session(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a2[5];
  if (a1[5] >= 3uLL)
  {
    if (v6 >= 3)
    {
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1A5F2F918((uint64_t)(a1 + 4));
    goto LABEL_6;
  }
  if (v6 < 3)
  {
LABEL_6:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    goto LABEL_8;
  }
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
LABEL_8:
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A5F63F08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A5F2F918(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEA968] - 8) + 8))();
  return a1;
}

_OWORD *initializeWithTake for Session(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A5F63F08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_1A5F2F9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1A5F63F08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_1A5F2FA48(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1A5F63F08();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A5F2FAC0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for Session.Kind(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Session.Kind(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Session.Kind(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Session.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

void sub_1A5F2FCB4(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1A5EC8554(a1, a2);
  if (v2)
    swift_allocError();
}

void sub_1A5F2FCEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EE80D130)
  {
    sub_1A5EE2EE8(255, &qword_1ED1CE0B0);
    v0 = sub_1A5F64568();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EE80D130);
  }
}

uint64_t SnapshotEntry.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SnapshotEntry.dataEntry.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A5F2FD88(v1 + 16, a1);
}

uint64_t sub_1A5F2FD88(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AnyDataEventEntry(a2, a1);
  return a2;
}

uint64_t destroy for SnapshotEntry(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 32);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SnapshotEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a2 + 32;
  v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(a1 + 32, v6, v8);
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SnapshotEntry(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 4, a2 + 4);
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for SnapshotEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 32);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for SnapshotEntry(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SnapshotEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SnapshotEntry()
{
  return &type metadata for SnapshotEntry;
}

id BridgedRawEvent.__allocating_init(name:properties:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  objc_super v14;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = &v7[OBJC_IVAR___AARawEvent_name];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  *(_QWORD *)&v7[OBJC_IVAR___AARawEvent_properties] = a3;
  v9 = qword_1ED1CC1A8;
  v10 = v7;
  if (v9 != -1)
    swift_once();
  v11 = (void *)qword_1ED1CC1A0;
  *(_QWORD *)&v10[OBJC_IVAR___AARawEvent_sessionGroup] = qword_1ED1CC1A0;
  *(_QWORD *)&v10[OBJC_IVAR___AARawEvent_timestampGranularity] = 0;
  v12 = v11;

  v14.receiver = v10;
  v14.super_class = v3;
  return objc_msgSendSuper2(&v14, sel_init);
}

id BridgedRawEvent.init(name:properties:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = &v3[OBJC_IVAR___AARawEvent_name];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  *(_QWORD *)&v3[OBJC_IVAR___AARawEvent_properties] = a3;
  v9 = qword_1ED1CC1A8;
  v10 = v3;
  if (v9 != -1)
    swift_once();
  v11 = (void *)qword_1ED1CC1A0;
  *(_QWORD *)&v10[OBJC_IVAR___AARawEvent_sessionGroup] = qword_1ED1CC1A0;
  *(_QWORD *)&v10[OBJC_IVAR___AARawEvent_timestampGranularity] = 0;
  v12 = v11;

  v14.receiver = v10;
  v14.super_class = ObjectType;
  return objc_msgSendSuper2(&v14, sel_init);
}

id BridgedRawEvent.__allocating_init(name:sessionGroup:timestampGranularity:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  char *v11;
  char *v12;
  objc_super v14;

  v11 = (char *)objc_allocWithZone(v5);
  v12 = &v11[OBJC_IVAR___AARawEvent_name];
  *(_QWORD *)v12 = a1;
  *((_QWORD *)v12 + 1) = a2;
  *(_QWORD *)&v11[OBJC_IVAR___AARawEvent_properties] = a5;
  *(_QWORD *)&v11[OBJC_IVAR___AARawEvent_sessionGroup] = a3;
  *(_QWORD *)&v11[OBJC_IVAR___AARawEvent_timestampGranularity] = a4;
  v14.receiver = v11;
  v14.super_class = v5;
  return objc_msgSendSuper2(&v14, sel_init);
}

id BridgedRawEvent.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BridgedRawEvent.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BridgedRawEvent.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for BridgedRawEvent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BridgedRawEvent.__allocating_init(name:properties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of BridgedRawEvent.__allocating_init(name:sessionGroup:timestampGranularity:properties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void (**sub_1A5F3057C(char *a1))(uint64_t a1, uint64_t a2)
{
  return sub_1A5EF5818(*a1, 0.0);
}

uint64_t DataEventType.toDict(timestampGranularity:)(char *a1, uint64_t a2, uint64_t a3)
{
  char v4;

  v4 = *a1;
  return (*(uint64_t (**)(char *, double))(a3 + 32))(&v4, 0.0);
}

void (**sub_1A5F305C8(char a1, double a2))(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  unsigned __int8 v19;
  void *v20;
  _QWORD *v21;
  void (***v22)(uint64_t, uint64_t);
  void (**v23)(uint64_t, uint64_t);
  id v24[4];
  _BYTE v25[32];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v5 = sub_1A5F63BC0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (void (**)(uint64_t, uint64_t))((char *)&v24[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A5F63BF0();
  swift_allocObject();
  sub_1A5F63BE4();
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = a1;
  *(double *)(v9 + 24) = a2;
  *v8 = sub_1A5ECDAAC;
  v8[1] = (void (*)(uint64_t, uint64_t))v9;
  (*(void (**)(void (**)(uint64_t, uint64_t), _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CAE148], v5);
  sub_1A5F63BCC();
  type metadata accessor for SummaryEventData();
  sub_1A5ECC4D8(&qword_1ED1CC960, (uint64_t (*)(uint64_t))type metadata accessor for SummaryEventData, (uint64_t)&unk_1A5F6B5D4);
  v10 = sub_1A5F63BD8();
  if (!v2)
  {
    v13 = v10;
    v14 = v11;
    v15 = (void *)objc_opt_self();
    v16 = (void *)sub_1A5F63E24();
    v24[0] = 0;
    v8 = (void (**)(uint64_t, uint64_t))objc_msgSend(v15, sel_JSONObjectWithData_options_error_, v16, 0, v24);

    v17 = v24[0];
    if (v8)
    {
      sub_1A5F645C8();
      swift_unknownObjectRelease();
      sub_1A5EF30B0((uint64_t)v25, (uint64_t)v24);
      sub_1A5EF08A0();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v8 = v23;
        v18 = (void *)sub_1A5F640A0();
        v19 = objc_msgSend(v15, sel_isValidJSONObject_, v18);

        if ((v19 & 1) != 0)
        {
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
          sub_1A5EF0908(v13, v14);
          swift_release();
          return v8;
        }
        sub_1A5F08EC0();
        swift_allocError();
        *v22 = v8;
      }
      else
      {
        sub_1A5F08EC0();
        swift_allocError();
        *v21 = 0;
      }
      swift_willThrow();
      sub_1A5EF0908(v13, v14);
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
      return v8;
    }
    v20 = v17;
    sub_1A5F63CE0();

    swift_willThrow();
    sub_1A5EF0908(v13, v14);
  }
  swift_release();
  return v8;
}

id sub_1A5F308F0(id a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (**v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  unsigned __int8 v25;
  void *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD v29[5];
  id v30[4];
  _BYTE v31[32];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v11 = sub_1A5F63BC0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (void (**)(uint64_t, uint64_t))((char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29[2] = a2;
  v29[3] = a3;
  v29[4] = a4;
  sub_1A5F63BF0();
  swift_allocObject();
  sub_1A5F63BE4();
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = (_BYTE)a1;
  *(double *)(v15 + 24) = a5;
  *v14 = sub_1A5ECDAAC;
  v14[1] = (void (*)(uint64_t, uint64_t))v15;
  (*(void (**)(void (**)(uint64_t, uint64_t), _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0CAE148], v11);
  sub_1A5F63BCC();
  sub_1A5F31AF0();
  v16 = sub_1A5F63BD8();
  if (!v5)
  {
    v19 = v16;
    v20 = v17;
    v21 = (void *)objc_opt_self();
    v22 = (void *)sub_1A5F63E24();
    v30[0] = 0;
    a1 = objc_msgSend(v21, sel_JSONObjectWithData_options_error_, v22, 0, v30);

    v23 = v30[0];
    if (a1)
    {
      sub_1A5F645C8();
      swift_unknownObjectRelease();
      sub_1A5EF30B0((uint64_t)v31, (uint64_t)v30);
      sub_1A5EF08A0();
      if ((swift_dynamicCast() & 1) != 0)
      {
        a1 = (id)v29[1];
        v24 = (void *)sub_1A5F640A0();
        v25 = objc_msgSend(v21, sel_isValidJSONObject_, v24);

        if ((v25 & 1) != 0)
        {
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
          sub_1A5EF0908(v19, v20);
          swift_release();
          return a1;
        }
        sub_1A5F08EC0();
        swift_allocError();
        *v28 = a1;
      }
      else
      {
        sub_1A5F08EC0();
        swift_allocError();
        *v27 = 0;
      }
      swift_willThrow();
      sub_1A5EF0908(v19, v20);
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
      return a1;
    }
    v26 = v23;
    sub_1A5F63CE0();

    swift_willThrow();
    sub_1A5EF0908(v19, v20);
  }
  swift_release();
  return a1;
}

void (**sub_1A5F30C08(char a1, double a2))(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  unsigned __int8 v19;
  void *v20;
  _QWORD *v21;
  void (***v22)(uint64_t, uint64_t);
  void (**v23)(uint64_t, uint64_t);
  id v24[4];
  _BYTE v25[32];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v5 = sub_1A5F63BC0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (void (**)(uint64_t, uint64_t))((char *)&v24[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A5F63BF0();
  swift_allocObject();
  sub_1A5F63BE4();
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = a1;
  *(double *)(v9 + 24) = a2;
  *v8 = sub_1A5ECDAAC;
  v8[1] = (void (*)(uint64_t, uint64_t))v9;
  (*(void (**)(void (**)(uint64_t, uint64_t), _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CAE148], v5);
  sub_1A5F63BCC();
  type metadata accessor for SummaryEventMetaData();
  sub_1A5ECC4D8(&qword_1EE80D160, (uint64_t (*)(uint64_t))type metadata accessor for SummaryEventMetaData, (uint64_t)&unk_1A5F6C948);
  v10 = sub_1A5F63BD8();
  if (!v2)
  {
    v13 = v10;
    v14 = v11;
    v15 = (void *)objc_opt_self();
    v16 = (void *)sub_1A5F63E24();
    v24[0] = 0;
    v8 = (void (**)(uint64_t, uint64_t))objc_msgSend(v15, sel_JSONObjectWithData_options_error_, v16, 0, v24);

    v17 = v24[0];
    if (v8)
    {
      sub_1A5F645C8();
      swift_unknownObjectRelease();
      sub_1A5EF30B0((uint64_t)v25, (uint64_t)v24);
      sub_1A5EF08A0();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v8 = v23;
        v18 = (void *)sub_1A5F640A0();
        v19 = objc_msgSend(v15, sel_isValidJSONObject_, v18);

        if ((v19 & 1) != 0)
        {
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
          sub_1A5EF0908(v13, v14);
          swift_release();
          return v8;
        }
        sub_1A5F08EC0();
        swift_allocError();
        *v22 = v8;
      }
      else
      {
        sub_1A5F08EC0();
        swift_allocError();
        *v21 = 0;
      }
      swift_willThrow();
      sub_1A5EF0908(v13, v14);
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
      return v8;
    }
    v20 = v17;
    sub_1A5F63CE0();

    swift_willThrow();
    sub_1A5EF0908(v13, v14);
  }
  swift_release();
  return v8;
}

uint64_t sub_1A5F30F30(char *a1, uint64_t a2, uint64_t a3)
{
  return DataEventType.toDict(timestampGranularity:)(a1, a2, a3);
}

_QWORD *sub_1A5F30F44(char *a1, double a2)
{
  return DataEventType.toDict(timestampConfiguration:)(a1, a2);
}

uint64_t sub_1A5F30F6C()
{
  return swift_deallocObject();
}

void (**sub_1A5F30F7C(char *a1))(uint64_t a1, uint64_t a2)
{
  return sub_1A5F305C8(*a1, 0.0);
}

void (**sub_1A5F30F98(char *a1, double a2))(uint64_t a1, uint64_t a2)
{
  return sub_1A5F305C8(*a1, a2);
}

id sub_1A5F30FB0(unsigned __int8 *a1)
{
  uint64_t *v1;

  return sub_1A5F308F0((id)*a1, *v1, v1[1], v1[2], 0.0);
}

id sub_1A5F30FD4(unsigned __int8 *a1, double a2)
{
  uint64_t *v2;

  return sub_1A5F308F0((id)*a1, *v2, v2[1], v2[2], a2);
}

void (**sub_1A5F30FF4(char *a1))(uint64_t a1, uint64_t a2)
{
  return sub_1A5EF6600(*a1, 0.0);
}

_QWORD *sub_1A5F31010()
{
  id *v0;
  char v2;

  return sub_1A5EC7B68((int)&v2, *v0);
}

void (**sub_1A5F31034(char *a1))(uint64_t a1, uint64_t a2)
{
  return sub_1A5F30C08(*a1, 0.0);
}

void (**sub_1A5F31050(char *a1, double a2))(uint64_t a1, uint64_t a2)
{
  return sub_1A5F30C08(*a1, a2);
}

uint64_t dispatch thunk of DataEventType.toDict(timestampGranularity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of DataEventType.toDict(timestampConfiguration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t *sub_1A5F31098(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 <= v6)
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x1000F8) != 0 || v7 + 1 > 0x18)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v11 = *((unsigned __int8 *)a2 + v7);
    if (v11 >= 2)
    {
      if (v7 <= 3)
        v12 = v7;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    if (v11 == 1)
    {
      v13 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      v14 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v13 = *v14;
      v13[1] = v14[1];
      *((_BYTE *)v4 + v7) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_BYTE *)v4 + v7) = 0;
    }
  }
  return v4;
}

uint64_t sub_1A5F311F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 <= v7)
      v8 = *(_QWORD *)(v6 + 64);
    else
      v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    v9 = *(unsigned __int8 *)(a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X11 }
    }
    (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    if (v9 == 1)
      swift_bridgeObjectRelease();
    v11 = *(unsigned __int8 *)(a2 + v8);
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X11 }
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
    if (v11 == 1)
    {
      v13 = (_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      v14 = (_QWORD *)((a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v13 = *v14;
      v13[1] = v14[1];
      *(_BYTE *)(a1 + v8) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_BYTE *)(a1 + v8) = 0;
    }
  }
  return a1;
}

uint64_t sub_1A5F313B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;
  char v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 <= v6)
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X12 }
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a1, a2);
  if (v8 == 1)
  {
    *(_OWORD *)((a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v10 = 1;
  }
  else
  {
    v10 = 0;
  }
  *(_BYTE *)(a1 + v7) = v10;
  return a1;
}

uint64_t sub_1A5F314C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    if (((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 <= v7)
      v8 = *(_QWORD *)(v6 + 64);
    else
      v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    v9 = *(unsigned __int8 *)(a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X11 }
    }
    (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    if (v9 == 1)
      swift_bridgeObjectRelease();
    v11 = *(unsigned __int8 *)(a2 + v8);
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X11 }
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
    if (v11 == 1)
    {
      *(_OWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      v13 = 1;
    }
    else
    {
      v13 = 0;
    }
    *(_BYTE *)(a1 + v8) = v13;
  }
  return a1;
}

uint64_t sub_1A5F31680(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  int v7;
  unsigned int v9;
  int v10;
  unsigned int v11;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  v4 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v4 <= v3)
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v5 = v4 + 1;
  v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      v7 = *(_DWORD *)(a1 + v5);
      if (!v7)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      v7 = *(unsigned __int16 *)(a1 + v5);
      if (!*(_WORD *)(a1 + v5))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_21:
      v11 = *(unsigned __int8 *)(a1 + v4);
      if (v11 >= 2)
        return (v11 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v7 = *(unsigned __int8 *)(a1 + v5);
  if (!*(_BYTE *)(a1 + v5))
    goto LABEL_21;
LABEL_14:
  v10 = (v7 - 1) << v6;
  if (v5 > 3)
    v10 = 0;
  if (!(_DWORD)v5)
    return (v10 + 255);
  if (v5 > 3)
    LODWORD(v5) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A5F3174C + 4 * byte_1A5F691F0[(v5 - 1)]))();
}

void sub_1A5F31798(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > v5)
    v5 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1A5F31948(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  v3 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v3 <= v2)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v3) < 2u)
    return *(unsigned __int8 *)(a1 + v3);
  if (v3 <= 3)
    v4 = v3;
  else
    v4 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A5F31998 + 4 * byte_1A5F691FE[v4]))();
}

void sub_1A5F319E0(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4;
  size_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 <= v4)
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  else
    v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (a2 > 1)
  {
    v6 = a2 - 2;
    if (v5 < 4)
    {
      v7 = v6 >> (8 * v5);
      v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 2;
      bzero(a1, v5);
      if ((_DWORD)v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if ((_DWORD)v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 2;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t sub_1A5F31AB0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5F31AC0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5F31AD0()
{
  return swift_deallocObject();
}

uint64_t sub_1A5F31AE0()
{
  return swift_deallocObject();
}

unint64_t sub_1A5F31AF0()
{
  unint64_t result;

  result = qword_1EE80D158;
  if (!qword_1EE80D158)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F6B8A8, &type metadata for SummaryEventDataItem);
    atomic_store(result, (unint64_t *)&qword_1EE80D158);
  }
  return result;
}

uint64_t sub_1A5F31B34()
{
  return swift_deallocObject();
}

uint64_t Endpoint.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___AAEndpoint_url;
  v4 = sub_1A5F63DD0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Endpoint.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AAEndpoint_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Endpoint.sharedContainerIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AAEndpoint_sharedContainerIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

id Endpoint.__allocating_init(url:name:sharedContainerIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  id v17;
  objc_super v19;

  v11 = (char *)objc_allocWithZone(v5);
  v12 = &v11[OBJC_IVAR___AAEndpoint_url];
  v13 = sub_1A5F63DD0();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  v15 = &v11[OBJC_IVAR___AAEndpoint_name];
  *(_QWORD *)v15 = a2;
  *((_QWORD *)v15 + 1) = a3;
  v16 = &v11[OBJC_IVAR___AAEndpoint_sharedContainerIdentifier];
  *(_QWORD *)v16 = a4;
  *((_QWORD *)v16 + 1) = a5;
  v19.receiver = v11;
  v19.super_class = v5;
  v17 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  return v17;
}

id Endpoint.init(url:name:sharedContainerIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  objc_class *ObjectType;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  id v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType();
  v12 = &v5[OBJC_IVAR___AAEndpoint_url];
  v13 = sub_1A5F63DD0();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  v15 = &v5[OBJC_IVAR___AAEndpoint_name];
  *(_QWORD *)v15 = a2;
  *((_QWORD *)v15 + 1) = a3;
  v16 = &v5[OBJC_IVAR___AAEndpoint_sharedContainerIdentifier];
  *(_QWORD *)v16 = a4;
  *((_QWORD *)v16 + 1) = a5;
  v19.receiver = v5;
  v19.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  return v17;
}

id Endpoint.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void Endpoint.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id Endpoint.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A5F320C4()
{
  return type metadata accessor for Endpoint();
}

uint64_t type metadata accessor for Endpoint()
{
  uint64_t result;

  result = qword_1ED1CB6B8;
  if (!qword_1ED1CB6B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5F32108()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63DD0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for Endpoint()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Endpoint.__allocating_init(url:name:sharedContainerIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void *ResourceType.toData()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  unsigned int v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v19[2];

  v19[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (*(uint64_t (**)(void))(a2 + 32))();
  if (!v2)
  {
    v5 = v4;
    v6 = (void *)objc_opt_self();
    v3 = (void *)MEMORY[0x1E0DEA968];
    v7 = (void *)sub_1A5F640A0();
    v8 = objc_msgSend(v6, sel_isValidJSONObject_, v7);

    if (v8)
    {
      v9 = (void *)sub_1A5F640A0();
      swift_bridgeObjectRelease();
      v19[0] = 0;
      v10 = objc_msgSend(v6, sel_dataWithJSONObject_options_error_, v9, 0, v19);

      v11 = v19[0];
      if (v10)
      {
        v3 = (void *)sub_1A5F63E3C();

        return v3;
      }
      v3 = v11;
      sub_1A5F63CE0();

    }
    else
    {
      if (qword_1ED1CFC08 != -1)
        swift_once();
      v12 = (id)qword_1ED1CE7B0;
      sub_1A5F64448();
      sub_1A5EDD448();
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1A5F679D0;
      v14 = sub_1A5F640C4();
      v16 = v15;
      *(_QWORD *)(v13 + 56) = v3;
      *(_QWORD *)(v13 + 64) = sub_1A5EE19C8();
      *(_QWORD *)(v13 + 32) = v14;
      *(_QWORD *)(v13 + 40) = v16;
      sub_1A5F63F80();

      swift_bridgeObjectRelease();
      sub_1A5F275F0();
      swift_allocError();
      *(_QWORD *)v17 = v5;
      *(_BYTE *)(v17 + 8) = 0;
    }
    swift_willThrow();
  }
  return v3;
}

uint64_t dispatch thunk of static ResourceType.version.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ResourceType.version.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ResourceType.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ResourceType.toJSONObject()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t initializeBufferWithCopyOfBuffer for ResourceError(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ResourceError(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ResourceError(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UploadEndpoint.Wrapper(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UploadEndpoint.Wrapper(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A5F32574(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1A5F3257C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ResourceError()
{
  return &type metadata for ResourceError;
}

uint64_t UploadBatchQueueKey.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
  {
    sub_1A5F6491C();
    sub_1A5F6419C();
  }
  else
  {
    sub_1A5F6491C();
  }
  return sub_1A5F6419C();
}

uint64_t UploadBatchQueueKey.hashValue.getter()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 32);
  sub_1A5F64910();
  sub_1A5F6491C();
  if ((v1 & 1) != 0)
    sub_1A5F6419C();
  sub_1A5F6419C();
  return sub_1A5F64928();
}

uint64_t sub_1A5F326BC()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 32);
  sub_1A5F64910();
  sub_1A5F6491C();
  if ((v1 & 1) != 0)
    sub_1A5F6419C();
  sub_1A5F6419C();
  return sub_1A5F64928();
}

uint64_t sub_1A5F32758()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
  {
    sub_1A5F6491C();
    sub_1A5F6419C();
  }
  else
  {
    sub_1A5F6491C();
  }
  return sub_1A5F6419C();
}

uint64_t sub_1A5F327D8()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 32);
  sub_1A5F64910();
  sub_1A5F6491C();
  if ((v1 & 1) != 0)
    sub_1A5F6419C();
  sub_1A5F6419C();
  return sub_1A5F64928();
}

uint64_t _s12AppAnalytics19UploadBatchQueueKeyO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v25;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_BYTE *)(a1 + 32);
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v11 = *(_BYTE *)(a2 + 32);
  if ((v6 & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) != 0)
    {
      if (v2 != v7 || v3 != v8)
      {
        v13 = *(_QWORD *)(a2 + 24);
        v14 = sub_1A5F64880();
        v9 = v13;
        if ((v14 & 1) == 0)
        {
          v16 = v4;
          v25 = 0;
          goto LABEL_24;
        }
      }
      if (v4 != v10 || v5 != v9)
      {
        v16 = v4;
        v17 = v10;
        v18 = v9;
        v19 = sub_1A5F64880();
        v9 = v18;
        v10 = v17;
        v25 = v19;
LABEL_24:
        v11 = 1;
        v6 = 1;
        goto LABEL_25;
      }
      v16 = v4;
      v11 = 1;
      v6 = 1;
      goto LABEL_22;
    }
    goto LABEL_14;
  }
  if ((*(_BYTE *)(a2 + 32) & 1) != 0)
  {
LABEL_14:
    v16 = *(_QWORD *)(a1 + 16);
    v25 = 0;
    goto LABEL_25;
  }
  v16 = *(_QWORD *)(a1 + 16);
  if (v2 == v7 && v3 == v8)
  {
    v11 = 0;
    v6 = 0;
LABEL_22:
    v25 = 1;
    goto LABEL_25;
  }
  v21 = *(_QWORD *)(a2 + 24);
  v22 = sub_1A5F64880();
  v9 = v21;
  v25 = v22;
  v11 = 0;
  v6 = 0;
LABEL_25:
  v23 = v9;
  sub_1A5EDF730(v7, v8, v10, v9, v11);
  sub_1A5EDF730(v2, v3, v16, v5, v6);
  sub_1A5EDF6F4(v2, v3, v16, v5, v6);
  sub_1A5EDF6F4(v7, v8, v10, v23, v11);
  return v25 & 1;
}

uint64_t destroy for UploadBatchQueueKey(uint64_t a1)
{
  return sub_1A5EDF6F4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for UploadBatchQueueKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A5EDF730(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for UploadBatchQueueKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A5EDF730(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_1A5EDF6F4(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for UploadBatchQueueKey(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v3;
  sub_1A5EDF6F4(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for UploadBatchQueueKey(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UploadBatchQueueKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A5F32BF0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1A5F32BF8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for UploadBatchQueueKey()
{
  return &type metadata for UploadBatchQueueKey;
}

uint64_t sub_1A5F32C18(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;

  v11 = *(_QWORD *)(v5 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a4;
  *(_QWORD *)(v12 + 24) = a5;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = a1;
  *(_QWORD *)(v12 + 48) = a2;
  *(_BYTE *)(v12 + 56) = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5EEC784(v11, (uint64_t)sub_1A5F3A878, v12);
  return swift_release();
}

uint64_t Tracker.debugPath.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _QWORD *v5;

  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_retain();
  while (1)
  {
    v1 = swift_retain();
    v2 = sub_1A5F35E3C(v1, &v5);
    swift_release();
    v3 = *(_QWORD *)(v0 + 136);
    swift_retain();
    swift_release();
    if (!v3)
      break;
    v0 = v3;
    if ((v2 & 1) == 0)
    {
      swift_release();
      return sub_1A5EDB0CC((uint64_t)v5);
    }
  }
  return sub_1A5EDB0CC((uint64_t)v5);
}

uint64_t Tracker.removeSessionObservers(forObject:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1A85B8E10](v1 + 64);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(result + 48);
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = a1;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    sub_1A5EEC784(v5, (uint64_t)sub_1A5F2E758, v6);
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t Tracker.dynamicTransaction(identifier:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  _QWORD *v10;

  v9 = *(_QWORD *)(v4 + 80);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v4;
  v10[3] = a1;
  v10[4] = a2;
  v10[5] = a3;
  v10[6] = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5EEC784(v9, (uint64_t)sub_1A5F2E9E0, (uint64_t)v10);
  return swift_release();
}

Swift::Void __swiftcall Tracker.enterGroup(groupName:)(Swift::String groupName)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t countAndFlagsBits;

  v2 = v1;
  object = groupName._object;
  countAndFlagsBits = groupName._countAndFlagsBits;
  v4 = sub_1A5F63F08();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - v9;
  sub_1A5F63EFC();
  v12 = v1 + 80;
  v11 = *(_QWORD *)(v1 + 80);
  v18 = *(_QWORD *)(v12 + 8);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  v13 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v14 = (v6 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = (char *)swift_allocObject();
  v16 = countAndFlagsBits;
  *((_QWORD *)v15 + 2) = v2;
  *((_QWORD *)v15 + 3) = v16;
  *((_QWORD *)v15 + 4) = object;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v15[v13], v7, v4);
  v17 = &v15[v14];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A5EEC784(v11, (uint64_t)sub_1A5F39080, (uint64_t)v15);
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t Tracker.enterGroup(groupName:contentType:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;

  v5 = v4;
  v25 = a4;
  v23 = a1;
  v24 = a3;
  v7 = sub_1A5F63F08();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - v12;
  sub_1A5F63EFC();
  v15 = v4 + 80;
  v14 = *(_QWORD *)(v4 + 80);
  v22 = *(_QWORD *)(v15 + 8);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  v16 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v17 = (v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (char *)swift_allocObject();
  v19 = v23;
  *((_QWORD *)v18 + 2) = v5;
  *((_QWORD *)v18 + 3) = v19;
  *((_QWORD *)v18 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v18[v16], v10, v7);
  v20 = &v18[v17];
  *(_QWORD *)v20 = v24;
  v20[8] = v25 & 1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1A5EEC784(v14, (uint64_t)sub_1A5F39080, (uint64_t)v18);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

Swift::Void __swiftcall Tracker.leaveGroup(groupName:)(Swift::String_optional groupName)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  _QWORD *v5;

  object = groupName.value._object;
  countAndFlagsBits = groupName.value._countAndFlagsBits;
  v4 = *(_QWORD *)(v1 + 80);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v1;
  v5[3] = countAndFlagsBits;
  v5[4] = object;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5EEC784(v4, (uint64_t)sub_1A5F390F4, (uint64_t)v5);
  swift_release();
}

Swift::Void __swiftcall Tracker.suspend()()
{
  sub_1A5F331F4((void (*)(_QWORD))MEMORY[0x1E0C82D28]);
}

Swift::Void __swiftcall Tracker.resume()()
{
  sub_1A5F331F4((void (*)(_QWORD))MEMORY[0x1E0C82D30]);
}

uint64_t sub_1A5F331F4(void (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t result;

  result = MEMORY[0x1A85B8E10](v1 + 64);
  if (result)
  {
    a1(*(_QWORD *)(result + 56));
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t Tracker.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Tracker.parentTracker.getter()
{
  return swift_retain();
}

uint64_t sub_1A5F3326C()
{
  sub_1A5F392F4();
  return swift_retain();
}

uint64_t sub_1A5F33280(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  if ((unint64_t)(a2 - 1) >= 2)
  {
    if (a2 && a2 != 3)
    {
      result = sub_1A5F648A4();
      __break(1u);
    }
  }
  else
  {
    v2 = result;
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      sub_1A5ECE02C(result + 200, (uint64_t)v5);
      swift_release();
      v3 = v6;
      v4 = v7;
      __swift_project_boxed_opaque_existential_1(v5, v6);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v3, v4);
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
    }
  }
  return result;
}

void sub_1A5F33358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  char *v20;
  _QWORD v21[7];

  v21[3] = a5;
  v21[4] = a6;
  v21[5] = a3;
  v21[6] = a4;
  v8 = sub_1A5F63F08();
  v21[1] = *(_QWORD *)(v8 - 8);
  v21[2] = v8;
  MEMORY[0x1E0C80A78](v8);
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CE0C0, (uint64_t (*)(uint64_t))type metadata accessor for Tracker.Timer, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v10 = type metadata accessor for SessionObserverChange();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A5F64070();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (_QWORD *)((char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(void **)(*(_QWORD *)(a2 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v17 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v14 + 104))(v17, *MEMORY[0x1E0DEF740], v13, v15);
  v19 = v18;
  LOBYTE(v18) = sub_1A5F64088();
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v17, v13);
  if ((v18 & 1) != 0)
  {
    sub_1A5ED7E14(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SessionObserverChange);
    v20 = (char *)&loc_1A5F334F8 + *((int *)qword_1A5F33760 + swift_getEnumCaseMultiPayload());
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1A5F33760);
}

void sub_1A5F33770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_1A5F33358(a1, a2, *v3, v3[1], *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t Tracker.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A5EFBB34(v0 + 64);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 200);
  swift_release();
  v1 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 136) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native())
        break;
      v2 = *(_QWORD *)(v1 + 136);
      swift_retain();
      swift_release();
      v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t Tracker.__deallocating_deinit()
{
  Tracker.deinit();
  return swift_deallocClassInstance();
}

uint64_t Tracker.onWillSubmit<A>(_:block:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  _QWORD *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  v7 = (_QWORD *)(v3 + 168);
  swift_beginAccess();
  v8 = *(_QWORD **)(v3 + 168);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v3 + 168) = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v8 = sub_1A5F08530(0, v8[2] + 1, 1, v8);
    *v7 = v8;
  }
  v11 = v8[2];
  v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    v8 = sub_1A5F08530((_QWORD *)(v10 > 1), v11 + 1, 1, v8);
    *v7 = v8;
  }
  v8[2] = v11 + 1;
  v12 = &v8[3 * v11];
  v12[4] = a1;
  v12[5] = a2;
  v12[6] = a3;
  swift_endAccess();
  return swift_retain();
}

uint64_t sub_1A5F33984(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t Tracker.explicitTime<A>(_:startTime:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v9;

  v9 = *(_QWORD *)(v4 + 96);
  swift_retain();
  sub_1A5EEC028(a1, v9, 0, a2, a3, a4);
  return swift_release();
}

uint64_t Tracker.submit<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;

  v7 = swift_allocObject();
  swift_weakInit();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = v7;
  v8[5] = a1;
  v9 = *(_QWORD *)(v3 + 80);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v3;
  v10[3] = sub_1A5F39358;
  v10[4] = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A5EEC784(v9, (uint64_t)sub_1A5F2EE40, (uint64_t)v10);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A5F33AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A5ECE02C(result + 200, (uint64_t)v12);
    swift_release();
    v10 = v13;
    v11 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(a3, a1, a4, a5, v10, v11);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  }
  return result;
}

uint64_t Tracker.explicitSubmit<A>(_:submitTime:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  unint64_t v13;
  _OWORD v15[2];

  v13 = *(_QWORD *)(v6 + 96);
  memset(v15, 0, sizeof(v15));
  swift_retain();
  sub_1A5EC07B4(a1, v13, 0, a2, (uint64_t)v15, a3, a4, a5, a6);
  swift_release();
  return sub_1A5EF4054((uint64_t)v15, (unint64_t *)&qword_1ED1CF848, MEMORY[0x1E0DEE9B8] + 8);
}

id Tracker.delayedSubmit<A>(_:onlyIfTimed:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  objc_class *v21;
  _BYTE *v22;
  uint64_t (**v23)();
  id v24;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  objc_super v30;

  v29 = a6;
  v26 = a1;
  v27 = a5;
  v28 = a2;
  v8 = sub_1A5F63F08();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v26 - v13;
  sub_1A5F63EFC();
  v15 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
  v16 = (*(unsigned __int8 *)(v9 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v17 = swift_allocObject();
  v18 = v29;
  *(_QWORD *)(v17 + 16) = v27;
  *(_QWORD *)(v17 + 24) = v18;
  v19 = v26;
  *(_QWORD *)(v17 + 32) = v15;
  *(_QWORD *)(v17 + 40) = v19;
  *(_BYTE *)(v17 + 48) = v28;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, v11, v8);
  v20 = (uint64_t *)(v17 + ((v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v20 = a3;
  v20[1] = a4;
  v21 = (objc_class *)type metadata accessor for DelayedToken();
  v22 = objc_allocWithZone(v21);
  v22[OBJC_IVAR___AADelayedToken_sealed] = 0;
  v23 = (uint64_t (**)())&v22[OBJC_IVAR___AADelayedToken_block];
  *v23 = sub_1A5F393FC;
  v23[1] = (uint64_t (*)())v17;
  swift_retain();
  sub_1A5EC84CC(a3);
  v30.receiver = v22;
  v30.super_class = v21;
  v24 = objc_msgSendSuper2(&v30, sel_init);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  swift_release();
  return v24;
}

uint64_t sub_1A5F33E38(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;
  unint64_t v16;
  _OWORD v17[2];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v16 = *(_QWORD *)(result + 96);
    memset(v17, 0, sizeof(v17));
    swift_retain();
    sub_1A5EC07B4(a2, v16, a3 & 1, a4, (uint64_t)v17, a5, a6, a7, a8);
    swift_release();
    swift_release();
    return sub_1A5EF4054((uint64_t)v17, (unint64_t *)&qword_1ED1CF848, MEMORY[0x1E0DEE9B8] + 8);
  }
  return result;
}

id sub_1A5F33F28(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  id result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  char *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;

  v10 = v9;
  v74 = a8;
  v75 = a1;
  v69 = a6;
  v70 = a7;
  v65 = a5;
  v71 = a3;
  v72 = a4;
  v76 = a2;
  v73 = a9;
  v11 = type metadata accessor for EventSubmitResult(0, a8, a9, a4);
  v67 = *(_QWORD *)(v11 - 8);
  v68 = v11;
  MEMORY[0x1E0C80A78](v11);
  v66 = (char *)&v59 - v12;
  v13 = sub_1A5F63F2C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (int *)type metadata accessor for EventData();
  v63 = *((_QWORD *)v17 - 1);
  v18 = *(_QWORD *)(v63 + 64);
  v19 = MEMORY[0x1E0C80A78](v17);
  v64 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (uint64_t *)((char *)&v59 - v20);
  sub_1A5F63F20();
  v22 = sub_1A5F63F14();
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_1A5F63EFC();
  v77 = 47;
  v78 = 0xE100000000000000;
  v79 = Tracker.path.getter();
  sub_1A5EDCBFC(0, (unint64_t *)&qword_1ED1CD930, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1A5EDB074();
  sub_1A5F64100();
  v25 = v73;
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  v26 = v77;
  v27 = v78;
  *v21 = v22;
  v21[1] = v24;
  v28 = v74;
  v29 = (uint64_t *)((char *)v21 + v17[6]);
  *v29 = v26;
  v29[1] = v27;
  v30 = (uint64_t *)((char *)v21 + v17[7]);
  *v30 = 0x6F69737365536F6ELL;
  v30[1] = 0xE90000000000006ELL;
  *(_OWORD *)((char *)v21 + v17[8]) = xmmword_1A5F68AF0;
  type metadata accessor for Sequence(0);
  v31 = swift_allocBox();
  sub_1A5EED58C(v75, v76, (uint64_t)v21, v71, v72, v28, v25, v32);
  v34 = (uint64_t)v64;
  v33 = v65;
  v68 = v31;
  v62 = sub_1A5EDB4E8(v28, v25);
  v61 = v35;
  v67 = v36;
  LODWORD(v66) = v37;
  v38 = swift_allocObject();
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DE7910]), sel_init);
  v71 = (uint64_t)result;
  v72 = v38;
  *(_QWORD *)(v38 + 16) = result;
  if (result)
  {
    type metadata accessor for AccessTracker();
    v40 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v60 = v40;
    *(_QWORD *)(v40 + 24) = 0;
    *(_QWORD *)(v40 + 32) = 0;
    v41 = swift_allocObject();
    swift_weakInit();
    v42 = v34;
    sub_1A5ED7E14((uint64_t)v21, v34, (uint64_t (*)(_QWORD))type metadata accessor for EventData);
    sub_1A5EDCB9C(v33, (uint64_t)&v77);
    v43 = (*(unsigned __int8 *)(v63 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    v65 = v10;
    v44 = (v18 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
    v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8;
    v46 = (v45 + 23) & 0xFFFFFFFFFFFFFFF8;
    v63 = (v46 + 23) & 0xFFFFFFFFFFFFFFF8;
    v47 = (v46 + 39) & 0xFFFFFFFFFFFFFFF8;
    v48 = (_QWORD *)swift_allocObject();
    v49 = v73;
    v48[2] = v74;
    v48[3] = v49;
    v50 = v75;
    v48[4] = v41;
    v48[5] = v50;
    v48[6] = v76;
    sub_1A5ECD6B0(v42, (uint64_t)v48 + v43, (uint64_t (*)(_QWORD))type metadata accessor for EventData);
    v51 = v69;
    *(_QWORD *)((char *)v48 + v44) = v68;
    v52 = (_QWORD *)((char *)v48 + v45);
    v53 = v70;
    *v52 = v51;
    v52[1] = v53;
    v54 = (_QWORD *)((char *)v48 + v46);
    v55 = v61;
    *v54 = v62;
    v54[1] = v55;
    v56 = (char *)v48 + v63;
    *(_QWORD *)v56 = v67;
    v56[8] = v66 & 1;
    sub_1A5EDB014((uint64_t)&v77, (uint64_t)v48 + v47);
    *(_QWORD *)((char *)v48 + ((v47 + 39) & 0xFFFFFFFFFFFFFFF8)) = v72;
    type metadata accessor for SessionObserver();
    v57 = (_QWORD *)swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    v57[3] = v60;
    v57[4] = sub_1A5F3A544;
    v57[5] = v48;
    v58 = MEMORY[0x1A85B8E10](v65 + 64);
    sub_1A5EEC96C(v75, v76);
    swift_retain();
    sub_1A5EC84CC(v51);
    swift_retain();
    if (v58)
    {
      sub_1A5ECC8F4();
      swift_release();
      swift_unknownObjectRelease();
      sub_1A5ED4D44((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for EventData);
    }
    else
    {
      sub_1A5ED4D44((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for EventData);
      swift_release();
    }
    swift_release();
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5F3462C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t result;
  void *v36;
  id v37;
  char *v38;
  _QWORD v39[10];
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;

  v53 = a8;
  v54 = a6;
  v50 = a5;
  v49 = a4;
  v64 = a2;
  v48 = type metadata accessor for EventSubmitResult(0, a16, a17, a4);
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v46 = (char *)v39 - v17;
  v59 = a16;
  v60 = a17;
  v45 = type metadata accessor for ProcessEvent(0, a16, a17, v18);
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v43 = (char *)v39 - v19;
  v51 = type metadata accessor for Sequence(0);
  MEMORY[0x1E0C80A78](v51);
  v52 = (char *)v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for TimedData();
  MEMORY[0x1E0C80A78](v56);
  v62 = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1A5F63F08();
  v55 = *(_QWORD *)(v57 - 8);
  v22 = MEMORY[0x1E0C80A78](v57);
  v23 = MEMORY[0x1E0C80A78](v22);
  v58 = (char *)v39 - v24;
  MEMORY[0x1E0C80A78](v23);
  v25 = type metadata accessor for EventData();
  MEMORY[0x1E0C80A78](v25);
  v61 = (char *)v39 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for SessionObserverChange();
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v39 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_1A5F64070();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v33 = (_QWORD *)((char *)v39 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = swift_projectBox();
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v42 = v34;
    v63 = result;
    v36 = *(void **)(*(_QWORD *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v33 = v36;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v31 + 104))(v33, *MEMORY[0x1E0DEF740], v30);
    v37 = v36;
    LOBYTE(v36) = sub_1A5F64088();
    (*(void (**)(_QWORD *, uint64_t))(v31 + 8))(v33, v30);
    if ((v36 & 1) != 0)
    {
      v41 = a10;
      v39[9] = a14;
      v40 = a13 & 1;
      sub_1A5ED7E14(v64, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for SessionObserverChange);
      v38 = (char *)&loc_1A5F349EC + dword_1A5F3551C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    __break(1u);
    JUMPOUT(0x1A5F354E0);
  }
  return result;
}

uint64_t Tracker.clearStack<A>(of:includeParentTrackers:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5F32C18(0, 0, a2, a3, a4);
}

uint64_t sub_1A5F35544(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  _UNKNOWN **v40;
  __int128 v41;
  uint64_t v42;

  v6 = v5;
  v12 = sub_1A5F64070();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (uint64_t *)((char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(v6[10] + OBJC_IVAR___AAAccessQueue_queue);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v13 + 104))(v16, *MEMORY[0x1E0DEF740], v12, v14);
  v18 = v17;
  LOBYTE(v17) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v16, v12);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  v35 = a3;
  v36 = a1;
  v37 = a2;
  v20 = sub_1A5EC6A94(a1, a2);
  v22 = v21;
  swift_beginAccess();
  v23 = v6[15];
  if (!*(_QWORD *)(v23 + 16))
  {
    v40 = 0;
    v38 = 0u;
    v39 = 0u;
LABEL_11:
    swift_bridgeObjectRelease();
    sub_1A5EF1CF8((uint64_t)&v38, (unint64_t *)&qword_1ED1CE4D8, (unint64_t *)&qword_1ED1CE4D0, (uint64_t)&protocol descriptor for DataEventStackType);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = sub_1A5EF11E8(v20, v22);
  if ((v25 & 1) != 0)
  {
    sub_1A5ECE02C(*(_QWORD *)(v23 + 56) + 40 * v24, (uint64_t)&v38);
  }
  else
  {
    v40 = 0;
    v38 = 0u;
    v39 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v39 + 1))
    goto LABEL_11;
  sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE4D0);
  v27 = type metadata accessor for DataEventStack(0, a4, a5, v26);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v29 = *((_QWORD *)&v41 + 1);
  v28 = v41;
  v30 = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v29) = sub_1A5EEBD78(v28, v29, v30, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v29 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_1A5EF3C44(v27, v31, v32, v33);
  *((_QWORD *)&v39 + 1) = v27;
  v40 = &off_1E4FD1350;
  v38 = v41;
  *(_QWORD *)&v39 = v42;
  swift_beginAccess();
  sub_1A5EF0D60((uint64_t)&v38, v20, v22);
  swift_endAccess();
LABEL_14:
  result = v36;
  if ((v35 & 1) != 0)
  {
    if (v6[17])
      return sub_1A5F35544(v36, v37, 1, a4, a5);
  }
  return result;
}

uint64_t Tracker.copy<A>(type:from:traits:popIfMissing:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a5;
  *(_QWORD *)(v13 + 24) = a6;
  *(_QWORD *)(v13 + 32) = a1;
  *(_BYTE *)(v13 + 40) = a4;
  *(_QWORD *)(v13 + 48) = a3;
  v14 = *(_QWORD *)(v6 + 80);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v6;
  v15[3] = a2;
  v15[4] = sub_1A5F39488;
  v15[5] = v13;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A5EEC784(v14, (uint64_t)sub_1A5F394D0, (uint64_t)v15);
  swift_release();
  return swift_release();
}

uint64_t sub_1A5F35934(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;

  v20 = a5;
  v10 = sub_1A5F64568();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v19 - v12;
  v14 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  AccessTracker.peek<A>(_:)(a6, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a6) == 1)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if ((a4 & 1) != 0)
      return AccessTracker.pop<A>(type:)(result, a6, a7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v13, a6);
    AccessTracker.push<A>(data:traits:file:line:)((uint64_t)v17, v20, 0xD00000000000004DLL, 0x80000001A5F6FA30, 859, a6, a7);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, a6);
  }
  return result;
}

uint64_t AccessTracker.peek<A>(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t Strong;
  void *v9;
  id v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BYTE v16[40];

  v4 = sub_1A5F64070();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1, a1);
  v9 = *(void **)(*(_QWORD *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v7 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v10 = v9;
  LOBYTE(v9) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) != 0)
  {
    v12 = sub_1A5F64994();
    sub_1A5EEEDC8(v12, v13, 0, 0, 1, (uint64_t)v16);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1A5EBB7B0(0, &qword_1ED1CD458, qword_1ED1CE020, (uint64_t)&protocol descriptor for DataEventType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v14 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, v14 ^ 1u, 1, a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5F35C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  id v23;
  char v24;
  _QWORD v28[5];
  uint64_t v29;

  v7 = (_QWORD *)v6;
  v11 = *(void **)(v6 + 80);
  v12 = *(void **)(v6 + 88);
  v24 = *(_BYTE *)(v6 + 176);
  v13 = *(_QWORD *)(v6 + 96);
  v14 = *(_QWORD *)(v6 + 240);
  swift_bridgeObjectRetain();
  v23 = v11;
  v15 = v12;
  swift_retain();
  os_unfair_lock_lock_with_options();
  v16 = *(_QWORD *)(v6 + 160);
  swift_beginAccess();
  v17 = v7[19];
  v28[0] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A5ED37EC(v17);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  v29 = v16;
  v18 = v7[23];
  v19 = v7[24];
  sub_1A5ECE02C((uint64_t)(v7 + 25), (uint64_t)v28);
  type metadata accessor for Tracker();
  v20 = swift_allocObject();
  ObjectType = swift_getObjectType();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_1A5F38D94(a1, a2, v23, v15, v24, v13, (uint64_t)v7, &v29, a3, a4, a5, a6, v18, (uint64_t)v28, v20, ObjectType, v19);
}

uint64_t Tracker.hiddenChain(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1A5F35C3C(0, 0, a1, a2, 0, 0);
}

uint64_t Tracker.hiddenChain(_:dynamicDataIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5F35C3C(0, 0, a1, a2, a3, a4);
}

Swift::Void __swiftcall Tracker.clearDynamicDataIdentifier()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_retain();
  sub_1A5EEC784(v1, (uint64_t)sub_1A5F394DC, v0);
  swift_release();
}

uint64_t sub_1A5F35E3C(uint64_t a1, _QWORD **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  v5 = MEMORY[0x1E0DEBB98];
  *(_OWORD *)(v4 + 16) = xmmword_1A5F679D0;
  v6 = MEMORY[0x1E0DEBBF8];
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 32) = a1;
  sub_1A5F64148();
  if (*(_QWORD *)(a1 + 40))
  {
    sub_1A5F64634();
    sub_1A5F646F4();
    sub_1A5F641B4();
    sub_1A5F641B4();
    swift_bridgeObjectRelease();
    sub_1A5F641B4();
    sub_1A5F641B4();
  }
  else
  {
    sub_1A5F646F4();
    sub_1A5F641B4();
    sub_1A5F641B4();
    swift_bridgeObjectRelease();
  }
  v7 = *a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_1A5EDB2D8(0, v7[2] + 1, 1, v7);
    *a2 = v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_1A5EDB2D8((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    *a2 = v7;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = 0;
  v11[5] = 0xE000000000000000;
  return 1;
}

uint64_t Tracker.snapshot(policy:)()
{
  sub_1A5EE2EE8(0, qword_1EE80D168);
  return sub_1A5F644B4();
}

uint64_t sub_1A5F36118@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  char v10;
  id v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  BOOL v51;
  unint64_t v52;
  _QWORD *v53;
  BOOL v54;
  unint64_t i;
  unint64_t v56;
  _QWORD *v57;
  BOOL v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  __int128 *v87;
  int64_t v88;
  __int128 *v89;
  uint64_t v90;
  int64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  _QWORD v104[3];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE v109[40];
  uint64_t v110;

  v80 = a2;
  v4 = sub_1A5F64070();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v81 = v2;
  v9 = *(void **)(*(_QWORD *)(v2 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  v10 = *a1;
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x1E0DEF740], v4, v6);
  v11 = v9;
  v12 = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v8, v4);
  if ((v12 & 1) == 0)
    goto LABEL_77;
  if ((v10 & 1) != 0)
  {
    *(_QWORD *)&v98 = MEMORY[0x1E0DEE9D8];
    v14 = v81;
    swift_retain();
    while (1)
    {
      v15 = (_QWORD *)swift_retain();
      v16 = sub_1A5F368D0(v15, &v98);
      swift_release();
      v17 = *(_QWORD *)(v14 + 136);
      swift_retain();
      swift_release();
      if (!v17)
        break;
      v14 = v17;
      if ((v16 & 1) == 0)
      {
        swift_release();
        break;
      }
    }
    v18 = v98;
    v19 = *(_QWORD *)(v81 + 96);
    sub_1A5ECD49C(0, &qword_1EE80D218, (uint64_t (*)(uint64_t))sub_1A5F09FD4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Snapshot);
    v20 = v80;
    *(_QWORD *)(v80 + 24) = v21;
    *(_QWORD *)(v20 + 32) = &off_1E4FD3D08;
    *(_BYTE *)v20 = 1;
    *(_QWORD *)(v20 + 8) = v18;
    *(_QWORD *)(v20 + 16) = v19;
    return swift_retain();
  }
  v110 = MEMORY[0x1E0DEE9E8];
  v89 = &v99;
  v22 = (__int128 *)v109;
  v23 = swift_retain();
  v84 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v24 = v23;
  v87 = (__int128 *)v109;
LABEL_9:
  v25 = v24;
  swift_beginAccess();
  v26 = *(_QWORD *)(v25 + 120);
  v27 = *(_QWORD *)(v26 + 64);
  v86 = v26 + 64;
  v28 = 1 << *(_BYTE *)(v26 + 32);
  if (v28 < 64)
    v29 = ~(-1 << v28);
  else
    v29 = -1;
  v30 = v29 & v27;
  v88 = (unint64_t)(v28 + 63) >> 6;
  v82 = v88 - 1;
  v83 = v25;
  swift_retain();
  v90 = v26;
  result = swift_bridgeObjectRetain();
  v91 = 0;
  v31 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v30)
    {
      v32 = __clz(__rbit64(v30));
      v30 &= v30 - 1;
      v33 = v32 | (v91 << 6);
LABEL_17:
      v34 = *(_QWORD *)(v90 + 56);
      v35 = (_QWORD *)(*(_QWORD *)(v90 + 48) + 16 * v33);
      v36 = v35[1];
      *(_QWORD *)&v98 = *v35;
      *((_QWORD *)&v98 + 1) = v36;
      sub_1A5ECE02C(v34 + 40 * v33, (uint64_t)v89);
      swift_bridgeObjectRetain();
      goto LABEL_36;
    }
    v37 = v91 + 1;
    if (__OFADD__(v91, 1))
    {
      __break(1u);
      goto LABEL_76;
    }
    if (v37 < v88)
    {
      v38 = *(_QWORD *)(v86 + 8 * v37);
      if (v38)
        goto LABEL_21;
      v39 = v91 + 2;
      ++v91;
      if (v37 + 1 < v88)
      {
        v38 = *(_QWORD *)(v86 + 8 * v39);
        if (v38)
          goto LABEL_24;
        v91 = v37 + 1;
        if (v37 + 2 < v88)
        {
          v38 = *(_QWORD *)(v86 + 8 * (v37 + 2));
          if (v38)
          {
            v37 += 2;
            goto LABEL_21;
          }
          v39 = v37 + 3;
          v91 = v37 + 2;
          if (v37 + 3 < v88)
            break;
        }
      }
    }
LABEL_35:
    v30 = 0;
    *(_QWORD *)&v101 = 0;
    v99 = 0u;
    v100 = 0u;
    v98 = 0u;
LABEL_36:
    sub_1A5ED15C4((uint64_t)&v98, (uint64_t)&v107, &qword_1ED1CE508, (unint64_t *)&qword_1ED1CE500, (unint64_t *)&qword_1ED1CE4D0);
    v40 = v108;
    if (!v108)
    {
      swift_release();
      if (*(_QWORD *)(v83 + 24))
      {
        v66 = *(_QWORD *)(v83 + 16);
        v67 = *(_QWORD *)(v83 + 24);
      }
      else
      {
        v67 = 0xE600000000000000;
        v66 = 0x6E6564646968;
      }
      v68 = v83;
      swift_beginAccess();
      v69 = *(_QWORD *)(v68 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v84 = sub_1A5F087A4(0, v84[2] + 1, 1, v84);
      v71 = v84[2];
      v70 = v84[3];
      if (v71 >= v70 >> 1)
        v84 = sub_1A5F087A4((_QWORD *)(v70 > 1), v71 + 1, 1, v84);
      v72 = v84;
      v84[2] = v71 + 1;
      v73 = &v72[4 * v71];
      v73[4] = v66;
      v73[5] = v67;
      v73[6] = v31;
      v73[7] = v69;
      v74 = v83;
      swift_release();
      v75 = *(_QWORD *)(v74 + 136);
      swift_retain();
      swift_release();
      v24 = v75;
      v22 = v87;
      if (!v75)
      {
        v76 = *(_QWORD *)(v81 + 96);
        sub_1A5F3A804(0);
        v77 = v80;
        *(_QWORD *)(v80 + 24) = v78;
        *(_QWORD *)(v77 + 32) = &off_1E4FD3D08;
        *(_BYTE *)v77 = 0;
        *(_QWORD *)(v77 + 8) = v84;
        *(_QWORD *)(v77 + 16) = v76;
        swift_retain();
        return swift_bridgeObjectRelease();
      }
      goto LABEL_9;
    }
    v41 = v107;
    sub_1A5EC1D18(v22, (uint64_t)v104);
    v42 = v105;
    v43 = v106;
    __swift_project_boxed_opaque_existential_1(v104, v105);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v43 + 24))(&v92, v42, v43);
    if (!*((_QWORD *)&v92 + 1))
    {
      swift_bridgeObjectRelease();
      sub_1A5EF4054((uint64_t)&v92, &qword_1ED1CE0A8, (uint64_t)&type metadata for AnyDataEventEntry);
      goto LABEL_14;
    }
    v101 = v95;
    v102 = v96;
    v103 = v97;
    v98 = v92;
    v99 = v93;
    v100 = v94;
    v44 = v110;
    if (*(_QWORD *)(v110 + 16))
    {
      sub_1A5F64910();
      swift_bridgeObjectRetain();
      sub_1A5F6419C();
      v45 = sub_1A5F64928();
      v46 = -1 << *(_BYTE *)(v44 + 32);
      v47 = v45 & ~v46;
      v48 = v44 + 56;
      if (((*(_QWORD *)(v44 + 56 + ((v47 >> 3) & 0xFFFFFFFFFFFFF8)) >> v47) & 1) != 0)
      {
        v49 = *(_QWORD *)(v44 + 48);
        v50 = (_QWORD *)(v49 + 16 * v47);
        v51 = *v50 == v41 && v50[1] == v40;
        if (v51 || (sub_1A5F64880() & 1) != 0)
        {
LABEL_51:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1A5EF03FC((uint64_t)&v98);
          v22 = v87;
          goto LABEL_14;
        }
        v85 = ~v46;
        v52 = (v47 + 1) & ~v46;
        if (((*(_QWORD *)(v48 + ((v52 >> 3) & 0xFFFFFFFFFFFFF8)) >> v52) & 1) != 0)
        {
          v53 = (_QWORD *)(v49 + 16 * v52);
          v54 = *v53 == v41 && v53[1] == v40;
          if (v54 || (sub_1A5F64880() & 1) != 0)
            goto LABEL_51;
          for (i = v52 + 1; ; i = v56 + 1)
          {
            v56 = i & v85;
            if (((*(_QWORD *)(v48 + (((i & v85) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v85)) & 1) == 0)
              break;
            v57 = (_QWORD *)(v49 + 16 * v56);
            v58 = *v57 == v41 && v57[1] == v40;
            if (v58 || (sub_1A5F64880() & 1) != 0)
              goto LABEL_51;
          }
        }
      }
      swift_bridgeObjectRelease();
      v22 = v87;
    }
    sub_1A5F2FD88((uint64_t)&v98, (uint64_t)&v92);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v31 = sub_1A5F08668(0, v31[2] + 1, 1, v31);
    v60 = v31[2];
    v59 = v31[3];
    if (v60 >= v59 >> 1)
      v31 = sub_1A5F08668((_QWORD *)(v59 > 1), v60 + 1, 1, v31);
    v31[2] = v60 + 1;
    v61 = &v31[11 * v60];
    v62 = v93;
    *((_OWORD *)v61 + 2) = v92;
    *((_OWORD *)v61 + 3) = v62;
    v63 = v94;
    v64 = v95;
    v65 = v96;
    v61[14] = v97;
    *((_OWORD *)v61 + 5) = v64;
    *((_OWORD *)v61 + 6) = v65;
    *((_OWORD *)v61 + 4) = v63;
    sub_1A5EBFC5C((uint64_t *)&v92, v41, v40);
    sub_1A5EF03FC((uint64_t)&v98);
    swift_bridgeObjectRelease();
LABEL_14:
    result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v104);
  }
  v38 = *(_QWORD *)(v86 + 8 * v39);
  if (v38)
  {
LABEL_24:
    v37 = v39;
LABEL_21:
    v30 = (v38 - 1) & v38;
    v33 = __clz(__rbit64(v38)) + (v37 << 6);
    v91 = v37;
    goto LABEL_17;
  }
  while (1)
  {
    v37 = v39 + 1;
    if (__OFADD__(v39, 1))
      break;
    if (v37 >= v88)
    {
      v91 = v82;
      goto LABEL_35;
    }
    v38 = *(_QWORD *)(v86 + 8 * v37);
    ++v39;
    if (v38)
      goto LABEL_21;
  }
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
  return result;
}

uint64_t sub_1A5F368D0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 *v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  _QWORD *v42;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int64_t v48;
  _QWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  swift_beginAccess();
  v42 = a1;
  v5 = a1[15];
  v6 = *(_QWORD *)(v5 + 64);
  v44 = v5 + 64;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v6;
  v45 = (unint64_t)(v7 + 63) >> 6;
  v10 = (__int128 *)&v56;
  v46 = a1[15];
  swift_bridgeObjectRetain();
  v48 = 0;
  v47 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v11 = &qword_1ED1CE508;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v48 << 6);
LABEL_8:
      v14 = *(_QWORD *)(v46 + 56);
      v15 = (_QWORD *)(*(_QWORD *)(v46 + 48) + 16 * v13);
      v16 = v15[1];
      *(_QWORD *)&v50 = *v15;
      *((_QWORD *)&v50 + 1) = v16;
      sub_1A5ECE02C(v14 + 40 * v13, (uint64_t)&v51);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    v17 = v48 + 1;
    if (__OFADD__(v48, 1))
      goto LABEL_48;
    if (v17 < v45)
    {
      v18 = *(_QWORD *)(v44 + 8 * v17);
      if (v18)
        goto LABEL_12;
      v19 = v48 + 2;
      ++v48;
      if (v17 + 1 < v45)
      {
        v18 = *(_QWORD *)(v44 + 8 * v19);
        if (v18)
          goto LABEL_15;
        v48 = v17 + 1;
        if (v17 + 2 < v45)
        {
          v18 = *(_QWORD *)(v44 + 8 * (v17 + 2));
          if (v18)
          {
            v17 += 2;
LABEL_12:
            v9 = (v18 - 1) & v18;
            v13 = __clz(__rbit64(v18)) + (v17 << 6);
            v48 = v17;
            goto LABEL_8;
          }
          v19 = v17 + 3;
          v48 = v17 + 2;
          if (v17 + 3 < v45)
          {
            v18 = *(_QWORD *)(v44 + 8 * v19);
            if (!v18)
            {
              while (1)
              {
                v17 = v19 + 1;
                if (__OFADD__(v19, 1))
                  break;
                if (v17 >= v45)
                {
                  v48 = v45 - 1;
                  goto LABEL_26;
                }
                v18 = *(_QWORD *)(v44 + 8 * v17);
                ++v19;
                if (v18)
                  goto LABEL_12;
              }
              __break(1u);
LABEL_52:
              result = sub_1A5F648C8();
              __break(1u);
              return result;
            }
LABEL_15:
            v17 = v19;
            goto LABEL_12;
          }
        }
      }
    }
LABEL_26:
    v9 = 0;
    v53 = 0;
    v51 = 0u;
    v52 = 0u;
    v50 = 0u;
LABEL_27:
    sub_1A5ED15C4((uint64_t)&v50, (uint64_t)&v54, v11, (unint64_t *)&qword_1ED1CE500, (unint64_t *)&qword_1ED1CE4D0);
    v20 = v55;
    if (!v55)
      break;
    v21 = v54;
    sub_1A5EC1D18(v10, (uint64_t)&v50);
    a1 = (_QWORD *)*((_QWORD *)&v51 + 1);
    isUniquelyReferenced_nonNull_native = v52;
    v2 = __swift_project_boxed_opaque_existential_1(&v50, *((uint64_t *)&v51 + 1));
    if (((*(uint64_t (**)(_QWORD *, uint64_t))(isUniquelyReferenced_nonNull_native + 8))(a1, isUniquelyReferenced_nonNull_native) & 1) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = v11;
      v11 = (unint64_t *)v10;
      a1 = (_QWORD *)*((_QWORD *)&v51 + 1);
      v23 = v52;
      __swift_project_boxed_opaque_existential_1(&v50, *((uint64_t *)&v51 + 1));
      v24 = (*(uint64_t (**)(_QWORD *, uint64_t))(v23 + 16))(a1, v23);
      v2 = v47;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v49 = v47;
      v26 = sub_1A5EF11E8(v21, v20);
      v27 = v47[2];
      v28 = (v25 & 1) == 0;
      v29 = v27 + v28;
      if (__OFADD__(v27, v28))
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        v2 = sub_1A5F088CC(0, v2[2] + 1, 1, v2);
        *a2 = v2;
        goto LABEL_44;
      }
      a1 = v25;
      if (v47[3] >= v29)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v2 = &v49;
          sub_1A5F060E0();
        }
      }
      else
      {
        sub_1A5F04DB0(v29, isUniquelyReferenced_nonNull_native);
        v2 = v49;
        v30 = sub_1A5EF11E8(v21, v20);
        if ((a1 & 1) != (v31 & 1))
          goto LABEL_52;
        v26 = v30;
      }
      v32 = v49;
      v47 = v49;
      if ((a1 & 1) != 0)
      {
        a1 = (_QWORD *)v49[7];
        v2 = (_QWORD *)(8 * v26);
        swift_bridgeObjectRelease();
        a1[v26] = v24;
      }
      else
      {
        v49[(v26 >> 6) + 8] |= 1 << v26;
        v33 = (uint64_t *)(v32[6] + 16 * v26);
        *v33 = v21;
        v33[1] = v20;
        *(_QWORD *)(v32[7] + 8 * v26) = v24;
        v34 = v32[2];
        v35 = __OFADD__(v34, 1);
        v36 = v34 + 1;
        if (v35)
          goto LABEL_49;
        v32[2] = v36;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = (__int128 *)v11;
      v11 = v22;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v50);
  }
  swift_release();
  if (v42[3])
  {
    v11 = (unint64_t *)v42[2];
    isUniquelyReferenced_nonNull_native = v42[3];
  }
  else
  {
    isUniquelyReferenced_nonNull_native = 0xE600000000000000;
    v11 = (unint64_t *)0x6E6564646968;
  }
  swift_beginAccess();
  a1 = (_QWORD *)v42[13];
  v2 = (_QWORD *)*a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v37 = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v2;
  if ((v37 & 1) == 0)
    goto LABEL_50;
LABEL_44:
  v39 = v2[2];
  v38 = v2[3];
  if (v39 >= v38 >> 1)
  {
    v2 = sub_1A5F088CC((_QWORD *)(v38 > 1), v39 + 1, 1, v2);
    *a2 = v2;
  }
  v2[2] = v39 + 1;
  v40 = &v2[4 * v39];
  v40[4] = v11;
  v40[5] = isUniquelyReferenced_nonNull_native;
  v40[6] = v47;
  v40[7] = a1;
  return 1;
}

uint64_t sub_1A5F36DC0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7;

  type metadata accessor for AccessTracker();
  v7 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  swift_bridgeObjectRetain();
  a4(v7);
  return swift_release();
}

uint64_t sub_1A5F36E3C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for AccessTracker();
  v4 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  *(_QWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 32) = 0;
  v5 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  *(_QWORD *)(v5 + 24) = 0;
  *(_QWORD *)(v5 + 32) = 0;
  a3(v4, v5);
  swift_release();
  return swift_release();
}

uint64_t Tracker.checkForActiveSession(completion:)(uint64_t a1, uint64_t a2)
{
  return sub_1A5EEC6FC(a1, a2, (uint64_t)&unk_1E4FD2C70, (uint64_t)sub_1A5F39534);
}

uint64_t sub_1A5F36EFC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;

  v4 = type metadata accessor for SessionManager.SessionState(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A5F64070();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x1A85B8E10](a1 + 64, v9);
  if (!v12)
  {
    v19 = 0;
    return a2(v19);
  }
  v13 = v12;
  v14 = *(void **)(*(_QWORD *)(v12 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *v11 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E0DEF740], v7);
  v15 = v14;
  LOBYTE(v14) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
  if ((v14 & 1) != 0)
  {
    v17 = v13 + OBJC_IVAR____TtC12AppAnalytics14SessionManager_state;
    swift_beginAccess();
    sub_1A5ED7E14(v17, (uint64_t)v6, type metadata accessor for SessionManager.SessionState);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
        sub_1A5ED4D44((uint64_t)v6, type metadata accessor for SessionManager.SessionState);
      v19 = 0;
    }
    else
    {
      swift_release();
      v19 = 1;
    }
    swift_unknownObjectRelease();
    return a2(v19);
  }
  __break(1u);
  return result;
}

void sub_1A5F370A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  sub_1A5F370E0(a2, a3, a4, a5, a6 & 1);
}

void sub_1A5F370E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  unsigned int v17;
  void (*v18)(_QWORD *, _QWORD, _QWORD *, double);
  id v19;
  void (*v20)(_QWORD *, _QWORD *);
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  objc_class *v33;
  char *v34;
  char *v35;
  char *v36;
  id v37;
  uint64_t v38;
  void *v39;
  _QWORD *v40;
  _QWORD *v41;
  id v42;
  char v43;
  uint64_t v44;
  void (*v45)(_QWORD *, _QWORD *);
  unsigned int v46;
  void (*v47)(_QWORD *, _QWORD, _QWORD *);
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  int v56;
  uint64_t v57;
  objc_super v58;

  v6 = v5;
  v56 = a5;
  v53 = a3;
  v54 = a4;
  v57 = a1;
  v8 = sub_1A5F63F08();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v55 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)sub_1A5F64070();
  v12 = *(v11 - 1);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (uint64_t *)((char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(void **)(*(_QWORD *)(v5 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v15 = v16;
  v17 = *MEMORY[0x1E0DEF740];
  v18 = *(void (**)(_QWORD *, _QWORD, _QWORD *, double))(v12 + 104);
  v18(v15, *MEMORY[0x1E0DEF740], v11, v13);
  v19 = v16;
  LOBYTE(v16) = sub_1A5F64088();
  v20 = *(void (**)(_QWORD *, _QWORD *))(v12 + 8);
  v49 = v15;
  v20(v15, v11);
  if ((v16 & 1) != 0)
  {
    v51 = v9;
    v52 = v8;
    v45 = v20;
    v46 = v17;
    v47 = (void (*)(_QWORD *, _QWORD, _QWORD *))v18;
    v48 = v11;
    swift_beginAccess();
    v50 = v6;
    v21 = *(_QWORD *)(v6 + 144);
    swift_bridgeObjectRetain();
    v22 = swift_bridgeObjectRetain();
    v23 = sub_1A5F3A6AC(v22, v57, a2);
    v25 = v24;
    swift_bridgeObjectRelease();
    v11 = 0;
    if ((v25 & 1) == 0)
      v11 = (_QWORD *)sub_1A5F38A70(v23, v21);
    swift_bridgeObjectRelease();
    if (!v11)
    {
      v30 = v51;
      v29 = v52;
      v31 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
      v32 = v55;
      v31(v55, v53, v52);
      v33 = (objc_class *)type metadata accessor for Group();
      v34 = (char *)objc_allocWithZone(v33);
      *(_QWORD *)&v34[OBJC_IVAR___AAGroup_count] = 1;
      v35 = &v34[OBJC_IVAR___AAGroup_name];
      *(_QWORD *)v35 = v57;
      *((_QWORD *)v35 + 1) = a2;
      v31(&v34[OBJC_IVAR___AAGroup_startDate], (uint64_t)v32, v29);
      v36 = &v34[OBJC_IVAR___AAGroup_contentType];
      *(_QWORD *)v36 = v54;
      v36[8] = v56 & 1;
      v58.receiver = v34;
      v58.super_class = v33;
      swift_bridgeObjectRetain();
      v37 = objc_msgSendSuper2(&v58, sel_init);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
      swift_beginAccess();
      v11 = v37;
      MEMORY[0x1A85B7FAC]();
      if (*(_QWORD *)((*(_QWORD *)(v6 + 144) & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((*(_QWORD *)(v6 + 144) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        goto LABEL_8;
      goto LABEL_14;
    }
    v26 = *(_QWORD *)((char *)v11 + OBJC_IVAR___AAGroup_count);
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      *(_QWORD *)((char *)v11 + OBJC_IVAR___AAGroup_count) = v28;
LABEL_11:

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_14:
  sub_1A5F642D4();
LABEL_8:
  sub_1A5F642F8();
  sub_1A5F642BC();
  swift_endAccess();
  v38 = MEMORY[0x1A85B8E10](v50 + 64);
  if (!v38)
    goto LABEL_11;
  v39 = *(void **)(*(_QWORD *)(v38 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  v41 = v48;
  v40 = v49;
  *v49 = v39;
  v47(v40, v46, v41);
  v42 = v39;
  v43 = sub_1A5F64088();
  v45(v40, v41);
  if ((v43 & 1) != 0)
  {
    sub_1A5EFBD08((uint64_t)v11);
    swift_unknownObjectRelease();
    goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_1A5F37490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5F374B8(a2, a3);
}

uint64_t sub_1A5F374B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  v5 = sub_1A5F64070();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (uint64_t *)((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(*(_QWORD *)(v2 + 80) + OBJC_IVAR___AAAccessQueue_queue);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x1E0DEF740], v5, v7);
  v11 = v10;
  LOBYTE(v10) = sub_1A5F64088();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v9, v5);
  if ((v10 & 1) != 0)
  {
    swift_retain();
    v13 = v2;
    while (1)
    {
      v14 = (_QWORD *)swift_retain();
      v15 = sub_1A5F375DC(v14, a1, a2, v2);
      swift_release();
      v16 = *(_QWORD *)(v13 + 136);
      swift_retain();
      result = swift_release();
      if (!v16)
        break;
      v13 = v16;
      if ((v15 & 1) == 0)
        return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1A5F375DC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t result;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];

  v8 = sub_1A5F64070();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a3)
    goto LABEL_12;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v12 = swift_bridgeObjectRetain();
  v13 = sub_1A5F3A6AC(v12, a2, a3);
  v15 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
    return 1;
  swift_beginAccess();
  v16 = *(_QWORD *)(a4 + 144);
  if ((v16 & 0xC000000000000001) == 0)
  {
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v13 < *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      a1 = *(id *)(v16 + 8 * v13 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  a1 = (_QWORD *)MEMORY[0x1A85B836C](v13, v16);
  swift_bridgeObjectRelease();
LABEL_7:
  v17 = *(_QWORD *)((char *)a1 + OBJC_IVAR___AAGroup_count);
  v18 = __OFSUB__(v17, 1);
  v19 = v17 - 1;
  if (v18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(_QWORD *)((char *)a1 + OBJC_IVAR___AAGroup_count) = v19;
  if (v19
    || (swift_beginAccess(),
        v20 = (void *)sub_1A5F37944(v13),
        swift_endAccess(),
        v20,
        (v21 = MEMORY[0x1A85B8E10](a4 + 64)) == 0))
  {
LABEL_21:

    return 0;
  }
  a4 = v21;
  v22 = *(void **)(*(_QWORD *)(v21 + 48) + OBJC_IVAR___AAAccessQueue_queue);
  *v11 = v22;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v23 = v22;
  LOBYTE(v22) = sub_1A5F64088();
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v22 & 1) != 0)
  {
LABEL_20:
    sub_1A5EFBE48((uint64_t)a1);

    swift_unknownObjectRelease();
    return 0;
  }
  __break(1u);
LABEL_12:
  v24 = a1 + 18;
  swift_beginAccess();
  v25 = a1[18];
  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    v32 = sub_1A5F64724();
    swift_bridgeObjectRelease();
    if (v32)
      goto LABEL_14;
    goto LABEL_24;
  }
  if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_24:
    swift_endAccess();
    return 1;
  }
LABEL_14:
  v26 = sub_1A5F38AC8();
  if (v26)
    goto LABEL_18;
  if (*v24 >> 62)
    goto LABEL_32;
  v27 = *(_QWORD *)((*v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = v27 - 1;
  if (!__OFSUB__(v27, 1))
  {
    do
    {
      v26 = sub_1A5F37944(result);
LABEL_18:
      a1 = (_QWORD *)v26;
      swift_endAccess();
      v29 = MEMORY[0x1A85B8E10](a4 + 64);
      if (!v29)
        goto LABEL_21;
      a4 = v29;
      v30 = *(void **)(*(_QWORD *)(v29 + 48) + OBJC_IVAR___AAAccessQueue_queue);
      *v11 = v30;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
      v31 = v30;
      LOBYTE(v30) = sub_1A5F64088();
      (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
      if ((v30 & 1) != 0)
        goto LABEL_20;
LABEL_31:
      __break(1u);
LABEL_32:
      swift_bridgeObjectRetain();
      v33 = sub_1A5F64724();
      swift_bridgeObjectRelease();
      result = v33 - 1;
    }
    while (!__OFSUB__(v33, 1));
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5F37944(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
    sub_1A5F62DF4(v3);
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      sub_1A5F642BC();
      return v10;
    }
  }
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t Tracker.push(action:identifier:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t inited;
  Swift::String_optional v9;

  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  sub_1A5EDCBFC(0, &qword_1ED1CB718, (uint64_t)&type metadata for Action, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A5F679D0;
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v6;
  *(_BYTE *)(inited + 48) = v7;
  sub_1A5F0CDE4(v5, v6, v7);
  v9.value._countAndFlagsBits = a2;
  v9.value._object = a3;
  Tracker.push(actions:identifier:)((Swift::OpaquePointer)inited, v9);
  swift_setDeallocating();
  return swift_arrayDestroy();
}

Swift::Void __swiftcall Tracker.push(actions:identifier:)(Swift::OpaquePointer actions, Swift::String_optional identifier)
{
  uint64_t v2;
  void *object;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *rawValue;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  char v28;
  BOOL v29;
  uint64_t v30;
  void *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t countAndFlagsBits;
  uint64_t v35;
  uint64_t v36;

  object = identifier.value._object;
  countAndFlagsBits = identifier.value._countAndFlagsBits;
  v5 = *(_QWORD *)(v2 + 240);
  os_unfair_lock_lock_with_options();
  swift_beginAccess();
  v6 = *(_QWORD *)(v2 + 152);
  v7 = *((_QWORD *)actions._rawValue + 2);
  v8 = *(_QWORD *)(v6 + 16);
  v9 = v8 - v7;
  if (v8 < v7)
    v9 = 0;
  v35 = (uint64_t)object;
  if (!object)
  {
    rawValue = actions._rawValue;
    swift_bridgeObjectRetain();
    goto LABEL_19;
  }
  v33 = *((_QWORD *)actions._rawValue + 2);
  v32 = v9;
  v10 = v8 - v9;
  if (v8 == v9)
  {
    swift_bridgeObjectRetain();
    v11 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    rawValue = actions._rawValue;
    v22 = sub_1A5F37F88(v11, (uint64_t)actions._rawValue);
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
      goto LABEL_19;
    if (v8 == v32)
    {
      if (!v33)
      {
LABEL_20:
        swift_unknownObjectRelease();
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
        return;
      }
LABEL_19:
      swift_bridgeObjectRetain();
      v23 = sub_1A5F390F8((uint64_t)rawValue, countAndFlagsBits, v35);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_1A5ED37EC(v23);
      swift_endAccess();
      goto LABEL_20;
    }
    if (v8 > v32)
    {
      v24 = 0;
      if (v33 >= v8)
        v25 = v8;
      else
        v25 = v33;
      v26 = (_QWORD *)(40 * v8 - 40 * v25 + v6 + 64);
      do
      {
        if (*v26)
        {
          if (*(v26 - 1) == countAndFlagsBits && *v26 == v35)
          {
            v29 = __OFADD__(v24++, 1);
            if (v29)
              goto LABEL_39;
          }
          else
          {
            v28 = sub_1A5F64880();
            v29 = __OFADD__(v24, v28 & 1);
            v24 += v28 & 1;
            if (v29)
              goto LABEL_39;
          }
        }
        v26 += 5;
        --v25;
      }
      while (v25);
      if (v24 == v33)
        goto LABEL_20;
      goto LABEL_19;
    }
  }
  else
  {
    v31 = actions._rawValue;
    v36 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1A5EFD178(0, v10 & ~(v10 >> 63), 0);
    if ((v10 & 0x8000000000000000) == 0)
    {
      v30 = v5;
      v11 = v36;
      v13 = -v10;
      v14 = (unsigned __int8 *)(40 * v8 - 40 * v10 + v6 + 48);
      while (__CFADD__(v8, v13))
      {
        v15 = *((_QWORD *)v14 - 2);
        v16 = *((_QWORD *)v14 - 1);
        v17 = *v14;
        sub_1A5F0CDE4(v15, v16, *v14);
        v19 = *(_QWORD *)(v36 + 16);
        v18 = *(_QWORD *)(v36 + 24);
        if (v19 >= v18 >> 1)
          sub_1A5EFD178(v18 > 1, v19 + 1, 1);
        *(_QWORD *)(v36 + 16) = v19 + 1;
        v20 = v36 + 24 * v19;
        *(_QWORD *)(v20 + 32) = v15;
        *(_QWORD *)(v20 + 40) = v16;
        *(_BYTE *)(v20 + 48) = v17;
        v14 += 40;
        if (__CFADD__(v13++, 1))
        {
          v5 = v30;
          actions._rawValue = v31;
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1A5F37DE4(uint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) == 0)
    return a2;
  __break(1u);
  return result;
}

uint64_t sub_1A5F37E10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 48);
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *v4;
      v6 = *v3;
      if (*(v4 - 2) == *(v3 - 2) && *(v4 - 1) == *(v3 - 1))
      {
        if (v5 != v6)
          return 0;
      }
      else
      {
        v8 = sub_1A5F64880();
        result = 0;
        if ((v8 & 1) == 0 || v5 != v6)
          return result;
      }
      v3 += 3;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1A5F37EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  char v6;
  _QWORD v8[6];
  _QWORD v9[6];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a1 + 32);
    v4 = (_QWORD *)(a2 + 32);
    do
    {
      sub_1A5F3A63C(v3, v9);
      sub_1A5F3A63C(v4, v8);
      if (v9[0] == v8[0] && v9[1] == v8[1])
      {
        sub_1A5F3A678((uint64_t)v8);
        sub_1A5F3A678((uint64_t)v9);
      }
      else
      {
        v6 = sub_1A5F64880();
        sub_1A5F3A678((uint64_t)v8);
        sub_1A5F3A678((uint64_t)v9);
        if ((v6 & 1) == 0)
          return 0;
      }
      v3 += 6;
      v4 += 6;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1A5F37F88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

uint64_t sub_1A5F38118(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1A5F08668(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[11 * v8 + 4];
  if (a1 + 32 < v9 + 88 * v2 && v9 < a1 + 32 + 88 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A5F64760();
  __break(1u);
  return result;
}

uint64_t Tracker.description.getter()
{
  _QWORD v1[2];

  sub_1A5F64634();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "Tracker(name: ");
  swift_bridgeObjectRetain();
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  Tracker.path.getter();
  sub_1A5EDCBFC(0, (unint64_t *)&qword_1ED1CD930, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1A5EDB074();
  sub_1A5F64100();
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  return v1[0];
}

uint64_t sub_1A5F383C4()
{
  return Tracker.description.getter();
}

uint64_t AccessTracker.deinit()
{
  uint64_t v0;

  swift_weakDestroy();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AccessTracker.explicitSubmit<A>(_:submitTime:userInfo:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;
  uint64_t v15;

  result = swift_weakLoadStrong();
  if (result)
  {
    v15 = *(_QWORD *)(result + 96);
    swift_retain();
    sub_1A5ED9E4C(a1, v15, 0, a2, a3, a4, a5, a6, a7);
    swift_release();
    return swift_release();
  }
  return result;
}

_QWORD *AccessTracker.submit<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v8;
  uint64_t v9;

  result = (_QWORD *)swift_weakLoadStrong();
  if (result)
  {
    v8 = result[28];
    v9 = result[29];
    __swift_project_boxed_opaque_existential_1(result + 25, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(a1, v3, a2, a3, v8, v9);
    return (_QWORD *)swift_release();
  }
  return result;
}

uint64_t AccessTracker.clearStack<A>(of:includeParentTrackers:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  void *v12;
  id v13;
  uint64_t v14;

  v7 = sub_1A5F64070();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = swift_weakLoadStrong();
  if (result)
  {
    v12 = *(void **)(*(_QWORD *)(result + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v10 = v12;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
    v13 = v12;
    LOBYTE(v12) = sub_1A5F64088();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
    if ((v12 & 1) != 0)
    {
      sub_1A5F35544(0, 0, a2 & 1, a3, a4);
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

Swift::Void __swiftcall AccessTracker.clearDynamicDataIdentifier()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;

  v0 = sub_1A5F64070();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v5 = Strong;
    v6 = *(void **)(*(_QWORD *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v3 = v6;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF740], v0);
    v7 = v6;
    LOBYTE(v6) = sub_1A5F64088();
    (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
    if ((v6 & 1) != 0)
    {
      *(_QWORD *)(v5 + 48) = 0;
      *(_QWORD *)(v5 + 56) = 0;
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

Swift::Void __swiftcall AccessTracker.enterGroup(groupName:)(Swift::String groupName)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  object = groupName._object;
  countAndFlagsBits = groupName._countAndFlagsBits;
  v3 = sub_1A5F63F08();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (swift_weakLoadStrong())
  {
    sub_1A5F63EFC();
    sub_1A5F370E0(countAndFlagsBits, (uint64_t)object, (uint64_t)v6, 0, 1);
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t AccessTracker.enterGroup(groupName:contentType:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;

  v8 = sub_1A5F63F08();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1A5F63EFC();
    sub_1A5F370E0(a1, a2, (uint64_t)v11, a3, a4 & 1);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

Swift::Void __swiftcall AccessTracker.leaveGroup()()
{
  uint64_t Strong;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v1 = Strong;
    v2 = *(_QWORD *)(Strong + 80);
    v3 = (_QWORD *)swift_allocObject();
    v3[3] = 0;
    v3[4] = 0;
    v3[2] = v1;
    swift_retain();
    sub_1A5EEC784(v2, (uint64_t)sub_1A5F390F4, (uint64_t)v3);
    swift_release();
    swift_release();
  }
}

Swift::Void __swiftcall AccessTracker.leaveGroup(groupName:)(Swift::String_optional groupName)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t Strong;
  void *v8;
  id v9;
  uint64_t v10;

  object = groupName.value._object;
  countAndFlagsBits = groupName.value._countAndFlagsBits;
  v3 = sub_1A5F64070();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = *(void **)(*(_QWORD *)(Strong + 80) + OBJC_IVAR___AAAccessQueue_queue);
    *v6 = v8;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
    v9 = v8;
    LOBYTE(v8) = sub_1A5F64088();
    (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
    if ((v8 & 1) != 0)
    {
      sub_1A5F374B8(countAndFlagsBits, (uint64_t)object);
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

unint64_t sub_1A5F38A70(unint64_t result, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
    return MEMORY[0x1A85B836C]();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
  {
    return (unint64_t)*(id *)(a2 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5F38AC8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v0 = v1;
  if (!(_DWORD)result || v1 < 0 || (v1 & 0x4000000000000000) != 0)
    sub_1A5F62DF4(v1);
  v3 = v1 & 0xFFFFFFFFFFFFFF8;
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    v5 = v4 - 1;
    v6 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20);
    *(_QWORD *)(v3 + 16) = v5;
    sub_1A5F642BC();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5F38B34(uint64_t a1, uint64_t a2, void *a3, void *a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _UNKNOWN **v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v32[12];
  int v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  _QWORD v38[5];
  uint64_t v39;

  v33 = a5;
  v36 = a3;
  v37 = a4;
  v34 = a1;
  v35 = a2;
  v12 = type metadata accessor for SummaryEventConfiguration(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for SummaryEventDatabaseManager.StorageOptions(0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = &v32[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v20 = &v32[-v19];
  type metadata accessor for EventMirrorStore();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = MEMORY[0x1E0DEE9E0];
  v39 = 0;
  sub_1A5ED462C();
  v23 = v22;
  v24 = *(int *)(v22 + 48);
  v25 = sub_1A5F63DD0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v20, 1, 1, v25);
  *(_QWORD *)&v20[v24] = 0;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v20, 0, 1, v23);
  if ((*(_BYTE *)(a7 + 8) & 1) != 0)
  {
    v26 = type metadata accessor for DisabledSummaryEventManager();
    v27 = swift_allocObject();
    v28 = &off_1E4FD5888;
  }
  else
  {
    sub_1A5ED7E14(a7, (uint64_t)v14, type metadata accessor for SummaryEventConfiguration);
    sub_1A5ED7E14((uint64_t)v20, (uint64_t)v18, type metadata accessor for SummaryEventDatabaseManager.StorageOptions);
    v26 = type metadata accessor for SummaryEventManager();
    swift_allocObject();
    v27 = sub_1A5ED3E4C((uint64_t)v14, (uint64_t)v18);
    v28 = &off_1E4FD47B0;
  }
  v38[3] = v26;
  v38[4] = v28;
  v38[0] = v27;
  sub_1A5ED4D44((uint64_t)v20, type metadata accessor for SummaryEventDatabaseManager.StorageOptions);
  type metadata accessor for Tracker();
  v29 = swift_allocObject();
  v30 = sub_1A5F38D94(v34, v35, v36, v37, v33 & 1, v21, 0, &v39, 0, 0, 0, 0, a6, (uint64_t)v38, v29, a9, a10);
  sub_1A5ED4D44(a7, type metadata accessor for SummaryEventConfiguration);
  return v30;
}

uint64_t sub_1A5F38D94(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;

  v23 = *a8;
  *(_QWORD *)(a15 + 72) = 0;
  *(_QWORD *)(a15 + 48) = 0;
  *(_QWORD *)(a15 + 56) = 0;
  swift_unknownObjectWeakInit();
  v24 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(a15 + 104) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(a15 + 112) = v24;
  *(_QWORD *)(a15 + 120) = v24;
  *(_QWORD *)(a15 + 128) = v24;
  v25 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a15 + 144) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a15 + 152) = v25;
  *(_QWORD *)(a15 + 168) = v25;
  type metadata accessor for UnfairLock();
  v26 = swift_allocObject();
  v27 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v26 + 16) = v27;
  *v27 = 0;
  *(_DWORD *)(v26 + 24) = 0x10000;
  *(_QWORD *)(a15 + 240) = v26;
  *(_QWORD *)(a15 + 16) = a1;
  *(_QWORD *)(a15 + 24) = a2;
  *(_QWORD *)(a15 + 80) = a3;
  *(_QWORD *)(a15 + 88) = a4;
  *(_BYTE *)(a15 + 176) = a5;
  *(_QWORD *)(a15 + 96) = a6;
  *(_QWORD *)(a15 + 136) = a7;
  if (a7)
  {
    MEMORY[0x1A85B8E10](a7 + 64);
    v28 = *(_QWORD *)(a7 + 72);
  }
  else
  {
    v28 = 0;
  }
  *(_QWORD *)(a15 + 72) = v28;
  swift_unknownObjectWeakAssign();
  v29 = a3;
  v30 = a4;
  swift_retain();
  swift_retain();
  swift_unknownObjectRelease();
  v31 = MEMORY[0x1E0DEE9D8];
  if (v23)
    v31 = v23;
  *(_QWORD *)(a15 + 160) = v31;
  *(_QWORD *)(a15 + 32) = a9;
  *(_QWORD *)(a15 + 40) = a10;
  *(_QWORD *)(a15 + 48) = a11;
  *(_QWORD *)(a15 + 56) = a12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a15 + 184) = a13;
  *(_QWORD *)(a15 + 192) = a17;
  sub_1A5ECE02C(a14, a15 + 200);
  swift_unknownObjectRetain();
  sub_1A5ED3CC0();
  v32 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  Tracker.onSessionChange(block:)((uint64_t)sub_1A5F3ABF0, v32);

  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(a14);
  swift_release();
  return a15;
}

uint64_t sub_1A5F38FE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F3900C()
{
  return objectdestroy_2Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1A5F39018()
{
  return objectdestroy_2Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1A5F39024()
{
  return objectdestroy_8Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1A5F39030()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F39064()
{
  return objectdestroy_8Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1A5F39070()
{
  return objectdestroy_8Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1A5F39088()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_1A5F63F08() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A5F370E0(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + v2, *(_QWORD *)(v0 + v3), *(unsigned __int8 *)(v0 + v3 + 8));
}

uint64_t sub_1A5F390E8()
{
  return objectdestroy_8Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1A5F390F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1A5EFD15C(0, v3, 0);
    v4 = v16;
    v7 = (unsigned __int8 *)(a1 + 48);
    do
    {
      v8 = *((_QWORD *)v7 - 2);
      v9 = *((_QWORD *)v7 - 1);
      v10 = *v7;
      sub_1A5F0CDE4(v8, v9, *v7);
      v12 = *(_QWORD *)(v16 + 16);
      v11 = *(_QWORD *)(v16 + 24);
      swift_bridgeObjectRetain();
      if (v12 >= v11 >> 1)
        sub_1A5EFD15C(v11 > 1, v12 + 1, 1);
      v7 += 24;
      *(_QWORD *)(v16 + 16) = v12 + 1;
      v13 = v16 + 40 * v12;
      *(_QWORD *)(v13 + 32) = v8;
      *(_QWORD *)(v13 + 40) = v9;
      *(_BYTE *)(v13 + 48) = v10;
      *(_QWORD *)(v13 + 56) = a2;
      *(_QWORD *)(v13 + 64) = a3;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1A5F391FC()
{
  NSString *v0;
  Class v1;
  char v2;
  id v3;
  id v4;
  uint64_t v5;
  char v6;

  v0 = (NSString *)sub_1A5F6410C();
  v1 = NSClassFromString(v0);

  if (v1)
  {
    v2 = 1;
  }
  else
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v4 = objc_msgSend(v3, sel_environment);

    v5 = sub_1A5F640B8();
    if (*(_QWORD *)(v5 + 16))
    {
      sub_1A5EF11E8(0xD000000000000010, 0x80000001A5F6F9D0);
      v2 = v6;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v2 = 0;
    }
  }
  return v2 & 1;
}

uint64_t sub_1A5F392F4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t i;

  result = v0;
  for (i = *(_QWORD *)(v0 + 136); i; i = *(_QWORD *)(i + 136))
    result = i;
  return result;
}

uint64_t sub_1A5F39310()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A5F39334()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F39358(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A5F33AFC(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1A5F39364()
{
  return objectdestroy_8Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1A5F39370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1A5F63F08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F393FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(sub_1A5F63F08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t *)(v0 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1A5F33E38(*(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(_BYTE *)(v0 + 48), v0 + v4, *v5, v5[1], v1, v2);
}

uint64_t sub_1A5F39464()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5F39488(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A5F35934(a1, a2, *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1A5F3949C()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F394D0()
{
  uint64_t v0;

  return sub_1A5F36E3C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(uint64_t, uint64_t))(v0 + 32));
}

uint64_t sub_1A5F394DC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5F394E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;

  v3 = *(_BYTE *)(v1 + 24);
  return sub_1A5F36118(&v3, a1);
}

uint64_t sub_1A5F39528()
{
  return objectdestroy_8Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1A5F39534()
{
  uint64_t v0;

  return sub_1A5F36EFC(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1A5F39540()
{
  return objectdestroy_8Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1A5F3954C()
{
  uint64_t v0;

  return sub_1A5F374B8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1A5F39574()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id *sub_1A5F395E4(id *a1, id *a2, uint64_t a3)
{
  id *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char *v8;
  unsigned int v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = (char *)*a2;
    *v3 = *a2;
    v3 = (id *)&v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      v11 = *a2;
      v12 = *a2;
      *v3 = v11;
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(id *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

void sub_1A5F39708(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *((unsigned __int8 *)a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)

    else
      (*(void (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    ((void (*)(void))((char *)&loc_1A5F39750 + 4 * byte_1A5F6940D[v5]))();
  }
}

_QWORD *sub_1A5F397A8(_QWORD *a1, id *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  id v8;
  id v9;
  char v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    v8 = *a2;
    v9 = *a2;
    *a1 = v8;
    v10 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v10 = 0;
  }
  *((_BYTE *)a1 + v5) = v10;
  return a1;
}

id *sub_1A5F3988C(id *a1, void **a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  void *v12;
  id v13;
  char v14;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      v12 = *a2;
      v13 = v12;
      *a1 = v12;
      v14 = 1;
    }
    else
    {
      (*(void (**)(id *, void **, uint64_t))(v6 + 16))(a1, a2, v5);
      v14 = 0;
    }
    *((_BYTE *)a1 + v7) = v14;
  }
  return a1;
}

_QWORD *sub_1A5F39A20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

id *sub_1A5F39AF4(id *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_1A5F39C80(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A5F39D44 + 4 * byte_1A5F69430[(v4 - 1)]))();
}

void sub_1A5F39D90(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1A5F39F38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A5F39F80 + 4 * byte_1A5F6943E[v3]))();
}

uint64_t type metadata accessor for SubmitResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SubmitResult);
}

uint64_t sub_1A5F39FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1A5F39FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t sub_1A5F39FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1A5F39FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1A5F39FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_1A5F39FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_1A5F3A004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_1A5F3A00C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_1A5F3A014(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t sub_1A5F3A01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t method lookup function for Tracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Tracker.rootTracker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t method lookup function for AccessTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for TrackerWillSubmitObserver()
{
  return swift_release();
}

_QWORD *_s12AppAnalytics25TrackerWillSubmitObserverVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a2[2];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = v4;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for TrackerWillSubmitObserver(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  *a1 = *a2;
  v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TrackerWillSubmitObserver(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TrackerWillSubmitObserver()
{
  return &type metadata for TrackerWillSubmitObserver;
}

uint64_t sub_1A5F3A110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A5F63F08();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1A5F3A14C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A5F63F08();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1A5F3A180(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A5F3A1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A5F3A208(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A5F3A24C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A5F3A290()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5F3A29C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A5F63F08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1A5F3A2D8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5F3A2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A5F63F08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t getEnumTagSinglePayload for TrackerName(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TrackerName(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackerName()
{
  return &type metadata for TrackerName;
}

uint64_t sub_1A5F3A3D8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A5F3A3FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for EventData();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = (((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_1A5EF3D48(*(void **)(v0 + 40), *(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease();
  v6 = v0 + v3 + *(int *)(v1 + 20);
  v7 = sub_1A5F63F08();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v5 + 24))
    __swift_destroy_boxed_opaque_existential_0(v0 + v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F3A544(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v5 = v2[2];
  v6 = v2[3];
  v7 = *(_QWORD *)(type metadata accessor for EventData() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A5F3462C(a1, a2, v2[4], v2[5], v2[6], (uint64_t)v2 + v8, *(_QWORD *)((char *)v2 + v9), *(_QWORD *)((char *)v2 + v10), *(_QWORD *)((char *)v2 + v10 + 8), *(_QWORD *)((char *)v2 + v11), *(_QWORD *)((char *)v2 + v11 + 8), *(_QWORD *)((char *)v2 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8)), *((_BYTE *)v2 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), (uint64_t)v2 + ((v11 + 39) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)((char *)v2 + ((((v11 + 39) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFF8)), v5, v6);
}

uint64_t sub_1A5F3A624()
{
  return objectdestroy_2Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1A5F3A630()
{
  return objectdestroy_2Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

_QWORD *sub_1A5F3A63C(_QWORD *a1, _QWORD *a2)
{
  initializeWithCopy for TrackerError.FoundData(a2, a1);
  return a2;
}

uint64_t sub_1A5F3A678(uint64_t a1)
{
  destroy for EventMirrorProperty(a1);
  return a1;
}

unint64_t sub_1A5F3A6AC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  char *v8;
  void *v9;
  char v11;

  if (a1 >> 62)
    goto LABEL_20;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    do
    {
      while (__OFSUB__(v6--, 1))
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        v6 = sub_1A5F64724();
        swift_bridgeObjectRelease();
        if (!v6)
          return v6;
      }
      if ((a1 & 0xC000000000000001) != 0)
      {
        v8 = (char *)MEMORY[0x1A85B836C](v6, a1);
        goto LABEL_9;
      }
      if ((v6 & 0x8000000000000000) != 0)
        goto LABEL_18;
      if (v6 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_19;
      v8 = (char *)*(id *)(a1 + 32 + 8 * v6);
LABEL_9:
      v9 = v8;
      if (*(_QWORD *)&v8[OBJC_IVAR___AAGroup_name] == a2 && *(_QWORD *)&v8[OBJC_IVAR___AAGroup_name + 8] == a3)
      {

        return v6;
      }
      v11 = sub_1A5F64880();

    }
    while ((v11 & 1) == 0 && v6);
  }
  return v6;
}

void sub_1A5F3A804(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EE80D220)
  {
    sub_1A5EDCBFC(255, &qword_1EE80CCB8, (uint64_t)&type metadata for AnyDataEventEntry, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v5 = type metadata accessor for Snapshot(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EE80D220);
  }
}

uint64_t sub_1A5F3A870()
{
  return objectdestroy_75Tm();
}

uint64_t sub_1A5F3A878()
{
  uint64_t v0;

  return sub_1A5F35544(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1A5F3A8A8()
{
  return objectdestroy_75Tm();
}

uint64_t objectdestroy_75Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5F3A8E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int EnumCaseMultiPayload;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(type metadata accessor for PushEvent(0, v5, *(_QWORD *)(v4 + 24), a4) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + v7, v5);
  if (EnumCaseMultiPayload == 1)
  {
    swift_getTupleTypeMetadata2();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5F3A9E8()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A5EF6928();
  return swift_deallocObject();
}

uint64_t sub_1A5F3AA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1A5F63F08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_1A5EF3D48(*(void **)(v0 + 40), *(_QWORD *)(v0 + 48));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(_QWORD *)(v0 + v4 + 24))
    __swift_destroy_boxed_opaque_existential_0(v0 + v4);
  if (*(_QWORD *)(v0 + ((v4 + 39) & 0xFFFFFFFFFFFFFFF8)))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F3AAD4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F3AB00()
{
  uint64_t *v0;

  return sub_1A5EF8094(v0[4], v0[5], v0[6], v0[2], v0[3]);
}

uint64_t sub_1A5F3AB10()
{
  return swift_deallocObject();
}

uint64_t sub_1A5F3AB20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A5F63F08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  sub_1A5EF3D48(*(void **)(v0 + 40), *(_QWORD *)(v0 + 48));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A5F3ABA0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F3ABC4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F3ABF0(uint64_t result, uint64_t a2)
{
  return sub_1A5F33280(result, a2);
}

_QWORD *sub_1A5F3ABF8(_QWORD *a1, uint64_t a2)
{
  id v3;
  unint64_t v4;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  sub_1A5EEC96C(*(id *)a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

void sub_1A5F3AC34(uint64_t a1)
{
  sub_1A5EF3D48(*(void **)a1, *(_QWORD *)(a1 + 8));
}

uint64_t sub_1A5F3AC40(uint64_t a1, uint64_t a2)
{
  id v3;
  unint64_t v4;
  void *v5;
  unint64_t v6;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  sub_1A5EEC96C(*(id *)a2, v4);
  v5 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  sub_1A5EF3D48(v5, v6);
  return a1;
}

uint64_t sub_1A5F3AC84(uint64_t a1, _OWORD *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *(void **)a1;
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  sub_1A5EF3D48(v3, v4);
  return a1;
}

uint64_t sub_1A5F3ACBC(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 16382);
  v3 = (((*(_QWORD *)(a1 + 8) >> 50) >> 12) | (4
                                                           * ((*(_QWORD *)(a1 + 8) >> 50) & 0xC00 | ((*(_QWORD *)(a1 + 8) & 7) << 7) | (*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFD)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_1A5F3AD34(uint64_t result, unsigned int a2, unsigned int a3)
{
  unint64_t v3;

  if (a2 > 0x3FFD)
  {
    *(_QWORD *)result = a2 - 16382;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3FFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x3FFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0xFFF | ((-a2 & 0x3FFF) << 12);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_QWORD *)(result + 8) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t dispatch thunk of LoggingEventProcessorFormatterType.format<A>(processEvent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

ValueMetadata *type metadata accessor for DefaultLoggingEventProcessorFormatter()
{
  return &type metadata for DefaultLoggingEventProcessorFormatter;
}

uint64_t destroy for JSONLoggingEventProcessorFormatter(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0(a1 + 8);
}

uint64_t initializeWithCopy for JSONLoggingEventProcessorFormatter(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a1 + 8, a2 + 8);
  return a1;
}

_QWORD *assignWithCopy for JSONLoggingEventProcessorFormatter(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  return a1;
}

uint64_t assignWithTake for JSONLoggingEventProcessorFormatter(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONLoggingEventProcessorFormatter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONLoggingEventProcessorFormatter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONLoggingEventProcessorFormatter()
{
  return &type metadata for JSONLoggingEventProcessorFormatter;
}

uint64_t sub_1A5F3AF40(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  _OWORD v7[2];

  sub_1A5EDCB9C(a1[2] + OBJC_IVAR___AAJSON_value, (uint64_t)&v5);
  if (v6)
  {
    sub_1A5EF1B2C(&v5, v7);
    *(_QWORD *)&v5 = 0;
    *((_QWORD *)&v5 + 1) = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_1A5F641B4();
    swift_bridgeObjectRelease();
    sub_1A5F641B4();
    sub_1A5F646F4();
    v2 = v5;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  }
  else
  {
    sub_1A5EDCB44((uint64_t)&v5);
    v3 = a1[1];
    *(_QWORD *)&v7[0] = *a1;
    *((_QWORD *)&v7[0] + 1) = v3;
    swift_bridgeObjectRetain();
    sub_1A5F641B4();
    return *(_QWORD *)&v7[0];
  }
  return v2;
}

uint64_t UploadBatchEventConfig.maxEventsPerSessionBatch.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch);
}

uint64_t UploadBatchEventConfig.maxByteSizePerSessionBatch.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch);
}

uint64_t UploadBatchEventConfig.transparencyLoggingEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled);
}

uint64_t UploadBatchEventConfig.debuggingEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled);
}

uint64_t UploadBatchEventConfig.maxUploadTries.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries);
}

uint64_t UploadBatchEventConfig.directory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___AAUploadBatchEventConfig_directory;
  v4 = sub_1A5F63DD0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id UploadBatchEventConfig.__allocating_init(batchSize:batchDebugging:)(uint64_t a1, char a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return UploadBatchEventConfig.init(batchSize:batchDebugging:)(a1, a2);
}

id UploadBatchEventConfig.init(batchSize:batchDebugging:)(uint64_t a1, char a2)
{
  _BYTE *v2;
  _BYTE *v3;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  NSArray *v12;
  uint64_t v13;
  id result;
  objc_super v15;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = sub_1A5F63DD0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch] = a1;
  *(_QWORD *)&v3[OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch] = 500000;
  v3[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled] = 0;
  v3[OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled] = a2;
  *(_QWORD *)&v3[OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries] = 5;
  v11 = v3;
  v12 = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, 1uLL, 1);
  v13 = sub_1A5F642A4();

  if (*(_QWORD *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1A5F63D40();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, char *, uint64_t))(v8 + 32))(&v11[OBJC_IVAR___AAUploadBatchEventConfig_directory], v10, v7);

    v15.receiver = v11;
    v15.super_class = ObjectType;
    return objc_msgSendSuper2(&v15, sel_init);
  }
  else
  {
    result = (id)swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

id UploadBatchEventConfig.with(maxByteSizePerSessionBatch:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, double);
  _BYTE *v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  objc_super v19;

  v2 = v1;
  v18 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = sub_1A5F63DD0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch);
  v10 = *(_BYTE *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled);
  v11 = *(_BYTE *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled);
  v12 = *(_QWORD *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries);
  v13 = *(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16);
  v13(v8, v2 + OBJC_IVAR___AAUploadBatchEventConfig_directory, v4, v6);
  v14 = objc_allocWithZone(ObjectType);
  *(_QWORD *)&v14[OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch] = v9;
  *(_QWORD *)&v14[OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch] = v18;
  v14[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled] = v10;
  v14[OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled] = v11;
  *(_QWORD *)&v14[OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries] = v12;
  ((void (*)(_BYTE *, char *, uint64_t))v13)(&v14[OBJC_IVAR___AAUploadBatchEventConfig_directory], v8, v4);
  v19.receiver = v14;
  v19.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v15;
}

id UploadBatchEventConfig.with(transparencyLoggingEnabled:)(int a1)
{
  uint64_t v1;
  uint64_t v2;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, double);
  _BYTE *v14;
  id v15;
  uint64_t v17;
  int v18;
  objc_super v19;

  v2 = v1;
  v18 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = sub_1A5F63DD0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch);
  v11 = *(_BYTE *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled);
  v12 = *(_QWORD *)(v2 + OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries);
  v13 = *(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16);
  v13(v8, v2 + OBJC_IVAR___AAUploadBatchEventConfig_directory, v4, v6);
  v14 = objc_allocWithZone(ObjectType);
  *(_QWORD *)&v14[OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch] = v9;
  *(_QWORD *)&v14[OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch] = v10;
  v14[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled] = v18;
  v14[OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled] = v11;
  *(_QWORD *)&v14[OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries] = v12;
  ((void (*)(_BYTE *, char *, uint64_t))v13)(&v14[OBJC_IVAR___AAUploadBatchEventConfig_directory], v8, v4);
  v19.receiver = v14;
  v19.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v15;
}

id UploadBatchEventConfig.with(directory:)(uint64_t a1)
{
  uint64_t v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, double);
  _BYTE *v13;
  id v14;
  uint64_t v16;
  uint64_t v17;
  objc_super v18;

  v17 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_1A5F63DD0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch);
  v9 = *(_BYTE *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled);
  v10 = *(_BYTE *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries);
  v12 = *(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16);
  v12(v7, v17, v3, v5);
  v13 = objc_allocWithZone(ObjectType);
  *(_QWORD *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxEventsPerSessionBatch] = v16;
  *(_QWORD *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxByteSizePerSessionBatch] = v8;
  v13[OBJC_IVAR___AAUploadBatchEventConfig_transparencyLoggingEnabled] = v9;
  v13[OBJC_IVAR___AAUploadBatchEventConfig_debuggingEnabled] = v10;
  *(_QWORD *)&v13[OBJC_IVAR___AAUploadBatchEventConfig_maxUploadTries] = v11;
  ((void (*)(_BYTE *, char *, uint64_t))v12)(&v13[OBJC_IVAR___AAUploadBatchEventConfig_directory], v7, v3);
  v18.receiver = v13;
  v18.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v18, sel_init);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v14;
}

id UploadBatchEventConfig.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void UploadBatchEventConfig.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id UploadBatchEventConfig.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A5F3BA20()
{
  return type metadata accessor for UploadBatchEventConfig();
}

uint64_t method lookup function for UploadBatchEventConfig()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UploadBatchEventConfig.__allocating_init(batchSize:batchDebugging:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1A5F3BA40@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

ValueMetadata *type metadata accessor for LazyOptions()
{
  return &type metadata for LazyOptions;
}

uint64_t sub_1A5F3BAA4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_1A5F3BC04(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

unint64_t sub_1A5F3BAE4()
{
  unint64_t result;

  result = qword_1EE80D250;
  if (!qword_1EE80D250)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F697F4, &type metadata for LazyOptions);
    atomic_store(result, (unint64_t *)&qword_1EE80D250);
  }
  return result;
}

unint64_t sub_1A5F3BB2C()
{
  unint64_t result;

  result = qword_1EE80D258;
  if (!qword_1EE80D258)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F697C4, &type metadata for LazyOptions);
    atomic_store(result, (unint64_t *)&qword_1EE80D258);
  }
  return result;
}

unint64_t sub_1A5F3BB74()
{
  unint64_t result;

  result = qword_1EE80D260;
  if (!qword_1EE80D260)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F6981C, &type metadata for LazyOptions);
    atomic_store(result, (unint64_t *)&qword_1EE80D260);
  }
  return result;
}

unint64_t sub_1A5F3BBBC()
{
  unint64_t result;

  result = qword_1EE80D268;
  if (!qword_1EE80D268)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F69854, &type metadata for LazyOptions);
    atomic_store(result, (unint64_t *)&qword_1EE80D268);
  }
  return result;
}

uint64_t sub_1A5F3BC04(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

id BridgedRawEventProperty.__allocating_init(dataName:requirement:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  objc_super v10;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = &v7[OBJC_IVAR___AARawEventProperty_dataName];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  *(_QWORD *)&v7[OBJC_IVAR___AARawEventProperty_requirement] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

id BridgedRawEventProperty.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BridgedRawEventProperty.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BridgedRawEventProperty.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for BridgedRawEventProperty()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BridgedRawEventProperty.__allocating_init(dataName:requirement:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

id BridgedSessionGroup.__allocating_init(groupName:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR___AASessionGroup_groupName];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t BridgedSessionGroup.groupName.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___AASessionGroup_groupName);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

id BridgedSessionGroup.init(groupName:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = &v2[OBJC_IVAR___AASessionGroup_groupName];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

id BridgedSessionGroup.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BridgedSessionGroup.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BridgedSessionGroup.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for BridgedSessionGroup()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BridgedSessionGroup.__allocating_init(groupName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1A5F3C130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1A5F3C148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(a12 + 16))(a1, a2, a3, a4, a5, a6, a7 & 1) & 1;
}

uint64_t sub_1A5F3C188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t sub_1A5F3C1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1A5F3C1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_1A5F3C1D0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1A5F3C1E8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_1A5F3C200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 64))();
}

uint64_t sub_1A5F3C218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t sub_1A5F3C220(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

void sub_1A5F3C238()
{
  __int128 *v0;
  _QWORD v1[4];

  sub_1A5F3D8A0(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1A5F3C284()
{
  uint64_t v1;
  unint64_t v2;

  sub_1A5EE1EF0(v1, v2);
  sub_1A5F64634();
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  sub_1A5F641B4();
  sub_1A5F0E98C(v1, v2);
  sub_1A5ECDD14();
  sub_1A5EDB074();
  sub_1A5F64100();
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  sub_1A5F641B4();
  sub_1A5F641B4();
  swift_bridgeObjectRelease();
  sub_1A5EF0908(v1, v2);
  return 0x7461427974706D65;
}

void sub_1A5F3C604()
{
  __int128 *v0;
  _BYTE v1[40];

  sub_1A5F3D8A0(v0, (uint64_t)v1);
  sub_1A5F3C238();
}

uint64_t sub_1A5F3C638(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = sub_1A5ED89B8(a1, a2);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v5, v6, v7);
  swift_release();
  swift_beginAccess();
  sub_1A5F53FB8(a1, a2);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1A5F3C834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v6 = sub_1A5ED89B8(a2, a3);
  v7 = v3 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager;
  v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 24);
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_fileManager), v8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v9 + 32))(&v34, v6, v8, v9);
  if (v4)
    return swift_release();
  if (v35 != 1)
  {
    sub_1A5EE5F08();
    swift_allocError();
    v25 = 2;
LABEL_10:
    *(_QWORD *)v24 = v25;
    *(_QWORD *)(v24 + 8) = 0;
    *(_QWORD *)(v24 + 16) = 0;
    *(_QWORD *)(v24 + 24) = 0;
    *(_BYTE *)(v24 + 32) = 0x80;
    swift_willThrow();
    return swift_release();
  }
  if (!v34)
  {
    sub_1A5EE5F08();
    swift_allocError();
    v25 = 3;
    goto LABEL_10;
  }
  sub_1A5ECE02C(v7, (uint64_t)v31);
  v10 = v32;
  v11 = v33;
  __swift_project_boxed_opaque_existential_1(v31, v32);
  sub_1A5ECD49C(0, &qword_1ED1CE1F0, (uint64_t (*)(uint64_t))sub_1A5ED7E58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A5F66C40;
  *(_QWORD *)(inited + 32) = 1701869940;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = 0x746E657665;
  *(_QWORD *)(inited + 56) = 0xE500000000000000;
  *(_QWORD *)(inited + 72) = v13;
  *(_QWORD *)(inited + 80) = 1635017060;
  *(_QWORD *)(inited + 88) = 0xE400000000000000;
  sub_1A5EF08A0();
  *(_QWORD *)(inited + 120) = v14;
  *(_QWORD *)(inited + 96) = a1;
  swift_bridgeObjectRetain();
  sub_1A5ED7CC8(inited);
  v15 = (void *)objc_opt_self();
  v16 = (void *)sub_1A5F640A0();
  swift_bridgeObjectRelease();
  v28 = 0;
  v17 = objc_msgSend(v15, sel_dataWithJSONObject_options_error_, v16, 0, &v28);

  v18 = v28;
  if (v17)
  {
    v19 = sub_1A5F63E3C();
    v21 = v20;

    v29 = v19;
    v30 = v21;
    if (qword_1ED1CDAF0 != -1)
      swift_once();
    sub_1A5F63E54();
    v22 = v29;
    v23 = v30;
    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(v29, v30, v6, v10, v11);
    swift_release();
    sub_1A5EF0908(v22, v23);
  }
  else
  {
    v27 = v18;
    sub_1A5F63CE0();

    swift_willThrow();
    swift_release();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
}

uint64_t sub_1A5F3CB74()
{
  return type metadata accessor for UploadDropbox(0);
}

uint64_t *sub_1A5F3CB7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    sub_1A5EF3B58();
    v8 = v7;
    v9 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v11 = sub_1A5F63DD0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
  }
  return a1;
}

void *sub_1A5F3CC50(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v14;

  sub_1A5EF3B58();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 1, v6);
  v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      v14 = sub_1A5F63DD0();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(a1, a2, v14);
      return a1;
    }
    sub_1A5ED4D44((uint64_t)a1, (uint64_t (*)(_QWORD))sub_1A5EF3B58);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v12 = sub_1A5F63DD0();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

void *sub_1A5F3CD58(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1A5EF3B58();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v9 = sub_1A5F63DD0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

void *sub_1A5F3CE08(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v14;

  sub_1A5EF3B58();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 1, v6);
  v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      v14 = sub_1A5F63DD0();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(a1, a2, v14);
      return a1;
    }
    sub_1A5ED4D44((uint64_t)a1, (uint64_t (*)(_QWORD))sub_1A5EF3B58);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v12 = sub_1A5F63DD0();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

uint64_t sub_1A5F3CF10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  sub_1A5EF3B58();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1A5F3CF5C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  sub_1A5EF3B58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1A5F3CFAC(uint64_t a1)
{
  uint64_t v2;

  sub_1A5EF3B58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1A5F3CFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5EF3B58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_1A5F3D024(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_1A5F64238();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_1A5EE0094(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_1A5EE0094((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_1A5F64700();
  __break(1u);
  return result;
}

uint64_t sub_1A5F3D17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v28 = a6;
  v29 = a7;
  v27[1] = a4;
  v7 = sub_1A5F63DD0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v27 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v27 - v15;
  v17 = type metadata accessor for UploadDropbox.Debugging(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5ED5E80((uint64_t)v19);
  sub_1A5EF3B58();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20);
  if ((_DWORD)result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v19, v7);
    v27[0] = v16;
    sub_1A5F63D7C();
    sub_1A5F63D88();
    v22 = *(void (**)(char *, uint64_t))(v8 + 8);
    v22(v10, v7);
    sub_1A5F63BF0();
    swift_allocObject();
    sub_1A5F63BE4();
    v30 = v28;
    v31 = v29;
    sub_1A5F3D4E8();
    v23 = sub_1A5F63BD8();
    v25 = v24;
    swift_release();
    sub_1A5F63E48();
    sub_1A5EF0908(v23, v25);
    v26 = v27[0];
    v22(v13, v7);
    return ((uint64_t (*)(uint64_t, uint64_t))v22)(v26, v7);
  }
  return result;
}

unint64_t sub_1A5F3D4E8()
{
  unint64_t result;

  result = qword_1EE80D288;
  if (!qword_1EE80D288)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F67CB4, &type metadata for UploadResponse);
    atomic_store(result, &qword_1EE80D288);
  }
  return result;
}

uint64_t sub_1A5F3D52C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5F3D550()
{
  return swift_deallocObject();
}

uint64_t sub_1A5F3D560()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1A5F3D58C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unsigned __int8 a5)
{
  int v5;
  uint64_t result;

  v5 = a5 >> 5;
  if (v5 == 3 || v5 == 2)
    return swift_bridgeObjectRetain();
  if (!(a5 >> 5))
  {
    swift_bridgeObjectRetain();
    return sub_1A5EE1EF0(a3, a4);
  }
  return result;
}

uint64_t destroy for UploadDropbox.Errors(uint64_t a1)
{
  return sub_1A5F3D5F4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_1A5F3D5F4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unsigned __int8 a5)
{
  int v5;
  uint64_t result;

  v5 = a5 >> 5;
  if (v5 == 3 || v5 == 2)
    return swift_bridgeObjectRelease();
  if (!(a5 >> 5))
  {
    swift_bridgeObjectRelease();
    return sub_1A5EF0908(a3, a4);
  }
  return result;
}

uint64_t initializeWithCopy for UploadDropbox.Errors(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A5F3D58C(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for UploadDropbox.Errors(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A5F3D58C(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1A5F3D5F4(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for UploadDropbox.Errors(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1A5F3D5F4(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for UploadDropbox.Errors(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x1FC && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 508);
  v3 = ((*(unsigned __int8 *)(a1 + 32) >> 5) | (8
                                              * ((*(_QWORD *)(a1 + 24) >> 60) & 3 | (4
                                                                                   * ((*(unsigned __int8 *)(a1 + 32) >> 1) & 0xF))))) ^ 0x1FF;
  if (v3 >= 0x1FB)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for UploadDropbox.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1FB)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 508;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x1FC)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x1FC)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = ((-a2 >> 3) & 3) << 60;
      *(_BYTE *)(result + 32) = ((((-a2 >> 3) & 0x3F) - (a2 << 6)) >> 1) & 0xFE;
    }
  }
  return result;
}

uint64_t sub_1A5F3D824(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 32);
  v2 = (char)v1;
  v3 = v1 >> 5;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1A5F3D844(uint64_t result)
{
  *(_BYTE *)(result + 32) &= 0x1Fu;
  return result;
}

uint64_t sub_1A5F3D854(uint64_t result, unsigned int a2)
{
  char v2;

  if (a2 < 4)
  {
    v2 = *(_BYTE *)(result + 32) & 1 | (32 * a2);
    *(_QWORD *)(result + 24) &= 0xCFFFFFFFFFFFFFFFLL;
    *(_BYTE *)(result + 32) = v2;
  }
  else
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for UploadDropbox.Errors()
{
  return &type metadata for UploadDropbox.Errors;
}

uint64_t sub_1A5F3D8A0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

BOOL sub_1A5F3D8B8()
{
  type metadata accessor for TimedData();
  if (swift_dynamicCastMetatype())
  {
    type metadata accessor for BridgedTimedData();
    if (swift_dynamicCastMetatype())
      return 1;
  }
  type metadata accessor for EventData();
  if (swift_dynamicCastMetatype() && (type metadata accessor for BridgedEventData(), swift_dynamicCastMetatype()))
    return 1;
  else
    return swift_dynamicCastMetatype() != 0;
}

uint64_t sub_1A5F3D97C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR___AAEventProperty_dataKey);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A5F3D9BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR___AAEventProperty_requirement);
  if (v1 == 1)
    return 1;
  if (!v1)
    return 0;
  result = sub_1A5F648A4();
  __break(1u);
  return result;
}

uint64_t sub_1A5F3DA24()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR___AAEventProperty_dataType);
}

BOOL sub_1A5F3DA3C()
{
  return sub_1A5F3D8B8();
}

ValueMetadata *type metadata accessor for BridgedEventMirrorProperty()
{
  return &type metadata for BridgedEventMirrorProperty;
}

uint64_t dispatch thunk of Uploadable.payload()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A5F3DA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(a9 + 8))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t sub_1A5F3DA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1A5F3DAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1A5F3DACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t sub_1A5F3DAE4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

void sub_1A5F3DAFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[40];

  sub_1A5EDF1F8(a1, (uint64_t)v7);
  os_unfair_lock_lock_with_options();
  swift_beginAccess();
  v2 = sub_1A5EBD268((uint64_t)v7);
  v4 = v3;
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1[11] + 16));
  if (v4)
  {
    v5 = *__swift_project_boxed_opaque_existential_1(v1 + 4, v1[7]);
    v6 = OBJC_IVAR____TtC12AppAnalytics13UploadDropbox_lock;
    os_unfair_lock_lock_with_options();
    sub_1A5F3C638(v2, v4);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)(v5 + v6) + 16));
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A5F3DBFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  return swift_task_switch();
}

uint64_t sub_1A5F3DC1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0[5] + 24);
  ObjectType = swift_getObjectType();
  v5 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v1 + 8) + *(_QWORD *)(v1 + 8));
  v3 = (_QWORD *)swift_task_alloc();
  v0[10] = v3;
  *v3 = v0;
  v3[1] = sub_1A5F3DC9C;
  return v5(v0[6], ObjectType, v1);
}

uint64_t sub_1A5F3DC9C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  v4 = *v3;
  *(_QWORD *)(v4 + 88) = a1;
  *(_QWORD *)(v4 + 96) = a2;
  *(_BYTE *)(v4 + 104) = a3;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5F3DCFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  if (qword_1ED1CFC08 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v14 = *(_QWORD *)(v0 + 40);
  v5 = (void *)qword_1ED1CE7B0;
  v6 = *(_BYTE *)(v0 + 104);
  sub_1A5EDD448();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1A5F66C40;
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1A5EE19C8();
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 32) = v4;
  *(_QWORD *)(v7 + 40) = v3;
  v10 = v5;
  swift_bridgeObjectRetain();
  v11 = sub_1A5F0C8F0(v2, v1, v6);
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = v9;
  *(_QWORD *)(v7 + 72) = v11;
  *(_QWORD *)(v7 + 80) = v12;
  sub_1A5F64454();
  sub_1A5F63F80();
  swift_bridgeObjectRelease();

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v14 + 32), *(_QWORD *)(v14 + 56));
  sub_1A5EBC7C4(v4, v3, v2, v1, v6);
  sub_1A5EF8280(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5F3DF70()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A5F3DF94()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A5F3DFD0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1A5F3E034;
  return v6(a1);
}

uint64_t sub_1A5F3E034()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A5F3E080()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1A5EF0908(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A5F3E0D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 104);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1A5F3E150;
  *(_OWORD *)(v4 + 64) = v5;
  *(_QWORD *)(v4 + 48) = v0 + 40;
  *(_QWORD *)(v4 + 56) = v3;
  *(_QWORD *)(v4 + 40) = v2;
  return swift_task_switch();
}

uint64_t sub_1A5F3E150()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A5F3E198()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5F3E1BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A5F3E150;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE80D2A0 + dword_1EE80D2A0))(a1, v4);
}

void sub_1A5F3E22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v6 = sub_1A5F64160();
  MEMORY[0x1E0C80A78](v6);
  v7 = (void *)objc_opt_self();
  v8 = (void *)sub_1A5F63E24();
  v33 = 0;
  v9 = objc_msgSend(v7, sel_JSONObjectWithData_options_error_, v8, 0, &v33);

  v10 = v33;
  if (v9)
  {
    sub_1A5F645C8();
    swift_unknownObjectRelease();
    __swift_project_boxed_opaque_existential_1(&v34, v36);
    v11 = sub_1A5F64874();
    v33 = 0;
    v12 = objc_msgSend(v7, sel_dataWithJSONObject_options_error_, v11, 3, &v33);
    swift_unknownObjectRelease();
    v13 = v33;
    if (v12)
    {
      v14 = sub_1A5F63E3C();
      v16 = v15;

      sub_1A5F64154();
      v17 = sub_1A5F6413C();
      if (v18)
      {
        v19 = v17;
        v20 = v18;
        if (qword_1ED1CFC08 != -1)
          swift_once();
        v21 = (void *)qword_1ED1CE7B0;
        sub_1A5EDD448();
        v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_1A5F66C40;
        v23 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEA968];
        v24 = sub_1A5EE19C8();
        *(_QWORD *)(v22 + 32) = a3;
        *(_QWORD *)(v22 + 40) = a4;
        *(_QWORD *)(v22 + 96) = v23;
        *(_QWORD *)(v22 + 104) = v24;
        *(_QWORD *)(v22 + 64) = v24;
        *(_QWORD *)(v22 + 72) = v19;
        *(_QWORD *)(v22 + 80) = v20;
        v25 = v21;
        swift_bridgeObjectRetain();
        sub_1A5F64454();
        sub_1A5F63F80();

        swift_bridgeObjectRelease();
        sub_1A5EF0908(v14, v16);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v34);
      }
      else
      {
        __break(1u);
      }
      return;
    }
    v28 = v13;
    v27 = (void *)sub_1A5F63CE0();

    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v34);
  }
  else
  {
    v26 = v10;
    v27 = (void *)sub_1A5F63CE0();

    swift_willThrow();
  }
  if (qword_1ED1CFC08 != -1)
    swift_once();
  v29 = (id)qword_1ED1CE7B0;
  sub_1A5F64448();
  sub_1A5EDD448();
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1A5F679D0;
  v34 = 0;
  v35 = 0xE000000000000000;
  v33 = v27;
  sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
  sub_1A5F646F4();
  v31 = v34;
  v32 = v35;
  *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v30 + 64) = sub_1A5EE19C8();
  *(_QWORD *)(v30 + 32) = v31;
  *(_QWORD *)(v30 + 40) = v32;
  sub_1A5F63F80();

  swift_bridgeObjectRelease();
}

void sub_1A5F3E600(char *a1)
{
  sub_1A5F42DEC(*a1);
}

unint64_t sub_1A5F3E610()
{
  unint64_t result;

  result = qword_1EE80D2B0;
  if (!qword_1EE80D2B0)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for TimestampGranularity, &type metadata for TimestampGranularity);
    atomic_store(result, (unint64_t *)&qword_1EE80D2B0);
  }
  return result;
}

void sub_1A5F3E654()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A5F64910();
  __asm { BR              X9 }
}

uint64_t sub_1A5F3E6A0()
{
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  return sub_1A5F64928();
}

void sub_1A5F3E710()
{
  __asm { BR              X10 }
}

uint64_t sub_1A5F3E74C()
{
  sub_1A5F6419C();
  return swift_bridgeObjectRelease();
}

void sub_1A5F3E7A8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A5F64910();
  __asm { BR              X9 }
}

uint64_t sub_1A5F3E7F0()
{
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  return sub_1A5F64928();
}

AppAnalytics::TimestampGranularity_optional sub_1A5F3E860(Swift::String *a1)
{
  return TimestampGranularity.init(rawValue:)(*a1);
}

uint64_t sub_1A5F3E86C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A5F3E89C + 4 * byte_1A5F69BE4[*v0]))();
}

void sub_1A5F3E89C(_QWORD *a1@<X8>)
{
  *a1 = 7954788;
  a1[1] = 0xE300000000000000;
}

void sub_1A5F3E8B0(_QWORD *a1@<X8>)
{
  *a1 = 1920298856;
  a1[1] = 0xE400000000000000;
}

void sub_1A5F3E8C4(_QWORD *a1@<X8>)
{
  *a1 = 0x6574756E696DLL;
  a1[1] = 0xE600000000000000;
}

void sub_1A5F3E8DC(_QWORD *a1@<X8>)
{
  *a1 = 0x72657474696ALL;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1A5F3E8F4()
{
  sub_1A5F3EA58();
  return sub_1A5F64280();
}

uint64_t sub_1A5F3E950()
{
  sub_1A5F3EA58();
  return sub_1A5F64250();
}

uint64_t storeEnumTagSinglePayload for TimestampGranularity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A5F3E9E8 + 4 * byte_1A5F69BEE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A5F3EA1C + 4 * byte_1A5F69BE9[v4]))();
}

uint64_t sub_1A5F3EA1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5F3EA24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5F3EA2CLL);
  return result;
}

uint64_t sub_1A5F3EA38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5F3EA40);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A5F3EA44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5F3EA4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1A5F3EA58()
{
  unint64_t result;

  result = qword_1EE80D2B8;
  if (!qword_1EE80D2B8)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for TimestampGranularity, &type metadata for TimestampGranularity);
    atomic_store(result, (unint64_t *)&qword_1EE80D2B8);
  }
  return result;
}

BOOL sub_1A5F3EA9C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1A5F3EAAC()
{
  return sub_1A5F6491C();
}

uint64_t sub_1A5F3EAD0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A5F64880() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A5F64880();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A5F3EBB0()
{
  sub_1A5F64910();
  sub_1A5F6491C();
  return sub_1A5F64928();
}

uint64_t sub_1A5F3EBF4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1A5F64880();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

BOOL sub_1A5F3EC70(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A5F3EA9C(*a1, *a2);
}

uint64_t sub_1A5F3EC88()
{
  return sub_1A5F3EBB0();
}

uint64_t sub_1A5F3EC9C()
{
  return sub_1A5F3EAAC();
}

uint64_t sub_1A5F3ECB0()
{
  sub_1A5F64910();
  sub_1A5F3EAAC();
  return sub_1A5F64928();
}

uint64_t sub_1A5F3ECF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5F3EAD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5F3ED28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5F0C23C();
  *a1 = result;
  return result;
}

uint64_t sub_1A5F3ED58(uint64_t a1)
{
  MEMORY[0x1A85B8C3C](&unk_1A5F6A168, a1);
  return sub_1A5F6497C();
}

uint64_t sub_1A5F3ED8C(uint64_t a1)
{
  MEMORY[0x1A85B8C3C](&unk_1A5F6A168, a1);
  return sub_1A5F64988();
}

uint64_t sub_1A5F3EDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5F3EBF4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A5F3EDF4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5EFC25C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1A5F3EE28(uint64_t a1)
{
  MEMORY[0x1A85B8C3C](&unk_1A5F6A2F8, a1);
  return sub_1A5F6497C();
}

uint64_t sub_1A5F3EE5C(uint64_t a1)
{
  MEMORY[0x1A85B8C3C](&unk_1A5F6A2F8, a1);
  return sub_1A5F64988();
}

BOOL sub_1A5F3EE90(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A5F3EA9C(*a1, *a2);
}

uint64_t sub_1A5F3EEA4()
{
  return sub_1A5F3EBB0();
}

uint64_t sub_1A5F3EEB4()
{
  return sub_1A5F3EAAC();
}

uint64_t sub_1A5F3EEC4()
{
  sub_1A5F64910();
  sub_1A5F3EAAC();
  return sub_1A5F64928();
}

uint64_t sub_1A5F3EF08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5F3EAD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5F3EF34(uint64_t a1)
{
  MEMORY[0x1A85B8C3C](&unk_1A5F6A1E0, a1);
  return sub_1A5F6497C();
}

uint64_t sub_1A5F3EF68(uint64_t a1)
{
  MEMORY[0x1A85B8C3C](&unk_1A5F6A1E0, a1);
  return sub_1A5F64988();
}

uint64_t static HeartbeatEventService.URLSessionIdentifier.getter()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = qword_1EE80D2C0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static HeartbeatEventService.URLSessionIdentifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  qword_1EE80D2C0 = a1;
  qword_1EE80D2C8 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static HeartbeatEventService.URLSessionIdentifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1A5F3F084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5F41104(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A5F3F0A8(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1A5F3F0B4()
{
  sub_1A5EF8C6C();
  return sub_1A5F6497C();
}

uint64_t sub_1A5F3F0DC()
{
  sub_1A5EF8C6C();
  return sub_1A5F64988();
}

uint64_t static HeartbeatEventService.sendHeartbeat<A>(client:debugFolderName:heartbeatValue:log:metadata:url:version:)(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  void *v30;
  char *v31;
  void *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v56 = a3;
  v54 = a8;
  v55 = a2;
  v45 = a7;
  v46 = a6;
  v47 = a4;
  v50 = a11;
  v51 = a5;
  v52 = a9;
  v53 = a1;
  v57 = *(_QWORD *)(a10 - 8);
  v49 = *(_QWORD *)(v57 + 64);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v12;
  v13 = type metadata accessor for HeartbeatEventService.Metadata();
  v44 = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(v44 + 64);
  MEMORY[0x1E0C80A78](v13);
  v42 = (uint64_t)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A5F63DD0();
  v16 = *(_QWORD *)(v15 - 8);
  v40 = v15;
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  v41 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5EF17C8(0, &qword_1ED1CCD78, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v39 - v19;
  v48 = (uint64_t)&v39 - v19;
  v21 = sub_1A5F64358();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v45, v15);
  sub_1A5EF89C8(v46, (uint64_t)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = v57;
  (*(void (**)(char *, unint64_t, uint64_t))(v57 + 16))(v12, v47, a10);
  v23 = (*(unsigned __int8 *)(v16 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v24 = (v17 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v47 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  v25 = (*(unsigned __int8 *)(v44 + 80) + v47 + 8) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  v26 = (v14 + *(unsigned __int8 *)(v22 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v27 = (v49 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (char *)swift_allocObject();
  *((_QWORD *)v28 + 2) = 0;
  *((_QWORD *)v28 + 3) = 0;
  v29 = v50;
  v30 = v51;
  *((_QWORD *)v28 + 4) = a10;
  *((_QWORD *)v28 + 5) = v29;
  *((_QWORD *)v28 + 6) = v30;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v28[v23], v41, v40);
  v31 = &v28[v24];
  v32 = v53;
  v33 = v52;
  *(_QWORD *)v31 = v54;
  *((_QWORD *)v31 + 1) = v33;
  *(_QWORD *)&v28[v47] = v32;
  sub_1A5EF8A0C(v42, (uint64_t)&v28[v25]);
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(&v28[v26], v43, a10);
  v34 = &v28[v27];
  v35 = v56;
  *(_QWORD *)v34 = v55;
  *((_QWORD *)v34 + 1) = v35;
  swift_bridgeObjectRetain();
  v36 = v30;
  swift_bridgeObjectRetain();
  v37 = v32;
  sub_1A5F40B9C(v48, (uint64_t)&unk_1EE80D2D8, (uint64_t)v28);
  return swift_release();
}

uint64_t sub_1A5F3F3CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v8 + 200) = v18;
  *(_QWORD *)(v8 + 208) = v19;
  *(_QWORD *)(v8 + 184) = v16;
  *(_QWORD *)(v8 + 192) = v17;
  *(_OWORD *)(v8 + 168) = v15;
  *(_QWORD *)(v8 + 152) = a7;
  *(_QWORD *)(v8 + 160) = a8;
  *(_QWORD *)(v8 + 136) = a5;
  *(_QWORD *)(v8 + 144) = a6;
  *(_QWORD *)(v8 + 128) = a4;
  sub_1A5EF17C8(0, (unint64_t *)&qword_1ED1CE6B0, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  *(_QWORD *)(v8 + 216) = swift_task_alloc();
  v9 = sub_1A5F63D10();
  *(_QWORD *)(v8 + 224) = v9;
  *(_QWORD *)(v8 + 232) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 240) = swift_task_alloc();
  *(_QWORD *)(v8 + 248) = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v8 + 256) = swift_task_alloc();
  *(_QWORD *)(v8 + 264) = type metadata accessor for HeartbeatEventService.Metadata();
  *(_QWORD *)(v8 + 272) = swift_task_alloc();
  v11 = type metadata accessor for RequestData(0, v18, v19, v10);
  *(_QWORD *)(v8 + 280) = v11;
  *(_QWORD *)(v8 + 288) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 296) = swift_task_alloc();
  v12 = sub_1A5F63DD0();
  *(_QWORD *)(v8 + 304) = v12;
  *(_QWORD *)(v8 + 312) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 320) = swift_task_alloc();
  *(_QWORD *)(v8 + 328) = swift_task_alloc();
  *(_QWORD *)(v8 + 336) = swift_task_alloc();
  *(_QWORD *)(v8 + 344) = swift_task_alloc();
  v13 = sub_1A5F63B90();
  *(_QWORD *)(v8 + 352) = v13;
  *(_QWORD *)(v8 + 360) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v8 + 368) = swift_task_alloc();
  return swift_task_switch();
}

void sub_1A5F3F598()
{
  _QWORD *v0;
  NSArray *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, 1uLL, 1);
  v2 = (_QWORD *)sub_1A5F642A4();

  if (v2[2])
  {
    v3 = v0[43];
    v5 = v0[38];
    v4 = v0[39];
    v7 = v0[25];
    v6 = v0[26];
    v10 = v0[34];
    v9 = v0[21];
    v8 = v0[17];
    v0[47] = v2[4];
    v0[48] = v2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v8, v5);
    sub_1A5F63B60();
    sub_1A5F63B30();
    sub_1A5F641B4();
    sub_1A5F63B84();
    swift_bridgeObjectRelease();
    sub_1A5EE7084();
    sub_1A5F63B84();
    swift_bridgeObjectRelease();
    sub_1A5F63B84();
    sub_1A5EF89C8(v9, v10);
    v0[2] = v7;
    v0[3] = v7;
    v0[4] = v6;
    v0[5] = v6;
    type metadata accessor for RequestData.EventData.Event();
  }
  swift_bridgeObjectRelease();
  sub_1A5F6443C();
  sub_1A5F63F80();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  __asm { BR              X0 }
}

uint64_t sub_1A5F3FB40(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 440) = a1;
  *(_QWORD *)(v3 + 448) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5F3FBC8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v22 = v0[51];
  v21 = v0[43];
  v2 = v0[38];
  v3 = v0[39];
  v5 = v0[29];
  v4 = v0[30];
  v7 = v0[27];
  v6 = v0[28];
  v20 = (_QWORD *)(v1[37] + *((int *)v1 + 114));
  sub_1A5F63B84();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(uint64_t))(v5 + 104);
  v8(v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v7, 1, 1, v2);
  swift_bridgeObjectRetain();
  sub_1A5F63DB8();
  v9 = v20[1];
  v0[6] = *v20;
  v0[7] = v9;
  v8(v4);
  sub_1A5ED57CC();
  swift_bridgeObjectRetain();
  sub_1A5F63DC4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_bridgeObjectRelease();
  v10 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v10(v21, v2);
  sub_1A5F63E48();
  v11 = v0[53];
  if (!v22)
  {
    sub_1A5EDD448();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1A5F66C40;
    __asm { BR              X11 }
  }
  v12 = v0[49];
  v13 = v0[50];
  v14 = v1[42];
  v15 = v1[38];
  sub_1A5EF0908(v1[52], v11);
  sub_1A5EF0908(v12, v13);
  swift_bridgeObjectRelease();
  v10(v14, v15);
  v17 = v1[45];
  v16 = v1[46];
  v18 = v1[44];
  (*(void (**)(_QWORD, _QWORD))(v1[36] + 8))(v1[37], v1[35]);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_1A5F40610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;

  v1 = *(_QWORD *)(v0 + 32);
  v10 = sub_1A5F63DD0();
  v2 = *(_QWORD *)(v10 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(type metadata accessor for HeartbeatEventService.Metadata() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + v4 + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v1 - 8);
  v11 = (*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80) + v6) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v10);
  swift_bridgeObjectRelease();

  v8 = sub_1A5F63F08();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v6, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v11, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5F4078C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(sub_1A5F63DD0() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for HeartbeatEventService.Metadata();
  v15 = v1[2];
  v14 = v1[3];
  v7 = v1[6];
  v8 = (char *)v1 + v5;
  v9 = *(_QWORD *)((char *)v1 + v5);
  v10 = *((_QWORD *)v8 + 1);
  v11 = *(_QWORD *)((char *)v1 + v6);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1A5F3E150;
  return sub_1A5F3F3CC(a1, v15, v14, v7, (uint64_t)v1 + v4, v9, v10, v11);
}

uint64_t sub_1A5F408DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch();
}

uint64_t sub_1A5F408F8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t);

  type metadata accessor for MescalSigner();
  v0[13] = swift_initStackObject();
  v3 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE80CF40 + dword_1EE80CF40);
  v1 = (_QWORD *)swift_task_alloc();
  v0[14] = v1;
  *v1 = v0;
  v1[1] = sub_1A5F40970;
  return v3(v0[10], v0[11]);
}

uint64_t sub_1A5F40970(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 120) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_1A5F40A00()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 120);
  swift_unknownObjectRelease();
  sub_1A5F6443C();
  sub_1A5EDD448();
  v2 = swift_allocObject();
  *(_QWORD *)(v0 + 32) = 0;
  *(_OWORD *)(v2 + 16) = xmmword_1A5F679D0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  *(_QWORD *)(v0 + 64) = v1;
  sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
  sub_1A5F646F4();
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1A5EE19C8();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  sub_1A5F63F80();
  swift_bridgeObjectRelease();
  sub_1A5F64634();
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0xE000000000000000;
  sub_1A5F641B4();
  *(_QWORD *)(v0 + 72) = v1;
  sub_1A5F646F4();

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1A5F40B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1A5F64358();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1A5F6434C();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_1A5F42364(a1, &qword_1ED1CCD78, (void (*)(uint64_t))MEMORY[0x1E0DF0750]);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A5F64328();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

ValueMetadata *type metadata accessor for HeartbeatEventService()
{
  return &type metadata for HeartbeatEventService;
}

uint64_t *initializeBufferWithCopyOfBuffer for HeartbeatEventService.Metadata(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A5F63F08();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for HeartbeatEventService.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for HeartbeatEventService.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for HeartbeatEventService.Metadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartbeatEventService.Metadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5F40F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1A5F63F08();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for HeartbeatEventService.Metadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5F40FC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A5F63F08();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

ValueMetadata *type metadata accessor for HeartbeatEventService.Metadata.CodingKeys()
{
  return &type metadata for HeartbeatEventService.Metadata.CodingKeys;
}

unint64_t sub_1A5F410C0()
{
  unint64_t result;

  result = qword_1EE80D340;
  if (!qword_1EE80D340)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F69EA4, &type metadata for HeartbeatEventService.Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE80D340);
  }
  return result;
}

uint64_t sub_1A5F41104(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7461446873756C66 && a2 == 0xE900000000000065;
  if (v2 || (sub_1A5F64880() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1A5F64880() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A5F64880();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1A5F41270(void *a1, void *a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  NSArray *v31;
  uint64_t v32;
  id v33;
  void *v34;
  _QWORD *v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  void (*v46)(char *, _QWORD, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  void *v71;
  char v72;
  id v73;
  void *v74;
  unsigned int v75;
  id v76;
  void *v77;
  char *v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  void *v91;
  void *v92;
  void *v93;
  id v94;
  char *v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  __int128 v103;
  void *v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  id v113;
  void *v114;
  id v115;
  id v116;
  void *v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(char *, uint64_t);
  void (*v134)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v135;
  unsigned int (*v136)(char *, uint64_t, uint64_t);
  char *v137;
  void *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  id v148;
  void (*v149)(char *, uint64_t);
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  id v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;

  v148 = a2;
  v156 = *MEMORY[0x1E0C80C00];
  v3 = sub_1A5F63B90();
  v4 = (void (*)(uint64_t))MEMORY[0x1E0CADF50];
  v5 = *(_QWORD **)(v3 - 8);
  v151 = v3;
  v152 = v5;
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v140 = (char *)&v133 - v9;
  sub_1A5EF17C8(0, qword_1ED1CBA58, (void (*)(uint64_t))MEMORY[0x1E0CB15C0]);
  MEMORY[0x1E0C80A78](v10);
  v144 = (char *)&v133 - v11;
  v145 = sub_1A5F63F74();
  v147 = *(_QWORD *)(v145 - 8);
  MEMORY[0x1E0C80A78](v145);
  v142 = (char *)&v133 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5EF17C8(0, (unint64_t *)&qword_1ED1CE6B0, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v133 - v14;
  v16 = sub_1A5F63D10();
  v149 = *(void (**)(char *, uint64_t))(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v133 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = sub_1A5F63DD0();
  v143 = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  v20 = (char *)&v133 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v146 = (char *)&v133 - v22;
  sub_1A5EF17C8(0, &qword_1ED1CBA48, v4);
  MEMORY[0x1E0C80A78](v23);
  v141 = (char *)&v133 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v133 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v133 - v29;
  v31 = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, 1uLL, 1);
  v32 = sub_1A5F642A4();

  if (*(_QWORD *)(v32 + 16))
  {
    v137 = v7;
    v139 = *(_QWORD *)(v32 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v138 = a1;
    v33 = objc_msgSend(a1, sel_originalRequest);
    if (v33)
    {
      v34 = v33;
      sub_1A5F63B54();

      v35 = v152;
      v36 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v152[7];
      v37 = v27;
      v38 = 0;
    }
    else
    {
      v35 = v152;
      v36 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v152[7];
      v37 = v27;
      v38 = 1;
    }
    v39 = v151;
    v36(v37, v38, 1, v151);
    sub_1A5F42310((uint64_t)v27, (uint64_t)v30);
    v136 = (unsigned int (*)(char *, uint64_t, uint64_t))v35[6];
    if (v136(v30, 1, v39) == 1)
    {
      swift_bridgeObjectRelease();
      sub_1A5F42364((uint64_t)v30, &qword_1ED1CBA48, (void (*)(uint64_t))MEMORY[0x1E0CADF50]);
LABEL_15:
      if (qword_1ED1CFC08 != -1)
        swift_once();
      v59 = (id)qword_1ED1CE7B0;
      sub_1A5F6443C();
      sub_1A5F63F80();

      return;
    }
    v40 = v35;
    v134 = v36;
    v41 = sub_1A5F63B78();
    v42 = v40;
    v44 = v43;
    v45 = (void (*)(char *, uint64_t))v42[1];
    v45(v30, v39);
    if (!v44)
    {
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    v133 = v45;
    v46 = (void (*)(char *, _QWORD, uint64_t))*((_QWORD *)v149 + 13);
    v46(v18, *MEMORY[0x1E0CAFD60], v16);
    v47 = v143;
    v48 = v150;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v143 + 56))(v15, 1, 1, v150);
    sub_1A5F63DB8();
    v139 = v41;
    *(_QWORD *)&v154 = v41;
    *((_QWORD *)&v154 + 1) = v44;
    v135 = v44;
    v46(v18, *MEMORY[0x1E0CAFD68], v16);
    sub_1A5ED57CC();
    v49 = MEMORY[0x1E0DEA968];
    v50 = v146;
    sub_1A5F63DC4();
    (*((void (**)(char *, uint64_t))v149 + 1))(v18, v16);
    v51 = *(void (**)(char *, uint64_t))(v47 + 8);
    v51(v20, v48);
    v52 = v148;
    v149 = v51;
    if (!v148)
    {
      v60 = (uint64_t)v144;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v147 + 56))(v144, 1, 1, v145);
      sub_1A5F42364(v60, qword_1ED1CBA58, (void (*)(uint64_t))MEMORY[0x1E0CB15C0]);
      if (qword_1ED1CFC08 != -1)
        swift_once();
      v61 = (void *)qword_1ED1CE7B0;
      sub_1A5EDD448();
      v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_1A5F679D0;
      *(_QWORD *)(v62 + 56) = v49;
      *(_QWORD *)(v62 + 64) = sub_1A5EE19C8();
      v63 = v135;
      *(_QWORD *)(v62 + 32) = v139;
      *(_QWORD *)(v62 + 40) = v63;
      v64 = v61;
      sub_1A5F64454();
      sub_1A5F63F80();

      swift_bridgeObjectRelease();
      v58 = v150;
      goto LABEL_42;
    }
    *(_QWORD *)&v154 = v148;
    v53 = v148;
    sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
    v54 = (uint64_t)v144;
    v55 = v145;
    v56 = swift_dynamicCast();
    v57 = v147;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v147 + 56))(v54, v56 ^ 1u, 1, v55);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v54, 1, v55) == 1)
    {
      sub_1A5F42364(v54, qword_1ED1CBA58, (void (*)(uint64_t))MEMORY[0x1E0CB15C0]);
      v58 = v150;
    }
    else
    {
      v65 = v142;
      (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v142, v54, v55);
      sub_1A5ECC4D8((unint64_t *)&unk_1EE80D350, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB15C0], MEMORY[0x1E0CB15B8]);
      v66 = sub_1A5F63CC8();
      v67 = sub_1A5F64130();
      if (*(_QWORD *)(v66 + 16))
      {
        v69 = sub_1A5EF11E8(v67, v68);
        v70 = v152;
        v71 = v138;
        if ((v72 & 1) != 0)
        {
          sub_1A5EF30B0(*(_QWORD *)(v66 + 56) + 32 * v69, (uint64_t)&v154);
        }
        else
        {
          v154 = 0u;
          v155 = 0u;
        }
      }
      else
      {
        v154 = 0u;
        v155 = 0u;
        v70 = v152;
        v71 = v138;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v155 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0 && !v153)
        {
          v73 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
          sub_1A5F63DA0();
          v74 = (void *)sub_1A5F6410C();
          swift_bridgeObjectRelease();
          v75 = objc_msgSend(v73, sel_fileExistsAtPath_, v74);

          if (!v75)
          {
            if (qword_1ED1CFC08 != -1)
              swift_once();
            v123 = (id)qword_1ED1CE7B0;
            sub_1A5F6443C();
            sub_1A5EDD448();
            v124 = swift_allocObject();
            *(_OWORD *)(v124 + 16) = xmmword_1A5F66C40;
            v125 = MEMORY[0x1E0DEA968];
            *(_QWORD *)(v124 + 56) = MEMORY[0x1E0DEA968];
            v126 = sub_1A5EE19C8();
            *(_QWORD *)(v124 + 64) = v126;
            v127 = v135;
            *(_QWORD *)(v124 + 32) = v139;
            *(_QWORD *)(v124 + 40) = v127;
            v128 = sub_1A5F63DA0();
            *(_QWORD *)(v124 + 96) = v125;
            *(_QWORD *)(v124 + 104) = v126;
            *(_QWORD *)(v124 + 72) = v128;
            *(_QWORD *)(v124 + 80) = v129;
            sub_1A5F63F80();

            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v147 + 8))(v65, v55);
            v95 = v50;
            v96 = v150;
            goto LABEL_48;
          }
          v76 = objc_msgSend(v71, sel_originalRequest);
          if (v76)
          {
            v77 = v76;
            v78 = v137;
            sub_1A5F63B54();

            v79 = (void (*)(char *, char *, uint64_t))v70[4];
            v80 = (uint64_t)v141;
            v81 = v151;
            v79(v141, v78, v151);
            v134((char *)v80, 0, 1, v81);
            v82 = v136((char *)v80, 1, v81);
            v83 = MEMORY[0x1E0DEA968];
            v84 = v139;
            if (v82 != 1)
            {
              v85 = v140;
              v79(v140, (char *)v80, v81);
              v86 = v150;
              if (qword_1ED1CFC08 != -1)
                swift_once();
              v87 = (void *)qword_1ED1CE7B0;
              sub_1A5EDD448();
              v88 = swift_allocObject();
              *(_OWORD *)(v88 + 16) = xmmword_1A5F679D0;
              *(_QWORD *)(v88 + 56) = v83;
              *(_QWORD *)(v88 + 64) = sub_1A5EE19C8();
              v89 = v135;
              *(_QWORD *)(v88 + 32) = v139;
              *(_QWORD *)(v88 + 40) = v89;
              v90 = v87;
              sub_1A5F64454();
              sub_1A5F63F80();

              swift_bridgeObjectRelease();
              if (qword_1ED1CBCF8 != -1)
                swift_once();
              v91 = (void *)qword_1ED1CBCF0;
              v92 = (void *)sub_1A5F63B3C();
              v93 = (void *)sub_1A5F63D64();
              v94 = objc_msgSend(v91, sel_uploadTaskWithRequest_fromFile_, v92, v93);

              objc_msgSend(v94, sel_resume);
              v133(v85, v151);
              (*(void (**)(char *, uint64_t))(v57 + 8))(v65, v55);
              v95 = v50;
              v96 = v86;
              goto LABEL_48;
            }
          }
          else
          {
            v80 = (uint64_t)v141;
            v134(v141, 1, 1, v151);
            v84 = v139;
          }
          sub_1A5F42364(v80, &qword_1ED1CBA48, (void (*)(uint64_t))MEMORY[0x1E0CADF50]);
          v58 = v150;
          if (qword_1ED1CFC08 != -1)
            swift_once();
          v130 = (id)qword_1ED1CE7B0;
          sub_1A5F6443C();
          sub_1A5EDD448();
          v131 = swift_allocObject();
          *(_OWORD *)(v131 + 16) = xmmword_1A5F679D0;
          *(_QWORD *)(v131 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v131 + 64) = sub_1A5EE19C8();
          v132 = v135;
          *(_QWORD *)(v131 + 32) = v84;
          *(_QWORD *)(v131 + 40) = v132;
          sub_1A5F63F80();

          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v147 + 8))(v65, v55);
LABEL_42:
          if (qword_1ED1CFC08 != -1)
            swift_once();
          v104 = (void *)qword_1ED1CE7B0;
          sub_1A5EDD448();
          v105 = swift_allocObject();
          *(_OWORD *)(v105 + 16) = xmmword_1A5F679D0;
          sub_1A5ECC4D8(&qword_1ED1CBA50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
          v106 = v104;
          v107 = sub_1A5F64844();
          v108 = v58;
          v110 = v109;
          v111 = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v105 + 56) = MEMORY[0x1E0DEA968];
          v112 = sub_1A5EE19C8();
          *(_QWORD *)(v105 + 64) = v112;
          *(_QWORD *)(v105 + 32) = v107;
          *(_QWORD *)(v105 + 40) = v110;
          sub_1A5F64454();
          sub_1A5F63F80();

          swift_bridgeObjectRelease();
          v113 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
          v114 = (void *)sub_1A5F63D64();
          *(_QWORD *)&v154 = 0;
          LODWORD(v106) = objc_msgSend(v113, sel_removeItemAtURL_error_, v114, &v154);

          if ((_DWORD)v106)
          {
            v115 = (id)v154;
          }
          else
          {
            v116 = (id)v154;
            v117 = (void *)sub_1A5F63CE0();

            swift_willThrow();
            v118 = (id)qword_1ED1CE7B0;
            sub_1A5F6443C();
            v119 = swift_allocObject();
            *(_OWORD *)(v119 + 16) = xmmword_1A5F66C40;
            v120 = sub_1A5F64844();
            *(_QWORD *)(v119 + 56) = v111;
            *(_QWORD *)(v119 + 64) = v112;
            *(_QWORD *)(v119 + 32) = v120;
            *(_QWORD *)(v119 + 40) = v121;
            *(_QWORD *)&v154 = 0;
            *((_QWORD *)&v154 + 1) = 0xE000000000000000;
            v153 = v117;
            sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
            sub_1A5F646F4();
            v122 = v154;
            *(_QWORD *)(v119 + 96) = v111;
            *(_QWORD *)(v119 + 104) = v112;
            *(_OWORD *)(v119 + 72) = v122;
            sub_1A5F63F80();

            swift_bridgeObjectRelease();
          }
          v95 = v50;
          v96 = v108;
LABEL_48:
          v149(v95, v96);
          return;
        }
      }
      else
      {
        sub_1A5EDCB44((uint64_t)&v154);
      }
      (*(void (**)(char *, uint64_t))(v57 + 8))(v65, v55);
      v58 = v150;
      v52 = v148;
    }
    v97 = v52;
    v98 = v135;
    if (qword_1ED1CFC08 != -1)
      swift_once();
    v99 = (id)qword_1ED1CE7B0;
    sub_1A5F6443C();
    sub_1A5EDD448();
    v100 = swift_allocObject();
    *(_OWORD *)(v100 + 16) = xmmword_1A5F66C40;
    v101 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v100 + 56) = MEMORY[0x1E0DEA968];
    v102 = sub_1A5EE19C8();
    *(_QWORD *)(v100 + 64) = v102;
    *(_QWORD *)(v100 + 32) = v139;
    *(_QWORD *)(v100 + 40) = v98;
    *(_QWORD *)&v154 = 0;
    *((_QWORD *)&v154 + 1) = 0xE000000000000000;
    v153 = v52;
    sub_1A5F646F4();
    v103 = v154;
    *(_QWORD *)(v100 + 96) = v101;
    *(_QWORD *)(v100 + 104) = v102;
    *(_OWORD *)(v100 + 72) = v103;
    sub_1A5F63F80();

    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  swift_bridgeObjectRelease();
  if (qword_1ED1CFC08 != -1)
    swift_once();
  v152 = (id)qword_1ED1CE7B0;
  sub_1A5F6443C();
  sub_1A5F63F80();

}

uint64_t sub_1A5F42310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5EF17C8(0, &qword_1ED1CBA48, (void (*)(uint64_t))MEMORY[0x1E0CADF50]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5F42364(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1A5EF17C8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t *sub_1A5F423A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 8) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v14(v12, v13, v4);
  }
  return a1;
}

_QWORD *sub_1A5F4245C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_QWORD *sub_1A5F424CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_1A5F4251C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_1A5F42584(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A5F42658 + 4 * byte_1A5F69D3A[(v9 - 1)]))();
}

void sub_1A5F426C8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t *sub_1A5F428BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A5F63F08();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for HeartbeatEventService.Metadata();
    v9 = *(int *)(v8 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v13 = *v11;
    v12 = v11[1];
    *v10 = v13;
    v10[1] = v12;
    v14 = *(int *)(v8 + 24);
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 36)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 36));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1A5F4298C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for HeartbeatEventService.Metadata();
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  v13 = *(int *)(v7 + 24);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(_QWORD *)(a1 + *(int *)(a3 + 36)) = *(_QWORD *)(a2 + *(int *)(a3 + 36));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A5F42A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v6 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for HeartbeatEventService.Metadata();
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(int *)(v7 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 36)) = *(_QWORD *)(a2 + *(int *)(a3 + 36));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A5F42B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for HeartbeatEventService.Metadata();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  *(_OWORD *)(a1 + *(int *)(v7 + 24)) = *(_OWORD *)(a2 + *(int *)(v7 + 24));
  *(_QWORD *)(a1 + *(int *)(a3 + 36)) = *(_QWORD *)(a2 + *(int *)(a3 + 36));
  return a1;
}

uint64_t sub_1A5F42B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1A5F63F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for HeartbeatEventService.Metadata();
  v8 = *(int *)(v7 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = *(int *)(v7 + 24);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 36)) = *(_QWORD *)(a2 + *(int *)(a3 + 36));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A5F42C2C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5F42C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for HeartbeatEventService.Metadata();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1A5F42CB4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5F42CC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for HeartbeatEventService.Metadata();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  return result;
}

void sub_1A5F42D38()
{
  JUMPOUT(0x1A85B8C3CLL);
}

void sub_1A5F42D48()
{
  JUMPOUT(0x1A85B8C3CLL);
}

void sub_1A5F42D58()
{
  JUMPOUT(0x1A85B8C3CLL);
}

uint64_t sub_1A5F42D70(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x7265746E756F63;
  else
    v2 = 0x6E61656C6F6F62;
  if ((a2 & 1) != 0)
    v3 = 0x7265746E756F63;
  else
    v3 = 0x6E61656C6F6F62;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1A5F64880();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

void sub_1A5F42DEC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5F42E3C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A5F42EA0 + 4 * byte_1A5F6A355[a2]))(7954788);
}

uint64_t sub_1A5F42EA0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 7954788 && v1 == 0xE300000000000000)
    v2 = 1;
  else
    v2 = sub_1A5F64880();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

AppAnalytics::SummarizedEventTrackingKind_optional __swiftcall SummarizedEventTrackingKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  AppAnalytics::SummarizedEventTrackingKind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A5F64778();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t SummarizedEventTrackingKind.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x7265746E756F63;
  else
    return 0x6E61656C6F6F62;
}

uint64_t sub_1A5F42FE0(char *a1, char *a2)
{
  return sub_1A5F42D70(*a1, *a2);
}

unint64_t sub_1A5F42FF0()
{
  unint64_t result;

  result = qword_1EE80D3D0;
  if (!qword_1EE80D3D0)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for SummarizedEventTrackingKind, &type metadata for SummarizedEventTrackingKind);
    atomic_store(result, (unint64_t *)&qword_1EE80D3D0);
  }
  return result;
}

uint64_t sub_1A5F43034()
{
  sub_1A5F64910();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  return sub_1A5F64928();
}

uint64_t sub_1A5F430A8()
{
  sub_1A5F6419C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5F430F0()
{
  sub_1A5F64910();
  sub_1A5F6419C();
  swift_bridgeObjectRelease();
  return sub_1A5F64928();
}

AppAnalytics::SummarizedEventTrackingKind_optional sub_1A5F43160(Swift::String *a1)
{
  return SummarizedEventTrackingKind.init(rawValue:)(*a1);
}

void sub_1A5F4316C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x6E61656C6F6F62;
  if (*v1)
    v2 = 0x7265746E756F63;
  *a1 = v2;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1A5F431A4()
{
  sub_1A5F43318();
  return sub_1A5F64280();
}

uint64_t sub_1A5F43200()
{
  sub_1A5F43318();
  return sub_1A5F64250();
}

uint64_t storeEnumTagSinglePayload for SummarizedEventTrackingKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5F43298 + 4 * byte_1A5F6A35F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5F432CC + 4 * byte_1A5F6A35A[v4]))();
}

uint64_t sub_1A5F432CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5F432D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5F432DCLL);
  return result;
}

uint64_t sub_1A5F432E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5F432F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5F432F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5F432FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SummarizedEventTrackingKind()
{
  return &type metadata for SummarizedEventTrackingKind;
}

unint64_t sub_1A5F43318()
{
  unint64_t result;

  result = qword_1EE80D3D8;
  if (!qword_1EE80D3D8)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for SummarizedEventTrackingKind, &type metadata for SummarizedEventTrackingKind);
    atomic_store(result, (unint64_t *)&qword_1EE80D3D8);
  }
  return result;
}

id static OS_os_log.analytics(_:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1A5EBE658();
    swift_bridgeObjectRetain();
    return (id)sub_1A5F64550();
  }
  else
  {
    if (qword_1ED1CFC08 != -1)
      swift_once();
    return (id)qword_1ED1CE7B0;
  }
}

uint64_t sub_1A5F43404(uint64_t a1)
{
  return sub_1A5F4341C(a1, qword_1ED1D2190);
}

uint64_t sub_1A5F43410(uint64_t a1)
{
  return sub_1A5F4341C(a1, qword_1ED1D21B0);
}

uint64_t sub_1A5F4341C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  id v4;

  v3 = sub_1A5F63F98();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  if (qword_1ED1CFC08 != -1)
    swift_once();
  v4 = (id)qword_1ED1CE7B0;
  return sub_1A5F63FA4();
}

uint64_t Group.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___AAGroup_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Group.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___AAGroup_startDate;
  v4 = sub_1A5F63F08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Group.contentType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___AAGroup_contentType);
}

id Group.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void Group.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id Group.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Group();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for Group()
{
  uint64_t result;

  result = qword_1ED1CC2F8;
  if (!qword_1ED1CC2F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5F436DC()
{
  return type metadata accessor for Group();
}

uint64_t sub_1A5F436E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5F63F08();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for Group()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1A5F43780(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  void *__dst;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    v6 = a1;
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_QWORD *)(a1 + 64) = a2[8];
    v9 = (int *)type metadata accessor for Batch();
    v10 = v9[10];
    __dst = (void *)(v6 + v10);
    v28 = (char *)a2 + v10;
    v11 = sub_1A5F63F08();
    v29 = *(_QWORD *)(v11 - 8);
    v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v28, 1, v11))
    {
      sub_1A5ED4EF0();
      memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      v14 = v29;
    }
    else
    {
      v14 = v29;
      (*(void (**)(void *, char *, uint64_t))(v29 + 16))(__dst, v28, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v11);
    }
    v15 = v9[11];
    v16 = (_QWORD *)(v6 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    *(_BYTE *)(v6 + v9[12]) = *((_BYTE *)a2 + v9[12]);
    v19 = v9[13];
    v20 = (void *)(v6 + v19);
    v21 = (char *)a2 + v19;
    swift_bridgeObjectRetain();
    if (v12(v21, 1, v11))
    {
      sub_1A5ED4EF0();
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v20, v21, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v11);
    }
    v23 = *(int *)(a3 + 20);
    v24 = (_QWORD *)(v6 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
  }
  swift_retain();
  return v6;
}

_QWORD *sub_1A5F4399C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Batch();
  v7 = v6[10];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A5F63F08();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1A5ED4EF0();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = v6[11];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v6[12]) = *((_BYTE *)a2 + v6[12]);
  v19 = v6[13];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = v12((char *)a1 + v19, 1, v10);
  v23 = v12(v21, 1, v10);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v20, v21, v10);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    sub_1A5ED4EF0();
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v20, v21, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
LABEL_13:
  v25 = *(int *)(a3 + 20);
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1A5F43C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = (int *)type metadata accessor for Batch();
  v8 = v7[10];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1A5F63F08();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    sub_1A5ED4EF0();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_OWORD *)(a1 + v7[11]) = *(_OWORD *)(a2 + v7[11]);
  *(_BYTE *)(a1 + v7[12]) = *(_BYTE *)(a2 + v7[12]);
  v15 = v7[13];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  if (v13((const void *)(a2 + v15), 1, v11))
  {
    sub_1A5ED4EF0();
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v16, v17, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1A5F43DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  int v26;
  int v27;
  uint64_t v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for Batch();
  v9 = v8[10];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_1A5F63F08();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    sub_1A5ED4EF0();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  v18 = v8[11];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v8[12]) = *(_BYTE *)(a2 + v8[12]);
  v23 = v8[13];
  v24 = (void *)(a1 + v23);
  v25 = (void *)(a2 + v23);
  v26 = v14((void *)(a1 + v23), 1, v12);
  v27 = v14(v25, 1, v12);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v24, v25, v12);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v24, v12);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    sub_1A5ED4EF0();
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v24, v25, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v24, 0, 1, v12);
LABEL_13:
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_1A5F4403C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5F44048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Batch();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1A5F440C4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5F440D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Batch();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t dispatch thunk of SnapshotType.submit<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1A5F44150(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];
  uint64_t v44;

  v30 = a5;
  v31 = a8;
  v38 = a1;
  v39 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v40 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v13 = (char *)&v29 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v29 - v18;
  v20 = sub_1A5F643AC();
  if (!v20)
    return sub_1A5F642E0();
  v36 = AssociatedTypeWitness;
  v21 = v20;
  v44 = sub_1A5F64094();
  v34 = sub_1A5F646DC();
  sub_1A5F64694();
  v37 = v8;
  result = sub_1A5F643A0();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21;
    v35 = v16;
    while (v23)
    {
      v41 = v23;
      v24 = (void (*)(char *, _QWORD))sub_1A5F643DC();
      v25 = *(void (**)(char *))(v11 + 16);
      v26 = v11;
      v27 = v36;
      v25(v13);
      v24(v43, 0);
      v28 = v42;
      v38(v13, v40);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v40, v30);
      }
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
      sub_1A5F646C4();
      result = sub_1A5F643B8();
      v23 = v41 - 1;
      v11 = v26;
      if (v41 == 1)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        return v44;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5F44440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE v16[16];
  __int128 v17;

  v11 = sub_1A5F63F08();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16[8] = *(_BYTE *)v5;
  v17 = *(_OWORD *)(v5 + 8);
  sub_1A5F63EFC();
  sub_1A5F44514(a1, (uint64_t)v14, a2, a3, a4, a5);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1A5F44514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unsigned __int8 *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  double v86;
  double v87;
  void (*v88)(char *, uint64_t);
  uint64_t result;
  double v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v95;
  unint64_t v96;
  _QWORD *v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  unint64_t v103;
  uint64_t *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  _OWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  uint64_t v139;
  __int128 v140;
  _OWORD v141[4];
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  uint64_t v148;
  _QWORD v149[3];
  uint64_t v150;
  uint64_t v151;
  _QWORD v152[2];
  uint64_t v153;
  uint64_t v154;

  v110 = a2;
  v109 = sub_1A5F63F08();
  v116 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v108 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v118 = (char *)&v103 - v14;
  v127 = type metadata accessor for TimedData();
  MEMORY[0x1E0C80A78](v127);
  v113 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v111 = (uint64_t)&v103 - v17;
  v130 = a3;
  v122 = type metadata accessor for SnapshotLevel(255, *(_QWORD *)(a3 + 16), v18, v19);
  v20 = sub_1A5F64568();
  v114 = *(_QWORD *)(v20 - 8);
  v115 = v20;
  MEMORY[0x1E0C80A78](v20);
  v121 = (char *)&v103 - v21;
  sub_1A5EF8034();
  MEMORY[0x1E0C80A78](v22);
  v120 = (uint64_t)&v103 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Tracker.Timer();
  v25 = *(_QWORD *)(v24 - 8);
  v123 = v24;
  v124 = v25;
  MEMORY[0x1E0C80A78](v24);
  v112 = (uint64_t)&v103 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = *v6;
  v27 = *((_QWORD *)v6 + 1);
  v28 = *((_QWORD *)v6 + 2);
  v131 = v27;
  v119 = a4;
  v126 = type metadata accessor for SnapshotEvent.MissingData(0, a4, a5, v29);
  v30 = sub_1A5F64094();
  v154 = v30;
  v129 = v28;
  v31 = sub_1A5EF51D8(a1, a5);
  v32 = v31[2];
  if (!v32)
  {
    swift_bridgeObjectRelease();
    v34 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    return sub_1A5F0B07C((uint64_t)v34, v30, v119, a5, a6);
  }
  v106 = a6;
  v107 = a5;
  v132 = &v153;
  v33 = (uint64_t)(v31 + 4);
  v128 = v141;
  v104 = (uint64_t *)&v144;
  v105 = v31;
  v34 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v103 = 0x80000001A5F71000;
  v35 = v125;
  while (1)
  {
    sub_1A5EEED18(v33, (uint64_t)v152);
    v36 = v152[0];
    v37 = v152[1];
    sub_1A5ECE02C((uint64_t)v132, (uint64_t)v149);
    swift_bridgeObjectRetain();
    sub_1A5EEECBC((uint64_t)v152);
    v38 = v150;
    v39 = v151;
    __swift_project_boxed_opaque_existential_1(v149, v150);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v39 + 16))(v38, v39) & 1) != 0)
    {
      LOBYTE(v133) = v35;
      *((_QWORD *)&v133 + 1) = v131;
      *(_QWORD *)&v134 = v129;
      v49 = v150;
      v50 = v151;
      __swift_project_boxed_opaque_existential_1(v149, v150);
      v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 8))(v49, v50);
      sub_1A5F44E90(v51, v52, (uint64_t)&v140);
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v140 + 1))
        goto LABEL_20;
      swift_bridgeObjectRelease();
      sub_1A5F45558((uint64_t)&v140);
      v53 = v150;
      v54 = v151;
      __swift_project_boxed_opaque_existential_1(v149, v150);
      *(_QWORD *)&v140 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 32))(v53, v54) | 0x8000000000000000;
      goto LABEL_26;
    }
    v40 = v150;
    v41 = v151;
    __swift_project_boxed_opaque_existential_1(v149, v150);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v41 + 24))(v40, v41) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    v42 = v150;
    v43 = v151;
    __swift_project_boxed_opaque_existential_1(v149, v150);
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 40))(v127, v127, v42, v43) & 1) == 0)
      goto LABEL_19;
    *(_QWORD *)&v140 = v131;
    v44 = v122;
    v45 = sub_1A5F6431C();
    MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEAF50], v45);
    v46 = v121;
    sub_1A5F643C4();
    v47 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v46, 1, v44) == 1)
    {
      (*(void (**)(char *, uint64_t))(v114 + 8))(v46, v115);
      v48 = v120;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v124 + 56))(v120, 1, 1, v123);
LABEL_18:
      sub_1A5ED4D44(v48, (uint64_t (*)(_QWORD))sub_1A5EF8034);
      v35 = v125;
LABEL_19:
      LOBYTE(v133) = v35;
      *((_QWORD *)&v133 + 1) = v131;
      *(_QWORD *)&v134 = v129;
      v65 = v150;
      v66 = v151;
      __swift_project_boxed_opaque_existential_1(v149, v150);
      v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 8))(v65, v66);
      sub_1A5F44E90(v67, v68, (uint64_t)&v140);
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v140 + 1))
      {
LABEL_20:
        v145 = v141[1];
        v146 = v141[2];
        v147 = v141[3];
        v148 = v142;
        v143 = v140;
        v144 = v141[0];
        sub_1A5F2FD88((uint64_t)&v143, (uint64_t)v128);
        *(_QWORD *)&v140 = v36;
        *((_QWORD *)&v140 + 1) = v37;
        sub_1A5F455A4((uint64_t)&v140, (uint64_t)&v133);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v34 = sub_1A5F08B04(0, v34[2] + 1, 1, v34);
        v70 = v34[2];
        v69 = v34[3];
        if (v70 >= v69 >> 1)
          v34 = sub_1A5F08B04((_QWORD *)(v69 > 1), v70 + 1, 1, v34);
        v34[2] = v70 + 1;
        v71 = &v34[13 * v70];
        v72 = v133;
        v73 = v135;
        *((_OWORD *)v71 + 3) = v134;
        *((_OWORD *)v71 + 4) = v73;
        *((_OWORD *)v71 + 2) = v72;
        v74 = v136;
        v75 = v137;
        v76 = v138;
        v71[16] = v139;
        *((_OWORD *)v71 + 6) = v75;
        *((_OWORD *)v71 + 7) = v76;
        *((_OWORD *)v71 + 5) = v74;
        sub_1A5F455E0((uint64_t)&v140);
        sub_1A5EF03FC((uint64_t)&v143);
        goto LABEL_4;
      }
      swift_bridgeObjectRelease();
      sub_1A5F45558((uint64_t)&v140);
      v77 = v150;
      v78 = v151;
      __swift_project_boxed_opaque_existential_1(v149, v150);
      *(_QWORD *)&v140 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 32))(v77, v78);
LABEL_26:
      sub_1A5F6431C();
      sub_1A5F64304();
      goto LABEL_4;
    }
    v55 = *(_QWORD *)&v46[*(int *)(v44 + 32)];
    v56 = *(void (**)(char *, uint64_t))(v47 + 8);
    swift_bridgeObjectRetain();
    v56(v46, v44);
    v57 = sub_1A5EF2700();
    v59 = *(_QWORD *)(v55 + 16);
    v117 = v58;
    if (v59)
    {
      v60 = sub_1A5EF11E8(v57, v58);
      v48 = v120;
      if ((v61 & 1) != 0)
      {
        sub_1A5ED7E14(*(_QWORD *)(v55 + 56) + *(_QWORD *)(v124 + 72) * v60, v120, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
        v62 = 0;
      }
      else
      {
        v62 = 1;
      }
    }
    else
    {
      v62 = 1;
      v48 = v120;
    }
    v64 = v123;
    v63 = v124;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v124 + 56))(v48, v62, 1, v123);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v48, 1, v64) == 1)
      goto LABEL_18;
    v79 = v112;
    sub_1A5ECD6B0(v48, v112, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
    v80 = *(void (**)(char *, uint64_t, uint64_t))(v116 + 16);
    v81 = v79;
    v82 = v109;
    v80(v118, v81, v109);
    v83 = v108;
    v80(v108, v110, v82);
    v84 = v113;
    v80(v113, (uint64_t)v118, v82);
    v80(&v84[*(int *)(v127 + 20)], (uint64_t)v83, v82);
    v85 = v118;
    sub_1A5F63E90();
    v87 = v86;
    v88 = *(void (**)(char *, uint64_t))(v116 + 8);
    v88(v83, v82);
    result = ((uint64_t (*)(char *, uint64_t))v88)(v85, v82);
    v90 = v87 * 1000.0;
    if ((~COERCE__INT64(v87 * 1000.0) & 0x7FF0000000000000) == 0)
      break;
    if (v90 <= -9.22337204e18)
      goto LABEL_39;
    if (v90 >= 9.22337204e18)
      goto LABEL_40;
    v91 = v127;
    v92 = (uint64_t)v113;
    *(_QWORD *)&v113[*(int *)(v127 + 24)] = (uint64_t)v90;
    v93 = v111;
    sub_1A5ECD6B0(v92, v111, (uint64_t (*)(_QWORD))type metadata accessor for TimedData);
    *((_QWORD *)&v145 + 1) = v91;
    *(_QWORD *)&v146 = sub_1A5F45614();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v104);
    sub_1A5ED7E14(v93, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for TimedData);
    *(_QWORD *)&v143 = v36;
    *((_QWORD *)&v143 + 1) = v37;
    *((_QWORD *)&v146 + 1) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v147 = 0xD000000000000057;
    *((_QWORD *)&v147 + 1) = v103;
    v148 = 81;
    sub_1A5F2FD88((uint64_t)&v143, (uint64_t)v128);
    *(_QWORD *)&v140 = v36;
    *((_QWORD *)&v140 + 1) = v37;
    sub_1A5F455A4((uint64_t)&v140, (uint64_t)&v133);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v34 = sub_1A5F08B04(0, v34[2] + 1, 1, v34);
    v35 = v125;
    v96 = v34[2];
    v95 = v34[3];
    if (v96 >= v95 >> 1)
      v34 = sub_1A5F08B04((_QWORD *)(v95 > 1), v96 + 1, 1, v34);
    v34[2] = v96 + 1;
    v97 = &v34[13 * v96];
    v98 = v133;
    v99 = v135;
    *((_OWORD *)v97 + 3) = v134;
    *((_OWORD *)v97 + 4) = v99;
    *((_OWORD *)v97 + 2) = v98;
    v100 = v136;
    v101 = v137;
    v102 = v138;
    v97[16] = v139;
    *((_OWORD *)v97 + 6) = v101;
    *((_OWORD *)v97 + 7) = v102;
    *((_OWORD *)v97 + 5) = v100;
    sub_1A5F455E0((uint64_t)&v140);
    sub_1A5EF03FC((uint64_t)&v143);
    sub_1A5ED4D44(v111, (uint64_t (*)(_QWORD))type metadata accessor for TimedData);
    sub_1A5ED4D44(v112, (uint64_t (*)(_QWORD))type metadata accessor for Tracker.Timer);
LABEL_4:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v149);
    v33 += 56;
    if (!--v32)
    {
      swift_bridgeObjectRelease();
      v30 = v154;
      a6 = v106;
      a5 = v107;
      return sub_1A5F0B07C((uint64_t)v34, v30, v119, a5, a6);
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A5F44E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char *v3;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  _QWORD *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t j;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t i;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  __int128 v65;
  __int128 v66;
  _BYTE v67[16];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD v71[5];
  uint64_t v72;

  v7 = *v3;
  v8 = *((_QWORD *)v3 + 1);
  if ((v7 & 1) == 0)
  {
    *(_QWORD *)&v71[0] = v8;
    MEMORY[0x1E0C80A78](a1);
    v68 = *(_QWORD *)(v37 + 16);
    type metadata accessor for SnapshotLevel(255, v68, v37, v38);
    v39 = sub_1A5F6431C();
    sub_1A5ECD49C(0, qword_1EE80D3F0, (uint64_t (*)(uint64_t))sub_1A5F456EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v41 = v40;
    swift_bridgeObjectRetain();
    v42 = MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEAF50], v39);
    v44 = sub_1A5F44150((void (*)(char *, char *))sub_1A5F456C8, (uint64_t)v67, v39, v41, MEMORY[0x1E0DEDCE8], v42, MEMORY[0x1E0DEDD18], v43);
    swift_bridgeObjectRelease();
    v45 = *(_QWORD *)(v44 + 16);
    v46 = MEMORY[0x1E0DEE9D8];
    if (v45)
    {
      v47 = a3;
      swift_bridgeObjectRetain();
      v48 = (uint64_t *)(v44 + 48);
      v49 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        if (*(v48 - 1))
        {
          v50 = *v48;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v49 = sub_1A5F089EC(0, v49[2] + 1, 1, v49);
          v52 = v49[2];
          v51 = v49[3];
          if (v52 >= v51 >> 1)
            v49 = sub_1A5F089EC((_QWORD *)(v51 > 1), v52 + 1, 1, v49);
          v49[2] = v52 + 1;
          v49[v52 + 4] = v50;
        }
        v48 += 4;
        --v45;
      }
      while (v45);
      swift_bridgeObjectRelease();
      a3 = v47;
      v46 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v49 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)&v71[0] = v46;
    v59 = v49[2];
    if (v59)
    {
      swift_bridgeObjectRetain();
      for (i = 0; i != v59; ++i)
      {
        v61 = swift_bridgeObjectRetain();
        sub_1A5F38118(v61);
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v62 = *(_QWORD *)(*(_QWORD *)&v71[0] + 16);
    if (v62)
    {
      v63 = *(_QWORD *)&v71[0] + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_1A5F2FD88(v63, (uint64_t)v71);
        v64 = *(_QWORD *)&v71[0] == a1 && *((_QWORD *)&v71[0] + 1) == a2;
        if (v64 || (sub_1A5F64880() & 1) != 0)
          goto LABEL_69;
        sub_1A5EF03FC((uint64_t)v71);
        v63 += 88;
        --v62;
      }
      while (v62);
LABEL_67:
      swift_bridgeObjectRelease();
    }
    goto LABEL_68;
  }
  *(_QWORD *)&v71[0] = v8;
  MEMORY[0x1E0C80A78](a1);
  v68 = *(_QWORD *)(v9 + 16);
  type metadata accessor for SnapshotLevel(255, v68, v9, v10);
  v11 = sub_1A5F6431C();
  sub_1A5ECD49C(0, &qword_1EE80D3E8, (uint64_t (*)(uint64_t))sub_1A5F09FB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v13 = v12;
  swift_bridgeObjectRetain();
  v14 = MEMORY[0x1A85B8C3C](MEMORY[0x1E0DEAF50], v11);
  v16 = sub_1A5F44150((void (*)(char *, char *))sub_1A5F4565C, (uint64_t)v67, v11, v13, MEMORY[0x1E0DEDCE8], v14, MEMORY[0x1E0DEDD18], v15);
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
  {
    swift_bridgeObjectRelease();
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_41:
    *(_QWORD *)&v71[0] = MEMORY[0x1E0DEE9D8];
    v53 = v21[2];
    if (v53)
    {
      swift_bridgeObjectRetain();
      for (j = 0; j != v53; ++j)
      {
        v55 = swift_bridgeObjectRetain();
        sub_1A5F38118(v55);
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v56 = *(_QWORD *)(*(_QWORD *)&v71[0] + 16);
    if (v56)
    {
      v57 = *(_QWORD *)&v71[0] + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1A5F2FD88(v57, (uint64_t)v71);
        v58 = *(_QWORD *)&v71[0] == a1 && *((_QWORD *)&v71[0] + 1) == a2;
        if (v58 || (sub_1A5F64880() & 1) != 0)
          break;
        sub_1A5EF03FC((uint64_t)v71);
        v57 += 88;
        if (!--v56)
          goto LABEL_67;
      }
LABEL_69:
      swift_bridgeObjectRelease();
      v65 = v71[3];
      *(_OWORD *)(a3 + 32) = v71[2];
      *(_OWORD *)(a3 + 48) = v65;
      *(_OWORD *)(a3 + 64) = v71[4];
      *(_QWORD *)(a3 + 80) = v72;
      v66 = v71[1];
      *(_OWORD *)a3 = v71[0];
      *(_OWORD *)(a3 + 16) = v66;
      return swift_bridgeObjectRelease();
    }
LABEL_68:
    *(_QWORD *)(a3 + 80) = 0;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
    return swift_bridgeObjectRelease();
  }
  v69 = v16;
  v70 = a3;
  v18 = v16 + 32;
  result = swift_bridgeObjectRetain();
  v20 = 0;
  v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v22 = v18 + 32 * v20;
    if (*(_QWORD *)(v22 + 8))
    {
      v23 = *(_QWORD *)(v22 + 16);
      v24 = *(_QWORD *)(v23 + 64);
      v25 = *(_BYTE *)(v23 + 32);
      v26 = 1 << v25;
      if (v24)
      {
        v27 = 0;
      }
      else
      {
        v33 = v25 & 0x3F;
        if (v33 < 7)
          goto LABEL_5;
        v24 = *(_QWORD *)(v23 + 72);
        if (v24)
        {
          v27 = 1;
        }
        else
        {
          if (v33 < 8)
            goto LABEL_5;
          v24 = *(_QWORD *)(v23 + 80);
          if (!v24)
          {
            v34 = 0;
            v35 = (unint64_t)(v26 + 63) >> 6;
            if (v35 <= 3)
              v35 = 3;
            v36 = v35 - 3;
            while (v36 != v34)
            {
              v24 = *(_QWORD *)(v23 + 88 + 8 * v34++);
              if (v24)
              {
                v27 = v34 + 2;
                goto LABEL_9;
              }
            }
            goto LABEL_5;
          }
          v27 = 2;
        }
      }
LABEL_9:
      v28 = __clz(__rbit64(v24));
      v29 = v28 + (v27 << 6);
      if (v29 != v26)
        break;
    }
LABEL_5:
    if (++v20 == v17)
    {
      swift_bridgeObjectRelease_n();
      a3 = v70;
      goto LABEL_41;
    }
  }
  if ((v29 & 0x8000000000000000) == 0 && v29 < v26)
  {
    if (((*(_QWORD *)(v23 + 64 + (((unint64_t)v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
      goto LABEL_72;
    v30 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v29);
    swift_bridgeObjectRetain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1A5F089EC(0, v21[2] + 1, 1, v21);
      v21 = (_QWORD *)result;
    }
    v32 = v21[2];
    v31 = v21[3];
    if (v32 >= v31 >> 1)
    {
      result = (uint64_t)sub_1A5F089EC((_QWORD *)(v31 > 1), v32 + 1, 1, v21);
      v21 = (_QWORD *)result;
    }
    v21[2] = v32 + 1;
    v21[v32 + 4] = v30;
    goto LABEL_5;
  }
  __break(1u);
LABEL_72:
  __break(1u);
  return result;
}

double sub_1A5F45490@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(_QWORD)@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v8 = type metadata accessor for SnapshotLevel(0, a2, a3, (uint64_t)a4);
  v9 = MEMORY[0x1E0C80A78](v8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v13 - v11, a1, v8, v9);
  a4(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    result = 0.0;
    *a5 = 0u;
    a5[1] = 0u;
  }
  return result;
}

uint64_t sub_1A5F45544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1A5F44440(a1, a4, a2, a3, a5);
}

uint64_t sub_1A5F45558(uint64_t a1)
{
  uint64_t v2;

  sub_1A5F45680(0, &qword_1ED1CE0A8, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A5F455A4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SnapshotEntry(a2, a1);
  return a2;
}

uint64_t sub_1A5F455E0(uint64_t a1)
{
  destroy for SnapshotEntry(a1);
  return a1;
}

unint64_t sub_1A5F45614()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1CE170;
  if (!qword_1ED1CE170)
  {
    v1 = type metadata accessor for TimedData();
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for TimedData, v1);
    atomic_store(result, (unint64_t *)&qword_1ED1CE170);
  }
  return result;
}

double sub_1A5F4565C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_1A5F45490(a1, *(_QWORD *)(v3 + 16), a2, sub_1A5F09FB8, a3);
}

void sub_1A5F45680(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for AnyDataEventEntry);
    if (!v5)
      atomic_store(v4, a2);
  }
}

double sub_1A5F456C8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_1A5F45490(a1, *(_QWORD *)(v3 + 16), a2, sub_1A5F456EC, a3);
}

void sub_1A5F456EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EE80CCF8)
  {
    sub_1A5F45680(255, &qword_1EE80CCB8, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
    v5 = type metadata accessor for SnapshotLevel(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EE80CCF8);
  }
}

uint64_t sub_1A5F45754()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1A5F4577C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1A5F457B8(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1A5F4581C(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t type metadata accessor for Snapshot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Snapshot);
}

BOOL static EventProperty.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t EventProperty.hash(into:)()
{
  return sub_1A5F6491C();
}

uint64_t EventProperty.hashValue.getter()
{
  sub_1A5F64910();
  sub_1A5F6491C();
  return sub_1A5F64928();
}

uint64_t sub_1A5F458FC()
{
  sub_1A5F64910();
  EventProperty.hash(into:)();
  return sub_1A5F64928();
}

void sub_1A5F45934()
{
  JUMPOUT(0x1A85B8C3CLL);
}

uint64_t sub_1A5F45944(_QWORD *a1)
{
  return nullsub_1(a1[2], a1[3], a1[4]);
}

uint64_t sub_1A5F45954(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))() & 1;
}

uint64_t sub_1A5F45978(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))() & 1;
}

uint64_t sub_1A5F4599C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_1A5F459A4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5F459F0 + 4 * byte_1A5F6A585[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5F45A24 + 4 * byte_1A5F6A580[v4]))();
}

uint64_t sub_1A5F45A24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5F45A2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5F45A34);
  return result;
}

uint64_t sub_1A5F45A40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5F45A48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5F45A4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5F45A54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1A5F45A60(uint64_t a1, uint64_t a2)
{
  __asm { BR              X12 }
}

uint64_t sub_1A5F45AA8(unsigned __int8 a1, uint64_t a2)
{
  unsigned __int8 v2;

  if ((a2 & 0xFF000000000000) != 0)
    v2 = a1;
  else
    v2 = 0;
  return v2 | (((a2 & 0xFF000000000000) == 0) << 8);
}

BOOL sub_1A5F45BC8()
{
  char *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  __int16 v4;
  __int16 v5;

  v0 = sub_1A5EE3ECC(0xD00000000000003CLL, 0x80000001A5F70240, 512);
  v2 = v1;
  if (v1 >> 60 == 15)
    return 0;
  v3 = (uint64_t)v0;
  sub_1A5F45A60((uint64_t)v0, v1);
  v5 = v4;
  sub_1A5EE45CC(v3, v2);
  return (v5 & 0x100) == 0 && v5 == 1;
}

uint64_t sub_1A5F45C74()
{
  return UploadDropboxFile.description.getter();
}

uint64_t dispatch thunk of UploadDropboxFileManagerType.append(data:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of UploadDropboxFileManagerType.read(file:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of UploadDropboxFileManagerType.close(file:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of UploadDropboxFileManagerType.fileState(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of UploadDropboxFileManagerType.setState(of:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of UploadDropboxFileManagerType.remove(file:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of UploadDropboxFileManagerType.create(file:session:client:contentType:groupName:timestampConfiguration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 56))(a1);
}

uint64_t dispatch thunk of UploadDropboxFileManagerType.userAgent(of:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of UploadDropboxFileManagerType.contentType(of:contentType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of UploadDropboxFileManagerType.groupName(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of UploadDropboxFileManagerType.sessionStartDate(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of UploadDropboxFileManagerType.sessionID(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of UploadDropboxFileManagerType.timestampConfiguration(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of UploadDropboxFileManagerType.removeDirectory(at:onlyIfEmpty:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t dispatch thunk of UploadDropboxFileManagerType.createDirectory(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of UploadDropboxFileManagerType.listFileNames(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of UploadDropboxFileManagerType.listURLs(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

ValueMetadata *type metadata accessor for UploadDropboxFileState()
{
  return &type metadata for UploadDropboxFileState;
}

uint64_t sub_1A5F45DDC()
{
  return type metadata accessor for UploadDropboxFile();
}

uint64_t method lookup function for UploadDropboxFile()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UploadDropboxFile.isFileWrittenTo.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

void sub_1A5F45E0C(uint64_t a1)
{
  sub_1A5EBDA60(a1);
}

id sub_1A5F45E20(uint64_t a1, char a2)
{
  return sub_1A5F47564(a1, a2);
}

uint64_t sub_1A5F45E34()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1A5F64238();
  v4 = sub_1A5F45EB0(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A5F45EB0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1A5F45FF4(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1A5F18B24(v9, 0);
      v12 = sub_1A5F460E0(v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1A85B7EB0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1A85B7EB0);
LABEL_9:
      sub_1A5F64670();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1A85B7EB0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1A5F45FF4(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1A5F18B9C(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1A5F18B9C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1A5F641F0();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5F460E0(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v29;
  unint64_t v30;
  _QWORD v31[2];

  if (a2)
  {
    if (!a3)
    {
      v12 = a4;
      v11 = 0;
      goto LABEL_33;
    }
    if (a3 < 0)
      goto LABEL_36;
    v10 = a5 >> 14;
    v30 = a4 >> 14;
    if (a4 >> 14 != a5 >> 14)
    {
      v11 = 0;
      v14 = (a6 >> 59) & 1;
      if ((a7 & 0x1000000000000000) == 0)
        LOBYTE(v14) = 1;
      v15 = 4 << v14;
      v24 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
      v25 = a7 & 0xFFFFFFFFFFFFFFLL;
      v16 = HIBYTE(a7) & 0xF;
      if ((a7 & 0x2000000000000000) == 0)
        v16 = a6 & 0xFFFFFFFFFFFFLL;
      v26 = v16;
      v29 = a3 - 1;
      v12 = a4;
      while (1)
      {
        v17 = v12 & 0xC;
        v18 = v12;
        if (v17 == v15)
          v18 = sub_1A5F18B9C(v12, a6, a7);
        if (v18 >> 14 < v30 || v18 >> 14 >= v10)
        {
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          JUMPOUT(0x1A5F462F0);
        }
        if ((a7 & 0x1000000000000000) != 0)
        {
          v21 = sub_1A5F641FC();
          if (v17 != v15)
            goto LABEL_23;
        }
        else
        {
          v19 = v18 >> 16;
          if ((a7 & 0x2000000000000000) != 0)
          {
            v31[0] = a6;
            v31[1] = v25;
            v21 = *((_BYTE *)v31 + v19);
            if (v17 != v15)
              goto LABEL_23;
          }
          else
          {
            v20 = v24;
            if ((a6 & 0x1000000000000000) == 0)
              v20 = sub_1A5F64670();
            v21 = *(_BYTE *)(v20 + v19);
            if (v17 != v15)
            {
LABEL_23:
              if ((a7 & 0x1000000000000000) == 0)
                goto LABEL_24;
              goto LABEL_27;
            }
          }
        }
        v12 = sub_1A5F18B9C(v12, a6, a7);
        if ((a7 & 0x1000000000000000) == 0)
        {
LABEL_24:
          v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
          goto LABEL_29;
        }
LABEL_27:
        if (v26 <= v12 >> 16)
          goto LABEL_35;
        v12 = sub_1A5F641D8();
LABEL_29:
        *(_BYTE *)(a2 + v11) = v21;
        if (v29 == v11)
        {
          v11 = a3;
          goto LABEL_33;
        }
        ++v11;
        if (v10 == v12 >> 14)
          goto LABEL_33;
      }
    }
  }
  v11 = 0;
  v12 = a4;
LABEL_33:
  *a1 = a4;
  a1[1] = a5;
  a1[2] = a6;
  a1[3] = a7;
  a1[4] = v12;
  return v11;
}

void sub_1A5F46300()
{
  __asm { BR              X11 }
}

_QWORD *sub_1A5F46360@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

void sub_1A5F465F0()
{
  __asm { BR              X11 }
}

_QWORD *sub_1A5F46654@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(__int128 *__return_ptr, uint64_t *, char *);
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  unsigned int v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  unsigned __int8 v21;

  v17 = v5;
  LOWORD(v18) = a1;
  BYTE2(v18) = BYTE2(a1);
  HIBYTE(v18) = BYTE3(a1);
  v19 = BYTE4(a1);
  v20 = BYTE5(a1);
  v21 = BYTE6(a1);
  result = v3(&v13, &v17, (char *)&v17 + BYTE6(a1));
  if (v2)
  {
    v7 = v18 | ((unint64_t)v19 << 32) | ((unint64_t)v20 << 40) | ((unint64_t)v21 << 48);
    *v1 = v17;
    v1[1] = v7;
  }
  else
  {
    v8 = v13;
    v9 = v14;
    v10 = v15;
    v11 = v16;
    v12 = v18 | ((unint64_t)v19 << 32) | ((unint64_t)v20 << 40) | ((unint64_t)v21 << 48);
    *v1 = v17;
    v1[1] = v12;
    *(_OWORD *)v4 = v8;
    *(_QWORD *)(v4 + 16) = v9;
    *(_QWORD *)(v4 + 24) = v10;
    *(_OWORD *)(v4 + 32) = v11;
  }
  return result;
}

char *sub_1A5F4690C(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_1A5F63C2C();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_1A5F63C50();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_1A5F63C44();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

char *sub_1A5F469B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *(*a3)(__int128 *__return_ptr, char *, char *)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  char *result;
  char *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  result = (char *)sub_1A5F63C2C();
  if (!result)
    goto LABEL_12;
  v10 = result;
  result = (char *)sub_1A5F63C50();
  v11 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v14 = sub_1A5F63C44();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  result = (char *)a3(&v19, &v10[v11], &v10[v11 + v15]);
  if (!v4)
  {
    v16 = v20;
    v17 = v21;
    v18 = v22;
    *(_OWORD *)a4 = v19;
    *(_QWORD *)(a4 + 16) = v16;
    *(_QWORD *)(a4 + 24) = v17;
    *(_OWORD *)(a4 + 32) = v18;
  }
  return result;
}

_QWORD *sub_1A5F46A7C(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a3)
  {
    result = a1(&v6, a3, a4 - a3);
    if (v4)
      return result;
    return (_QWORD *)v6;
  }
  result = a1(&v6, 0, 0);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

double sub_1A5F46AE0@<D0>(void (*a1)(__int128 *__return_ptr, uint64_t, uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  double result;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  if (a2)
  {
    a1(&v10, a2, a3 - a2);
    if (v4)
      return result;
LABEL_5:
    v7 = v11;
    v8 = v12;
    result = *(double *)&v10;
    v9 = v13;
    *(_OWORD *)a4 = v10;
    *(_QWORD *)(a4 + 16) = v7;
    *(_QWORD *)(a4 + 24) = v8;
    *(_OWORD *)(a4 + 32) = v9;
    return result;
  }
  a1(&v10, 0, 0);
  if (!v4)
    goto LABEL_5;
  return result;
}

unsigned __int8 *sub_1A5F46B58(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5F46C50(a1, a2, a3);
}

unsigned __int8 *sub_1A5F46B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1A5F6422C();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1A5F45E34();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1A5F64670();
  }
LABEL_7:
  v11 = sub_1A5F46C50(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1A5F46C50(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1A5F46ECC@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  char v3;
  uint64_t v4;

  if (result)
  {
    swift_bridgeObjectRetain();
    result = sub_1A5F64640();
    if ((v3 & 1) == 0)
    {
      v4 = result;
      result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5F46F54@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  unint64_t v9;
  _QWORD *v10;
  _QWORD v11[2];

  if ((a4 & 0x1000000000000000) != 0)
  {
    *(_OWORD *)a5 = xmmword_1A5F6A680;
  }
  else
  {
    v9 = result;
    if ((a4 & 0x2000000000000000) != 0)
    {
      v11[0] = a3;
      v11[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      v10 = v11;
    }
    else if ((a3 & 0x1000000000000000) != 0)
    {
      v10 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else
    {
      v10 = (_QWORD *)sub_1A5F64670();
    }
    return sub_1A5F4700C((uint64_t)v10, v9, a2, a3, a4, a5);
  }
  return result;
}

uint64_t sub_1A5F4700C@<X0>(uint64_t result@<X0>, unint64_t a2@<X2>, unint64_t a3@<X3>, unint64_t a4@<X4>, unint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v9 = a2;
  v10 = result;
  v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = a2 & 0xC;
  v15 = a2;
  if (v14 == 4 << v12)
  {
    result = sub_1A5F18B9C(a2, a4, a5);
    v15 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      v16 = v15 >> 16;
      if (v14 != v13)
        goto LABEL_6;
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  v17 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0)
    v17 = HIBYTE(a5) & 0xF;
  if (v17 < v15 >> 16)
    goto LABEL_31;
  result = sub_1A5F641F0();
  v16 = result;
  if (v14 == v13)
  {
LABEL_14:
    result = sub_1A5F18B9C(v9, a4, a5);
    v9 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    result = sub_1A5F18B9C(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0)
      goto LABEL_8;
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    result = (a3 >> 16) - (v9 >> 16);
    goto LABEL_21;
  }
  v18 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0)
    v18 = a4 & 0xFFFFFFFFFFFFLL;
  if (v18 < v9 >> 16)
    goto LABEL_29;
  if (v18 < a3 >> 16)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    return result;
  }
  result = sub_1A5F641F0();
LABEL_21:
  if (__OFADD__(v16, result))
  {
    __break(1u);
    goto LABEL_28;
  }
  v19 = result;
  if (v16 + result < v16)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v10)
    v20 = v10 + v16;
  else
    v20 = 0;
  return sub_1A5EE2F90(v20, v19, a6);
}

double sub_1A5F471BC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *((_QWORD *)a3 + 2);
  v6 = *((_QWORD *)a3 + 3);
  v15 = *a3;
  v16 = v5;
  v17 = v6;
  sub_1A5F46AE0((void (*)(__int128 *__return_ptr, uint64_t, uint64_t))sub_1A5F48238, a1, a2, (uint64_t)&v11);
  v7 = v12;
  v8 = v13;
  result = *(double *)&v11;
  v10 = v14;
  *(_OWORD *)a4 = v11;
  *(_QWORD *)(a4 + 16) = v7;
  *(_QWORD *)(a4 + 24) = v8;
  *(_OWORD *)(a4 + 32) = v10;
  return result;
}

uint64_t sub_1A5F47234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  _OWORD v9[2];
  uint64_t v10;

  v5 = sub_1A5F460E0((unint64_t *)v9, a1, a2, *a3, a3[1], a3[2], a3[3]);
  v6 = v10;
  v7 = v9[1];
  *(_OWORD *)a4 = v9[0];
  *(_OWORD *)(a4 + 16) = v7;
  *(_QWORD *)(a4 + 32) = v6;
  *(_QWORD *)(a4 + 40) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A5F472A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1A5F63C68();
  swift_allocObject();
  sub_1A5F63C20();
  if (v2 < 0)
  {
    __break(1u);
    JUMPOUT(0x1A5F47318);
  }
  sub_1A5F63DE8();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = v2;
  return result;
}

uint64_t sub_1A5F4733C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1A5F47D54();
    v3 = sub_1A5F64610();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_1A5F64130();
      sub_1A5F64910();
      v7 = v6;
      sub_1A5F6419C();
      v8 = sub_1A5F64928();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_1A5F64130();
        v17 = v16;
        if (v15 == sub_1A5F64130() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_1A5F64880();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_1A5F64130();
          v24 = v23;
          if (v22 == sub_1A5F64130() && v24 == v25)
            goto LABEL_3;
          v27 = sub_1A5F64880();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

id sub_1A5F47564(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char **p_type;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t (*v24)(uint64_t);
  int v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  char *v27;
  uint64_t inited;
  void *v29;
  id v30;
  uint64_t v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void *v41;
  char *v42;
  _BOOL8 v43;
  void *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v51;
  void *v52;
  unsigned int v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  id v58;
  __int128 v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  id v76[3];
  uint64_t v77;
  uint64_t v78;

  v78 = *MEMORY[0x1E0C80C00];
  v5 = sub_1A5F63CBC();
  v70 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v71 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5ECD49C(0, (unint64_t *)&qword_1ED1CE6B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v55 - v8;
  v10 = sub_1A5F63DD0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v72 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A5F63CF8();
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  p_type = &stru_1E4FDBFF0.type;
  if ((a2 & 1) == 0)
    goto LABEL_27;
  v68 = v15;
  v69 = v14;
  v61 = v5;
  v19 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1A5ECD49C(0, &qword_1ED1CCC10, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v64 = v20;
  v21 = swift_allocObject();
  v67 = xmmword_1A5F679D0;
  *(_OWORD *)(v21 + 16) = xmmword_1A5F679D0;
  v22 = (void *)*MEMORY[0x1E0C99A18];
  *(_QWORD *)(v21 + 32) = *MEMORY[0x1E0C99A18];
  v63 = v22;
  v23 = (void *)sub_1A5F64424();

  swift_bridgeObjectRelease();
  if (!v23)
    goto LABEL_26;
  sub_1A5F643F4();
  sub_1A5F63CEC();
  if (!v77)
  {
    (*(void (**)(char *, uint64_t))(v68 + 8))(v17, v69);

LABEL_26:
    p_type = &stru_1E4FDBFF0.type;
LABEL_27:
    v51 = objc_msgSend((id)objc_opt_self(), p_type[358]);
    v52 = (void *)sub_1A5F63D64();
    v76[0] = 0;
    v53 = objc_msgSend(v51, sel_removeItemAtURL_error_, v52, v76);

    if (v53)
      return v76[0];
    v54 = v76[0];
    sub_1A5F63CE0();

    return (id)swift_willThrow();
  }
  v60 = v23;
  v62 = a1;
  v65 = v2;
  v66 = 1;
  v59 = xmmword_1A5F66C40;
  v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  do
  {
    v25 = swift_dynamicCast();
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    if (!v25)
    {
      v26(v9, 1, 1, v10);
LABEL_13:
      sub_1A5ED43E0((uint64_t)v9, (unint64_t *)&qword_1ED1CE6B0, v24);
      goto LABEL_14;
    }
    v26(v9, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      goto LABEL_13;
    v27 = v72;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v9, v10);
    if ((v66 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v27, v10);
      v66 = 0;
      goto LABEL_14;
    }
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v67;
    v29 = v63;
    *(_QWORD *)(inited + 32) = v63;
    v66 = inited + 32;
    v30 = v29;
    v31 = sub_1A5F4733C(inited);
    swift_setDeallocating();
    type metadata accessor for URLResourceKey(0);
    swift_arrayDestroy();
    v66 = v31;
    v32 = v72;
    v33 = v65;
    sub_1A5F63D28();
    v65 = v33;
    if (v33)
    {
      swift_bridgeObjectRelease();
      if (qword_1ED1CFC08 != -1)
        swift_once();
      v58 = (id)qword_1ED1CE7B0;
      LODWORD(v66) = sub_1A5F6443C();
      sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = v59;
      v35 = sub_1A5F63D1C();
      v56 = v36;
      *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
      v57 = sub_1A5EE19C8();
      *(_QWORD *)(v34 + 64) = v57;
      v37 = v56;
      *(_QWORD *)(v34 + 32) = v35;
      *(_QWORD *)(v34 + 40) = v37;
      v74 = 0;
      v75 = 0xE000000000000000;
      v73 = v65;
      sub_1A5EE2EE8(0, (unint64_t *)&qword_1ED1CE570);
      sub_1A5F646F4();
      v38 = v74;
      v39 = v75;
      v40 = v57;
      *(_QWORD *)(v34 + 96) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v34 + 104) = v40;
      *(_QWORD *)(v34 + 72) = v38;
      *(_QWORD *)(v34 + 80) = v39;
      v41 = v58;
      sub_1A5F63F80();

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
      v65 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      v42 = v71;
      LODWORD(v58) = sub_1A5F63CB0();
      LODWORD(v66) = v58;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v42, v61);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v32, v10);
      if ((_DWORD)v66 != 2)
      {
        v43 = (v58 & 1) == 0;
        goto LABEL_19;
      }
    }
    v43 = 1;
LABEL_19:
    v66 = v43;
LABEL_14:
    sub_1A5F63CEC();
  }
  while (v77);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v17, v69);

  p_type = (char **)(&stru_1E4FDBFF0 + 16);
  if ((v66 & 1) != 0)
    goto LABEL_27;
  if (qword_1ED1CFC08 != -1)
    swift_once();
  v44 = (void *)qword_1ED1CE7B0;
  sub_1A5EBB7B0(0, (unint64_t *)&qword_1ED1CFBF8, (unint64_t *)&qword_1ED1CF840, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = v67;
  v46 = v44;
  v47 = sub_1A5F63D1C();
  v49 = v48;
  *(_QWORD *)(v45 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v45 + 64) = sub_1A5EE19C8();
  *(_QWORD *)(v45 + 32) = v47;
  *(_QWORD *)(v45 + 40) = v49;
  sub_1A5F64454();
  sub_1A5F63F80();

  return (id)swift_bridgeObjectRelease();
}

void sub_1A5F47D54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED1CC360)
  {
    type metadata accessor for URLResourceKey(255);
    sub_1A5F47DB4();
    v0 = sub_1A5F6461C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED1CC360);
  }
}

unint64_t sub_1A5F47DB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1CC358;
  if (!qword_1ED1CC358)
  {
    type metadata accessor for URLResourceKey(255);
    result = MEMORY[0x1A85B8C3C](&unk_1A5F668E4, v1);
    atomic_store(result, (unint64_t *)&qword_1ED1CC358);
  }
  return result;
}

_QWORD *sub_1A5F47DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  _QWORD v13[2];

  v5 = *(uint64_t **)(v3 + 16);
  v7 = *v5;
  v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  result = sub_1A5F46A7C((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1A5F47E58, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_1A5F47E58@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1A5F46ECC(a1, a2);
}

unint64_t sub_1A5F47E74()
{
  unint64_t result;

  result = qword_1ED1CC438;
  if (!qword_1ED1CC438)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F6A88C, &type metadata for UploadDropboxFileManager.Errors);
    atomic_store(result, (unint64_t *)&qword_1ED1CC438);
  }
  return result;
}

unint64_t sub_1A5F47EB8()
{
  unint64_t result;

  result = qword_1ED1CCD80;
  if (!qword_1ED1CCD80)
  {
    result = MEMORY[0x1A85B8C3C](MEMORY[0x1E0CB0310], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED1CCD80);
  }
  return result;
}

uint64_t sub_1A5F47EFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1A5EF363C();
    v3 = sub_1A5F64610();
    v4 = 0;
    v36 = v3 + 56;
    v33 = v1;
    v34 = a1 + 32;
    v32 = v3;
    while (1)
    {
      v5 = (uint64_t *)(v34 + 48 * v4);
      v7 = *v5;
      v6 = v5[1];
      v9 = v5[2];
      v8 = v5[3];
      v11 = v5[4];
      v10 = v5[5];
      sub_1A5F64910();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A5F6419C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v38 = v9;
      sub_1A5F6419C();
      v39 = v8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v37 = v11;
      sub_1A5F6419C();
      swift_bridgeObjectRelease();
      result = sub_1A5F64928();
      v13 = -1 << *(_BYTE *)(v3 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      v16 = *(_QWORD *)(v36 + 8 * (v14 >> 6));
      v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        v35 = v4;
        v18 = ~v13;
        v19 = *(_QWORD *)(v3 + 48);
        do
        {
          v20 = (_QWORD *)(v19 + 48 * v14);
          v21 = v20[2];
          v22 = v20[3];
          v23 = v20[4];
          v24 = v20[5];
          v25 = *v20 == v7 && v20[1] == v6;
          if (v25 || (result = sub_1A5F64880(), (result & 1) != 0))
          {
            v26 = v21 == v38 && v22 == v39;
            if (v26 || (result = sub_1A5F64880(), (result & 1) != 0))
            {
              v27 = v23 == v37 && v24 == v10;
              if (v27 || (result = sub_1A5F64880(), (result & 1) != 0))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v3 = v32;
                v1 = v33;
                v4 = v35;
                goto LABEL_4;
              }
            }
          }
          v14 = (v14 + 1) & v18;
          v15 = v14 >> 6;
          v16 = *(_QWORD *)(v36 + 8 * (v14 >> 6));
          v17 = 1 << v14;
        }
        while ((v16 & (1 << v14)) != 0);
        v3 = v32;
        v1 = v33;
        v4 = v35;
      }
      *(_QWORD *)(v36 + 8 * v15) = v17 | v16;
      v28 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 48 * v14);
      *v28 = v7;
      v28[1] = v6;
      v28[2] = v38;
      v28[3] = v39;
      v28[4] = v37;
      v28[5] = v10;
      v29 = *(_QWORD *)(v3 + 16);
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
        break;
      *(_QWORD *)(v3 + 16) = v31;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

_BYTE *sub_1A5F481A0@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1A5F481B4(a1, a2);
}

_BYTE *sub_1A5F481B4@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

double sub_1A5F48220@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1A5F471BC(a1, a2, *(__int128 **)(v3 + 16), a3);
}

uint64_t sub_1A5F48238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1A5F47234(a1, a2, *(unint64_t **)(v3 + 16), a3);
}

uint64_t storeEnumTagSinglePayload for UploadDropboxFileManager.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5F482A0 + 4 * byte_1A5F6A695[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5F482D4 + 4 * byte_1A5F6A690[v4]))();
}

uint64_t sub_1A5F482D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5F482DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5F482E4);
  return result;
}

uint64_t sub_1A5F482F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5F482F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5F482FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5F48304(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UploadDropboxFileManager.Errors()
{
  return &type metadata for UploadDropboxFileManager.Errors;
}

unint64_t sub_1A5F48324()
{
  unint64_t result;

  result = qword_1EE80D478;
  if (!qword_1EE80D478)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F6A864, &type metadata for UploadDropboxFileManager.Errors);
    atomic_store(result, (unint64_t *)&qword_1EE80D478);
  }
  return result;
}

BOOL static SnapshotPolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SnapshotPolicy.hash(into:)()
{
  return sub_1A5F6491C();
}

uint64_t SnapshotPolicy.hashValue.getter()
{
  sub_1A5F64910();
  sub_1A5F6491C();
  return sub_1A5F64928();
}

unint64_t sub_1A5F483F0()
{
  unint64_t result;

  result = qword_1EE80D480;
  if (!qword_1EE80D480)
  {
    result = MEMORY[0x1A85B8C3C](&protocol conformance descriptor for SnapshotPolicy, &type metadata for SnapshotPolicy);
    atomic_store(result, (unint64_t *)&qword_1EE80D480);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SnapshotPolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5F48480 + 4 * byte_1A5F6A8D1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5F484B4 + 4 * byte_1A5F6A8CC[v4]))();
}

uint64_t sub_1A5F484B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5F484BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5F484C4);
  return result;
}

uint64_t sub_1A5F484D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5F484D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5F484DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5F484E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SnapshotPolicy()
{
  return &type metadata for SnapshotPolicy;
}

id sub_1A5F48500(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  char *v29;
  void *v30;
  id v31;
  void *v32;
  unsigned int v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v38;
  char *v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  id v53[4];

  v52 = a1;
  v53[3] = *(id *)MEMORY[0x1E0C80C00];
  v50 = sub_1A5F63D10();
  v3 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A5F63DD0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v51 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v47 - v10;
  v12 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v47 - v16;
  v18 = type metadata accessor for SummaryEventDatabaseManager.StorageOptions(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5ED7E14(a2, (uint64_t)v20, v21);
  sub_1A5ED462C();
  v23 = v22;
  v24 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v20, 1, v22) == 1)
  {
    v25 = 0;
    v26 = v52;
  }
  else
  {
    v48 = *(_QWORD *)&v20[*(int *)(v23 + 48)];
    sub_1A5ED4E8C((uint64_t)v20, (uint64_t)v17);
    sub_1A5ED7E14((uint64_t)v17, (uint64_t)v15, type metadata accessor for SummaryEventConfiguration.StorageURLOptions);
    v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6);
    v49 = v17;
    if (v27 == 1)
    {
      if (qword_1ED1CDCB0 != -1)
        swift_once();
      v28 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED1CD088);
      v29 = v11;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v11, v28, v6);
    }
    else
    {
      v29 = v11;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v15, v6);
    }
    v30 = (void *)objc_opt_self();
    v31 = objc_msgSend(v30, sel_defaultManager);
    v32 = (void *)sub_1A5F63D64();
    v53[0] = 0;
    v33 = objc_msgSend(v31, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v32, 1, 0, v53);

    if (v33)
    {
      v34 = v53[0];
    }
    else
    {
      v35 = v53[0];
      v36 = (void *)sub_1A5F63CE0();

      swift_willThrow();
    }
    v53[0] = (id)ContentType.description.getter(v48);
    v53[1] = v37;
    v38 = v50;
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CAFD78], v50);
    sub_1A5ED57CC();
    v39 = v51;
    sub_1A5F63DC4();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v38);
    swift_bridgeObjectRelease();
    v40 = objc_msgSend(v30, sel_defaultManager);
    sub_1A5F63D1C();
    v41 = (void *)sub_1A5F6410C();
    swift_bridgeObjectRelease();
    v42 = objc_msgSend(v40, sel_contentsAtPath_, v41);

    if (v42)
    {
      v43 = sub_1A5F63E3C();
      v45 = v44;

      sub_1A5F63BB4();
      swift_allocObject();
      sub_1A5F63BA8();
      sub_1A5F49494();
      sub_1A5F63B9C();
      swift_release();
      sub_1A5EF0908(v43, v45);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
      sub_1A5ED4D44((uint64_t)v49, type metadata accessor for SummaryEventConfiguration.StorageURLOptions);
      v25 = v53[0];
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
      sub_1A5ED4D44((uint64_t)v49, type metadata accessor for SummaryEventConfiguration.StorageURLOptions);
      v25 = 0;
    }
    v26 = v52;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v52, v39, v6);
    v24 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v26, v24, 1, v6);
  return v25;
}

uint64_t sub_1A5F48A30()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics27SummaryEventDatabaseManager_lock) + 16);
  os_unfair_lock_lock(v1);
  sub_1A5F4EC70(v2, sub_1A5F49478);
  os_unfair_lock_unlock(v1);
  return sub_1A5F48C6C();
}

uint64_t sub_1A5F48A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  char v31;

  v8 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain_n();
  v9 = sub_1A5F27F40();
  if (!*(_QWORD *)(v8 + 16) || (v11 = sub_1A5EF11E8(v9, v10), (v12 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = sub_1A5F27F40();
    v24 = v23;
    v25 = sub_1A5F27F40();
    v27 = v26;
    v28 = sub_1A5F27F14(a2, a3, a4);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1A5F08F54(v25, v27, 1, v28, v22, v24, isUniquelyReferenced_nonNull_native);
    goto LABEL_7;
  }
  v13 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 32 * v11);
  v14 = v13[1];
  v30 = *v13;
  v15 = v13[2];
  v16 = v13[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A5F27EE8(a2, a3, a4);
  if ((v31 & 1) == 0)
    goto LABEL_8;
  result = sub_1A5F27F40();
  if (!__OFADD__(v15, 1))
  {
    v19 = result;
    v20 = v18;
    v21 = swift_isUniquelyReferenced_nonNull_native();
    sub_1A5F08F54(v30, v14, v15 + 1, v16, v19, v20, v21);
LABEL_7:
    swift_bridgeObjectRelease();
LABEL_8:
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 16) = v8;
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5F48C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  uint64_t result;
  void (*v19)(char *, char *, uint64_t);
  os_unfair_lock_s *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t (*v25)(uint64_t);
  char *v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v1 = sub_1A5F63FE0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v33 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A5F64028();
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A5F63DD0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v28 - v12;
  v14 = type metadata accessor for SummaryEventDatabaseManager.StorageLocation(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5ED7E14(v0 + OBJC_IVAR____TtC12AppAnalytics27SummaryEventDatabaseManager_storageLocation, (uint64_t)v16, v17);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v16, 1, v7);
  if ((_DWORD)result != 1)
  {
    v29 = v1;
    v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v19(v13, v16, v7);
    v20 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics27SummaryEventDatabaseManager_lock) + 16);
    os_unfair_lock_lock(v20);
    v30 = v2;
    v21 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v20);
    v28[1] = *(_QWORD *)(v0 + OBJC_IVAR____TtC12AppAnalytics27SummaryEventDatabaseManager_diskIOQueue);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
    v22 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = v21;
    v19((char *)(v23 + v22), v10, v7);
    aBlock[4] = sub_1A5F493B0;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A5ECE4D0;
    aBlock[3] = &block_descriptor_9;
    v24 = _Block_copy(aBlock);
    sub_1A5F64004();
    v34 = MEMORY[0x1E0DEE9D8];
    v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1A5ECC4D8((unint64_t *)&qword_1ED1CF7F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1A5ECD49C(0, &qword_1ED1CE518, v25, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1A5ED26BC((unint64_t *)&qword_1ED1CE520, &qword_1ED1CE518, v25);
    v26 = v33;
    v27 = v29;
    sub_1A5F645E0();
    MEMORY[0x1A85B81E0](0, v6, v26, v24);
    _Block_release(v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v27);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v32);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A5F48FBC(uint64_t a1)
{
  *(_QWORD *)(a1 + 16) = sub_1A5ED4A94(MEMORY[0x1E0DEE9D8]);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5F48FFC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1A5F63BF0();
  swift_allocObject();
  sub_1A5F63BE4();
  sub_1A5F493E0();
  v0 = sub_1A5F63BD8();
  v2 = v1;
  swift_release();
  sub_1A5F63E48();
  return sub_1A5EF0908(v0, v2);
}

uint64_t sub_1A5F49268()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1A5EFE6B0(v0 + OBJC_IVAR____TtC12AppAnalytics27SummaryEventDatabaseManager_lastFlush);
  swift_release();
  sub_1A5ED4D44(v0 + OBJC_IVAR____TtC12AppAnalytics27SummaryEventDatabaseManager_storageLocation, type metadata accessor for SummaryEventDatabaseManager.StorageLocation);

  return swift_deallocClassInstance();
}

uint64_t sub_1A5F492D8()
{
  return type metadata accessor for SummaryEventDatabaseManager(0);
}

uint64_t type metadata accessor for SummaryEventDatabaseManager.StorageLocation(uint64_t a1)
{
  return sub_1A5EBC540(a1, (uint64_t *)&unk_1ED1CD428);
}

uint64_t sub_1A5F492F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5F49300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_1A5F4930C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5F49318(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_1A5F49324(uint64_t a1, uint64_t a2)
{
  return sub_1A5F49C0C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_1A5F49330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A5F49C50(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_1A5F4933C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A5F63DD0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A5F493B0()
{
  sub_1A5F63DD0();
  return sub_1A5F48FFC();
}

unint64_t sub_1A5F493E0()
{
  unint64_t result;

  result = qword_1EE80D488;
  if (!qword_1EE80D488)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F68448, &type metadata for SummaryEventDatabase);
    atomic_store(result, (unint64_t *)&qword_1EE80D488);
  }
  return result;
}

unint64_t sub_1A5F49424()
{
  unint64_t result;

  result = qword_1ED1CE570;
  if (!qword_1ED1CE570)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED1CE570);
  }
  return result;
}

uint64_t sub_1A5F49478()
{
  uint64_t *v0;

  return sub_1A5F48A98(v0[4], v0[5], v0[2], v0[3]);
}

unint64_t sub_1A5F49494()
{
  unint64_t result;

  result = qword_1EE80D490;
  if (!qword_1EE80D490)
  {
    result = MEMORY[0x1A85B8C3C](&unk_1A5F68470, &type metadata for SummaryEventDatabase);
    atomic_store(result, (unint64_t *)&qword_1EE80D490);
  }
  return result;
}

uint64_t *sub_1A5F494D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    sub_1A5ED462C();
    v8 = v7;
    v9 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v11 = sub_1A5F63DD0();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        v13 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      *(uint64_t *)((char *)a1 + *(int *)(v8 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 48));
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
  }
  return a1;
}

char *sub_1A5F4960C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  sub_1A5ED462C();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 1, v6);
  v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (v11)
    {
      sub_1A5ED4D44((uint64_t)a1, (uint64_t (*)(_QWORD))sub_1A5ED462C);
      goto LABEL_7;
    }
    v15 = sub_1A5F63DD0();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
    v18 = v17(a1, 1, v15);
    v19 = v17(a2, 1, v15);
    if (v18)
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(a1, a2, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
LABEL_16:
        *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
        return a1;
      }
    }
    else
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 24))(a1, a2, v15);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(a1, v15);
    }
    v20 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_16;
  }
  if (v11)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v12 = sub_1A5F63DD0();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
  {
    v14 = type metadata accessor for SummaryEventConfiguration.StorageURLOptions(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(a1, a2, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
  }
  *(_QWORD *)&a1[*(int *)(v7 + 48)] = *(_QWORD *)&a2[*(int *)(v7 + 48)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

