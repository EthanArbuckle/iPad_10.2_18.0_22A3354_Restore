uint64_t AdaptiveVolumeWorker.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_logger;
  v2 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_workerConfig;
  v4 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_236BE39DC@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  type metadata accessor for AdaptiveVolumeWorker();
  v4 = swift_allocObject();
  sub_236C35EFC();
  *(_BYTE *)(v4 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isStarted) = 0;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isAVSession) = 0;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_hasMarkedAVSessionStart) = 0;
  v5 = v4 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_workerConfig;
  v6 = *MEMORY[0x24BE09EA0];
  v7 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_neededPreviousFields) = 0;
  result = sub_236BF28D8(a1, v4 + 16);
  *a2 = v4;
  return result;
}

uint64_t sub_236BE3AAC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  return sub_236C358C0();
}

Swift::Bool __swiftcall RTCWorker.start()()
{
  uint64_t v0;
  _QWORD *v1;
  Swift::Bool *v2;
  Swift::Bool v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session), *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session + 24));
  if ((unsigned __int16)sub_236C35B00() == 11 || !sub_236BE3DBC(v1))
    return 0;
  v2 = (Swift::Bool *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_isStarted);
  v3 = 1;
  swift_beginAccess();
  if (*v2)
  {
    swift_retain();
    v4 = sub_236C35F44();
    v5 = sub_236C36328();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v6 = 134217984;
      __swift_project_boxed_opaque_existential_1(v1, v1[3]);
      sub_236C35AF4();
      sub_236C363F4();
      swift_release();
      _os_log_impl(&dword_236BE1000, v4, v5, "Already started. { reporterID=%lld }", v6, 0xCu);
      MEMORY[0x23B800318](v6, -1, -1);
    }
    else
    {
      swift_release();
    }

    return *v2;
  }
  else
  {
    sub_236BE4B3C();
    *v2 = 1;
  }
  return v3;
}

uint64_t sub_236BE3CAC@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  type metadata accessor for AirPodWorker();
  swift_allocObject();
  result = AirPodWorker.init(with:)(a1);
  *a2 = result;
  return result;
}

uint64_t AirPodWorker.init(with:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v1 + 16) = 0;
  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_workerConfig;
  v4 = *MEMORY[0x24BE09E98];
  v5 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v3, v4, v5);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_neededPreviousFields) = 0;
  sub_236C35F38();
  v6 = OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_halIOCategory;
  *(_DWORD *)(v1 + v6) = sub_236C35E54();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_isAirPodSession) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_hasSentAirPodInformation) = 0;
  sub_236BF28D8(a1, v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_session);
  return v1;
}

BOOL sub_236BE3DBC(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int16 v3;
  unint64_t v4;
  char v5;
  double v6;
  uint64_t v7;
  double v8;

  v2 = sub_236C35DDC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v3 = sub_236C35B00();
  if (*(_QWORD *)(v2 + 16) && (v4 = sub_236BE3E64(v3), (v5 & 1) != 0))
  {
    v6 = *(double *)(*(_QWORD *)(v2 + 56) + 8 * v4);
    v7 = swift_bridgeObjectRelease();
    sub_236C0737C(v7, 0.0, 1.0);
    return v8 < v6;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 1;
  }
}

unint64_t sub_236BE3E64(unsigned __int16 a1)
{
  uint64_t v2;

  sub_236C366A0();
  sub_236C366B8();
  v2 = sub_236C366C4();
  return sub_236BF2070(a1, v2);
}

uint64_t sub_236BE3EBC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542B30B0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_236C36574();
  __break(1u);
  return result;
}

uint64_t sub_236BE4024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  BOOL v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  unsigned __int8 *v9;
  _BYTE *v10;
  _BYTE *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  if (qword_2542B1518 != -1)
    swift_once();
  v2 = qword_2542B41D0;
  v3 = (_QWORD *)(v0 + 16);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  swift_bridgeObjectRetain();
  v4 = sub_236C35B00();
  v5 = sub_236BF225C(v4, v2);
  swift_bridgeObjectRelease();
  if (!v5)
    return 0;
  v6 = sub_236C35F44();
  v7 = sub_236C36328();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_236BE1000, v6, v7, "Matched service, starting Adaptive Volume worker!", v8, 2u);
    MEMORY[0x23B800318](v8, -1, -1);
  }

  v9 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isStarted);
  swift_beginAccess();
  *v9 = 1;
  v10 = (_BYTE *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isAVSession);
  swift_beginAccess();
  if (*v10 == 1)
  {
    v11 = (_BYTE *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_hasMarkedAVSessionStart);
    swift_beginAccess();
    if ((*v11 & 1) == 0)
    {
      v12 = sub_236C35F44();
      v13 = sub_236C36328();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_236BE1000, v12, v13, "Found AV device, starting AV session", v14, 2u);
        MEMORY[0x23B800318](v14, -1, -1);
      }

      if (qword_256447028 != -1)
        swift_once();
      __swift_project_boxed_opaque_existential_1(v3, *(_QWORD *)(v1 + 40));
      v15 = sub_236C35B48();
      sub_236BF6E8C(v15, v16);
      swift_bridgeObjectRelease();
      *v11 = 1;
    }
  }
  return *v9;
}

_QWORD *sub_236BE42AC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;

  swift_allocObject();
  result = RTCWorker.init(with:)(a1);
  *a2 = result;
  return result;
}

_QWORD *RTCWorker.init(with:)(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v19 = *v1;
  v4 = sub_236C35E0C();
  v17 = *(_QWORD *)(v4 - 8);
  v18 = v4;
  MEMORY[0x24BDAC7A8]();
  v16 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (char *)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_workerConfig;
  v7 = *MEMORY[0x24BE09EC8];
  v8 = sub_236C35CB0();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v6, v7, v8);
  *((_BYTE *)v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_isStarted) = 0;
  v10 = MEMORY[0x24BEE4B00];
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_summaryEvent) = MEMORY[0x24BEE4B00];
  *((_BYTE *)v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_startAttempted) = 0;
  *((_BYTE *)v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_underTest) = 0;
  v11 = (char *)v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_logger;
  sub_236C35F08();
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_summaryEvents) = v10;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcReportingToken) = 0;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcReporting) = 0;
  v12 = (char *)v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker____lazy_storage___timeFuzzer;
  *((_WORD *)v12 + 12) = 256;
  *((_QWORD *)v12 + 1) = 0;
  *((_QWORD *)v12 + 2) = 0;
  *(_QWORD *)v12 = 0;
  *((_BYTE *)v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker____lazy_storage___shouldBatch) = 2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((unsigned __int16)sub_236C35B00() == 11)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
    swift_bridgeObjectRelease();
    v13 = sub_236C35F50();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
    swift_bridgeObjectRelease();

    swift_deallocPartialClassInstance();
    v2 = 0;
  }
  else
  {
    sub_236BEBE50((uint64_t)a1, (uint64_t)v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_236C35B30();
    v14 = v16;
    sub_236C35CA4();
    swift_release();
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))((uint64_t)v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcConfig, v14, v18);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

uint64_t SummaryDecoratorWorker.init(with:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  _BYTE v32[16];
  _QWORD *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;
  _QWORD v46[3];
  uint64_t v47;

  v2 = v1;
  v41 = *(_QWORD *)v1;
  *(_BYTE *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = MEMORY[0x24BEE4B00];
  v4 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_workerConfig;
  v5 = *MEMORY[0x24BE09EC0];
  v6 = sub_236C35CB0();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(v4, v5, v6);
  v8 = v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_logger;
  sub_236C35F14();
  v9 = v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_session;
  sub_236BEBE50((uint64_t)a1, v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_session);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_config) = sub_236C35B30();
  v10 = *(_QWORD *)(sub_236C35CBC() + 16);
  swift_bridgeObjectRelease();
  if (!v10)
  {
    v38 = v9;
    v39 = v7;
    v40 = v4;
    sub_236BEBE50((uint64_t)a1, (uint64_t)v46);
    sub_236BEBE50((uint64_t)a1, (uint64_t)v44);
    v22 = sub_236C35F44();
    v23 = sub_236C36328();
    v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      v37 = v8;
      v25 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v43 = v36;
      *(_DWORD *)v25 = 134218243;
      __swift_project_boxed_opaque_existential_1(v46, v47);
      v35 = v24;
      sub_236C35AF4();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
      sub_236C363F4();
      *(_WORD *)(v25 + 12) = 2081;
      v34 = v25 + 14;
      __swift_project_boxed_opaque_existential_1(v44, v45);
      sub_236C35B00();
      v26 = sub_236C35E84();
      v42 = sub_236C0ED40(v26, v27, &v43);
      sub_236C363F4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
      _os_log_impl(&dword_236BE1000, v22, (os_log_type_t)v35, "No summary configs found. { reporterID=%lld, serviceType=%{private}s }", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v36, -1, -1);
      v28 = v25;
      v8 = v37;
      MEMORY[0x23B800318](v28, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    }

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v6);
    __swift_destroy_boxed_opaque_existential_1(v38);
    swift_release();
    v29 = sub_236C35F50();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v8, v29);
    swift_deallocPartialClassInstance();
    goto LABEL_12;
  }
  v11 = sub_236C35CBC();
  MEMORY[0x24BDAC7A8](v11);
  v33 = a1;
  v13 = sub_236BEB684((uint64_t (*)(_QWORD))sub_236BEB894, (uint64_t)v32, v12);
  MEMORY[0x24BDAC7A8](v13);
  v33 = a1;
  v14 = sub_236C15AF0((void (*)(uint64_t *__return_ptr, uint64_t))sub_236BEB4B8, (uint64_t)v32, v13);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_summaryDecoratorStates) = v14;
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v31 = sub_236C36544();
    swift_bridgeObjectRelease();
    if (v31)
      goto LABEL_13;
    goto LABEL_4;
  }
  if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_4:
    sub_236BEBE50((uint64_t)a1, (uint64_t)v46);
    sub_236BEBE50((uint64_t)a1, (uint64_t)v44);
    v15 = sub_236C35F44();
    v16 = sub_236C36328();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v43 = v41;
      *(_DWORD *)v17 = 134218243;
      __swift_project_boxed_opaque_existential_1(v46, v47);
      v18 = sub_236C35AF4();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
      v42 = v18;
      sub_236C363F4();
      *(_WORD *)(v17 + 12) = 2081;
      __swift_project_boxed_opaque_existential_1(v44, v45);
      sub_236C35B00();
      v19 = sub_236C35E84();
      v42 = sub_236C0ED40(v19, v20, &v43);
      sub_236C363F4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
      _os_log_impl(&dword_236BE1000, v15, v16, "No matching summary configs. { reporterID=%lld, serviceType=%{private}s }", (uint8_t *)v17, 0x16u);
      v21 = v41;
      swift_arrayDestroy();
      MEMORY[0x23B800318](v21, -1, -1);
      MEMORY[0x23B800318](v17, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    }
    swift_release();

LABEL_12:
    v2 = 0;
  }
LABEL_13:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

uint64_t sub_236BE4B3C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  _BYTE *v6;
  uint64_t result;

  v1 = MEMORY[0x24BEE4B00];
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_underTest) & 1) == 0)
  {
    v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_summaryEvent);
    swift_beginAccess();
    *v2 = v1;
    swift_bridgeObjectRelease();
  }
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_summaryEvents);
  swift_beginAccess();
  *v3 = v1;
  swift_bridgeObjectRelease();
  v4 = *(void **)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcReporting);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcReporting) = 0;

  v5 = *(void **)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcReportingToken);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcReportingToken) = 0;

  v6 = (_BYTE *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_isStarted);
  result = swift_beginAccess();
  *v6 = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_startAttempted) = 0;
  return result;
}

uint64_t sub_236BE4C2C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_236BE4C94@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14PowerLogWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PowerLogWorker.init(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;

  *(_BYTE *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 72) = 60;
  *(_WORD *)(v1 + 80) = 28;
  *(_BYTE *)(v1 + 82) = 0;
  sub_236C35F20();
  v3 = OBJC_IVAR____TtC22AudioAnalyticsExternal14PowerLogWorker_rmsState;
  type metadata accessor for PowerLogWorker.RMSState();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 40) = 0xFF7FFFFF7F7FFFFFLL;
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0xE000000000000000;
  *(_QWORD *)(v4 + 64) = 0;
  *(_BYTE *)(v4 + 72) = 1;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v1 + v3) = v4;
  v5 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14PowerLogWorker_workerConfig;
  v6 = *MEMORY[0x24BE09ED0];
  v7 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  sub_236BEBE50(a1, v1 + 24);
  sub_236C35B90();
  sub_236C35B9C();
  sub_236C35BA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1);
  if (v11 == 1)
    v8 = 1800;
  else
    v8 = v10;
  *(_QWORD *)(v1 + 64) = v8;
  return v1;
}

uint64_t SessionSummaryWorker.init(with:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(unint64_t, _QWORD, uint64_t);
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[4];
  _QWORD v25[4];

  v2 = v1;
  *(_BYTE *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = MEMORY[0x24BEE4B00];
  v4 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_workerConfig;
  v5 = *MEMORY[0x24BE09EB0];
  v6 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
  v7 = OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_neededPreviousFields;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B30A0);
  v8 = sub_236C35C98();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_236C389D0;
  v13 = *(void (**)(unint64_t, _QWORD, uint64_t))(v9 + 104);
  v13(v12 + v11, *MEMORY[0x24BE09DC8], v8);
  v13(v12 + v11 + v10, *MEMORY[0x24BE09DE8], v8);
  v13(v12 + v11 + 2 * v10, *MEMORY[0x24BE09DD0], v8);
  v13(v12 + v11 + 3 * v10, *MEMORY[0x24BE09E58], v8);
  v13(v12 + v11 + 4 * v10, *MEMORY[0x24BE09DB8], v8);
  v13(v12 + v11 + 5 * v10, *MEMORY[0x24BE09E08], v8);
  v13(v12 + v11 + 6 * v10, *MEMORY[0x24BE09E10], v8);
  v13(v12 + v11 + 7 * v10, *MEMORY[0x24BE09E60], v8);
  v13(v12 + v11 + 8 * v10, *MEMORY[0x24BE09DF8], v8);
  v14 = sub_236C27640(v12);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v7) = v14;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_totalActiveTime) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_activeCount) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_overloadCount) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_audibleOverloadCount) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_totalMessageCount) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_uniqueMessageCount) = 0;
  sub_236C35F14();
  sub_236BEBE50((uint64_t)a1, v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_session);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_config) = sub_236C35B30();
  v15 = *(_QWORD *)(sub_236C35CBC() + 16);
  swift_bridgeObjectRelease();
  if (!v15)
  {
    sub_236BEBE50((uint64_t)a1, (uint64_t)v25);
    sub_236BEBE50((uint64_t)a1, (uint64_t)v24);
    v16 = sub_236C35F44();
    v17 = sub_236C36328();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v23 = v22;
      *(_DWORD *)v18 = 134218243;
      __swift_project_boxed_opaque_existential_1(v25, v25[3]);
      sub_236C35AF4();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      sub_236C363F4();
      *(_WORD *)(v18 + 12) = 2081;
      __swift_project_boxed_opaque_existential_1(v24, v24[3]);
      sub_236C35B00();
      v19 = sub_236C35E84();
      sub_236C0ED40(v19, v20, &v23);
      sub_236C363F4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      _os_log_impl(&dword_236BE1000, v16, v17, "No summary configs found. { reporterID=%lld, serviceType=%{private}s }", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v22, -1, -1);
      MEMORY[0x23B800318](v18, -1, -1);
      swift_release();

    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      swift_release();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    }
    v2 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

uint64_t sub_236BE52DC@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t result;
  uint64_t v14;

  v4 = sub_236C35614();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_allocObject();
  *(_BYTE *)(v8 + 16) = 0;
  v9 = v8 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_workerConfig;
  v10 = *MEMORY[0x24BE09E90];
  v11 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v9, v10, v11);
  v12 = objc_msgSend((id)objc_opt_self(), sel_alphanumericCharacterSet);
  sub_236C355FC();

  sub_236C35608();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  result = sub_236BF28D8(a1, v8 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_session);
  *a2 = v8;
  return result;
}

uint64_t DriverSnapshotWorker.init(with:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;

  v2 = v1;
  *(_BYTE *)(v1 + 16) = 0;
  v4 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_workerConfig;
  v5 = *MEMORY[0x24BE09EA8];
  v6 = sub_236C35CB0();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(v4, v5, v6);
  v8 = v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_logger;
  sub_236C35F14();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_startSample) = 0;
  if (qword_2542B1528 != -1)
    swift_once();
  v9 = qword_2542B4288;
  __swift_project_boxed_opaque_existential_1(a1, *((_QWORD *)a1 + 3));
  v10 = sub_236C35B30();
  if (qword_2542B1530 != -1)
    swift_once();
  v11 = (os_unfair_lock_s *)(qword_2542B26A8 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_2542B26A8 + 16));
  if ((*(_BYTE *)(v9 + 17) & 1) == 0)
  {
    *(_QWORD *)(v9 + 24) = v10;
    swift_retain();
    swift_release();
    *(_BYTE *)(v9 + 17) = 1;
    *(_BYTE *)(v9 + 16) = sub_236C0BB44() & 1;
    v11 = (os_unfair_lock_s *)(qword_2542B26A8 + 16);
  }
  os_unfair_lock_unlock(v11);
  swift_release();
  if (*(_BYTE *)(qword_2542B4288 + 16) == 1)
  {
    sub_236BF28D8(a1, v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_session);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
    v12 = sub_236C35F50();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v8, v12);

    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return 0;
  }
  return v2;
}

uint64_t sub_236BE5630(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;

  v2 = sub_236C3592C();
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v33 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3080);
  result = sub_236C36550();
  v5 = (_QWORD *)result;
  v6 = 0;
  v37 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v29 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v30 = (unint64_t)(v8 + 63) >> 6;
  v31 = (_QWORD *)result;
  v32 = result + 64;
  v11 = v33;
  v12 = v35;
  if ((v9 & v7) == 0)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  v14 = v6;
  for (i = v13 | (v6 << 6); ; i = __clz(__rbit64(v17)) + (v18 << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(v37 + 48) + 16 * i);
    v22 = *v20;
    v21 = v20[1];
    v23 = v34;
    (*(void (**)(char *, unint64_t, uint64_t))(v34 + 16))(v11, *(_QWORD *)(v37 + 56) + *(_QWORD *)(v34 + 72) * i, v12);
    swift_bridgeObjectRetain();
    sub_236C35920();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v12);
    v5 = v31;
    *(_QWORD *)(v32 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v24 = (_QWORD *)(v5[6] + 16 * i);
    *v24 = v22;
    v24[1] = v21;
    result = (uint64_t)sub_236BECFF4(&v36, (_OWORD *)(v5[7] + 32 * i));
    v25 = v5[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v5[2] = v27;
    v6 = v14;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v16 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_24;
    if (v16 >= v30)
      return (uint64_t)v5;
    v17 = *(_QWORD *)(v29 + 8 * v16);
    v18 = v6 + 1;
    if (!v17)
    {
      v18 = v6 + 2;
      if (v6 + 2 >= v30)
        return (uint64_t)v5;
      v17 = *(_QWORD *)(v29 + 8 * v18);
      if (!v17)
      {
        v18 = v6 + 3;
        if (v6 + 3 >= v30)
          return (uint64_t)v5;
        v17 = *(_QWORD *)(v29 + 8 * v18);
        if (!v17)
          break;
      }
    }
LABEL_18:
    v10 = (v17 - 1) & v17;
    v14 = v18;
  }
  v19 = v6 + 4;
  if (v6 + 4 >= v30)
    return (uint64_t)v5;
  v17 = *(_QWORD *)(v29 + 8 * v19);
  if (v17)
  {
    v18 = v6 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v18 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v18 >= v30)
      return (uint64_t)v5;
    v17 = *(_QWORD *)(v29 + 8 * v18);
    ++v19;
    if (v17)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_236BE58B4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_workerConfig;
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_236BE58FC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_236BE5964@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_236BE59CC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_236BE5A34@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_236BE5A9C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t *TailspinWorker.init(with:)(__int128 *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  uint64_t v35;

  v2 = v1;
  v34 = a1;
  v31 = *v1;
  v3 = type metadata accessor for TailspinOptions(0);
  MEMORY[0x24BDAC7A8](v3);
  v30 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_236C3637C();
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_236C36364();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_236C35FEC();
  MEMORY[0x24BDAC7A8](v9);
  *((_BYTE *)v1 + 16) = 0;
  v10 = (uint64_t)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_workerConfig;
  v11 = *MEMORY[0x24BE09ED8];
  v12 = sub_236C35CB0();
  v27 = *(_QWORD *)(v12 - 8);
  v28 = v12;
  v13 = *(void (**)(uint64_t, uint64_t))(v27 + 104);
  v29 = v10;
  v13(v10, v11);
  v14 = (uint64_t)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_tailspinOptions;
  LOBYTE(v35) = 0;
  sub_236C358F0();
  LOBYTE(v35) = 1;
  sub_236C358F0();
  v15 = *(int *)(v3 + 24);
  *(_BYTE *)(v14 + v15) = sub_236C35E6C() & 1;
  v25[1] = v3;
  v16 = *(int *)(v3 + 28);
  *(_BYTE *)(v14 + v16) = sub_236C35E18() & 1;
  v25[0] = OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker____lazy_storage___tailspinCases;
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker____lazy_storage___tailspinCases) = 0;
  v26 = (uint64_t)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_logger;
  sub_236C35F2C();
  v17 = OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_requestQueue;
  sub_236C082F8();
  sub_236C35FBC();
  v35 = MEMORY[0x24BEE4AF8];
  sub_236BE6C98(&qword_2542B3000, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FE0);
  sub_236C08334();
  sub_236C36448();
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v7, *MEMORY[0x24BEE5750], v33);
  *(uint64_t *)((char *)v1 + v17) = sub_236C363A0();
  if (qword_2542B1D60 != -1)
    swift_once();
  sub_236C2EACC();
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  sub_236C35EB4();
  swift_release();
  swift_release();
  swift_release();
  if (v35 == 1)
  {
    swift_retain();
    v18 = (uint64_t)v30;
    sub_236C35EA8();
    swift_release();
    swift_beginAccess();
    sub_236C331D0(v18, v14);
    swift_endAccess();
    sub_236BF28D8(v34, (uint64_t)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_session);
  }
  else
  {
    v19 = v26;
    v20 = sub_236C35F44();
    v21 = sub_236C36328();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_236BE1000, v20, v21, "Skipping TailspinWorker initialization: Tailspin not enabled. { isTailspinReady=false }", v22, 2u);
      MEMORY[0x23B800318](v22, -1, -1);
    }

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
    sub_236BF2798(v14);
    swift_bridgeObjectRelease();
    v23 = sub_236C35F50();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v19, v23);

    swift_deallocPartialClassInstance();
    return 0;
  }
  return v2;
}

uint64_t type metadata accessor for TailspinOptions(uint64_t a1)
{
  return sub_236BEB454(a1, qword_2542B1E98);
}

void sub_236BE5FF0(uint64_t a1)
{
  PowerLogWorker.process(message:)(a1);
}

void PowerLogWorker.process(message:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _DWORD *v10;
  _DWORD *v11;
  os_log_type_t v12;
  uint8_t *v13;

  v2 = v1;
  swift_beginAccess();
  if (*(_BYTE *)(v2 + 16) != 1)
  {
    swift_retain();
    v8 = sub_236C35F44();
    v12 = sub_236C36328();
    if (os_log_type_enabled(v8, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v13 = 134217984;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 48));
      sub_236C35AF4();
      sub_236C363F4();
      swift_release();
      _os_log_impl(&dword_236BE1000, v8, v12, "Worker not started, cannot send message to PowerLog. { reporterID=%lld }", v13, 0xCu);
      MEMORY[0x23B800318](v13, -1, -1);
    }
    else
    {
      swift_release();
    }
LABEL_13:

    return;
  }
  if ((sub_236BE637C() & 1) != 0)
  {
    v4 = OBJC_IVAR____TtC22AudioAnalyticsExternal14PowerLogWorker_rmsState;
    swift_retain();
    sub_236C1FD04(a1);
    swift_release();
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + v4) + 80);
    v6 = (unsigned __int128)(v5 * (__int128)10) >> 64;
    v7 = 10 * v5;
    if (v6 != v7 >> 63)
    {
      __break(1u);
LABEL_18:
      __break(1u);
      return;
    }
    if (v7 >= *(_QWORD *)(v2 + 64))
    {
      sub_236C1E7B4(0x72656D6974, 0xE500000000000000);
      return;
    }
    swift_retain_n();
    v8 = sub_236C35F44();
    v9 = sub_236C36328();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (_DWORD *)swift_slowAlloc();
      *v10 = 134218496;
      if ((unsigned __int128)(*(uint64_t *)(*(_QWORD *)(v2 + v4) + 80) * (__int128)10) >> 64 == (10 * *(_QWORD *)(*(_QWORD *)(v2 + v4) + 80)) >> 63)
      {
        v11 = v10;
        sub_236C363F4();
        *((_WORD *)v11 + 6) = 2048;
        sub_236C363F4();
        swift_release();
        *((_WORD *)v11 + 11) = 2048;
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 48));
        sub_236C35AF4();
        swift_release();
        sub_236C363F4();
        swift_release();
        _os_log_impl(&dword_236BE1000, v8, v9, "Skipping sending RMS information, session does not have enough messages. (%ld < %ld { reporterID=%lld }", (uint8_t *)v11, 0x20u);
        MEMORY[0x23B800318](v11, -1, -1);

        return;
      }
      goto LABEL_18;
    }
    swift_release_n();
    goto LABEL_13;
  }
  if ((unsigned __int16)sub_236C35CF8() == 8)
    sub_236C1ED0C();
}

uint64_t sub_236BE637C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  __int16 v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  void (*v34)(uint64_t *, unint64_t, uint64_t);
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  void (*v39)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  _BYTE *v42;
  void (*v43)(_BYTE *, uint64_t);
  unint64_t v44;
  char v45;
  uint64_t v46;
  void (*v47)(_QWORD *, _QWORD, uint64_t);
  void (*v48)(_QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char v52;
  void (*v54)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v55;
  void (*v56)(_QWORD *, _QWORD, uint64_t, uint64_t);
  void (*v57)(_BYTE *, uint64_t);
  unint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t *v65;
  unsigned int v66;
  char v67;
  _BYTE v68[4];
  int v69;
  uint64_t v70;
  void (*v71)(_QWORD *, _QWORD, uint64_t, uint64_t);
  void (*v72)(_QWORD *, _QWORD, uint64_t);
  void (*v73)(uint64_t *, unint64_t, uint64_t);
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t *v78;
  _BYTE *v79;
  _BYTE *v80;
  _BYTE *v81;
  uint64_t *v82;
  _BYTE *v83;
  uint64_t v84;

  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1648);
  v0 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v83 = &v68[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v68[-v2];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v77 = (uint64_t *)&v68[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = MEMORY[0x24BDAC7A8](v5);
  v78 = (uint64_t *)&v68[-v8];
  v9 = MEMORY[0x24BDAC7A8](v7);
  v79 = &v68[-v10];
  v11 = MEMORY[0x24BDAC7A8](v9);
  v81 = &v68[-v12];
  v13 = MEMORY[0x24BDAC7A8](v11);
  v82 = (uint64_t *)&v68[-v14];
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v68[-v16];
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = &v68[-v19];
  MEMORY[0x24BDAC7A8](v18);
  v22 = (uint64_t *)&v68[-v21];
  v23 = sub_236C3592C();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v80 = &v68[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v25);
  v28 = (uint64_t *)&v68[-v27];
  v29 = sub_236C35CF8();
  v30 = sub_236C35D10();
  if (!*(_QWORD *)(v30 + 16))
    goto LABEL_27;
  v31 = sub_236BEE010(1701080942, 0xE400000000000000);
  if ((v32 & 1) == 0)
    goto LABEL_27;
  v33 = *(_QWORD *)(v30 + 56);
  v76 = *(_QWORD *)(v24 + 72);
  v34 = *(void (**)(uint64_t *, unint64_t, uint64_t))(v24 + 16);
  v34(v28, v33 + v76 * v31, v23);
  v35 = (*(uint64_t (**)(uint64_t *, uint64_t))(v24 + 88))(v28, v23);
  if (v35 == *MEMORY[0x24BE09AD0])
  {
    v75 = v35;
    (*(void (**)(uint64_t *, uint64_t))(v24 + 96))(v28, v23);
    v36 = v28[1];
    if (v29 == 7)
    {
      v73 = v34;
      v74 = v36;
      v70 = *v28;
      if (*(_QWORD *)(v30 + 16) && (v37 = sub_236BEE010(0x6C635F6469617472, 0xEC000000746E6569), (v38 & 1) != 0))
      {
        v73(v22, *(_QWORD *)(v30 + 56) + v37 * v76, v23);
        v39 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v24 + 56);
        v39(v22, 0, 1, v23);
      }
      else
      {
        v39 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v24 + 56);
        v39(v22, 1, 1, v23);
      }
      *v20 = 4997448;
      v20[1] = 0xE300000000000000;
      v72 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v24 + 104);
      v72(v20, v75, v23);
      v39(v20, 0, 1, v23);
      v40 = (uint64_t)&v3[*(int *)(v84 + 48)];
      sub_236BE6C50((uint64_t)v22, (uint64_t)v3);
      sub_236BE6C50((uint64_t)v20, v40);
      v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
      if (v41((uint64_t)v3, 1, v23) == 1)
      {
        v71 = (void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v39;
        sub_236BE6C14((uint64_t)v20, &qword_2542B1640);
        sub_236BE6C14((uint64_t)v22, &qword_2542B1640);
        if (v41(v40, 1, v23) != 1)
          goto LABEL_24;
        sub_236BE6C14((uint64_t)v3, &qword_2542B1640);
        goto LABEL_15;
      }
      sub_236BE6C50((uint64_t)v3, (uint64_t)v17);
      if (v41(v40, 1, v23) == 1)
        goto LABEL_23;
      v71 = (void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v39;
      v42 = v80;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v24 + 32))(v80, v40, v23);
      sub_236BE6C98((unint64_t *)&qword_2542B14E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE09AE0], MEMORY[0x24BE09AF8]);
      v69 = sub_236C360C4();
      v43 = *(void (**)(_BYTE *, uint64_t))(v24 + 8);
      v43(v42, v23);
      sub_236BE6C14((uint64_t)v20, &qword_2542B1640);
      sub_236BE6C14((uint64_t)v22, &qword_2542B1640);
      v43(v17, v23);
      sub_236BE6C14((uint64_t)v3, &qword_2542B1640);
      if ((v69 & 1) != 0)
      {
LABEL_15:
        if (*(_QWORD *)(v30 + 16) && (v44 = sub_236BEE010(0x745F74726F706572, 0xEB00000000657079), (v45 & 1) != 0))
        {
          v22 = v82;
          v73(v82, *(_QWORD *)(v30 + 56) + v44 * v76, v23);
          v46 = 0;
          v3 = v83;
        }
        else
        {
          v46 = 1;
          v22 = v82;
          v3 = v83;
        }
        v20 = v81;
        v48 = v71;
        v47 = v72;
        v71(v22, v46, 1, v23);
        *v20 = 5459282;
        v20[1] = 0xE300000000000000;
        v47(v20, v75, v23);
        v48(v20, 0, 1, v23);
        v49 = (uint64_t)&v3[*(int *)(v84 + 48)];
        sub_236BE6C50((uint64_t)v22, (uint64_t)v3);
        sub_236BE6C50((uint64_t)v20, v49);
        if (v41((uint64_t)v3, 1, v23) == 1)
        {
          sub_236BE6C14((uint64_t)v20, &qword_2542B1640);
          sub_236BE6C14((uint64_t)v22, &qword_2542B1640);
          if (v41(v49, 1, v23) == 1)
          {
            sub_236BE6C14((uint64_t)v3, &qword_2542B1640);
LABEL_31:
            if (*(_QWORD *)(v30 + 16))
            {
              v58 = sub_236BEE010(7564658, 0xE300000000000000);
              if ((v59 & 1) != 0)
              {
                v60 = (uint64_t)v78;
                v73(v78, *(_QWORD *)(v30 + 56) + v58 * v76, v23);
                v61 = 1;
                v48((_QWORD *)v60, 0, 1, v23);
                sub_236BE6C14(v60, &qword_2542B1640);
                if (*(_QWORD *)(v30 + 16))
                {
                  v62 = sub_236BEE010(1801545072, 0xE400000000000000);
                  v63 = (uint64_t)v77;
                  if ((v64 & 1) != 0)
                  {
                    v73(v77, *(_QWORD *)(v30 + 56) + v62 * v76, v23);
                    v61 = 0;
                  }
                }
                else
                {
                  v63 = (uint64_t)v77;
                }
                v48((_QWORD *)v63, v61, 1, v23);
                swift_bridgeObjectRelease();
                v66 = v41(v63, 1, v23);
                sub_236BE6C14(v63, &qword_2542B1640);
                if (v66 != 1)
                {
                  v67 = sub_236C1FB70();
                  swift_bridgeObjectRelease();
                  v52 = v67 ^ 1;
                  return v52 & 1;
                }
                goto LABEL_27;
              }
            }
            v65 = v78;
            v48(v78, 1, 1, v23);
            v50 = &qword_2542B1640;
            v51 = (uint64_t)v65;
            goto LABEL_25;
          }
LABEL_24:
          v50 = &qword_2542B1648;
          v51 = (uint64_t)v3;
LABEL_25:
          sub_236BE6C14(v51, v50);
          goto LABEL_26;
        }
        v17 = v79;
        sub_236BE6C50((uint64_t)v3, (uint64_t)v79);
        if (v41(v49, 1, v23) != 1)
        {
          v54 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v24 + 32);
          v84 = (uint64_t)v41;
          v55 = v80;
          v54(v80, v49, v23);
          sub_236BE6C98((unint64_t *)&qword_2542B14E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE09AE0], MEMORY[0x24BE09AF8]);
          LODWORD(v83) = sub_236C360C4();
          v56 = v48;
          v57 = *(void (**)(_BYTE *, uint64_t))(v24 + 8);
          v57(v55, v23);
          sub_236BE6C14((uint64_t)v20, &qword_2542B1640);
          sub_236BE6C14((uint64_t)v22, &qword_2542B1640);
          v57(v17, v23);
          v48 = v56;
          sub_236BE6C14((uint64_t)v3, &qword_2542B1640);
          v41 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v84;
          if ((v83 & 1) == 0)
            goto LABEL_26;
          goto LABEL_31;
        }
LABEL_23:
        sub_236BE6C14((uint64_t)v20, &qword_2542B1640);
        sub_236BE6C14((uint64_t)v22, &qword_2542B1640);
        (*(void (**)(_BYTE *, uint64_t))(v24 + 8))(v17, v23);
        goto LABEL_24;
      }
    }
LABEL_26:
    swift_bridgeObjectRelease();
LABEL_27:
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *, uint64_t))(v24 + 8))(v28, v23);
LABEL_28:
  v52 = 0;
  return v52 & 1;
}

uint64_t sub_236BE6C14(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_236BE6C50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_236BE6C98(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23B80027C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_236BE6CD8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  os_log_type_t v17;
  uint8_t *v18;
  os_log_t oslog;

  v1 = v0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_startAttempted) = 1;
  v2 = objc_msgSend((id)objc_opt_self(), sel_newHierarchyTokenFromParentToken_, 0);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcReportingToken);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcReportingToken) = v2;

  v4 = sub_236BE99A8();
  v6 = v5;
  sub_236BE7054((uint64_t)v4);
  swift_bridgeObjectRelease();
  sub_236BE7054(v6);
  swift_bridgeObjectRelease();
  v7 = objc_allocWithZone(MEMORY[0x24BE7CA80]);
  v8 = (void *)sub_236C36040();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_236C36040();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v7, sel_initWithSessionInfo_userInfo_frameworksToCheck_, v8, v9, 0);

  v11 = OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcReporting;
  v12 = *(void **)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcReporting);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcReporting) = v10;

  v13 = *(void **)(v1 + v11);
  if (v13)
  {
    oslog = v13;
    -[NSObject startConfigurationWithCompletionHandler:](oslog, sel_startConfigurationWithCompletionHandler_, 0);
    swift_retain();
    v14 = sub_236C35F44();
    v15 = sub_236C36328();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v16 = 134217984;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session), *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session + 24));
      sub_236C35AF4();
      sub_236C363F4();
      swift_release();
      _os_log_impl(&dword_236BE1000, v14, v15, "RTC started { reporterID=%lld }", v16, 0xCu);
      MEMORY[0x23B800318](v16, -1, -1);
    }
    else
    {
      swift_release();
    }

  }
  else
  {
    swift_retain();
    oslog = (os_log_t)sub_236C35F44();
    v17 = sub_236C36334();
    if (os_log_type_enabled(oslog, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v18 = 134217984;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session), *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session + 24));
      sub_236C35AF4();
      sub_236C363F4();
      swift_release();
      _os_log_impl(&dword_236BE1000, oslog, v17, "Failed to unwrap RTC Reporting object { reporterID=%lld }", v18, 0xCu);
      MEMORY[0x23B800318](v18, -1, -1);
    }
    else
    {
      swift_release();
    }
  }

}

uint64_t sub_236BE7054(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _OWORD v31[2];
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];
  _OWORD v37[2];
  uint64_t v38;
  _OWORD v39[2];
  uint64_t v40;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3090);
    v2 = sub_236C36568();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_37;
      v14 = *(_QWORD *)(v27 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_37;
        v14 = *(_QWORD *)(v27 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_37;
          v14 = *(_QWORD *)(v27 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v12);
    sub_236BED454(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v39 + 8);
    *(_QWORD *)&v39[0] = v17;
    v37[0] = v39[0];
    v37[1] = v39[1];
    v38 = v40;
    *(_QWORD *)&v36[0] = v17;
    sub_236BE7428(0, (unint64_t *)&qword_2542B3038);
    v18 = v17;
    swift_dynamicCast();
    sub_236BECFF4((_OWORD *)((char *)v37 + 8), v31);
    v32 = v28;
    v33 = v29;
    v34 = v30;
    sub_236BECFF4(v31, v35);
    v28 = v32;
    v29 = v33;
    v30 = v34;
    sub_236BECFF4(v35, v36);
    sub_236BECFF4(v36, &v32);
    result = sub_236C36478();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(_QWORD *)(v10 + 32) = v30;
    result = (uint64_t)sub_236BECFF4(&v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_236C0A290();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_236BE7428(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_236BE7460(uint64_t a1)
{
  RTCWorker.process(message:)(a1);
}

void RTCWorker.process(message:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _BYTE *v8;
  char v9;
  void (*v10)(char *, uint64_t);
  char v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD v17[3];

  v2 = v1;
  v4 = sub_236C35D58();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_BYTE *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_isStarted);
  swift_beginAccess();
  if (*v8 == 1
    && ((*(_BYTE *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_startAttempted) & 1) != 0
     || (sub_236BE6CD8(), *v8 == 1))
    && *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcReporting))
  {
    sub_236C35D88();
    v9 = sub_236C35D34();
    v10 = *(void (**)(char *, uint64_t))(v5 + 8);
    v10(v7, v4);
    if ((v9 & 1) == 0)
    {
      sub_236C35D88();
      v11 = sub_236C35D40();
      v10(v7, v4);
      if ((v11 & 1) != 0)
      {
        sub_236BE7738(a1);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session), *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session + 24));
        if ((sub_236C35AE8() & 1) == 0)
        {
          v12 = sub_236C35D10();
          swift_retain();
          v13 = sub_236C26D40(v12);
          swift_bridgeObjectRelease();
          swift_release();
          sub_236C264A0(v13, (void (*)(uint64_t, uint64_t, char *))sub_236C26EF4);
          swift_release();
        }
      }
    }
  }
  else
  {
    swift_retain();
    v14 = sub_236C35F44();
    v15 = sub_236C36328();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v16 = 134217984;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session), *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session + 24));
      v17[2] = sub_236C35AF4();
      sub_236C363F4();
      swift_release();
      _os_log_impl(&dword_236BE1000, v14, v15, "Failed to process message, RTC not started. { reporterID=%lld }", v16, 0xCu);
      MEMORY[0x23B800318](v16, -1, -1);
    }
    else
    {
      swift_release();
    }

  }
}

void sub_236BE7738(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _BYTE *v8;
  void *v9;
  id v10;
  unsigned __int16 v11;
  unsigned __int16 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  unsigned int v27;
  void (*v28)(char *, uint64_t);
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  os_log_t v43;
  void *v44;
  uint64_t v45;
  os_log_t v46;
  int v47;
  void *v48;
  id v49;
  uint64_t v50;
  id v51;
  unsigned __int8 v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t v55;

  v2 = v1;
  v55 = *MEMORY[0x24BDAC8D0];
  v4 = sub_236C35DB8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_BYTE *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_isStarted);
  swift_beginAccess();
  if (*v8 == 1 && (v9 = *(void **)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcReporting)) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v10 = v9;
    v11 = sub_236C35D70();
    sub_236C35E60();
    v12 = sub_236C35CF8();
    if ((sub_236C35A94() & 1) == 0)
    {
      sub_236C35DA0();
      v14 = v13;
      v15 = (void *)sub_236C25620();
      v51 = v15;
      v52 = v16 & 1;
      v18 = v17;
      if ((v19 & 1) != 0)
        v18 = v14;
      v53 = v18;
      v54 = 0;
      v20 = sub_236C0737C((uint64_t)v15, 0.0, 500.0);
      sub_236C259E0(v20);
      v21 = v52;
      v22 = v53;
      v23 = v54;
      v24 = v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker____lazy_storage___timeFuzzer;
      *(_QWORD *)v24 = v51;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v22;
      *(_WORD *)(v24 + 24) = v23;
      sub_236C35DAC();
    }
    v25 = sub_236C35CEC();
    sub_236BECC30(v25);
    swift_bridgeObjectRelease();
    v26 = (void *)sub_236C36040();
    swift_bridgeObjectRelease();
    v51 = 0;
    v27 = objc_msgSend(v10, sel_sendMessageWithCategory_type_payload_error_, v11, v12, v26, &v51);

    if (v27)
    {
      v28 = *(void (**)(char *, uint64_t))(v5 + 8);
      v29 = v51;
      v28(v7, v4);

    }
    else
    {
      v33 = v51;
      v34 = (void *)sub_236C35680();

      swift_willThrow();
      v35 = v34;
      swift_retain();
      v36 = v34;
      v37 = sub_236C35F44();
      v38 = sub_236C36334();
      v39 = v38;
      if (os_log_type_enabled(v37, v38))
      {
        v40 = swift_slowAlloc();
        v48 = (void *)swift_slowAlloc();
        v51 = v48;
        *(_DWORD *)v40 = 134218243;
        v49 = v10;
        v47 = v39;
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session), *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session + 24));
        v46 = v37;
        v50 = sub_236C35AF4();
        sub_236C363F4();
        swift_release();
        *(_WORD *)(v40 + 12) = 2081;
        swift_getErrorValue();
        v41 = sub_236C36688();
        v50 = sub_236C0ED40(v41, v42, (uint64_t *)&v51);
        sub_236C363F4();
        swift_bridgeObjectRelease();

        v43 = v46;
        _os_log_impl(&dword_236BE1000, v46, (os_log_type_t)v47, "Error sending message { reporterID=%lld, error=%{private}s }", (uint8_t *)v40, 0x16u);
        v44 = v48;
        swift_arrayDestroy();
        MEMORY[0x23B800318](v44, -1, -1);
        MEMORY[0x23B800318](v40, -1, -1);

      }
      else
      {

        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  else
  {
    swift_retain();
    v30 = sub_236C35F44();
    v31 = sub_236C36334();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v32 = 134217984;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session), *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session + 24));
      v51 = (id)sub_236C35AF4();
      sub_236C363F4();
      swift_release();
      _os_log_impl(&dword_236BE1000, v30, v31, "Failed to send message, RTCReporting object not found. { reporterID=%lld }", v32, 0xCu);
      MEMORY[0x23B800318](v32, -1, -1);
    }
    else
    {
      swift_release();
    }

  }
}

void sub_236BE7CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_unfair_lock_s *v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  os_unfair_lock_s *v35;
  unint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 32);
  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 24)
                          + ((*(unsigned int *)(**(_QWORD **)(v2 + 24) + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_236BF2820();
  os_unfair_lock_unlock(v3);
  swift_release();
  v4 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 32)
                          + ((*(unsigned int *)(**(_QWORD **)(v2 + 32) + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_236BE3AAC();
  os_unfair_lock_unlock(v4);
  swift_release();
  swift_release();
  swift_retain_n();
  v5 = sub_236C35F44();
  v6 = sub_236C3634C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    *(_DWORD *)v7 = 67109376;
    swift_retain();
    v8 = sub_236BE8554();
    swift_release();
    LOBYTE(v42) = v8 & 1;
    sub_236C363F4();
    *(_WORD *)(v7 + 8) = 1024;
    swift_getKeyPath();
    swift_retain();
    swift_retain();
    sub_236C35EB4();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    LODWORD(v42) = v42;
    sub_236C363F4();
    swift_release();
    _os_log_impl(&dword_236BE1000, v5, v6, "Synced TailspinStatus. { isEnabled=%{BOOL}d, isReady=%{BOOL}d } ", (uint8_t *)v7, 0xEu);
    MEMORY[0x23B800318](v7, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  swift_retain();
  if ((sub_236BE8554() & 1) != 0)
  {
    swift_getKeyPath();
    swift_retain();
    sub_236C35EB4();
    swift_release();
    swift_release();
    swift_release();
    if ((v42 & 1) == 0 && (sub_236C34108() & 1) != 0)
    {
      v9 = *(_QWORD *)(v0 + 32);
      v10 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
      swift_retain();
      v11 = objc_msgSend(v10, sel_initWithBool_, 1);
      v12 = sub_236C35B90();
      v14 = v13;
      v15 = sub_236C35B9C();
      MEMORY[0x23B7FF040](v11, 0xD000000000000019, 0x8000000236C39840, v12, v14, v15, v16);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = (os_unfair_lock_s *)(*(_QWORD *)(v9 + 32)
                               + ((*(unsigned int *)(**(_QWORD **)(v9 + 32) + 48) + 3) & 0x1FFFFFFFCLL));
      swift_retain();
      os_unfair_lock_lock(v17);
LABEL_14:
      sub_236C2F9F8();
      os_unfair_lock_unlock(v17);
      swift_release();
      swift_release();
      goto LABEL_15;
    }
  }
  else
  {
    swift_release();
  }
  swift_retain();
  if ((sub_236BE8554() & 1) != 0)
  {
    swift_release();
    goto LABEL_15;
  }
  swift_getKeyPath();
  swift_retain();
  sub_236C35EB4();
  swift_release();
  swift_release();
  swift_release();
  if (v42 == 1 && (sub_236C34464() & 1) != 0)
  {
    v18 = *(_QWORD *)(v0 + 32);
    v19 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
    swift_retain();
    v20 = objc_msgSend(v19, sel_initWithBool_, 0);
    v21 = sub_236C35B90();
    v23 = v22;
    v24 = sub_236C35B9C();
    MEMORY[0x23B7FF040](v20, 0xD000000000000019, 0x8000000236C39840, v21, v23, v24, v25);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = (os_unfair_lock_s *)(*(_QWORD *)(v18 + 32)
                             + ((*(unsigned int *)(**(_QWORD **)(v18 + 32) + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v17);
    goto LABEL_14;
  }
LABEL_15:
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  sub_236C35EB4();
  swift_release();
  swift_release();
  swift_release();
  if (v42 == 1)
  {
    v26 = *(_QWORD *)(v1 + 16);
    v27 = v26 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v26 + 16);
    v28 = (os_unfair_lock_s *)(v26 + ((*(unsigned int *)(*(_QWORD *)v26 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v28);
    sub_236C2ED84(v27, &v42);
    os_unfair_lock_unlock(v28);
    v30 = v42;
    v29 = v43;
    swift_release();
    swift_bridgeObjectRetain();
    v31 = sub_236C35F44();
    v32 = sub_236C36328();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v42 = v34;
      *(_DWORD *)v33 = 136380675;
      swift_bridgeObjectRetain();
      sub_236C0ED40(v30, v29, &v42);
      sub_236C363F4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_236BE1000, v31, v32, "Synced TailspinOptions. { %{private}s }", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v34, -1, -1);
      MEMORY[0x23B800318](v33, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v35 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 24)
                             + ((*(unsigned int *)(**(_QWORD **)(v1 + 24) + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v35);
    sub_236C2EE1C(&v42);
    os_unfair_lock_unlock(v35);
    v37 = v42;
    v36 = v43;
    swift_release();
    swift_bridgeObjectRetain();
    v38 = sub_236C35F44();
    v39 = sub_236C36328();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      v42 = v41;
      *(_DWORD *)v40 = 136380675;
      swift_bridgeObjectRetain();
      sub_236C0ED40(v37, v36, &v42);
      sub_236C363F4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_236BE1000, v38, v39, "Synced OverloadOptions. { %{private}s }", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v41, -1, -1);
      MEMORY[0x23B800318](v40, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

  }
}

uint64_t sub_236BE8554()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _BYTE v7[16];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  MEMORY[0x24BDAC7A8](v0);
  v2 = &v7[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_retain();
  sub_236C35A64();
  swift_release();
  v3 = sub_236C3592C();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_236BE9274((uint64_t)v2);
  }
  else
  {
    v5 = sub_236C35914();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v2, v3);
    if ((v5 & 1) != 0)
      return 1;
  }
  swift_getKeyPath();
  swift_retain();
  sub_236C35EB4();
  swift_release();
  swift_release();
  return v7[15];
}

uint64_t sub_236BE8694()
{
  return sub_236BE86B4();
}

uint64_t sub_236BE86B4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t result;
  _BYTE *v4;
  _BYTE *v5;
  char v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  v2 = (_BYTE *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isAVSession);
  swift_beginAccess();
  if ((*v2 & 1) != 0 || (result = sub_236BE88E0(), *v2 = result & 1, (result & 1) != 0))
  {
    v4 = (_BYTE *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isStarted);
    result = swift_beginAccess();
    if (*v4 == 1)
    {
      v5 = (_BYTE *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_hasMarkedAVSessionStart);
      swift_beginAccess();
      if ((*v5 & 1) != 0)
      {
        result = sub_236BFAC70();
        if ((v6 & 1) == 0)
        {
          if (qword_256447028 != -1)
            swift_once();
          swift_retain();
          sub_236C35EC0();
          return swift_release();
        }
      }
      else
      {
        v7 = sub_236C35F44();
        v8 = sub_236C36328();
        if (os_log_type_enabled(v7, v8))
        {
          v9 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v9 = 0;
          _os_log_impl(&dword_236BE1000, v7, v8, "Found AV device, starting AV session", v9, 2u);
          MEMORY[0x23B800318](v9, -1, -1);
        }

        if (qword_256447028 != -1)
          swift_once();
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
        v10 = sub_236C35B48();
        sub_236BF6E8C(v10, v11);
        result = swift_bridgeObjectRelease();
        *v5 = 1;
      }
    }
  }
  return result;
}

uint64_t sub_236BE88E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[4];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (_QWORD *)((char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_236C35D10();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_236BEE010(0x645F657669746361, 0xEE00736563697665), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(v3 + 56);
    v8 = sub_236C3592C();
    v9 = *(_QWORD *)(v8 - 8);
    (*(void (**)(uint64_t *, unint64_t, uint64_t))(v9 + 16))(v2, v7 + *(_QWORD *)(v9 + 72) * v6, v8);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  }
  else
  {
    v8 = sub_236C3592C();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  }
  swift_bridgeObjectRelease();
  sub_236C3592C();
  v10 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(v2, 1, v8) == 1)
  {
    sub_236BE9274((uint64_t)v2);
    return 0;
  }
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v10 + 88))(v2, v8) != *MEMORY[0x24BE09AD0])
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v2, v8);
    return 0;
  }
  (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v2, v8);
  v12 = *v2;
  v11 = v2[1];
  if (qword_2542B1520 != -1)
    swift_once();
  v13 = qword_2542B41E8;
  v14 = *(_QWORD *)(qword_2542B41E8 + 16);
  if (!v14)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_236BED490();
  swift_bridgeObjectRetain();
  v15 = (uint64_t *)(v13 + 40);
  while (1)
  {
    v17 = *(v15 - 1);
    v16 = *v15;
    v19[2] = v12;
    v19[3] = v11;
    v19[0] = v17;
    v19[1] = v16;
    if ((sub_236C3643C() & 1) != 0)
      break;
    v15 += 2;
    if (!--v14)
    {
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_236BE8B40()
{
  return sub_236BE8B60();
}

uint64_t sub_236BE8B60()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_236BE8C04();
  if ((result & 1) != 0)
  {
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_isAirPodSession) & 1) == 0)
    {
      *(_BYTE *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_isAirPodSession) = 1;
      if (qword_256447058 != -1)
        result = swift_once();
      if (qword_256448E70)
        result = sub_236BFB6A0();
    }
    v2 = OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_hasSentAirPodInformation;
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_hasSentAirPodInformation) & 1) == 0)
    {
      result = sub_236C04CD4();
      *(_BYTE *)(v0 + v2) = result & 1;
    }
  }
  return result;
}

uint64_t sub_236BE8C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[4];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (_QWORD *)((char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_236C35D10();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_236BEE010(0x645F657669746361, 0xEE00736563697665), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(v3 + 56);
    v8 = sub_236C3592C();
    v9 = *(_QWORD *)(v8 - 8);
    (*(void (**)(uint64_t *, unint64_t, uint64_t))(v9 + 16))(v2, v7 + *(_QWORD *)(v9 + 72) * v6, v8);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  }
  else
  {
    v8 = sub_236C3592C();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  }
  swift_bridgeObjectRelease();
  sub_236C3592C();
  v10 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(v2, 1, v8) == 1)
  {
    sub_236BE9274((uint64_t)v2);
    return 0;
  }
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v10 + 88))(v2, v8) != *MEMORY[0x24BE09AD0])
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v2, v8);
    return 0;
  }
  (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v2, v8);
  v12 = *v2;
  v11 = v2[1];
  if (qword_2542B1508 != -1)
    swift_once();
  v13 = qword_2542B41A0;
  v14 = *(_QWORD *)(qword_2542B41A0 + 16);
  if (!v14)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_236BED490();
  swift_bridgeObjectRetain();
  v15 = (uint64_t *)(v13 + 40);
  while (1)
  {
    v17 = *(v15 - 1);
    v16 = *v15;
    v19[2] = v12;
    v19[3] = v11;
    v19[0] = v17;
    v19[1] = v16;
    if ((sub_236C3643C() & 1) != 0)
      break;
    v15 += 2;
    if (!--v14)
    {
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_236BE8E64()
{
  return SessionSummaryWorker.process(message:)();
}

uint64_t SessionSummaryWorker.process(message:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(double *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = v0;
  v36 = sub_236C35D58();
  v2 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (double *)((char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v10 = (double *)((char *)&v35 - v9);
  v11 = sub_236C35C98();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236C35D10();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BE09DE0], v11);
  sub_236C36070();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v15 = sub_236C3592C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(double *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v10, 1, v15) == 1)
  {
    sub_236BE9274((uint64_t)v10);
  }
  else if ((*(unsigned int (**)(double *, uint64_t))(v16 + 88))(v10, v15) == *MEMORY[0x24BE09AC0])
  {
    result = (*(uint64_t (**)(double *, uint64_t))(v16 + 96))(v10, v15);
    if (*v10 > 0.0)
    {
      *(double *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_totalActiveTime) = *v10 + *(double *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_totalActiveTime);
      v19 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_activeCount);
      v20 = __CFADD__(v19, 1);
      v21 = v19 + 1;
      if (v20)
      {
LABEL_33:
        __break(1u);
        return result;
      }
      *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_activeCount) = v21;
    }
  }
  else
  {
    (*(void (**)(double *, uint64_t))(v16 + 8))(v10, v15);
  }
  v22 = sub_236C35D10();
  if (*(_QWORD *)(v22 + 16) && (v23 = sub_236BEE010(0x79745F6575737369, 0xEA00000000006570), (v24 & 1) != 0))
  {
    (*(void (**)(double *, unint64_t, uint64_t))(v16 + 16))(v8, *(_QWORD *)(v22 + 56) + *(_QWORD *)(v16 + 72) * v23, v15);
    v25 = 0;
  }
  else
  {
    v25 = 1;
  }
  (*(void (**)(double *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v8, v25, 1, v15);
  swift_bridgeObjectRelease();
  if (v17(v8, 1, v15) == 1)
  {
    result = sub_236BE9274((uint64_t)v8);
    goto LABEL_25;
  }
  if ((*(unsigned int (**)(double *, uint64_t))(v16 + 88))(v8, v15) != *MEMORY[0x24BE09AD0])
  {
    result = (*(uint64_t (**)(double *, uint64_t))(v16 + 8))(v8, v15);
    goto LABEL_25;
  }
  (*(void (**)(double *, uint64_t))(v16 + 96))(v8, v15);
  if (*(_QWORD *)v8 == 0x64616F6C7265766FLL && *((_QWORD *)v8 + 1) == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v27 = sub_236C36658();
    result = swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
      goto LABEL_25;
  }
  v28 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_overloadCount);
  v20 = __CFADD__(v28, 1);
  v29 = v28 + 1;
  if (v20)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_overloadCount) = v29;
  result = sub_236C277B4();
LABEL_25:
  v30 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_totalMessageCount);
  v20 = __CFADD__(v30, 1);
  v31 = v30 + 1;
  if (v20)
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_totalMessageCount) = v31;
  sub_236C35D88();
  v32 = sub_236C35D34();
  result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v36);
  if ((v32 & 1) != 0)
    return result;
  v33 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_uniqueMessageCount);
  v20 = __CFADD__(v33, 1);
  v34 = v33 + 1;
  if (v20)
    goto LABEL_31;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_uniqueMessageCount) = v34;
  return result;
}

uint64_t sub_236BE9274(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_236BE92B4()
{
  return CoreAnalyticsWorker.process(message:)();
}

uint64_t CoreAnalyticsWorker.process(message:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char IsEventUsed;
  void *v23;
  uint64_t v24;
  void *v25;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v2 = sub_236C35C98();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_236C35DB8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_beginAccess();
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v31 = v7;
    sub_236C35C08();
    v11 = sub_236C35CEC();
    swift_retain();
    v12 = sub_236BED004(MEMORY[0x24BEE4B00], v11);
    if (v1)
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v6);
      return swift_bridgeObjectRelease();
    }
    else
    {
      v28 = v6;
      v29 = 0;
      v30 = v12;
      swift_release();
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_session), *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_session + 24));
      sub_236C35B00();
      sub_236C35E84();
      v26[1] = sub_236C3613C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE09E00], v2);
      v27 = sub_236C35C8C();
      v14 = v13;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v15 = sub_236C360D0();
      swift_bridgeObjectRelease();
      v16 = v30;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v16;
      sub_236BE9644(v15, v27, v14, isUniquelyReferenced_nonNull_native);
      v18 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 = sub_236BE97B8();
      v19 = *(_QWORD *)(v30 + 16);
      if (v19)
      {
        v20 = v30 + 40;
        do
        {
          swift_bridgeObjectRetain();
          v21 = (void *)sub_236C360D0();
          IsEventUsed = AnalyticsIsEventUsed();

          if ((IsEventUsed & 1) != 0)
          {
            v23 = (void *)sub_236C360D0();
            swift_bridgeObjectRelease();
            v24 = swift_allocObject();
            *(_QWORD *)(v24 + 16) = v18;
            aBlock[4] = sub_236C0AD3C;
            aBlock[5] = v24;
            aBlock[0] = MEMORY[0x24BDAC760];
            aBlock[1] = 1107296256;
            aBlock[2] = sub_236C0A524;
            aBlock[3] = &block_descriptor_2;
            v25 = _Block_copy(aBlock);
            swift_bridgeObjectRetain();
            swift_release();
            AnalyticsSendEventLazy();
            _Block_release(v25);

          }
          else
          {
            swift_bridgeObjectRelease();
          }
          v20 += 16;
          --v19;
        }
        while (v19);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v9, v28);
    }
  }
  return result;
}

void sub_236BE9644(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_236BEE010(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];

        *(_QWORD *)(v19 + 8 * v12) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_236C13A58();
      goto LABEL_7;
    }
    sub_236BED560(v15, a4 & 1);
    v20 = sub_236BEE010(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_236BE9770(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain();
      return;
    }
  }
  sub_236C3667C();
  __break(1u);
}

unint64_t sub_236BE9770(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_236BE97B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_session), *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_session + 24));
  sub_236C35B00();
  sub_236C35E84();
  sub_236C3613C();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B30B0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_236C37860;
  sub_236C364C0();
  swift_bridgeObjectRelease();
  v2 = sub_236C35D70();
  MEMORY[0x23B7FF31C](v2);
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  v3 = sub_236C35CF8();
  MEMORY[0x23B7FF304](v3);
  sub_236C36184();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = 0xD000000000000014;
  *(_QWORD *)(v1 + 40) = 0x8000000236C3A370;
  sub_236C364C0();
  swift_bridgeObjectRelease();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  v4 = sub_236C35D70();
  MEMORY[0x23B7FF31C](v4);
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  v5 = sub_236C35CF8();
  MEMORY[0x23B7FF304](v5);
  sub_236C36184();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = 0x6C7070612E6D6F63;
  *(_QWORD *)(v1 + 56) = 0xEA00000000002E65;
  return v1;
}

_OWORD *sub_236BE99A8()
{
  uint64_t v0;
  void *v1;
  _OWORD *result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t inited;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  unint64_t v25;
  void *v26;
  char isUniquelyReferenced_nonNull_native;
  id v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  NSObject *v32;
  uint64_t v33;
  uint8_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  id v42;
  _OWORD v43[2];
  __int128 v44;
  uint64_t v45;
  unint64_t v46;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcReportingToken);
  if (!v1)
  {
    swift_retain();
    v32 = sub_236C35F44();
    v33 = sub_236C36334();
    if (os_log_type_enabled(v32, (os_log_type_t)v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v34 = 134217984;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session), *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session + 24));
      *(_QWORD *)&v44 = sub_236C35AF4();
      sub_236C363F4();
      swift_release();
      _os_log_impl(&dword_236BE1000, v32, (os_log_type_t)v33, "Failed to unwrap RTC reporting token { reporterID=%lld }", v34, 0xCu);
      MEMORY[0x23B800318](v34, -1, -1);
    }
    else
    {
      swift_release();
    }

    v39 = MEMORY[0x24BEE4AF8];
    v35 = sub_236BEBED0(MEMORY[0x24BEE4AF8]);
    sub_236BEBED0(v39);
    return (_OWORD *)v35;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_2542B1558);
  result = (_OWORD *)swift_initStackObject();
  result[1] = xmmword_236C37F50;
  if (!*MEMORY[0x24BE7CAD0])
  {
    __break(1u);
    goto LABEL_21;
  }
  v3 = result;
  v4 = sub_236BE7428(0, (unint64_t *)&qword_2542B3038);
  v42 = v1;
  v3[4] = sub_236C363DC();
  v5 = sub_236BE7428(0, (unint64_t *)&qword_2542B3028);
  v6 = sub_236C363B8();
  v3[8] = v5;
  v3[5] = v6;
  result = (_OWORD *)*MEMORY[0x24BE7CAE0];
  if (!*MEMORY[0x24BE7CAE0])
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v3[9] = sub_236C363DC();
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, 2.1);
  v3[13] = v5;
  v3[10] = v7;
  result = (_OWORD *)*MEMORY[0x24BE7CB10];
  if (!*MEMORY[0x24BE7CB10])
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v3[14] = sub_236C363DC();
  v8 = (_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session), *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session + 24));
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithLongLong_, sub_236C35AF4());
  v3[18] = v5;
  v3[15] = v9;
  result = (_OWORD *)*MEMORY[0x24BE7CAB0];
  if (!*MEMORY[0x24BE7CAB0])
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v3[19] = sub_236C363DC();
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, sub_236BF24C4());
  v3[23] = v5;
  v3[20] = v10;
  result = (_OWORD *)*MEMORY[0x24BE7CAF0];
  if (!*MEMORY[0x24BE7CAF0])
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v3[24] = sub_236C363DC();
  result = (_OWORD *)sub_236BE7428(0, (unint64_t *)&qword_2542B3030);
  v3[28] = result;
  v3[25] = v42;
  if (!*MEMORY[0x24BE7CAC0])
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v41 = v42;
  v3[29] = sub_236C363DC();
  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  sub_236C35B48();
  v11 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
  v12 = (void *)sub_236C360D0();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initWithString_, v12);

  v3[33] = v4;
  v3[30] = v13;
  v40 = sub_236BEBED0((uint64_t)v3);
  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  sub_236C35B00();
  sub_236C35E84();
  sub_236C3613C();
  swift_bridgeObjectRelease();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_236C37720;
  result = (_OWORD *)*MEMORY[0x24BE7CB28];
  if (!*MEMORY[0x24BE7CB28])
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  *(_QWORD *)(inited + 32) = sub_236C363DC();
  v15 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
  v16 = (void *)sub_236C360D0();
  v17 = objc_msgSend(v15, sel_initWithString_, v16);

  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 40) = v17;
  v18 = objc_allocWithZone(MEMORY[0x24BDD17C8]);
  v19 = (void *)sub_236C360D0();
  v20 = objc_msgSend(v18, sel_initWithString_, v19);

  *(_QWORD *)(inited + 72) = v20;
  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithLongLong_, sub_236C35AF4());
  *(_QWORD *)(inited + 104) = v5;
  *(_QWORD *)(inited + 80) = result;
  v21 = (void *)*MEMORY[0x24BE7CB38];
  if (*MEMORY[0x24BE7CB38])
  {
    *(_QWORD *)(inited + 112) = sub_236C363DC();
    *(_QWORD *)&v44 = 0x6E6F69737365735FLL;
    *((_QWORD *)&v44 + 1) = 0xE800000000000000;
    swift_bridgeObjectRetain();
    v22 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v43[0] = sub_236C361E4();
    *((_QWORD *)&v43[0] + 1) = v23;
    sub_236C36178();
    v24 = v43[0];
    *(_QWORD *)(inited + 144) = v22;
    *(_OWORD *)(inited + 120) = v24;
    v25 = sub_236BEBED0(inited);
    v46 = v25;
    if ((sub_236C35A94() & 1) != 0)
    {
      v26 = (void *)sub_236C360D0();
      __swift_project_boxed_opaque_existential_1(v8, v8[3]);
      v45 = v5;
      *(_QWORD *)&v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithLongLong_, sub_236C35AF4());
      sub_236BECFF4(&v44, v43);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_236BF2110(v43, v26, isUniquelyReferenced_nonNull_native);
      v46 = v25;

      swift_bridgeObjectRelease();
    }
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    if ((sub_236C35AE8() & 1) != 0)
    {
      v28 = v21;
      v29 = sub_236C360D0();
      swift_bridgeObjectRelease();
      v45 = v4;
      *(_QWORD *)&v44 = v29;
      sub_236BECFF4(&v44, v43);
      v30 = v46;
      v31 = swift_isUniquelyReferenced_nonNull_native();
      sub_236BF2110(v43, v28, v31);
      v46 = v30;

    }
    swift_bridgeObjectRelease();
    v35 = v40;
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    v36 = sub_236C35B0C();
    v37 = sub_236BE5630(v36);
    v38 = swift_bridgeObjectRelease();
    MEMORY[0x24BDAC7A8](v38);
    sub_236C266E4(v37, (void (*)(uint64_t, uint64_t, _BYTE *))sub_236C27104);
    swift_release();

    return (_OWORD *)v35;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t *DurationSummaryWorker.init(with:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  char *v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t inited;
  void (*v72)(uint64_t, char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t *v101;
  uint64_t v102;
  __int128 v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[3];
  uint64_t v113;
  _QWORD v114[3];
  uint64_t v115;
  uint64_t v116[3];

  v2 = v1;
  v105 = *v1;
  v4 = sub_236C359F8();
  v109 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v106 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v98 = (char *)&v97 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v107 = (char *)&v97 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v104 = (char *)&v97 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v108 = (char *)&v97 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v97 - v15;
  *((_BYTE *)v1 + 16) = 0;
  v1[3] = sub_236BF22BC(MEMORY[0x24BEE4AF8]);
  v17 = (uint64_t)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_workerConfig;
  v18 = *MEMORY[0x24BE09EB8];
  v19 = sub_236C35CB0();
  v102 = *(_QWORD *)(v19 - 8);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 104);
  *(_QWORD *)&v103 = v17;
  v20(v17, v18, v19);
  v21 = (uint64_t)v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_logger;
  sub_236C35F14();
  v22 = (char *)v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_session;
  sub_236BEBE50((uint64_t)a1, (uint64_t)v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_session);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v23 = v21;
  *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_config) = sub_236C35B30();
  v24 = *(_QWORD *)(sub_236C35CBC() + 16);
  swift_bridgeObjectRelease();
  v99 = v23;
  v101 = v2;
  if (!v24)
  {
    v108 = v22;
    v109 = v19;
    sub_236BEBE50((uint64_t)a1, (uint64_t)v114);
    sub_236BEBE50((uint64_t)a1, (uint64_t)v112);
    v38 = sub_236C35F44();
    v39 = sub_236C36328();
    v4 = (uint64_t)a1;
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v100 = a1;
      v42 = v41;
      v116[0] = v41;
      *(_DWORD *)v40 = 134218243;
      __swift_project_boxed_opaque_existential_1(v114, v115);
      v43 = sub_236C35AF4();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
      v111 = v43;
      sub_236C363F4();
      *(_WORD *)(v40 + 12) = 2081;
      __swift_project_boxed_opaque_existential_1(v112, v113);
      sub_236C35B00();
      v44 = sub_236C35E84();
      v111 = sub_236C0ED40(v44, v45, v116);
      v23 = v99;
      sub_236C363F4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
      _os_log_impl(&dword_236BE1000, v38, v39, "No summary configs found. { reporterID=%lld, serviceType=%{private}s }", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      v46 = v42;
      v4 = (uint64_t)v100;
      MEMORY[0x23B800318](v46, -1, -1);
      MEMORY[0x23B800318](v40, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
    }

    v82 = v103;
    v83 = v109;
    v84 = v102;
    v85 = (uint64_t)v108;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v82, v83);
    __swift_destroy_boxed_opaque_existential_1(v85);
    swift_release();
    v86 = sub_236C35F50();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 8))(v23, v86);
    swift_deallocPartialClassInstance();
    goto LABEL_46;
  }
  v100 = a1;
  v25 = sub_236C35CBC();
  v26 = v25;
  v114[0] = MEMORY[0x24BEE4AF8];
  v27 = *(_QWORD *)(v25 + 16);
  if (v27)
  {
    v28 = 0;
    v29 = v109;
    v105 = *(_QWORD *)(v25 + 16);
    while (v28 < *(_QWORD *)(v26 + 16))
    {
      v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      v31 = *(_QWORD *)(v29 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v29 + 16))(v16, v26 + v30 + v31 * v28, v4);
      if ((sub_236C35968() & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v4);
      }
      else
      {
        v32 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
        v32(v108, v16, v4);
        v33 = v114[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_236BEAE70(0, *(_QWORD *)(v33 + 16) + 1, 1);
          v33 = v114[0];
        }
        v35 = *(_QWORD *)(v33 + 16);
        v34 = *(_QWORD *)(v33 + 24);
        if (v35 >= v34 >> 1)
        {
          sub_236BEAE70(v34 > 1, v35 + 1, 1);
          v33 = v114[0];
        }
        *(_QWORD *)(v33 + 16) = v35 + 1;
        v32((char *)(v33 + v30 + v35 * v31), v108, v4);
        v114[0] = v33;
        v29 = v109;
        v27 = v105;
      }
      if (v27 == ++v28)
      {
        v36 = v114[0];
        v37 = MEMORY[0x24BEE4AF8];
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_49;
  }
  v36 = MEMORY[0x24BEE4AF8];
  v37 = MEMORY[0x24BEE4AF8];
  v29 = v109;
LABEL_17:
  v47 = swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](v47);
  *(&v97 - 2) = v100;
  v26 = 0;
  v48 = sub_236BEB684((uint64_t (*)(_QWORD))sub_236BEB8B0, (uint64_t)(&v97 - 4), v36);
  v114[0] = v37;
  v49 = *(char **)(v48 + 16);
  v102 = swift_bridgeObjectRetain();
  if (v49)
  {
    v50 = 0;
    v51 = v104;
    while (v50 < *(_QWORD *)(v48 + 16))
    {
      v52 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      v53 = *(_QWORD *)(v29 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v29 + 16))(v51, v48 + v52 + v53 * v50, v4);
      v54 = sub_236C359C8();
      swift_bridgeObjectRelease();
      if (v54)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v51, v4);
      }
      else
      {
        v55 = v51;
        v56 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
        v56(v107, v55, v4);
        v57 = v114[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_236BEAE70(0, *(_QWORD *)(v57 + 16) + 1, 1);
          v57 = v114[0];
        }
        v59 = *(_QWORD *)(v57 + 16);
        v58 = *(_QWORD *)(v57 + 24);
        if (v59 >= v58 >> 1)
        {
          sub_236BEAE70(v58 > 1, v59 + 1, 1);
          v57 = v114[0];
        }
        *(_QWORD *)(v57 + 16) = v59 + 1;
        v56((char *)(v57 + v52 + v59 * v53), v107, v4);
        v114[0] = v57;
        v29 = v109;
        v48 = v102;
        v51 = v104;
      }
      if (v49 == (char *)++v50)
      {
        v60 = v114[0];
        v37 = MEMORY[0x24BEE4AF8];
        goto LABEL_30;
      }
    }
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v60 = v37;
LABEL_30:
  v61 = swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](v61);
  *(&v97 - 2) = v100;
  v62 = sub_236C15B04((void (*)(uint64_t *__return_ptr, uint64_t))sub_236BEB49C, (uint64_t)(&v97 - 4), v60);
  swift_release();
  v63 = (uint64_t *)((char *)v101 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_summaryStates);
  *(uint64_t *)((char *)v101 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_summaryStates) = v62;
  v114[0] = v37;
  if (v49)
  {
    v97 = v63;
    v64 = (char *)(v48 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80)));
    v105 = *(_QWORD *)(v29 + 72);
    v65 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
    swift_bridgeObjectRetain();
    v103 = xmmword_236C37710;
    v66 = v106;
    v67 = v98;
    v104 = (char *)v4;
    do
    {
      v108 = v49;
      v107 = v64;
      v65(v67, v64, v4);
      v65(v66, v67, v4);
      type metadata accessor for DurationSummaryWorker.DynamicSummaryConfig(0);
      v69 = swift_allocObject();
      v70 = OBJC_IVAR____TtCC22AudioAnalyticsExternal21DurationSummaryWorker20DynamicSummaryConfig_seenKeyValueCombinations;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542B30A8);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v103;
      *(_QWORD *)(inited + 32) = MEMORY[0x24BEE4B00];
      v72 = (void (*)(uint64_t, char *, uint64_t))v65;
      v73 = sub_236C18C28(inited);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542B15F8);
      v66 = v106;
      swift_arrayDestroy();
      *(_QWORD *)(v69 + v70) = v73;
      v74 = sub_236C359C8();
      if (v74)
      {
        v75 = v74;
        v72(v69 + OBJC_IVAR____TtCC22AudioAnalyticsExternal21DurationSummaryWorker20DynamicSummaryConfig_summaryConfig, v66, v4);
        *(_QWORD *)(v69
                  + OBJC_IVAR____TtCC22AudioAnalyticsExternal21DurationSummaryWorker20DynamicSummaryConfig_dynamicCreationKeys) = v75;
        v76 = sub_236C359EC();
        v77 = *(void (**)(char *, uint64_t))(v109 + 8);
        v77(v66, v4);
        *(_QWORD *)(v69
                  + OBJC_IVAR____TtCC22AudioAnalyticsExternal21DurationSummaryWorker20DynamicSummaryConfig_requiredDynamicCreationKeyValues) = v76;
        v78 = ((uint64_t (*)(char *, uint64_t))v77)(v67, v4);
        MEMORY[0x23B7FF688](v78);
        v65 = (void (*)(char *, char *, uint64_t))v72;
        if (*(_QWORD *)((v114[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v114[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_236C36238();
        sub_236C3625C();
        sub_236C3622C();
      }
      else
      {
        v68 = *(void (**)(char *, uint64_t))(v109 + 8);
        v68(v66, v4);
        swift_bridgeObjectRelease();
        swift_deallocPartialClassInstance();
        v68(v67, v4);
        v65 = (void (*)(char *, char *, uint64_t))v72;
      }
      v64 = &v107[v105];
      v49 = v108 - 1;
      v4 = (uint64_t)v104;
    }
    while (v108 != (char *)1);
    swift_bridgeObjectRelease();
    v37 = v114[0];
    v63 = v97;
  }
  swift_bridgeObjectRelease();
  v26 = OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_dynamicSummaryConfigs;
  *(uint64_t *)((char *)v101 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_dynamicSummaryConfigs) = v37;
  swift_beginAccess();
  v79 = *v63;
  v4 = (uint64_t)v100;
  if (v79 >> 62)
  {
LABEL_50:
    swift_bridgeObjectRetain();
    v88 = sub_236C36544();
    swift_bridgeObjectRelease();
    if (v88)
      goto LABEL_43;
    goto LABEL_41;
  }
  if (!*(_QWORD *)((v79 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_41:
    v80 = *(uint64_t *)((char *)v101 + v26);
    if (v80 >> 62)
    {
      swift_bridgeObjectRetain();
      v89 = sub_236C36544();
      swift_bridgeObjectRelease();
      if (v89)
        goto LABEL_43;
    }
    else if (*(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_43;
    }
    sub_236BEBE50(v4, (uint64_t)v114);
    sub_236BEBE50(v4, (uint64_t)v112);
    v90 = sub_236C35F44();
    v91 = sub_236C36328();
    if (os_log_type_enabled(v90, v91))
    {
      v92 = swift_slowAlloc();
      v93 = swift_slowAlloc();
      v111 = v93;
      *(_DWORD *)v92 = 134218243;
      __swift_project_boxed_opaque_existential_1(v114, v115);
      v94 = sub_236C35AF4();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
      v110 = v94;
      sub_236C363F4();
      *(_WORD *)(v92 + 12) = 2081;
      __swift_project_boxed_opaque_existential_1(v112, v113);
      sub_236C35B00();
      v95 = sub_236C35E84();
      v110 = sub_236C0ED40(v95, v96, &v111);
      v4 = (uint64_t)v100;
      sub_236C363F4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
      _os_log_impl(&dword_236BE1000, v90, v91, "No matching summary configs. { reporterID=%lld, serviceType=%{private}s }", (uint8_t *)v92, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v93, -1, -1);
      MEMORY[0x23B800318](v92, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
    }
    swift_release();

LABEL_46:
    v81 = 0;
    goto LABEL_47;
  }
LABEL_43:
  v81 = v101;
LABEL_47:
  __swift_destroy_boxed_opaque_existential_1(v4);
  return v81;
}

uint64_t sub_236BEAE70(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_236BEB06C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_236BEAE8C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_236C36574();
  __break(1u);
  return result;
}

uint64_t sub_236BEB06C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_236BEAE8C(a1, a2, a3, a4, &qword_2542B3098, (uint64_t (*)(_QWORD))MEMORY[0x24BE09B80]);
}

uint64_t sub_236BEB080(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  int64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  __int128 *v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;

  v43 = a1;
  v3 = sub_236C3592C();
  v45 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v42 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FA8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v37 - v9;
  v11 = *(_QWORD *)(a2 + 64);
  v38 = a2 + 64;
  v12 = 1 << *(_BYTE *)(a2 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v37 = v39 - 1;
  v41 = a2;
  result = swift_bridgeObjectRetain();
  v46 = 0;
  v44 = 0;
  v40 = v3;
  v16 = v45;
  if (!v14)
    goto LABEL_6;
LABEL_4:
  v17 = v46;
  v18 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  v19 = v18 | (v44 << 6);
LABEL_5:
  v46 = v17;
  v20 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 16 * v19);
  v22 = *v20;
  v21 = v20[1];
  v23 = v45;
  v24 = *(_QWORD *)(v41 + 56) + *(_QWORD *)(v45 + 72) * v19;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FA0);
  v26 = *(void (**)(char *, unint64_t, uint64_t))(v23 + 16);
  v3 = v40;
  v26(&v8[*(int *)(v25 + 48)], v24, v40);
  *(_QWORD *)v8 = v22;
  *((_QWORD *)v8 + 1) = v21;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v8, 0, 1, v25);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_236C15348((uint64_t)v8, (uint64_t)v10, &qword_2542B2FA8);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FA0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v10, 1, v32) == 1)
    {
      swift_release();
      return sub_236C366AC();
    }
    v33 = v42;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v42, &v10[*(int *)(v32 + 48)], v3);
    v34 = *((_QWORD *)v43 + 8);
    v35 = v43[1];
    v47 = *v43;
    v48 = v35;
    v36 = v43[3];
    v49 = v43[2];
    v50 = v36;
    v51 = v34;
    sub_236C36154();
    swift_bridgeObjectRelease();
    sub_236C1941C(&qword_256447A50, MEMORY[0x24BE09AF0]);
    sub_236C360A0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v33, v3);
    result = sub_236C366C4();
    v46 ^= result;
    if (v14)
      goto LABEL_4;
LABEL_6:
    v27 = v44 + 1;
    if (__OFADD__(v44, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 < v39)
    {
      v28 = *(_QWORD *)(v38 + 8 * v27);
      if (v28)
        goto LABEL_9;
      v29 = v44 + 2;
      ++v44;
      if (v27 + 1 < v39)
      {
        v28 = *(_QWORD *)(v38 + 8 * v29);
        if (v28)
        {
          ++v27;
LABEL_9:
          v17 = v46;
          v14 = (v28 - 1) & v28;
          v19 = __clz(__rbit64(v28)) + (v27 << 6);
          v44 = v27;
          goto LABEL_5;
        }
        v30 = v27 + 2;
        v44 = v27 + 1;
        if (v27 + 2 < v39)
          break;
      }
    }
LABEL_21:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FA0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v8, 1, 1, v31);
    v14 = 0;
  }
  v28 = *(_QWORD *)(v38 + 8 * v30);
  if (v28)
  {
    v27 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    v27 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v27 >= v39)
    {
      v44 = v37;
      goto LABEL_21;
    }
    v28 = *(_QWORD *)(v38 + 8 * v27);
    ++v30;
    if (v28)
      goto LABEL_9;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_236BEB454(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for DurationSummaryWorker.DynamicSummaryConfig(uint64_t a1)
{
  return sub_236BEB454(a1, (uint64_t *)&unk_2542B2860);
}

uint64_t sub_236BEB49C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_236BEB9C0(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_236BEB4B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_236BEB4D4(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_236BEB4D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _BYTE v19[40];
  _BYTE v20[40];

  v6 = sub_236C359F8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v19[-v11];
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16);
  v13(&v19[-v11], a1, v6);
  sub_236BEBE50(a2, (uint64_t)v20);
  type metadata accessor for DurationSummaryDecoratorState();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + OBJC_IVAR____TtC22AudioAnalyticsExternal29DurationSummaryDecoratorState_completeDecoratorMessages) = MEMORY[0x24BEE4AF8];
  v15 = v14 + OBJC_IVAR____TtC22AudioAnalyticsExternal29DurationSummaryDecoratorState_decoratorRunningMessage;
  v16 = sub_236C35DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v13(v10, (uint64_t)v12, v6);
  sub_236BEBE50((uint64_t)v20, (uint64_t)v19);
  v17 = sub_236BEBA84((uint64_t)v10, (uint64_t)v19, 0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v6);
  *a3 = v17;
  return result;
}

uint64_t type metadata accessor for DurationSummaryDecoratorState()
{
  uint64_t result;

  result = qword_2542B2B60;
  if (!qword_2542B2B60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236BEB684(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v27 = sub_236C359F8();
  v7 = *(_QWORD *)(v27 - 8);
  v8 = MEMORY[0x24BDAC7A8](v27);
  v26 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v20 - v11;
  v13 = MEMORY[0x24BEE4AF8];
  v28 = MEMORY[0x24BEE4AF8];
  v25 = *(_QWORD *)(a3 + 16);
  if (v25)
  {
    v14 = 0;
    v22 = a2;
    v23 = a3;
    v21 = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v13 = *(_QWORD *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, a3 + v15 + v13 * v14, v27);
      v16 = a1(v12);
      if (v3)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v27);
        swift_bridgeObjectRelease();
        swift_release();
        return v13;
      }
      if ((v16 & 1) != 0)
      {
        v24 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v24(v26, v12, v27);
        v17 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_236BEAE70(0, *(_QWORD *)(v17 + 16) + 1, 1);
          v17 = v28;
        }
        v19 = *(_QWORD *)(v17 + 16);
        v18 = *(_QWORD *)(v17 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_236BEAE70(v18 > 1, v19 + 1, 1);
          v17 = v28;
        }
        *(_QWORD *)(v17 + 16) = v19 + 1;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(v17 + v15 + v19 * v13, v26, v27);
        v28 = v17;
        a3 = v23;
        a1 = v21;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v27);
      }
      if (v25 == ++v14)
      {
        v13 = v28;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

BOOL sub_236BEB894(uint64_t a1)
{
  uint64_t v1;

  return sub_236BEBD28(a1, *(_QWORD *)(v1 + 16));
}

BOOL sub_236BEB8B0(uint64_t a1)
{
  uint64_t v1;

  return sub_236BEB8CC(a1, *(_QWORD *)(v1 + 16));
}

BOOL sub_236BEB8CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  _BOOL8 v8;
  _QWORD v11[4];

  v3 = sub_236C35BFC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236C35944();
  v7 = sub_236C35BF0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_236BEBE50(a2, (uint64_t)v11);
  if ((v7 & 0x10000) != 0)
  {
    v8 = 1;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    v8 = (unsigned __int16)sub_236C35B00() == (unsigned __int16)v7;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v8;
}

uint64_t sub_236BEB9C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v12[40];

  v6 = sub_236C359F8();
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t))(v9 + 16))(v8, a1);
  sub_236BEBE50(a2, (uint64_t)v12);
  type metadata accessor for DurationSummaryState();
  swift_allocObject();
  result = sub_236BEBA84((uint64_t)v8, (uint64_t)v12, 0);
  *a3 = result;
  return result;
}

uint64_t sub_236BEBA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v3 + 16) = MEMORY[0x24BEE4B08];
  sub_236C35F14();
  v8 = v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_currentMessage;
  v9 = sub_236C35DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_currentFlattenedMessage) = 0;
  v10 = OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_previousValues;
  sub_236C3592C();
  *(_QWORD *)(v3 + v10) = sub_236C36064();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_seenFields) = v7;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_messageNumber) = 1;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_messagesOutOfOrder) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_mostRecentTimestamp) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_startAATimestamp) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_originalTimeOffset) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_isRunning) = 0;
  v11 = v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_config;
  v12 = sub_236C359F8();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  sub_236BEBE50(a2, v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_session);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_requiredKeyValues) = a3;
  sub_236BEBC10();
  __swift_destroy_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
  return v3;
}

uint64_t sub_236BEBC10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;

  v1 = *(_QWORD *)(sub_236C35950() + 16);
  result = swift_bridgeObjectRelease();
  if (v1 + 0x4000000000000000 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_236C3592C();
    v3 = sub_236C36064();
    v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_previousValues);
    swift_beginAccess();
    *v4 = v3;
    swift_bridgeObjectRelease();
    v5 = sub_236C35950();
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v7 = *v4;
    *v4 = 0x8000000000000000;
    sub_236BEC134(v5, (uint64_t)sub_236BEDDE0, 0, isUniquelyReferenced_nonNull_native, &v7);
    *v4 = v7;
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  return result;
}

BOOL sub_236BEBD28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  char v8;
  _BOOL8 v9;
  _QWORD v11[4];
  _BYTE v12[40];

  v3 = sub_236C35BFC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236C35944();
  v7 = sub_236C35BF0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v8 = sub_236C35938();
  sub_236BEBE50(a2, (uint64_t)v12);
  if ((v8 & 1) != 0)
  {
    sub_236BEBE50((uint64_t)v12, (uint64_t)v11);
    if ((v7 & 0x10000) != 0)
    {
      v9 = 1;
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(v11, v11[3]);
      v9 = (unsigned __int16)sub_236C35B00() == (unsigned __int16)v7;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    return 0;
  }
  return v9;
}

uint64_t sub_236BEBE50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for DurationSummaryState()
{
  uint64_t result;

  result = qword_2542B2298;
  if (!qword_2542B2298)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_236BEBED0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3088);
  v2 = sub_236C36568();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_236C1945C(v6, (uint64_t)&v13, &qword_2542B3040);
    v7 = v13;
    result = sub_236BEBFFC(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_236BECFF4(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_236BEBFFC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_236C363C4();
  return sub_236BEC02C(a1, v2);
}

unint64_t sub_236BEC02C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_236BEC4B0();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_236C363D0();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_236C363D0();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_236BEC134(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  _QWORD v44[3];
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;

  v55 = a5;
  v9 = sub_236C3592C();
  v46 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v45 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v44 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FC0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (_QWORD *)((char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = -1 << *(_BYTE *)(a1 + 32);
  v18 = ~v17;
  v19 = *(_QWORD *)(a1 + 64);
  v20 = -v17;
  v48 = a1;
  v49 = a1 + 64;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  else
    v21 = -1;
  v50 = v18;
  v51 = 0;
  v52 = v21 & v19;
  v53 = a2;
  v54 = a3;
  v44[2] = a1;
  swift_bridgeObjectRetain();
  v44[1] = a3;
  swift_retain();
  sub_236C15000((uint64_t)v16);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FB8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v16, 1, v22) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_236C0A290();
    return swift_release();
  }
  v47 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
  while (1)
  {
    v26 = (char *)v16 + *(int *)(v22 + 48);
    v27 = *v16;
    v28 = v16[1];
    v29 = v13;
    v47(v13, v26, v9);
    v30 = *v55;
    v32 = sub_236BEE010(v27, v28);
    v33 = *(_QWORD *)(v30 + 16);
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
      break;
    v36 = v31;
    if (*(_QWORD *)(v30 + 24) >= v35)
    {
      if ((a4 & 1) != 0)
      {
        if ((v31 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_236BEE20C();
        if ((v36 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_236BEE744(v35, a4 & 1);
      v37 = sub_236BEE010(v27, v28);
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_22;
      v32 = v37;
      if ((v36 & 1) != 0)
      {
LABEL_7:
        v25 = v45;
        v24 = v46;
        v13 = v29;
        (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v45, v29, v9);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v29, v9);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, char *, uint64_t))(v24 + 40))(*(_QWORD *)(*v55 + 56) + *(_QWORD *)(v24 + 72) * v32, v25, v9);
        goto LABEL_8;
      }
    }
    v39 = (_QWORD *)*v55;
    *(_QWORD *)(*v55 + 8 * (v32 >> 6) + 64) |= 1 << v32;
    v40 = (uint64_t *)(v39[6] + 16 * v32);
    *v40 = v27;
    v40[1] = v28;
    v13 = v29;
    v47((char *)(v39[7] + *(_QWORD *)(v46 + 72) * v32), v29, v9);
    v41 = v39[2];
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
      goto LABEL_21;
    v39[2] = v43;
LABEL_8:
    sub_236C15000((uint64_t)v16);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FB8);
    a4 = 1;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v16, 1, v22) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_236C3667C();
  __break(1u);
  return result;
}

unint64_t sub_236BEC4B0()
{
  unint64_t result;

  result = qword_2542B3038;
  if (!qword_2542B3038)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2542B3038);
  }
  return result;
}

uint64_t sub_236BEC4EC(uint64_t a1)
{
  return SummaryDecoratorWorker.process(message:)(a1);
}

uint64_t SummaryDecoratorWorker.process(message:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t i;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, _QWORD, uint64_t, uint64_t);
  int v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  unint64_t v58;
  char *v59;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1650);
  MEMORY[0x24BDAC7A8](v4);
  v48 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  MEMORY[0x24BDAC7A8](v6);
  v59 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_236C35D58();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236C35D88();
  v12 = sub_236C35D34();
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_summaryDecoratorStates);
    if (v14 >> 62)
      goto LABEL_34;
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (i = (uint64_t)v59; v15; i = (uint64_t)v59)
    {
      v17 = 0;
      v56 = 0;
      v52 = v14;
      v53 = v14 & 0xC000000000000001;
      v49 = v14 + 32;
      v50 = v14 & 0xFFFFFFFFFFFFFF8;
      v18 = &qword_2542B1640;
      v51 = v15;
      while (v53)
      {
        v19 = MEMORY[0x23B7FF964](v17, v14);
        v20 = v19;
        v21 = __OFADD__(v17, 1);
        v22 = v17 + 1;
        if (v21)
          goto LABEL_32;
LABEL_13:
        v58 = v22;
        if (*(_QWORD *)(v20 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_requiredKeyValues))
        {
          MEMORY[0x24BDAC7A8](v19);
          *(&v47 - 2) = a1;
          v23 = swift_bridgeObjectRetain();
          v24 = v56;
          v57 = sub_236C2BD64(v23, (uint64_t (*)(uint64_t, uint64_t, char *))sub_236C1538C);
          v56 = v24;
          i = (uint64_t)v59;
          swift_bridgeObjectRelease();
        }
        else
        {
          v57 = 1;
        }
        v25 = sub_236C35998();
        v26 = *(_QWORD *)(v25 + 16);
        if (v26)
        {
          v55 = v20;
          swift_bridgeObjectRetain();
          v27 = v26 - 1;
          v54 = v25;
          v28 = (uint64_t *)(v25 + 40);
          do
          {
            v29 = v27;
            v30 = *(v28 - 1);
            v31 = *v28;
            swift_bridgeObjectRetain();
            v32 = sub_236C35D10();
            if (*(_QWORD *)(v32 + 16))
            {
              swift_bridgeObjectRetain();
              v33 = sub_236BEE010(v30, v31);
              if ((v34 & 1) != 0)
              {
                v35 = v33;
                v36 = *(_QWORD *)(v32 + 56);
                v37 = sub_236C3592C();
                v38 = a1;
                v39 = v18;
                v40 = *(_QWORD *)(v37 - 8);
                v41 = v36 + *(_QWORD *)(v40 + 72) * v35;
                i = (uint64_t)v59;
                (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v59, v41, v37);
                v42 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56);
                v18 = v39;
                a1 = v38;
                v42(i, 0, 1, v37);
              }
              else
              {
                v37 = sub_236C3592C();
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(i, 1, 1, v37);
              }
              swift_bridgeObjectRelease();
            }
            else
            {
              v37 = sub_236C3592C();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(i, 1, 1, v37);
            }
            swift_bridgeObjectRelease();
            sub_236C3592C();
            v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(i, 1, v37);
            sub_236BE6C14(i, v18);
            swift_bridgeObjectRelease();
            v44 = v43 != 1;
            if (v43 != 1)
              break;
            v28 += 2;
            v27 = v29 - 1;
          }
          while (v29);
          swift_bridgeObjectRelease();
          v15 = v51;
          v14 = v52;
        }
        else
        {
          v44 = 0;
        }
        swift_bridgeObjectRelease();
        if ((unsigned __int16)sub_236C35CF8() != 11 && (v57 & 1) != 0 && v44)
        {
          v45 = v48;
          sub_236BEF6B8(a1, v48);
          swift_release();
          v46 = v45;
          i = (uint64_t)v59;
          sub_236BE6C14(v46, &qword_2542B1650);
        }
        else
        {
          swift_release();
        }
        v17 = v58;
        if (v58 == v15)
          return swift_bridgeObjectRelease();
      }
      if (v17 >= *(_QWORD *)(v50 + 16))
        goto LABEL_33;
      v20 = *(_QWORD *)(v49 + 8 * v17);
      v19 = swift_retain();
      v21 = __OFADD__(v17, 1);
      v22 = v17 + 1;
      if (!v21)
        goto LABEL_13;
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      swift_bridgeObjectRetain();
      v15 = sub_236C36544();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_236BEC998(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;

  v2 = sub_236C3592C();
  v36 = *(_QWORD *)(v2 - 8);
  v37 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v35 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3080);
  result = sub_236C36550();
  v5 = (_QWORD *)result;
  v6 = 0;
  v39 = a1;
  v9 = *(_QWORD *)(a1 + 64);
  v8 = a1 + 64;
  v7 = v9;
  v10 = 1 << *(_BYTE *)(v8 - 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v7;
  v31 = v8;
  v32 = (unint64_t)(v10 + 63) >> 6;
  v33 = (_QWORD *)result;
  v34 = result + 64;
  v14 = v36;
  v13 = v37;
  if ((v11 & v7) == 0)
    goto LABEL_5;
LABEL_4:
  v15 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  v16 = v6;
  for (i = v15 | (v6 << 6); ; i = __clz(__rbit64(v19)) + (v20 << 6))
  {
    v22 = (uint64_t *)(*(_QWORD *)(v39 + 48) + 16 * i);
    v24 = *v22;
    v23 = v22[1];
    v25 = v35;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v35, *(_QWORD *)(v39 + 56) + *(_QWORD *)(v14 + 72) * i, v13);
    swift_bridgeObjectRetain();
    sub_236C35920();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v25, v13);
    v5 = v33;
    *(_QWORD *)(v34 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v26 = (_QWORD *)(v5[6] + 16 * i);
    *v26 = v24;
    v26[1] = v23;
    result = (uint64_t)sub_236BECFF4(&v38, (_OWORD *)(v5[7] + 32 * i));
    v27 = v5[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
    {
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v5[2] = v29;
    v6 = v16;
    if (v12)
      goto LABEL_4;
LABEL_5:
    v18 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_26;
    if (v18 >= v32)
      return (uint64_t)v5;
    v19 = *(_QWORD *)(v31 + 8 * v18);
    v20 = v6 + 1;
    if (!v19)
    {
      v20 = v6 + 2;
      if (v6 + 2 >= v32)
        return (uint64_t)v5;
      v19 = *(_QWORD *)(v31 + 8 * v20);
      if (!v19)
      {
        v20 = v6 + 3;
        if (v6 + 3 >= v32)
          return (uint64_t)v5;
        v19 = *(_QWORD *)(v31 + 8 * v20);
        if (!v19)
        {
          v20 = v6 + 4;
          if (v6 + 4 >= v32)
            return (uint64_t)v5;
          v19 = *(_QWORD *)(v31 + 8 * v20);
          if (!v19)
            break;
        }
      }
    }
LABEL_20:
    v12 = (v19 - 1) & v19;
    v16 = v20;
  }
  v21 = v6 + 5;
  if (v6 + 5 >= v32)
    return (uint64_t)v5;
  v19 = *(_QWORD *)(v31 + 8 * v21);
  if (v19)
  {
    v20 = v6 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    v20 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v20 >= v32)
      return (uint64_t)v5;
    v19 = *(_QWORD *)(v31 + 8 * v20);
    ++v21;
    if (v19)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_236BECC30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3090);
    v2 = sub_236C36568();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_236BED454(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_236BECFF4(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_236BECFF4(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_236BECFF4(v36, v37);
    sub_236BECFF4(v37, &v33);
    result = sub_236C36478();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_236BECFF4(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_236C0A290();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

_OWORD *sub_236BECFF4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_236BED004(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  int64_t v37;
  unint64_t v39;
  uint64_t v40;
  __int128 v41;
  _OWORD v42[2];
  __int128 v43;
  _OWORD v44[2];
  void *v45;

  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v37 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v9 = (v5 - 1) & v5;
      v10 = v8 | (v6 << 6);
    }
    else
    {
      v11 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_40;
      if (v11 >= v37)
        goto LABEL_37;
      v12 = *(_QWORD *)(v36 + 8 * v11);
      ++v6;
      if (!v12)
      {
        v6 = v11 + 1;
        if (v11 + 1 >= v37)
          goto LABEL_37;
        v12 = *(_QWORD *)(v36 + 8 * v6);
        if (!v12)
        {
          v6 = v11 + 2;
          if (v11 + 2 >= v37)
            goto LABEL_37;
          v12 = *(_QWORD *)(v36 + 8 * v6);
          if (!v12)
          {
            v6 = v11 + 3;
            if (v11 + 3 >= v37)
              goto LABEL_37;
            v12 = *(_QWORD *)(v36 + 8 * v6);
            if (!v12)
            {
              v13 = v11 + 4;
              if (v13 >= v37)
                goto LABEL_37;
              v12 = *(_QWORD *)(v36 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  v6 = v13 + 1;
                  if (__OFADD__(v13, 1))
                    goto LABEL_41;
                  if (v6 >= v37)
                    goto LABEL_37;
                  v12 = *(_QWORD *)(v36 + 8 * v6);
                  ++v13;
                  if (v12)
                    goto LABEL_23;
                }
              }
              v6 = v13;
            }
          }
        }
      }
LABEL_23:
      v9 = (v12 - 1) & v12;
      v10 = __clz(__rbit64(v12)) + (v6 << 6);
    }
    v14 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v10);
    v16 = *v14;
    v15 = v14[1];
    sub_236BED454(*(_QWORD *)(a2 + 56) + 32 * v10, (uint64_t)v44);
    *(_QWORD *)&v43 = v16;
    *((_QWORD *)&v43 + 1) = v15;
    v41 = v43;
    v42[0] = v44[0];
    v42[1] = v44[1];
    sub_236BED454((uint64_t)v42, (uint64_t)&v40);
    sub_236BE7428(0, (unint64_t *)&qword_2542B3030);
    swift_bridgeObjectRetain();
    if (!swift_dynamicCast())
    {
      sub_236C35E30();
      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_236BED4D4((uint64_t)&v41);
LABEL_37:
      swift_release();
      return (uint64_t)a1;
    }
    v17 = v45;
    v39 = v9;
    sub_236BED490();
    sub_236C3640C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FD0);
    sub_236BED514();
    v18 = sub_236C360B8();
    v20 = v19;
    swift_bridgeObjectRelease();
    v21 = v17;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = sub_236BEE010(v18, v20);
    v25 = a1[2];
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
      break;
    v28 = v23;
    if (a1[3] >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v23 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_236C13A58();
        if ((v28 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_236BED560(v27, isUniquelyReferenced_nonNull_native);
      v29 = sub_236BEE010(v18, v20);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_42;
      v24 = v29;
      if ((v28 & 1) != 0)
      {
LABEL_4:
        v7 = a1[7];

        *(_QWORD *)(v7 + 8 * v24) = v21;
        goto LABEL_5;
      }
    }
    a1[(v24 >> 6) + 8] |= 1 << v24;
    v31 = (uint64_t *)(a1[6] + 16 * v24);
    *v31 = v18;
    v31[1] = v20;
    *(_QWORD *)(a1[7] + 8 * v24) = v21;
    v32 = a1[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_39;
    a1[2] = v34;
    swift_bridgeObjectRetain();
LABEL_5:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_236BED4D4((uint64_t)&v41);
    v5 = v39;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  result = sub_236C3667C();
  __break(1u);
  return result;
}

uint64_t sub_236BED454(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_236BED490()
{
  unint64_t result;

  result = qword_2542B2F98;
  if (!qword_2542B2F98)
  {
    result = MEMORY[0x23B80027C](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2542B2F98);
  }
  return result;
}

uint64_t sub_236BED4D4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_236BED514()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542B2FD8;
  if (!qword_2542B2FD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542B2FD0);
    result = MEMORY[0x23B80027C](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_2542B2FD8);
  }
  return result;
}

uint64_t sub_236BED560(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3078);
  v38 = a2;
  v6 = sub_236C3655C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_236C366A0();
    sub_236C36154();
    result = sub_236C366C4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

_QWORD *sub_236BED86C(uint64_t (*a1)(uint64_t *), _QWORD *a2, unint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v5 = a3;
  v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (a3 >> 62)
  {
LABEL_18:
    v8 = sub_236C36544();
    if (v8)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_3:
      v9 = 0;
      v15 = v5 & 0xFFFFFFFFFFFFFF8;
      v16 = v5 & 0xC000000000000001;
      v14 = v5;
      while (1)
      {
        if (v16)
        {
          v10 = MEMORY[0x23B7FF964](v9, v5);
          v11 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
LABEL_14:
            __break(1u);
LABEL_15:
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            return v3;
          }
        }
        else
        {
          if (v9 >= *(_QWORD *)(v15 + 16))
          {
            __break(1u);
            goto LABEL_18;
          }
          v10 = *(_QWORD *)(v5 + 8 * v9 + 32);
          swift_retain();
          v11 = v9 + 1;
          if (__OFADD__(v9, 1))
            goto LABEL_14;
        }
        v17 = v10;
        v3 = a2;
        v12 = a1(&v17);
        if (v4)
          goto LABEL_15;
        if ((v12 & 1) != 0)
        {
          sub_236C364F0();
          sub_236C36514();
          v5 = v14;
          sub_236C36520();
          v3 = &v18;
          sub_236C364FC();
        }
        else
        {
          swift_release();
        }
        ++v9;
        if (v11 == v8)
        {
          v3 = v18;
          goto LABEL_20;
        }
      }
    }
  }
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_236BEDA20()
{
  uint64_t v0;

  return sub_236BEDA54(*(_QWORD *)(v0 + 16)) & 1;
}

uint64_t sub_236BEDA54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  int v16;
  _BOOL4 v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  int v32;
  char *v33;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_requiredKeyValues))
  {
    MEMORY[0x24BDAC7A8](v4);
    *(&v31 - 2) = a1;
    v7 = swift_bridgeObjectRetain();
    v8 = sub_236C2BD64(v7, (uint64_t (*)(uint64_t, uint64_t, char *))sub_236C1538C);
    swift_bridgeObjectRelease();
    v9 = v8 ^ 1;
  }
  else
  {
    v9 = 0;
  }
  v10 = sub_236C35998();
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v32 = v9;
    swift_bridgeObjectRetain();
    v12 = v11 - 1;
    v31 = v10;
    v13 = (uint64_t *)(v10 + 40);
    v14 = &qword_2542B1640;
    v33 = v6;
    do
    {
      v20 = *(v13 - 1);
      v19 = *v13;
      swift_bridgeObjectRetain();
      v21 = sub_236C35D10();
      if (*(_QWORD *)(v21 + 16))
      {
        swift_bridgeObjectRetain();
        v22 = sub_236BEE010(v20, v19);
        if ((v23 & 1) != 0)
        {
          v24 = v22;
          v25 = a1;
          v26 = v14;
          v27 = *(_QWORD *)(v21 + 56);
          v15 = sub_236C3592C();
          v28 = *(_QWORD *)(v15 - 8);
          v29 = v27 + *(_QWORD *)(v28 + 72) * v24;
          v14 = v26;
          a1 = v25;
          v6 = v33;
          (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v33, v29, v15);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v6, 0, 1, v15);
        }
        else
        {
          v15 = sub_236C3592C();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v15 = sub_236C3592C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
      }
      v13 += 2;
      swift_bridgeObjectRelease();
      sub_236C3592C();
      v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v6, 1, v15);
      sub_236BE6C14((uint64_t)v6, v14);
      swift_bridgeObjectRelease();
      v17 = v16 != 1;
    }
    while (v16 == 1 && v12-- != 0);
    swift_bridgeObjectRelease();
    v9 = v32;
  }
  else
  {
    v17 = 0;
  }
  swift_bridgeObjectRelease();
  return v17 & (v9 ^ 1) & ((unsigned __int16)sub_236C35CF8() != 11);
}

unint64_t sub_236BEDD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_236C36658() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_236C36658() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_236BEDDE0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FA0) + 48);
  v5 = (char *)a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FB8) + 48);
  v7 = *a1;
  v6 = a1[1];
  v8 = sub_236C3592C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v5, v4, v8);
  *a2 = v7;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_236BEDE64(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_236C366A0();
  swift_bridgeObjectRetain();
  sub_236C36154();
  v8 = sub_236C366C4();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_236C36658() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_236C36658() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_236BEE074(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

unint64_t sub_236BEE010(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_236C366A0();
  sub_236C36154();
  v4 = sub_236C366C4();
  return sub_236BEDD00(a1, a2, v4);
}

uint64_t sub_236BEE074(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_236BEE468();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_236C17C68();
      goto LABEL_22;
    }
    sub_236BF1290();
  }
  v11 = *v4;
  sub_236C366A0();
  sub_236C36154();
  result = sub_236C366C4();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_236C36658(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_236C36670();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_236C36658();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_236BEE20C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = sub_236C3592C();
  v1 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1538);
  v31 = v0;
  v4 = *v0;
  v5 = sub_236C36550();
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    result = (void *)swift_release();
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return result;
  }
  v7 = v5;
  result = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    result = (void *)swift_release();
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_236BEE468()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3050);
  v3 = sub_236C364A8();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_236C366A0();
      sub_236C36154();
      result = sub_236C366C4();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_236BEE744(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  int v43;
  char *v44;
  uint64_t v45;

  v3 = v2;
  v45 = sub_236C3592C();
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1538);
  v43 = a2;
  v8 = sub_236C3655C();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v40 = v2;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = *(_QWORD *)(v7 + 64);
    v42 = (_QWORD *)(v7 + 64);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & v11;
    v41 = (unint64_t)(v10 + 63) >> 6;
    v14 = v8 + 64;
    result = swift_retain();
    v16 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v16 << 6);
      }
      else
      {
        v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v41)
          goto LABEL_34;
        v22 = v42[v21];
        ++v16;
        if (!v22)
        {
          v16 = v21 + 1;
          if (v21 + 1 >= v41)
            goto LABEL_34;
          v22 = v42[v16];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v41)
            {
LABEL_34:
              swift_release();
              v3 = v40;
              if ((v43 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v7 + 32);
                if (v38 >= 64)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v7 + 16) = 0;
              }
              break;
            }
            v22 = v42[v23];
            if (!v22)
            {
              while (1)
              {
                v16 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v16 >= v41)
                  goto LABEL_34;
                v22 = v42[v16];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v16 = v23;
          }
        }
LABEL_21:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      v24 = *(_QWORD *)(v7 + 56);
      v25 = v7;
      v26 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
      v28 = *v26;
      v27 = v26[1];
      v29 = *(_QWORD *)(v5 + 72);
      v30 = v24 + v29 * v20;
      if ((v43 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v44, v30, v45);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v44, v30, v45);
        swift_bridgeObjectRetain();
      }
      sub_236C366A0();
      sub_236C36154();
      result = sub_236C366C4();
      v31 = -1 << *(_BYTE *)(v9 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v14 + 8 * v33);
        }
        while (v37 == -1);
        v17 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v17);
      *v18 = v28;
      v18[1] = v27;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v9 + 56) + v29 * v17, v44, v45);
      ++*(_QWORD *)(v9 + 16);
      v7 = v25;
    }
  }
  result = swift_release();
  *v3 = v9;
  return result;
}

uint64_t sub_236BEEAAC(uint64_t a1)
{
  return DurationSummaryWorker.process(message:)(a1);
}

uint64_t DurationSummaryWorker.process(message:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unsigned int v18;
  unint64_t v19;
  size_t v20;
  uint64_t isStackAllocationSafe;
  uint64_t v22;
  void *v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  __int128 v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  _QWORD *v65;
  uint64_t v66;
  _BYTE v67[40];
  uint64_t v68;

  v2 = v1;
  v68 = *MEMORY[0x24BDAC8D0];
  v4 = sub_236C359F8();
  v5 = *(_QWORD *)(v4 - 8);
  v61 = v4;
  v62 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v60 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_236C35D58();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = (_QWORD *)a1;
  sub_236C35D88();
  LOBYTE(a1) = sub_236C35D34();
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((a1 & 1) == 0)
  {
    v63 = v2;
    v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_dynamicSummaryConfigs);
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v13 = sub_236C36544();
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    if (v13)
    {
      if (v13 < 1)
        __break(1u);
      v14 = 0;
      v57 = v63 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_session;
      v56 = (_QWORD *)(v63 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_summaryStates);
      *(_QWORD *)&v64 = v12 & 0xC000000000000001;
      v58 = v13;
      v59 = v12;
      do
      {
        if ((_QWORD)v64)
        {
          v15 = MEMORY[0x23B7FF964](v14, v12);
        }
        else
        {
          v15 = *(_QWORD *)(v12 + 8 * v14 + 32);
          swift_retain();
        }
        v16 = sub_236C35D10();
        v17 = *(_BYTE *)(v16 + 32);
        v18 = v17 & 0x3F;
        v19 = (unint64_t)((1 << v17) + 63) >> 6;
        v20 = 8 * v19;
        isStackAllocationSafe = swift_retain_n();
        if (v18 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x24BDAC7A8](isStackAllocationSafe);
          bzero((char *)&v56 - ((v20 + 15) & 0x3FFFFFFFFFFFFFF0), v20);
          swift_retain();
          v22 = sub_236C18DB8((unint64_t *)((char *)&v56 - ((v20 + 15) & 0x3FFFFFFFFFFFFFF0)), v19, v16, v15);
          swift_release();
        }
        else
        {
          v23 = (void *)swift_slowAlloc();
          bzero(v23, v20);
          swift_retain();
          v22 = sub_236C18DB8((unint64_t *)v23, v19, v16, v15);
          swift_release();
          MEMORY[0x23B800318](v23, -1, -1);
        }
        swift_release_n();
        if (*(_QWORD *)(v22 + 16) != *(_QWORD *)(*(_QWORD *)(v15
                                                            + OBJC_IVAR____TtCC22AudioAnalyticsExternal21DurationSummaryWorker20DynamicSummaryConfig_dynamicCreationKeys)
                                                + 16)
          || (v24 = (uint64_t *)(v15
                              + OBJC_IVAR____TtCC22AudioAnalyticsExternal21DurationSummaryWorker20DynamicSummaryConfig_seenKeyValueCombinations),
              swift_beginAccess(),
              v25 = *v24,
              swift_bridgeObjectRetain(),
              v26 = sub_236C15D40(v22, v25),
              swift_bridgeObjectRelease(),
              (v26 & 1) != 0))
        {
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          v27 = swift_bridgeObjectRetain();
          v28 = sub_236C18990(v27, v16);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          if ((v28 & 1) != 0)
          {
            swift_beginAccess();
            swift_retain();
            sub_236C16EC8(&v66, v22);
            swift_endAccess();
            swift_bridgeObjectRelease();
            v29 = v61;
            v30 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
            v31 = v60;
            v30(v60, v15 + OBJC_IVAR____TtCC22AudioAnalyticsExternal21DurationSummaryWorker20DynamicSummaryConfig_summaryConfig, v61);
            sub_236BEBE50(v57, (uint64_t)v67);
            type metadata accessor for DurationSummaryState();
            v32 = swift_allocObject();
            v33 = MEMORY[0x24BEE4B08];
            *(_QWORD *)(v32 + 16) = MEMORY[0x24BEE4B08];
            sub_236C35F14();
            v34 = v32 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_currentMessage;
            v35 = sub_236C35DB8();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
            *(_QWORD *)(v32 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_currentFlattenedMessage) = 0;
            v36 = OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_previousValues;
            sub_236C3592C();
            *(_QWORD *)(v32 + v36) = sub_236C36064();
            *(_QWORD *)(v32 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_seenFields) = v33;
            *(_QWORD *)(v32 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_messageNumber) = 1;
            *(_QWORD *)(v32 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_messagesOutOfOrder) = 0;
            *(_QWORD *)(v32 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_mostRecentTimestamp) = 0;
            *(_QWORD *)(v32 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_startAATimestamp) = 0;
            *(_QWORD *)(v32 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_originalTimeOffset) = 0;
            v37 = v32 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_config;
            *(_BYTE *)(v32 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_isRunning) = 0;
            v30((char *)v37, (uint64_t)v31, v29);
            sub_236BEBE50((uint64_t)v67, v32 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_session);
            *(_QWORD *)(v32 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_requiredKeyValues) = v22;
            sub_236BEBC10();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
            (*(void (**)(char *, uint64_t))(v62 + 8))(v31, v29);
            v38 = v56;
            swift_beginAccess();
            v39 = swift_retain();
            MEMORY[0x23B7FF688](v39);
            if (*(_QWORD *)((*v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_236C36238();
            sub_236C3625C();
            sub_236C3622C();
            swift_endAccess();
            swift_release();
            v13 = v58;
            v12 = v59;
          }
          else
          {
            swift_release();
          }
        }
        ++v14;
        swift_release();
      }
      while (v13 != v14);
    }
    swift_bridgeObjectRelease();
    v40 = v63;
    v41 = (unint64_t *)(v63 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_summaryStates);
    v42 = swift_beginAccess();
    v43 = *v41;
    MEMORY[0x24BDAC7A8](v42);
    v44 = v65;
    *(&v56 - 2) = v65;
    swift_bridgeObjectRetain();
    v45 = sub_236BED86C((uint64_t (*)(uint64_t *))sub_236BEDA20, &v56 - 4, v43);
    MEMORY[0x24BDAC7A8](v45);
    *(&v56 - 2) = v44;
    v46 = sub_236BEF384((void (*)(uint64_t *))sub_236BEF688, (uint64_t)(&v56 - 4), (unint64_t)v45);
    swift_bridgeObjectRelease();
    v47 = *(_QWORD *)(v46 + 16);
    if (v47)
    {
      v48 = *(_QWORD *)(sub_236C35DB8() - 8);
      v49 = v46 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
      v50 = (_QWORD *)(v40 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_session);
      v65 = (_QWORD *)(v40 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_logger);
      v51 = *(_QWORD *)(v48 + 72);
      v62 = v46;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v52 = 134217984;
      v64 = v52;
      do
      {
        __swift_project_boxed_opaque_existential_1(v50, v50[3]);
        if ((sub_236C35B18() & 1) == 0)
        {
          swift_retain();
          v53 = sub_236C35F44();
          v54 = sub_236C36334();
          if (os_log_type_enabled(v53, v54))
          {
            v55 = swift_slowAlloc();
            *(_DWORD *)v55 = v64;
            __swift_project_boxed_opaque_existential_1(v50, v50[3]);
            *(_QWORD *)(v55 + 4) = sub_236C35AF4();
            swift_release();
            _os_log_impl(&dword_236BE1000, v53, v54, "Summary message dropped { reporterID=%lld }", (uint8_t *)v55, 0xCu);
            MEMORY[0x23B800318](v55, -1, -1);
          }
          else
          {
            swift_release();
          }

        }
        v49 += v51;
        --v47;
      }
      while (v47);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_236BEF384(void (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  void (*v33)(uint64_t *);
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;

  v33 = a1;
  v34 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1650);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_236C35DB8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v29 = (char *)&v27 - v12;
  if (a3 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    v13 = sub_236C36544();
    if (v13)
      goto LABEL_3;
  }
  else
  {
    v13 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
    {
LABEL_3:
      v35 = v9;
      v31 = a3 & 0xC000000000000001;
      v36 = MEMORY[0x24BEE4AF8];
      v9 = 4;
      v28 = a3;
      v30 = v13;
      while (1)
      {
        v14 = v8;
        v15 = v9 - 4;
        if (v31)
        {
          v8 = MEMORY[0x23B7FF964](v9 - 4, a3);
          v16 = __OFADD__(v15, 1);
          v17 = v9 - 3;
          if (v16)
            goto LABEL_20;
        }
        else
        {
          v8 = *(_QWORD *)(a3 + 8 * v9);
          swift_retain();
          v16 = __OFADD__(v15, 1);
          v17 = v9 - 3;
          if (v16)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        v37 = v8;
        v33(&v37);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_release();
        }
        swift_release();
        v18 = v35;
        v8 = v14;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v7, 1, v14) == 1)
        {
          sub_236BE6C14((uint64_t)v7, &qword_2542B1650);
        }
        else
        {
          v19 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
          v20 = v29;
          v19(v29, v7, v14);
          v19(v32, v20, v14);
          v21 = v36;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v21 = sub_236C1C20C(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
          v23 = *(_QWORD *)(v21 + 16);
          v22 = *(_QWORD *)(v21 + 24);
          v36 = v21;
          if (v23 >= v22 >> 1)
            v36 = sub_236C1C20C(v22 > 1, v23 + 1, 1, v36);
          v24 = v35;
          v25 = v36;
          *(_QWORD *)(v36 + 16) = v23 + 1;
          v8 = v14;
          v19((char *)(v25+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v23), v32, v14);
          a3 = v28;
        }
        ++v9;
        if (v17 == v30)
        {
          swift_bridgeObjectRelease();
          return v36;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

void sub_236BEF688(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_236BEF6B8(*(_QWORD *)(v1 + 16), a1);
}

void sub_236BEF6B8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = v2;
  v36 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1650);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (double *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_236C35C98();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_236C35D10();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BE09E28], v11);
  v16 = sub_236C35C8C();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (*(_QWORD *)(v15 + 16) && (v19 = sub_236BEE010(v16, v18), (v20 & 1) != 0))
  {
    v21 = v19;
    v22 = *(_QWORD *)(v15 + 56);
    v23 = sub_236C3592C();
    v24 = *(_QWORD *)(v23 - 8);
    (*(void (**)(double *, unint64_t, uint64_t))(v24 + 16))(v10, v22 + *(_QWORD *)(v24 + 72) * v21, v23);
    (*(void (**)(double *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v10, 0, 1, v23);
  }
  else
  {
    v23 = sub_236C3592C();
    (*(void (**)(double *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 1, 1, v23);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_236C3592C();
  v25 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v23) == 1)
  {
    sub_236BE6C14((uint64_t)v10, &qword_2542B1640);
  }
  else if ((*(unsigned int (**)(double *, uint64_t))(v25 + 88))(v10, v23) == *MEMORY[0x24BE09AC0])
  {
    (*(void (**)(double *, uint64_t))(v25 + 96))(v10, v23);
    v26 = *v10;
    sub_236C35DA0();
    *(double *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_originalTimeOffset) = v27 - v26;
  }
  else
  {
    (*(void (**)(double *, uint64_t))(v25 + 8))(v10, v23);
  }
  v28 = sub_236C35DB8();
  v29 = *(_QWORD *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v7, a1, v28);
  v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
  v30((uint64_t)v7, 0, 1, v28);
  v31 = v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_currentMessage;
  swift_beginAccess();
  sub_236BF1244((uint64_t)v7, v31);
  swift_endAccess();
  v32 = sub_236C35D1C();
  v33 = OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_currentFlattenedMessage;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_currentFlattenedMessage) = v32;
  swift_bridgeObjectRelease();
  sub_236BF0CA0();
  sub_236BF082C();
  if (*(_QWORD *)(v3 + v33))
  {
    swift_beginAccess();
    v34 = swift_bridgeObjectRetain();
    sub_236BF0644(v34);
    swift_endAccess();
  }
  if ((sub_236BEFA58() & 1) != 0)
    v35 = (*(uint64_t (**)(void))(*(_QWORD *)v3 + 272))();
  else
    v35 = v30(v36, 1, 1, v28);
  (*(void (**)(uint64_t))(*(_QWORD *)v3 + 240))(v35);
  sub_236BF0BF0();
}

uint64_t sub_236BEFA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t i;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  BOOL v41;
  uint64_t v42;
  _QWORD *v43;
  BOOL v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  char *v64;
  int v65;
  __n128 v66;
  BOOL v67;
  char *v68;
  unint64_t *v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(char *, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;

  v1 = v0;
  v93 = sub_236C3592C();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v88 = (char *)&v80 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v91 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v80 - v6;
  v8 = sub_236C35C98();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1650);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_236C35DB8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_currentMessage;
  swift_beginAccess();
  v20 = v19;
  v21 = v15;
  sub_236C0D160(v20, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_236BE6C14((uint64_t)v14, &qword_2542B1650);
    goto LABEL_90;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_currentFlattenedMessage);
  if (!v22)
    goto LABEL_89;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE09DE0], v8);
  swift_bridgeObjectRetain();
  sub_236C36070();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v23 = v92;
  v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v92 + 48);
  v24 = v85(v7, 1, v93);
  sub_236BE6C14((uint64_t)v7, &qword_2542B1640);
  if (v24 == 1 || sub_236C35D70() != 1 || (unsigned __int16)sub_236C35CF8())
  {
    v25 = (uint64_t *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_previousValues);
    swift_beginAccess();
    v26 = *v25;
    swift_bridgeObjectRetain();
    v86 = sub_236BF07B0(v22, v26);
    v83 = 0;
    v27 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_config;
    v28 = sub_236C359BC();
    v29 = *(_QWORD *)(v28 + 16);
    v90 = v18;
    v89 = v16;
    if (v29)
    {
      v80 = v27;
      v84 = v15;
      v81 = v28;
      v87 = v28 + 32;
      v82 = v1;
      v30 = (uint64_t *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_seenFields);
      swift_beginAccess();
      for (i = 0; i != v29; ++i)
      {
        v32 = *v30;
        if (!*(_QWORD *)(*v30 + 16))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v1 = v82;
          v21 = v84;
          goto LABEL_87;
        }
        v33 = (uint64_t *)(v87 + 16 * i);
        v35 = *v33;
        v34 = v33[1];
        sub_236C366A0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_236C36154();
        v36 = sub_236C366C4();
        v37 = -1 << *(_BYTE *)(v32 + 32);
        v38 = v36 & ~v37;
        if (((*(_QWORD *)(v32 + 56 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
          goto LABEL_25;
        v39 = *(_QWORD *)(v32 + 48);
        v40 = (_QWORD *)(v39 + 16 * v38);
        v41 = *v40 == v35 && v40[1] == v34;
        if (!v41 && (sub_236C36658() & 1) == 0)
        {
          v42 = ~v37;
          while (1)
          {
            v38 = (v38 + 1) & v42;
            if (((*(_QWORD *)(v32 + 56 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
              break;
            v43 = (_QWORD *)(v39 + 16 * v38);
            v44 = *v43 == v35 && v43[1] == v34;
            if (v44 || (sub_236C36658() & 1) != 0)
              goto LABEL_9;
          }
LABEL_25:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v1 = v82;
          v21 = v84;
          v18 = v90;
          v16 = v89;
          goto LABEL_87;
        }
LABEL_9:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v18 = v90;
        v16 = v89;
      }
      swift_bridgeObjectRelease();
      v1 = v82;
      v21 = v84;
      v23 = v92;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v46 = sub_236C359A4();
    v47 = (uint64_t)v91;
    if (v46)
    {
      v48 = (void *)v46;
      v49 = objc_opt_self();
      v50 = sub_236BEC998(v86);
      swift_bridgeObjectRelease();
      sub_236BECC30(v50);
      swift_release();
      v51 = (void *)sub_236C36040();
      swift_bridgeObjectRelease();
      LOBYTE(v49) = objc_msgSend((id)v49, sel_evaluatePredicate_with_, v48, v51);

      if ((v49 & 1) == 0)
        goto LABEL_84;
      goto LABEL_78;
    }
    v52 = sub_236C35974();
    if (!v52)
    {
      swift_bridgeObjectRelease();
      goto LABEL_87;
    }
    v53 = v52;
    v84 = v21;
    v54 = *(_QWORD *)(v52 + 16);
    if (!v54)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = v84;
LABEL_78:
      v75 = OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_isRunning;
      if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_isRunning) & 1) == 0)
      {
        sub_236C35DA0();
        *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_startAATimestamp) = v76;
      }
      *(_BYTE *)(v1 + v75) = 1;
      goto LABEL_87;
    }
    LODWORD(v87) = *MEMORY[0x24BE09AA8];
    LODWORD(v83) = *MEMORY[0x24BE09AB8];
    LODWORD(v82) = *MEMORY[0x24BE09AC0];
    LODWORD(v81) = *MEMORY[0x24BE09AB0];
    LODWORD(v80) = *MEMORY[0x24BE09AD0];
    swift_bridgeObjectRetain();
    v55 = (uint64_t *)(v53 + 40);
    v56 = v93;
    v57 = v86;
    while (1)
    {
      v58 = *v55;
      if (!*(_QWORD *)(v57 + 16))
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v47, 1, 1, v56);
        swift_bridgeObjectRetain();
LABEL_77:
        sub_236BE6C14(v47, &qword_2542B1640);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_83;
      }
      v59 = v57;
      v60 = *(v55 - 1);
      swift_bridgeObjectRetain_n();
      v61 = sub_236BEE010(v60, v58);
      if ((v62 & 1) != 0)
      {
        v56 = v93;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v23 + 16))(v47, *(_QWORD *)(v59 + 56) + *(_QWORD *)(v23 + 72) * v61, v93);
        v63 = 0;
      }
      else
      {
        v63 = 1;
        v56 = v93;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v47, v63, 1, v56);
      swift_bridgeObjectRelease();
      if (v85((char *)v47, 1, v56) == 1)
        goto LABEL_77;
      v64 = v88;
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v88, v47, v56);
      v65 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v64, v56);
      if (v65 == (_DWORD)v87)
      {
        (*(void (**)(char *, uint64_t))(v23 + 96))(v64, v56);
        v67 = *(_QWORD *)v64 == 1;
        goto LABEL_47;
      }
      if (v65 == (_DWORD)v83)
        break;
      if (v65 == (_DWORD)v82)
      {
        v69 = (unint64_t *)v88;
        (*(void (**)(char *, uint64_t))(v23 + 96))(v88, v56);
        v66.n128_u64[0] = *v69;
        v67 = *(double *)v69 == 1.0;
LABEL_47:
        v70 = v67;
        goto LABEL_50;
      }
      if (v65 == (_DWORD)v81)
      {
        v71 = v88;
        (*(void (**)(char *, uint64_t))(v23 + 96))(v88, v56);
        v70 = *v71;
      }
      else
      {
        if (v65 != (_DWORD)v80)
        {
          v77 = *(void (**)(char *, uint64_t))(v23 + 8);
          v77(v88, v56);
          v77((char *)v47, v56);
          swift_bridgeObjectRelease();
LABEL_82:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
LABEL_83:
          v21 = v84;
          v18 = v90;
          v16 = v89;
LABEL_84:
          v78 = OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_isRunning;
          if (*(_BYTE *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_isRunning) == 1)
          {
            (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v21);
            *(_BYTE *)(v1 + v78) = 0;
            v45 = 1;
            return v45 & 1;
          }
          *(_BYTE *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_isRunning) = 0;
LABEL_87:
          if (*(_BYTE *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_isRunning) == 1)
          {
            v45 = sub_236BF1678();
            (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v21);
            return v45 & 1;
          }
LABEL_89:
          (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v21);
LABEL_90:
          v45 = 0;
          return v45 & 1;
        }
        (*(void (**)(char *, uint64_t))(v23 + 96))(v88, v56);
        v72 = sub_236C3613C();
        v74 = v73;
        swift_bridgeObjectRelease();
        if (v72 == 49 && v74 == 0xE100000000000000
          || (sub_236C36658() & 1) != 0
          || v72 == 116 && v74 == 0xE100000000000000
          || (sub_236C36658() & 1) != 0
          || *(_QWORD *)"true" == v72 && v74 == 0xE400000000000000
          || (sub_236C36658() & 1) != 0
          || v72 == 28271 && v74 == 0xE200000000000000)
        {
          v70 = 1;
        }
        else if ((sub_236C36658() & 1) != 0 || v72 == 7562617 && v74 == 0xE300000000000000)
        {
          v70 = 1;
        }
        else
        {
          v70 = sub_236C36658();
        }
        swift_bridgeObjectRelease();
        swift_arrayDestroy();
        v56 = v93;
        v23 = v92;
      }
LABEL_50:
      (*(void (**)(char *, uint64_t, __n128))(v23 + 8))(v91, v56, v66);
      swift_bridgeObjectRelease();
      if ((v70 & 1) == 0)
        goto LABEL_82;
      v55 += 2;
      --v54;
      v23 = v92;
      v47 = (uint64_t)v91;
      v57 = v86;
      if (!v54)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v21 = v84;
        v18 = v90;
        v16 = v89;
        goto LABEL_78;
      }
    }
    v68 = v88;
    (*(void (**)(char *, uint64_t))(v23 + 96))(v88, v56);
    v67 = *(_QWORD *)v68 == 1;
    goto LABEL_47;
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  swift_bridgeObjectRelease();
  v45 = *(_BYTE *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_isRunning);
  return v45 & 1;
}

uint64_t sub_236BF0644(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = result;
  v2 = 0;
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_236BEDE64(&v16, v11, v12);
    result = swift_bridgeObjectRelease();
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_236BF07B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_236BEC134(a1, (uint64_t)sub_236BEDDE0, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

void sub_236BF082C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  double v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1650);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_236C35DB8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_currentMessage;
  swift_beginAccess();
  sub_236C0D160(v9, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    if ((sub_236C35A94() & 1) != 0)
    {
      sub_236C35DA0();
      if (v13 < *(double *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_mostRecentTimestamp))
      {
        v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_messagesOutOfOrder);
        v15 = __OFADD__(v14, 1);
        v16 = v14 + 1;
        if (v15)
        {
          __break(1u);
          return;
        }
        *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_messagesOutOfOrder) = v16;
        v17 = sub_236C3598C();
        v18 = MEMORY[0x23B7FF31C](v17);
        v20 = v19;
        swift_bridgeObjectRetain();
        v21 = sub_236C35F44();
        v22 = sub_236C36328();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = swift_slowAlloc();
          v29 = v18;
          v24 = (uint8_t *)v23;
          v30 = swift_slowAlloc();
          v32 = v30;
          *(_DWORD *)v24 = 136380675;
          v28 = v24 + 4;
          swift_bridgeObjectRetain();
          v31 = sub_236C0ED40(v29, v20, &v32);
          sub_236C363F4();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_236BE1000, v21, v22, "MESSAGES ARRIVED OUT OF ORDER! message.timestamp < mostRecentTimestamp { category=%{private}s }", v24, 0xCu);
          v25 = v30;
          swift_arrayDestroy();
          MEMORY[0x23B800318](v25, -1, -1);
          MEMORY[0x23B800318](v24, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

      }
    }
    sub_236C35DA0();
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_mostRecentTimestamp) = v27;
    return;
  }
  sub_236BE6C14((uint64_t)v4, &qword_2542B1650);
  swift_retain();
  v10 = sub_236C35F44();
  v11 = sub_236C36334();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v12 = 134217984;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_session), *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_session + 24));
    v32 = sub_236C35AF4();
    sub_236C363F4();
    swift_release();
    _os_log_impl(&dword_236BE1000, v10, v11, "updateMostRecentTimestamp() called with currentMessage==nil { reporterID=%lld }", v12, 0xCu);
    MEMORY[0x23B800318](v12, -1, -1);
  }
  else
  {
    swift_release();
  }

}

void sub_236BF0BF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_currentFlattenedMessage);
  if (v1)
  {
    v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_previousValues);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v4 = *v2;
    *v2 = 0x8000000000000000;
    sub_236BEC134(v1, (uint64_t)sub_236BEDDE0, 0, isUniquelyReferenced_nonNull_native, &v4);
    *v2 = v4;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
}

uint64_t sub_236BF0CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  void (*v34)(char *, _QWORD, uint64_t);
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, _QWORD, uint64_t);
  uint64_t v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  uint64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  char *v65;
  uint64_t v66;
  char *v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[2];
  uint64_t v74;
  uint64_t v75;

  v1 = sub_236C35C98();
  v68 = *(void (**)(char *, uint64_t))(v1 - 8);
  v69 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v70 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_236C35DB8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v67 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1650);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v66 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v57 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v57 - v15;
  v17 = sub_236C3592C();
  v71 = *(_QWORD *)(v17 - 8);
  v72 = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v57 - v21;
  v23 = v0;
  v24 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_currentMessage;
  swift_beginAccess();
  sub_236C0D160(v24, (uint64_t)v10);
  v25 = v4;
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v27 = v3;
  v28 = v3;
  v29 = v26;
  if (v26((uint64_t)v10, 1, v28))
  {
    sub_236BE6C14((uint64_t)v10, &qword_2542B1650);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56))(v16, 1, 1, v72);
    return sub_236BE6C14((uint64_t)v16, &qword_2542B1640);
  }
  v64 = v29;
  v62 = v14;
  v60 = v20;
  v65 = v22;
  v59 = v23;
  v30 = v67;
  v61 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  v61(v67, v10, v27);
  sub_236BE6C14((uint64_t)v10, &qword_2542B1650);
  sub_236C35D10();
  v31 = *(void (**)(char *, uint64_t))(v25 + 8);
  v63 = v27;
  v31(v30, v27);
  v33 = v68;
  v32 = v69;
  v34 = (void (*)(char *, _QWORD, uint64_t))*((_QWORD *)v68 + 13);
  v35 = v70;
  v34(v70, *MEMORY[0x24BE09E18], v69);
  sub_236C36070();
  swift_bridgeObjectRelease();
  v36 = (void (*)(char *, uint64_t))*((_QWORD *)v33 + 1);
  v36(v35, v32);
  v37 = v71;
  v38 = v72;
  v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
  if (v39(v16, 1, v72) == 1)
    return sub_236BE6C14((uint64_t)v16, &qword_2542B1640);
  v58 = v34;
  v68 = v31;
  v40 = v30;
  v41 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v42 = v65;
  v41(v65, v16, v38);
  v43 = v66;
  sub_236C0D160(v24, v66);
  v44 = v63;
  if (v64(v43, 1, v63))
  {
    sub_236BE6C14(v43, &qword_2542B1650);
    v16 = v62;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v62, 1, 1, v38);
LABEL_7:
    (*(void (**)(char *, uint64_t))(v37 + 8))(v42, v38);
    return sub_236BE6C14((uint64_t)v16, &qword_2542B1640);
  }
  v61(v40, (char *)v43, v44);
  sub_236BE6C14(v43, &qword_2542B1650);
  sub_236C35D10();
  v42 = v65;
  v68(v40, v44);
  v45 = v69;
  v46 = v70;
  v58(v70, *MEMORY[0x24BE09E40], v69);
  v47 = v62;
  sub_236C36070();
  v16 = v47;
  v38 = v72;
  swift_bridgeObjectRelease();
  v36(v46, v45);
  if (v39(v16, 1, v38) == 1)
    goto LABEL_7;
  v49 = v60;
  v41(v60, v16, v38);
  sub_236C35920();
  if ((swift_dynamicCast() & 1) != 0)
  {
    v50 = v73[0];
    v51 = v73[1];
    sub_236C35920();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v74 = v50;
      v75 = v51;
      sub_236C36184();
      sub_236C36184();
      swift_bridgeObjectRelease();
      v52 = v74;
      v53 = v75;
      swift_beginAccess();
      sub_236BEDE64(v73, v52, v53);
      swift_endAccess();
    }
    swift_bridgeObjectRelease();
    v55 = *(void (**)(char *, uint64_t))(v37 + 8);
    v56 = v72;
    v55(v49, v72);
    return ((uint64_t (*)(char *, uint64_t))v55)(v65, v56);
  }
  else
  {
    v54 = *(void (**)(char *, uint64_t))(v37 + 8);
    v54(v49, v38);
    return ((uint64_t (*)(char *, uint64_t))v54)(v42, v38);
  }
}

uint64_t sub_236BF1244(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_236BF1290()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3050);
  v3 = sub_236C364A8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_236C366A0();
    swift_bridgeObjectRetain();
    sub_236C36154();
    result = sub_236C366C4();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_236BF153C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t result;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  _BYTE v11[24];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1650);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = MEMORY[0x24BDAC7A8](v2);
  v7 = &v11[-v6];
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_isRunning) == 1)
  {
    v8 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal29DurationSummaryDecoratorState_decoratorRunningMessage;
    swift_beginAccess();
    sub_236C0D160(v8, (uint64_t)v7);
    v9 = sub_236C35DB8();
    v10 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9);
    sub_236BE6C14((uint64_t)v7, &qword_2542B1650);
    if (v10 == 1 || (result = sub_236BF1678(), (result & 1) != 0))
    {
      sub_236C0FF30((uint64_t)v4);
      swift_beginAccess();
      sub_236BF1244((uint64_t)v4, v8);
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_236BF1678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t result;
  int64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  char v46;
  unint64_t v47;
  void (*v48)(char *, unint64_t, uint64_t);
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v51)(char *, uint64_t, uint64_t);
  int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char v61;
  _QWORD *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t *v75;
  char *v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  int64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v1 = v0;
  v89 = sub_236C35DB8();
  v86 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v79 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1650);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v76 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v73 - v9;
  v11 = sub_236C3592C();
  v12 = *(_QWORD **)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v73 - v16;
  v18 = sub_236C359D4();
  if (v18)
  {
    v19 = v18;
    v74 = v15;
    v78 = v17;
    v20 = *(_QWORD *)(v18 + 64);
    v83 = v18 + 64;
    v21 = *(_BYTE *)(v18 + 32);
    v87 = v11;
    v22 = 1 << v21;
    v23 = -1;
    if (v22 < 64)
      v23 = ~(-1 << v22);
    v24 = v23 & v20;
    v25 = v12;
    v26 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_currentMessage;
    v73 = v1;
    v27 = (uint64_t *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_previousValues);
    swift_beginAccess();
    v75 = v27;
    result = swift_beginAccess();
    v29 = 0;
    v84 = (unint64_t)(v22 + 63) >> 6;
    v30 = v25;
    v88 = v25;
    v81 = v10;
    v82 = v19;
    v80 = v26;
    while (1)
    {
      v32 = v86;
      if (v24)
      {
        v33 = __clz(__rbit64(v24));
        v24 &= v24 - 1;
        v34 = v33 | (v29 << 6);
      }
      else
      {
        v35 = v29 + 1;
        if (__OFADD__(v29, 1))
        {
          __break(1u);
LABEL_51:
          __break(1u);
          return result;
        }
        if (v35 >= v84)
          goto LABEL_44;
        v36 = *(_QWORD *)(v83 + 8 * v35);
        ++v29;
        if (!v36)
        {
          v29 = v35 + 1;
          if (v35 + 1 >= v84)
            goto LABEL_44;
          v36 = *(_QWORD *)(v83 + 8 * v29);
          if (!v36)
          {
            v29 = v35 + 2;
            if (v35 + 2 >= v84)
              goto LABEL_44;
            v36 = *(_QWORD *)(v83 + 8 * v29);
            if (!v36)
            {
              v29 = v35 + 3;
              if (v35 + 3 >= v84)
                goto LABEL_44;
              v36 = *(_QWORD *)(v83 + 8 * v29);
              if (!v36)
              {
                v29 = v35 + 4;
                if (v35 + 4 >= v84)
                  goto LABEL_44;
                v36 = *(_QWORD *)(v83 + 8 * v29);
                if (!v36)
                {
                  v37 = v35 + 5;
                  if (v37 >= v84)
                  {
LABEL_44:
                    swift_release();
                    return 0;
                  }
                  v36 = *(_QWORD *)(v83 + 8 * v37);
                  if (!v36)
                  {
                    while (1)
                    {
                      v29 = v37 + 1;
                      if (__OFADD__(v37, 1))
                        goto LABEL_51;
                      if (v29 >= v84)
                        goto LABEL_44;
                      v36 = *(_QWORD *)(v83 + 8 * v29);
                      ++v37;
                      if (v36)
                        goto LABEL_26;
                    }
                  }
                  v29 = v37;
                }
              }
            }
          }
        }
LABEL_26:
        v24 = (v36 - 1) & v36;
        v34 = __clz(__rbit64(v36)) + (v29 << 6);
      }
      v38 = (uint64_t *)(*(_QWORD *)(v19 + 48) + 16 * v34);
      v40 = *v38;
      v39 = v38[1];
      sub_236C0D160(v26, (uint64_t)v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v5, 1, v89))
        break;
      v85 = v40;
      v41 = v79;
      v42 = v89;
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v79, v5, v89);
      swift_bridgeObjectRetain();
      sub_236BE6C14((uint64_t)v5, &qword_2542B1650);
      v43 = sub_236C35D10();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v41, v42);
      if (*(_QWORD *)(v43 + 16))
      {
        swift_bridgeObjectRetain();
        v44 = sub_236BEE010(v85, v39);
        v10 = v81;
        v45 = v30;
        if ((v46 & 1) != 0)
        {
          v47 = *(_QWORD *)(v43 + 56) + v30[9] * v44;
          v48 = (void (*)(char *, unint64_t, uint64_t))v30[2];
          v49 = v87;
          v48(v81, v47, v87);
          v50 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v45[7];
          v50(v10, 0, 1, v49);
        }
        else
        {
          v50 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v30[7];
          v49 = v87;
          v50(v81, 1, 1, v87);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v45 = v30;
        v50 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v30[7];
        v10 = v81;
        v49 = v87;
        v50(v81, 1, 1, v87);
      }
      swift_bridgeObjectRelease();
      v51 = (uint64_t (*)(char *, uint64_t, uint64_t))v45[6];
      v52 = v51(v10, 1, v49);
      v19 = v82;
      v31 = v80;
      if (v52 == 1)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        result = sub_236BE6C14((uint64_t)v10, &qword_2542B1640);
        v30 = v88;
        v26 = v31;
      }
      else
      {
        v53 = v49;
        v77 = (void (*)(char *, char *, uint64_t))v88[4];
        v77(v78, v10, v49);
        v54 = *v75;
        if (!*(_QWORD *)(*v75 + 16))
        {
          v57 = (uint64_t)v76;
          v50(v76, 1, 1, v53);
          goto LABEL_41;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v55 = sub_236BEE010(v85, v39);
        if ((v56 & 1) != 0)
        {
          v53 = v87;
          v57 = (uint64_t)v76;
          ((void (*)(char *, unint64_t, uint64_t))v88[2])(v76, *(_QWORD *)(v54 + 56) + v88[9] * v55, v87);
          v58 = 0;
        }
        else
        {
          v58 = 1;
          v53 = v87;
          v57 = (uint64_t)v76;
        }
        v50((char *)v57, v58, 1, v53);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v51((char *)v57, 1, v53) == 1)
        {
LABEL_41:
          v30 = v88;
          ((void (*)(char *, uint64_t))v88[1])(v78, v53);
          swift_bridgeObjectRelease();
          result = sub_236BE6C14(v57, &qword_2542B1640);
          v10 = v81;
          v19 = v82;
          v26 = v31;
        }
        else
        {
          v59 = v74;
          v77(v74, (char *)v57, v53);
          sub_236BF1EB4();
          v60 = v78;
          v61 = sub_236C360C4();
          v62 = v88;
          if ((v61 & 1) == 0)
          {
            swift_bridgeObjectRetain();
            v65 = sub_236C35F44();
            v66 = sub_236C36328();
            if (os_log_type_enabled(v65, v66))
            {
              v67 = (uint8_t *)swift_slowAlloc();
              v68 = swift_slowAlloc();
              v91 = v68;
              *(_DWORD *)v67 = 136446210;
              swift_bridgeObjectRetain();
              v90 = sub_236C0ED40(v85, v39, &v91);
              sub_236C363F4();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_236BE1000, v65, v66, "Watched field changed. { field=%{public}s }", v67, 0xCu);
              v64 = 1;
              swift_arrayDestroy();
              MEMORY[0x23B800318](v68, -1, -1);
              MEMORY[0x23B800318](v67, -1, -1);

              v69 = (void (*)(char *, uint64_t))v62[1];
              v70 = v87;
              v69(v74, v87);
              v69(v78, v70);
              swift_release();
            }
            else
            {
              swift_bridgeObjectRelease_n();

              v71 = (void (*)(char *, uint64_t))v62[1];
              v72 = v87;
              v71(v74, v87);
              v71(v78, v72);
              swift_release();
              return 1;
            }
            return v64;
          }
          swift_bridgeObjectRelease();
          v30 = v62;
          v63 = (void (*)(char *, uint64_t))v62[1];
          v63(v59, v87);
          result = ((uint64_t (*)(char *, uint64_t))v63)(v60, v87);
          v10 = v81;
          v19 = v82;
          v26 = v80;
        }
      }
    }
    v31 = v26;
    swift_bridgeObjectRetain();
    sub_236BE6C14((uint64_t)v5, &qword_2542B1650);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v30[7])(v10, 1, 1, v87);
    goto LABEL_6;
  }
  return 0;
}

unint64_t sub_236BF1EB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542B14E0;
  if (!qword_2542B14E0)
  {
    v1 = sub_236C3592C();
    result = MEMORY[0x23B80027C](MEMORY[0x24BE09AF8], v1);
    atomic_store(result, (unint64_t *)&qword_2542B14E0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B800264]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B800270](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

unint64_t sub_236BF2070(unsigned __int16 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int16 *)(v7 + 2 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int16 *)(v7 + 2 * result) == a1)
          break;
      }
    }
  }
  return result;
}

_OWORD *sub_236BF2110(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_236BEBFFC((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(v15[7] + 32 * v9);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
        return sub_236BECFF4(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_236C1400C();
      goto LABEL_7;
    }
    sub_236C13474(v12, a3 & 1);
    v18 = sub_236BEBFFC((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_236C10CCC(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  sub_236BE7428(0, (unint64_t *)&qword_2542B3038);
  result = (_OWORD *)sub_236C3667C();
  __break(1u);
  return result;
}

uint64_t sub_236BF2240(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_236BE3EBC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

BOOL sub_236BF225C(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_WORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 17; ; ++i)
  {
    v5 = i - 15;
    if (__OFADD__(i - 16, 1))
      break;
    v6 = *(unsigned __int16 *)(a2 + 2 * i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

unint64_t sub_236BF22BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FB8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1538);
  v6 = sub_236C36568();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (char *)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_236C1945C(v12, (uint64_t)v5, &qword_2542B2FB8);
    v14 = *v5;
    v15 = v5[1];
    result = sub_236BEE010(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = sub_236C3592C();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, v9, v21);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_236BF245C()
{
  uint64_t v0;

  return sub_236BF2484(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_236BF2464()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_236BF2484(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_236BF24A4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

BOOL sub_236BF24C4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BOOL8 result;

  v1 = OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker____lazy_storage___shouldBatch;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker____lazy_storage___shouldBatch);
  if (v2 != 2)
    return v2 & 1;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session), *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session + 24));
  result = (unsigned __int16)sub_236C35B00() != 12;
  *(_BYTE *)(v0 + v1) = result;
  return result;
}

BOOL sub_236BF2544()
{
  return RTCWorker.start()();
}

uint64_t sub_236BF2568()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  *(_BYTE *)(v1 + 16) = 1;
  return 1;
}

uint64_t sub_236BF25AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  swift_allocObject();
  result = SummaryDecoratorWorker.init(with:)(a1);
  *a2 = result;
  return result;
}

uint64_t *sub_236BF25F4@<X0>(_QWORD *a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t *result;

  swift_allocObject();
  result = DurationSummaryWorker.init(with:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_236BF263C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  swift_allocObject();
  result = SessionSummaryWorker.init(with:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_236BF2684@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  swift_allocObject();
  result = DriverSnapshotWorker.init(with:)(a1);
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for AdaptiveVolumeWorker()
{
  uint64_t result;

  result = qword_2542B2030;
  if (!qword_2542B2030)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236BF2708()
{
  return sub_236BE4024() & 1;
}

uint64_t sub_236BF272C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t sub_236BF2798(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TailspinOptions(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_236BF27D8@<X0>(__int128 *a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t *result;

  swift_allocObject();
  result = TailspinWorker.init(with:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_236BF2820()
{
  return sub_236BE3AAC();
}

uint64_t type metadata accessor for PowerLogWorker.RMSState()
{
  return objc_opt_self();
}

uint64_t sub_236BF2854@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  swift_allocObject();
  result = PowerLogWorker.init(with:)(a1);
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for AirPodWorker()
{
  uint64_t result;

  result = qword_2542B1758;
  if (!qword_2542B1758)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236BF28D8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_236BF29F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_236BF2C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_236BF2D68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_236BF2E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_236BF2EDC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_236BF33B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, _Unwind_Exception *exception_object, void *a13, void *a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_236BF3728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_236BF3A28(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_236BF3C40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_236BF3E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{

  _Unwind_Resume(a1);
}

void sub_236BF4004(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_236BF40D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_236BF4268(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

_QWORD *sub_236BF4354()
{
  uint64_t v0;
  _QWORD *result;

  type metadata accessor for AdaptiveVolumeManager();
  v0 = swift_allocObject();
  result = AdaptiveVolumeManager.init()();
  qword_256448E50 = v0;
  return result;
}

uint64_t AdaptiveVolumeManager.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  AdaptiveVolumeManager.init()();
  return v0;
}

_QWORD *AdaptiveVolumeManager.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v38[4];
  uint64_t v39;
  char *v40;
  unsigned int v41;
  uint64_t v42;

  v1 = v0;
  v2 = sub_236C36364();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v2);
  v4 = sub_236C3637C();
  v5 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v7;
  v8 = sub_236C35FEC();
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_236BE7428(0, (unint64_t *)&qword_2542B3008);
  sub_236C35FE0();
  v41 = *MEMORY[0x24BEE5758];
  v10 = *(void (**)(char *))(v5 + 104);
  v10(v7);
  v42 = MEMORY[0x24BEE4AF8];
  sub_236BE6C98(&qword_2542B3000, v3, MEMORY[0x24BEE5698]);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FE0);
  v12 = sub_236BF9E90((unint64_t *)&qword_2542B2FE8, &qword_2542B2FE0, MEMORY[0x24BEE12C8]);
  v38[0] = v2;
  v38[1] = v11;
  v38[3] = v12;
  sub_236C36448();
  v13 = v40;
  v38[2] = v9;
  v1[2] = sub_236C363A0();
  sub_236C35FE0();
  v14 = v13;
  v15 = v39;
  ((void (*)(char *, _QWORD, uint64_t))v10)(v14, v41, v39);
  v42 = MEMORY[0x24BEE4AF8];
  sub_236C36448();
  v16 = v40;
  v1[3] = sub_236C363A0();
  sub_236C35FE0();
  ((void (*)(char *, _QWORD, uint64_t))v10)(v16, v41, v15);
  v17 = MEMORY[0x24BEE4AF8];
  v42 = MEMORY[0x24BEE4AF8];
  sub_236C36448();
  v1[4] = sub_236C363A0();
  sub_236C35EFC();
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_reportHighWatermark) = 10000;
  v18 = OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_hidManager;
  *(_QWORD *)((char *)v1 + v18) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3E808]), sel_initWithOptions_, 8);
  v19 = OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_AVBiomeStreamSource;
  v20 = objc_msgSend((id)BiomeLibrary(), sel_Device);
  swift_unknownObjectRelease();
  v21 = objc_msgSend(v20, sel_Audio);
  swift_unknownObjectRelease();
  v22 = objc_msgSend(v21, sel_AdaptiveVolume);
  swift_unknownObjectRelease();
  v23 = objc_msgSend(v22, sel_source);

  *(_QWORD *)((char *)v1 + v19) = v23;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_hidDevice) = 0;
  v24 = OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_notificationPointer;
  *(_QWORD *)((char *)v1 + v24) = IONotificationPortCreate(*MEMORY[0x24BDD8B18]);
  *(_DWORD *)((char *)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_iter) = 0;
  *(_DWORD *)((char *)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_currentMatchedService) = 0;
  v25 = OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_cancelHIDTeardown;
  *((_BYTE *)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_cancelHIDTeardown) = 1;
  v26 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_reportString);
  *v26 = 0;
  v26[1] = 0xE000000000000000;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_numActiveAvSessions) = 0;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeSessionInfo) = v17;
  v27 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeAppName);
  *v27 = 0;
  v27[1] = 0xE000000000000000;
  v28 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeSerialNumber);
  *v28 = 0;
  v28[1] = 0;
  v29 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeFWVersion);
  *v29 = 0;
  v29[1] = 0;
  v30 = OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_nextBlobbyUploadTime;
  sub_236C36280();
  v32 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447110);
  v33 = swift_allocObject();
  *(_DWORD *)(v33 + 24) = 0;
  *(_QWORD *)(v33 + 16) = v32;
  *(_QWORD *)((char *)v1 + v30) = v33;
  v34 = (char *)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_currentDrcPacket;
  *(_WORD *)v34 = 0;
  v34[2] = 0;
  *((_QWORD *)v34 + 1) = 0;
  v35 = OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_currentOutputGain;
  v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(_QWORD *)(v36 + 16) = 0x406FE00000000000;
  *(_QWORD *)((char *)v1 + v35) = v36;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_fileCompressor) = 0;
  *((_BYTE *)v1 + v25) = 1;
  sub_236BF4900();
  return v1;
}

uint64_t sub_236BF4900()
{
  dispatch_queue_t *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  IONotificationPort *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  IONotificationPort *v9;
  const __CFDictionary *v10;
  io_iterator_t *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;

  v1 = sub_236C35F44();
  v2 = sub_236C36328();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_236BE1000, v1, v2, "Starting IO Kit operations", v3, 2u);
    MEMORY[0x23B800318](v3, -1, -1);
  }

  v4 = OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_notificationPointer;
  if (!*(dispatch_queue_t *)((char *)v0
                            + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_notificationPointer))
  {
    v5 = IONotificationPortCreate(*MEMORY[0x24BDD8B18]);
    *(dispatch_queue_t *)((char *)v0 + v4) = (dispatch_queue_t)v5;
    IONotificationPortSetDispatchQueue(v5, v0[2]);
  }
  v6 = sub_236C35F44();
  v7 = sub_236C36328();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_236BE1000, v6, v7, "Add matching notifications", v8, 2u);
    MEMORY[0x23B800318](v8, -1, -1);
  }

  v9 = *(IONotificationPort **)((char *)v0 + v4);
  if (qword_256447038 != -1)
    swift_once();
  v10 = (const __CFDictionary *)sub_236C36040();
  v11 = (io_iterator_t *)((char *)v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_iter);
  swift_beginAccess();
  IOServiceAddMatchingNotification(v9, "IOServiceMatched", v10, (IOServiceMatchingCallback)sub_236BF4B60, v0, v11);
  swift_endAccess();
  v12 = sub_236C35F44();
  v13 = sub_236C36328();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_236BE1000, v12, v13, "Kicking off service matching", v14, 2u);
    MEMORY[0x23B800318](v14, -1, -1);
  }

  return sub_236BF4BCC(*v11);
}

uint64_t sub_236BF4B60(uint64_t result, uint64_t a2)
{
  _DWORD *v3;

  if (result)
  {
    v3 = (_DWORD *)(result + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_iter);
    swift_retain();
    swift_beginAccess();
    *v3 = a2;
    sub_236BF4BCC(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_236BF4BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t result;
  io_registry_entry_t v9;
  uint64_t v10;
  mach_port_t v11;
  id v12;
  CFMutableDictionaryRef v13;
  const __CFDictionary *v14;
  uint64_t MatchingService;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint8_t *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  void *v28;
  id v29;
  mach_port_t v30;
  uint64_t entryID[5];

  v2 = v1;
  entryID[4] = *MEMORY[0x24BDAC8D0];
  v4 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_logger;
  v5 = sub_236C35F44();
  v6 = sub_236C36328();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_236BE1000, v5, v6, "Iterating through services", v7, 2u);
    MEMORY[0x23B800318](v7, -1, -1);
  }

  result = IOIteratorNext(a1);
  if ((_DWORD)result)
  {
    v9 = result;
    v10 = OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_currentMatchedService;
    v11 = *MEMORY[0x24BDD8B18];
    v30 = *MEMORY[0x24BDD8B18];
    while (1)
    {
      entryID[0] = 0;
      IORegistryEntryGetRegistryEntryID(v9, entryID);
      v13 = IORegistryEntryIDMatching(entryID[0]);
      if (!v13)
        break;
      v14 = v13;
      MatchingService = IOServiceGetMatchingService(v11, v14);
      if ((_DWORD)MatchingService)
      {
        v16 = MatchingService;
        if (*(_DWORD *)(v2 + v10) == (_DWORD)MatchingService)
        {

          return IOObjectRelease(v9);
        }
        v17 = sub_236C35F44();
        v18 = sub_236C36328();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = v2;
          v20 = a1;
          v21 = v10;
          v22 = v4;
          v23 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v23 = 0;
          _os_log_impl(&dword_236BE1000, v17, v18, "Found matching service.", v23, 2u);
          v24 = v23;
          v4 = v22;
          v10 = v21;
          a1 = v20;
          v2 = v19;
          v11 = v30;
          MEMORY[0x23B800318](v24, -1, -1);
        }

        v12 = sub_236BF4EEC(v16);
        if (v12)
        {
          v28 = *(void **)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_hidDevice);
          *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_hidDevice) = v12;
          v29 = v12;

          *(_DWORD *)(v2 + v10) = v16;
          sub_236BF50E0();

          return IOObjectRelease(v9);
        }
      }

      IOObjectRelease(v9);
      result = IOIteratorNext(a1);
      v9 = result;
      if (!(_DWORD)result)
        return result;
    }
    v25 = sub_236C35F44();
    v26 = sub_236C36328();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v27 = 134283521;
      swift_beginAccess();
      sub_236C363F4();
      _os_log_impl(&dword_236BE1000, v25, v26, "Couldn't find IO Registry Entry ID. { regID=%{private}llu }", v27, 0xCu);
      MEMORY[0x23B800318](v27, -1, -1);
    }

    return IOObjectRelease(v9);
  }
  return result;
}

id sub_236BF4EEC(uint64_t a1)
{
  id v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD8A38]), sel_initWithService_, a1);
  if (v1)
  {
    v2 = v1;
    v3 = v1;
    v4 = sub_236C35F44();
    v5 = sub_236C36328();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v6 = 138477827;
      v8 = v3;
      sub_236C363F4();
      *v7 = v2;

      _os_log_impl(&dword_236BE1000, v4, v5, "Created HID device. { hidDevice=%{private}@ }", v6, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2564474E8);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v7, -1, -1);
      MEMORY[0x23B800318](v6, -1, -1);
    }
    else
    {

    }
  }
  else
  {
    v9 = sub_236C35F44();
    v10 = sub_236C36328();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_236BE1000, v9, v10, "Couldn't create HID device from matching service", v11, 2u);
      MEMORY[0x23B800318](v11, -1, -1);
    }

    return 0;
  }
  return v2;
}

void sub_236BF50E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, void *, uint64_t, uint64_t, uint64_t, void *);
  void *v16;
  void *v17;
  uint64_t v18;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_hidDevice);
  if (v1)
  {
    v2 = v0;
    v17 = sub_236BF9ED8;
    v3 = MEMORY[0x24BDAC760];
    v13 = MEMORY[0x24BDAC760];
    v14 = 1107296256;
    v15 = sub_236BF5A54;
    v16 = &block_descriptor_6;
    v4 = _Block_copy(&v13);
    v5 = v1;
    swift_retain();
    swift_release();
    objc_msgSend(v5, sel_setInputReportHandler_, v4);
    _Block_release(v4);
    v17 = sub_236BF9EE0;
    v18 = v2;
    v13 = v3;
    v14 = 1107296256;
    v15 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, uint64_t, void *))sub_236BF5A50;
    v16 = &block_descriptor_9;
    v6 = _Block_copy(&v13);
    swift_retain();
    swift_release();
    objc_msgSend(v5, sel_setCancelHandler_, v6);
    _Block_release(v6);
    v7 = sub_236C35F44();
    v8 = sub_236C36328();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_236BE1000, v7, v8, "Setting dispatch queue and opening HID device", v9, 2u);
      MEMORY[0x23B800318](v9, -1, -1);
    }

    objc_msgSend(v5, sel_setDispatchQueue_, *(_QWORD *)(v2 + 16));
    objc_msgSend(v5, sel_activate);
    objc_msgSend(v5, sel_open);
    v10 = sub_236C35F44();
    v11 = sub_236C36328();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_236BE1000, v10, v11, "Turning on Non-DRC HID packet streaming.", v12, 2u);
      MEMORY[0x23B800318](v12, -1, -1);
    }

    sub_236BF5BC8(0xC801uLL);
  }
}

void sub_236BF5334(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  __int16 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  void (*v33)(char *, uint64_t);
  void *v34;
  char *v35;
  char *v36;
  NSObject *v37;
  void *v38;
  void *v39;
  os_log_type_t v40;
  uint8_t *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  Class isa;
  NSObject *v52;
  uint64_t v53;
  _QWORD aBlock[7];

  aBlock[6] = *MEMORY[0x24BDAC8D0];
  v9 = sub_236C35FB0();
  isa = v9[-1].isa;
  v52 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v50 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_236C35FEC();
  v48 = *(_QWORD *)(v11 - 8);
  v49 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v47 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_236C35FA4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_236C36004();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v45 - v23;
  if ((a4 & 0x8000000000000000) != 0 || a4 >= 0x100)
  {
    sub_236C36538();
    __break(1u);
  }
  else
  {
    switch((char)a4)
    {
      case 1:
        v52 = sub_236C3577C();
        sub_236BF644C(v52);
        goto LABEL_14;
      case 2:
        v31 = v22;
        v46 = (void *)sub_236C3577C();
        v32 = sub_236BF8258(v46);
        if (v32)
        {
          if (v32 == 1)
          {
            sub_236C35FF8();
            *v16 = 1;
            (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEE5420], v13);
            MEMORY[0x23B7FF4A8](v21, v16);
            (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
            v33 = *(void (**)(char *, uint64_t))(v18 + 8);
            v33(v21, v31);
            v45 = *(_QWORD *)(a7 + 16);
            aBlock[4] = sub_236BF9EE8;
            aBlock[5] = a7;
            aBlock[0] = MEMORY[0x24BDAC760];
            aBlock[1] = 1107296256;
            aBlock[2] = sub_236BF5A50;
            aBlock[3] = &block_descriptor_12;
            v34 = _Block_copy(aBlock);
            swift_retain();
            v35 = v47;
            sub_236C35FBC();
            v53 = MEMORY[0x24BEE4AF8];
            sub_236BE6C98(&qword_2564474F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
            __swift_instantiateConcreteTypeFromMangledName(&qword_256447500);
            sub_236BF9E90(&qword_256447508, &qword_256447500, MEMORY[0x24BEE12C8]);
            v36 = v50;
            v37 = v52;
            sub_236C36448();
            MEMORY[0x23B7FF7FC](v24, v35, v36, v34);

            _Block_release(v34);
            (*((void (**)(char *, NSObject *))isa + 1))(v36, v37);
            (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v49);
            v33(v24, v31);
            swift_release();
            return;
          }
          v42 = sub_236C35F44();
          v43 = sub_236C36328();
          if (os_log_type_enabled(v42, v43))
          {
            v44 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v44 = 0;
            _os_log_impl(&dword_236BE1000, v42, v43, "Report ID 2. Trying to turn on Non-DRC HID packet streaming", v44, 2u);
            MEMORY[0x23B800318](v44, -1, -1);
          }

          sub_236BF5BC8(0xC801uLL);
        }
        else
        {
          *(_BYTE *)(a7 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_cancelHIDTeardown) = 1;
          sub_236BF5F38();
        }
        v38 = v46;
        goto LABEL_20;
      case 3:
        v25 = (void *)sub_236C3577C();
        LOWORD(aBlock[0]) = 0;
        BYTE2(aBlock[0]) = 0;
        objc_msgSend(v25, sel_getBytes_length_, aBlock, 3);
        v26 = aBlock[0];
        v27 = BYTE2(aBlock[0]);
        sub_236C36280();
        v29 = v28;

        v30 = a7 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_currentDrcPacket;
        *(_WORD *)v30 = v26;
        *(_BYTE *)(v30 + 2) = v27;
        *(_QWORD *)(v30 + 8) = v29;
        return;
      case 4:
        v38 = (void *)sub_236C3577C();
        goto LABEL_20;
      default:
        v39 = (void *)sub_236C3577C();
        v52 = sub_236C35F44();
        v40 = sub_236C36340();
        if (os_log_type_enabled(v52, v40))
        {
          v41 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v41 = 134283521;
          aBlock[0] = a4;
          sub_236C363F4();
          _os_log_impl(&dword_236BE1000, v52, v40, "Unexpected AVClientReportID received { reportID=%{private}ld }", v41, 0xCu);
          MEMORY[0x23B800318](v41, -1, -1);

        }
        else
        {

LABEL_14:
          v38 = v52;
LABEL_20:

        }
        break;
    }
  }
}

void sub_236BF59A8()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;

  v0 = sub_236C35F44();
  v1 = sub_236C36328();
  if (os_log_type_enabled(v0, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_236BE1000, v0, v1, "Report ID 2. Trying to turn on Non-DRC HID packet streaming", v2, 2u);
    MEMORY[0x23B800318](v2, -1, -1);
  }

  sub_236BF5BC8(0xC801uLL);
}

uint64_t sub_236BF5A54(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  void (*v11)(id, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t);
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v11 = *(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(a1 + 32);
  swift_retain();
  v12 = a2;
  v13 = a6;
  v14 = sub_236C35788();
  v16 = v15;

  v11(v12, a3, a4, a5, v14, v16);
  sub_236BF9E3C(v14, v16);
  return swift_release();
}

void sub_236BF5B04()
{
  os_log_type_t v0;
  uint8_t *v1;
  NSObject *oslog;

  oslog = sub_236C35F44();
  v0 = sub_236C36328();
  if (os_log_type_enabled(oslog, v0))
  {
    v1 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v1 = 0;
    _os_log_impl(&dword_236BE1000, oslog, v0, "The HID device has been cancelled", v1, 2u);
    MEMORY[0x23B800318](v1, -1, -1);
  }

}

uint64_t sub_236BF5B9C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_236BF5BC8(unint64_t a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  unsigned int v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  int v22;
  uint64_t v23[4];

  v23[3] = *MEMORY[0x24BDAC8D0];
  v2 = a1;
  v21 = a1;
  v22 = a1 >> 8;
  v3 = sub_236C35F44();
  v4 = sub_236C36328();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    *(_DWORD *)v5 = 16843265;
    swift_beginAccess();
    v2 = v21;
    sub_236C363F4();
    *(_WORD *)(v5 + 5) = 1025;
    LODWORD(v23[0]) = v22;
    sub_236C363F4();
    _os_log_impl(&dword_236BE1000, v3, v4, "Firing packet { reportID=%{private}hhu, interval=%{private}u}", (uint8_t *)v5, 0xBu);
    MEMORY[0x23B800318](v5, -1, -1);
  }

  v6 = *(void **)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_hidDevice);
  if (v6)
  {
    swift_beginAccess();
    v20 = 0;
    v7 = v6;
    v8 = objc_msgSend(v7, sel_setReport_reportLength_withIdentifier_forType_error_, &v21, 5, v2, 2, &v20);
    v9 = (void *)v20;
    swift_endAccess();
    v10 = v9;

    if (!v8)
    {
      v11 = (void *)sub_236C35680();

      swift_willThrow();
      v12 = v11;
      v13 = v11;
      v14 = sub_236C35F44();
      v15 = sub_236C36334();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = swift_slowAlloc();
        v17 = swift_slowAlloc();
        v23[0] = v17;
        *(_DWORD *)v16 = 16843523;
        LOBYTE(v20) = v21;
        sub_236C363F4();
        *(_WORD *)(v16 + 5) = 1025;
        LODWORD(v20) = v22;
        sub_236C363F4();
        *(_WORD *)(v16 + 11) = 2081;
        swift_getErrorValue();
        v18 = sub_236C36688();
        v20 = sub_236C0ED40(v18, v19, v23);
        sub_236C363F4();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_236BE1000, v14, v15, "Error setting HID report. { reportID=%{private}hhu, interval=%{private}u, error=%{private}s }", (uint8_t *)v16, 0x15u);
        swift_arrayDestroy();
        MEMORY[0x23B800318](v17, -1, -1);
        MEMORY[0x23B800318](v16, -1, -1);

      }
      else
      {

      }
    }
  }
}

void sub_236BF5F38()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  IONotificationPort *v8;

  v1 = v0;
  v2 = sub_236C35F44();
  v3 = sub_236C36328();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_236BE1000, v2, v3, "Turning off Non-DRC HID packet streaming.", v4, 2u);
    MEMORY[0x23B800318](v4, -1, -1);
  }

  sub_236BF5BC8(1uLL);
  v5 = OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_hidDevice;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_hidDevice), sel_cancel);
  objc_msgSend(*(id *)(v1 + v5), sel_close);
  v6 = *(void **)(v1 + v5);
  *(_QWORD *)(v1 + v5) = 0;

  *(_DWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_currentMatchedService) = 0;
  v7 = OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_notificationPointer;
  v8 = *(IONotificationPort **)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_notificationPointer);
  if (v8)
  {
    IONotificationPortDestroy(v8);
    *(_QWORD *)(v1 + v7) = 0;
  }
}

uint64_t sub_236BF6038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t result;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v1 = sub_236C35FB0();
  v27 = *(_QWORD *)(v1 - 8);
  v28 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_236C35FEC();
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_236C36004();
  v7 = *(_QWORD *)(v24 - 8);
  v8 = MEMORY[0x24BDAC7A8](v24);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v23 - v11;
  v13 = sub_236C36010();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (_QWORD *)((char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(v0 + 16);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEE5610], v13);
  v23[1] = v17;
  LOBYTE(v17) = sub_236C36034();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    sub_236C35FF8();
    sub_236C362B0();
    MEMORY[0x23B7FF4B4](v10);
    v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v20 = v24;
    v19(v10, v24);
    aBlock[4] = sub_236BF9ED0;
    aBlock[5] = v0;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_236BF5A50;
    aBlock[3] = &block_descriptor_3;
    v21 = _Block_copy(aBlock);
    swift_retain();
    sub_236C35FBC();
    v29 = MEMORY[0x24BEE4AF8];
    sub_236BE6C98(&qword_2564474F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256447500);
    sub_236BF9E90(&qword_256447508, &qword_256447500, MEMORY[0x24BEE12C8]);
    v22 = v28;
    sub_236C36448();
    MEMORY[0x23B7FF7FC](v12, v6, v3, v21);
    _Block_release(v21);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v3, v22);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
    v19(v12, v20);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_236BF631C(uint64_t a1)
{
  uint64_t v2;
  int v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint8_t *v6;
  uint8_t *v7;
  NSObject *oslog;

  v2 = OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_cancelHIDTeardown;
  v3 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_cancelHIDTeardown);
  oslog = sub_236C35F44();
  v4 = sub_236C36328();
  v5 = os_log_type_enabled(oslog, v4);
  if (v3 == 1)
  {
    if (v5)
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_236BE1000, oslog, v4, "HID device teardown cancelled", v6, 2u);
      MEMORY[0x23B800318](v6, -1, -1);
    }

  }
  else
  {
    if (v5)
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_236BE1000, oslog, v4, "Tearing down HID device", v7, 2u);
      MEMORY[0x23B800318](v7, -1, -1);
    }

    sub_236BF5F38();
    *(_BYTE *)(a1 + v2) = 1;
  }
}

uint64_t sub_236BF644C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  double v14;
  __int16 *v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[2];
  _OWORD v38[4];
  int v39;
  __int16 v40;
  __int16 v41;
  char v42;
  uint64_t v43;
  uint64_t aBlock[11];

  v2 = v1;
  aBlock[9] = *MEMORY[0x24BDAC8D0];
  v4 = sub_236C35FB0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_236C35FEC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeSessionInfo;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v12 + 16))
  {
    result = sub_236C35A94();
    if ((result & 1) == 0
      || *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeSerialNumber + 8)
      && *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeFWVersion + 8))
    {
      v32 = v9;
      v36 = 0u;
      memset(v37, 0, 22);
      v34 = 0u;
      v35 = 0u;
      objc_msgSend(a1, sel_getBytes_length_, &v34, 70);
      swift_retain();
      sub_236C35EA8();
      swift_release();
      v14 = *(double *)v38;
      v15 = (__int16 *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_currentDrcPacket);
      sub_236BF866C((uint64_t)&v34, *(double *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_currentDrcPacket + 8));
      result = sub_236C35A94();
      if ((result & 1) != 0)
      {
        v29 = v8;
        v30 = v5;
        v38[0] = v34;
        v38[1] = v35;
        v38[2] = v36;
        v38[3] = v37[0];
        v39 = v37[1];
        v40 = WORD2(v37[1]);
        v16 = *((_BYTE *)v15 + 2);
        v17 = *((_QWORD *)v15 + 1);
        v41 = *v15;
        v42 = v16;
        v43 = v17;
        v31 = sub_236BF83B4((uint64_t)v38, v14);
        v19 = v18;
        *((_QWORD *)v15 + 1) = 0;
        swift_bridgeObjectRetain_n();
        v20 = sub_236C35F44();
        v21 = sub_236C36328();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc();
          v28 = swift_slowAlloc();
          aBlock[0] = v28;
          *(_DWORD *)v22 = 136380675;
          v27[1] = v22 + 4;
          swift_bridgeObjectRetain();
          v33 = sub_236C0ED40(v31, v19, aBlock);
          sub_236C363F4();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_236BE1000, v20, v21, "HID report { avReportString=%{private}s }", v22, 0xCu);
          v23 = v28;
          swift_arrayDestroy();
          MEMORY[0x23B800318](v23, -1, -1);
          MEMORY[0x23B800318](v22, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        v24 = (_QWORD *)swift_allocObject();
        v25 = v31;
        v24[2] = v2;
        v24[3] = v25;
        v24[4] = v19;
        aBlock[4] = (uint64_t)sub_236BF9E84;
        aBlock[5] = (uint64_t)v24;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_236BF5A50;
        aBlock[3] = (uint64_t)&block_descriptor;
        v26 = _Block_copy(aBlock);
        swift_retain();
        sub_236C35FBC();
        v33 = MEMORY[0x24BEE4AF8];
        sub_236BE6C98(&qword_2564474F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256447500);
        sub_236BF9E90(&qword_256447508, &qword_256447500, MEMORY[0x24BEE12C8]);
        sub_236C36448();
        MEMORY[0x23B7FF820](0, v11, v7, v26);
        _Block_release(v26);
        (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v4);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v29);
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_236BF68EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;

  swift_beginAccess();
  MEMORY[0x23B7FF5F8](a2, a3);
  swift_endAccess();
  swift_bridgeObjectRetain();
  v5 = sub_236C36160();
  result = swift_bridgeObjectRelease();
  if (v5 >= 10001)
    return sub_236BF6990();
  return result;
}

uint64_t sub_236BF6990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint8_t *v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v1 = v0;
  v2 = sub_236C36124();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_236C3589C();
  v54 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_236C35884();
  v53 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_reportString);
  result = swift_beginAccess();
  v14 = v12[1];
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = *v12 & 0xFFFFFFFFFFFFLL;
  if (v15)
  {
    v52 = v8;
    v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeSerialNumber + 8);
    if (v16)
    {
      v50 = v9;
      v51 = v16;
      v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeSerialNumber);
      v18 = OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_fileCompressor;
      v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_fileCompressor);
      v48 = v17;
      v49 = OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_fileCompressor;
      if (v19)
      {
        v20 = v51;
        swift_bridgeObjectRetain();
      }
      else
      {
        v21 = *MEMORY[0x24BEDFFC8];
        v22 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 104);
        v47 = v11;
        v22(v11, v21, v50);
        v23 = (uint64_t)v52;
        (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v52, *MEMORY[0x24BEDFFF8], v55);
        type metadata accessor for AVCompressFile();
        swift_allocObject();
        v24 = v51;
        swift_bridgeObjectRetain_n();
        v25 = v17;
        v20 = v24;
        v11 = v47;
        *(_QWORD *)(v1 + v18) = sub_236C20DBC(v25, v20, (uint64_t)v47, v23);
        swift_release();
      }
      swift_bridgeObjectRetain();
      sub_236C36118();
      v51 = sub_236C36100();
      v27 = v26;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      if (v27 >> 60 == 15)
      {
        swift_bridgeObjectRelease();
        v28 = sub_236C35F44();
        v29 = sub_236C36334();
        if (os_log_type_enabled(v28, v29))
        {
          v30 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v30 = 0;
          _os_log_impl(&dword_236BE1000, v28, v29, "Unable to decode report string for writing file", v30, 2u);
          MEMORY[0x23B800318](v30, -1, -1);
        }

      }
      else
      {
        v31 = v49;
        if (*(_QWORD *)(v1 + v49))
        {
          v46 = v27;
          swift_retain();
          v32 = v48;
          v33 = sub_236C22C1C(v48, v20);
          swift_release();
          if (v33)
          {
            v34 = sub_236C35F44();
            v35 = sub_236C36328();
            if (os_log_type_enabled(v34, v35))
            {
              v36 = v32;
              v37 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v37 = 0;
              _os_log_impl(&dword_236BE1000, v34, v35, "File compressor current file stale. Closing it and creating new file.", v37, 2u);
              v38 = v37;
              v32 = v36;
              MEMORY[0x23B800318](v38, -1, -1);
            }

            (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v11, *MEMORY[0x24BEDFFC8], v50);
            v39 = (uint64_t)v52;
            (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v52, *MEMORY[0x24BEDFFF8], v55);
            type metadata accessor for AVCompressFile();
            swift_allocObject();
            *(_QWORD *)(v1 + v31) = sub_236C20DBC(v32, v20, (uint64_t)v11, v39);
            swift_release();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          v27 = v46;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v40 = v51;
        if (!*(_QWORD *)(v1 + v31) || (swift_retain(), v41 = sub_236C21E7C(v40, v27), swift_release(), v41))
        {
          v42 = sub_236C35F44();
          v43 = sub_236C36334();
          if (os_log_type_enabled(v42, v43))
          {
            v44 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v44 = 0;
            _os_log_impl(&dword_236BE1000, v42, v43, "File compressor failed to append compressed data.", v44, 2u);
            MEMORY[0x23B800318](v44, -1, -1);
          }

        }
        sub_236BF9E28(v40, v27);
      }
    }
    *v12 = 0;
    v12[1] = 0xE000000000000000;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_236BF6E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint8_t *v21;
  _QWORD *v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_236C35FB0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_236C35FEC();
  v10 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_236C35F44();
  v14 = sub_236C36328();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v26 = v6;
    v16 = a2;
    v17 = v10;
    v18 = a1;
    v19 = v7;
    v20 = v15;
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_236BE1000, v13, v14, "Starting AV manager", v15, 2u);
    v21 = v20;
    v7 = v19;
    a1 = v18;
    v10 = v17;
    a2 = v16;
    v6 = v26;
    MEMORY[0x23B800318](v21, -1, -1);
  }

  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v3;
  v22[3] = a1;
  v22[4] = a2;
  aBlock[4] = sub_236BF9F50;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236BF5A50;
  aBlock[3] = &block_descriptor_33;
  v23 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_236C35FBC();
  v28 = MEMORY[0x24BEE4AF8];
  sub_236BE6C98(&qword_2564474F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447500);
  sub_236BF9E90(&qword_256447508, &qword_256447500, MEMORY[0x24BEE12C8]);
  sub_236C36448();
  MEMORY[0x23B7FF820](0, v12, v9, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v27);
  return swift_release();
}

uint64_t sub_236BF7124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD **v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  unsigned int *v13;
  uint64_t *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v26[3];

  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_numActiveAvSessions);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (!v8)
  {
    *(_QWORD *)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_numActiveAvSessions) = v9;
    if (v9 != 1)
      goto LABEL_8;
    if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_cancelHIDTeardown) & 1) == 0)
      *(_BYTE *)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_cancelHIDTeardown) = 1;
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_hidDevice))
    {
      v13 = (unsigned int *)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_iter);
      swift_beginAccess();
      sub_236BF4BCC(*v13);
      if ((sub_236C35A94() & 1) == 0)
        goto LABEL_8;
    }
    else
    {
      sub_236BF4900();
      if ((sub_236C35A94() & 1) == 0)
      {
LABEL_8:
        v14 = (uint64_t *)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeAppName);
        *v14 = a2;
        v14[1] = a3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_retain_n();
        v15 = sub_236C35F44();
        v16 = sub_236C36328();
        if (os_log_type_enabled(v15, v16))
        {
          v17 = (uint8_t *)swift_slowAlloc();
          v18 = swift_slowAlloc();
          v26[0] = v18;
          *(_DWORD *)v17 = 136380675;
          v19 = *v14;
          v20 = v14[1];
          swift_bridgeObjectRetain();
          sub_236C0ED40(v19, v20, v26);
          sub_236C363F4();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_236BE1000, v15, v16, "Starting session. { appName=%{private}s }", v17, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B800318](v18, -1, -1);
          MEMORY[0x23B800318](v17, -1, -1);
        }
        else
        {
          swift_release_n();
        }

        v6 = *v14;
        v4 = v14[1];
        v3 = (_QWORD **)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeSessionInfo);
        swift_beginAccess();
        v5 = *v3;
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v3 = v5;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          goto LABEL_12;
        goto LABEL_18;
      }
    }
    sub_236BF889C();
    goto LABEL_8;
  }
  __break(1u);
LABEL_18:
  v5 = sub_236C1BECC(0, v5[2] + 1, 1, v5);
  *v3 = v5;
LABEL_12:
  v23 = v5[2];
  v22 = v5[3];
  if (v23 >= v22 >> 1)
  {
    v5 = sub_236C1BECC((_QWORD *)(v22 > 1), v23 + 1, 1, v5);
    *v3 = v5;
  }
  v5[2] = v23 + 1;
  v24 = &v5[2 * v23];
  v24[4] = v6;
  v24[5] = v4;
  return swift_endAccess();
}

void sub_236BF740C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_236C35FB0();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v20 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_236C35FEC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)(v3 + 16);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v3;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_236BF9EF4;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236BF5A50;
  aBlock[3] = &block_descriptor_18;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_236C35FBC();
  v21 = MEMORY[0x24BEE4AF8];
  sub_236BE6C98(&qword_2564474F8, v7, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447500);
  sub_236BF9E90(&qword_256447508, &qword_256447500, MEMORY[0x24BEE12C8]);
  sub_236C36448();
  MEMORY[0x23B7FF820](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_release();
  v16 = sub_236C35F44();
  v17 = sub_236C36328();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_236BE1000, v16, v17, "Stopping AV manager", v18, 2u);
    MEMORY[0x23B800318](v18, -1, -1);
  }

}

void sub_236BF768C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD **v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  double v49;
  void *v50;
  double v51;
  double v52;
  void *v53;
  char *v54;
  char *v55;
  _QWORD v56[2];
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  double aBlock;
  uint64_t v65;
  uint64_t (*v66)(uint64_t);
  void *v67;
  uint64_t (*v68)();
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v6 = sub_236C35FB0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_236C35FEC();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_numActiveAvSessions;
  v16 = *(_QWORD *)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_numActiveAvSessions);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
    goto LABEL_24;
  }
  v58 = v14;
  v59 = v12;
  v60 = v11;
  v62 = v7;
  *(_QWORD *)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_numActiveAvSessions) = v18;
  v19 = a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_logger;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v20 = sub_236C35F44();
  v21 = sub_236C36328();
  v22 = os_log_type_enabled(v20, v21);
  v61 = v9;
  v63 = v15;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v57 = v6;
    v24 = v23;
    *(double *)&v25 = COERCE_DOUBLE(swift_slowAlloc());
    aBlock = *(double *)&v25;
    *(_DWORD *)v24 = 136380931;
    v56[1] = v19;
    swift_bridgeObjectRetain();
    v71 = sub_236C0ED40(a2, a3, (uint64_t *)&aBlock);
    sub_236C363F4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2048;
    v26 = *(_QWORD *)(a1 + v15);
    swift_release();
    v71 = v26;
    sub_236C363F4();
    swift_release();
    _os_log_impl(&dword_236BE1000, v20, v21, "Stopping session. { appName=%{private}s, numActiveSessions=%ld }", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B800318](v25, -1, -1);
    v27 = v24;
    v6 = v57;
    MEMORY[0x23B800318](v27, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_release_n();
  }
  v28 = (_QWORD **)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeSessionInfo);
  swift_beginAccess();
  v29 = sub_236BF7E5C(a2, a3, *v28);
  if ((v30 & 1) != 0)
  {
    swift_bridgeObjectRetain_n();
    v43 = sub_236C35F44();
    v44 = sub_236C36334();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      *(double *)&v46 = COERCE_DOUBLE(swift_slowAlloc());
      aBlock = *(double *)&v46;
      *(_DWORD *)v45 = 136380675;
      swift_bridgeObjectRetain();
      v70 = sub_236C0ED40(a2, a3, (uint64_t *)&aBlock);
      sub_236C363F4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_236BE1000, v43, v44, "Couldn't find appName in sessionInfo. { appName=%{private}s }", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v46, -1, -1);
      MEMORY[0x23B800318](v45, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

  }
  else
  {
    v31 = v29;
    swift_beginAccess();
    sub_236BF7F40(v31);
    swift_endAccess();
    swift_bridgeObjectRelease();
    v32 = (*v28)[2];
    if (v32)
    {
      v33 = (uint64_t)&(*v28)[2 * v32];
      v35 = *(_QWORD *)(v33 + 16);
      v34 = *(_QWORD *)(v33 + 24);
      v36 = (_QWORD *)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeAppName);
      *v36 = v35;
      v36[1] = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    swift_retain_n();
    v37 = sub_236C35F44();
    v38 = sub_236C36328();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(double *)&v40 = COERCE_DOUBLE(swift_slowAlloc());
      *(_DWORD *)v39 = 136380675;
      aBlock = *(double *)&v40;
      v41 = *(_QWORD *)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeAppName);
      v42 = *(_QWORD *)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeAppName + 8);
      swift_bridgeObjectRetain();
      v70 = sub_236C0ED40(v41, v42, (uint64_t *)&aBlock);
      sub_236C363F4();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_236BE1000, v37, v38, "Updated activeAppName. { activeAppName=%{private}s }", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v40, -1, -1);
      MEMORY[0x23B800318](v39, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    if (!*(_QWORD *)(a1 + v63))
    {
      *(_BYTE *)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_cancelHIDTeardown) = 0;
      sub_236BF6038();
      if ((sub_236C35A94() & 1) != 0)
      {
        v47 = *(NSObject **)(a1 + 32);
        v48 = swift_allocObject();
        *(_QWORD *)(v48 + 16) = sub_236BF9F00;
        *(_QWORD *)(v48 + 24) = a1;
        v68 = sub_236BF245C;
        v69 = v48;
        v49 = MEMORY[0x24BDAC760];
        aBlock = MEMORY[0x24BDAC760];
        v65 = 1107296256;
        v66 = sub_236BF24A4;
        v67 = &block_descriptor_24;
        v50 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        dispatch_sync(v47, v50);
        _Block_release(v50);
        LOBYTE(v47) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v47 & 1) == 0)
        {
          if ((sub_236C35A94() & 1) != 0
            && (sub_236C36280(), v52 = v51, swift_retain(), sub_236C35EA8(), swift_release(), aBlock < v52))
          {
            v68 = sub_236BF9F18;
            v69 = a1;
            aBlock = v49;
            v65 = 1107296256;
            v66 = (uint64_t (*)(uint64_t))sub_236BF5A50;
            v67 = &block_descriptor_27;
            v53 = _Block_copy(&aBlock);
            swift_retain();
            v54 = v58;
            sub_236C35FBC();
            v70 = MEMORY[0x24BEE4AF8];
            sub_236BE6C98(&qword_2564474F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
            __swift_instantiateConcreteTypeFromMangledName(&qword_256447500);
            sub_236BF9E90(&qword_256447508, &qword_256447500, MEMORY[0x24BEE12C8]);
            v55 = v61;
            sub_236C36448();
            MEMORY[0x23B7FF820](0, v54, v55, v53);
            _Block_release(v53);
            (*(void (**)(char *, uint64_t))(v62 + 8))(v55, v6);
            (*(void (**)(char *, uint64_t))(v59 + 8))(v54, v60);
            swift_release();
            swift_release();
          }
          else
          {
            swift_release();
          }
          return;
        }
LABEL_24:
        __break(1u);
      }
    }
  }
}

uint64_t sub_236BF7E5C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  BOOL v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v13;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_236C36658() & 1) != 0)
    return 0;
  v9 = 0;
  v10 = a3 + 7;
  v11 = 1;
  while (1)
  {
    if (v3 == v11)
      return 0;
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2)
      break;
    v13 = sub_236C36658();
    result = v11++;
    v10 += 2;
    if ((v13 & 1) != 0)
      return result;
  }
  return v9;
}

uint64_t sub_236BF7F40(unint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_236BF9BF8(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[2 * a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_236C36574();
  __break(1u);
  return result;
}

uint64_t sub_236BF801C(uint64_t a1)
{
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  _QWORD *v6;

  v2 = sub_236C35F44();
  v3 = sub_236C36328();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_236BE1000, v2, v3, "Writing last session to file", v4, 2u);
    MEMORY[0x23B800318](v4, -1, -1);
  }

  sub_236BF6990();
  v5 = (_QWORD *)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeSerialNumber);
  *v5 = 0;
  v5[1] = 0;
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeFWVersion);
  *v6 = 0;
  v6[1] = 0;
  swift_bridgeObjectRelease();
  swift_retain();
  sub_236C35EC0();
  return swift_release();
}

uint64_t sub_236BF8134()
{
  uint64_t v0;
  uint64_t v1;

  sub_236C35C68();
  sub_236C35C5C();
  sub_236C35C44();
  swift_release();
  type metadata accessor for BlobbyUploadHelper();
  swift_allocObject();
  sub_236C0708C();
  if (qword_256447030 != -1)
    swift_once();
  v0 = sub_236C35728();
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_256448E58);
  sub_236C05AF8(v1);
  swift_retain();
  sub_236C36280();
  sub_236C362A4();
  sub_236C35EC0();
  swift_release();
  swift_release();
  sub_236C35C5C();
  sub_236C35C50();
  return swift_release();
}

uint64_t sub_236BF8258(void *a1)
{
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  __int16 v5;
  char v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  v5 = 0;
  objc_msgSend(a1, sel_getBytes_length_, &v5, 2);
  v1 = sub_236C35F44();
  v2 = sub_236C36328();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v3 = 16843009;
    swift_beginAccess();
    v6 = HIBYTE(v5);
    sub_236C363F4();
    _os_log_impl(&dword_236BE1000, v1, v2, "setReportInputHandler report contents { errorStatus=%{private}hhu }", v3, 5u);
    MEMORY[0x23B800318](v3, -1, -1);
  }

  swift_beginAccess();
  if (HIBYTE(v5) == 3)
    return 2;
  else
    return HIBYTE(v5) == 2;
}

uint64_t sub_236BF83B4(uint64_t a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_236C364C0();
  sub_236C36280();
  v4 = sub_236C36274();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C08380();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236BF9C0C(*(double *)(a1 + 80));
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FD0);
  sub_236BF9E90((unint64_t *)&qword_2542B2FD8, &qword_2542B2FD0, MEMORY[0x24BEE12B0]);
  sub_236C360B8();
  swift_bridgeObjectRelease();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  swift_bridgeObjectRetain();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  swift_bridgeObjectRetain();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2564474F0);
  v5 = swift_allocObject();
  v6 = MEMORY[0x24BEE13C8];
  *(_OWORD *)(v5 + 16) = xmmword_236C37710;
  v7 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v5 + 56) = v6;
  *(_QWORD *)(v5 + 64) = v7;
  *(double *)(v5 + 32) = a2;
  sub_236C3610C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  return v4;
}

void sub_236BF866C(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;

  v3 = v2;
  sub_236BE7428(0, &qword_2564474E0);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = BMDeviceAdaptiveVolume.init(withNonDrcPayload:andDrcPayload:sessionInfo:serialNumber:drcAVClientTimestamp:routedDrcGain:)(a1, a2);
  v7 = sub_236C35F44();
  v8 = sub_236C36328();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138477827;
    v11 = v6;
    sub_236C363F4();
    *v10 = v6;

    _os_log_impl(&dword_236BE1000, v7, v8, "Writing event to biome. { event=%{private}@ }", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2564474E8);
    swift_arrayDestroy();
    MEMORY[0x23B800318](v10, -1, -1);
    MEMORY[0x23B800318](v9, -1, -1);
  }
  else
  {

  }
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_AVBiomeStreamSource), sel_sendEvent_, v6);

}

void sub_236BF889C()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  sub_236C35B6C();
  sub_236C35B60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2564474D0);
  sub_236C35B54();
  swift_release();
  if (*(_QWORD *)(v16 + 16))
  {
    v1 = *(_OWORD *)(v16 + 208);
    v26 = *(_OWORD *)(v16 + 192);
    v27 = v1;
    v28 = *(_OWORD *)(v16 + 224);
    v29 = *(_QWORD *)(v16 + 240);
    v2 = *(_OWORD *)(v16 + 144);
    v22 = *(_OWORD *)(v16 + 128);
    v23 = v2;
    v3 = *(_OWORD *)(v16 + 176);
    v24 = *(_OWORD *)(v16 + 160);
    v25 = v3;
    v4 = *(_OWORD *)(v16 + 80);
    v18 = *(_OWORD *)(v16 + 64);
    v19 = v4;
    v5 = *(_OWORD *)(v16 + 112);
    v20 = *(_OWORD *)(v16 + 96);
    v21 = v5;
    v6 = *(_OWORD *)(v16 + 48);
    v16 = *(_OWORD *)(v16 + 32);
    v17 = v6;
    sub_236BF99A0((uint64_t)&v16);
    swift_bridgeObjectRelease();
    v8 = *((_QWORD *)&v16 + 1);
    v7 = v17;
    v14 = *((_QWORD *)&v18 + 1);
    v15 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_236C36184();
    sub_236C36184();
    swift_bridgeObjectRelease();
    v9 = (_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeSerialNumber);
    *v9 = v14;
    v9[1] = v15;
    swift_bridgeObjectRelease();
    v10 = (_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_activeFWVersion);
    *v10 = v8;
    v10[1] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_236BF9A54((uint64_t)&v16);
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = sub_236C35F44();
    v12 = sub_236C36328();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_236BE1000, v11, v12, "No supported AirPods found.", v13, 2u);
      MEMORY[0x23B800318](v13, -1, -1);
    }

  }
}

void sub_236BF8A88(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id i;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _QWORD *v36;
  _QWORD *v37;
  _OWORD v38[13];
  uint64_t v39;
  _BYTE v40[216];
  _BYTE v41[216];
  _QWORD v42[28];
  unint64_t v43;

  if (!a1 || (v3 = sub_236BFB11C(a1)) == 0)
  {
    v15 = sub_236C35F44();
    v16 = sub_236C36334();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_236BE1000, v15, v16, "Failed to interpret connected bluetooth devices.", v17, 2u);
      MEMORY[0x23B800318](v17, -1, -1);
    }

    goto LABEL_29;
  }
  v4 = v3;
  v42[0] = MEMORY[0x24BEE4AF8];
  v5 = (_QWORD *)(v3 & 0xFFFFFFFFFFFFFF8);
  if (v3 >> 62)
  {
LABEL_35:
    v6 = sub_236C36544();
    v36 = a2;
    if (v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v36 = a2;
    if (v6)
    {
LABEL_5:
      v37 = v5;
      v7 = 0;
      v43 = v4 & 0xC000000000000001;
      while (1)
      {
        if (v43)
        {
          v8 = (id)MEMORY[0x23B7FF964](v7, v4);
        }
        else
        {
          if (v7 >= v37[2])
            goto LABEL_34;
          v8 = *(id *)(v4 + 32 + 8 * v7);
        }
        v9 = v8;
        if (__OFADD__(v7++, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        if (qword_256447048 != -1)
          swift_once();
        v5 = off_256447050;
        swift_bridgeObjectRetain();
        v11 = objc_msgSend(v9, sel_productId);
        v12 = v5[2];
        if (!v12)
          goto LABEL_6;
        if (*((_DWORD *)v5 + 8) == v11)
        {
LABEL_16:
          swift_bridgeObjectRelease();
          sub_236C364F0();
          a2 = (_QWORD *)v4;
          sub_236C36514();
          sub_236C36520();
          v5 = v42;
          sub_236C364FC();
          if (v7 == v6)
          {
LABEL_30:
            swift_bridgeObjectRelease();
            v19 = v42[0];
            a2 = v36;
            if ((v42[0] & 0x8000000000000000) == 0)
              goto LABEL_37;
            goto LABEL_54;
          }
        }
        else
        {
          if (v12 != 1)
          {
            if (*((_DWORD *)v5 + 9) == v11)
              goto LABEL_16;
            if (v12 != 2)
            {
              v13 = 10;
              do
              {
                v14 = v13 - 7;
                if (__OFADD__(v13 - 8, 1))
                  goto LABEL_33;
                if (*((_DWORD *)v5 + v13) == v11)
                  goto LABEL_16;
                ++v13;
              }
              while (v14 != v12);
            }
          }
LABEL_6:

          swift_bridgeObjectRelease();
          if (v7 == v6)
            goto LABEL_30;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v19 = MEMORY[0x24BEE4AF8];
  if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
    goto LABEL_54;
LABEL_37:
  if ((v19 & 0x4000000000000000) == 0)
  {
    v20 = *(_QWORD *)(v19 + 16);
    swift_retain();
    if (v20)
      goto LABEL_39;
    goto LABEL_55;
  }
LABEL_54:
  swift_retain();
  v20 = sub_236C36544();
  if (!v20)
  {
LABEL_55:
    swift_release_n();
LABEL_29:
    v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_53:
    *a2 = v18;
    return;
  }
LABEL_39:
  if (v20 >= 1)
  {
    v21 = 0;
    v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((v19 & 0xC000000000000001) == 0)
      goto LABEL_42;
LABEL_41:
    for (i = (id)MEMORY[0x23B7FF964](v21, v19); ; i = *(id *)(v19 + 8 * v21 + 32))
    {
      sub_236C02360(i, (uint64_t)v41);
      sub_236BF9DC8((uint64_t)v41, (uint64_t)v40);
      sub_236BF9DC8((uint64_t)v41, (uint64_t)v42);
      if (sub_236BF9E10((uint64_t)v42) != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_236C1C0E4(0, v18[2] + 1, 1, v18);
        v24 = v18[2];
        v23 = v18[3];
        if (v24 >= v23 >> 1)
          v18 = sub_236C1C0E4((_QWORD *)(v23 > 1), v24 + 1, 1, v18);
        sub_236BF9DC8((uint64_t)v40, (uint64_t)v38);
        v18[2] = v24 + 1;
        v25 = &v18[27 * v24];
        v26 = v38[1];
        *((_OWORD *)v25 + 2) = v38[0];
        *((_OWORD *)v25 + 3) = v26;
        v27 = v38[5];
        v28 = v38[3];
        v29 = v38[2];
        *((_OWORD *)v25 + 6) = v38[4];
        *((_OWORD *)v25 + 7) = v27;
        *((_OWORD *)v25 + 4) = v29;
        *((_OWORD *)v25 + 5) = v28;
        v30 = v38[9];
        v31 = v38[7];
        v32 = v38[6];
        *((_OWORD *)v25 + 10) = v38[8];
        *((_OWORD *)v25 + 11) = v30;
        *((_OWORD *)v25 + 8) = v32;
        *((_OWORD *)v25 + 9) = v31;
        v33 = v38[12];
        v34 = v38[11];
        v35 = v38[10];
        v25[30] = v39;
        *((_OWORD *)v25 + 13) = v34;
        *((_OWORD *)v25 + 14) = v33;
        *((_OWORD *)v25 + 12) = v35;
      }
      if (v20 - 1 == v21)
        break;
      ++v21;
      if ((v19 & 0xC000000000000001) != 0)
        goto LABEL_41;
LABEL_42:
      ;
    }
    swift_release_n();
    a2 = v36;
    goto LABEL_53;
  }
  __break(1u);
}

uint64_t sub_236BF8F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_236C35728();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_256448E58);
  __swift_project_value_buffer(v0, (uint64_t)qword_256448E58);
  sub_236C35E24();
  sub_236C356D4();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

unint64_t sub_236BF8FBC()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1548);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_236C37720;
  *(_QWORD *)(inited + 32) = 0x6469766F72504F49;
  *(_QWORD *)(inited + 40) = 0xEF7373616C437265;
  v1 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = 0x7665444449484F49;
  *(_QWORD *)(inited + 56) = 0xEB00000000656369;
  *(_QWORD *)(inited + 72) = v1;
  *(_QWORD *)(inited + 80) = 0xD000000000000010;
  v2 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 88) = 0x8000000236C39C70;
  *(_QWORD *)(inited + 96) = 65333;
  *(_QWORD *)(inited + 120) = v2;
  strcpy((char *)(inited + 128), "PrimaryUsage");
  *(_QWORD *)(inited + 168) = v2;
  *(_BYTE *)(inited + 141) = 0;
  *(_WORD *)(inited + 142) = -5120;
  *(_QWORD *)(inited + 144) = 1;
  result = sub_236C15500(inited);
  qword_256447040 = result;
  return result;
}

id *AdaptiveVolumeManager.deinit()
{
  id *v0;
  char *v1;
  uint64_t v2;

  v1 = (char *)v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal21AdaptiveVolumeManager_logger;
  v2 = sub_236C35F50();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t AdaptiveVolumeManager.__deallocating_deinit()
{
  AdaptiveVolumeManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_236BF91E4()
{
  return type metadata accessor for AdaptiveVolumeManager();
}

uint64_t type metadata accessor for AdaptiveVolumeManager()
{
  uint64_t result;

  result = qword_256447158;
  if (!qword_256447158)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236BF9228()
{
  uint64_t result;
  unint64_t v1;

  result = sub_236C35F50();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for AdaptiveVolumeManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AdaptiveVolumeManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t initializeBufferWithCopyOfBuffer for BudInformation(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_236BF937C(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)a1)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t sub_236BF93C0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 2;
    if (a3 >= 2)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

void type metadata accessor for compression_stream(uint64_t a1)
{
  sub_236BFA07C(a1, &qword_256447478);
}

void type metadata accessor for PLClientID(uint64_t a1)
{
  sub_236BFA07C(a1, &qword_256447480);
}

void type metadata accessor for CFDictionary(uint64_t a1)
{
  sub_236BFA07C(a1, qword_256447488);
}

void type metadata accessor for CFMutableDictionary(uint64_t a1)
{
  sub_236BFA07C(a1, &qword_2564474C0);
}

uint64_t sub_236BF9458(uint64_t a1)
{
  uint64_t v2;

  type metadata accessor for CFDictionary(255);
  *(_QWORD *)(a1 + 16) = v2;
  return 0;
}

void type metadata accessor for AudioServiceType(uint64_t a1)
{
  sub_236BFA07C(a1, &qword_2542B2FF0);
}

void type metadata accessor for AudioEventCategory(uint64_t a1)
{
  sub_236BFA07C(a1, &qword_2542B3010);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AdaptiveVolumeManager.AVClientDrcReportTimestampAppended(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AdaptiveVolumeManager.AVClientDrcReportTimestampAppended(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AdaptiveVolumeManager.AVClientDrcReportTimestampAppended()
{
  return &type metadata for AdaptiveVolumeManager.AVClientDrcReportTimestampAppended;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_236BFA07C(a1, &qword_2542B2FF8);
}

void sub_236BF9528()
{
  off_256447050 = &unk_25082E130;
}

BOOL sub_236BF953C(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_236BF9550(uint64_t a1, uint64_t a2)
{
  return sub_236BF9618(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_236BF955C()
{
  sub_236C360F4();
  sub_236C36154();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236BF959C()
{
  uint64_t v0;

  sub_236C360F4();
  sub_236C366A0();
  sub_236C36154();
  v0 = sub_236C366C4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_236BF960C(uint64_t a1, uint64_t a2)
{
  return sub_236BF9618(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_236BF9618(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_236C360F4();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_236BF9654(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_236C360DC();
  *a2 = 0;
  return result;
}

uint64_t sub_236BF96C8(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_236C360E8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_236BF9744@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_236C360F4();
  v2 = sub_236C360D0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_236BF9784()
{
  sub_236C366A0();
  sub_236C366B8();
  return sub_236C366C4();
}

uint64_t sub_236BF97C8()
{
  return sub_236C366B8();
}

uint64_t sub_236BF97F0()
{
  sub_236C366A0();
  sub_236C366B8();
  return sub_236C366C4();
}

BOOL sub_236BF9830(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2;
}

_DWORD *sub_236BF9844@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_236BF9854(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_236BF9860()
{
  return sub_236BE6C98(&qword_2564474C8, (uint64_t (*)(uint64_t))type metadata accessor for AudioServiceType, (uint64_t)&unk_236C37434);
}

void sub_236BF988C(_WORD *a1@<X8>)
{
  _WORD *v1;

  *a1 = *v1;
}

_WORD *sub_236BF9898@<X0>(_WORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_WORD *)a2 = *result;
  *(_BYTE *)(a2 + 2) = 0;
  return result;
}

uint64_t sub_236BF98A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_236C360F4();
  v2 = v1;
  if (v0 == sub_236C360F4() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_236C36658();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

void sub_236BF9988(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_236BF8A88(a1, a2);
}

uint64_t sub_236BF99A0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_236BF9A54(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_236BF9B08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_236C360D0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_236BF9B4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_236C360F4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_236BF9B74()
{
  sub_236BE6C98(&qword_256447538, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_236C376BC);
  sub_236BE6C98(&qword_256447540, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_236C3759C);
  return sub_236C36580();
}

_QWORD *sub_236BF9BF8(_QWORD *a1)
{
  return sub_236C1BECC(0, a1[2], 0, a1);
}

uint64_t sub_236BF9C0C(double a1)
{
  if (a1 == 0.0)
  {
    sub_236C364C0();
  }
  else
  {
    sub_236C364C0();
    sub_236C3664C();
    sub_236C36184();
    swift_bridgeObjectRelease();
    sub_236C36184();
    sub_236C3664C();
    sub_236C36184();
    swift_bridgeObjectRelease();
    sub_236C36184();
    sub_236C3664C();
    sub_236C36184();
    swift_bridgeObjectRelease();
    sub_236C36184();
    sub_236C3664C();
    sub_236C36184();
    swift_bridgeObjectRelease();
  }
  sub_236C36184();
  sub_236C362E0();
  return 0;
}

uint64_t sub_236BF9DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2564474D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_236BF9E10(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_236BF9E28(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_236BF9E3C(a1, a2);
  return a1;
}

uint64_t sub_236BF9E3C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_236BF9E84()
{
  uint64_t *v0;

  return sub_236BF68EC(v0[2], v0[3], v0[4]);
}

uint64_t sub_236BF9E90(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B80027C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_236BF9ED0()
{
  uint64_t v0;

  sub_236BF631C(v0);
}

void sub_236BF9ED8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  sub_236BF5334(a1, a2, a3, a4, a5, a6, v6);
}

void sub_236BF9EE0()
{
  sub_236BF5B04();
}

void sub_236BF9EE8()
{
  sub_236BF59A8();
}

void sub_236BF9EF4()
{
  uint64_t v0;

  sub_236BF768C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_236BF9F00()
{
  uint64_t v0;

  return sub_236BF801C(v0);
}

uint64_t sub_236BF9F08()
{
  return swift_deallocObject();
}

uint64_t sub_236BF9F18()
{
  return sub_236BF8134();
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_236BF9F50()
{
  uint64_t *v0;

  return sub_236BF7124(v0[2], v0[3], v0[4]);
}

void type metadata accessor for CFError(uint64_t a1)
{
  sub_236BFA07C(a1, &qword_256447510);
}

void type metadata accessor for compression_status(uint64_t a1)
{
  sub_236BFA07C(a1, &qword_256447518);
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_236BFA07C(a1, &qword_2542B3020);
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t sub_236BF9FAC(unsigned __int16 *a1, int a2)
{
  int v2;

  if (a2)
  {
    if ((a2 + 0x1FFFFFF) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 0xFFFFFF;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 0xFFFFFF;
    }
  }
  return 0;
}

uint64_t sub_236BF9FF4(uint64_t result, int a2, int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 0x1FFFFFF) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (!a3)
    v3 = 0;
  if (a2)
  {
    *(_WORD *)result = a2 - 1;
    *(_BYTE *)(result + 2) = (a2 - 1) >> 16;
    if (v3)
    {
      v4 = ((a2 - 1) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else if (v3)
  {
    if (v3 == 2)
      *(_WORD *)(result + 3) = 0;
    else
      *(_BYTE *)(result + 3) = 0;
  }
  return result;
}

void type metadata accessor for AVClientDrcPayload(uint64_t a1)
{
  sub_236BFA07C(a1, &qword_256447520);
}

void sub_236BFA07C(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_236BFA0C0()
{
  return sub_236BE6C98(&qword_256447528, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_236C37560);
}

uint64_t sub_236BFA0EC()
{
  return sub_236BE6C98(&qword_256447530, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_236C37534);
}

uint64_t sub_236BFA118()
{
  return sub_236BE6C98(&qword_2542B3018, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_236C375D0);
}

uint64_t sub_236BFA194(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_236C36658();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_236C36658() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t AdaptiveVolumeWorker.__allocating_init(with:)(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  sub_236C35EFC();
  *(_BYTE *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isStarted) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isAVSession) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_hasMarkedAVSessionStart) = 0;
  v3 = v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_workerConfig;
  v4 = *MEMORY[0x24BE09EA0];
  v5 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v3, v4, v5);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_neededPreviousFields) = 0;
  sub_236BF28D8(a1, v2 + 16);
  return v2;
}

uint64_t AdaptiveVolumeWorker.init(with:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_236C35EFC();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isStarted) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isAVSession) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_hasMarkedAVSessionStart) = 0;
  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_workerConfig;
  v4 = *MEMORY[0x24BE09EA0];
  v5 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v3, v4, v5);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_neededPreviousFields) = 0;
  sub_236BF28D8(a1, v1 + 16);
  return v1;
}

void sub_236BFA3C4()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isStarted);
  swift_beginAccess();
  if (*v1 == 1)
  {
    v2 = (_BYTE *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_hasMarkedAVSessionStart);
    swift_beginAccess();
    if (*v2 == 1)
    {
      if (qword_256447028 != -1)
        swift_once();
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
      v3 = sub_236C35B48();
      sub_236BF740C(v3, v4);
      swift_bridgeObjectRelease();
      v5 = (_BYTE *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isAVSession);
      swift_beginAccess();
      *v5 = 0;
      *v2 = 0;
    }
    *v1 = 0;
  }
  else
  {
    v6 = sub_236C35F44();
    v7 = sub_236C36328();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_236BE1000, v6, v7, "No active AdaptiveVolumeSession", v8, 2u);
      MEMORY[0x23B800318](v8, -1, -1);
    }

  }
}

void sub_236BFA564()
{
  qword_2542B41D0 = (uint64_t)&unk_25082E168;
}

void sub_236BFA578()
{
  qword_2542B41E8 = (uint64_t)&unk_25082E190;
}

uint64_t sub_236BFA58C()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isStarted);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_236BFA5D0(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isStarted);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_236BFA618())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_236BFA65C()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isAVSession);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_236BFA6A0(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isAVSession);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_236BFA6E8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_236BFA730()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_hasMarkedAVSessionStart);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_236BFA774(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_hasMarkedAVSessionStart);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_236BFA7BC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_236BFA800@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_236BFA868(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_236C35CB0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_workerConfig;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_236BFA92C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_236BFA990(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_236BFA9FC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_236BFAA40(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_neededPreviousFields);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236BFAAA8()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_236BFAAF0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_neededPreviousFields);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_236BFAB40())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t AdaptiveVolumeWorker.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_logger;
  v2 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_workerConfig;
  v4 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  return v0;
}

void sub_236BFAC08()
{
  sub_236BFA3C4();
}

uint64_t sub_236BFAC28()
{
  _QWORD *v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isStarted);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_236BFAC70()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_236C35D10();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_236BEE010(0x757074754F435244, 0xED00006E69614774), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(v3 + 56);
    v8 = sub_236C3592C();
    v9 = *(_QWORD *)(v8 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v2, v7 + *(_QWORD *)(v9 + 72) * v6, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  }
  else
  {
    v8 = sub_236C3592C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  }
  swift_bridgeObjectRelease();
  sub_236C3592C();
  v10 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v2, 1, v8) == 1)
  {
    sub_236BE9274((uint64_t)v2);
    return 0;
  }
  else
  {
    v11 = sub_236C358FC();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v2, v8);
  }
  return v11;
}

unint64_t sub_236BFADE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542B2028;
  if (!qword_2542B2028)
  {
    v1 = type metadata accessor for AdaptiveVolumeWorker();
    result = MEMORY[0x23B80027C](&protocol conformance descriptor for AdaptiveVolumeWorker, v1);
    atomic_store(result, (unint64_t *)&qword_2542B2028);
  }
  return result;
}

uint64_t sub_236BFAE30@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isStarted, a2);
}

uint64_t sub_236BFAE3C(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isStarted);
}

uint64_t sub_236BFAE48@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isAVSession, a2);
}

uint64_t sub_236BFAE54(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_isAVSession);
}

uint64_t sub_236BFAE60@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_hasMarkedAVSessionStart, a2);
}

uint64_t keypath_getTm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t result;

  v4 = (_BYTE *)(*a1 + *a2);
  result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_236BFAEB8(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_hasMarkedAVSessionStart);
}

uint64_t keypath_setTm(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char v5;
  _BYTE *v6;
  uint64_t result;

  v5 = *a1;
  v6 = (_BYTE *)(*a2 + *a5);
  result = swift_beginAccess();
  *v6 = v5;
  return result;
}

uint64_t sub_236BFAF14@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20AdaptiveVolumeWorker_neededPreviousFields);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_236BFAF6C()
{
  return type metadata accessor for AdaptiveVolumeWorker();
}

uint64_t sub_236BFAF74()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_236C35F50();
  if (v1 <= 0x3F)
  {
    result = sub_236C35CB0();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AdaptiveVolumeWorker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.start()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.process(message:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.stop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.isStarted.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.isStarted.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.isStarted.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.isAVSession.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.isAVSession.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.isAVSession.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.hasMarkedAVSessionStart.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.hasMarkedAVSessionStart.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.hasMarkedAVSessionStart.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.workerConfig.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.workerConfig.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.workerConfig.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.neededPreviousFields.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.neededPreviousFields.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of AdaptiveVolumeWorker.neededPreviousFields.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t sub_236BFB11C(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  _BYTE v5[32];
  uint64_t v6;

  v6 = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(a1 + 16);
  sub_236C36508();
  if (!v2)
    return v6;
  for (i = a1 + 32; ; i += 32)
  {
    sub_236BED454(i, (uint64_t)v5);
    sub_236BE7428(0, &qword_256447730);
    if (!swift_dynamicCast())
      break;
    sub_236C364F0();
    sub_236C36514();
    sub_236C36520();
    sub_236C364FC();
    if (!--v2)
      return v6;
  }
  swift_release();

  return 0;
}

uint64_t sub_236BFB234()
{
  uint64_t result;

  type metadata accessor for AirPodManager();
  swift_allocObject();
  result = AirPodManager.init()();
  qword_256448E70 = result;
  return result;
}

uint64_t AirPodManager.__allocating_init()()
{
  swift_allocObject();
  return AirPodManager.init()();
}

uint64_t AirPodManager.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  _QWORD v22[2];

  v1 = v0;
  v2 = sub_236C36364();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v2);
  v4 = sub_236C3637C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_236C35FEC();
  MEMORY[0x24BDAC7A8](v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447550);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v0 + 16) = v9;
  sub_236BE7428(0, (unint64_t *)&qword_2542B3008);
  sub_236C35FD4();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5758], v4);
  v22[0] = MEMORY[0x24BEE4AF8];
  sub_236BE6C98(&qword_2542B3000, v3, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FE0);
  sub_236BFE458((unint64_t *)&qword_2542B2FE8, &qword_2542B2FE0);
  sub_236C36448();
  *(_QWORD *)(v0 + 24) = sub_236C363A0();
  v10 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal13AirPodManager_logger;
  sub_236C35F38();
  v11 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal13AirPodManager_sampledAirPodInformation) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal13AirPodManager_lastSampledAirPodInformation) = v11;
  v12 = OBJC_IVAR____TtC22AudioAnalyticsExternal13AirPodManager_periodicSample;
  sub_236C362B0();
  sub_236C35ADC();
  swift_allocObject();
  *(_QWORD *)(v0 + v12) = sub_236C35AC4();
  v22[0] = sub_236C35B90();
  v22[1] = v13;
  sub_236C36184();
  v14 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v15 = (void *)sub_236C360D0();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v14, sel_initWithSuiteName_, v15);

  if (v16)
  {
    *(_QWORD *)(v1 + 32) = v16;
  }
  else
  {
    v17 = sub_236C35F44();
    v18 = sub_236C36334();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_236BE1000, v17, v18, "Unable to initialize AudioRegistrationWorker userDefaults.", v19, 2u);
      MEMORY[0x23B800318](v19, -1, -1);
    }

    swift_release();
    v20 = sub_236C35F50();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v10, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    type metadata accessor for AirPodManager();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t type metadata accessor for AirPodManager()
{
  uint64_t result;

  result = qword_2564475A0;
  if (!qword_2564475A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236BFB6A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  _QWORD v14[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_236C35FB0();
  v14[0] = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_236C35FEC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_236C35F44();
  v10 = sub_236C36328();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_236BE1000, v9, v10, "Marking start of AirPod session.", v11, 2u);
    MEMORY[0x23B800318](v11, -1, -1);
  }

  aBlock[4] = sub_236BFE498;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236BF5A50;
  aBlock[3] = &block_descriptor_12_0;
  v12 = _Block_copy(aBlock);
  swift_retain();
  sub_236C35FBC();
  v14[1] = MEMORY[0x24BEE4AF8];
  sub_236BE6C98(&qword_2564474F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447500);
  sub_236BFE458(&qword_256447508, &qword_256447500);
  sub_236C36448();
  MEMORY[0x23B7FF820](0, v8, v4, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v14[0] + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_236BFB8E4()
{
  uint64_t result;
  int v1;

  swift_retain();
  sub_236C35ECC();
  result = swift_release();
  if (!v1)
  {
    sub_236BFBDB8();
    swift_retain();
    sub_236C35AD0();
    return swift_release();
  }
  return result;
}

uint64_t sub_236BFB980(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  char v4;

  v1 = a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal13AirPodManager_sampledAirPodInformation;
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    v3 = swift_bridgeObjectRetain();
    v4 = sub_236BFC674(v3);
    result = swift_bridgeObjectRelease();
    if ((v4 & 1) != 0)
    {
      *(_QWORD *)v1 = MEMORY[0x24BEE4B08];
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_236BFBA08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_236C35FB0();
  v17[0] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_236C35FEC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_236C35F44();
  v12 = sub_236C36328();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_236BE1000, v11, v12, "Marking end of AirPod session.", v13, 2u);
    MEMORY[0x23B800318](v13, -1, -1);
  }

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v2;
  *(_QWORD *)(v14 + 24) = a1;
  aBlock[4] = sub_236BFE450;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236BF5A50;
  aBlock[3] = &block_descriptor_9_0;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_236C35FBC();
  v17[1] = MEMORY[0x24BEE4AF8];
  sub_236BE6C98(&qword_2564474F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447500);
  sub_236BFE458(&qword_256447508, &qword_256447500);
  sub_236C36448();
  MEMORY[0x23B7FF820](0, v10, v6, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v17[0] + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void sub_236BFBC68(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;

  swift_retain();
  sub_236C35ED8();
  swift_release();
  v4 = *(void **)(a1 + 32);
  v5 = (void *)sub_236C360D0();
  objc_msgSend(v4, sel_doubleForKey_, v5);
  v7 = v6;

  sub_236C36280();
  if (v7 <= v8)
  {
    if ((sub_236BFCF70(a2) & 1) != 0)
    {
      sub_236BFCC58();
      sub_236C362A4();
    }
    else
    {
      sub_236C362BC();
    }
    v10 = v9;
    sub_236C36280();
    v12 = v10 + v11;
    v13 = (void *)sub_236C360D0();
    objc_msgSend(v4, sel_setDouble_forKey_, v13, v12);

  }
}

uint64_t sub_236BFBD94@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal13AirPodManager_lastSampledAirPodInformation);
  return swift_bridgeObjectRetain();
}

uint64_t sub_236BFBDB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14[4];

  v1 = v0;
  sub_236C35B6C();
  sub_236C35B60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2564474D0);
  sub_236C35B54();
  swift_release();
  v2 = v14[0];
  swift_bridgeObjectRetain_n();
  v3 = sub_236C35F44();
  v4 = sub_236C36328();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v14[0] = v6;
    *(_DWORD *)v5 = 136380675;
    v7 = swift_bridgeObjectRetain();
    v8 = MEMORY[0x23B7FF6AC](v7, &type metadata for AirPodInformation);
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_236C0ED40(v8, v10, v14);
    sub_236C363F4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_236BE1000, v3, v4, "sampleConnectedDevices() { sampledAirPods=%{private}s }", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B800318](v6, -1, -1);
    MEMORY[0x23B800318](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v11 = sub_236BFE168(v2);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal13AirPodManager_sampledAirPodInformation);
  swift_beginAccess();
  sub_236BFC46C(v11);
  swift_endAccess();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal13AirPodManager_lastSampledAirPodInformation) = *v12;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_236BFBFF4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id i;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _QWORD *v36;
  _QWORD *v37;
  _OWORD v38[13];
  uint64_t v39;
  _BYTE v40[216];
  _BYTE v41[216];
  _QWORD v42[28];
  unint64_t v43;

  if (!a1 || (v3 = sub_236BFB11C(a1)) == 0)
  {
    v15 = sub_236C35F44();
    v16 = sub_236C36334();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_236BE1000, v15, v16, "Failed to interpret connected bluetooth devices.", v17, 2u);
      MEMORY[0x23B800318](v17, -1, -1);
    }

    goto LABEL_29;
  }
  v4 = v3;
  v42[0] = MEMORY[0x24BEE4AF8];
  v5 = (_QWORD *)(v3 & 0xFFFFFFFFFFFFFF8);
  if (v3 >> 62)
  {
LABEL_35:
    v6 = sub_236C36544();
    v36 = a2;
    if (v6)
      goto LABEL_5;
  }
  else
  {
    v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v36 = a2;
    if (v6)
    {
LABEL_5:
      v37 = v5;
      v7 = 0;
      v43 = v4 & 0xC000000000000001;
      while (1)
      {
        if (v43)
        {
          v8 = (id)MEMORY[0x23B7FF964](v7, v4);
        }
        else
        {
          if (v7 >= v37[2])
            goto LABEL_34;
          v8 = *(id *)(v4 + 32 + 8 * v7);
        }
        v9 = v8;
        if (__OFADD__(v7++, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        if (qword_256447060 != -1)
          swift_once();
        v5 = off_256447548;
        swift_bridgeObjectRetain();
        v11 = objc_msgSend(v9, sel_productId);
        v12 = v5[2];
        if (!v12)
          goto LABEL_6;
        if (*((_DWORD *)v5 + 8) == v11)
        {
LABEL_16:
          swift_bridgeObjectRelease();
          sub_236C364F0();
          a2 = (_QWORD *)v4;
          sub_236C36514();
          sub_236C36520();
          v5 = v42;
          sub_236C364FC();
          if (v7 == v6)
          {
LABEL_30:
            swift_bridgeObjectRelease();
            v19 = v42[0];
            a2 = v36;
            if ((v42[0] & 0x8000000000000000) == 0)
              goto LABEL_37;
            goto LABEL_54;
          }
        }
        else
        {
          if (v12 != 1)
          {
            if (*((_DWORD *)v5 + 9) == v11)
              goto LABEL_16;
            if (v12 != 2)
            {
              v13 = 10;
              do
              {
                v14 = v13 - 7;
                if (__OFADD__(v13 - 8, 1))
                  goto LABEL_33;
                if (*((_DWORD *)v5 + v13) == v11)
                  goto LABEL_16;
                ++v13;
              }
              while (v14 != v12);
            }
          }
LABEL_6:

          swift_bridgeObjectRelease();
          if (v7 == v6)
            goto LABEL_30;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v19 = MEMORY[0x24BEE4AF8];
  if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
    goto LABEL_54;
LABEL_37:
  if ((v19 & 0x4000000000000000) == 0)
  {
    v20 = *(_QWORD *)(v19 + 16);
    swift_retain();
    if (v20)
      goto LABEL_39;
    goto LABEL_55;
  }
LABEL_54:
  swift_retain();
  v20 = sub_236C36544();
  if (!v20)
  {
LABEL_55:
    swift_release_n();
LABEL_29:
    v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_53:
    *a2 = v18;
    return;
  }
LABEL_39:
  if (v20 >= 1)
  {
    v21 = 0;
    v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((v19 & 0xC000000000000001) == 0)
      goto LABEL_42;
LABEL_41:
    for (i = (id)MEMORY[0x23B7FF964](v21, v19); ; i = *(id *)(v19 + 8 * v21 + 32))
    {
      sub_236C02360(i, (uint64_t)v41);
      sub_236BF9DC8((uint64_t)v41, (uint64_t)v40);
      sub_236BF9DC8((uint64_t)v41, (uint64_t)v42);
      if (sub_236BF9E10((uint64_t)v42) != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_236C1C0E4(0, v18[2] + 1, 1, v18);
        v24 = v18[2];
        v23 = v18[3];
        if (v24 >= v23 >> 1)
          v18 = sub_236C1C0E4((_QWORD *)(v23 > 1), v24 + 1, 1, v18);
        sub_236BF9DC8((uint64_t)v40, (uint64_t)v38);
        v18[2] = v24 + 1;
        v25 = &v18[27 * v24];
        v26 = v38[1];
        *((_OWORD *)v25 + 2) = v38[0];
        *((_OWORD *)v25 + 3) = v26;
        v27 = v38[5];
        v28 = v38[3];
        v29 = v38[2];
        *((_OWORD *)v25 + 6) = v38[4];
        *((_OWORD *)v25 + 7) = v27;
        *((_OWORD *)v25 + 4) = v29;
        *((_OWORD *)v25 + 5) = v28;
        v30 = v38[9];
        v31 = v38[7];
        v32 = v38[6];
        *((_OWORD *)v25 + 10) = v38[8];
        *((_OWORD *)v25 + 11) = v30;
        *((_OWORD *)v25 + 8) = v32;
        *((_OWORD *)v25 + 9) = v31;
        v33 = v38[12];
        v34 = v38[11];
        v35 = v38[10];
        v25[30] = v39;
        *((_OWORD *)v25 + 13) = v34;
        *((_OWORD *)v25 + 14) = v33;
        *((_OWORD *)v25 + 12) = v35;
      }
      if (v20 - 1 == v21)
        break;
      ++v21;
      if ((v19 & 0xC000000000000001) != 0)
        goto LABEL_41;
LABEL_42:
      ;
    }
    swift_release_n();
    a2 = v36;
    goto LABEL_53;
  }
  __break(1u);
}

uint64_t sub_236BFC46C(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[13];
  uint64_t v25;
  _OWORD v26[13];
  uint64_t v27;
  _OWORD v28[13];
  uint64_t v29;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v21 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v7)
      return swift_release();
    v22 = *(_QWORD *)(v3 + 8 * v21);
    ++v2;
    if (!v22)
    {
      v2 = v21 + 1;
      if (v21 + 1 >= v7)
        return swift_release();
      v22 = *(_QWORD *)(v3 + 8 * v2);
      if (!v22)
      {
        v2 = v21 + 2;
        if (v21 + 2 >= v7)
          return swift_release();
        v22 = *(_QWORD *)(v3 + 8 * v2);
        if (!v22)
        {
          v2 = v21 + 3;
          if (v21 + 3 >= v7)
            return swift_release();
          v22 = *(_QWORD *)(v3 + 8 * v2);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v22 - 1) & v22;
    v9 = __clz(__rbit64(v22)) + (v2 << 6);
LABEL_5:
    v10 = *(_QWORD *)(v1 + 48) + 216 * v9;
    v11 = *(_OWORD *)(v10 + 16);
    v28[0] = *(_OWORD *)v10;
    v28[1] = v11;
    v12 = *(_OWORD *)(v10 + 80);
    v14 = *(_OWORD *)(v10 + 32);
    v13 = *(_OWORD *)(v10 + 48);
    v28[4] = *(_OWORD *)(v10 + 64);
    v28[5] = v12;
    v28[2] = v14;
    v28[3] = v13;
    v15 = *(_OWORD *)(v10 + 144);
    v17 = *(_OWORD *)(v10 + 96);
    v16 = *(_OWORD *)(v10 + 112);
    v28[8] = *(_OWORD *)(v10 + 128);
    v28[9] = v15;
    v28[6] = v17;
    v28[7] = v16;
    v19 = *(_OWORD *)(v10 + 176);
    v18 = *(_OWORD *)(v10 + 192);
    v20 = *(_OWORD *)(v10 + 160);
    v29 = *(_QWORD *)(v10 + 208);
    v28[11] = v19;
    v28[12] = v18;
    v28[10] = v20;
    sub_236BF99A0((uint64_t)v28);
    sub_236C16C08((uint64_t)v24, v28);
    v26[10] = v24[10];
    v26[11] = v24[11];
    v26[12] = v24[12];
    v27 = v25;
    v26[6] = v24[6];
    v26[7] = v24[7];
    v26[8] = v24[8];
    v26[9] = v24[9];
    v26[2] = v24[2];
    v26[3] = v24[3];
    v26[4] = v24[4];
    v26[5] = v24[5];
    v26[0] = v24[0];
    v26[1] = v24[1];
    result = sub_236BF9A54((uint64_t)v26);
  }
  v23 = v21 + 4;
  if (v23 >= v7)
    return swift_release();
  v22 = *(_QWORD *)(v3 + 8 * v23);
  if (v22)
  {
    v2 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v22 = *(_QWORD *)(v3 + 8 * v2);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_236BFC674(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v26;

  v2 = v1;
  v4 = sub_236BFCD34();
  swift_bridgeObjectRetain();
  v5 = sub_236BFE168(v4);
  swift_bridgeObjectRelease();
  v6 = sub_236BFCA3C(v5, a1);
  v7 = sub_236C09AF8(v6);
  swift_bridgeObjectRelease();
  swift_retain_n();
  v8 = sub_236C35F44();
  v9 = sub_236C36328();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v26 = v11;
    *(_DWORD *)v10 = 136380675;
    v12 = swift_retain();
    v13 = MEMORY[0x23B7FF6AC](v12, &type metadata for AirPodInformation);
    v15 = v14;
    swift_release();
    sub_236C0ED40(v13, v15, &v26);
    sub_236C363F4();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_236BE1000, v8, v9, "storeConnectedAirPodsInDefaults() { airPodInformationList=%{private}s }", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B800318](v11, -1, -1);
    MEMORY[0x23B800318](v10, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  sub_236C355F0();
  swift_allocObject();
  sub_236C355E4();
  v26 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2564474D0);
  sub_236BFE290(&qword_256447718, (uint64_t (*)(void))sub_236BFE2F8, MEMORY[0x24BEE12A0]);
  v16 = sub_236C355D8();
  v18 = v17;
  swift_release();
  v19 = *(void **)(v2 + 32);
  v20 = (void *)sub_236C3577C();
  v21 = (void *)sub_236C360D0();
  objc_msgSend(v19, sel_setObject_forKey_, v20, v21);

  v22 = sub_236C35F44();
  v23 = sub_236C36328();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v24 = 0;
    _os_log_impl(&dword_236BE1000, v22, v23, "Succesfully stored AirPodInformation in defaults", v24, 2u);
    MEMORY[0x23B800318](v24, -1, -1);
  }
  sub_236BF9E3C(v16, v18);
  swift_release();

  return 1;
}

uint64_t sub_236BFCA3C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  _OWORD v25[13];
  uint64_t v26;
  _OWORD v27[13];
  uint64_t v28;
  uint64_t v29;
  _OWORD v30[13];
  uint64_t v31;

  v2 = result;
  v3 = 0;
  v29 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v22 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v8)
      goto LABEL_23;
    v23 = *(_QWORD *)(v4 + 8 * v22);
    ++v3;
    if (!v23)
    {
      v3 = v22 + 1;
      if (v22 + 1 >= v8)
        goto LABEL_23;
      v23 = *(_QWORD *)(v4 + 8 * v3);
      if (!v23)
      {
        v3 = v22 + 2;
        if (v22 + 2 >= v8)
          goto LABEL_23;
        v23 = *(_QWORD *)(v4 + 8 * v3);
        if (!v23)
        {
          v3 = v22 + 3;
          if (v22 + 3 >= v8)
            goto LABEL_23;
          v23 = *(_QWORD *)(v4 + 8 * v3);
          if (!v23)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v23 - 1) & v23;
    v10 = __clz(__rbit64(v23)) + (v3 << 6);
LABEL_5:
    v11 = *(_QWORD *)(v2 + 48) + 216 * v10;
    v12 = *(_OWORD *)(v11 + 16);
    v30[0] = *(_OWORD *)v11;
    v30[1] = v12;
    v13 = *(_OWORD *)(v11 + 80);
    v15 = *(_OWORD *)(v11 + 32);
    v14 = *(_OWORD *)(v11 + 48);
    v30[4] = *(_OWORD *)(v11 + 64);
    v30[5] = v13;
    v30[2] = v15;
    v30[3] = v14;
    v16 = *(_OWORD *)(v11 + 144);
    v18 = *(_OWORD *)(v11 + 96);
    v17 = *(_OWORD *)(v11 + 112);
    v30[8] = *(_OWORD *)(v11 + 128);
    v30[9] = v16;
    v30[6] = v18;
    v30[7] = v17;
    v20 = *(_OWORD *)(v11 + 176);
    v19 = *(_OWORD *)(v11 + 192);
    v21 = *(_OWORD *)(v11 + 160);
    v31 = *(_QWORD *)(v11 + 208);
    v30[11] = v20;
    v30[12] = v19;
    v30[10] = v21;
    sub_236BF99A0((uint64_t)v30);
    sub_236C16C08((uint64_t)v25, v30);
    v27[10] = v25[10];
    v27[11] = v25[11];
    v27[12] = v25[12];
    v28 = v26;
    v27[6] = v25[6];
    v27[7] = v25[7];
    v27[8] = v25[8];
    v27[9] = v25[9];
    v27[2] = v25[2];
    v27[3] = v25[3];
    v27[4] = v25[4];
    v27[5] = v25[5];
    v27[0] = v25[0];
    v27[1] = v25[1];
    result = sub_236BF9A54((uint64_t)v27);
  }
  v24 = v22 + 4;
  if (v24 >= v8)
  {
LABEL_23:
    swift_release();
    return v29;
  }
  v23 = *(_QWORD *)(v4 + 8 * v24);
  if (v23)
  {
    v3 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v23 = *(_QWORD *)(v4 + 8 * v3);
    ++v24;
    if (v23)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_236BFCC58()
{
  uint64_t v0;
  void *v1;
  void *v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *oslog;

  v1 = *(void **)(v0 + 32);
  v2 = (void *)sub_236C360D0();
  objc_msgSend(v1, sel_removeObjectForKey_, v2);

  oslog = sub_236C35F44();
  v3 = sub_236C36328();
  if (os_log_type_enabled(oslog, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_236BE1000, oslog, v3, "Succesfully removed defaults", v4, 2u);
    MEMORY[0x23B800318](v4, -1, -1);
  }

}

uint64_t sub_236BFCD34()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  NSObject *v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v11;

  v1 = *(void **)(v0 + 32);
  v2 = (void *)sub_236C360D0();
  v3 = objc_msgSend(v1, sel_dataForKey_, v2);

  if (v3)
  {
    v4 = sub_236C35788();
    v6 = v5;

    sub_236C355CC();
    swift_allocObject();
    sub_236C355C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2564474D0);
    sub_236BFE290(&qword_256447708, (uint64_t (*)(void))sub_236BFE124, MEMORY[0x24BEE12D0]);
    sub_236C355B4();
    swift_release();
    sub_236BF9E3C(v4, v6);
    return v11;
  }
  else
  {
    v7 = sub_236C35F44();
    v8 = sub_236C36334();
    if (os_log_type_enabled(v7, (os_log_type_t)v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_236BE1000, v7, (os_log_type_t)v8, "No airPodInformationList found in defaults.", v9, 2u);
      MEMORY[0x23B800318](v9, -1, -1);
    }

    return MEMORY[0x24BEE4AF8];
  }
}

uint64_t sub_236BFCF70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  NSObject *v33;
  _QWORD *v34;
  void *v35;
  void *v36;
  NSObject *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint8_t *v46;
  NSObject *v47;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t aBlock[6];

  v2 = v1;
  v4 = sub_236C35FA4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint8_t **)((char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_236C36004();
  v56 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v49 - v12;
  v14 = sub_236BFCD34();
  if (*(_QWORD *)(v14 + 16))
  {
    v15 = sub_236BFDAF0(a1);
    if (v15)
    {
      v52 = v15;
      v53 = v5;
      v54 = v4;
      v55 = v13;
      v16 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal13AirPodManager_logger;
      swift_bridgeObjectRetain_n();
      v51 = v16;
      v17 = sub_236C35F44();
      v18 = sub_236C36328();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        v50 = swift_slowAlloc();
        aBlock[0] = v50;
        *(_DWORD *)v19 = 136380675;
        v49 = v19 + 4;
        v20 = swift_bridgeObjectRetain();
        v21 = MEMORY[0x23B7FF6AC](v20, &type metadata for AirPodInformation);
        v23 = v22;
        swift_bridgeObjectRelease();
        v58 = sub_236C0ED40(v21, v23, aBlock);
        sub_236C363F4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_236BE1000, v17, v18, "publishConnectedAirPods() { %{private}s }", v19, 0xCu);
        v24 = v50;
        swift_arrayDestroy();
        MEMORY[0x23B800318](v24, -1, -1);
        MEMORY[0x23B800318](v19, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      v32 = swift_allocObject();
      *(_BYTE *)(v32 + 16) = 1;
      v33 = dispatch_group_create();
      dispatch_group_enter(v33);
      v34 = (_QWORD *)swift_allocObject();
      v34[2] = v33;
      v34[3] = v2;
      v34[4] = v32;
      v34[5] = v14;
      v35 = v52;
      v34[6] = v52;
      aBlock[4] = (uint64_t)sub_236BFE114;
      aBlock[5] = (uint64_t)v34;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_236BFDA88;
      aBlock[3] = (uint64_t)&block_descriptor_0;
      v36 = _Block_copy(aBlock);
      v37 = v33;
      swift_retain();
      swift_retain();
      v38 = v35;
      swift_release();
      objc_msgSend(v38, sel_startConfigurationWithCompletionHandler_, v36);
      _Block_release(v36);
      sub_236C35FF8();
      *v7 = 10;
      v40 = v53;
      v39 = v54;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v53 + 104))(v7, *MEMORY[0x24BEE5420], v54);
      v41 = v55;
      MEMORY[0x23B7FF4A8](v11, v7);
      (*(void (**)(_QWORD *, uint64_t))(v40 + 8))(v7, v39);
      v42 = *(void (**)(char *, uint64_t))(v56 + 8);
      v42(v11, v57);
      if ((sub_236C36358() & 1) == 0)
      {
        v42(v41, v57);

        swift_beginAccess();
        v28 = *(unsigned __int8 *)(v32 + 16);
        swift_release();
        return v28;
      }
      v43 = sub_236C35F44();
      v44 = sub_236C36334();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v45 = 0;
        _os_log_impl(&dword_236BE1000, v43, v44, "AirPodWorker RTC upload timed out.", v45, 2u);
        v46 = v45;
        v41 = v55;
        MEMORY[0x23B800318](v46, -1, -1);
        v47 = v37;
      }
      else
      {
        v47 = v43;
        v43 = v37;
      }

      v42(v41, v57);
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      v29 = sub_236C35F44();
      v30 = sub_236C36334();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v31 = 134217984;
        aBlock[0] = a1;
        sub_236C363F4();
        _os_log_impl(&dword_236BE1000, v29, v30, "Unable to create RTCReportingSession. { sessionID=%lld }", v31, 0xCu);
        MEMORY[0x23B800318](v31, -1, -1);
      }

    }
    return 0;
  }
  swift_bridgeObjectRelease();
  v25 = sub_236C35F44();
  v26 = sub_236C36328();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_236BE1000, v25, v26, "AirPodInformationList is empty. Returning early.", v27, 2u);
    MEMORY[0x23B800318](v27, -1, -1);
  }

  return 1;
}

void sub_236BFD528(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  unint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  unsigned int v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  NSObject *v39;
  _BYTE *v40;
  uint64_t v41;
  id v44;
  _OWORD v45[13];
  uint64_t v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v40 = (_BYTE *)(a4 + 16);
  if (a1)
  {
    sub_236C35E60();
    v7 = *(_QWORD *)(a5 + 16);
    if (v7)
    {
      v39 = a2;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      v8 = 32;
      do
      {
        v10 = *(_OWORD *)(a5 + v8 + 176);
        v45[10] = *(_OWORD *)(a5 + v8 + 160);
        v45[11] = v10;
        v45[12] = *(_OWORD *)(a5 + v8 + 192);
        v46 = *(_QWORD *)(a5 + v8 + 208);
        v11 = *(_OWORD *)(a5 + v8 + 112);
        v45[6] = *(_OWORD *)(a5 + v8 + 96);
        v45[7] = v11;
        v12 = *(_OWORD *)(a5 + v8 + 144);
        v45[8] = *(_OWORD *)(a5 + v8 + 128);
        v45[9] = v12;
        v13 = *(_OWORD *)(a5 + v8 + 48);
        v45[2] = *(_OWORD *)(a5 + v8 + 32);
        v45[3] = v13;
        v14 = *(_OWORD *)(a5 + v8 + 80);
        v45[4] = *(_OWORD *)(a5 + v8 + 64);
        v45[5] = v14;
        v15 = *(_OWORD *)(a5 + v8 + 16);
        v45[0] = *(_OWORD *)(a5 + v8);
        v45[1] = v15;
        sub_236BF99A0((uint64_t)v45);
        v16 = sub_236BFE4B8();
        sub_236BF9A54((uint64_t)v45);
        swift_bridgeObjectRetain_n();
        v17 = sub_236C35F44();
        v18 = sub_236C36328();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = (uint8_t *)swift_slowAlloc();
          v20 = (void *)swift_slowAlloc();
          v44 = v20;
          *(_DWORD *)v19 = 136380675;
          swift_bridgeObjectRetain();
          v21 = sub_236C36058();
          v41 = v7;
          v23 = v22;
          swift_bridgeObjectRelease();
          sub_236C0ED40(v21, v23, (uint64_t *)&v44);
          sub_236C363F4();
          swift_bridgeObjectRelease_n();
          v7 = v41;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_236BE1000, v17, v18, "Sending RTC message. { airPodInformation=%{private}s }", v19, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B800318](v20, -1, -1);
          MEMORY[0x23B800318](v19, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        sub_236BECC30(v16);
        swift_bridgeObjectRelease();
        v24 = (void *)sub_236C36040();
        swift_bridgeObjectRelease();
        v44 = 0;
        v25 = objc_msgSend(a6, sel_sendMessageWithCategory_type_payload_error_, 17, 11, v24, &v44);

        if (v25)
        {
          v9 = v44;
        }
        else
        {
          v26 = v44;
          v27 = (void *)sub_236C35680();

          swift_willThrow();
          v28 = v27;
          v29 = v27;
          v30 = sub_236C35F44();
          v31 = sub_236C36334();
          if (os_log_type_enabled(v30, v31))
          {
            v32 = (uint8_t *)swift_slowAlloc();
            v33 = (void *)swift_slowAlloc();
            v44 = v33;
            *(_DWORD *)v32 = 136380675;
            swift_getErrorValue();
            v34 = sub_236C36688();
            sub_236C0ED40(v34, v35, (uint64_t *)&v44);
            sub_236C363F4();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_236BE1000, v30, v31, "Error sending RTC message. { error=%{private}s }", v32, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B800318](v33, -1, -1);
            MEMORY[0x23B800318](v32, -1, -1);

          }
          else
          {

          }
          *v40 = 0;
        }
        v8 += 216;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease();
      a2 = v39;
    }
  }
  else
  {
    v36 = sub_236C35F44();
    v37 = sub_236C36334();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_236BE1000, v36, v37, "No RTC backends found. This iteration will not get sent to the server.", v38, 2u);
      MEMORY[0x23B800318](v38, -1, -1);
    }

    swift_beginAccess();
    *v40 = 0;
  }
  dispatch_group_leave(a2);
}

uint64_t sub_236BFDA88(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
    v3 = sub_236C36214();
  else
    v3 = 0;
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

id sub_236BFDAF0(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t inited;
  id result;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;

  v2 = objc_msgSend((id)objc_opt_self(), sel_newHierarchyTokenFromParentToken_, 0);
  if (!v2)
  {
    v27 = sub_236C35F44();
    v28 = sub_236C36334();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_236BE1000, v27, v28, "Failed to unwrap RTC reporting token.", v29, 2u);
      MEMORY[0x23B800318](v29, -1, -1);
    }

    return 0;
  }
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1548);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_236C37850;
  result = (id)*MEMORY[0x24BE7CAD0];
  if (!*MEMORY[0x24BE7CAD0])
  {
    __break(1u);
    goto LABEL_15;
  }
  *(_QWORD *)(inited + 32) = sub_236C360F4();
  *(_QWORD *)(inited + 40) = v6;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInt_, 52);
  v8 = sub_236BE7428(0, (unint64_t *)&qword_2542B3028);
  *(_QWORD *)(inited + 72) = v8;
  *(_QWORD *)(inited + 48) = v7;
  result = (id)*MEMORY[0x24BE7CAE0];
  if (!*MEMORY[0x24BE7CAE0])
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  *(_QWORD *)(inited + 80) = sub_236C360F4();
  *(_QWORD *)(inited + 88) = v9;
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, 2.1);
  *(_QWORD *)(inited + 120) = v8;
  *(_QWORD *)(inited + 96) = v10;
  result = (id)*MEMORY[0x24BE7CB10];
  if (!*MEMORY[0x24BE7CB10])
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  *(_QWORD *)(inited + 128) = sub_236C360F4();
  *(_QWORD *)(inited + 136) = v11;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithLongLong_, a1);
  *(_QWORD *)(inited + 168) = v8;
  *(_QWORD *)(inited + 144) = v12;
  result = (id)*MEMORY[0x24BE7CAB0];
  if (!*MEMORY[0x24BE7CAB0])
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  *(_QWORD *)(inited + 176) = sub_236C360F4();
  *(_QWORD *)(inited + 184) = v13;
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, 0);
  *(_QWORD *)(inited + 216) = v8;
  *(_QWORD *)(inited + 192) = v14;
  result = (id)*MEMORY[0x24BE7CAF0];
  if (!*MEMORY[0x24BE7CAF0])
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  *(_QWORD *)(inited + 224) = sub_236C360F4();
  *(_QWORD *)(inited + 232) = v15;
  *(_QWORD *)(inited + 264) = sub_236BE7428(0, &qword_256447700);
  *(_QWORD *)(inited + 240) = v3;
  v16 = v3;
  v17 = sub_236C15500(inited);
  v18 = swift_initStackObject();
  *(_OWORD *)(v18 + 16) = xmmword_236C37860;
  result = (id)*MEMORY[0x24BE7CB28];
  if (!*MEMORY[0x24BE7CB28])
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  *(_QWORD *)(v18 + 32) = sub_236C360F4();
  *(_QWORD *)(v18 + 40) = v19;
  v20 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v18 + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v18 + 48) = 0xD000000000000011;
  *(_QWORD *)(v18 + 56) = 0x8000000236C39E30;
  result = (id)*MEMORY[0x24BE7CB38];
  if (*MEMORY[0x24BE7CB38])
  {
    *(_QWORD *)(v18 + 80) = sub_236C360F4();
    *(_QWORD *)(v18 + 88) = v21;
    *(_QWORD *)(v18 + 120) = v20;
    *(_QWORD *)(v18 + 96) = 0xD000000000000014;
    *(_QWORD *)(v18 + 104) = 0x8000000236C39E50;
    v22 = sub_236C15500(v18);
    sub_236BECC30(v17);
    swift_bridgeObjectRelease();
    sub_236BECC30(v22);
    swift_bridgeObjectRelease();
    v23 = objc_allocWithZone(MEMORY[0x24BE7CA80]);
    v24 = (void *)sub_236C36040();
    swift_bridgeObjectRelease();
    v25 = (void *)sub_236C36040();
    swift_bridgeObjectRelease();
    v26 = objc_msgSend(v23, sel_initWithSessionInfo_userInfo_frameworksToCheck_, v24, v25, 0);

    return v26;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t AirPodManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal13AirPodManager_logger;
  v2 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t AirPodManager.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal13AirPodManager_logger;
  v2 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_236BFDFF4()
{
  off_256447548 = &unk_25082E270;
}

uint64_t sub_236BFE008()
{
  return type metadata accessor for AirPodManager();
}

uint64_t sub_236BFE010()
{
  uint64_t result;
  unint64_t v1;

  result = sub_236C35F50();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for AirPodManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AirPodManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_236BFE0C0()
{
  return swift_deallocObject();
}

uint64_t sub_236BFE0D0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_236BFE114(uint64_t a1)
{
  uint64_t v1;

  sub_236BFD528(a1, *(NSObject **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48));
}

unint64_t sub_236BFE124()
{
  unint64_t result;

  result = qword_256447710;
  if (!qword_256447710)
  {
    result = MEMORY[0x23B80027C](&unk_236C379AC, &type metadata for AirPodInformation);
    atomic_store(result, (unint64_t *)&qword_256447710);
  }
  return result;
}

uint64_t sub_236BFE168(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[13];
  uint64_t v12;
  _OWORD v13[13];
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[13];
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  sub_236BFE33C();
  result = sub_236C362F8();
  v15 = result;
  if (v2)
  {
    v4 = a1 + 32;
    do
    {
      v5 = *(_OWORD *)(v4 + 176);
      v16[10] = *(_OWORD *)(v4 + 160);
      v16[11] = v5;
      v16[12] = *(_OWORD *)(v4 + 192);
      v17 = *(_QWORD *)(v4 + 208);
      v6 = *(_OWORD *)(v4 + 112);
      v16[6] = *(_OWORD *)(v4 + 96);
      v16[7] = v6;
      v7 = *(_OWORD *)(v4 + 144);
      v16[8] = *(_OWORD *)(v4 + 128);
      v16[9] = v7;
      v8 = *(_OWORD *)(v4 + 48);
      v16[2] = *(_OWORD *)(v4 + 32);
      v16[3] = v8;
      v9 = *(_OWORD *)(v4 + 80);
      v16[4] = *(_OWORD *)(v4 + 64);
      v16[5] = v9;
      v10 = *(_OWORD *)(v4 + 16);
      v16[0] = *(_OWORD *)v4;
      v16[1] = v10;
      sub_236BF99A0((uint64_t)v16);
      sub_236C16C08((uint64_t)v11, v16);
      v13[10] = v11[10];
      v13[11] = v11[11];
      v13[12] = v11[12];
      v14 = v12;
      v13[6] = v11[6];
      v13[7] = v11[7];
      v13[8] = v11[8];
      v13[9] = v11[9];
      v13[2] = v11[2];
      v13[3] = v11[3];
      v13[4] = v11[4];
      v13[5] = v11[5];
      v13[0] = v11[0];
      v13[1] = v11[1];
      sub_236BF9A54((uint64_t)v13);
      v4 += 216;
      --v2;
    }
    while (v2);
    return v15;
  }
  return result;
}

uint64_t sub_236BFE290(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2564474D0);
    v8 = a2();
    result = MEMORY[0x23B80027C](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_236BFE2F8()
{
  unint64_t result;

  result = qword_256447720;
  if (!qword_256447720)
  {
    result = MEMORY[0x23B80027C](&unk_236C37984, &type metadata for AirPodInformation);
    atomic_store(result, (unint64_t *)&qword_256447720);
  }
  return result;
}

unint64_t sub_236BFE33C()
{
  unint64_t result;

  result = qword_256447728;
  if (!qword_256447728)
  {
    result = MEMORY[0x23B80027C](&unk_236C379D4, &type metadata for AirPodInformation);
    atomic_store(result, (unint64_t *)&qword_256447728);
  }
  return result;
}

void sub_236BFE380(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_236BFBFF4(a1, a2);
}

uint64_t sub_236BFE398(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_236C362F8();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_236BEDE64(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_236BFE42C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_236BFE450()
{
  uint64_t v0;

  sub_236BFBC68(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_236BFE458(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B80027C](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236BFE498()
{
  return sub_236BFB8E4();
}

uint64_t sub_236BFE4A0()
{
  uint64_t v0;

  return sub_236BFB980(v0);
}

unint64_t sub_236BFE4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  v1 = v0;
  v37 = sub_236C35854();
  v2 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_236C3580C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_236C3586C();
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_236C357DC();
  v32 = *(_QWORD *)(v11 - 8);
  v33 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_236C35A94();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1548);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_236C378C0;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x8000000236C39EB0;
  v42 = *(_OWORD *)(v1 + 136);
  v15 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(inited + 48) = v42;
  *(_QWORD *)(inited + 72) = v15;
  *(_QWORD *)(inited + 80) = 0x7372655665736143;
  *(_QWORD *)(inited + 88) = 0xEB000000006E6F69;
  v41 = *(_OWORD *)(v1 + 152);
  *(_OWORD *)(inited + 96) = v41;
  *(_QWORD *)(inited + 120) = v15;
  *(_QWORD *)(inited + 128) = 0x676E69737546;
  *(_QWORD *)(inited + 136) = 0xE600000000000000;
  v40 = *(_OWORD *)(v1 + 200);
  *(_OWORD *)(inited + 144) = *(_OWORD *)(v1 + 200);
  *(_QWORD *)(inited + 168) = v15;
  *(_QWORD *)(inited + 176) = 0x6E6E6F437473616CLL;
  *(_QWORD *)(inited + 184) = 0xEF57576465746365;
  sub_236C03E3C((uint64_t)&v42);
  sub_236C03E3C((uint64_t)&v41);
  sub_236C03E3C((uint64_t)&v40);
  sub_236C357AC();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDCEF70], v5);
  sub_236C35818();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_236C35824();
  sub_236C35830();
  v16 = v37;
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCF1E8], v37);
  v17 = sub_236C35860();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v16);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v36);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v33);
  v18 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 192) = v17;
  *(_QWORD *)(inited + 216) = v18;
  *(_QWORD *)(inited + 224) = 0xD000000000000012;
  *(_QWORD *)(inited + 232) = 0x8000000236C39ED0;
  v19 = *(_OWORD *)(v1 + 8);
  v39 = v19;
  v20 = (uint64_t *)(v1 + 24);
  v21 = *(_QWORD *)(v1 + 56);
  v22 = v35;
  if ((v35 & 1) != 0)
    v20 = (uint64_t *)(v1 + 40);
  v23 = *v20;
  *(_OWORD *)(inited + 240) = v19;
  v24 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 264) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 272) = 0xD000000000000019;
  v25 = MEMORY[0x24BEE1E88];
  *(_QWORD *)(inited + 280) = 0x8000000236C39EF0;
  *(_QWORD *)(inited + 288) = v21;
  *(_QWORD *)(inited + 312) = v25;
  strcpy((char *)(inited + 320), "LeftAudioUUID");
  *(_WORD *)(inited + 334) = -4864;
  if ((v22 & 1) != 0)
    v26 = (uint64_t *)(v1 + 96);
  else
    v26 = (uint64_t *)(v1 + 80);
  v27 = swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 336) = v23;
  *(_QWORD *)(inited + 344) = v27;
  *(_QWORD *)(inited + 360) = v24;
  *(_QWORD *)(inited + 368) = 0xD000000000000013;
  *(_QWORD *)(inited + 376) = 0x8000000236C39F10;
  v38 = *(_OWORD *)(v1 + 64);
  v28 = *(_QWORD *)(v1 + 112);
  v29 = *v26;
  *(_OWORD *)(inited + 384) = v38;
  *(_QWORD *)(inited + 408) = v24;
  *(_QWORD *)(inited + 416) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 424) = 0x8000000236C39F30;
  *(_QWORD *)(inited + 432) = v28;
  *(_QWORD *)(inited + 456) = v25;
  strcpy((char *)(inited + 464), "RightAudioUUID");
  *(_BYTE *)(inited + 479) = -18;
  v30 = swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 504) = v24;
  *(_QWORD *)(inited + 480) = v29;
  *(_QWORD *)(inited + 488) = v30;
  sub_236C03E3C((uint64_t)&v39);
  sub_236C03E3C((uint64_t)&v38);
  return sub_236C15500(inited);
}

uint64_t AACPVersionInfo.init(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  id v48;
  _QWORD v50[3];
  _BYTE v51[24];
  uint64_t v52;
  __int128 v53;
  __int128 v54;

  v4 = (int *)type metadata accessor for AACPVersionInfo();
  v5 = *((_QWORD *)v4 - 1);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (_QWORD *)((char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v50[1] = 0x7372655650434141;
  v50[2] = 0xEF6F666E496E6F69;
  sub_236C36490();
  if (*(_QWORD *)(a1 + 16) && (v8 = sub_236C00650((uint64_t)v51), (v9 & 1) != 0))
  {
    sub_236BED454(*(_QWORD *)(a1 + 56) + 32 * v8, (uint64_t)&v53);
  }
  else
  {
    v53 = 0u;
    v54 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_236C00680((uint64_t)v51);
  if (*((_QWORD *)&v54 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256447740);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_236C36244();
      if (v52)
      {
        v10 = swift_dynamicCast();
        v12 = *((_QWORD *)&v53 + 1);
        v11 = v53;
        if (!v10)
        {
          v11 = 0;
          v12 = 0;
        }
      }
      else
      {
        sub_236BE6C14((uint64_t)v51, &qword_256447738);
        v11 = 0;
        v12 = 0;
      }
      *v7 = v11;
      v7[1] = v12;
      sub_236C36244();
      if (v52)
      {
        v14 = swift_dynamicCast();
        v16 = *((_QWORD *)&v53 + 1);
        v15 = v53;
        if (!v14)
        {
          v15 = 0;
          v16 = 0;
        }
      }
      else
      {
        sub_236BE6C14((uint64_t)v51, &qword_256447738);
        v15 = 0;
        v16 = 0;
      }
      v7[2] = v15;
      v7[3] = v16;
      sub_236C36244();
      if (v52)
      {
        v17 = swift_dynamicCast();
        v19 = *((_QWORD *)&v53 + 1);
        v18 = v53;
        if (!v17)
        {
          v18 = 0;
          v19 = 0;
        }
      }
      else
      {
        sub_236BE6C14((uint64_t)v51, &qword_256447738);
        v18 = 0;
        v19 = 0;
      }
      v7[4] = v18;
      v7[5] = v19;
      sub_236C36244();
      if (v52)
      {
        v20 = swift_dynamicCast();
        v22 = *((_QWORD *)&v53 + 1);
        v21 = v53;
        if (!v20)
        {
          v21 = 0;
          v22 = 0;
        }
      }
      else
      {
        sub_236BE6C14((uint64_t)v51, &qword_256447738);
        v21 = 0;
        v22 = 0;
      }
      v7[6] = v21;
      v7[7] = v22;
      sub_236C36244();
      if (v52)
      {
        v23 = swift_dynamicCast();
        v25 = *((_QWORD *)&v53 + 1);
        v24 = v53;
        if (!v23)
        {
          v24 = 0;
          v25 = 0;
        }
      }
      else
      {
        sub_236BE6C14((uint64_t)v51, &qword_256447738);
        v24 = 0;
        v25 = 0;
      }
      v7[8] = v24;
      v7[9] = v25;
      sub_236C36244();
      if (v52)
      {
        v26 = swift_dynamicCast();
        v28 = *((_QWORD *)&v53 + 1);
        v27 = v53;
        if (!v26)
        {
          v27 = 0;
          v28 = 0;
        }
      }
      else
      {
        sub_236BE6C14((uint64_t)v51, &qword_256447738);
        v27 = 0;
        v28 = 0;
      }
      v7[10] = v27;
      v7[11] = v28;
      sub_236C36244();
      if (v52)
      {
        v29 = swift_dynamicCast();
        v31 = *((_QWORD *)&v53 + 1);
        v30 = v53;
        if (!v29)
        {
          v30 = 0;
          v31 = 0;
        }
      }
      else
      {
        sub_236BE6C14((uint64_t)v51, &qword_256447738);
        v30 = 0;
        v31 = 0;
      }
      v7[12] = v30;
      v7[13] = v31;
      sub_236C36244();
      if (v52)
      {
        v32 = swift_dynamicCast();
        v34 = *((_QWORD *)&v53 + 1);
        v33 = v53;
        if (!v32)
        {
          v33 = 0;
          v34 = 0;
        }
      }
      else
      {
        sub_236BE6C14((uint64_t)v51, &qword_256447738);
        v33 = 0;
        v34 = 0;
      }
      v7[14] = v33;
      v7[15] = v34;
      sub_236C36244();
      if (v52)
      {
        v35 = swift_dynamicCast();
        v37 = *((_QWORD *)&v53 + 1);
        v36 = v53;
        if (!v35)
        {
          v36 = 0;
          v37 = 0;
        }
      }
      else
      {
        sub_236BE6C14((uint64_t)v51, &qword_256447738);
        v36 = 0;
        v37 = 0;
      }
      v7[16] = v36;
      v7[17] = v37;
      sub_236C36244();
      if (v52)
      {
        v38 = swift_dynamicCast();
        v40 = *((_QWORD *)&v53 + 1);
        v39 = v53;
        if (!v38)
        {
          v39 = 0;
          v40 = 0;
        }
      }
      else
      {
        sub_236BE6C14((uint64_t)v51, &qword_256447738);
        v39 = 0;
        v40 = 0;
      }
      v7[18] = v39;
      v7[19] = v40;
      sub_236C36244();
      if (v52)
      {
        v41 = swift_dynamicCast();
        v43 = *((_QWORD *)&v53 + 1);
        v42 = v53;
        if (!v41)
        {
          v42 = 0;
          v43 = 0;
        }
      }
      else
      {
        sub_236BE6C14((uint64_t)v51, &qword_256447738);
        v42 = 0;
        v43 = 0;
      }
      v7[20] = v42;
      v7[21] = v43;
      v44 = (char *)v7 + v4[15];
      sub_236C36244();
      if (v52)
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          sub_236C357E8();
          swift_bridgeObjectRelease();
          goto LABEL_58;
        }
      }
      else
      {
        sub_236BE6C14((uint64_t)v51, &qword_256447738);
      }
      v45 = sub_236C35800();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 1, 1, v45);
LABEL_58:
      v46 = (char *)v7 + v4[16];
      sub_236C36244();
      if (v52)
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          sub_236C357E8();
          swift_bridgeObjectRelease();
LABEL_63:
          *(_QWORD *)((char *)v7 + v4[17]) = sub_236BFF0D8();
          v48 = sub_236BFF0D8();
          swift_bridgeObjectRelease();
          *(_QWORD *)((char *)v7 + v4[18]) = v48;
          sub_236C006B4((uint64_t)v7, a2);
          v13 = 0;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v5 + 56))(a2, v13, 1, v4);
        }
      }
      else
      {
        sub_236BE6C14((uint64_t)v51, &qword_256447738);
      }
      v47 = sub_236C35800();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
      goto LABEL_63;
    }
  }
  else
  {
    sub_236BE6C14((uint64_t)&v53, &qword_256447738);
  }
  v13 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v5 + 56))(a2, v13, 1, v4);
}

uint64_t type metadata accessor for AACPVersionInfo()
{
  uint64_t result;

  result = qword_2564477B0;
  if (!qword_2564477B0)
    return swift_getSingletonMetadata();
  return result;
}

id sub_236BFF0D8()
{
  id v0;
  void *v1;
  id v2;
  _BYTE v4[24];
  uint64_t v5;

  sub_236C36244();
  if (!v5)
  {
    sub_236BE6C14((uint64_t)v4, &qword_256447738);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  v1 = (void *)sub_236C360D0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_numberFromString_, v1);

  return v2;
}

AudioAnalyticsExternal::CaseInfo_optional __swiftcall CaseInfo.init(with:)(Swift::OpaquePointer with)
{
  _QWORD *v1;
  _QWORD *v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  AudioAnalyticsExternal::CaseInfo_optional result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v3 = v1;
  sub_236C36490();
  if (*((_QWORD *)with._rawValue + 2) && (v4 = sub_236C00650((uint64_t)&v13), (v5 & 1) != 0))
  {
    sub_236BED454(*((_QWORD *)with._rawValue + 7) + 32 * v4, (uint64_t)&v15);
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_236C00680((uint64_t)&v13);
  if (!*((_QWORD *)&v16 + 1))
  {
    v6 = sub_236BE6C14((uint64_t)&v15, &qword_256447738);
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447748);
  v6 = swift_dynamicCast();
  if ((v6 & 1) == 0)
  {
LABEL_11:
    v10 = 0;
    v11 = 1;
    goto LABEL_17;
  }
  if (MEMORY[0x6F666E4965736153] && (v8 = sub_236BEE010(0x6F666E4965736143, 0xEF6E6F6973726556), (v9 & 1) != 0))
  {
    sub_236BED454(MEMORY[0x6F666E496573617B] + 32 * v8, (uint64_t)&v13);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v14 + 1))
  {
    v6 = swift_dynamicCast();
    v11 = *((_QWORD *)&v15 + 1);
    v10 = v15;
    if (!(_DWORD)v6)
    {
      v10 = 0;
      v11 = 0;
    }
  }
  else
  {
    v6 = sub_236BE6C14((uint64_t)&v13, &qword_256447738);
    v10 = 0;
    v11 = 0;
  }
LABEL_17:
  *v3 = v10;
  v3[1] = v11;
  result.value.version.value._object = v7;
  result.value.version.value._countAndFlagsBits = v6;
  return result;
}

unint64_t sub_236BFF36C()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  uint64_t v7;
  __int128 v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1548);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_236C378D0;
  *(_QWORD *)(inited + 32) = 0xD000000000000012;
  *(_QWORD *)(inited + 40) = 0x8000000236C39F50;
  v2 = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 48) = *(_BYTE *)v0;
  *(_QWORD *)(inited + 72) = v2;
  *(_QWORD *)(inited + 80) = 0x7374726F70707573;
  *(_QWORD *)(inited + 88) = 0xEA00000000005348;
  *(_BYTE *)(inited + 96) = *(_BYTE *)(v0 + 184);
  *(_QWORD *)(inited + 120) = v2;
  *(_QWORD *)(inited + 128) = 0x69615064756F6C63;
  *(_QWORD *)(inited + 136) = 0xEB00000000646572;
  *(_BYTE *)(inited + 144) = *(_BYTE *)(v0 + 185);
  *(_QWORD *)(inited + 168) = v2;
  *(_QWORD *)(inited + 176) = 0x696150636967616DLL;
  *(_QWORD *)(inited + 184) = 0xEB00000000646572;
  *(_BYTE *)(inited + 192) = *(_BYTE *)(v0 + 186);
  *(_QWORD *)(inited + 216) = v2;
  *(_QWORD *)(inited + 224) = 0xD000000000000011;
  *(_QWORD *)(inited + 232) = 0x8000000236C39F70;
  *(_BYTE *)(inited + 240) = *(_BYTE *)(v0 + 187);
  *(_QWORD *)(inited + 264) = v2;
  strcpy((char *)(inited + 272), "listeningMode");
  *(_WORD *)(inited + 286) = -4864;
  v3 = MEMORY[0x24BEE44F0];
  *(_DWORD *)(inited + 288) = *(_DWORD *)(v0 + 188);
  *(_QWORD *)(inited + 312) = v3;
  strcpy((char *)(inited + 320), "smartRouteMode");
  *(_BYTE *)(inited + 335) = -18;
  v4 = MEMORY[0x24BEE4260];
  *(_BYTE *)(inited + 336) = *(_BYTE *)(v0 + 192);
  *(_QWORD *)(inited + 360) = v4;
  *(_QWORD *)(inited + 368) = 0xD000000000000011;
  *(_QWORD *)(inited + 376) = 0x8000000236C39F90;
  *(_BYTE *)(inited + 384) = *(_BYTE *)(v0 + 193);
  *(_QWORD *)(inited + 408) = v2;
  *(_QWORD *)(inited + 416) = 0xD000000000000010;
  *(_QWORD *)(inited + 424) = 0x8000000236C39FB0;
  *(_BYTE *)(inited + 432) = *(_BYTE *)(v0 + 194);
  *(_QWORD *)(inited + 456) = v4;
  *(_QWORD *)(inited + 464) = 0xD000000000000013;
  *(_QWORD *)(inited + 472) = 0x8000000236C39FD0;
  *(_BYTE *)(inited + 480) = *(_BYTE *)(v0 + 195);
  *(_QWORD *)(inited + 504) = v2;
  *(_QWORD *)(inited + 512) = 0xD000000000000012;
  *(_QWORD *)(inited + 520) = 0x8000000236C39FF0;
  v5 = *(_BYTE *)(v0 + 196);
  *(_QWORD *)(inited + 552) = v2;
  *(_BYTE *)(inited + 528) = v5;
  *(_QWORD *)(inited + 560) = 0x49746375646F7270;
  *(_QWORD *)(inited + 568) = 0xE900000000000044;
  v6 = *(_DWORD *)(v0 + 128);
  *(_QWORD *)(inited + 600) = v3;
  *(_DWORD *)(inited + 576) = v6;
  *(_QWORD *)(inited + 608) = 0x6D754E6C65646F6DLL;
  *(_QWORD *)(inited + 616) = 0xEB00000000726562;
  v12 = *(_OWORD *)(v0 + 136);
  v7 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 648) = MEMORY[0x24BEE0D00];
  *(_OWORD *)(inited + 624) = *(_OWORD *)(v0 + 136);
  *(_QWORD *)(inited + 656) = 0x6572617764726168;
  *(_QWORD *)(inited + 664) = 0xEF6E6F6973726556;
  v8 = *(_OWORD *)(v0 + 168);
  *(_QWORD *)(inited + 696) = v7;
  *(_OWORD *)(inited + 672) = *(_OWORD *)(v0 + 168);
  *(_QWORD *)(inited + 704) = 0x657261776D726966;
  *(_QWORD *)(inited + 712) = 0xEF6E6F6973726556;
  v10 = *(_OWORD *)(v0 + 8);
  v11 = v8;
  *(_QWORD *)(inited + 744) = v7;
  *(_OWORD *)(inited + 720) = *(_OWORD *)(v0 + 8);
  sub_236C03E3C((uint64_t)&v12);
  sub_236C03E3C((uint64_t)&v11);
  sub_236C03E3C((uint64_t)&v10);
  return sub_236C15500(inited);
}

uint64_t sub_236BFF660(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_236BFF69C + 4 * byte_236C378E0[a1]))(0xD000000000000012, 0x8000000236C39F50);
}

uint64_t sub_236BFF69C()
{
  uint64_t v0;

  return v0 + 1;
}

uint64_t sub_236BFF850()
{
  return 0x676E69737566;
}

uint64_t sub_236BFF86C()
{
  unsigned __int8 *v0;

  return sub_236BFF660(*v0);
}

uint64_t sub_236BFF874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_236C029F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236BFF898()
{
  return 0;
}

void sub_236BFF8A4(_BYTE *a1@<X8>)
{
  *a1 = 19;
}

uint64_t sub_236BFF8B0()
{
  sub_236C03D70();
  return sub_236C366F4();
}

uint64_t sub_236BFF8D8()
{
  sub_236C03D70();
  return sub_236C36700();
}

uint64_t sub_236BFF900(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v12;
  char v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447848);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236C03D70();
  sub_236C366E8();
  LOBYTE(v14) = 0;
  sub_236C365F8();
  if (!v2)
  {
    v9 = *(_OWORD *)(v3 + 24);
    v14 = *(_OWORD *)(v3 + 8);
    v15 = v9;
    v16 = *(_OWORD *)(v3 + 40);
    v17 = *(_QWORD *)(v3 + 56);
    v13 = 1;
    sub_236C03DF8();
    sub_236C3661C();
    v10 = *(_OWORD *)(v3 + 80);
    v14 = *(_OWORD *)(v3 + 64);
    v15 = v10;
    v16 = *(_OWORD *)(v3 + 96);
    v17 = *(_QWORD *)(v3 + 112);
    v13 = 2;
    sub_236C3661C();
    LOBYTE(v14) = 3;
    sub_236C36604();
    LOBYTE(v14) = 4;
    sub_236C36634();
    LOBYTE(v14) = 5;
    sub_236C365EC();
    LOBYTE(v14) = 6;
    sub_236C365EC();
    LOBYTE(v14) = 7;
    sub_236C365EC();
    LOBYTE(v14) = 8;
    sub_236C365F8();
    LOBYTE(v14) = 9;
    sub_236C365F8();
    LOBYTE(v14) = 10;
    sub_236C365F8();
    LOBYTE(v14) = 11;
    sub_236C365F8();
    LOBYTE(v14) = 12;
    sub_236C36634();
    LOBYTE(v14) = 13;
    sub_236C36628();
    LOBYTE(v14) = 14;
    sub_236C365F8();
    LOBYTE(v14) = 15;
    sub_236C36628();
    LOBYTE(v14) = 16;
    sub_236C365F8();
    LOBYTE(v14) = 17;
    sub_236C365F8();
    LOBYTE(v14) = 18;
    sub_236C365EC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_236BFFD10@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[13];
  uint64_t v12;

  sub_236C03210(a1, (uint64_t)v11);
  if (!v2)
  {
    v5 = v11[11];
    *(_OWORD *)(a2 + 160) = v11[10];
    *(_OWORD *)(a2 + 176) = v5;
    *(_OWORD *)(a2 + 192) = v11[12];
    *(_QWORD *)(a2 + 208) = v12;
    v6 = v11[7];
    *(_OWORD *)(a2 + 96) = v11[6];
    *(_OWORD *)(a2 + 112) = v6;
    v7 = v11[9];
    *(_OWORD *)(a2 + 128) = v11[8];
    *(_OWORD *)(a2 + 144) = v7;
    v8 = v11[3];
    *(_OWORD *)(a2 + 32) = v11[2];
    *(_OWORD *)(a2 + 48) = v8;
    v9 = v11[5];
    *(_OWORD *)(a2 + 64) = v11[4];
    *(_OWORD *)(a2 + 80) = v9;
    result = *(double *)v11;
    v10 = v11[1];
    *(_OWORD *)a2 = v11[0];
    *(_OWORD *)(a2 + 16) = v10;
  }
  return result;
}

uint64_t sub_236BFFD98(_QWORD *a1)
{
  return sub_236BFF900(a1);
}

uint64_t sub_236BFFDAC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[10];
  v3 = a1[11];
  v4 = a2[10];
  v5 = a2[11];
  v6 = a1[3] == a2[3] && a1[4] == a2[4];
  if (v6 || (v7 = sub_236C36658(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_236C36658();
  }
  return result;
}

uint64_t sub_236BFFE3C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2564478A0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236C048E8();
  sub_236C366E8();
  v8[15] = 0;
  sub_236C365EC();
  if (!v1)
  {
    v8[14] = 1;
    sub_236C365EC();
    v8[13] = 2;
    sub_236C365EC();
    v8[12] = 3;
    sub_236C36610();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_236BFFFA0()
{
  sub_236C366A0();
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  return sub_236C366C4();
}

uint64_t sub_236C00024()
{
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_236C36154();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236C00094()
{
  sub_236C366A0();
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  return sub_236C366C4();
}

BOOL sub_236C00114(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_236C00128()
{
  sub_236C366A0();
  sub_236C366AC();
  return sub_236C366C4();
}

uint64_t sub_236C0016C()
{
  return sub_236C366AC();
}

uint64_t sub_236C00194()
{
  sub_236C366A0();
  sub_236C366AC();
  return sub_236C366C4();
}

uint64_t sub_236C001D4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_236C00210 + 4 * byte_236C378F3[*v0]))(0x657261776D726966, 0xEF6E6F6973726556);
}

uint64_t sub_236C00210()
{
  return 1145656661;
}

uint64_t sub_236C00220()
{
  return 0x754E6C6169726573;
}

unint64_t sub_236C00240()
{
  return 0xD000000000000010;
}

uint64_t sub_236C0025C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_236C04464(a1, a2);
  *a3 = result;
  return result;
}

void sub_236C00280(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_236C0028C()
{
  sub_236C048E8();
  return sub_236C366F4();
}

uint64_t sub_236C002B4()
{
  sub_236C048E8();
  return sub_236C36700();
}

double sub_236C002DC@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_236C04644(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_QWORD *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_236C00328(_QWORD *a1)
{
  return sub_236BFFE3C(a1);
}

BOOL sub_236C0033C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _OWORD v7[3];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  return sub_236C0212C(v5, v7);
}

uint64_t sub_236C00394()
{
  sub_236C366A0();
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  sub_236C366AC();
  return sub_236C366C4();
}

uint64_t sub_236C0045C()
{
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  return sub_236C366AC();
}

uint64_t sub_236C0050C()
{
  sub_236C366A0();
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  sub_236C366AC();
  return sub_236C366C4();
}

unint64_t sub_236C005D0(uint64_t a1)
{
  uint64_t v2;

  sub_236C360F4();
  sub_236C366A0();
  sub_236C36154();
  v2 = sub_236C366C4();
  swift_bridgeObjectRelease();
  return sub_236C01DBC(a1, v2);
}

unint64_t sub_236C00650(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_236C36478();
  return sub_236C01F30(a1, v2);
}

uint64_t sub_236C00680(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_236C006B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AACPVersionInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for AACPVersionInfo(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v35;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    v11 = a2[11];
    a1[10] = a2[10];
    a1[11] = v11;
    v12 = a2[13];
    a1[12] = a2[12];
    a1[13] = v12;
    v13 = a2[15];
    a1[14] = a2[14];
    a1[15] = v13;
    v14 = a2[17];
    a1[16] = a2[16];
    a1[17] = v14;
    v15 = a2[19];
    a1[18] = a2[18];
    a1[19] = v15;
    v16 = a2[21];
    v17 = a3[15];
    __dst = (char *)a1 + v17;
    v18 = (char *)a2 + v17;
    a1[20] = a2[20];
    a1[21] = v16;
    v19 = sub_236C35800();
    v35 = *(_QWORD *)(v19 - 8);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447750);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      v22 = v35;
    }
    else
    {
      v22 = v35;
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v19);
    }
    v24 = a3[16];
    v25 = (char *)v4 + v24;
    v26 = (char *)a2 + v24;
    if (v20((char *)a2 + v24, 1, v19))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447750);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v25, v26, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v25, 0, 1, v19);
    }
    v28 = a3[17];
    v29 = a3[18];
    v30 = *(void **)((char *)a2 + v28);
    *(uint64_t *)((char *)v4 + v28) = (uint64_t)v30;
    v31 = *(void **)((char *)a2 + v29);
    *(uint64_t *)((char *)v4 + v29) = (uint64_t)v31;
    v32 = v30;
    v33 = v31;
  }
  return v4;
}

void destroy for AACPVersionInfo(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[15];
  v5 = sub_236C35800();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + a2[16];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);

}

_QWORD *initializeWithCopy for AACPVersionInfo(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v33;
  char *__dst;

  v5 = *((_QWORD *)a2 + 1);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  v6 = *((_QWORD *)a2 + 3);
  a1[2] = *((_QWORD *)a2 + 2);
  a1[3] = v6;
  v7 = *((_QWORD *)a2 + 5);
  a1[4] = *((_QWORD *)a2 + 4);
  a1[5] = v7;
  v8 = *((_QWORD *)a2 + 7);
  a1[6] = *((_QWORD *)a2 + 6);
  a1[7] = v8;
  v9 = *((_QWORD *)a2 + 9);
  a1[8] = *((_QWORD *)a2 + 8);
  a1[9] = v9;
  v10 = *((_QWORD *)a2 + 11);
  a1[10] = *((_QWORD *)a2 + 10);
  a1[11] = v10;
  v11 = *((_QWORD *)a2 + 13);
  a1[12] = *((_QWORD *)a2 + 12);
  a1[13] = v11;
  v12 = *((_QWORD *)a2 + 15);
  a1[14] = *((_QWORD *)a2 + 14);
  a1[15] = v12;
  v13 = *((_QWORD *)a2 + 17);
  a1[16] = *((_QWORD *)a2 + 16);
  a1[17] = v13;
  v14 = *((_QWORD *)a2 + 19);
  a1[18] = *((_QWORD *)a2 + 18);
  a1[19] = v14;
  v15 = *((_QWORD *)a2 + 21);
  v16 = a3[15];
  __dst = (char *)a1 + v16;
  v17 = &a2[v16];
  a1[20] = *((_QWORD *)a2 + 20);
  a1[21] = v15;
  v18 = sub_236C35800();
  v33 = *(_QWORD *)(v18 - 8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447750);
    memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    v21 = v33;
  }
  else
  {
    v21 = v33;
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(__dst, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v18);
  }
  v22 = a3[16];
  v23 = (char *)a1 + v22;
  v24 = &a2[v22];
  if (v19(&a2[v22], 1, v18))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447750);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v23, v24, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v23, 0, 1, v18);
  }
  v26 = a3[17];
  v27 = a3[18];
  v28 = *(void **)&a2[v26];
  *(_QWORD *)((char *)a1 + v26) = v28;
  v29 = *(void **)&a2[v27];
  *(_QWORD *)((char *)a1 + v27) = v29;
  v30 = v28;
  v31 = v29;
  return a1;
}

char *assignWithCopy for AACPVersionInfo(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = a2[2];
  *((_QWORD *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 4) = a2[4];
  *((_QWORD *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 6) = a2[6];
  *((_QWORD *)a1 + 7) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 8) = a2[8];
  *((_QWORD *)a1 + 9) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 10) = a2[10];
  *((_QWORD *)a1 + 11) = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 12) = a2[12];
  *((_QWORD *)a1 + 13) = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 14) = a2[14];
  *((_QWORD *)a1 + 15) = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 16) = a2[16];
  *((_QWORD *)a1 + 17) = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 18) = a2[18];
  *((_QWORD *)a1 + 19) = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 20) = a2[20];
  *((_QWORD *)a1 + 21) = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[15];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_236C35800();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447750);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[16];
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447750);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  v21 = a3[17];
  v22 = *(void **)&a1[v21];
  v23 = *(void **)((char *)a2 + v21);
  *(_QWORD *)&a1[v21] = v23;
  v24 = v23;

  v25 = a3[18];
  v26 = *(void **)&a1[v25];
  v27 = *(void **)((char *)a2 + v25);
  *(_QWORD *)&a1[v25] = v27;
  v28 = v27;

  return a1;
}

_OWORD *initializeWithTake for AACPVersionInfo(_OWORD *a1, char *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  v7 = *((_OWORD *)a2 + 3);
  a1[2] = *((_OWORD *)a2 + 2);
  a1[3] = v7;
  v8 = *((_OWORD *)a2 + 5);
  a1[4] = *((_OWORD *)a2 + 4);
  a1[5] = v8;
  v9 = *((_OWORD *)a2 + 7);
  a1[6] = *((_OWORD *)a2 + 6);
  a1[7] = v9;
  v10 = *((_OWORD *)a2 + 9);
  a1[8] = *((_OWORD *)a2 + 8);
  a1[9] = v10;
  v11 = a3[15];
  v12 = (char *)a1 + v11;
  v13 = &a2[v11];
  a1[10] = *((_OWORD *)a2 + 10);
  v14 = sub_236C35800();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447750);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[16];
  v19 = (char *)a1 + v18;
  v20 = &a2[v18];
  if (v16(&a2[v18], 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447750);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v20, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  v22 = a3[18];
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)&a2[a3[17]];
  *(_QWORD *)((char *)a1 + v22) = *(_QWORD *)&a2[v22];
  return a1;
}

char *assignWithTake for AACPVersionInfo(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  *((_QWORD *)a1 + 2) = a2[2];
  *((_QWORD *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  *((_QWORD *)a1 + 4) = a2[4];
  *((_QWORD *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  *((_QWORD *)a1 + 6) = a2[6];
  *((_QWORD *)a1 + 7) = v9;
  swift_bridgeObjectRelease();
  v10 = a2[9];
  *((_QWORD *)a1 + 8) = a2[8];
  *((_QWORD *)a1 + 9) = v10;
  swift_bridgeObjectRelease();
  v11 = a2[11];
  *((_QWORD *)a1 + 10) = a2[10];
  *((_QWORD *)a1 + 11) = v11;
  swift_bridgeObjectRelease();
  v12 = a2[13];
  *((_QWORD *)a1 + 12) = a2[12];
  *((_QWORD *)a1 + 13) = v12;
  swift_bridgeObjectRelease();
  v13 = a2[15];
  *((_QWORD *)a1 + 14) = a2[14];
  *((_QWORD *)a1 + 15) = v13;
  swift_bridgeObjectRelease();
  v14 = a2[17];
  *((_QWORD *)a1 + 16) = a2[16];
  *((_QWORD *)a1 + 17) = v14;
  swift_bridgeObjectRelease();
  v15 = a2[19];
  *((_QWORD *)a1 + 18) = a2[18];
  *((_QWORD *)a1 + 19) = v15;
  swift_bridgeObjectRelease();
  v16 = a2[21];
  *((_QWORD *)a1 + 20) = a2[20];
  *((_QWORD *)a1 + 21) = v16;
  swift_bridgeObjectRelease();
  v17 = a3[15];
  v18 = &a1[v17];
  v19 = (char *)a2 + v17;
  v20 = sub_236C35800();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447750);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
LABEL_7:
  v26 = a3[16];
  v27 = &a1[v26];
  v28 = (char *)a2 + v26;
  v29 = v22(&a1[v26], 1, v20);
  v30 = v22(v28, 1, v20);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v27, v28, v20);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v27, v20);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447750);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v27, v28, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v27, 0, 1, v20);
LABEL_13:
  v32 = a3[17];
  v33 = *(void **)&a1[v32];
  *(_QWORD *)&a1[v32] = *(_QWORD *)((char *)a2 + v32);

  v34 = a3[18];
  v35 = *(void **)&a1[v34];
  *(_QWORD *)&a1[v34] = *(_QWORD *)((char *)a2 + v34);

  return a1;
}

uint64_t getEnumTagSinglePayload for AACPVersionInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_236C0140C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447750);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 60), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for AACPVersionInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_236C014A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447750);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 60), a2, a2, v7);
  }
  return result;
}

void sub_236C0151C()
{
  unint64_t v0;

  sub_236C015B0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_236C015B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2564477C0)
  {
    sub_236C35800();
    v0 = sub_236C363E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2564477C0);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for CaseInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CaseInfo()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for CaseInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for CaseInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CaseInfo(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CaseInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CaseInfo()
{
  return &type metadata for CaseInfo;
}

uint64_t destroy for AirPodInformation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AirPodInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  v8 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v8;
  v9 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v9;
  v10 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v10;
  v11 = *(_DWORD *)(a2 + 188);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(_DWORD *)(a1 + 188) = v11;
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 196) = *(_BYTE *)(a2 + 196);
  v12 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AirPodInformation(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
  *(_BYTE *)(a1 + 186) = *(_BYTE *)(a2 + 186);
  *(_BYTE *)(a1 + 187) = *(_BYTE *)(a2 + 187);
  *(_DWORD *)(a1 + 188) = *(_DWORD *)(a2 + 188);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  *(_BYTE *)(a1 + 194) = *(_BYTE *)(a2 + 194);
  *(_BYTE *)(a1 + 195) = *(_BYTE *)(a2 + 195);
  *(_BYTE *)(a1 + 196) = *(_BYTE *)(a2 + 196);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy216_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for AirPodInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  v9 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v11;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_BYTE *)(a1 + 185) = *(_BYTE *)(a2 + 185);
  *(_BYTE *)(a1 + 186) = *(_BYTE *)(a2 + 186);
  *(_BYTE *)(a1 + 187) = *(_BYTE *)(a2 + 187);
  *(_DWORD *)(a1 + 188) = *(_DWORD *)(a2 + 188);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  *(_BYTE *)(a1 + 194) = *(_BYTE *)(a2 + 194);
  *(_BYTE *)(a1 + 195) = *(_BYTE *)(a2 + 195);
  *(_BYTE *)(a1 + 196) = *(_BYTE *)(a2 + 196);
  v12 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AirPodInformation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 216))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AirPodInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 216) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 216) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPodInformation()
{
  return &type metadata for AirPodInformation;
}

unint64_t sub_236C01D14()
{
  unint64_t result;

  result = qword_256447828;
  if (!qword_256447828)
  {
    result = MEMORY[0x23B80027C](&unk_236C37A14, &type metadata for AirPodInformation);
    atomic_store(result, (unint64_t *)&qword_256447828);
  }
  return result;
}

unint64_t sub_236C01D58(uint64_t a1)
{
  uint64_t v2;

  sub_236C35A40();
  sub_236C03F24(&qword_256447860, MEMORY[0x24BE09BE8]);
  v2 = sub_236C36094();
  return sub_236C01FF4(a1, v2);
}

unint64_t sub_236C01DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_236C360F4();
    v8 = v7;
    if (v6 == sub_236C360F4() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_236C36658();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_236C360F4();
          v15 = v14;
          if (v13 == sub_236C360F4() && v15 == v16)
            break;
          v18 = sub_236C36658();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_236C01F30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_236C03F64(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x23B7FF910](v9, a1);
      sub_236C00680((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_236C01FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_236C35A40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_236C03F24(&qword_256447868, MEMORY[0x24BE09BF0]);
      v14 = sub_236C360C4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

BOOL sub_236C0212C(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  _BOOL8 result;
  BOOL v7;
  char v8;
  char v9;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_236C36658(), result = 0, (v5 & 1) != 0))
  {
    v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = sub_236C36658(), result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5])
        return a1[6] == a2[6];
      v9 = sub_236C36658();
      result = 0;
      if ((v9 & 1) != 0)
        return a1[6] == a2[6];
    }
  }
  return result;
}

uint64_t sub_236C021DC(double a1)
{
  uint64_t result;
  double v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_236C362A4();
  v4 = v3;
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  result = sub_236C362C8();
  if (v5 <= -9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) == 0 || (*(_QWORD *)&v5 & 0x7FF0000000000000) == 0x7FF0000000000000)
    goto LABEL_27;
  if (a1 <= -9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (a1 >= 9.22337204e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v6 = (uint64_t)v5;
  if (!(uint64_t)v5)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v7 = (uint64_t)a1;
  if ((uint64_t)a1 == 0x8000000000000000 && v6 == -1)
    goto LABEL_35;
  v8 = (uint64_t)v4;
  if (!(uint64_t)v4)
    goto LABEL_31;
  v9 = v7 % v6 / v8;
  v10 = 7;
  if (v9 < 4)
    v10 = 0;
  v11 = v10 - v9;
  v12 = v11 * v8;
  if ((unsigned __int128)(v11 * (__int128)v8) >> 64 != (v11 * v8) >> 63)
    goto LABEL_32;
  v13 = __OFADD__(v7, v12);
  v14 = v7 + v12;
  if (!v13)
  {
    if (v7 == 0x8000000000000000 && v8 == -1)
      goto LABEL_36;
    v15 = v7 % v8;
    v13 = __OFSUB__(v14, v15);
    v16 = v14 - v15;
    if (!v13)
      return v16 & ~(v16 >> 63);
    goto LABEL_34;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_236C02360@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void *v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  double v36;
  uint64_t v37;
  unsigned int v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unsigned __int8 v45;
  unsigned __int8 v46;
  unsigned __int8 v47;
  unsigned __int8 v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unsigned int v78;
  unint64_t v79;
  uint64_t v80;
  char v81[8];
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  char v106;
  char v107;
  unsigned int v108;
  char v109;
  unsigned __int8 v110;
  unsigned __int8 v111;
  unsigned __int8 v112;
  unsigned __int8 v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447750);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v53 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447858);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)type metadata accessor for AACPVersionInfo();
  v14 = *((_QWORD *)v13 - 1);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = objc_msgSend(a1, sel_accessoryInfo);
  if (!v17)
  {

    goto LABEL_5;
  }
  v18 = v17;
  v80 = a2;
  v19 = sub_236C3604C();

  v20 = swift_bridgeObjectRetain();
  AACPVersionInfo.init(with:)(v20, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13) != 1)
  {
    sub_236C006B4((uint64_t)v12, (uint64_t)v16);
    v78 = objc_msgSend(a1, sel_productId);
    if (v16[3])
    {
      v21 = v16[2];
      v76 = v16[3];
      v77 = v21;
    }
    else
    {
      v76 = 0xE000000000000000;
      v77 = 0;
    }
    swift_bridgeObjectRetain();
    sub_236C36280();
    v23 = v22;
    CaseInfo.init(with:)((Swift::OpaquePointer)v19);
    v24 = v117;
    if (v117 >= 2)
    {
      v58 = v116;
      v25 = v16[21];
      if (v25)
        goto LABEL_11;
    }
    else
    {
      sub_236C03E8C(v116, v117);
      v58 = 0;
      v24 = 0xE000000000000000;
      v25 = v16[21];
      if (v25)
      {
LABEL_11:
        v74 = v16[20];
        v79 = v25;
        goto LABEL_14;
      }
    }
    v74 = 0;
    v79 = 0xE000000000000000;
LABEL_14:
    v75 = v24;
    v26 = *(void **)((char *)v16 + v13[17]);
    swift_bridgeObjectRetain();
    if (v26)
      objc_msgSend(v26, sel_doubleValue);
    else
      v27 = 0.0;
    v73 = sub_236C021DC(v27);
    sub_236C03EA0((uint64_t)v16 + v13[15], (uint64_t)v9);
    v28 = sub_236C35800();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    if (v30(v9, 1, v28) == 1)
    {
      sub_236BE6C14((uint64_t)v9, &qword_256447750);
      v56 = 0xE000000000000000;
      v57 = 0;
      v31 = v16[9];
      if (v31)
      {
LABEL_19:
        v32 = v16[8];
        v71 = v31;
        v72 = v32;
        goto LABEL_22;
      }
    }
    else
    {
      v33 = sub_236C357F4();
      v56 = v34;
      v57 = v33;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v28);
      v31 = v16[9];
      if (v31)
        goto LABEL_19;
    }
    v71 = 0xE000000000000000;
    v72 = 0;
LABEL_22:
    v35 = *(void **)((char *)v16 + v13[18]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v35)
      objc_msgSend(v35, sel_doubleValue);
    else
      v36 = 0.0;
    v37 = sub_236C021DC(v36);
    sub_236C03EA0((uint64_t)v16 + v13[16], (uint64_t)v7);
    v38 = v30(v7, 1, v28);
    v70 = v37;
    if (v38 == 1)
    {
      sub_236BE6C14((uint64_t)v7, &qword_256447750);
      v54 = 0xE000000000000000;
      v55 = 0;
      v39 = v16[11];
      if (v39)
        goto LABEL_27;
    }
    else
    {
      v43 = sub_236C357F4();
      v54 = v44;
      v55 = v43;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v28);
      v39 = v16[11];
      if (v39)
      {
LABEL_27:
        v40 = v16[10];
        v68 = v39;
        v69 = v40;
        v41 = v16[17];
        if (v41)
        {
LABEL_28:
          v42 = v16[16];
          v66 = v41;
          v67 = v42;
          goto LABEL_32;
        }
LABEL_31:
        v66 = 0xE000000000000000;
        v67 = 0;
LABEL_32:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v63 = objc_msgSend(a1, sel_isAppleAudioDevice);
        v65 = objc_msgSend(a1, sel_supportsHS);
        v64 = objc_msgSend(a1, sel_cloudPaired);
        v62 = objc_msgSend(a1, sel_magicPaired);
        v61 = objc_msgSend(a1, sel_isTemporaryPaired);
        v60 = objc_msgSend(a1, sel_listeningMode);
        v59 = objc_msgSend(a1, sel_smartRouteMode);
        v45 = objc_msgSend(a1, sel_smartRouteSupport);
        v46 = objc_msgSend(a1, sel_spatialAudioMode);
        v47 = objc_msgSend(a1, sel_spatialAudioAllowed);
        v48 = objc_msgSend(a1, sel_spatialAudioActive);
        if (v16[19])
        {
          v49 = 0xEB00000000746E65;
          swift_bridgeObjectRetain();
          if ((sub_236C361D8() & 1) != 0)
          {
            swift_bridgeObjectRelease();
LABEL_36:
            v51 = 0x6D706F6C65766544;
LABEL_38:

            sub_236C03EE8((uint64_t)v16);
            v81[0] = v63;
            v82 = v74;
            v83 = v79;
            v84 = v57;
            v85 = v56;
            v86 = v72;
            v87 = v71;
            v88 = v73;
            v89 = v74;
            v90 = v79;
            v91 = v55;
            v92 = v54;
            v93 = v69;
            v94 = v68;
            v95 = v70;
            v96 = v23;
            v97 = v78;
            v98 = v77;
            v99 = v76;
            v100 = v58;
            v101 = v75;
            v102 = v67;
            v103 = v66;
            v104 = v65;
            v105 = v64;
            v106 = v62;
            v107 = v61;
            v108 = v60;
            v109 = v59;
            v110 = v45;
            v111 = v46;
            v112 = v47;
            v113 = v48;
            v114 = v51;
            v115 = v49;
            nullsub_1(v81);
            sub_236BF9DC8((uint64_t)v81, (uint64_t)&v116);
            a2 = v80;
            return sub_236BF9DC8((uint64_t)&v116, a2);
          }
          v50 = sub_236C361D8();
          swift_bridgeObjectRelease();
          if ((v50 & 1) != 0)
            goto LABEL_36;
        }
        v49 = 0xEA00000000006E6FLL;
        v51 = 0x69746375646F7250;
        goto LABEL_38;
      }
    }
    v68 = 0xE000000000000000;
    v69 = 0;
    v41 = v16[17];
    if (v41)
      goto LABEL_28;
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();

  sub_236BE6C14((uint64_t)v12, &qword_256447858);
  a2 = v80;
LABEL_5:
  sub_236C03E64((uint64_t)v81);
  sub_236BF9DC8((uint64_t)v81, (uint64_t)&v116);
  return sub_236BF9DC8((uint64_t)&v116, a2);
}

uint64_t sub_236C029F8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x8000000236C39F50 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000236C3A010 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000236C3A030 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000236C3A050 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x49746375646F7270 && a2 == 0xE900000000000044 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D754E6C65646F6DLL && a2 == 0xEB00000000726562 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7372655665736163 && a2 == 0xEB000000006E6F69 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6572617764726168 && a2 == 0xEF6E6F6973726556 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7374726F70707573 && a2 == 0xEF69726953796548 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x5064756F6C437369 && a2 == 0xED00006465726961 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x50636967614D7369 && a2 == 0xED00006465726961 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000236C39F70 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6E696E657473696CLL && a2 == 0xED000065646F4D67 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x756F527472616D73 && a2 == 0xEE0065646F4D6574 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000236C3A070 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000236C39FB0 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000236C3A090 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000236C3A0B0 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x676E69737566 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else
  {
    v5 = sub_236C36658();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 18;
    else
      return 19;
  }
}

uint64_t sub_236C03210@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  int v29;
  void (*v30)(_QWORD, _QWORD);
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  char v123;
  char v124;
  int v125;
  char v126;
  char v127;
  char v128;
  char v129;
  char v130;
  __int16 v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  __int16 v136;
  char v137;
  _DWORD v138[3];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447830);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v83 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_236C03D70();
  sub_236C366DC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
  v75 = a2;
  LOBYTE(v98) = 0;
  v10 = sub_236C365A4();
  LOBYTE(v84) = 1;
  sub_236C03DB4();
  sub_236C365C8();
  v69 = v10;
  v11 = v101;
  v70 = v100;
  v71 = v98;
  v12 = v103;
  v72 = v104;
  v73 = v102;
  LOBYTE(v84) = 2;
  v74 = v99;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_236C365C8();
  v81 = v12;
  v82 = v11;
  v13 = v101;
  v67 = v100;
  v68 = v99;
  v14 = v103;
  v65 = v98;
  v66 = v102;
  v15 = v104;
  LOBYTE(v98) = 3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_236C365B0();
  v79 = v14;
  v80 = v13;
  v17 = v16;
  v64 = v15;
  LOBYTE(v98) = 4;
  LODWORD(v15) = sub_236C365E0();
  LOBYTE(v98) = 5;
  v18 = sub_236C36598();
  LOBYTE(v98) = 6;
  v20 = v19;
  swift_bridgeObjectRetain();
  v21 = sub_236C36598();
  v78 = v20;
  v63 = v21;
  LOBYTE(v98) = 7;
  v23 = v22;
  swift_bridgeObjectRetain();
  v24 = sub_236C36598();
  v77 = v23;
  v61 = v24;
  v62 = v18;
  LOBYTE(v98) = 8;
  v26 = v25;
  swift_bridgeObjectRetain();
  v60 = sub_236C365A4();
  v76 = v26;
  LOBYTE(v98) = 9;
  v59 = sub_236C365A4();
  LOBYTE(v98) = 10;
  v58 = sub_236C365A4();
  LOBYTE(v98) = 11;
  v57 = sub_236C365A4();
  LOBYTE(v98) = 12;
  LODWORD(v26) = sub_236C365E0();
  LOBYTE(v98) = 13;
  v56 = sub_236C365D4();
  LOBYTE(v98) = 14;
  v55 = sub_236C365A4();
  LOBYTE(v98) = 15;
  v54 = sub_236C365D4();
  LOBYTE(v98) = 16;
  LOBYTE(v18) = sub_236C365A4();
  LOBYTE(v98) = 17;
  v53 = sub_236C365A4();
  v135 = 18;
  v51 = sub_236C36598();
  v52 = v27;
  v28 = v69 & 1;
  v48 = v69 & 1;
  v50 = v59 & 1;
  v69 = v58 & 1;
  v29 = v57 & 1;
  v57 = v55 & 1;
  v58 = v29;
  v59 = v18 & 1;
  v60 &= 1u;
  v30 = *(void (**)(_QWORD, _QWORD))(v6 + 8);
  v31 = v53 & 1;
  v55 = v53 & 1;
  v30(v8, v5);
  LOBYTE(v84) = v28;
  *((_QWORD *)&v84 + 1) = v71;
  *(_QWORD *)&v85 = v74;
  *((_QWORD *)&v85 + 1) = v70;
  *(_QWORD *)&v86 = v82;
  *((_QWORD *)&v86 + 1) = v73;
  *(_QWORD *)&v87 = v81;
  *((_QWORD *)&v87 + 1) = v72;
  *(_QWORD *)&v88 = v65;
  *((_QWORD *)&v88 + 1) = v68;
  *(_QWORD *)&v89 = v67;
  *((_QWORD *)&v89 + 1) = v80;
  *(_QWORD *)&v90 = v66;
  *((_QWORD *)&v90 + 1) = v79;
  *(_QWORD *)&v91 = v64;
  *((_QWORD *)&v91 + 1) = v17;
  v49 = v15;
  LODWORD(v92) = v15;
  v32 = v77;
  *((_QWORD *)&v92 + 1) = v62;
  *(_QWORD *)&v93 = v78;
  *((_QWORD *)&v93 + 1) = v63;
  *(_QWORD *)&v94 = v77;
  v33 = v76;
  *((_QWORD *)&v94 + 1) = v61;
  *(_QWORD *)&v95 = v76;
  BYTE8(v95) = v60;
  BYTE9(v95) = v50;
  BYTE10(v95) = v69;
  BYTE11(v95) = v58;
  v47 = v26;
  HIDWORD(v95) = v26;
  LOBYTE(v96) = v56;
  BYTE1(v96) = v57;
  BYTE2(v96) = v54;
  BYTE3(v96) = v59;
  BYTE4(v96) = v31;
  *((_QWORD *)&v96 + 1) = v51;
  v97 = v52;
  sub_236BF99A0((uint64_t)&v84);
  swift_bridgeObjectRelease();
  v34 = v82;
  swift_bridgeObjectRelease();
  v35 = v74;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v36 = v80;
  swift_bridgeObjectRelease();
  v37 = v68;
  swift_bridgeObjectRelease();
  v38 = v78;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
  LOBYTE(v98) = v48;
  v99 = v71;
  v100 = v35;
  v101 = v70;
  v102 = v34;
  *(_DWORD *)((char *)&v98 + 1) = v138[0];
  HIDWORD(v98) = *(_DWORD *)((char *)v138 + 3);
  v103 = v73;
  v104 = v81;
  v105 = v72;
  v106 = v65;
  v107 = v37;
  v108 = v67;
  v109 = v36;
  v110 = v66;
  v111 = v79;
  v112 = v64;
  v113 = v17;
  v114 = v49;
  v115 = v62;
  v116 = v38;
  v117 = v63;
  v118 = v32;
  v119 = v61;
  v120 = v33;
  v121 = v60;
  v122 = v50;
  v123 = v69;
  v124 = v58;
  v125 = v47;
  v126 = v56;
  v127 = v57;
  v128 = v54;
  v129 = v59;
  v130 = v55;
  v132 = v137;
  v131 = v136;
  v133 = v51;
  v134 = v52;
  result = sub_236BF9A54((uint64_t)&v98);
  v40 = v95;
  v41 = v75;
  *(_OWORD *)(v75 + 160) = v94;
  *(_OWORD *)(v41 + 176) = v40;
  *(_OWORD *)(v41 + 192) = v96;
  *(_QWORD *)(v41 + 208) = v97;
  v42 = v91;
  *(_OWORD *)(v41 + 96) = v90;
  *(_OWORD *)(v41 + 112) = v42;
  v43 = v93;
  *(_OWORD *)(v41 + 128) = v92;
  *(_OWORD *)(v41 + 144) = v43;
  v44 = v87;
  *(_OWORD *)(v41 + 32) = v86;
  *(_OWORD *)(v41 + 48) = v44;
  v45 = v89;
  *(_OWORD *)(v41 + 64) = v88;
  *(_OWORD *)(v41 + 80) = v45;
  v46 = v85;
  *(_OWORD *)v41 = v84;
  *(_OWORD *)(v41 + 16) = v46;
  return result;
}

unint64_t sub_236C03D70()
{
  unint64_t result;

  result = qword_256447838;
  if (!qword_256447838)
  {
    result = MEMORY[0x23B80027C](&unk_236C37BC8, &type metadata for AirPodInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256447838);
  }
  return result;
}

unint64_t sub_236C03DB4()
{
  unint64_t result;

  result = qword_256447840;
  if (!qword_256447840)
  {
    result = MEMORY[0x23B80027C](&unk_236C37BA0, &type metadata for BudInformation);
    atomic_store(result, (unint64_t *)&qword_256447840);
  }
  return result;
}

unint64_t sub_236C03DF8()
{
  unint64_t result;

  result = qword_256447850;
  if (!qword_256447850)
  {
    result = MEMORY[0x23B80027C](&unk_236C37B78, &type metadata for BudInformation);
    atomic_store(result, (unint64_t *)&qword_256447850);
  }
  return result;
}

uint64_t sub_236C03E3C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

double sub_236C03E64(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 208) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_236C03E8C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_236C03EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_236C03EE8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AACPVersionInfo();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_236C03F24(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_236C35A40();
    result = MEMORY[0x23B80027C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236C03F64(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AirPodInformation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEE)
    goto LABEL_17;
  if (a2 + 18 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 18) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 18;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 18;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 18;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v8 = v6 - 19;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AirPodInformation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_236C04088 + 4 * byte_236C378FC[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_236C040BC + 4 * byte_236C378F7[v4]))();
}

uint64_t sub_236C040BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236C040C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236C040CCLL);
  return result;
}

uint64_t sub_236C040D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236C040E0);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_236C040E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236C040EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AirPodInformation.CodingKeys()
{
  return &type metadata for AirPodInformation.CodingKeys;
}

uint64_t destroy for BudInformation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for BudInformation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for BudInformation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for BudInformation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

uint64_t getEnumTagSinglePayload for BudInformation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BudInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BudInformation()
{
  return &type metadata for BudInformation;
}

unint64_t sub_236C04348()
{
  unint64_t result;

  result = qword_256447870;
  if (!qword_256447870)
  {
    result = MEMORY[0x23B80027C](&unk_236C37A98, &type metadata for BudInformation);
    atomic_store(result, (unint64_t *)&qword_256447870);
  }
  return result;
}

unint64_t sub_236C04390()
{
  unint64_t result;

  result = qword_256447878;
  if (!qword_256447878)
  {
    result = MEMORY[0x23B80027C](&unk_236C37B50, &type metadata for AirPodInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256447878);
  }
  return result;
}

unint64_t sub_236C043D8()
{
  unint64_t result;

  result = qword_256447880;
  if (!qword_256447880)
  {
    result = MEMORY[0x23B80027C](&unk_236C37AC0, &type metadata for AirPodInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256447880);
  }
  return result;
}

unint64_t sub_236C04420()
{
  unint64_t result;

  result = qword_256447888;
  if (!qword_256447888)
  {
    result = MEMORY[0x23B80027C](&unk_236C37AE8, &type metadata for AirPodInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256447888);
  }
  return result;
}

uint64_t sub_236C04464(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657261776D726966 && a2 == 0xEF6E6F6973726556;
  if (v2 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1145656661 && a2 == 0xE400000000000000 || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x754E6C6169726573 && a2 == 0xEC0000007265626DLL || (sub_236C36658() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000236C3A0D0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_236C36658();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_236C04644@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447890);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236C048E8();
  sub_236C366DC();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  v9 = sub_236C36598();
  v11 = v10;
  v23 = v9;
  v27 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_236C36598();
  v24 = v13;
  v22 = v12;
  v26 = 2;
  swift_bridgeObjectRetain();
  v20 = sub_236C36598();
  v21 = v14;
  v25 = 3;
  swift_bridgeObjectRetain();
  v15 = sub_236C365BC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = v21;
  swift_bridgeObjectRelease();
  v17 = v24;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v23;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v17;
  a2[4] = v20;
  a2[5] = v16;
  a2[6] = v15;
  return result;
}

unint64_t sub_236C048E8()
{
  unint64_t result;

  result = qword_256447898;
  if (!qword_256447898)
  {
    result = MEMORY[0x23B80027C](&unk_236C37CD0, &type metadata for BudInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256447898);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BudInformation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BudInformation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_236C04A08 + 4 * byte_236C37906[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_236C04A3C + 4 * byte_236C37901[v4]))();
}

uint64_t sub_236C04A3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236C04A44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236C04A4CLL);
  return result;
}

uint64_t sub_236C04A58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236C04A60);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_236C04A64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236C04A6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236C04A78(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_236C04A80(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for BudInformation.CodingKeys()
{
  return &type metadata for BudInformation.CodingKeys;
}

unint64_t sub_236C04A9C()
{
  unint64_t result;

  result = qword_2564478A8;
  if (!qword_2564478A8)
  {
    result = MEMORY[0x23B80027C](&unk_236C37CA8, &type metadata for BudInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2564478A8);
  }
  return result;
}

unint64_t sub_236C04AE4()
{
  unint64_t result;

  result = qword_2564478B0;
  if (!qword_2564478B0)
  {
    result = MEMORY[0x23B80027C](&unk_236C37C18, &type metadata for BudInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2564478B0);
  }
  return result;
}

unint64_t sub_236C04B2C()
{
  unint64_t result;

  result = qword_2564478B8;
  if (!qword_2564478B8)
  {
    result = MEMORY[0x23B80027C](&unk_236C37C40, &type metadata for BudInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2564478B8);
  }
  return result;
}

uint64_t AirPodWorker.__allocating_init(with:)(__int128 *a1)
{
  swift_allocObject();
  return AirPodWorker.init(with:)(a1);
}

uint64_t sub_236C04BC0()
{
  uint64_t v0;

  swift_beginAccess();
  *(_BYTE *)(v0 + 16) = 1;
  return 1;
}

uint64_t sub_236C04C00()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = swift_beginAccess();
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_isAirPodSession) == 1)
    {
      if (qword_256447058 != -1)
        result = swift_once();
      if (qword_256448E70)
      {
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_session), *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_session + 24));
        v2 = sub_236C35AF4();
        result = sub_236BFBA08(v2);
      }
    }
    *(_BYTE *)(v0 + 16) = 0;
  }
  return result;
}

uint64_t sub_236C04CD4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint8_t *v42;
  __int128 v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  int64_t v52;
  uint64_t v53;
  _OWORD v54[13];
  uint64_t v55;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B14F0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_236C35DB8();
  v3 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256447058 != -1)
    goto LABEL_41;
  while (qword_256448E70)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2564478C0);
    sub_236C36388();
    if (!*(_QWORD *)(*(_QWORD *)&v54[0] + 16))
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v51 = v5;
    v7 = 0;
    v8 = *(_QWORD *)&v54[0] + 56;
    v9 = 1 << *(_BYTE *)(*(_QWORD *)&v54[0] + 32);
    v10 = -1;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    v11 = v10 & *(_QWORD *)(*(_QWORD *)&v54[0] + 56);
    v53 = v49 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_logger;
    v50 = (_QWORD *)(v49 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_session);
    v52 = (unint64_t)(v9 + 63) >> 6;
    *(_QWORD *)&v6 = 134217984;
    v44 = v6;
    v46 = v3;
    v5 = *(char **)&v54[0];
    v45 = v2;
    v47 = *(_QWORD *)&v54[0] + 56;
    while (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
LABEL_26:
      v18 = *((_QWORD *)v5 + 6) + 216 * v14;
      v19 = *(_OWORD *)(v18 + 16);
      v54[0] = *(_OWORD *)v18;
      v54[1] = v19;
      v20 = *(_OWORD *)(v18 + 80);
      v22 = *(_OWORD *)(v18 + 32);
      v21 = *(_OWORD *)(v18 + 48);
      v54[4] = *(_OWORD *)(v18 + 64);
      v54[5] = v20;
      v54[2] = v22;
      v54[3] = v21;
      v23 = *(_OWORD *)(v18 + 96);
      v24 = *(_OWORD *)(v18 + 112);
      v25 = *(_OWORD *)(v18 + 144);
      v54[8] = *(_OWORD *)(v18 + 128);
      v54[9] = v25;
      v54[6] = v23;
      v54[7] = v24;
      v26 = *(_OWORD *)(v18 + 160);
      v27 = *(_OWORD *)(v18 + 176);
      v28 = *(_OWORD *)(v18 + 192);
      v55 = *(_QWORD *)(v18 + 208);
      v54[11] = v27;
      v54[12] = v28;
      v54[10] = v26;
      if ((v54[0] & 1) != 0)
      {
        sub_236BF99A0((uint64_t)v54);
        v29 = sub_236C35F44();
        v30 = sub_236C36328();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v31 = 0;
          _os_log_impl(&dword_236BE1000, v29, v30, "sendAirPodInformation() found connected apple device", v31, 2u);
          MEMORY[0x23B800318](v31, -1, -1);
        }

        sub_236BFF36C();
        sub_236BF9A54((uint64_t)v54);
        v32 = sub_236C36088();
        swift_bridgeObjectRelease();
        if (v32)
        {
          v33 = v5;
          v34 = sub_236C35D58();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v2, 1, 1, v34);
          v12 = v51;
          sub_236C35D64();
          __swift_project_boxed_opaque_existential_1(v50, v50[3]);
          if ((sub_236C35B18() & 1) == 0)
          {
            swift_retain();
            v35 = sub_236C35F44();
            v36 = sub_236C36334();
            if (os_log_type_enabled(v35, v36))
            {
              v37 = swift_slowAlloc();
              *(_DWORD *)v37 = v44;
              __swift_project_boxed_opaque_existential_1(v50, v50[3]);
              v2 = v45;
              *(_QWORD *)(v37 + 4) = sub_236C35AF4();
              swift_release();
              _os_log_impl(&dword_236BE1000, v35, v36, "AirPodInformation message dropped. { reporterID=%lld }", (uint8_t *)v37, 0xCu);
              v38 = v37;
              v3 = v46;
              MEMORY[0x23B800318](v38, -1, -1);

            }
            else
            {

              swift_release();
            }
            v12 = v51;
          }
          (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v48);
          v5 = v33;
          v8 = v47;
        }
        else
        {
          v39 = sub_236C35F44();
          v40 = sub_236C36334();
          if (os_log_type_enabled(v39, v40))
          {
            v41 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v41 = 0;
            _os_log_impl(&dword_236BE1000, v39, v40, "AirPodInformation message cannot be converted to simple type. Aborting send.", v41, 2u);
            v42 = v41;
            v3 = v46;
            MEMORY[0x23B800318](v42, -1, -1);
          }

        }
      }
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v52)
      goto LABEL_36;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (v16)
      goto LABEL_25;
    v7 = v15 + 1;
    if (v15 + 1 >= v52)
      goto LABEL_36;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    if (v16)
      goto LABEL_25;
    v7 = v15 + 2;
    if (v15 + 2 >= v52)
      goto LABEL_36;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    if (v16)
      goto LABEL_25;
    v17 = v15 + 3;
    if (v17 >= v52)
    {
LABEL_36:
      swift_release();
      return 1;
    }
    v16 = *(_QWORD *)(v8 + 8 * v17);
    if (v16)
    {
      v7 = v17;
LABEL_25:
      v11 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v7 << 6);
      goto LABEL_26;
    }
    while (1)
    {
      v7 = v17 + 1;
      if (__OFADD__(v17, 1))
        break;
      if (v7 >= v52)
        goto LABEL_36;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      ++v17;
      if (v16)
        goto LABEL_25;
    }
LABEL_40:
    __break(1u);
LABEL_41:
    swift_once();
  }
  return 0;
}

uint64_t sub_236C052BC()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_236C052EC(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_236C05328())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_236C05364@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_236C053CC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_236C35CB0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_workerConfig;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_236C05490@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_236C054F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_236C05560())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_236C055A4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_neededPreviousFields);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236C0560C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_236C05654(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_neededPreviousFields);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_236C056A4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_236C056E8()
{
  qword_2542B41A0 = (uint64_t)&unk_25082E2E8;
}

uint64_t AirPodWorker.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_workerConfig;
  v2 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_session);
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_logger;
  v4 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t AirPodWorker.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_workerConfig;
  v2 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_session);
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_logger;
  v4 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_236C05820()
{
  return sub_236C04C00();
}

uint64_t sub_236C05840()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 16);
}

uint64_t sub_236C0587C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_236C058C0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 16) = v2;
  return result;
}

uint64_t sub_236C05908@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC22AudioAnalyticsExternal12AirPodWorker_neededPreviousFields);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_236C05960()
{
  return type metadata accessor for AirPodWorker();
}

uint64_t sub_236C05968()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_236C35CB0();
  if (v1 <= 0x3F)
  {
    result = sub_236C35F50();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for AirPodWorker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AirPodWorker.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of AirPodWorker.start()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of AirPodWorker.process(message:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of AirPodWorker.stop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of AirPodWorker.interested(in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of AirPodWorker.isStarted.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of AirPodWorker.isStarted.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of AirPodWorker.isStarted.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of AirPodWorker.workerConfig.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of AirPodWorker.workerConfig.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of AirPodWorker.workerConfig.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of AirPodWorker.neededPreviousFields.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of AirPodWorker.neededPreviousFields.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of AirPodWorker.neededPreviousFields.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t sub_236C05AE0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_236BFBD94(v1, a1);
}

void sub_236C05AF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  double v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  BOOL v43;
  id v44;
  void *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  __int128 v56;
  id v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  id v64[5];

  v2 = v1;
  v64[3] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_236C35728();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_236C356F8();
  v9 = (void *)sub_236C360D0();
  swift_bridgeObjectRelease();
  v64[0] = 0;
  v57 = v8;
  v10 = objc_msgSend(v8, sel_contentsOfDirectoryAtPath_error_, v9, v64);

  v11 = v64[0];
  if (!v10)
  {
    v44 = v64[0];
    v45 = (void *)sub_236C35680();

    swift_willThrow();
LABEL_32:
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v46 = sub_236C35F44();
    v47 = sub_236C36334();
    if (!os_log_type_enabled(v46, v47))
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return;
    }
    v48 = (uint8_t *)swift_slowAlloc();
    v49 = (void *)swift_slowAlloc();
    v64[0] = v49;
    *(_DWORD *)v48 = 136380675;
    v50 = sub_236C356F8();
    v63 = sub_236C0ED40(v50, v51, (uint64_t *)v64);
    sub_236C363F4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_236BE1000, v46, v47, "Couldn't get directory contents. { directory=%{private}s }", v48, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B800318](v49, -1, -1);
    MEMORY[0x23B800318](v48, -1, -1);

    goto LABEL_41;
  }
  v12 = sub_236C36214();
  v13 = v11;

  if (!*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  MEMORY[0x24BDAC7A8](v14);
  *((_QWORD *)&v56 - 2) = a1;
  v15 = sub_236C15394((void (*)(uint64_t *__return_ptr, _QWORD *))sub_236C07364, (uint64_t)(&v56 - 2), v12);
  swift_bridgeObjectRelease();
  v61 = 0;
  v62 = v15;
  v58 = v15[2];
  swift_beginAccess();
  swift_beginAccess();
  if (v15[2])
  {
    v17 = 0;
    v18 = 0;
    *(_QWORD *)&v16 = 134218240;
    v59 = v16;
    *(_QWORD *)&v16 = 134217984;
    v56 = v16;
    while (1)
    {
      v19 = sub_236C35F44();
      v20 = sub_236C36328();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc();
        *(_DWORD *)v21 = v59;
        v17 = v61;
        *(_QWORD *)(v21 + 4) = v61;
        *(_WORD *)(v21 + 12) = 2048;
        *(_QWORD *)(v21 + 14) = v62[2];
        _os_log_impl(&dword_236BE1000, v19, v20, "Upload iteration. { iteration=%ld, filesToUpload=%ld }", (uint8_t *)v21, 0x16u);
        MEMORY[0x23B800318](v21, -1, -1);
      }

      if (v17)
      {
        if (v17 < 1)
        {
          v25 = 1.0;
        }
        else
        {
          v22 = pow(1.6, (double)v17);
          sub_236C0737C(v23, 0.0, 1.0);
          v25 = v22 + v24 * ceil(v22 * 0.2);
        }
        v26 = sub_236C35F44();
        v27 = sub_236C36328();
        if (os_log_type_enabled(v26, v27))
        {
          v28 = swift_slowAlloc();
          *(_DWORD *)v28 = v56;
          *(double *)(v28 + 4) = v25;
          _os_log_impl(&dword_236BE1000, v26, v27, "Performing backoff. { backoff=%f }", (uint8_t *)v28, 0xCu);
          MEMORY[0x23B800318](v28, -1, -1);
        }

        v29 = (void *)objc_opt_self();
        if ((~*(_QWORD *)&v25 & 0x7FF0000000000000) == 0)
          goto LABEL_44;
        if (v25 <= -1.0)
          goto LABEL_45;
        if (v25 >= 4294967300.0)
          goto LABEL_46;
        objc_msgSend(v29, sel_sleepForTimeInterval_, (double)v25);
      }
      v30 = swift_bridgeObjectRetain();
      v31 = sub_236C0636C(v30);
      v33 = v32;
      swift_bridgeObjectRelease();
      if (!v31)
        break;
      swift_bridgeObjectRetain_n();
      v34 = sub_236C35F44();
      v35 = sub_236C36328();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = swift_slowAlloc();
        *(_DWORD *)v36 = v59;
        v37 = *(_QWORD *)(v31 + 16);
        *(_QWORD *)(v36 + 4) = v37;
        *(_WORD *)(v36 + 12) = 2048;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v36 + 14) = v58 - v37;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_236BE1000, v34, v35, "Iteration complete. { numSuccessess=%ld, numFailures=%ld }", (uint8_t *)v36, 0x16u);
        MEMORY[0x23B800318](v36, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      v38 = *(_QWORD *)(v31 + 16);
      if (v38)
      {
        swift_bridgeObjectRetain();
        v39 = (unint64_t *)(v31 + 40);
        do
        {
          v40 = *(v39 - 1);
          v41 = *v39;
          swift_bridgeObjectRetain();
          sub_236C07424(v40, v41);
          swift_bridgeObjectRelease();
          v39 += 4;
          --v38;
        }
        while (v38);
        swift_bridgeObjectRelease();
      }
      v62 = v33;
      swift_bridgeObjectRelease();
      v42 = *(_QWORD *)(v31 + 16);
      swift_bridgeObjectRelease();
      v43 = __OFADD__(v18, v42);
      v18 += v42;
      if (v43)
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
      }
      v17 = v61 + 1;
      if (__OFADD__(v61, 1))
        goto LABEL_43;
      ++v61;
      if (!v33[2] || v17 >= 5)
        goto LABEL_36;
    }
    swift_bridgeObjectRelease();
LABEL_41:

    return;
  }
  v18 = 0;
LABEL_36:
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal18BlobbyUploadHelper_blobbyUploader), sel_invalidateConnection, v56);
  v52 = v58 - v18;
  if (__OFSUB__(v58, v18))
    goto LABEL_47;
  v53 = sub_236C35F44();
  v54 = sub_236C36328();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = swift_slowAlloc();
    *(_DWORD *)v55 = 134218240;
    v60 = v18;
    sub_236C363F4();
    *(_WORD *)(v55 + 12) = 2048;
    v60 = v52;
    sub_236C363F4();
    _os_log_impl(&dword_236BE1000, v53, v54, "Upload complete. { numSuccessess=%ld, numFailures=%ld }", (uint8_t *)v55, 0x16u);
    MEMORY[0x23B800318](v55, -1, -1);
  }

  swift_bridgeObjectRelease();
}

double sub_236C062A4@<D0>(uint64_t *a1@<X8>)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  double result;
  uint64_t v6;
  unint64_t v7;

  v6 = sub_236C356F8();
  v7 = v2;
  sub_236C36184();
  sub_236C36184();
  if (sub_236C078BC())
  {
    if (!sub_236C07C44())
    {
      v3 = sub_236C07F54();
      if (v4)
      {
        *a1 = v6;
        a1[1] = v7;
        a1[2] = v3;
        a1[3] = v4;
        return result;
      }
    }
    sub_236C07424(v6, v7);
  }
  swift_bridgeObjectRelease();
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  return result;
}

uint64_t sub_236C0636C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  dispatch_group_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD v32[2];
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = sub_236C35FA4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_236C36004();
  v39 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v32 - v9;
  v11 = dispatch_group_create();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2564479D8);
  v12 = swift_allocObject();
  *(_DWORD *)(v12 + 24) = 0;
  v13 = MEMORY[0x24BEE4AF8];
  v41 = v12;
  *(_QWORD *)(v12 + 16) = MEMORY[0x24BEE4AF8];
  v14 = a1;
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 24) = 0;
  *(_QWORD *)(v15 + 16) = v13;
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v33 = v5;
    v34 = v3;
    v35 = v2;
    v36 = v10;
    v17 = v11;
    v37 = v6;
    swift_bridgeObjectRetain();
    v32[1] = v14;
    v18 = (unint64_t *)(v14 + 56);
    do
    {
      v20 = *(v18 - 1);
      v19 = *v18;
      v22 = *(v18 - 3);
      v21 = *(v18 - 2);
      swift_bridgeObjectRetain();
      v23 = swift_bridgeObjectRetain();
      v24 = (void *)MEMORY[0x23B7FFDA8](v23);
      sub_236C066D4(v17, v22, v21, v20, v19, v40, v41, v15);
      v18 += 4;
      objc_autoreleasePoolPop(v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    v10 = v36;
    v6 = v37;
    v11 = v17;
    v3 = v34;
    v2 = v35;
    v5 = v33;
  }
  v25 = v38;
  sub_236C35FF8();
  *v5 = 30;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5420], v2);
  MEMORY[0x23B7FF4A8](v25, v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  v26 = *(void (**)(char *, uint64_t))(v39 + 8);
  v26(v25, v6);
  if ((sub_236C36358() & 1) != 0)
  {
    v28 = sub_236C35F44();
    v29 = sub_236C36334();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_236BE1000, v28, v29, "Timed out waiting for uploads. Aborting.", v30, 2u);
      MEMORY[0x23B800318](v30, -1, -1);
    }
    swift_release();

    swift_release();
    v26(v10, v6);
    return 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2564479E0);
    sub_236C35EA8();
    v27 = v42;
    sub_236C35EA8();
    swift_release();
    swift_release();

    v26(v10, v6);
  }
  return v27;
}

void sub_236C066D4(NSObject *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  _QWORD *v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  NSObject *v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (**v39)(char *, _QWORD);
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t aBlock[6];
  uint64_t v44;

  v42 = a8;
  v41 = a7;
  v14 = sub_236C35F50();
  v39 = *(void (***)(char *, _QWORD))(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = a1;
  dispatch_group_enter(a1);
  sub_236C35EFC();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v17 = sub_236C35F44();
  v18 = sub_236C36328();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v37 = a6;
    v20 = v19;
    v35 = swift_slowAlloc();
    aBlock[0] = v35;
    *(_DWORD *)v20 = 136380931;
    v36 = v14;
    swift_bridgeObjectRetain();
    v44 = sub_236C0ED40(a2, a3, aBlock);
    v38 = a2;
    sub_236C363F4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 12) = 2081;
    swift_bridgeObjectRetain();
    v44 = sub_236C0ED40(a4, a5, aBlock);
    a2 = v38;
    sub_236C363F4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_236BE1000, v17, v18, "Upload to subfolder. { fileToUpload=%{private}s, subfolder=%{private}s }", (uint8_t *)v20, 0x16u);
    v21 = v35;
    swift_arrayDestroy();
    MEMORY[0x23B800318](v21, -1, -1);
    v22 = v20;
    a6 = v37;
    MEMORY[0x23B800318](v22, -1, -1);

    v39[1](v16, v36);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v39[1](v16, v14);
  }
  v39 = (void (**)(char *, _QWORD))objc_retain(*(id *)(a6
                                                                + OBJC_IVAR____TtC22AudioAnalyticsExternal18BlobbyUploadHelper_blobbyUploader));
  v38 = sub_236C360D0();
  v23 = (void *)sub_236C360D0();
  v24 = (void *)sub_236C360D0();
  v25 = (_QWORD *)swift_allocObject();
  v26 = v40;
  v27 = a2;
  v28 = v41;
  v29 = v42;
  v25[2] = v40;
  v25[3] = v28;
  v25[4] = v27;
  v25[5] = a3;
  v25[6] = a4;
  v25[7] = a5;
  v25[8] = v29;
  aBlock[4] = (uint64_t)sub_236C07334;
  aBlock[5] = (uint64_t)v25;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_236C06E58;
  aBlock[3] = (uint64_t)&block_descriptor_1;
  v30 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = v26;
  swift_retain();
  swift_retain();
  swift_release();
  v33 = (void *)v38;
  v32 = v39;
  objc_msgSend(v39, sel_uploadFile_bucket_subfolder_withCompletion_, v38, v23, v24, v30);
  _Block_release(v30);

}

void sub_236C06A80(uint64_t a1, char a2, void *a3, NSObject *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  id v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a8;
  v17 = sub_236C35F50();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    os_unfair_lock_lock((os_unfair_lock_t)(a10 + 24));
    sub_236C06D80((_QWORD **)(a10 + 16), a6, a7, v39, a9);
    os_unfair_lock_unlock((os_unfair_lock_t)(a10 + 24));
    dispatch_group_leave(a4);
  }
  else
  {
    v38 = a6;
    v22 = a4;
    if (a3)
    {
      v34 = a4;
      v35 = v19;
      v36 = v18;
      v37 = a7;
      v23 = a3;
      sub_236C35EFC();
      v24 = a3;
      v25 = a3;
      v26 = sub_236C35F44();
      v27 = sub_236C36334();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = swift_slowAlloc();
        v33 = swift_slowAlloc();
        v41 = v33;
        *(_DWORD *)v28 = 136380931;
        v32[1] = v28 + 4;
        swift_getErrorValue();
        v29 = sub_236C36688();
        v40 = sub_236C0ED40(v29, v30, &v41);
        sub_236C363F4();
        swift_bridgeObjectRelease();

        *(_WORD *)(v28 + 12) = 2048;
        v40 = a1;
        sub_236C363F4();
        _os_log_impl(&dword_236BE1000, v26, v27, "Upload to blobby unsuccessful. { error=%{private}s, statusCode=%ld }", (uint8_t *)v28, 0x16u);
        v31 = v33;
        swift_arrayDestroy();
        MEMORY[0x23B800318](v31, -1, -1);
        MEMORY[0x23B800318](v28, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v36);
      a7 = v37;
      v22 = v34;
    }
    if (a1 == 503)
    {
      os_unfair_lock_lock((os_unfair_lock_t)(a5 + 24));
      sub_236C06D80((_QWORD **)(a5 + 16), v38, a7, v39, a9);
      os_unfair_lock_unlock((os_unfair_lock_t)(a5 + 24));
    }
    dispatch_group_leave(v22);
  }
}

uint64_t sub_236C06D80(_QWORD **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  uint64_t result;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;

  v10 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_236C1BFD8(0, v10[2] + 1, 1, v10);
    v10 = (_QWORD *)result;
  }
  v13 = v10[2];
  v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    result = (uint64_t)sub_236C1BFD8((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
    v10 = (_QWORD *)result;
  }
  v10[2] = v13 + 1;
  v14 = &v10[4 * v13];
  v14[4] = a2;
  v14[5] = a3;
  v14[6] = a4;
  v14[7] = a5;
  *a1 = v10;
  return result;
}

void sub_236C06E58(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void (*v7)(uint64_t, uint64_t, void *);
  id v8;

  v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  swift_retain();
  v8 = a4;
  v7(a2, a3, a4);
  swift_release();

}

unint64_t sub_236C06EC8()
{
  unint64_t result;

  result = sub_236C15634((uint64_t)&unk_25082E0B0);
  qword_2564478C8 = result;
  return result;
}

uint64_t BlobbyUploadHelper.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal18BlobbyUploadHelper_logger;
  v2 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t BlobbyUploadHelper.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal18BlobbyUploadHelper_logger;
  v2 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_236C06FB0()
{
  return type metadata accessor for BlobbyUploadHelper();
}

uint64_t type metadata accessor for BlobbyUploadHelper()
{
  uint64_t result;

  result = qword_256447910;
  if (!qword_256447910)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236C06FF4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_236C35F50();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BlobbyUploadHelper()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_236C0708C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  _QWORD v14[2];

  v1 = v0;
  v2 = sub_236C36364();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v2);
  v4 = sub_236C3637C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_236C35FEC();
  MEMORY[0x24BDAC7A8](v8);
  sub_236C082F8();
  sub_236C35FE0();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE5758], v4);
  v14[1] = MEMORY[0x24BEE4AF8];
  sub_236BE6C98(&qword_2542B3000, v3, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FE0);
  sub_236C08334();
  sub_236C36448();
  *(_QWORD *)(v0 + 16) = sub_236C363A0();
  sub_236C35EFC();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal18BlobbyUploadHelper_maxUploadAttempts) = 5;
  v9 = OBJC_IVAR____TtC22AudioAnalyticsExternal18BlobbyUploadHelper_blobbyUploader;
  if (qword_256447068 != -1)
    swift_once();
  v10 = objc_allocWithZone((Class)Uploader);
  swift_bridgeObjectRetain();
  v11 = (void *)sub_236C36040();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v10, sel_init_, v11);

  *(_QWORD *)(v1 + v9) = v12;
  return v1;
}

uint64_t sub_236C072F0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_236C07334(uint64_t a1, char a2, void *a3)
{
  uint64_t v3;

  sub_236C06A80(a1, a2, a3, *(NSObject **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64));
}

double sub_236C07364@<D0>(uint64_t *a1@<X8>)
{
  return sub_236C062A4(a1);
}

uint64_t sub_236C0737C(uint64_t result, double a2, double a3)
{
  double v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v6 = result;
  v7 = 0;
  result = MEMORY[0x23B800330](&v7, 8);
  if (v5 * ((double)(v7 & 0x1FFFFFFFFFFFFFLL) * 1.11022302e-16) + a2 == a3)
    return sub_236C0737C(v6, a2, a3);
  return result;
}

uint64_t sub_236C07424(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  unsigned int v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  id v20;
  void *v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37[2];

  v37[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = sub_236C35F50();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v34 - v9;
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v12 = (void *)sub_236C360D0();
  v37[0] = 0;
  v13 = objc_msgSend(v11, sel_removeItemAtPath_error_, v12, v37);

  if (v13)
  {
    v14 = v37[0];
    sub_236C35EFC();
    swift_bridgeObjectRetain_n();
    v15 = sub_236C35F44();
    v16 = sub_236C36328();
    if (os_log_type_enabled(v15, v16))
    {
      v35 = v4;
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = (void *)swift_slowAlloc();
      v37[0] = v18;
      *(_DWORD *)v17 = 136380675;
      swift_bridgeObjectRetain();
      v36 = sub_236C0ED40(a1, a2, (uint64_t *)v37);
      sub_236C363F4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_236BE1000, v15, v16, "Removed file. { fileToRemove=%{private}s }", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v18, -1, -1);
      MEMORY[0x23B800318](v17, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v35);
    }

    swift_bridgeObjectRelease_n();
    v32 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    v33 = v10;
  }
  else
  {
    v20 = v37[0];
    v21 = (void *)sub_236C35680();

    swift_willThrow();
    sub_236C35EFC();
    swift_bridgeObjectRetain();
    v22 = v21;
    swift_bridgeObjectRetain();
    v23 = v21;
    v24 = sub_236C35F44();
    v25 = sub_236C36334();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      v34 = v5;
      v28 = (_QWORD *)v27;
      v29 = (void *)swift_slowAlloc();
      v37[0] = v29;
      *(_DWORD *)v26 = 136380931;
      v35 = v4;
      swift_bridgeObjectRetain();
      v36 = sub_236C0ED40(a1, a2, (uint64_t *)v37);
      sub_236C363F4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2113;
      v30 = v21;
      v31 = _swift_stdlib_bridgeErrorToNSError();
      v36 = v31;
      sub_236C363F4();
      *v28 = v31;

      _os_log_impl(&dword_236BE1000, v24, v25, "Unable to delete file. { fileToRemove=%{private}s, error=%{private}@ }", (uint8_t *)v26, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2564474E8);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v28, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v29, -1, -1);
      MEMORY[0x23B800318](v26, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v8, v35);
    }

    swift_bridgeObjectRelease_n();
    v32 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    v33 = v8;
  }
  return v32(v33, v4);
}

BOOL sub_236C078BC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  unint64_t v20;
  char v21;
  id v22;
  void *v23;
  int v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v0 = sub_236C3586C();
  v30 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2564479F8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_236C357DC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v28 - v11;
  v13 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v14 = (void *)sub_236C360D0();
  *(_QWORD *)&v31 = 0;
  v15 = objc_msgSend(v13, sel_attributesOfItemAtPath_error_, v14, &v31);

  v16 = (void *)v31;
  if (!v15)
  {
    v22 = (id)v31;
    v23 = (void *)sub_236C35680();

    swift_willThrow();
    goto LABEL_7;
  }
  v29 = v0;
  type metadata accessor for FileAttributeKey(0);
  sub_236BE6C98(&qword_256447538, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_236C376BC);
  v17 = sub_236C3604C();
  v18 = v16;

  if (!v17)
  {
LABEL_7:
    v31 = 0u;
    v32 = 0u;
LABEL_8:
    sub_236BE6C14((uint64_t)&v31, &qword_256447738);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
LABEL_9:
    sub_236BE6C14((uint64_t)v5, &qword_2564479F8);
    return 0;
  }
  if (*(_QWORD *)(v17 + 16))
  {
    v19 = (id)*MEMORY[0x24BDD0C58];
    v20 = sub_236C005D0((uint64_t)v19);
    if ((v21 & 1) != 0)
    {
      sub_236BED454(*(_QWORD *)(v17 + 56) + 32 * v20, (uint64_t)&v31);
    }
    else
    {
      v31 = 0u;
      v32 = 0u;
    }

  }
  else
  {
    v31 = 0u;
    v32 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v32 + 1))
    goto LABEL_8;
  v25 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, v25 ^ 1u, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    goto LABEL_9;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
  sub_236C35848();
  sub_236C357C4();
  v26 = sub_236C3583C();
  v27 = *(void (**)(char *, uint64_t))(v7 + 8);
  v27(v10, v6);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v2, v29);
  v27(v12, v6);
  return (v26 & 1) == 0;
}

BOOL sub_236C07C44()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  unint64_t v14;
  char v15;
  id v16;
  void *v17;
  int v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  _BYTE v26[16];
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2564479F8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = &v26[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = sub_236C357DC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v8 = (void *)sub_236C360D0();
  *(_QWORD *)&v27 = 0;
  v9 = objc_msgSend(v7, sel_attributesOfItemAtPath_error_, v8, &v27);

  v10 = (void *)v27;
  if (!v9)
  {
    v16 = (id)v27;
    v17 = (void *)sub_236C35680();

    swift_willThrow();
    goto LABEL_7;
  }
  type metadata accessor for FileAttributeKey(0);
  sub_236BE6C98(&qword_256447538, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_236C376BC);
  v11 = sub_236C3604C();
  v12 = v10;

  if (!v11)
  {
LABEL_7:
    v27 = 0u;
    v28 = 0u;
LABEL_8:
    sub_236BE6C14((uint64_t)&v27, &qword_256447738);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
LABEL_9:
    sub_236BE6C14((uint64_t)v2, &qword_2564479F8);
    return 1;
  }
  if (*(_QWORD *)(v11 + 16))
  {
    v13 = (id)*MEMORY[0x24BDD0C58];
    v14 = sub_236C005D0((uint64_t)v13);
    if ((v15 & 1) != 0)
    {
      sub_236BED454(*(_QWORD *)(v11 + 56) + 32 * v14, (uint64_t)&v27);
    }
    else
    {
      v27 = 0u;
      v28 = 0u;
    }

  }
  else
  {
    v27 = 0u;
    v28 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v28 + 1))
    goto LABEL_8;
  v19 = swift_dynamicCast();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, v19 ^ 1u, 1, v3);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    goto LABEL_9;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v6, v2, v3);
  sub_236C36280();
  v21 = v20;
  sub_236C357B8();
  v23 = v21 - v22;
  sub_236C36298();
  v25 = v24;
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  return v23 >= v25;
}

unint64_t sub_236C07F54()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t result;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v0 = sub_236C357DC();
  v33 = *(_QWORD *)(v0 - 8);
  v34 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_236C35698();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2564479E8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_236C35728();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDCD7A0], v3);
  swift_bridgeObjectRetain();
  sub_236C35704();
  v14 = sub_236C356BC();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v37 = v14;
  v38 = v16;
  v35 = 95;
  v36 = 0xE100000000000000;
  sub_236BED490();
  v17 = MEMORY[0x24BEE0D00];
  v18 = (_QWORD *)sub_236C36418();
  swift_bridgeObjectRelease();
  if (v18[2] != 3)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v20 = (void *)sub_236C360D0();
  objc_msgSend(v19, sel_setDateFormat_, v20);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2564474F0);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_236C37720;
  *(_QWORD *)(v21 + 56) = v17;
  result = sub_236C082B4();
  *(_QWORD *)(v21 + 64) = result;
  v23 = v18[2];
  if (v23)
  {
    v24 = result;
    result = v18[5];
    *(_QWORD *)(v21 + 32) = v18[4];
    *(_QWORD *)(v21 + 40) = result;
    *(_QWORD *)(v21 + 96) = v17;
    *(_QWORD *)(v21 + 104) = v24;
    if (v23 != 1)
    {
      v25 = v18[6];
      v26 = v18[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 72) = v25;
      *(_QWORD *)(v21 + 80) = v26;
      sub_236C357D0();
      v27 = (void *)sub_236C357A0();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v2, v34);
      v28 = objc_msgSend(v19, sel_stringFromDate_, v27);

      v29 = sub_236C360F4();
      v31 = v30;

      *(_QWORD *)(v21 + 136) = v17;
      *(_QWORD *)(v21 + 144) = v24;
      *(_QWORD *)(v21 + 112) = v29;
      *(_QWORD *)(v21 + 120) = v31;
      v32 = sub_236C3610C();

      return v32;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_236C082B4()
{
  unint64_t result;

  result = qword_2564479F0;
  if (!qword_2564479F0)
  {
    result = MEMORY[0x23B80027C](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2564479F0);
  }
  return result;
}

unint64_t sub_236C082F8()
{
  unint64_t result;

  result = qword_2542B3008;
  if (!qword_2542B3008)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2542B3008);
  }
  return result;
}

unint64_t sub_236C08334()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542B2FE8;
  if (!qword_2542B2FE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542B2FE0);
    result = MEMORY[0x23B80027C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2542B2FE8);
  }
  return result;
}

uint64_t sub_236C08380()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;

  v1 = v0;
  v2 = *(_QWORD *)(sub_236C0999C((char *)(v0 + 58), 4) + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v21 = MEMORY[0x24BEE4AF8];
    sub_236BF2240(0, v2, 0);
    v4 = 0;
    do
    {
      v5 = sub_236C3664C();
      v7 = v6;
      v9 = *(_QWORD *)(v21 + 16);
      v8 = *(_QWORD *)(v21 + 24);
      if (v9 >= v8 >> 1)
        sub_236BF2240(v8 > 1, v9 + 1, 1);
      ++v4;
      *(_QWORD *)(v21 + 16) = v9 + 1;
      v10 = v21 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
    }
    while (v2 != v4);
    swift_release();
    v1 = v0;
    v3 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FD0);
  sub_236BED514();
  sub_236C360B8();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(sub_236C0999C((char *)(v1 + 21), 32) + 16);
  if (v11)
  {
    sub_236BF2240(0, v11, 0);
    v12 = 0;
    do
    {
      v13 = sub_236C3664C();
      v15 = v14;
      v17 = *(_QWORD *)(v3 + 16);
      v16 = *(_QWORD *)(v3 + 24);
      if (v17 >= v16 >> 1)
        sub_236BF2240(v16 > 1, v17 + 1, 1);
      ++v12;
      *(_QWORD *)(v3 + 16) = v17 + 1;
      v18 = v3 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v13;
      *(_QWORD *)(v18 + 40) = v15;
    }
    while (v11 != v12);
    swift_release();
    v1 = v0;
  }
  else
  {
    swift_release();
  }
  sub_236C360B8();
  swift_bridgeObjectRelease();
  WORD4(v20) = 0;
  sub_236C364C0();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  *(_QWORD *)&v20 = *(unsigned __int16 *)(v1 + 68);
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  return *(_QWORD *)((char *)&v20 + 2);
}

id BMDeviceAdaptiveVolume.init(withNonDrcPayload:andDrcPayload:sessionInfo:serialNumber:drcAVClientTimestamp:routedDrcGain:)(uint64_t a1, double a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 255);
  v31 = (void *)sub_236C36694();
  v30 = (void *)sub_236C36694();
  v29 = (void *)sub_236C36694();
  v28 = (void *)sub_236C36694();
  v27 = (void *)sub_236C36694();
  v26 = (void *)sub_236C36694();
  v25 = (void *)sub_236C36694();
  v24 = (void *)sub_236C36694();
  v23 = (void *)sub_236C36694();
  v22 = (void *)sub_236C36694();
  v67 = (void *)sub_236C36694();
  v66 = (void *)sub_236C36694();
  v65 = (void *)sub_236C36694();
  v64 = (void *)sub_236C36694();
  v63 = (void *)sub_236C36694();
  v62 = (void *)sub_236C36694();
  v61 = (void *)sub_236C36694();
  v60 = (void *)sub_236C36694();
  v59 = (void *)sub_236C36694();
  v58 = (void *)sub_236C36694();
  v57 = (void *)sub_236C36694();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FD0);
  sub_236BED514();
  sub_236C360B8();
  swift_bridgeObjectRelease();
  v5 = sub_236C360D0();
  swift_bridgeObjectRelease();
  v56 = (void *)v5;
  v32 = v4;
  if ((sub_236C35A94() & 1) != 0)
    v33 = (void *)sub_236C360D0();
  else
    v33 = 0;
  swift_bridgeObjectRelease();
  v55 = (void *)sub_236C36694();
  v54 = (void *)sub_236C36694();
  v53 = (void *)sub_236C36694();
  v47 = (void *)sub_236C36694();
  v46 = (void *)sub_236C36694();
  v44 = (void *)sub_236C36694();
  v52 = (void *)sub_236C36694();
  v51 = (void *)sub_236C36694();
  v50 = (void *)sub_236C36694();
  v40 = (void *)sub_236C36694();
  v6 = sub_236C0999C((char *)(a1 + 21), 32);
  sub_236C098F8(v6);
  swift_release();
  sub_236C09ABC();
  v49 = (void *)sub_236C36208();
  swift_bridgeObjectRelease();
  v48 = (void *)sub_236C36694();
  v45 = (void *)sub_236C36694();
  v43 = (void *)sub_236C36694();
  v42 = (void *)sub_236C36694();
  v41 = (void *)sub_236C36694();
  v39 = (void *)sub_236C36694();
  v38 = (void *)sub_236C36694();
  v37 = (void *)sub_236C36694();
  v36 = (void *)sub_236C36694();
  v7 = sub_236C0999C((char *)(a1 + 58), 4);
  sub_236C098F8(v7);
  swift_release();
  v8 = (void *)sub_236C36208();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_236C36694();
  v35 = (void *)sub_236C36694();
  v34 = (void *)sub_236C36694();
  v10 = (void *)sub_236C36694();
  v11 = (void *)sub_236C36694();
  v12 = (void *)sub_236C36694();
  v13 = sub_236C366D0();
  v14 = (void *)v13;
  if (a2 == 0.0)
  {
    v15 = v4;
    v16 = v15;
    v17 = v15;
  }
  else
  {
    v14 = (void *)v13;
    v17 = (void *)sub_236C36694();
    v15 = (id)sub_236C36694();
    v16 = (void *)sub_236C36694();
  }
  v18 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v20 = (void *)sub_236C36268();
  v21 = objc_msgSend(v18, sel_initWithControllerVersion_refMicdBA_refMicdBC_drumdBA_drumdBK_drumdBAPredicted_downlinkdBA_currentVolumePrct_lastUserVolChangeType_headphoneMode_streamType_windSpeechAggressorFlag_volumeChangeFlag_speechPresenceProbability_personalizationParamSnr_personalizationParamMistakes_lastEMediadBA_lastVolMediaPrct_lastETelephonydBA_lastVolTelephonyPrct_lastESiridBA_lastVolSiriPrct_smoothEae_desiredDeltaE_predVolMediaPrct_predVolTelephonyPrct_predVolSiriPrct_onStartPredictionFlag_guardrailsAvoidFlag_minMaxCutFlag_manualVolumeChangeFlag_bigWindowSize_smallWindowSize_activeAppName_activeAirpodsSerialNumber_anchorVol_anchorEnv_personalizationCoeff_unsignedPredVolMediaPrct_unsignedPredVolTelephonyPrct_unsignedPredVolSiriPrct_singleBudFlag_cdEngagementFlag_activeStreamFlag_pvFeatureEnableFlag_envSpectralData32B_windStrength_windProb_mediaType_sourceActivity_budActivity_location_locationType_focusMode_streamingAppBundleId_noiseType4B_instdBA_instdBC_nonCAListeningMode_fit_fixedAutoAncGain_adjustedAutoAncGain_timestamp_DRCenablementBit_DRCwindFlag_DRCappSelfVoiceFlag_drumDRC_routedDRCGain_, v31, v30, v29, v28, 0, v27, v26, v25, v24, v23, v22, v67, v66, v65, 0, 0, 0,
          v64,
          0,
          0,
          0,
          v63,
          v62,
          0,
          v61,
          v60,
          v59,
          v58,
          0,
          0,
          v57,
          0,
          0,
          v56,
          v33,
          v55,
          v54,
          v53,
          v47,
          v46,
          v44,
          v52,
          v51,
          v50,
          v40,
          v49,
          v48,
          v45,
          v43,
          v42,
          v41,
          v39,
          v38,
          v37,
          v36,
          v8,
          v9,
          v35,
          v34,
          v10,
          v11);

  return v21;
}

uint64_t sub_236C098F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v5 = MEMORY[0x24BEE4AF8];
    sub_236C36508();
    v4 = a1 + 32;
    do
    {
      ++v4;
      sub_236C36694();
      sub_236C364F0();
      sub_236C36514();
      sub_236C36520();
      sub_236C364FC();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_236C0999C(char *a1, int64_t a2)
{
  char *v4;
  size_t v5;
  char *v6;
  uint64_t result;

  if (!a2)
    return MEMORY[0x24BEE4AF8];
  if (a2 > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542B30E8);
    v4 = (char *)swift_allocObject();
    v5 = _swift_stdlib_malloc_size(v4);
    *((_QWORD *)v4 + 2) = a2;
    *((_QWORD *)v4 + 3) = 2 * v5 - 64;
    v6 = v4 + 32;
    if (&v4[a2 + 32] <= a1 || v6 >= &a1[a2])
    {
      memcpy(v6, a1, a2);
      return (uint64_t)v4;
    }
  }
  result = sub_236C36574();
  __break(1u);
  return result;
}

unint64_t sub_236C09ABC()
{
  unint64_t result;

  result = qword_2542B3028;
  if (!qword_2542B3028)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2542B3028);
  }
  return result;
}

uint64_t sub_236C09AF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447A00);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * ((uint64_t)(v4 - 32) / 216);
  v5 = sub_236C09E44(&v7, (char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_236C0A290();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_236C09BF0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B30B0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_236C0A094((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_236C0A290();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_236C09CD4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    v8 = 2 * v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542B30B0);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 17;
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_236C36574();
  __break(1u);
  return result;
}

_QWORD *sub_236C09E44(_QWORD *result, char *__dst, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[13];
  uint64_t v33;

  v5 = result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!__dst)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = __dst;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v31 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_OWORD *)(*(_QWORD *)(a4 + 48) + 216 * v16);
    v21 = v20[1];
    v32[0] = *v20;
    v32[1] = v21;
    v22 = v20[5];
    v24 = v20[2];
    v23 = v20[3];
    v32[4] = v20[4];
    v32[5] = v22;
    v32[2] = v24;
    v32[3] = v23;
    v25 = v20[9];
    v27 = v20[6];
    v26 = v20[7];
    v32[8] = v20[8];
    v32[9] = v25;
    v32[6] = v27;
    v32[7] = v26;
    v29 = v20[11];
    v28 = v20[12];
    v30 = v20[10];
    v33 = *((_QWORD *)v20 + 26);
    v32[11] = v29;
    v32[12] = v28;
    v32[10] = v30;
    memmove(v11, v20, 0xD8uLL);
    if (v13 == v10)
    {
      sub_236BF99A0((uint64_t)v32);
      goto LABEL_38;
    }
    v11 += 216;
    result = (_QWORD *)sub_236BF99A0((uint64_t)v32);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v31;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_236C0A094(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_236C0A290()
{
  return swift_release();
}

uint64_t CoreAnalyticsWorker.__allocating_init(with:)(__int128 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v2 = sub_236C35614();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_allocObject();
  *(_BYTE *)(v6 + 16) = 0;
  v7 = v6 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_workerConfig;
  v8 = *MEMORY[0x24BE09E90];
  v9 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = objc_msgSend((id)objc_opt_self(), sel_alphanumericCharacterSet);
  sub_236C355FC();

  sub_236C35608();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_236BF28D8(a1, v6 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_session);
  return v6;
}

uint64_t CoreAnalyticsWorker.init(with:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v13;

  v2 = v1;
  v4 = sub_236C35614();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v2 + 16) = 0;
  v8 = v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_workerConfig;
  v9 = *MEMORY[0x24BE09E90];
  v10 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  v11 = objc_msgSend((id)objc_opt_self(), sel_alphanumericCharacterSet);
  sub_236C355FC();

  sub_236C35608();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_236BF28D8(a1, v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_session);
  return v2;
}

Swift::Bool __swiftcall CoreAnalyticsWorker.start()()
{
  uint64_t v0;

  swift_beginAccess();
  *(_BYTE *)(v0 + 16) = 1;
  return 1;
}

id sub_236C0A524(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_236BE7428(0, (unint64_t *)&qword_2542B3030);
    v4 = (void *)sub_236C36040();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

Swift::Void __swiftcall CoreAnalyticsWorker.stop()()
{
  uint64_t v0;

  swift_beginAccess();
  *(_BYTE *)(v0 + 16) = 0;
}

uint64_t CoreAnalyticsWorker.isStarted.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t CoreAnalyticsWorker.workerConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CoreAnalyticsWorker.workerConfig.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*CoreAnalyticsWorker.workerConfig.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t CoreAnalyticsWorker.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_workerConfig;
  v2 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_session);
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_nonAlphaNumerics;
  v4 = sub_236C35614();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t CoreAnalyticsWorker.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_workerConfig;
  v2 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_session);
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal19CoreAnalyticsWorker_nonAlphaNumerics;
  v4 = sub_236C35614();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_236C0A820()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = 0;
  return result;
}

_OWORD *sub_236C0A85C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_236BEE010(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_236BECFF4(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_236C13C08();
      goto LABEL_7;
    }
    sub_236C12E3C(v15, a4 & 1);
    v21 = sub_236BEE010(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_236C10B48(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_236C3667C();
  __break(1u);
  return result;
}

uint64_t sub_236C0A98C(uint64_t a1, __int16 a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_236BE3E64(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_236C357DC();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_236C10BB0(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_236C13DEC();
      goto LABEL_7;
    }
    sub_236C13138(v13, a3 & 1);
    v20 = sub_236BE3E64(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_236C10BB0(v10, a2, a1, v16);
    }
  }
  type metadata accessor for AudioServiceType(0);
  result = sub_236C3667C();
  __break(1u);
  return result;
}

uint64_t sub_236C0AAB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_236BEE010(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = sub_236C3592C();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_236BEE20C();
      goto LABEL_7;
    }
    sub_236BEE744(v15, a4 & 1);
    v22 = sub_236BEE010(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_236C10C3C(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_236C3667C();
  __break(1u);
  return result;
}

uint64_t sub_236C0ABEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_236BEE010(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_236C141D0();
      goto LABEL_7;
    }
    sub_236C13744(v15, a4 & 1);
    v21 = sub_236BEE010(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_236BE9770(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_236C3667C();
  __break(1u);
  return result;
}

uint64_t sub_236C0AD18()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_236C0AD3C()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_236C0AD48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542B1670;
  if (!qword_2542B1670)
  {
    v1 = type metadata accessor for CoreAnalyticsWorker();
    result = MEMORY[0x23B80027C](&protocol conformance descriptor for CoreAnalyticsWorker, v1);
    atomic_store(result, (unint64_t *)&qword_2542B1670);
  }
  return result;
}

uint64_t type metadata accessor for CoreAnalyticsWorker()
{
  uint64_t result;

  result = qword_2542B14F8;
  if (!qword_2542B14F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236C0ADCC()
{
  return type metadata accessor for CoreAnalyticsWorker();
}

uint64_t sub_236C0ADD4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_236C35CB0();
  if (v1 <= 0x3F)
  {
    result = sub_236C35614();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CoreAnalyticsWorker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoreAnalyticsWorker.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_236C0AE84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for DriverSnapshotManager();
  v0 = swift_allocObject();
  *(_WORD *)(v0 + 16) = 0;
  v1 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = v1;
  sub_236C362D4();
  *(_QWORD *)(v0 + 40) = v2;
  result = sub_236C35EF0();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DriverSnapshotManager_subscription) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DriverSnapshotManager_subbedChannelsManaged) = 0;
  qword_2542B4288 = v0;
  return result;
}

uint64_t sub_236C0AF04()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 16) == 1)
    return IOReportCreateSamples();
  else
    return 0;
}

unint64_t sub_236C0AF4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint8_t *v21;
  uint8_t *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint8_t *v28;
  uint8_t *v29;
  uint64_t SamplesDelta;
  void *v31;
  _QWORD *v32;
  void *v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  unint64_t v49;
  unint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  id v63[2];
  id Samples;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t aBlock[6];
  uint64_t v77;
  uint64_t v78;

  v2 = v1;
  v70 = a1;
  v78 = *MEMORY[0x24BDAC8D0];
  v3 = sub_236C35DB8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v74 = (char *)v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v72 = (char *)v63 - v7;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1650);
  v66 = *(_QWORD *)(v69 - 8);
  v8 = MEMORY[0x24BDAC7A8](v69);
  v10 = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v73 = (uint64_t)v63 - v11;
  v12 = swift_allocObject();
  v13 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v12 + 16) = MEMORY[0x24BEE4B00];
  v65 = v12 + 16;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v13;
  v67 = v14 + 2;
  v15 = swift_allocObject();
  v71 = v15;
  *(_QWORD *)(v15 + 16) = v13;
  v68 = v15 + 16;
  v77 = 0;
  v16 = sub_236C35F44();
  v17 = sub_236C36328();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = v12;
    v19 = v14;
    v20 = v2;
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_236BE1000, v16, v17, "getting latest samples", v21, 2u);
    v22 = v21;
    v2 = v20;
    v14 = v19;
    v12 = v18;
    MEMORY[0x23B800318](v22, -1, -1);
  }

  if (*(_BYTE *)(v2 + 16) != 1 || (Samples = (id)IOReportCreateSamples()) == 0)
  {
    v51 = sub_236C35F44();
    v52 = sub_236C36334();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v53 = 0;
      _os_log_impl(&dword_236BE1000, v51, v52, "No samples returned. Giving up.", v53, 2u);
      MEMORY[0x23B800318](v53, -1, -1);
    }

    swift_release();
    swift_release();
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  v23 = sub_236C35F44();
  v24 = sub_236C36328();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = v12;
    v26 = v14;
    v27 = v2;
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_236BE1000, v23, v24, "done getting latest samples", v28, 2u);
    v29 = v28;
    v2 = v27;
    v14 = v26;
    v12 = v25;
    MEMORY[0x23B800318](v29, -1, -1);
  }

  SamplesDelta = IOReportCreateSamplesDelta();
  if (!SamplesDelta)
  {
    v55 = (void *)v77;
    if (v77)
    {
      aBlock[0] = v77;
      type metadata accessor for CFError(0);
      sub_236BE6C98(&qword_256447A08, (uint64_t (*)(uint64_t))type metadata accessor for CFError, MEMORY[0x24BDCFD90]);
      v56 = sub_236C36688();
      v58 = v57;

      swift_bridgeObjectRetain();
      v59 = sub_236C35F44();
      v60 = sub_236C36334();
      if (os_log_type_enabled(v59, v60))
      {
        v61 = (uint8_t *)swift_slowAlloc();
        v62 = swift_slowAlloc();
        aBlock[0] = v62;
        *(_DWORD *)v61 = 136380675;
        swift_bridgeObjectRetain();
        v75 = sub_236C0ED40(v56, v58, aBlock);
        sub_236C363F4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_236BE1000, v59, v60, "Delta failed. { error=%{private}s }", v61, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B800318](v62, -1, -1);
        MEMORY[0x23B800318](v61, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

    }
    swift_release();
    swift_release();
    swift_release();

    return MEMORY[0x24BEE4AF8];
  }
  v31 = (void *)SamplesDelta;
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = v14;
  v32[3] = v12;
  v63[1] = v14;
  v32[4] = v71;
  v32[5] = v2;
  aBlock[4] = (uint64_t)sub_236C0D154;
  aBlock[5] = (uint64_t)v32;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_236C0BAF0;
  aBlock[3] = (uint64_t)&block_descriptor_3;
  v33 = _Block_copy(aBlock);
  v34 = v31;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  IOReportIterate();
  _Block_release(v33);
  v63[0] = v34;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256447A10);
  v35 = *(_QWORD *)(v66 + 72);
  v36 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_236C37720;
  v66 = v37;
  v38 = v37 + v36;
  swift_beginAccess();
  v70 = v12;
  v39 = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRetain();
  sub_236C0C854(v39, 0xD000000000000011, 0x8000000236C3A480, v38);
  swift_bridgeObjectRelease();
  v40 = v35;
  swift_beginAccess();
  v41 = swift_bridgeObjectRetain();
  sub_236C0C854(v41, 0xD000000000000014, 0x8000000236C3A4A0, v38 + v35);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v42 = swift_bridgeObjectRetain();
  sub_236C0C854(v42, 0xD000000000000010, 0x8000000236C3A4C0, v38 + 2 * v35);
  swift_bridgeObjectRelease();
  v43 = MEMORY[0x24BEE4AF8];
  v44 = 3;
  v68 = v38;
  v45 = v38;
  do
  {
    v46 = v73;
    sub_236C0D160(v45, v73);
    sub_236C0D1A8(v46, (uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
    {
      sub_236BE6C14((uint64_t)v10, &qword_2542B1650);
    }
    else
    {
      v47 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
      v48 = v72;
      v47(v72, v10, v3);
      v47(v74, v48, v3);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v43 = sub_236C1C20C(0, *(_QWORD *)(v43 + 16) + 1, 1, v43);
      v50 = *(_QWORD *)(v43 + 16);
      v49 = *(_QWORD *)(v43 + 24);
      if (v50 >= v49 >> 1)
        v43 = sub_236C1C20C(v49 > 1, v50 + 1, 1, v43);
      *(_QWORD *)(v43 + 16) = v50 + 1;
      v47((char *)(v43+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v50), v74, v3);
    }
    v45 += v40;
    --v44;
  }
  while (v44);

  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_release();
  swift_release();
  swift_release();
  return v43;
}

uint64_t sub_236C0B844(void *a1, uint64_t a2)
{
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  const char *v7;
  uint64_t IntegerValue;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];

  if (!a1)
    return 16;
  v3 = a1;
  switch(IOReportChannelGetFormat())
  {
    case 0u:
      v3 = v3;
      v4 = sub_236C35F44();
      v5 = sub_236C36328();
      if (!os_log_type_enabled(v4, v5))
        goto LABEL_15;
      v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v6 = 16777472;
      LOBYTE(v13[0]) = IOReportChannelGetFormat();
      sub_236C363F4();

      v7 = "Dropping sample. { format=%hhu }";
      goto LABEL_14;
    case 1u:
      swift_beginAccess();
      IntegerValue = IOReportSimpleGetIntegerValue();
      if (IntegerValue >= 1)
      {
        v10 = IntegerValue;
        v11 = sub_236C0D4C0((uint64_t)v3, 0x656C706D6953, 0xE600000000000000);
        v13[3] = MEMORY[0x24BEE4008];
        v13[0] = v10;
        sub_236C2479C((uint64_t)v13, v11, v12);
      }
      goto LABEL_11;
    case 2u:
      swift_beginAccess();
      sub_236C0DD60((uint64_t)v3);
      goto LABEL_11;
    case 3u:
      swift_beginAccess();
      sub_236C0D7CC((uint64_t)v3, (uint64_t *)(a2 + 16));
LABEL_11:
      swift_endAccess();
      break;
    default:
      v3 = v3;
      v4 = sub_236C35F44();
      v5 = sub_236C36334();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v6 = 16777472;
        LOBYTE(v13[0]) = IOReportChannelGetFormat();
        sub_236C363F4();

        v7 = "IOReportingFormat not supported. { format=%hhu }";
LABEL_14:
        _os_log_impl(&dword_236BE1000, v4, v5, v7, v6, 5u);
        MEMORY[0x23B800318](v6, -1, -1);

      }
      else
      {
LABEL_15:

      }
      break;
  }

  return 0;
}

uint64_t sub_236C0BAF0(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void *);
  id v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = v3(a2);
  swift_release();

  return v5;
}

uint64_t sub_236C0BB44()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t aBlock[6];
  uint64_t v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  if (!*(_QWORD *)(v0 + 24))
    goto LABEL_7;
  swift_retain();
  v1 = sub_236C35CD4();
  swift_release();
  if (!v1)
    goto LABEL_7;
  if (!*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_7:
    v5 = sub_236C35F44();
    v6 = sub_236C36328();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_236BE1000, v5, v6, "No ioReportingConfigs found.", v7, 2u);
      MEMORY[0x23B800318](v7, -1, -1);
    }

    return 0;
  }
  swift_bridgeObjectRetain();
  v2 = sub_236C35F44();
  v3 = sub_236C36328();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 134217984;
    aBlock[0] = *(_QWORD *)(v1 + 16);
    sub_236C363F4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_236BE1000, v2, v3, "Loading ioReportingConfigs. { count=%ld }", v4, 0xCu);
    MEMORY[0x23B800318](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  v38 = 0;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v1;
  *(_QWORD *)(v10 + 24) = v9;
  aBlock[4] = (uint64_t)sub_236C0E06C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_236C0BAF0;
  aBlock[3] = (uint64_t)&block_descriptor_14;
  v11 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v12 = (void *)IOReportCopyFilteredChannels();
  _Block_release(v11);
  if (!v12)
  {
    v16 = (void *)v38;
    if (v38)
    {
      aBlock[0] = v38;
      type metadata accessor for CFError(0);
      sub_236BE6C98(&qword_256447A08, (uint64_t (*)(uint64_t))type metadata accessor for CFError, MEMORY[0x24BDCFD90]);
      v17 = sub_236C36688();
      v19 = v18;

    }
    else
    {
      v17 = 0x6E776F6E6B6E75;
      v19 = 0xE700000000000000;
    }
    swift_bridgeObjectRetain();
    v24 = sub_236C35F44();
    v25 = sub_236C36334();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      aBlock[0] = v27;
      *(_DWORD *)v26 = 136380675;
      swift_bridgeObjectRetain();
      v36 = sub_236C0ED40(v17, v19, aBlock);
      sub_236C363F4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_236BE1000, v24, v25, "Unable to retrieve filtered channels. { err=%{private}s }", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v27, -1, -1);
      MEMORY[0x23B800318](v26, -1, -1);
      swift_release();
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease_n();
    }

    goto LABEL_33;
  }
  swift_retain();
  v13 = sub_236C35F44();
  v14 = sub_236C36328();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v15 = 134217984;
    swift_beginAccess();
    v36 = *(_QWORD *)(v9 + 16);
    sub_236C363F4();
    swift_release();
    _os_log_impl(&dword_236BE1000, v13, v14, "IOReporting channels found. { count=%ld }", v15, 0xCu);
    MEMORY[0x23B800318](v15, -1, -1);
  }
  else
  {
    swift_release();
  }

  v36 = 0;
  if (!IOReportCreateSubscription())
  {
    v20 = (void *)v38;
    if (v38)
    {
      v35 = v38;
      type metadata accessor for CFError(0);
      sub_236BE6C98(&qword_256447A08, (uint64_t (*)(uint64_t))type metadata accessor for CFError, MEMORY[0x24BDCFD90]);
      v21 = sub_236C36688();
      v23 = v22;

    }
    else
    {
      v21 = 0x6E776F6E6B6E75;
      v23 = 0xE700000000000000;
    }
    swift_bridgeObjectRetain();
    v31 = sub_236C35F44();
    v32 = sub_236C36334();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v35 = v34;
      *(_DWORD *)v33 = 136380675;
      swift_bridgeObjectRetain();
      sub_236C0ED40(v21, v23, &v35);
      sub_236C363F4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_236BE1000, v31, v32, "Unable to subscribe to desired channels. { err=%{private}s }", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v34, -1, -1);
      MEMORY[0x23B800318](v33, -1, -1);
      swift_release();

    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease_n();

    }
LABEL_33:
    swift_release();
    return 0;
  }
  v28 = sub_236C35F44();
  v29 = sub_236C36334();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v30 = 0;
    _os_log_impl(&dword_236BE1000, v28, v29, "Unable to subscribe to desired channels: list of subscribed channels is empty.", v30, 2u);
    MEMORY[0x23B800318](v30, -1, -1);
  }

  swift_release();
  swift_release();

  return 0;
}

uint64_t sub_236C0C388(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *Group;
  id v18;
  uint64_t v19;
  uint64_t result;
  void *SubGroup;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  id v42;
  uint64_t v43;
  int v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v6 = sub_236C35BE4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v41 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v41 - v14;
  if (!a1)
    return 16;
  v16 = a1;
  Group = (void *)IOReportChannelGetGroup();
  if (Group)
  {
    v18 = Group;
    v46 = sub_236C360F4();
    v48 = v19;

  }
  else
  {
    v46 = 0;
    v48 = 0;
  }
  SubGroup = (void *)IOReportChannelGetSubGroup();
  if (!SubGroup)
  {
    v47 = 0;
    v49 = 0;
    v25 = *(_QWORD *)(a2 + 16);
    if (v25)
      goto LABEL_8;
LABEL_37:

    swift_bridgeObjectRelease();
LABEL_39:
    swift_bridgeObjectRelease();
    return 16;
  }
  v22 = v16;
  v23 = SubGroup;
  v47 = sub_236C360F4();
  v49 = v24;

  v16 = v22;
  v25 = *(_QWORD *)(a2 + 16);
  if (!v25)
    goto LABEL_37;
LABEL_8:
  v41 = (_QWORD *)(a3 + 16);
  v42 = v16;
  v26 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v50 = *(_QWORD *)(v7 + 72);
  v43 = a2;
  swift_bridgeObjectRetain();
  v51 = v7;
  v45 = v10;
  while (1)
  {
    sub_236C35BCC();
    v29 = v28;
    swift_bridgeObjectRelease();
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v30(v15, v26, v6);
    if (!v29)
    {
      v34 = *(void (**)(char *, uint64_t))(v7 + 8);
      v34(v15, v6);
      goto LABEL_18;
    }
    v31 = sub_236C35BCC();
    v33 = v32;
    if (!v48)
    {
      v34 = *(void (**)(char *, uint64_t))(v7 + 8);
      v34(v15, v6);
      if (v33)
      {
        swift_bridgeObjectRelease();
LABEL_32:
        v30(v13, v26, v6);
LABEL_33:
        v34(v13, v6);
        goto LABEL_10;
      }
      goto LABEL_18;
    }
    if (!v32)
    {
      v34 = *(void (**)(char *, uint64_t))(v7 + 8);
      v34(v15, v6);
      goto LABEL_32;
    }
    if (v46 == v31 && v48 == v32)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v34 = *(void (**)(char *, uint64_t))(v7 + 8);
      v34(v15, v6);
      swift_bridgeObjectRelease();
      v10 = v45;
LABEL_18:
      v30(v13, v26, v6);
      goto LABEL_19;
    }
    v44 = sub_236C36658();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v34 = *(void (**)(char *, uint64_t))(v7 + 8);
    v34(v15, v6);
    swift_bridgeObjectRelease();
    v30(v13, v26, v6);
    v10 = v45;
    if ((v44 & 1) == 0)
      goto LABEL_33;
LABEL_19:
    sub_236C35BD8();
    v36 = v35;
    swift_bridgeObjectRelease();
    v30(v10, (uint64_t)v13, v6);
    if (!v36)
      break;
    v37 = sub_236C35BD8();
    v39 = v38;
    if (!v49)
    {
      v34(v10, v6);
      v34(v13, v6);
      if (!v39)
        goto LABEL_41;
      goto LABEL_30;
    }
    if (!v38)
    {
      swift_bridgeObjectRetain();
      v34(v10, v6);
      v34(v13, v6);
LABEL_30:
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    if (v47 == v37 && v49 == v38)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v34(v10, v6);
      v34(v13, v6);
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    v27 = sub_236C36658();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v34(v10, v6);
    v34(v13, v6);
    swift_bridgeObjectRelease();
    if ((v27 & 1) != 0)
      goto LABEL_41;
LABEL_10:
    v7 = v51;
    v26 += v50;
    if (!--v25)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_39;
    }
  }
  v34(v10, v6);
  v34(v13, v6);
LABEL_41:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v40 = v41;
  result = swift_beginAccess();
  if (__OFADD__(*v40, 1))
  {
    __break(1u);
  }
  else
  {
    result = 0;
    ++*v40;
  }
  return result;
}

uint64_t sub_236C0C854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B14F0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    if (sub_236C36088())
    {
      v11 = sub_236C35D58();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
      sub_236C35D64();
      v12 = sub_236C35DB8();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a4, 0, 1, v12);
    }
    else
    {
      swift_bridgeObjectRetain();
      v15 = MEMORY[0x24BEE4AD8] + 8;
      v16 = sub_236C36058();
      v18 = v17;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v19 = sub_236C35F44();
      v20 = sub_236C36334();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc();
        v22 = swift_slowAlloc();
        v26 = v22;
        *(_DWORD *)v21 = 136380931;
        v24[1] = v15;
        swift_bridgeObjectRetain();
        v25 = sub_236C0ED40(a2, a3, &v26);
        sub_236C363F4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v21 + 12) = 2081;
        swift_bridgeObjectRetain();
        v25 = sub_236C0ED40(v16, v18, &v26);
        sub_236C363F4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_236BE1000, v19, v20, "Failed to convert stats to message. { %{private}s=\"%{private}s\" }", (uint8_t *)v21, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B800318](v22, -1, -1);
        MEMORY[0x23B800318](v21, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      v23 = sub_236C35DB8();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a4, 1, 1, v23);
    }
  }
  else
  {
    v14 = sub_236C35DB8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a4, 1, 1, v14);
  }
}

uint64_t sub_236C0CB70(__int16 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  char *v21;
  double v22;
  double v23;
  void (*v24)(char *, uint64_t);
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD v33[2];
  uint64_t v34[3];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2564479F8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v33 - v8;
  v10 = sub_236C357DC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v33 - v15;
  if (qword_2542B1530 != -1)
    swift_once();
  os_unfair_lock_lock((os_unfair_lock_t)(qword_2542B26A8 + 16));
  swift_beginAccess();
  v17 = *(_QWORD *)(v1 + 32);
  if (!*(_QWORD *)(v17 + 16) || (v18 = sub_236BE3E64(a1), (v19 & 1) == 0))
  {
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v20(v9, 1, 1, v10);
    goto LABEL_11;
  }
  v33[0] = v16;
  (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v9, *(_QWORD *)(v17 + 56) + *(_QWORD *)(v11 + 72) * v18, v10);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v20(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_11:
    sub_236BE6C14((uint64_t)v9, &qword_2564479F8);
    sub_236C357D0();
    v31 = 1;
    v20(v7, 0, 1, v10);
    swift_beginAccess();
    sub_236C24870((uint64_t)v7, a1);
    swift_endAccess();
    goto LABEL_12;
  }
  v21 = (char *)v33[0];
  (*(void (**)(void))(v11 + 32))();
  sub_236C357D0();
  sub_236C35794();
  v23 = v22;
  v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  v24(v14, v10);
  if (v23 >= *(double *)(v2 + 40))
  {
    v31 = 1;
    v20(v7, 1, 1, v10);
    swift_beginAccess();
    sub_236C24870((uint64_t)v7, a1);
    swift_endAccess();
    v24(v21, v10);
  }
  else
  {
    v25 = sub_236C35F44();
    v26 = sub_236C36328();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v34[0] = v28;
      *(_DWORD *)v27 = 136446210;
      v29 = sub_236C35E84();
      v33[1] = sub_236C0ED40(v29, v30, v34);
      sub_236C363F4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_236BE1000, v25, v26, "Skipping IOReporting, as has run recently. { serviceType=%{public}s }", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v28, -1, -1);
      MEMORY[0x23B800318](v27, -1, -1);
    }

    v24((char *)v33[0], v10);
    v31 = 0;
  }
LABEL_12:
  os_unfair_lock_unlock((os_unfair_lock_t)(qword_2542B26A8 + 16));
  return v31;
}

uint64_t sub_236C0CF60()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3068);
  result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  qword_2542B26A8 = result;
  return result;
}

uint64_t sub_236C0CF94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DriverSnapshotManager_logger;
  v2 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_236C0D004()
{
  return type metadata accessor for DriverSnapshotManager();
}

uint64_t type metadata accessor for DriverSnapshotManager()
{
  uint64_t result;

  result = qword_2542B26B0;
  if (!qword_2542B26B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236C0D048()
{
  uint64_t result;
  unint64_t v1;

  result = sub_236C35F50();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_236C0D0F4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_236C0D118()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236C0D154(void *a1)
{
  uint64_t v1;

  return sub_236C0B844(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_236C0D160(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_236C0D1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_236C0D1F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, char *, uint64_t);
  int64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B14B8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v24 - v7;
  sub_236C358A8();
  v9 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v29 = v6;
  v30 = v2;
  v9(v6, v8, v2);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  if (v10)
  {
    v24 = v8;
    v25 = v3;
    v39 = MEMORY[0x24BEE4AF8];
    sub_236BF2240(0, v10, 0);
    v11 = v39;
    v28 = sub_236C0DFA8();
    v27 = sub_236C0DFEC();
    v26 = sub_236BF9E90((unint64_t *)&qword_2542B15B8, &qword_2542B14B8, MEMORY[0x24BEE7460]);
    v12 = (uint64_t *)(a1 + 40);
    do
    {
      v13 = *v12;
      v35 = *(v12 - 1);
      v36 = v13;
      v33 = 0;
      v34 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_236C36310();
      v35 = v37;
      v36 = v38;
      v32 = 0xE000000000000000;
      v33 = 22364;
      v34 = 0xE200000000000000;
      v31 = 0;
      sub_236BED490();
      v14 = sub_236C36430();
      v16 = v15;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = v11;
      v18 = *(_QWORD *)(v11 + 16);
      v17 = *(_QWORD *)(v11 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_236BF2240(v17 > 1, v18 + 1, 1);
        v11 = v39;
      }
      v12 += 2;
      *(_QWORD *)(v11 + 16) = v18 + 1;
      v19 = v11 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v14;
      *(_QWORD *)(v19 + 40) = v16;
      --v10;
    }
    while (v10);
    v8 = v24;
    v3 = v25;
  }
  v37 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FD0);
  sub_236BF9E90((unint64_t *)&qword_2542B2FD8, &qword_2542B2FD0, MEMORY[0x24BEE12B0]);
  v20 = sub_236C360B8();
  swift_bridgeObjectRelease();
  v21 = *(void (**)(char *, uint64_t))(v3 + 8);
  v22 = v30;
  v21(v8, v30);
  v21(v29, v22);
  return v20;
}

uint64_t sub_236C0D4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *DriverName;
  void *Group;
  void *SubGroup;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  void *ChannelName;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;

  DriverName = (void *)IOReportChannelGetDriverName();
  Group = (void *)IOReportChannelGetGroup();
  SubGroup = (void *)IOReportChannelGetSubGroup();
  if (!DriverName)
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (!Group)
      goto LABEL_12;
    goto LABEL_7;
  }
  v8 = DriverName;
  v9 = sub_236C360F4();
  v11 = v10;
  v12 = sub_236C1BECC(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v14 = v12[2];
  v13 = v12[3];
  if (v14 >= v13 >> 1)
    v12 = sub_236C1BECC((_QWORD *)(v13 > 1), v14 + 1, 1, v12);
  v12[2] = v14 + 1;
  v15 = &v12[2 * v14];
  v15[4] = v9;
  v15[5] = v11;

  if (Group)
  {
LABEL_7:
    v16 = Group;
    v17 = sub_236C360F4();
    v19 = v18;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_236C1BECC(0, v12[2] + 1, 1, v12);
    v21 = v12[2];
    v20 = v12[3];
    if (v21 >= v20 >> 1)
      v12 = sub_236C1BECC((_QWORD *)(v20 > 1), v21 + 1, 1, v12);
    v12[2] = v21 + 1;
    v22 = &v12[2 * v21];
    v22[4] = v17;
    v22[5] = v19;

  }
LABEL_12:
  if (SubGroup)
  {
    v23 = SubGroup;
    v24 = sub_236C360F4();
    v26 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_236C1BECC(0, v12[2] + 1, 1, v12);
    v28 = v12[2];
    v27 = v12[3];
    if (v28 >= v27 >> 1)
      v12 = sub_236C1BECC((_QWORD *)(v27 > 1), v28 + 1, 1, v12);
    v12[2] = v28 + 1;
    v29 = &v12[2 * v28];
    v29[4] = v24;
    v29[5] = v26;

  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v12 = sub_236C1BECC(0, v12[2] + 1, 1, v12);
  v31 = v12[2];
  v30 = v12[3];
  if (v31 >= v30 >> 1)
    v12 = sub_236C1BECC((_QWORD *)(v30 > 1), v31 + 1, 1, v12);
  v12[2] = v31 + 1;
  v32 = &v12[2 * v31];
  v32[4] = a2;
  v32[5] = a3;
  ChannelName = (void *)IOReportChannelGetChannelName();
  if (ChannelName)
  {
    v34 = ChannelName;
    v35 = sub_236C360F4();
    v37 = v36;
    v39 = v12[2];
    v38 = v12[3];
    if (v39 >= v38 >> 1)
      v12 = sub_236C1BECC((_QWORD *)(v38 > 1), v39 + 1, 1, v12);
    v12[2] = v39 + 1;
    v40 = &v12[2 * v39];
    v40[4] = v35;
    v40[5] = v37;

  }
  v41 = sub_236C0D1F0((uint64_t)v12);
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_236C0D7CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char *v4;
  int BucketCount;
  int v6;
  int v7;
  __int128 v8;
  int v9;
  int BucketBounds;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t BucketHits;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  void *UnitLabel;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t MinValue;
  uint64_t MaxValue;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char isUniquelyReferenced_nonNull_native;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  __int128 v45;
  unint64_t v46;
  __int128 v47;
  int v48;
  __int128 v49;
  int v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  __int128 v65;
  _OWORD v66[2];
  __int128 v67;
  uint64_t v68;
  uint64_t v69;

  v51 = a2;
  v69 = *MEMORY[0x24BDAC8D0];
  v53 = sub_236C35F50();
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v65 = 0;
  *((_QWORD *)&v65 + 1) = 0xE000000000000000;
  BucketCount = IOReportHistogramGetBucketCount();
  v63 = 0;
  v64 = 0xE000000000000000;
  v50 = BucketCount;
  v6 = BucketCount - 1;
  if (__OFSUB__(BucketCount, 1))
    goto LABEL_28;
  if (v6 < 1)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  v55 = 0;
  v56 = 0;
  v7 = 1;
  v47 = xmmword_236C37F50;
  v46 = 0x8000000236C3A4E0;
  *((_QWORD *)&v8 + 1) = 6;
  v49 = xmmword_236C37720;
  *(_QWORD *)&v8 = 67109120;
  v45 = v8;
  v48 = BucketCount - 1;
  do
  {
    while (1)
    {
      v9 = v7;
      if (v7 == v6)
      {
        v7 = 0;
        goto LABEL_9;
      }
      if (v7 == 0x7FFFFFFF)
      {
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      ++v7;
LABEL_9:
      v61 = 0;
      v62 = 0;
      BucketBounds = IOReportHistogramGetBucketBounds();
      if (BucketBounds == sub_236C35F5C())
        break;
      sub_236C35EF0();
      v41 = sub_236C35F44();
      v42 = sub_236C36328();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = swift_slowAlloc();
        *(_DWORD *)v43 = v45;
        *(_DWORD *)(v43 + 4) = BucketBounds;
        _os_log_impl(&dword_236BE1000, v41, v42, "Error in getting the bucket. { retValue=%d }", (uint8_t *)v43, 8u);
        MEMORY[0x23B800318](v43, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v52 + 8))(v4, v53);
      if (v9 == v6)
        goto LABEL_26;
    }
    v54 = v7;
    v12 = v61;
    v11 = v62;
    if (v62 >= v55)
      v13 = v55;
    else
      v13 = v62;
    v14 = v56;
    if (v61 > v56)
      v14 = v61;
    v55 = v13;
    v56 = v14;
    BucketHits = IOReportHistogramGetBucketHits();
    if (BucketHits)
    {
      v16 = BucketHits;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2564474F0);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = v49;
      v18 = MEMORY[0x24BEE4008];
      *(_QWORD *)(v17 + 56) = MEMORY[0x24BEE4008];
      v19 = MEMORY[0x24BEE4060];
      *(_QWORD *)(v17 + 64) = MEMORY[0x24BEE4060];
      *(_QWORD *)(v17 + 72) = v12;
      *(_QWORD *)(v17 + 32) = v11;
      *(_QWORD *)(v17 + 96) = v18;
      *(_QWORD *)(v17 + 104) = v19;
      *(_QWORD *)(v17 + 136) = MEMORY[0x24BEE4568];
      *(_QWORD *)(v17 + 144) = MEMORY[0x24BEE45B8];
      *(_QWORD *)(v17 + 112) = v16;
      sub_236C3610C();
      sub_236C36184();
      swift_bridgeObjectRelease();
    }
    v20 = v63;
    v21 = v64;
    v22 = HIBYTE(v64) & 0xF;
    if ((v64 & 0x2000000000000000) == 0)
      v22 = v63 & 0xFFFFFFFFFFFFLL;
    if (v22)
    {
      v23 = v4;
      UnitLabel = (void *)IOReportChannelGetUnitLabel();
      if (!UnitLabel)
        goto LABEL_30;
      v25 = UnitLabel;
      v26 = sub_236C360F4();
      v28 = v27;

      MinValue = IOReportHistogramGetMinValue();
      MaxValue = IOReportHistogramGetMaxValue();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2564474F0);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = v47;
      *(_QWORD *)(v31 + 56) = MEMORY[0x24BEE3F88];
      *(_QWORD *)(v31 + 64) = MEMORY[0x24BEE3FF0];
      *(_DWORD *)(v31 + 32) = v50;
      v32 = MEMORY[0x24BEE4008];
      *(_QWORD *)(v31 + 96) = MEMORY[0x24BEE4008];
      v33 = MEMORY[0x24BEE4060];
      *(_QWORD *)(v31 + 72) = v55;
      *(_QWORD *)(v31 + 136) = v32;
      *(_QWORD *)(v31 + 144) = v33;
      v34 = v56;
      *(_QWORD *)(v31 + 104) = v33;
      *(_QWORD *)(v31 + 112) = v34;
      *(_QWORD *)(v31 + 176) = v32;
      *(_QWORD *)(v31 + 184) = v33;
      *(_QWORD *)(v31 + 152) = MinValue;
      *(_QWORD *)(v31 + 216) = v32;
      *(_QWORD *)(v31 + 224) = v33;
      *(_QWORD *)(v31 + 192) = MaxValue;
      v35 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v31 + 256) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v31 + 264) = sub_236C082B4();
      *(_QWORD *)(v31 + 232) = v26;
      *(_QWORD *)(v31 + 240) = v28;
      sub_236C3610C();
      sub_236C36184();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v66[0] = v20;
      *((_QWORD *)&v66[0] + 1) = v21;
      v59 = 9275;
      v60 = 0xE200000000000000;
      v57 = 0;
      v58 = 0xE000000000000000;
      sub_236C0DFA8();
      sub_236C0DFEC();
      sub_236C36304();
      sub_236C36184();
      swift_bridgeObjectRelease();
      v36 = sub_236C0D4C0(a1, 0x6172676F74736948, 0xE90000000000006DLL);
      v38 = v37;
      v68 = v35;
      v67 = v65;
      sub_236BECFF4(&v67, v66);
      swift_bridgeObjectRetain();
      v39 = v51;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v59 = *v39;
      *v39 = 0x8000000000000000;
      sub_236C0A85C(v66, v36, v38, isUniquelyReferenced_nonNull_native);
      *v39 = v59;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = v23;
      v6 = v48;
    }
    v7 = v54;
  }
  while (v9 != v6);
LABEL_26:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236C0DD60(uint64_t a1)
{
  uint64_t result;
  int v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Residency;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  result = IOReportStateGetCount();
  if ((result & 0x80000000) != 0)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  v3 = result;
  v4 = 0;
  if ((_DWORD)result)
  {
    v5 = 0;
    v6 = 0xE000000000000000;
    while (v3 != v5)
    {
      result = IOReportStateGetNameForIndex();
      if (!result)
        goto LABEL_14;
      v7 = (id)result;
      v8 = sub_236C360F4();
      v10 = v9;

      v11 = IOReportStateGetInTransitions();
      Residency = IOReportStateGetResidency();
      IOReportStateGetDutyCycle();
      if (Residency)
      {
        v14 = v13;
        v23 = v4;
        v24 = v6;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2564474F0);
        v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_236C37F60;
        *(_QWORD *)(v15 + 56) = MEMORY[0x24BEE0D00];
        v16 = sub_236C082B4();
        *(_QWORD *)(v15 + 32) = v8;
        *(_QWORD *)(v15 + 40) = v10;
        v17 = MEMORY[0x24BEE4568];
        *(_QWORD *)(v15 + 96) = MEMORY[0x24BEE4568];
        v18 = MEMORY[0x24BEE45B8];
        *(_QWORD *)(v15 + 104) = MEMORY[0x24BEE45B8];
        *(_QWORD *)(v15 + 112) = Residency;
        *(_QWORD *)(v15 + 64) = v16;
        *(_QWORD *)(v15 + 72) = v11;
        *(_QWORD *)(v15 + 136) = v17;
        *(_QWORD *)(v15 + 144) = v18;
        *(_QWORD *)(v15 + 176) = MEMORY[0x24BEE13C8];
        *(_QWORD *)(v15 + 184) = MEMORY[0x24BEE1448];
        *(_QWORD *)(v15 + 152) = v14;
        sub_236BED490();
        v4 = sub_236C36424();
        v20 = v19;
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v6 = v20;
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
      if (v3 == ++v5)
        goto LABEL_11;
    }
    __break(1u);
    goto LABEL_13;
  }
  v6 = 0xE000000000000000;
LABEL_11:
  v21 = sub_236C0D4C0(a1, 0x6574617453, 0xE500000000000000);
  v25 = MEMORY[0x24BEE0D00];
  v23 = v4;
  v24 = v6;
  return sub_236C2479C((uint64_t)&v23, v21, v22);
}

unint64_t sub_236C0DFA8()
{
  unint64_t result;

  result = qword_2542B15F0;
  if (!qword_2542B15F0)
  {
    result = MEMORY[0x23B80027C](MEMORY[0x24BEE0D48], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2542B15F0);
  }
  return result;
}

unint64_t sub_236C0DFEC()
{
  unint64_t result;

  result = qword_2542B15E8;
  if (!qword_2542B15E8)
  {
    result = MEMORY[0x23B80027C](MEMORY[0x24BEE0D40], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2542B15E8);
  }
  return result;
}

uint64_t sub_236C0E030()
{
  return swift_deallocObject();
}

uint64_t sub_236C0E040()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236C0E06C(void *a1)
{
  uint64_t v1;

  return sub_236C0C388(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_236C0E074()
{
  unint64_t result;

  result = qword_2542B3030;
  if (!qword_2542B3030)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2542B3030);
  }
  return result;
}

uint64_t DriverSnapshotWorker.__allocating_init(with:)(__int128 *a1)
{
  swift_allocObject();
  return DriverSnapshotWorker.init(with:)(a1);
}

Swift::Bool __swiftcall DriverSnapshotWorker.start()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  Swift::Bool v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[3];
  uint64_t v31;

  v1 = v0;
  if (qword_2542B1528 != -1)
    swift_once();
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_session);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_session), *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_session + 24));
  v3 = sub_236C35B00();
  if ((sub_236C0CB70(v3) & 1) == 0)
  {
    swift_retain_n();
    v8 = sub_236C35F44();
    v15 = sub_236C36328();
    if (os_log_type_enabled(v8, v15))
    {
      v16 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v30[0] = v28;
      *(_DWORD *)v16 = 136446466;
      __swift_project_boxed_opaque_existential_1(v2, v2[3]);
      sub_236C35B00();
      v17 = sub_236C35E84();
      v31 = sub_236C0ED40(v17, v18, v30);
      sub_236C363F4();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2048;
      __swift_project_boxed_opaque_existential_1(v2, v2[3]);
      v19 = sub_236C35AF4();
      swift_release();
      v31 = v19;
      sub_236C363F4();
      swift_release();
      _os_log_impl(&dword_236BE1000, v8, v15, "DriverSnapshotManager.shouldRun == false. { serviceType=%{public}s, reporterID=%lld }", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v28, -1, -1);
      v20 = v16;
LABEL_11:
      MEMORY[0x23B800318](v20, -1, -1);

      return 0;
    }
LABEL_12:

    swift_release_n();
    return 0;
  }
  v4 = sub_236C0AF04();
  v5 = OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_startSample;
  v6 = *(void **)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_startSample);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_startSample) = v4;

  v7 = *(_QWORD *)(v1 + v5);
  swift_retain_n();
  v8 = sub_236C35F44();
  v9 = sub_236C36328();
  v10 = os_log_type_enabled(v8, v9);
  if (!v7)
  {
    if (v10)
    {
      v21 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v30[0] = v29;
      *(_DWORD *)v21 = 136446466;
      __swift_project_boxed_opaque_existential_1(v2, v2[3]);
      sub_236C35B00();
      v22 = sub_236C35E84();
      v31 = sub_236C0ED40(v22, v23, v30);
      sub_236C363F4();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2048;
      __swift_project_boxed_opaque_existential_1(v2, v2[3]);
      v24 = sub_236C35AF4();
      swift_release();
      v31 = v24;
      sub_236C363F4();
      swift_release();
      _os_log_impl(&dword_236BE1000, v8, v9, "Retrieving initial snapshot failed. { serviceType=%{public}s, reporterID=%lld }", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v29, -1, -1);
      v20 = v21;
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  if (v10)
  {
    v11 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v30[0] = v27;
    *(_DWORD *)v11 = 136446466;
    __swift_project_boxed_opaque_existential_1(v2, v2[3]);
    sub_236C35B00();
    v12 = sub_236C35E84();
    v31 = sub_236C0ED40(v12, v13, v30);
    sub_236C363F4();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2048;
    __swift_project_boxed_opaque_existential_1(v2, v2[3]);
    v14 = sub_236C35AF4();
    swift_release();
    v31 = v14;
    sub_236C363F4();
    swift_release();
    _os_log_impl(&dword_236BE1000, v8, v9, "Snapshot retrieved. { serviceType=%{public}s, reporterID=%lld }", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B800318](v27, -1, -1);
    MEMORY[0x23B800318](v11, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v25 = 1;
  swift_beginAccess();
  *(_BYTE *)(v1 + 16) = 1;
  return v25;
}

Swift::Void __swiftcall DriverSnapshotWorker.stop()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD, _QWORD, _QWORD);
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  os_log_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  void (*v34)(_QWORD, _QWORD, _QWORD);
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42[3];

  v1 = v0;
  v2 = sub_236C35DB8();
  v40 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_startSample;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_startSample);
  if (v6)
  {
    v37 = v4;
    v7 = qword_2542B1528;
    v8 = v6;
    if (v7 != -1)
      swift_once();
    v9 = sub_236C0AF4C((uint64_t)v8);
    swift_retain();
    v10 = sub_236C0F380(v9, v1);
    swift_bridgeObjectRelease();
    swift_release();
    v12 = *(_QWORD *)(v10 + 16);
    if (v12)
    {
      v30 = v8;
      v31 = v5;
      v13 = *(unsigned __int8 *)(v40 + 80);
      v29 = v10;
      v14 = v10 + ((v13 + 32) & ~v13);
      v36 = (_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_session);
      v15 = *(_QWORD *)(v40 + 72);
      v16 = *(void (**)(_QWORD, _QWORD, _QWORD))(v40 + 16);
      *(_QWORD *)&v11 = 134218243;
      v33 = v11;
      v32 = MEMORY[0x24BEE4AD8] + 8;
      v17 = v37;
      v34 = v16;
      v35 = v15;
      v16(v37, v14, v2);
      while (1)
      {
        swift_retain();
        v18 = sub_236C35F44();
        v19 = sub_236C36328();
        v41 = v19;
        if (os_log_type_enabled(v18, v19))
        {
          v20 = swift_slowAlloc();
          v39 = swift_slowAlloc();
          v42[0] = v39;
          *(_DWORD *)v20 = v33;
          __swift_project_boxed_opaque_existential_1(v36, v36[3]);
          v38 = v18;
          v16 = v34;
          v21 = v40;
          v17 = v37;
          *(_QWORD *)(v20 + 4) = sub_236C35AF4();
          swift_release();
          *(_WORD *)(v20 + 12) = 2081;
          v22 = sub_236C35D70();
          v23 = MEMORY[0x23B7FF31C](v22);
          *(_QWORD *)(v20 + 14) = sub_236C0ED40(v23, v24, v42);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v2);
          v25 = v38;
          _os_log_impl(&dword_236BE1000, v38, (os_log_type_t)v41, "Failed to send IOReporting message. { reporterID=%lld, category=%{private}s }", (uint8_t *)v20, 0x16u);
          v26 = v39;
          swift_arrayDestroy();
          MEMORY[0x23B800318](v26, -1, -1);
          v27 = v20;
          v15 = v35;
          MEMORY[0x23B800318](v27, -1, -1);

        }
        else
        {
          swift_release();

          (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v2);
        }
        v14 += v15;
        if (!--v12)
          break;
        v16(v17, v14, v2);
      }
      swift_bridgeObjectRelease();

      v5 = v31;
    }
    else
    {
      swift_bridgeObjectRelease();

    }
  }
  v28 = *(void **)(v1 + v5);
  *(_QWORD *)(v1 + v5) = 0;

  swift_beginAccess();
  *(_BYTE *)(v1 + 16) = 0;
}

uint64_t DriverSnapshotWorker.isStarted.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t DriverSnapshotWorker.isStarted.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = a1;
  return result;
}

uint64_t (*DriverSnapshotWorker.isStarted.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t DriverSnapshotWorker.workerConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DriverSnapshotWorker.workerConfig.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*DriverSnapshotWorker.workerConfig.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t DriverSnapshotWorker.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_workerConfig;
  v2 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_session);
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_logger;
  v4 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return v0;
}

uint64_t DriverSnapshotWorker.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_workerConfig;
  v2 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_session);
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_logger;
  v4 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

BOOL sub_236C0EC94()
{
  return DriverSnapshotWorker.start()();
}

void sub_236C0ECB8()
{
  DriverSnapshotWorker.stop()();
}

uint64_t sub_236C0ECD8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_236C0ED40(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_236C0EE10(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_236BED454((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_236BED454((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_236C0EE10(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_236C36400();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_236C0EFC8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_236C364E4();
  if (!v8)
  {
    sub_236C36538();
    __break(1u);
LABEL_17:
    result = sub_236C36574();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_236C0EFC8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_236C0F05C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_236C0F234(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_236C0F234(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_236C0F05C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_236C0F1D0(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_236C364CC();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_236C36538();
      __break(1u);
LABEL_10:
      v2 = sub_236C3619C();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_236C36574();
    __break(1u);
LABEL_14:
    result = sub_236C36538();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_236C0F1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B30E8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_236C0F234(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542B30E8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_236C36574();
  __break(1u);
  return result;
}

uint64_t sub_236C0F380(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  _QWORD *v26;
  char *v27;
  uint64_t v28;

  v5 = sub_236C35DB8();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v8;
  result = MEMORY[0x24BEE4AF8];
  v28 = MEMORY[0x24BEE4AF8];
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v20 = v2;
    v21 = (char *)&v20 - v8;
    v26 = (_QWORD *)(a2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DriverSnapshotWorker_session);
    v13 = *(_QWORD *)(v9 + 72);
    v23 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v24 = v9;
    v14 = a1 + v23;
    v25 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    v15 = v9;
    v22 = v5;
    v25(v10, a1 + v23, v5);
    while (1)
    {
      __swift_project_boxed_opaque_existential_1(v26, v26[3]);
      if ((sub_236C35B18() & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v5);
      }
      else
      {
        v16 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
        v16(v27, v10, v5);
        v17 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_236C16BB4(0, *(_QWORD *)(v17 + 16) + 1, 1);
          v17 = v28;
        }
        v19 = *(_QWORD *)(v17 + 16);
        v18 = *(_QWORD *)(v17 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_236C16BB4(v18 > 1, v19 + 1, 1);
          v17 = v28;
        }
        *(_QWORD *)(v17 + 16) = v19 + 1;
        v5 = v22;
        v16((char *)(v17 + v23 + v19 * v13), v27, v22);
        v28 = v17;
        v15 = v24;
        v10 = v21;
      }
      v14 += v13;
      if (!--v12)
        break;
      v25(v10, v14, v5);
    }
    return v28;
  }
  return result;
}

uint64_t sub_236C0F578()
{
  return type metadata accessor for DriverSnapshotWorker();
}

uint64_t type metadata accessor for DriverSnapshotWorker()
{
  uint64_t result;

  result = qword_2542B21C8;
  if (!qword_2542B21C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236C0F5BC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_236C35CB0();
  if (v1 <= 0x3F)
  {
    result = sub_236C35F50();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DriverSnapshotWorker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DriverSnapshotWorker.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_236C0F674(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void (*v30)(void);
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t *v61;
  char *v62;
  uint64_t *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  int64_t v69;
  _QWORD *v70;
  char *v71;
  _QWORD *v72;

  v70 = a2;
  v3 = sub_236C3592C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v71 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FA0);
  v6 = MEMORY[0x24BDAC7A8](v65);
  v64 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v63 = (uint64_t *)((char *)&v57 - v9);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (uint64_t *)((char *)&v57 - v11);
  MEMORY[0x24BDAC7A8](v10);
  v62 = (char *)&v57 - v13;
  v14 = *(_QWORD *)(a1 + 64);
  v58 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v59 = (unint64_t)(v15 + 63) >> 6;
  v66 = a1;
  swift_bridgeObjectRetain();
  v18 = 0;
  v60 = v4;
  v61 = v12;
  while (1)
  {
    if (v17)
    {
      v68 = (v17 - 1) & v17;
      v69 = v18;
      v19 = __clz(__rbit64(v17)) | (v18 << 6);
    }
    else
    {
      v20 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_36;
      if (v20 >= v59)
        return swift_release();
      v21 = *(_QWORD *)(v58 + 8 * v20);
      v22 = v18 + 1;
      if (!v21)
      {
        v22 = v18 + 2;
        if (v18 + 2 >= v59)
          return swift_release();
        v21 = *(_QWORD *)(v58 + 8 * v22);
        if (!v21)
        {
          v22 = v18 + 3;
          if (v18 + 3 >= v59)
            return swift_release();
          v21 = *(_QWORD *)(v58 + 8 * v22);
          if (!v21)
          {
            v22 = v18 + 4;
            if (v18 + 4 >= v59)
              return swift_release();
            v21 = *(_QWORD *)(v58 + 8 * v22);
            if (!v21)
            {
              v23 = v18 + 5;
              if (v18 + 5 >= v59)
                return swift_release();
              v21 = *(_QWORD *)(v58 + 8 * v23);
              if (!v21)
              {
                while (1)
                {
                  v22 = v23 + 1;
                  if (__OFADD__(v23, 1))
                    goto LABEL_37;
                  if (v22 >= v59)
                    return swift_release();
                  v21 = *(_QWORD *)(v58 + 8 * v22);
                  ++v23;
                  if (v21)
                    goto LABEL_23;
                }
              }
              v22 = v18 + 5;
            }
          }
        }
      }
LABEL_23:
      v68 = (v21 - 1) & v21;
      v69 = v22;
      v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    v24 = v65;
    v25 = (uint64_t *)(*(_QWORD *)(v66 + 48) + 16 * v19);
    v27 = *v25;
    v26 = v25[1];
    v28 = *(_QWORD *)(v4 + 72);
    v29 = v62;
    v30 = *(void (**)(void))(v4 + 16);
    ((void (*)(char *, unint64_t, uint64_t))v30)(&v62[*(int *)(v65 + 48)], *(_QWORD *)(v66 + 56) + v28 * v19, v3);
    *v29 = v27;
    v29[1] = v26;
    sub_236C10D30((uint64_t)v29, (uint64_t)v12);
    v31 = *(int *)(v24 + 48);
    v32 = v63;
    v33 = (char *)v12 + v31;
    v35 = *v12;
    v34 = v12[1];
    *v63 = v35;
    v32[1] = v34;
    v67 = (char *)v32 + v31;
    v30();
    v36 = &v64[*(int *)(v24 + 48)];
    ((void (*)(char *, char *, uint64_t))v30)(v36, v33, v3);
    v37 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v38 = v36;
    v39 = v3;
    v37(v71, v38, v3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40 = v70;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v72 = (_QWORD *)*v40;
    v42 = v72;
    *v40 = 0x8000000000000000;
    v44 = sub_236BEE010(v35, v34);
    v45 = v42[2];
    v46 = (v43 & 1) == 0;
    v47 = v45 + v46;
    if (__OFADD__(v45, v46))
      break;
    v48 = v43;
    if (v42[3] >= v47)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_236BEE20C();
    }
    else
    {
      sub_236BEE744(v47, isUniquelyReferenced_nonNull_native);
      v49 = sub_236BEE010(v35, v34);
      if ((v48 & 1) != (v50 & 1))
        goto LABEL_38;
      v44 = v49;
    }
    v3 = v39;
    v51 = v72;
    if ((v48 & 1) != 0)
    {
      v4 = v60;
      (*(void (**)(unint64_t, char *, uint64_t))(v60 + 40))(v72[7] + v44 * v28, v71, v39);
    }
    else
    {
      v72[(v44 >> 6) + 8] |= 1 << v44;
      v52 = (uint64_t *)(v51[6] + 16 * v44);
      *v52 = v35;
      v52[1] = v34;
      v37((char *)(v51[7] + v44 * v28), v71, v39);
      v53 = v51[2];
      v54 = __OFADD__(v53, 1);
      v55 = v53 + 1;
      if (v54)
        goto LABEL_35;
      v51[2] = v55;
      swift_bridgeObjectRetain();
      v4 = v60;
    }
    *v70 = v72;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v67, v39);
    v12 = v61;
    sub_236BE6C14((uint64_t)v61, &qword_2542B2FA0);
    v17 = v68;
    v18 = v69;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  result = sub_236C3667C();
  __break(1u);
  return result;
}

uint64_t sub_236C0FB1C@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v18)(uint64_t *, _QWORD);
  unint64_t *v19;
  unint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint8_t *v34;
  char *v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40[4];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1650);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v36 - v8;
  v10 = sub_236C35DB8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v36 - v15;
  sub_236C116CC(1, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_236BE6C14((uint64_t)v9, &qword_2542B1650);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(a1, 1, 1, v10);
  }
  else
  {
    v38 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v38(v16, v9, v10);
    v18 = (void (*)(uint64_t *, _QWORD))sub_236C35D7C();
    sub_236C35D4C();
    v18(v40, 0);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    v19 = (unint64_t *)(v1
                             + OBJC_IVAR____TtC22AudioAnalyticsExternal29DurationSummaryDecoratorState_completeDecoratorMessages);
    swift_beginAccess();
    v20 = *v19;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v19 = v20;
    v37 = a1;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v20 = sub_236C1C20C(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
      *v19 = v20;
    }
    v23 = *(_QWORD *)(v20 + 16);
    v22 = *(_QWORD *)(v20 + 24);
    if (v23 >= v22 >> 1)
    {
      v20 = sub_236C1C20C(v22 > 1, v23 + 1, 1, v20);
      *v19 = v20;
    }
    *(_QWORD *)(v20 + 16) = v23 + 1;
    v38((char *)(v20+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v23), v14, v10);
    swift_endAccess();
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v24(v7, 1, 1, v10);
    v25 = v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal29DurationSummaryDecoratorState_decoratorRunningMessage;
    swift_beginAccess();
    sub_236BF1244((uint64_t)v7, v25);
    swift_endAccess();
    swift_retain_n();
    v26 = sub_236C35F44();
    v27 = sub_236C36328();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v36 = v24;
      v29 = (uint8_t *)v28;
      v30 = swift_slowAlloc();
      *(_DWORD *)v29 = 136315138;
      v40[0] = v30;
      v31 = sub_236C3598C();
      v32 = MEMORY[0x23B7FF31C](v31);
      v39 = sub_236C0ED40(v32, v33, v40);
      sub_236C363F4();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_236BE1000, v26, v27, "Created builtMessage in DurationSummaryDecoratorState. { category=%s }", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v30, -1, -1);
      v34 = v29;
      v24 = v36;
      MEMORY[0x23B800318](v34, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    v35 = v37;
    v38(v37, v16, v10);
    return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v24)(v35, 0, 1, v10);
  }
}

uint64_t sub_236C0FF30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char v45;
  unint64_t v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  _QWORD *v53;
  unint64_t v54;
  _QWORD *v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  const char *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t result;
  void (*v70)(char *, _QWORD, uint64_t);
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  void (*v77)(uint64_t *, uint64_t, uint64_t);
  void (*v78)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t *v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B14F0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_236C3592C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v106 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v105 = (char *)&v90 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v90 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v90 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v104 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v103 = (uint64_t *)((char *)&v90 - v21);
  v22 = sub_236C35C98();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_mostRecentTimestamp;
  if (*(double *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_mostRecentTimestamp) <= 0.0
    || *(double *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_startAATimestamp) <= 0.0)
  {
    swift_retain_n();
    v61 = sub_236C35F44();
    v62 = sub_236C36328();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = swift_slowAlloc();
      *(_DWORD *)v63 = 134218496;
      v109 = *(_QWORD *)(v2 + v26);
      sub_236C363F4();
      swift_release();
      *(_WORD *)(v63 + 12) = 2048;
      v109 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_startAATimestamp);
      sub_236C363F4();
      swift_release_n();
      *(_WORD *)(v63 + 22) = 2048;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_session), *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_session + 24));
      v64 = sub_236C35AF4();
      swift_release();
      v109 = v64;
      sub_236C363F4();
      swift_release();
      v65 = "invalid times { caTimestamp=%f startCaTimestamp=%f reporterID=%lld }";
LABEL_29:
      _os_log_impl(&dword_236BE1000, v61, v62, v65, (uint8_t *)v63, 0x20u);
      MEMORY[0x23B800318](v63, -1, -1);
LABEL_34:

      v68 = sub_236C35DB8();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(a1, 1, 1, v68);
    }
LABEL_33:
    swift_release_n();
    goto LABEL_34;
  }
  v100 = OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_startAATimestamp;
  v27 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_currentFlattenedMessage);
  if (!v27)
  {
    swift_retain_n();
    v61 = sub_236C35F44();
    v62 = sub_236C36334();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = swift_slowAlloc();
      *(_DWORD *)v63 = 134218496;
      v109 = *(_QWORD *)(v2 + v26);
      sub_236C363F4();
      swift_release();
      *(_WORD *)(v63 + 12) = 2048;
      v109 = *(_QWORD *)(v2 + v100);
      sub_236C363F4();
      swift_release_n();
      *(_WORD *)(v63 + 22) = 2048;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_session), *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_session + 24));
      v67 = sub_236C35AF4();
      swift_release();
      v109 = v67;
      sub_236C363F4();
      swift_release();
      v65 = "currentFlattenedMessage should not be nil { caTimestamp=%f startCaTimestamp=%f reporterID=%lld }";
      goto LABEL_29;
    }
    goto LABEL_33;
  }
  v94 = v24;
  v95 = (char *)&v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = (uint64_t *)v17;
  v97 = v15;
  v98 = v6;
  v99 = v2;
  v28 = v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_config;
  swift_bridgeObjectRetain();
  v29 = *(_QWORD *)(sub_236C359E0() + 16);
  swift_bridgeObjectRelease();
  if (__OFADD__(v29, 5))
    goto LABEL_40;
  v109 = sub_236C36064();
  v30 = sub_236C35950();
  sub_236C0F674(v30, &v109);
  swift_bridgeObjectRelease();
  v92 = v28;
  v31 = sub_236C359E0();
  v32 = *(_QWORD *)(v31 + 16);
  v93 = a1;
  if (!v32)
  {
    v66 = (_QWORD *)v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_37:
    v70 = *(void (**)(char *, _QWORD, uint64_t))(v23 + 104);
    v71 = v94;
    v72 = v95;
    v70(v95, *MEMORY[0x24BE09DD8], v94);
    v73 = v99;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v99 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_session), *(_QWORD *)(v99 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_session + 24));
    v74 = sub_236C35B48();
    v75 = v103;
    *v103 = v74;
    v75[1] = v76;
    v77 = (void (*)(uint64_t *, uint64_t, uint64_t))v66[13];
    v77(v75, *MEMORY[0x24BE09AD0], v7);
    v78 = (void (*)(uint64_t *, _QWORD, uint64_t, uint64_t))v66[7];
    v78(v75, 0, 1, v7);
    sub_236C3607C();
    v70(v72, *MEMORY[0x24BE09DC0], v71);
    *v75 = *(_QWORD *)(v73 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_messageNumber);
    v77(v75, *MEMORY[0x24BE09AA8], v7);
    v78(v75, 0, 1, v7);
    sub_236C3607C();
    v79 = v96;
    *v96 = *(_QWORD *)(v73 + v100);
    v80 = *MEMORY[0x24BE09AC0];
    v77(v79, v80, v7);
    v81 = (void (*)(char *, uint64_t *, uint64_t))v66[4];
    v82 = (uint64_t)v97;
    v81(v97, v79, v7);
    v83 = v109;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v108 = (_QWORD *)v83;
    sub_236C0AAB0(v82, 0xD000000000000011, 0x8000000236C3A810, isUniquelyReferenced_nonNull_native);
    v109 = (uint64_t)v108;
    swift_bridgeObjectRelease();
    *v79 = 0x7FEFFFFFFFFFFFFFLL;
    v77(v79, v80, v7);
    v81((char *)v82, v79, v7);
    v85 = v109;
    v86 = swift_isUniquelyReferenced_nonNull_native();
    v108 = (_QWORD *)v85;
    sub_236C0AAB0(v82, 0x7972616D6D75735FLL, 0xEF656D6954646E45, v86);
    v109 = (uint64_t)v108;
    swift_bridgeObjectRelease();
    sub_236C3598C();
    sub_236C3595C();
    v87 = sub_236C35D58();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v98, 1, 1, v87);
    swift_bridgeObjectRetain();
    v88 = v93;
    sub_236C35D64();
    v89 = sub_236C35DB8();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v88, 0, 1, v89);
    return swift_bridgeObjectRelease();
  }
  v91 = v23;
  swift_bridgeObjectRetain();
  v90 = v31;
  v33 = (uint64_t *)(v31 + 40);
  v34 = (uint64_t)v104;
  v101 = v27;
  v102 = v7;
  while (1)
  {
    v35 = *v33;
    if (*(_QWORD *)(v27 + 16))
      break;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v34, 1, 1, v7);
    swift_bridgeObjectRetain();
LABEL_8:
    sub_236BE6C14(v34, &qword_2542B1640);
LABEL_9:
    v33 += 2;
    swift_bridgeObjectRelease();
    if (!--v32)
    {
      v66 = (_QWORD *)v8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v23 = v91;
      goto LABEL_37;
    }
  }
  v36 = *(v33 - 1);
  swift_bridgeObjectRetain_n();
  v107 = v36;
  v37 = sub_236BEE010(v36, v35);
  if ((v38 & 1) != 0)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v34, *(_QWORD *)(v27 + 56) + *(_QWORD *)(v8 + 72) * v37, v7);
    v39 = 0;
  }
  else
  {
    v39 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v34, v39, 1, v7);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v34, 1, v7) == 1)
    goto LABEL_8;
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  v41 = v105;
  v40(v105, v34, v7);
  v42 = v8;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v106, v41, v7);
  swift_bridgeObjectRetain();
  v43 = v109;
  v44 = swift_isUniquelyReferenced_nonNull_native();
  v108 = (_QWORD *)v43;
  v109 = 0x8000000000000000;
  v46 = sub_236BEE010(v107, v35);
  v47 = *(_QWORD *)(v43 + 16);
  v48 = (v45 & 1) == 0;
  v49 = v47 + v48;
  if (!__OFADD__(v47, v48))
  {
    v50 = v45;
    if (*(_QWORD *)(v43 + 24) >= v49)
    {
      if ((v44 & 1) != 0)
      {
        v53 = v108;
        if ((v45 & 1) == 0)
          goto LABEL_24;
      }
      else
      {
        sub_236BEE20C();
        v53 = v108;
        if ((v50 & 1) == 0)
          goto LABEL_24;
      }
    }
    else
    {
      sub_236BEE744(v49, v44);
      v51 = sub_236BEE010(v107, v35);
      if ((v50 & 1) != (v52 & 1))
        goto LABEL_41;
      v46 = v51;
      v53 = v108;
      if ((v50 & 1) == 0)
      {
LABEL_24:
        v53[(v46 >> 6) + 8] |= 1 << v46;
        v55 = (_QWORD *)(v53[6] + 16 * v46);
        v56 = v106;
        *v55 = v107;
        v55[1] = v35;
        v8 = v42;
        v57 = v53[7] + *(_QWORD *)(v42 + 72) * v46;
        v7 = v102;
        v40((char *)v57, (uint64_t)v56, v102);
        v58 = v53[2];
        v59 = __OFADD__(v58, 1);
        v60 = v58 + 1;
        if (v59)
          goto LABEL_39;
        v53[2] = v60;
        swift_bridgeObjectRetain();
        goto LABEL_26;
      }
    }
    v8 = v42;
    v54 = v53[7] + *(_QWORD *)(v42 + 72) * v46;
    v7 = v102;
    (*(void (**)(unint64_t, char *, uint64_t))(v42 + 40))(v54, v106, v102);
LABEL_26:
    v109 = (uint64_t)v108;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v105, v7);
    v34 = (uint64_t)v104;
    v27 = v101;
    goto LABEL_9;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  result = sub_236C3667C();
  __break(1u);
  return result;
}

uint64_t sub_236C109E0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return sub_236BE6C14(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal29DurationSummaryDecoratorState_decoratorRunningMessage, &qword_2542B1650);
}

uint64_t sub_236C10A18()
{
  uint64_t v0;

  v0 = DurationSummaryState.deinit();
  swift_bridgeObjectRelease();
  sub_236BE6C14(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal29DurationSummaryDecoratorState_decoratorRunningMessage, &qword_2542B1650);
  return swift_deallocClassInstance();
}

uint64_t sub_236C10A70()
{
  return type metadata accessor for DurationSummaryDecoratorState();
}

void sub_236C10A78()
{
  unint64_t v0;

  sub_236C10AF4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_236C10AF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2542B1658)
  {
    sub_236C35DB8();
    v0 = sub_236C363E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2542B1658);
  }
}

_OWORD *sub_236C10B48(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_236BECFF4(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_236C10BB0(unint64_t a1, __int16 a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_WORD *)(a4[6] + 2 * a1) = a2;
  v7 = a4[7];
  v8 = sub_236C357DC();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_236C10C3C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = sub_236C3592C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a4, v10);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

_OWORD *sub_236C10CCC(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_236BECFF4(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_236C10D30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_236C10D78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3090);
    v2 = sub_236C36568();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    v19 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v12);
    *(_QWORD *)&v37[0] = *v17;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    v19;
    swift_dynamicCast();
    sub_236BE7428(0, (unint64_t *)&qword_2542B3028);
    swift_dynamicCast();
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_236BECFF4(&v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_236BECFF4(v36, v37);
    sub_236BECFF4(v37, &v33);
    result = sub_236C36478();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_236BECFF4(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_236C0A290();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_236C11138(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(void);
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  int64_t v69;
  uint64_t *v70;
  _QWORD *v71;
  char *v72;
  _QWORD *v73;

  v71 = a2;
  v3 = sub_236C3592C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v72 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FA0);
  v6 = MEMORY[0x24BDAC7A8](v65);
  v64 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v63 = (uint64_t *)((char *)&v58 - v9);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v70 = (uint64_t *)((char *)&v58 - v11);
  MEMORY[0x24BDAC7A8](v10);
  v62 = (char *)&v58 - v12;
  v13 = *(_QWORD *)(a1 + 64);
  v59 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v60 = (unint64_t)(v14 + 63) >> 6;
  v66 = a1;
  swift_bridgeObjectRetain();
  v17 = 0;
  v61 = v4;
  while (1)
  {
    if (v16)
    {
      v68 = (v16 - 1) & v16;
      v69 = v17;
      v18 = __clz(__rbit64(v16)) | (v17 << 6);
    }
    else
    {
      v19 = v17 + 1;
      if (__OFADD__(v17, 1))
        goto LABEL_36;
      if (v19 >= v60)
        return swift_release();
      v20 = *(_QWORD *)(v59 + 8 * v19);
      v21 = v17 + 1;
      if (!v20)
      {
        v21 = v17 + 2;
        if (v17 + 2 >= v60)
          return swift_release();
        v20 = *(_QWORD *)(v59 + 8 * v21);
        if (!v20)
        {
          v21 = v17 + 3;
          if (v17 + 3 >= v60)
            return swift_release();
          v20 = *(_QWORD *)(v59 + 8 * v21);
          if (!v20)
          {
            v21 = v17 + 4;
            if (v17 + 4 >= v60)
              return swift_release();
            v20 = *(_QWORD *)(v59 + 8 * v21);
            if (!v20)
            {
              v22 = v17 + 5;
              if (v17 + 5 >= v60)
                return swift_release();
              v20 = *(_QWORD *)(v59 + 8 * v22);
              if (!v20)
              {
                while (1)
                {
                  v21 = v22 + 1;
                  if (__OFADD__(v22, 1))
                    goto LABEL_37;
                  if (v21 >= v60)
                    return swift_release();
                  v20 = *(_QWORD *)(v59 + 8 * v21);
                  ++v22;
                  if (v20)
                    goto LABEL_23;
                }
              }
              v21 = v17 + 5;
            }
          }
        }
      }
LABEL_23:
      v68 = (v20 - 1) & v20;
      v69 = v21;
      v18 = __clz(__rbit64(v20)) + (v21 << 6);
    }
    v23 = v65;
    v24 = (uint64_t *)(*(_QWORD *)(v66 + 48) + 16 * v18);
    v26 = *v24;
    v25 = v24[1];
    v27 = *(_QWORD *)(v4 + 72);
    v28 = v62;
    v29 = *(void (**)(void))(v4 + 16);
    ((void (*)(char *, unint64_t, uint64_t))v29)(&v62[*(int *)(v65 + 48)], *(_QWORD *)(v66 + 56) + v27 * v18, v3);
    *v28 = v26;
    v28[1] = v25;
    v30 = (uint64_t)v28;
    v31 = v70;
    sub_236C15348(v30, (uint64_t)v70, &qword_2542B2FA0);
    v32 = *(int *)(v23 + 48);
    v33 = v63;
    v34 = (char *)v31 + v32;
    v36 = *v31;
    v35 = v31[1];
    *v63 = v36;
    v33[1] = v35;
    v67 = (char *)v33 + v32;
    v29();
    v37 = &v64[*(int *)(v23 + 48)];
    ((void (*)(char *, char *, uint64_t))v29)(v37, v34, v3);
    v38 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v39 = v37;
    v40 = v3;
    v38(v72, v39, v3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = v71;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v73 = (_QWORD *)*v41;
    v43 = v73;
    *v41 = 0x8000000000000000;
    v45 = sub_236BEE010(v36, v35);
    v46 = v43[2];
    v47 = (v44 & 1) == 0;
    v48 = v46 + v47;
    if (__OFADD__(v46, v47))
      break;
    v49 = v44;
    if (v43[3] >= v48)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_236BEE20C();
    }
    else
    {
      sub_236BEE744(v48, isUniquelyReferenced_nonNull_native);
      v50 = sub_236BEE010(v36, v35);
      if ((v49 & 1) != (v51 & 1))
        goto LABEL_38;
      v45 = v50;
    }
    v3 = v40;
    v52 = v73;
    if ((v49 & 1) != 0)
    {
      v4 = v61;
      (*(void (**)(unint64_t, char *, uint64_t))(v61 + 40))(v73[7] + v45 * v27, v72, v40);
    }
    else
    {
      v73[(v45 >> 6) + 8] |= 1 << v45;
      v53 = (uint64_t *)(v52[6] + 16 * v45);
      *v53 = v36;
      v53[1] = v35;
      v38((char *)(v52[7] + v45 * v27), v72, v40);
      v54 = v52[2];
      v55 = __OFADD__(v54, 1);
      v56 = v54 + 1;
      if (v55)
        goto LABEL_35;
      v52[2] = v56;
      swift_bridgeObjectRetain();
      v4 = v61;
    }
    *v71 = v73;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v67, v40);
    sub_236BE6C14((uint64_t)v70, &qword_2542B2FA0);
    v16 = v68;
    v17 = v69;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  result = sub_236C3667C();
  __break(1u);
  return result;
}

uint64_t DurationSummaryState.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_config;
  v2 = sub_236C359F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_session);
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_logger;
  v4 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_236BE6C14(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_currentMessage, &qword_2542B1650);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_236C116CC@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  double v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  void (*v59)(_QWORD, _QWORD, _QWORD);
  uint64_t v60;
  void (*v61)(_QWORD, _QWORD, _QWORD);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, _QWORD);
  char *v74;
  uint64_t v75;
  int isUniquelyReferenced_nonNull_native;
  char v77;
  unint64_t v78;
  uint64_t v79;
  _BOOL8 v80;
  uint64_t v81;
  char v82;
  unint64_t v83;
  char v84;
  double v85;
  uint64_t *v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  void (*v96)(_QWORD);
  void (*v97)(uint64_t *, _QWORD, uint64_t, void (*)(_QWORD, _QWORD, _QWORD));
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  double *v101;
  uint64_t v102;
  void (*v103)(char *, double *, _QWORD);
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  char *v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  NSObject *v123;
  os_log_type_t v124;
  _BOOL4 v125;
  uint64_t v126;
  uint8_t *v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(double *, _QWORD);
  uint64_t v131;
  uint64_t v132;
  NSObject *v133;
  os_log_type_t v134;
  uint8_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t *v142;
  double *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  void (*v156)(_QWORD, _QWORD, _QWORD);
  char *v157;
  char *v158;
  double v159[5];
  uint64_t v160;

  v3 = v2;
  LODWORD(v154) = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B14F0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v139 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_236C35C98();
  v152 = *(_QWORD *)(v8 - 8);
  v153 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v151 = (char *)&v139 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_236C3592C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v139 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (double *)((char *)&v139 - v16);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v158 = (char *)&v139 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v157 = (char *)&v139 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v155 = (char *)&v139 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v139 - v26;
  v28 = OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_mostRecentTimestamp;
  v29 = *(double *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_mostRecentTimestamp);
  if (v29 <= 0.0
    || (v30 = OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_startAATimestamp,
        v31 = *(double *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_startAATimestamp),
        v31 <= 0.0))
  {
    swift_retain_n();
    v41 = sub_236C35F44();
    v42 = sub_236C36328();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      *(_DWORD *)v43 = 134218496;
      v159[0] = *(double *)(v3 + v28);
      v154 = a2;
      sub_236C363F4();
      swift_release();
      *(_WORD *)(v43 + 12) = 2048;
      v159[0] = *(double *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_startAATimestamp);
      sub_236C363F4();
      swift_release_n();
      *(_WORD *)(v43 + 22) = 2048;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_session), *(_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_session + 24));
      *(double *)&v44 = COERCE_DOUBLE(sub_236C35AF4());
      swift_release();
      v159[0] = *(double *)&v44;
      a2 = v154;
      sub_236C363F4();
      swift_release();
      _os_log_impl(&dword_236BE1000, v41, v42, "invalid times { caTimestamp=%f startCaTimestamp=%f reporterID=%lld }", (uint8_t *)v43, 0x20u);
      MEMORY[0x23B800318](v43, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    v45 = sub_236C35DB8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(a2, 1, 1, v45);
  }
  v142 = v25;
  v144 = v14;
  v141 = v7;
  v32 = v29 - v31;
  v33 = v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_logger;
  swift_retain_n();
  v145 = v33;
  v34 = sub_236C35F44();
  v35 = sub_236C36328();
  v36 = v35;
  v37 = os_log_type_enabled(v34, v35);
  v156 = (void (*)(_QWORD, _QWORD, _QWORD))v10;
  v149 = v28;
  v148 = v30;
  v143 = v17;
  if (v37)
  {
    v38 = swift_slowAlloc();
    *(_DWORD *)v38 = 134218752;
    v159[0] = v32;
    sub_236C363F4();
    LODWORD(v150) = v36;
    *(_WORD *)(v38 + 12) = 2048;
    v159[0] = *(double *)(v3 + v149);
    sub_236C363F4();
    swift_release();
    *(_WORD *)(v38 + 22) = 2048;
    v159[0] = *(double *)(v3 + v30);
    sub_236C363F4();
    swift_release_n();
    *(_WORD *)(v38 + 32) = 2048;
    v146 = v38 + 34;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_session), *(_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_session + 24));
    *(double *)&v39 = COERCE_DOUBLE(sub_236C35AF4());
    swift_release();
    v159[0] = *(double *)&v39;
    sub_236C363F4();
    swift_release();
    _os_log_impl(&dword_236BE1000, v34, (os_log_type_t)v150, "runningTime { runningTime=%f caTimestamp=%f startCaTimestamp=%f reporterID=%lld }", (uint8_t *)v38, 0x2Au);
    v40 = v38;
    v28 = v149;
    MEMORY[0x23B800318](v40, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  if ((v154 & 1) == 0)
  {
    sub_236C359B0();
    if (v47 >= v32)
      goto LABEL_51;
  }
  v154 = a2;
  v48 = (uint64_t *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_previousValues);
  swift_beginAccess();
  v49 = *v48;
  v50 = v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_config;
  swift_bridgeObjectRetain();
  v146 = v50;
  v51 = sub_236C359BC();
  v52 = *(_QWORD *)(v51 + 16);
  v150 = v48;
  if (v52)
  {
    v53 = v28;
    v140 = v51;
    v54 = (uint64_t *)(v51 + 40);
    while (1)
    {
      v55 = *v54;
      if (!*(_QWORD *)(v49 + 16))
        break;
      v56 = *(v54 - 1);
      swift_bridgeObjectRetain();
      v57 = sub_236BEE010(v56, v55);
      if ((v58 & 1) == 0)
        goto LABEL_50;
      v59 = v156;
      (*(void (**)(char *, unint64_t, _QWORD))(v11 + 16))(v27, *(_QWORD *)(v49 + 56) + *(_QWORD *)(v11 + 72) * v57, v156);
      (*(void (**)(char *, _QWORD, uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))(v11 + 56))(v27, 0, 1, v59);
      sub_236BE6C14((uint64_t)v27, &qword_2542B1640);
      swift_bridgeObjectRelease();
      v54 += 2;
      if (!--v52)
      {
        swift_bridgeObjectRelease();
        v48 = v150;
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRetain();
LABEL_50:
    (*(void (**)(char *, uint64_t, uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))(v11 + 56))(v27, 1, 1, v156);
    sub_236BE6C14((uint64_t)v27, &qword_2542B1640);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v154;
    v28 = v53;
LABEL_51:
    swift_retain();
    v133 = sub_236C35F44();
    v134 = sub_236C36328();
    if (os_log_type_enabled(v133, v134))
    {
      v135 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v135 = 134217984;
      v159[0] = *(double *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_messageNumber);
      sub_236C363F4();
      swift_release();
      _os_log_impl(&dword_236BE1000, v133, v134, "skipped summary message, too short { action=skip, count=%lld }", v135, 0xCu);
      MEMORY[0x23B800318](v135, -1, -1);
    }
    else
    {
      swift_release();
    }
    v136 = v148;

    v137 = sub_236C35DB8();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(a2, 1, 1, v137);
    v138 = 0;
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_isRunning) == 1)
      v138 = *(_QWORD *)(v3 + v28);
    *(_QWORD *)(v3 + v136) = v138;
    return result;
  }
  swift_bridgeObjectRelease();
LABEL_19:
  swift_bridgeObjectRelease();
  v60 = *(_QWORD *)(sub_236C359E0() + 16);
  swift_bridgeObjectRelease();
  v61 = v156;
  if (__OFADD__(v60, 5))
    goto LABEL_59;
  v160 = sub_236C36064();
  v62 = sub_236C35950();
  sub_236C11138(v62, &v160);
  swift_bridgeObjectRelease();
  v63 = sub_236C359E0();
  v64 = *(_QWORD *)(v63 + 16);
  v147 = v3;
  if (v64)
  {
    swift_bridgeObjectRetain();
    v140 = v63;
    v65 = (uint64_t *)(v63 + 40);
    v66 = (uint64_t)v155;
    while (1)
    {
      v67 = *v65;
      v68 = *v48;
      if (!*(_QWORD *)(*v48 + 16))
        break;
      v69 = *(v65 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v70 = sub_236BEE010(v69, v67);
      if ((v71 & 1) != 0)
      {
        (*(void (**)(uint64_t, unint64_t, _QWORD))(v11 + 16))(v66, *(_QWORD *)(v68 + 56) + *(_QWORD *)(v11 + 72) * v70, v61);
        v72 = 0;
      }
      else
      {
        v72 = 1;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))(v11 + 56))(v66, v72, 1, v61);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v11 + 48))(v66, 1, v61) == 1)
        goto LABEL_23;
      v73 = *(void (**)(char *, uint64_t, _QWORD))(v11 + 32);
      v74 = v157;
      v73(v157, v66, v61);
      (*(void (**)(char *, char *, _QWORD))(v11 + 16))(v158, v74, v61);
      swift_bridgeObjectRetain();
      v75 = v160;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v159[0] = *(double *)&v75;
      v160 = 0x8000000000000000;
      v78 = sub_236BEE010(v69, v67);
      v79 = *(_QWORD *)(v75 + 16);
      v80 = (v77 & 1) == 0;
      v81 = v79 + v80;
      if (__OFADD__(v79, v80))
      {
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        result = sub_236C3667C();
        __break(1u);
        return result;
      }
      v82 = v77;
      if (*(_QWORD *)(v75 + 24) >= v81)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_236BEE20C();
      }
      else
      {
        sub_236BEE744(v81, isUniquelyReferenced_nonNull_native);
        v83 = sub_236BEE010(v69, v67);
        if ((v82 & 1) != (v84 & 1))
          goto LABEL_61;
        v78 = v83;
      }
      v48 = v150;
      v85 = v159[0];
      if ((v82 & 1) != 0)
      {
        v61 = v156;
        (*(void (**)(unint64_t, char *, _QWORD))(v11 + 40))(*(_QWORD *)(*(_QWORD *)&v159[0] + 56) + *(_QWORD *)(v11 + 72) * v78, v158, v156);
      }
      else
      {
        *(_QWORD *)(*(_QWORD *)&v159[0] + 8 * (v78 >> 6) + 64) |= 1 << v78;
        v86 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)&v85 + 48) + 16 * v78);
        *v86 = v69;
        v86[1] = v67;
        v61 = v156;
        v73((char *)(*(_QWORD *)(*(_QWORD *)&v85 + 56) + *(_QWORD *)(v11 + 72) * v78), (uint64_t)v158, v156);
        v87 = *(_QWORD *)(*(_QWORD *)&v85 + 16);
        v88 = __OFADD__(v87, 1);
        v89 = v87 + 1;
        if (v88)
          goto LABEL_58;
        *(_QWORD *)(*(_QWORD *)&v85 + 16) = v89;
        swift_bridgeObjectRetain();
      }
      v160 = *(_QWORD *)&v159[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v11 + 8))(v157, v61);
      v66 = (uint64_t)v155;
LABEL_24:
      v65 += 2;
      swift_bridgeObjectRelease();
      if (!--v64)
      {
        swift_bridgeObjectRelease();
        v3 = v147;
        goto LABEL_42;
      }
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))(v11 + 56))(v66, 1, 1, v61);
    swift_bridgeObjectRetain();
LABEL_23:
    sub_236BE6C14(v66, &qword_2542B1640);
    goto LABEL_24;
  }
LABEL_42:
  swift_bridgeObjectRelease();
  v90 = v151;
  v91 = *(char **)(v152 + 104);
  v92 = v153;
  ((void (*)(char *, _QWORD, uint64_t))v91)(v151, *MEMORY[0x24BE09DD8], v153);
  v157 = v91;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_session), *(_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_session + 24));
  v93 = sub_236C35B48();
  v94 = v142;
  *v142 = v93;
  v94[1] = v95;
  v96 = *(void (**)(_QWORD))(v11 + 104);
  ((void (*)(uint64_t *, _QWORD, _QWORD))v96)(v94, *MEMORY[0x24BE09AD0], v61);
  v97 = *(void (**)(uint64_t *, _QWORD, uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))(v11 + 56);
  v97(v94, 0, 1, v61);
  sub_236C3607C();
  ((void (*)(char *, _QWORD, uint64_t))v91)(v90, *MEMORY[0x24BE09DC0], v92);
  v158 = (char *)OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_messageNumber;
  *v94 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_messageNumber);
  ((void (*)(uint64_t *, _QWORD, _QWORD))v96)(v94, *MEMORY[0x24BE09AA8], v61);
  v97(v94, 0, 1, v61);
  sub_236C3607C();
  v98 = sub_236C35980();
  v100 = v99;
  v101 = v143;
  *v143 = v32;
  v102 = *MEMORY[0x24BE09AC0];
  v96(v101);
  v103 = *(void (**)(char *, double *, _QWORD))(v11 + 32);
  v104 = (uint64_t)v144;
  v103(v144, v101, v61);
  v105 = v160;
  v106 = swift_isUniquelyReferenced_nonNull_native();
  v159[0] = *(double *)&v105;
  v160 = 0x8000000000000000;
  sub_236C0AAB0(v104, v98, v100, v106);
  v160 = *(_QWORD *)&v159[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v107 = v148;
  *v101 = *(double *)(v147 + v148);
  LODWORD(v155) = v102;
  v156 = (void (*)(_QWORD, _QWORD, _QWORD))v96;
  ((void (*)(double *, uint64_t, _QWORD))v96)(v101, v102, v61);
  v103((char *)v104, v101, v61);
  v108 = v160;
  v109 = swift_isUniquelyReferenced_nonNull_native();
  v159[0] = *(double *)&v108;
  sub_236C0AAB0(v104, 0xD000000000000011, 0x8000000236C3A810, v109);
  v160 = *(_QWORD *)&v159[0];
  swift_bridgeObjectRelease();
  *v101 = v32 + *(double *)(v147 + v107);
  ((void (*)(double *, uint64_t, _QWORD))v96)(v101, v102, v61);
  v103((char *)v104, v101, v61);
  v110 = v160;
  v111 = swift_isUniquelyReferenced_nonNull_native();
  v159[0] = *(double *)&v110;
  sub_236C0AAB0(v104, 0x7972616D6D75735FLL, 0xEF656D6954646E45, v111);
  v160 = *(_QWORD *)&v159[0];
  swift_bridgeObjectRelease();
  v112 = v153;
  ((void (*)(char *, _QWORD, uint64_t))v157)(v90, *MEMORY[0x24BE09DF0], v153);
  v113 = sub_236C35C8C();
  v115 = v114;
  (*(void (**)(char *, uint64_t))(v152 + 8))(v90, v112);
  *v101 = v32 + *(double *)(v147 + v107);
  v156(v101, v155, v61);
  v103((char *)v104, v101, v61);
  v116 = v160;
  v117 = swift_isUniquelyReferenced_nonNull_native();
  v159[0] = *(double *)&v116;
  v160 = 0x8000000000000000;
  v118 = v147;
  sub_236C0AAB0(v104, v113, v115, v117);
  v160 = *(_QWORD *)&v159[0];
  v119 = v158;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v120 = sub_236C3598C();
  sub_236C1275C((uint64_t)&v160, v120);
  v121 = *(_QWORD *)&v119[v118];
  v88 = __OFADD__(v121, 1);
  v122 = v121 + 1;
  if (v88)
    goto LABEL_60;
  *(_QWORD *)&v119[v118] = v122;
  swift_retain();
  v123 = sub_236C35F44();
  v124 = sub_236C36328();
  v125 = os_log_type_enabled(v123, v124);
  v126 = v149;
  if (v125)
  {
    v127 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v127 = 134217984;
    v159[0] = *(double *)&v119[v118];
    sub_236C363F4();
    swift_release();
    _os_log_impl(&dword_236BE1000, v123, v124, "added summary message { action=add, count=%lld }", v127, 0xCu);
    MEMORY[0x23B800318](v127, -1, -1);
  }
  else
  {
    swift_release();
  }

  sub_236C3598C();
  sub_236C3595C();
  v128 = sub_236C35D58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v141, 1, 1, v128);
  swift_bridgeObjectRetain();
  v129 = v154;
  sub_236C35D64();
  v130 = (void (*)(double *, _QWORD))sub_236C35D7C();
  sub_236C35D4C();
  v130(v159, 0);
  v131 = sub_236C35DB8();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 56))(v129, 0, 1, v131);
  result = swift_bridgeObjectRelease();
  v132 = 0;
  if (*(_BYTE *)(v118 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_isRunning) == 1)
    v132 = *(_QWORD *)(v118 + v126);
  *(_QWORD *)(v118 + v148) = v132;
  return result;
}

uint64_t sub_236C1275C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v22[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_236C35C98();
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v22[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 3)
  {
    v12 = (uint64_t *)(v2 + 16);
    result = swift_beginAccess();
    v13 = *(_QWORD *)(v2 + 16);
    if (*(_QWORD *)(v13 + 16))
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x24BE09E70], v7);
      swift_bridgeObjectRetain_n();
      v14 = sub_236C09BF0(v13);
      swift_bridgeObjectRelease();
      v22[0] = (uint64_t)v14;
      sub_236C14384(v22);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FD0);
      sub_236BED514();
      v15 = sub_236C360B8();
      v17 = v16;
      swift_release();
      *v6 = v15;
      v6[1] = v17;
      v18 = *MEMORY[0x24BE09AD0];
      v19 = sub_236C3592C();
      v20 = *(_QWORD *)(v19 - 8);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v20 + 104))(v6, v18, v19);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v6, 0, 1, v19);
      sub_236C3607C();
      swift_beginAccess();
      if (*(_QWORD *)(*v12 + 16))
      {
        swift_isUniquelyReferenced_nonNull_native();
        v21 = *v12;
        *v12 = 0x8000000000000000;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256447A20);
        sub_236C3646C();
        *v12 = v21;
        swift_bridgeObjectRelease();
      }
      return swift_endAccess();
    }
  }
  return result;
}

uint64_t sub_236C129A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_236C3592C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_236C35D10();
  if (*(_QWORD *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    v14 = sub_236BEE010(a1, a2);
    if ((v15 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, *(_QWORD *)(v13 + 56) + *(_QWORD *)(v10 + 72) * v14, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_236BE6C14((uint64_t)v8, &qword_2542B1640);
    v16 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v16 = MEMORY[0x23B7FED94](v12, a3);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v16 & 1;
}

uint64_t sub_236C12B60@<X0>(uint64_t a1@<X8>)
{
  return sub_236C116CC(0, a1);
}

uint64_t DurationSummaryState.__deallocating_deinit()
{
  DurationSummaryState.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_236C12B8C()
{
  return type metadata accessor for DurationSummaryState();
}

void sub_236C12B94()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_236C359F8();
  if (v0 <= 0x3F)
  {
    sub_236C35F50();
    if (v1 <= 0x3F)
    {
      sub_236C10AF4();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for DurationSummaryState()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_236C12C8C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_236BEAE8C(a1, a2, a3, a4, &qword_2542B1540, (uint64_t (*)(_QWORD))MEMORY[0x24BE09FA8]);
}

uint64_t sub_236C12CA0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542B30C0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FD0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_236C36574();
  __break(1u);
  return result;
}

uint64_t sub_236C12E28(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_236BEAE8C(a1, a2, a3, a4, &qword_256447A28, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0]);
}

uint64_t sub_236C12E3C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3080);
  v6 = sub_236C3655C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_236BECFF4(v24, v35);
      }
      else
      {
        sub_236BED454((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_236C366A0();
      sub_236C36154();
      result = sub_236C366C4();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_236BECFF4(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_236C13138(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  __int16 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  v40 = sub_236C357DC();
  v5 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447A30);
  result = sub_236C3655C();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v35 = v2;
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v38 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v37 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    v36 = a2;
    v17 = 16;
    if ((a2 & 1) != 0)
      v17 = 32;
    v39 = v17;
    while (1)
    {
      if (v15)
      {
        v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v20 = v19 | (v11 << 6);
      }
      else
      {
        v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v38;
        if (v21 >= v37)
          goto LABEL_33;
        v22 = v38[v21];
        ++v11;
        if (!v22)
        {
          v11 = v21 + 1;
          if (v21 + 1 >= v37)
            goto LABEL_33;
          v22 = v38[v11];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_33:
              if ((v36 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_40;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v38, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v38 = -1 << v33;
              v3 = v35;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                v11 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v11 >= v37)
                  goto LABEL_33;
                v22 = v38[v11];
                ++v23;
                if (v22)
                  goto LABEL_23;
              }
            }
            v11 = v23;
          }
        }
LABEL_23:
        v15 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      v24 = *(_WORD *)(*(_QWORD *)(v8 + 48) + 2 * v20);
      v25 = *(_QWORD *)(v5 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + v39))(v7, *(_QWORD *)(v8 + 56) + v25 * v20, v40);
      sub_236C366A0();
      sub_236C366B8();
      result = sub_236C366C4();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v18 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_WORD *)(*(_QWORD *)(v10 + 48) + 2 * v18) = v24;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 56) + v25 * v18, v7, v40);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v10;
  return result;
}

uint64_t sub_236C13474(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  _OWORD *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  _OWORD v34[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3088);
  v6 = sub_236C3655C();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = v2;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v8 + 63) >> 6;
    v13 = v6 + 64;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v19 >= v12)
          goto LABEL_34;
        v20 = v9[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v12)
            goto LABEL_34;
          v20 = v9[v15];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v12)
            {
LABEL_34:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v33;
                goto LABEL_41;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v32;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v15 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_43;
                if (v15 >= v12)
                  goto LABEL_34;
                v20 = v9[v15];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v15 = v21;
          }
        }
LABEL_21:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v18);
      v23 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v18);
      if ((a2 & 1) != 0)
      {
        sub_236BECFF4(v23, v34);
      }
      else
      {
        sub_236BED454((uint64_t)v23, (uint64_t)v34);
        v24 = v22;
      }
      result = sub_236C363C4();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v13 + 8 * v27);
        }
        while (v31 == -1);
        v16 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v22;
      result = (uint64_t)sub_236BECFF4(v34, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v16));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v7;
  return result;
}

uint64_t sub_236C13744(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B30E0);
  v36 = a2;
  v6 = sub_236C3655C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_236C366A0();
    sub_236C36154();
    result = sub_236C366C4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

id sub_236C13A58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3078);
  v2 = *v0;
  v3 = sub_236C36550();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_236C13C08()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3080);
  v2 = *v0;
  v3 = sub_236C36550();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_236BED454(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_236BECFF4(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_236C13DEC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int16 v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_236C357DC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447A30);
  v24 = v0;
  v5 = *v0;
  v6 = sub_236C36550();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 2 * v16;
    v18 = *(_WORD *)(*(_QWORD *)(v5 + 48) + 2 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_WORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_236C1400C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3088);
  v2 = *v0;
  v3 = sub_236C36550();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_236BED454(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_236BECFF4(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_236C141D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B30E0);
  v2 = *v0;
  v3 = sub_236C36550();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_236C14384(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_236C14FEC(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_236C143EC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_236C143EC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_236C36640();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_236C14AD4(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_236C14BA0((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_236C14FD8((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_236C36250();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_236C36658();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_236C36658()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_236C14E38(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_236C14E38((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_236C14BA0((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_236C36658() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_236C36538();
  __break(1u);
  return result;
}

uint64_t sub_236C14AD4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_236C36658(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_236C14BA0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_236C36658() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_236C36658() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_236C14F30((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_236C36574();
  __break(1u);
  return result;
}

char *sub_236C14E38(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1550);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_236C14F30(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_236C36574();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_236C14FD8(uint64_t a1)
{
  return sub_236C14E38(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_236C14FEC(uint64_t a1)
{
  return sub_236BE3EBC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_236C15000@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  int64_t v45;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FA0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FA8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v40 - v11;
  v13 = *v1;
  v14 = v1[1];
  v16 = v1[2];
  v15 = v1[3];
  v17 = v15;
  v18 = v1[4];
  v40 = v6;
  if (v18)
  {
    v44 = a1;
    v45 = v15;
    v41 = v16;
    v42 = v14;
    v43 = v10;
    v19 = v4;
    v20 = (v18 - 1) & v18;
    v21 = __clz(__rbit64(v18)) | (v15 << 6);
LABEL_3:
    v22 = *(_QWORD *)(v13 + 56);
    v23 = (uint64_t *)(*(_QWORD *)(v13 + 48) + 16 * v21);
    v24 = v13;
    v26 = *v23;
    v25 = v23[1];
    v27 = sub_236C3592C();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(&v12[*(int *)(v3 + 48)], v22 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v21, v27);
    *(_QWORD *)v12 = v26;
    *((_QWORD *)v12 + 1) = v25;
    v4 = v19;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v12, 0, 1, v3);
    v13 = v24;
    swift_bridgeObjectRetain();
    v10 = v43;
    a1 = v44;
    v16 = v41;
    v14 = v42;
    goto LABEL_25;
  }
  v28 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
LABEL_23:
    v17 = v11;
    goto LABEL_24;
  }
  v29 = (unint64_t)(v16 + 64) >> 6;
  if (v28 < v29)
  {
    v30 = *(_QWORD *)(v14 + 8 * v28);
    if (v30)
    {
LABEL_7:
      v41 = v16;
      v42 = v14;
      v43 = v10;
      v44 = a1;
      v19 = v4;
      v20 = (v30 - 1) & v30;
      v21 = __clz(__rbit64(v30)) + (v28 << 6);
      v45 = v28;
      goto LABEL_3;
    }
    v31 = v15 + 2;
    v17 = v15 + 1;
    if (v15 + 2 < v29)
    {
      v30 = *(_QWORD *)(v14 + 8 * v31);
      if (v30)
      {
LABEL_10:
        v28 = v31;
        goto LABEL_7;
      }
      v17 = v15 + 2;
      if (v15 + 3 < v29)
      {
        v30 = *(_QWORD *)(v14 + 8 * (v15 + 3));
        if (v30)
        {
          v28 = v15 + 3;
          goto LABEL_7;
        }
        v31 = v15 + 4;
        v17 = v15 + 3;
        if (v15 + 4 < v29)
        {
          v30 = *(_QWORD *)(v14 + 8 * v31);
          if (v30)
            goto LABEL_10;
          v28 = v15 + 5;
          v17 = v15 + 4;
          if (v15 + 5 < v29)
          {
            v30 = *(_QWORD *)(v14 + 8 * v28);
            if (v30)
              goto LABEL_7;
            v11 = v29 - 1;
            v32 = v15 + 6;
            while (v29 != v32)
            {
              v30 = *(_QWORD *)(v14 + 8 * v32++);
              if (v30)
              {
                v28 = v32 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  v45 = v17;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
  v20 = 0;
LABEL_25:
  *v1 = v13;
  v1[1] = v14;
  v33 = v45;
  v1[2] = v16;
  v1[3] = v33;
  v1[4] = v20;
  v34 = (void (*)(uint64_t))v1[5];
  sub_236C15348((uint64_t)v12, (uint64_t)v10, &qword_2542B2FA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FB8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a1, 1, 1, v35);
  }
  else
  {
    v37 = (uint64_t)v10;
    v38 = (uint64_t)v40;
    sub_236C15348(v37, (uint64_t)v40, &qword_2542B2FA0);
    v34(v38);
    sub_236BE6C14(v38, &qword_2542B2FA0);
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FB8);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(a1, 0, 1, v39);
  }
}

uint64_t sub_236C15348(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_236C1538C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236C129A8(a1, a2, a3);
}

_QWORD *sub_236C15394(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v7 = (uint64_t *)(a3 + 40);
  v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v10 = *v7;
    v22[0] = *(v7 - 1);
    v22[1] = v10;
    swift_bridgeObjectRetain();
    a1(&v18, v22);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
    v11 = v19;
    if (v19)
    {
      v12 = v18;
      v13 = v21;
      v23 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_236C1BFD8(0, v8[2] + 1, 1, v8);
      v15 = v8[2];
      v14 = v8[3];
      if (v15 >= v14 >> 1)
        v8 = sub_236C1BFD8((_QWORD *)(v14 > 1), v15 + 1, 1, v8);
      v8[2] = v15 + 1;
      v9 = &v8[4 * v15];
      v9[4] = v12;
      v9[5] = v11;
      v9[6] = v23;
      v9[7] = v13;
    }
    v7 += 2;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_236C15500(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3080);
  v2 = sub_236C36568();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_236C1945C(v6, (uint64_t)&v15, &qword_2542B2FC8);
    v7 = v15;
    v8 = v16;
    result = sub_236BEE010(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_236BECFF4(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_236C15634(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447A58);
  v2 = (_QWORD *)sub_236C36568();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_236BEE010(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_236C15754(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3070);
  v2 = (_QWORD *)sub_236C36568();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_236BEE010(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_236C1586C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447A40);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447A48);
  v6 = sub_236C36568();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_236C1945C(v12, (uint64_t)v5, &qword_256447A40);
    result = sub_236C01D58((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_236C35A40();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_OWORD *)(v7[7] + 16 * v16) = *(_OWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_236C15A00(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_236C16BD0(0, v1, 0);
    v2 = v11;
    v4 = *(_QWORD *)(sub_236C359F8() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_236C35998();
      v9 = *(_QWORD *)(v11 + 16);
      v8 = *(_QWORD *)(v11 + 24);
      if (v9 >= v8 >> 1)
        sub_236C16BD0(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v11 + 16) = v9 + 1;
      *(_QWORD *)(v11 + 8 * v9 + 32) = v7;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_236C15AF0(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_236C15B04(a1, a2, a3);
}

uint64_t sub_236C15B04(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = v3;
  v6 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_236C36508();
    v9 = *(_QWORD *)(sub_236C359F8() - 8);
    v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    while (1)
    {
      a1(&v12, v10);
      if (v4)
        break;
      v4 = 0;
      sub_236C364F0();
      sub_236C36514();
      sub_236C36520();
      sub_236C364FC();
      v10 += v11;
      if (!--v6)
        return v13;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_236C15C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_236C366A0();
    sub_236C36154();
    v6 = sub_236C366C4();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_236C36658() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_236C36658() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_236C15D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v15[4];

  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_9;
  sub_236C366A0();
  sub_236BEB080(v15, a1);
  v4 = sub_236C366C4();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    goto LABEL_9;
  v8 = swift_bridgeObjectRetain();
  v9 = sub_236C18550(v8, a1);
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
    v10 = 1;
    return v10 & 1;
  }
  v11 = ~v5;
  v12 = (v6 + 1) & v11;
  if (((*(_QWORD *)(v7 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_9:
    v10 = 0;
    return v10 & 1;
  }
  do
  {
    v13 = swift_bridgeObjectRetain();
    v10 = sub_236C18550(v13, a1);
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      break;
    v12 = (v12 + 1) & v11;
  }
  while (((*(_QWORD *)(v7 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  return v10 & 1;
}

uint64_t *DurationSummaryWorker.__allocating_init(with:)(_QWORD *a1)
{
  swift_allocObject();
  return DurationSummaryWorker.init(with:)(a1);
}

Swift::Bool __swiftcall DurationSummaryWorker.start()()
{
  uint64_t v0;

  swift_beginAccess();
  *(_BYTE *)(v0 + 16) = 1;
  return 1;
}

void sub_236C15EE8()
{
  uint64_t v0;
  _QWORD *v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_session);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  if ((sub_236C35B18() & 1) == 0)
  {
    swift_retain();
    oslog = sub_236C35F44();
    v2 = sub_236C36334();
    if (os_log_type_enabled(oslog, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v3 = 134217984;
      __swift_project_boxed_opaque_existential_1(v1, v1[3]);
      sub_236C35AF4();
      sub_236C363F4();
      swift_release();
      _os_log_impl(&dword_236BE1000, oslog, v2, "Summary message dropped { reporterID=%lld }", v3, 0xCu);
      MEMORY[0x23B800318](v3, -1, -1);

    }
    else
    {
      swift_release();

    }
  }
}

Swift::Void __swiftcall DurationSummaryWorker.stop()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1650);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_236C35DB8();
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v24 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v0;
  v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_summaryStates);
  swift_beginAccess();
  v7 = *v6;
  if ((unint64_t)*v6 >> 62)
    goto LABEL_19;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v9 = v28;
  while (v8)
  {
    v26 = v7 & 0xC000000000000001;
    v10 = 4;
    while (1)
    {
      v11 = v10 - 4;
      if (!v26)
        break;
      v12 = MEMORY[0x23B7FF964](v10 - 4, v7);
      v13 = v10 - 3;
      if (__OFADD__(v11, 1))
        goto LABEL_17;
LABEL_11:
      if (*(_BYTE *)(v12 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_isRunning) == 1)
        sub_236C116CC(0, (uint64_t)v3);
      else
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v3, 1, 1, v9);
      v14 = *(_QWORD *)(sub_236C35950() + 16);
      swift_bridgeObjectRelease();
      if (v14 + 0x4000000000000000 < 0)
        goto LABEL_18;
      v15 = v7;
      sub_236C3592C();
      v16 = sub_236C36064();
      v17 = (uint64_t *)(v12 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_previousValues);
      swift_beginAccess();
      *v17 = v16;
      swift_bridgeObjectRelease();
      v18 = sub_236C35950();
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v29 = *v17;
      *v17 = 0x8000000000000000;
      sub_236BEC134(v18, (uint64_t)sub_236BEDDE0, 0, isUniquelyReferenced_nonNull_native, &v29);
      *v17 = v29;
      swift_bridgeObjectRelease();
      swift_endAccess();
      v20 = v27;
      v9 = v28;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v3, 1, v28) == 1)
      {
        swift_release();
        sub_236BE6C14((uint64_t)v3, &qword_2542B1650);
      }
      else
      {
        v21 = v24;
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v24, v3, v28);
        sub_236C15EE8();
        swift_release();
        v22 = v21;
        v9 = v28;
        (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v28);
      }
      v7 = v15;
      ++v10;
      if (v13 == v8)
        goto LABEL_20;
    }
    v12 = *(_QWORD *)(v7 + 8 * v10);
    swift_retain();
    v13 = v10 - 3;
    if (!__OFADD__(v11, 1))
      goto LABEL_11;
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain_n();
    v8 = sub_236C36544();
    swift_bridgeObjectRelease();
    v9 = v28;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  v23 = v25;
  swift_beginAccess();
  *(_BYTE *)(v23 + 16) = 0;
}

uint64_t DurationSummaryWorker.isStarted.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t DurationSummaryWorker.summaryEvent.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t DurationSummaryWorker.workerConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DurationSummaryWorker.workerConfig.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*DurationSummaryWorker.workerConfig.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_236C16554(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void);
  uint64_t v28;
  unint64_t v29;
  char v30;
  void (*v31)(void (*)(void), uint64_t, uint64_t, uint64_t);
  char *v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  char v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void (*v50)(void);
  uint64_t v51;

  v4 = sub_236C3592C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v44 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1648);
  MEMORY[0x24BDAC7A8](v47);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v45 = (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v51 = (uint64_t)&v44 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (void (*)(void))((char *)&v44 - v14);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FA0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (uint64_t *)((char *)&v44 - v21);
  v23 = *(int *)(v20 + 48);
  v24 = (char *)a1 + v23;
  v25 = *a1;
  v26 = a1[1];
  *v22 = v25;
  v22[1] = v26;
  v27 = *(void (**)(void))(v5 + 16);
  v48 = (char *)&v44 + v23 - v21;
  v46 = v24;
  v50 = v27;
  v27();
  v28 = *(_QWORD *)(a2 + 16);
  v49 = v8;
  if (v28)
  {
    swift_bridgeObjectRetain();
    v29 = sub_236BEE010(v25, v26);
    if ((v30 & 1) != 0)
    {
      ((void (*)(void (*)(void), unint64_t, uint64_t))v50)(v15, *(_QWORD *)(a2 + 56) + *(_QWORD *)(v5 + 72) * v29, v4);
      v31 = *(void (**)(void (*)(void), uint64_t, uint64_t, uint64_t))(v5 + 56);
      v31(v15, 0, 1, v4);
    }
    else
    {
      v31 = *(void (**)(void (*)(void), uint64_t, uint64_t, uint64_t))(v5 + 56);
      v31(v15, 1, 1, v4);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v31 = *(void (**)(void (*)(void), uint64_t, uint64_t, uint64_t))(v5 + 56);
    v31(v15, 1, 1, v4);
  }
  v32 = (char *)v19 + *(int *)(v16 + 48);
  *v19 = v25;
  v19[1] = v26;
  ((void (*)(char *, char *, uint64_t))v50)(v32, v46, v4);
  v33 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v34 = v51;
  v33(v51, v32, v4);
  v31((void (*)(void))v34, 0, 1, v4);
  v35 = (uint64_t)v49;
  v36 = (uint64_t)&v49[*(int *)(v47 + 48)];
  v37 = &qword_2542B1640;
  sub_236C1945C((uint64_t)v15, (uint64_t)v49, &qword_2542B1640);
  sub_236C1945C(v34, v36, &qword_2542B1640);
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v38(v35, 1, v4) == 1)
  {
    sub_236BE6C14(v34, &qword_2542B1640);
    sub_236BE6C14((uint64_t)v15, &qword_2542B1640);
    if (v38(v36, 1, v4) == 1)
    {
      v39 = -1;
    }
    else
    {
      v37 = &qword_2542B1648;
      v39 = 0;
    }
  }
  else
  {
    v50 = v15;
    v40 = v45;
    sub_236C1945C(v35, v45, &qword_2542B1640);
    if (v38(v36, 1, v4) == 1)
    {
      sub_236BE6C14(v51, &qword_2542B1640);
      sub_236BE6C14((uint64_t)v50, &qword_2542B1640);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v40, v4);
      v39 = 0;
      v37 = &qword_2542B1648;
    }
    else
    {
      v41 = v44;
      v33((uint64_t)v44, (char *)v36, v4);
      sub_236C1941C((unint64_t *)&qword_2542B14E0, MEMORY[0x24BE09AF8]);
      v39 = sub_236C360C4();
      v42 = *(void (**)(char *, uint64_t))(v5 + 8);
      v42(v41, v4);
      v37 = &qword_2542B1640;
      sub_236BE6C14(v51, &qword_2542B1640);
      sub_236BE6C14((uint64_t)v50, &qword_2542B1640);
      v42((char *)v40, v4);
    }
  }
  sub_236BE6C14(v35, v37);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v48, v4);
  return v39 & 1;
}

uint64_t sub_236C16998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC22AudioAnalyticsExternal21DurationSummaryWorker20DynamicSummaryConfig_summaryConfig;
  v2 = sub_236C359F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DurationSummaryWorker.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_workerConfig;
  v2 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_session);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_logger;
  v4 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t DurationSummaryWorker.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_workerConfig;
  v2 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_session);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal21DurationSummaryWorker_logger;
  v4 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

void sub_236C16B8C()
{
  DurationSummaryWorker.stop()();
}

uint64_t sub_236C16BB4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_236C12C8C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_236C16BD0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_236C12CA0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_236C16BEC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_236C12E28(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_236C16C08(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD v48[13];
  uint64_t v49;

  v4 = *v2;
  sub_236C366A0();
  v5 = a2[3];
  v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  v7 = a2[10];
  v8 = a2[11];
  v46 = (uint64_t)a2;
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  v9 = sub_236C366C4();
  v10 = -1 << *(_BYTE *)(v4 + 32);
  v11 = v9 & ~v10;
  v12 = v4 + 56;
  if (((*(_QWORD *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v13 = ~v10;
    v14 = *(_QWORD *)(v4 + 48);
    while (1)
    {
      v15 = (_QWORD *)(v14 + 216 * v11);
      v16 = v15[10];
      v17 = v15[11];
      v18 = v15[3] == v5 && v15[4] == v6;
      if (v18 || (sub_236C36658() & 1) != 0)
      {
        v19 = v16 == v7 && v17 == v8;
        if (v19 || (sub_236C36658() & 1) != 0)
          break;
      }
      v11 = (v11 + 1) & v13;
      if (((*(_QWORD *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        goto LABEL_15;
    }
    swift_bridgeObjectRelease();
    sub_236BF9A54(v46);
    v20 = *(_QWORD *)(*(_QWORD *)v45 + 48) + 216 * v11;
    v21 = *(_OWORD *)(v20 + 32);
    v22 = *(_OWORD *)(v20 + 48);
    v23 = *(_OWORD *)(v20 + 80);
    v48[4] = *(_OWORD *)(v20 + 64);
    v48[5] = v23;
    v48[3] = v22;
    v24 = *(_OWORD *)(v20 + 144);
    v26 = *(_OWORD *)(v20 + 96);
    v25 = *(_OWORD *)(v20 + 112);
    v48[8] = *(_OWORD *)(v20 + 128);
    v48[9] = v24;
    v48[6] = v26;
    v48[7] = v25;
    v28 = *(_OWORD *)(v20 + 176);
    v27 = *(_OWORD *)(v20 + 192);
    v29 = *(_OWORD *)(v20 + 160);
    v49 = *(_QWORD *)(v20 + 208);
    v48[11] = v28;
    v48[12] = v27;
    v48[10] = v29;
    v30 = *(_OWORD *)(v20 + 16);
    v48[0] = *(_OWORD *)v20;
    v48[1] = v30;
    v48[2] = v21;
    v31 = *(_OWORD *)(v20 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(v20 + 160);
    *(_OWORD *)(a1 + 176) = v31;
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(v20 + 192);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(v20 + 208);
    v32 = *(_OWORD *)(v20 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(v20 + 96);
    *(_OWORD *)(a1 + 112) = v32;
    v33 = *(_OWORD *)(v20 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(v20 + 128);
    *(_OWORD *)(a1 + 144) = v33;
    v34 = *(_OWORD *)(v20 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(v20 + 32);
    *(_OWORD *)(a1 + 48) = v34;
    v35 = *(_OWORD *)(v20 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(v20 + 64);
    *(_OWORD *)(a1 + 80) = v35;
    v36 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v20;
    *(_OWORD *)(a1 + 16) = v36;
    sub_236BF99A0((uint64_t)v48);
    return 0;
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v48[0] = *(_QWORD *)v45;
    *(_QWORD *)v45 = 0x8000000000000000;
    sub_236BF99A0(v46);
    sub_236C176AC(v46, v11, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)v45 = *(_QWORD *)&v48[0];
    swift_bridgeObjectRelease();
    v39 = *(_OWORD *)(v46 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(v46 + 160);
    *(_OWORD *)(a1 + 176) = v39;
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(v46 + 192);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(v46 + 208);
    v40 = *(_OWORD *)(v46 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(v46 + 96);
    *(_OWORD *)(a1 + 112) = v40;
    v41 = *(_OWORD *)(v46 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(v46 + 128);
    *(_OWORD *)(a1 + 144) = v41;
    v42 = *(_OWORD *)(v46 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(v46 + 32);
    *(_OWORD *)(a1 + 48) = v42;
    v43 = *(_OWORD *)(v46 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(v46 + 64);
    *(_OWORD *)(a1 + 80) = v43;
    v44 = *(_OWORD *)(v46 + 16);
    result = 1;
    *(_OWORD *)a1 = *(_OWORD *)v46;
    *(_OWORD *)(a1 + 16) = v44;
  }
  return result;
}

uint64_t sub_236C16EC8(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  __int128 v17[4];

  v5 = *v2;
  sub_236C366A0();
  swift_bridgeObjectRetain();
  sub_236BEB080(v17, a2);
  v6 = sub_236C366C4();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v9 = swift_bridgeObjectRetain();
    v10 = sub_236C18550(v9, a2);
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
      swift_bridgeObjectRetain();
      return 0;
    }
    v11 = ~v7;
    while (1)
    {
      v8 = (v8 + 1) & v11;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        break;
      v12 = swift_bridgeObjectRetain();
      v13 = sub_236C18550(v12, a2);
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
        goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v17[0] = *v2;
  *v2 = 0x8000000000000000;
  v16 = swift_bridgeObjectRetain();
  sub_236C178D0(v16, v8, isUniquelyReferenced_nonNull_native);
  *v2 = *(_QWORD *)&v17[0];
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_236C17058()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447A38);
  v3 = sub_236C364A8();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v35 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v34 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    v36 = v2;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v46 = v10;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v34)
          goto LABEL_33;
        v16 = v35[v15];
        v17 = v10 + 1;
        if (!v16)
        {
          v17 = v10 + 2;
          if (v10 + 2 >= v34)
            goto LABEL_33;
          v16 = v35[v17];
          if (!v16)
          {
            v17 = v10 + 3;
            if (v10 + 3 >= v34)
              goto LABEL_33;
            v16 = v35[v17];
            if (!v16)
            {
              v18 = v10 + 4;
              if (v10 + 4 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v33 = 1 << *(_BYTE *)(v2 + 32);
                if (v33 > 63)
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v33;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v35[v18];
              if (!v16)
              {
                while (1)
                {
                  v17 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v17 >= v34)
                    goto LABEL_33;
                  v16 = v35[v17];
                  ++v18;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v17 = v10 + 4;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v46 = v17;
        v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      v19 = *(_QWORD *)(v2 + 48) + 216 * v14;
      v21 = *(_QWORD *)v19;
      v20 = *(_QWORD *)(v19 + 8);
      v22 = *(_QWORD *)(v19 + 24);
      v23 = *(_QWORD *)(v19 + 32);
      v44 = *(_QWORD *)(v19 + 40);
      v45 = *(_QWORD *)(v19 + 16);
      v42 = *(_QWORD *)(v19 + 56);
      v43 = *(_QWORD *)(v19 + 48);
      v24 = *(_QWORD *)(v19 + 80);
      v40 = *(_QWORD *)(v19 + 72);
      v41 = *(_QWORD *)(v19 + 64);
      v25 = *(_QWORD *)(v19 + 88);
      v38 = *(_QWORD *)(v19 + 104);
      v39 = *(_QWORD *)(v19 + 96);
      v37 = *(_QWORD *)(v19 + 112);
      v47 = *(_OWORD *)(v19 + 120);
      v48 = *(_OWORD *)(v19 + 136);
      v51 = *(_OWORD *)(v19 + 184);
      v52 = *(_OWORD *)(v19 + 200);
      v49 = *(_OWORD *)(v19 + 152);
      v50 = *(_OWORD *)(v19 + 168);
      sub_236C366A0();
      swift_bridgeObjectRetain();
      sub_236C36154();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_236C36154();
      swift_bridgeObjectRelease();
      result = sub_236C366C4();
      v26 = -1 << *(_BYTE *)(v4 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v8 + 8 * v28);
        }
        while (v32 == -1);
        v11 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 216 * v11;
      *(_QWORD *)v12 = v21;
      *(_QWORD *)(v12 + 8) = v20;
      *(_QWORD *)(v12 + 16) = v45;
      *(_QWORD *)(v12 + 24) = v22;
      *(_QWORD *)(v12 + 32) = v23;
      *(_QWORD *)(v12 + 40) = v44;
      *(_QWORD *)(v12 + 48) = v43;
      *(_QWORD *)(v12 + 56) = v42;
      *(_QWORD *)(v12 + 64) = v41;
      *(_QWORD *)(v12 + 72) = v40;
      *(_QWORD *)(v12 + 80) = v24;
      *(_QWORD *)(v12 + 88) = v25;
      *(_QWORD *)(v12 + 96) = v39;
      *(_QWORD *)(v12 + 104) = v38;
      v2 = v36;
      *(_QWORD *)(v12 + 112) = v37;
      *(_OWORD *)(v12 + 120) = v47;
      *(_OWORD *)(v12 + 136) = v48;
      *(_OWORD *)(v12 + 200) = v52;
      *(_OWORD *)(v12 + 184) = v51;
      *(_OWORD *)(v12 + 168) = v50;
      *(_OWORD *)(v12 + 152) = v49;
      ++*(_QWORD *)(v4 + 16);
      v10 = v46;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_236C17468()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  __int128 v20[4];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3048);
  v3 = sub_236C364A8();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v14 = v13 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_23;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_23;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_23;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_23:
                swift_release();
                v19 = 1 << *(_BYTE *)(v2 + 32);
                if (v19 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v19;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_29;
                  if (v12 >= v9)
                    goto LABEL_23;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_22;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_22:
        v8 = (v17 - 1) & v17;
        v14 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v15 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_236C366A0();
      sub_236BEB080(v20, v15);
      sub_236C366C4();
      result = sub_236C36460();
      *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * result) = v15;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_236C176AC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;

  v5 = (_QWORD *)result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v35 = result;
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_236C17058();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_236C17A5C();
      goto LABEL_22;
    }
    sub_236C17FC0();
  }
  v8 = *v3;
  sub_236C366A0();
  v9 = v5[3];
  v10 = v5[4];
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  v11 = v5[10];
  v12 = v5[11];
  swift_bridgeObjectRetain();
  sub_236C36154();
  swift_bridgeObjectRelease();
  result = sub_236C366C4();
  v13 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v13;
  v14 = v8 + 56;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v13;
    v16 = *(_QWORD *)(v8 + 48);
    while (1)
    {
      v17 = (_QWORD *)(v16 + 216 * a2);
      v18 = v17[10];
      v19 = v17[11];
      v20 = v17[3] == v9 && v17[4] == v10;
      if (v20 || (result = sub_236C36658(), (result & 1) != 0))
      {
        if (v18 == v11 && v19 == v12)
          break;
        result = sub_236C36658();
        if ((result & 1) != 0)
          break;
      }
      a2 = (a2 + 1) & v15;
      if (((*(_QWORD *)(v14 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
    }
    result = sub_236C36670();
    __break(1u);
  }
LABEL_22:
  v22 = *v34;
  *(_QWORD *)(*v34 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v23 = *(_QWORD *)(v22 + 48) + 216 * a2;
  v24 = *(_OWORD *)(v35 + 80);
  *(_OWORD *)(v23 + 64) = *(_OWORD *)(v35 + 64);
  *(_OWORD *)(v23 + 80) = v24;
  v25 = *(_OWORD *)(v35 + 48);
  *(_OWORD *)(v23 + 32) = *(_OWORD *)(v35 + 32);
  *(_OWORD *)(v23 + 48) = v25;
  v26 = *(_OWORD *)(v35 + 144);
  *(_OWORD *)(v23 + 128) = *(_OWORD *)(v35 + 128);
  *(_OWORD *)(v23 + 144) = v26;
  v27 = *(_OWORD *)(v35 + 112);
  *(_OWORD *)(v23 + 96) = *(_OWORD *)(v35 + 96);
  *(_OWORD *)(v23 + 112) = v27;
  *(_QWORD *)(v23 + 208) = *(_QWORD *)(v35 + 208);
  v28 = *(_OWORD *)(v35 + 192);
  v29 = *(_OWORD *)(v35 + 160);
  *(_OWORD *)(v23 + 176) = *(_OWORD *)(v35 + 176);
  *(_OWORD *)(v23 + 192) = v28;
  *(_OWORD *)(v23 + 160) = v29;
  v30 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v35;
  *(_OWORD *)(v23 + 16) = v30;
  v31 = *(_QWORD *)(v22 + 16);
  v32 = __OFADD__(v31, 1);
  v33 = v31 + 1;
  if (v32)
    __break(1u);
  else
    *(_QWORD *)(v22 + 16) = v33;
  return result;
}

uint64_t sub_236C178D0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  __int128 v19[4];

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_236C17468();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_236C17E18();
      goto LABEL_14;
    }
    sub_236C18340();
  }
  v8 = *v3;
  sub_236C366A0();
  sub_236BEB080(v19, v5);
  result = sub_236C366C4();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = swift_bridgeObjectRetain();
    v11 = sub_236C18550(v10, v5);
    result = swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542B15F8);
      result = sub_236C36670();
      __break(1u);
    }
    else
    {
      v12 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v13 = swift_bridgeObjectRetain();
        v14 = sub_236C18550(v13, v5);
        result = swift_bridgeObjectRelease();
        if ((v14 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v15 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v15 + 48) + 8 * a2) = v5;
  v16 = *(_QWORD *)(v15 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    *(_QWORD *)(v15 + 16) = v18;
  return result;
}

void *sub_236C17A5C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  _OWORD v31[13];
  uint64_t v32;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447A38);
  v2 = *v0;
  v3 = sub_236C3649C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v13)
      goto LABEL_28;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_28;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
      {
        v9 = v28 + 2;
        if (v28 + 2 >= v13)
          goto LABEL_28;
        v29 = *(_QWORD *)(v6 + 8 * v9);
        if (!v29)
          break;
      }
    }
LABEL_27:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 216 * v15;
    v17 = (_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[2];
    v19 = v17[3];
    v20 = v17[5];
    v31[4] = v17[4];
    v31[5] = v20;
    v31[3] = v19;
    v21 = v17[6];
    v22 = v17[7];
    v23 = v17[9];
    v31[8] = v17[8];
    v31[9] = v23;
    v31[6] = v21;
    v31[7] = v22;
    v24 = v17[10];
    v25 = v17[11];
    v26 = v17[12];
    v32 = *((_QWORD *)v17 + 26);
    v31[11] = v25;
    v31[12] = v26;
    v31[10] = v24;
    v27 = v17[1];
    v31[0] = *v17;
    v31[1] = v27;
    v31[2] = v18;
    memmove((void *)(*(_QWORD *)(v4 + 48) + v16), v17, 0xD8uLL);
    result = (void *)sub_236BF99A0((uint64_t)v31);
  }
  v30 = v28 + 3;
  if (v30 >= v13)
    goto LABEL_28;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_236C17C68()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3050);
  v2 = *v0;
  v3 = sub_236C3649C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_236C17E18()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3048);
  v2 = *v0;
  v3 = sub_236C3649C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_236C17FC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447A38);
  v3 = sub_236C364A8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v46 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v47 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v23 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v24 = v23 | (v10 << 6);
      goto LABEL_24;
    }
    v25 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v47)
      goto LABEL_33;
    v26 = *(_QWORD *)(v46 + 8 * v25);
    ++v10;
    if (!v26)
    {
      v10 = v25 + 1;
      if (v25 + 1 >= v47)
        goto LABEL_33;
      v26 = *(_QWORD *)(v46 + 8 * v10);
      if (!v26)
      {
        v10 = v25 + 2;
        if (v25 + 2 >= v47)
          goto LABEL_33;
        v26 = *(_QWORD *)(v46 + 8 * v10);
        if (!v26)
          break;
      }
    }
LABEL_23:
    v7 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v10 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v2 + 48) + 216 * v24;
    v29 = *(_OWORD *)(v28 + 80);
    v31 = *(_OWORD *)(v28 + 32);
    v30 = *(_OWORD *)(v28 + 48);
    v52 = *(_OWORD *)(v28 + 64);
    v53 = v29;
    v50 = v31;
    v51 = v30;
    v32 = *(_OWORD *)(v28 + 96);
    v33 = *(_OWORD *)(v28 + 112);
    v34 = *(_OWORD *)(v28 + 144);
    v56 = *(_OWORD *)(v28 + 128);
    v57 = v34;
    v54 = v32;
    v55 = v33;
    v35 = *(_OWORD *)(v28 + 160);
    v36 = *(_OWORD *)(v28 + 176);
    v37 = *(_OWORD *)(v28 + 192);
    v61 = *(_QWORD *)(v28 + 208);
    v59 = v36;
    v60 = v37;
    v58 = v35;
    v38 = *(_OWORD *)(v28 + 16);
    v48 = *(_OWORD *)v28;
    v49 = v38;
    sub_236C366A0();
    sub_236BF99A0((uint64_t)&v48);
    swift_bridgeObjectRetain();
    sub_236C36154();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_236C36154();
    swift_bridgeObjectRelease();
    result = sub_236C366C4();
    v39 = -1 << *(_BYTE *)(v4 + 32);
    v40 = result & ~v39;
    v41 = v40 >> 6;
    if (((-1 << v40) & ~*(_QWORD *)(v8 + 8 * (v40 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v40) & ~*(_QWORD *)(v8 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v42 = 0;
      v43 = (unint64_t)(63 - v39) >> 6;
      do
      {
        if (++v41 == v43 && (v42 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v44 = v41 == v43;
        if (v41 == v43)
          v41 = 0;
        v42 |= v44;
        v45 = *(_QWORD *)(v8 + 8 * v41);
      }
      while (v45 == -1);
      v11 = __clz(__rbit64(~v45)) + (v41 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 216 * v11;
    v13 = v49;
    *(_OWORD *)v12 = v48;
    v14 = v50;
    v15 = v51;
    v16 = v53;
    *(_OWORD *)(v12 + 64) = v52;
    *(_OWORD *)(v12 + 80) = v16;
    *(_OWORD *)(v12 + 32) = v14;
    *(_OWORD *)(v12 + 48) = v15;
    v17 = v54;
    v18 = v55;
    v19 = v57;
    *(_OWORD *)(v12 + 128) = v56;
    *(_OWORD *)(v12 + 144) = v19;
    *(_OWORD *)(v12 + 96) = v17;
    *(_OWORD *)(v12 + 112) = v18;
    v20 = v58;
    v21 = v59;
    v22 = v60;
    *(_QWORD *)(v12 + 208) = v61;
    *(_OWORD *)(v12 + 176) = v21;
    *(_OWORD *)(v12 + 192) = v22;
    *(_OWORD *)(v12 + 160) = v20;
    *(_OWORD *)(v12 + 16) = v13;
    ++*(_QWORD *)(v4 + 16);
  }
  v27 = v25 + 3;
  if (v27 >= v47)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v26 = *(_QWORD *)(v46 + 8 * v27);
  if (v26)
  {
    v10 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v10 >= v47)
      goto LABEL_33;
    v26 = *(_QWORD *)(v46 + 8 * v10);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_236C18340()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  __int128 v19[4];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3048);
  v3 = sub_236C364A8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    result = swift_release();
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_7;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_23;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_23;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_22:
    v8 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_7:
    v15 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_236C366A0();
    swift_bridgeObjectRetain();
    sub_236BEB080(v19, v15);
    sub_236C366C4();
    result = sub_236C36460();
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * result) = v15;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_23:
    swift_release();
    v1 = v0;
    goto LABEL_24;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_236C18550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  char v49;
  char v50;
  unint64_t v51;
  char *v52;
  char v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  int64_t v63;
  _BOOL4 v64;
  uint64_t v65;
  unint64_t v66;

  v4 = sub_236C3592C();
  v62 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v61 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v55 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FA8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (uint64_t *)((char *)&v55 - v14);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v63 = 0;
  v59 = a1;
  v60 = a2;
  v18 = *(_QWORD *)(a1 + 64);
  v17 = a1 + 64;
  v16 = v18;
  v19 = 1 << *(_BYTE *)(v17 - 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v16;
  v57 = v17;
  v58 = (unint64_t)(v19 + 63) >> 6;
  v56 = v58 - 1;
  v22 = &qword_2542B2FA0;
  v65 = v4;
  while (1)
  {
    if (v21)
    {
      v23 = __clz(__rbit64(v21));
      v24 = (v21 - 1) & v21;
      v25 = v62;
      v26 = v23 | (v63 << 6);
LABEL_8:
      v27 = *(_QWORD *)(v59 + 56);
      v28 = (_QWORD *)(*(_QWORD *)(v59 + 48) + 16 * v26);
      v29 = v28[1];
      *(_QWORD *)v12 = *v28;
      *((_QWORD *)v12 + 1) = v29;
      v30 = v27 + *(_QWORD *)(v25 + 72) * v26;
      v31 = __swift_instantiateConcreteTypeFromMangledName(v22);
      (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(&v12[*(int *)(v31 + 48)], v30, v65);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v12, 0, 1, v31);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    v32 = v63 + 1;
    if (__OFADD__(v63, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    v25 = v62;
    if (v32 < v58)
    {
      v33 = *(_QWORD *)(v57 + 8 * v32);
      if (v33)
        goto LABEL_12;
      v34 = v63 + 2;
      ++v63;
      if (v32 + 1 < v58)
      {
        v33 = *(_QWORD *)(v57 + 8 * v34);
        if (v33)
          goto LABEL_15;
        v63 = v32 + 1;
        if (v32 + 2 < v58)
        {
          v33 = *(_QWORD *)(v57 + 8 * (v32 + 2));
          if (v33)
          {
            v32 += 2;
            goto LABEL_12;
          }
          v34 = v32 + 3;
          v63 = v32 + 2;
          if (v32 + 3 < v58)
            break;
        }
      }
    }
LABEL_26:
    v35 = __swift_instantiateConcreteTypeFromMangledName(v22);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v12, 1, 1, v35);
    v24 = 0;
LABEL_27:
    sub_236C15348((uint64_t)v12, (uint64_t)v15, &qword_2542B2FA8);
    v36 = __swift_instantiateConcreteTypeFromMangledName(v22);
    v37 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v15, 1, v36);
    v64 = v37 == 1;
    if (v37 == 1)
      return v64;
    v66 = v24;
    v38 = v22;
    v39 = v12;
    v40 = (char *)v15 + *(int *)(v36 + 48);
    v41 = *v15;
    v42 = v15[1];
    v43 = v15;
    v44 = v65;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v8, v40, v65);
    v45 = v41;
    v46 = v60;
    v47 = v8;
    v48 = sub_236BEE010(v45, v42);
    v50 = v49;
    swift_bridgeObjectRelease();
    if ((v50 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v47, v44);
      return 0;
    }
    v51 = *(_QWORD *)(v46 + 56) + *(_QWORD *)(v25 + 72) * v48;
    v52 = v61;
    (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))(v61, v51, v44);
    sub_236C1941C((unint64_t *)&qword_2542B14E0, MEMORY[0x24BE09AF8]);
    v53 = sub_236C360C4();
    v54 = *(void (**)(char *, uint64_t))(v25 + 8);
    v54(v52, v44);
    result = ((uint64_t (*)(char *, uint64_t))v54)(v47, v44);
    v8 = v47;
    v12 = v39;
    v15 = v43;
    v22 = v38;
    v21 = v66;
    if ((v53 & 1) == 0)
      return v64;
  }
  v33 = *(_QWORD *)(v57 + 8 * v34);
  if (v33)
  {
LABEL_15:
    v32 = v34;
LABEL_12:
    v24 = (v33 - 1) & v33;
    v26 = __clz(__rbit64(v33)) + (v32 << 6);
    v63 = v32;
    goto LABEL_8;
  }
  while (1)
  {
    v32 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v32 >= v58)
    {
      v63 = v56;
      goto LABEL_26;
    }
    v33 = *(_QWORD *)(v57 + 8 * v32);
    ++v34;
    if (v33)
      goto LABEL_12;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_236C18990(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a2;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FA0);
  v4 = MEMORY[0x24BDAC7A8](v28);
  v6 = (uint64_t *)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v26 - v7;
  v9 = *(_QWORD *)(a1 + 64);
  v26 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v27 = (unint64_t)(v10 + 63) >> 6;
  v30 = a1;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  while (v12)
  {
    v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v16 = v15 | (v14 << 6);
LABEL_19:
    v20 = *(_QWORD *)(v30 + 56);
    v21 = (uint64_t *)(*(_QWORD *)(v30 + 48) + 16 * v16);
    v22 = *v21;
    v23 = v21[1];
    v24 = sub_236C3592C();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(&v8[*(int *)(v28 + 48)], v20 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v16, v24);
    *(_QWORD *)v8 = v22;
    *((_QWORD *)v8 + 1) = v23;
    sub_236C15348((uint64_t)v8, (uint64_t)v6, &qword_2542B2FA0);
    swift_bridgeObjectRetain();
    v25 = sub_236C16554(v6, v29);
    result = sub_236BE6C14((uint64_t)v6, &qword_2542B2FA0);
    if (v2)
      goto LABEL_28;
    if ((v25 & 1) == 0)
    {
      LOBYTE(v12) = 0;
LABEL_28:
      swift_release();
      return v12 & 1;
    }
  }
  if (__OFADD__(v14++, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v14 >= v27)
    goto LABEL_27;
  v18 = *(_QWORD *)(v26 + 8 * v14);
  if (v18)
  {
LABEL_18:
    v12 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_19;
  }
  v19 = v14 + 1;
  if (v14 + 1 >= v27)
    goto LABEL_27;
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v19 = v14 + 2;
  if (v14 + 2 >= v27)
    goto LABEL_27;
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v19 = v14 + 3;
  if (v14 + 3 >= v27)
    goto LABEL_27;
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v19 = v14 + 4;
  if (v14 + 4 >= v27)
  {
LABEL_27:
    LOBYTE(v12) = 1;
    goto LABEL_28;
  }
  v18 = *(_QWORD *)(v26 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v14 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v27)
      goto LABEL_27;
    v18 = *(_QWORD *)(v26 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_236C18C28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22[4];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3048);
    v3 = sub_236C364B4();
    v4 = 0;
    v5 = v3 + 56;
    v21 = a1 + 32;
    while (1)
    {
      v6 = *(_QWORD *)(v21 + 8 * v4);
      sub_236C366A0();
      swift_bridgeObjectRetain();
      sub_236BEB080(v22, v6);
      result = sub_236C366C4();
      v8 = -1 << *(_BYTE *)(v3 + 32);
      v9 = result & ~v8;
      v10 = v9 >> 6;
      v11 = *(_QWORD *)(v5 + 8 * (v9 >> 6));
      v12 = 1 << v9;
      if (((1 << v9) & v11) != 0)
      {
        v13 = swift_bridgeObjectRetain();
        v14 = sub_236C18550(v13, v6);
        result = swift_bridgeObjectRelease();
        if ((v14 & 1) != 0)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v15 = ~v8;
        while (1)
        {
          v9 = (v9 + 1) & v15;
          v10 = v9 >> 6;
          v11 = *(_QWORD *)(v5 + 8 * (v9 >> 6));
          v12 = 1 << v9;
          if ((v11 & (1 << v9)) == 0)
            break;
          v16 = swift_bridgeObjectRetain();
          v17 = sub_236C18550(v16, v6);
          result = swift_bridgeObjectRelease();
          if ((v17 & 1) != 0)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v10) = v12 | v11;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v9) = v6;
      v18 = *(_QWORD *)(v3 + 16);
      v19 = __OFADD__(v18, 1);
      v20 = v18 + 1;
      if (v19)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v20;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_236C18DB8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(char *, unint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  int64_t v50;

  v38 = a2;
  v48 = a4;
  v39 = a1;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FA0);
  MEMORY[0x24BDAC7A8](v47);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_236C3592C();
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v49 = (_QWORD *)a3;
  v13 = *(_QWORD *)(a3 + 64);
  v40 = 0;
  v41 = a3 + 64;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v45 = result;
  v46 = OBJC_IVAR____TtCC22AudioAnalyticsExternal21DurationSummaryWorker20DynamicSummaryConfig_dynamicCreationKeys;
  v42 = (unint64_t)(v14 + 63) >> 6;
  v43 = v11;
  v44 = v8;
  while (1)
  {
    while (1)
    {
      if (v16)
      {
        v17 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v50 = v12;
        v18 = v17 | (v12 << 6);
      }
      else
      {
        v19 = v12 + 1;
        if (__OFADD__(v12, 1))
          goto LABEL_42;
        if (v19 >= v42)
          return sub_236C333D4(v39, v38, v40, v49);
        v20 = *(_QWORD *)(v41 + 8 * v19);
        v21 = v12 + 1;
        if (!v20)
        {
          v21 = v12 + 2;
          if (v12 + 2 >= v42)
            return sub_236C333D4(v39, v38, v40, v49);
          v20 = *(_QWORD *)(v41 + 8 * v21);
          if (!v20)
          {
            v21 = v12 + 3;
            if (v12 + 3 >= v42)
              return sub_236C333D4(v39, v38, v40, v49);
            v20 = *(_QWORD *)(v41 + 8 * v21);
            if (!v20)
            {
              v22 = v12 + 4;
              if (v12 + 4 >= v42)
                return sub_236C333D4(v39, v38, v40, v49);
              v20 = *(_QWORD *)(v41 + 8 * v22);
              if (!v20)
              {
                while (1)
                {
                  v21 = v22 + 1;
                  if (__OFADD__(v22, 1))
                    goto LABEL_43;
                  if (v21 >= v42)
                    return sub_236C333D4(v39, v38, v40, v49);
                  v20 = *(_QWORD *)(v41 + 8 * v21);
                  ++v22;
                  if (v20)
                    goto LABEL_20;
                }
              }
              v21 = v12 + 4;
            }
          }
        }
LABEL_20:
        v16 = (v20 - 1) & v20;
        v50 = v21;
        v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      v23 = (uint64_t *)(v49[6] + 16 * v18);
      v25 = *v23;
      v24 = v23[1];
      v26 = v49[7] + *(_QWORD *)(v8 + 72) * v18;
      v27 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v27(v11, v26, v7);
      *(_QWORD *)v6 = v25;
      *((_QWORD *)v6 + 1) = v24;
      v28 = (uint64_t)v6;
      v27(&v6[*(int *)(v47 + 48)], (unint64_t)v11, v7);
      v29 = *(_QWORD **)(v48 + v46);
      v30 = v29[2];
      if (v30)
        break;
LABEL_4:
      swift_bridgeObjectRetain_n();
      v6 = (char *)v28;
      sub_236BE6C14(v28, &qword_2542B2FA0);
      v11 = v43;
      v8 = v44;
      v7 = v45;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
      result = swift_bridgeObjectRelease();
      v12 = v50;
    }
    if (v29[4] != v25 || v29[5] != v24)
    {
      result = sub_236C36658();
      if ((result & 1) == 0)
        break;
    }
LABEL_37:
    swift_bridgeObjectRetain_n();
    v6 = (char *)v28;
    sub_236BE6C14(v28, &qword_2542B2FA0);
    v11 = v43;
    v8 = v44;
    v7 = v45;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
    result = swift_bridgeObjectRelease();
    *(unint64_t *)((char *)v39 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v36 = __OFADD__(v40++, 1);
    v12 = v50;
    if (v36)
    {
      __break(1u);
      return sub_236C333D4(v39, v38, v40, v49);
    }
  }
  if (v30 == 1)
    goto LABEL_4;
  v32 = v29 + 7;
  v33 = 1;
  while (1)
  {
    v34 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (*(v32 - 1) == v25 && *v32 == v24)
      goto LABEL_37;
    result = sub_236C36658();
    if ((result & 1) != 0)
      goto LABEL_37;
    v32 += 2;
    ++v33;
    if (v34 == v30)
      goto LABEL_4;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t _s22AudioAnalyticsExternal21DurationSummaryWorkerC23getNeededPreviousFields6configSaySSG0aB4Base6ConfigC_tFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13[3];

  v0 = sub_236C35CBC();
  v1 = sub_236C15A00(v0);
  swift_bridgeObjectRelease();
  v13[2] = MEMORY[0x24BEE4B08];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    swift_bridgeObjectRetain();
    for (i = 0; i != v2; ++i)
    {
      v5 = *(_QWORD *)(v3 + 8 * i);
      v6 = *(_QWORD *)(v5 + 16);
      if (v6)
      {
        swift_bridgeObjectRetain();
        v7 = (uint64_t *)(v5 + 40);
        do
        {
          v8 = *(v7 - 1);
          v9 = *v7;
          swift_bridgeObjectRetain();
          sub_236BEDE64(v13, v8, v9);
          swift_bridgeObjectRelease();
          v7 += 2;
          --v6;
        }
        while (v6);
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v10 = swift_bridgeObjectRetain();
  v11 = sub_236C09BF0(v10);
  swift_bridgeObjectRelease();
  v13[0] = (uint64_t)v11;
  sub_236C14384(v13);
  swift_bridgeObjectRelease();
  return v13[0];
}

uint64_t sub_236C192AC()
{
  return type metadata accessor for DurationSummaryWorker(0);
}

uint64_t type metadata accessor for DurationSummaryWorker(uint64_t a1)
{
  return sub_236BEB454(a1, (uint64_t *)&unk_2542B2960);
}

uint64_t sub_236C192C8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_236C35CB0();
  if (v1 <= 0x3F)
  {
    result = sub_236C35F50();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DurationSummaryWorker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DurationSummaryWorker.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_236C19398()
{
  return type metadata accessor for DurationSummaryWorker.DynamicSummaryConfig(0);
}

uint64_t sub_236C193A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_236C359F8();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_236C1941C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_236C3592C();
    result = MEMORY[0x23B80027C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_236C1945C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_236C194A0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_236C194FC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_236C195B4 + 4 * byte_236C382C6[a2]))(0x656C6379635F6F69);
}

uint64_t sub_236C195B4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656C6379635F6F69 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_236C36658();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_236C196C0(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_236C19718@<X0>(unsigned __int8 a1@<W1>, uint64_t a2@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_236C197B4 + 4 * byte_236C382D3[a1]))(a2 + 3);
}

uint64_t sub_236C197B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;

  if (a1 == a2 + 3 && v2 == 0x8000000236C39700)
    v3 = 1;
  else
    v3 = sub_236C36658();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_236C19890(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id (**v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  int v18;
  uint64_t v20;

  v7 = type metadata accessor for OverloadOptions(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal15HALOverloadCase_name;
  v11 = *MEMORY[0x24BE09BC0];
  v12 = sub_236C35A40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  v13 = (id (**)(uint64_t, uint64_t))(v3
                                             + OBJC_IVAR____TtC22AudioAnalyticsExternal15HALOverloadCase_tailspinRequest);
  *v13 = sub_236C1B870;
  v13[1] = 0;
  v13[2] = (id (*)(uint64_t, uint64_t))sub_236C1B874;
  v13[3] = 0;
  v14 = OBJC_IVAR____TtC22AudioAnalyticsExternal15HALOverloadCase_state;
  type metadata accessor for TailspinCaseState();
  v15 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447550);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v15 + 16) = v16;
  *(_QWORD *)(v15 + 24) = 0;
  *(_BYTE *)(v15 + 32) = 1;
  *(_QWORD *)(v3 + v14) = v15;
  sub_236C35F2C();
  v17 = *(double *)&a2;
  if ((a3 & 1) != 0)
    v18 = 0;
  else
    v18 = a1;
  if ((a3 & 1) != 0)
    v17 = 0.0;
  *(_DWORD *)(v3 + 16) = v18;
  *(_BYTE *)(v3 + 20) = (a3 | BYTE4(a1)) & 1;
  *(double *)(v3 + 24) = v17;
  if (qword_2542B1D60 != -1)
    swift_once();
  swift_retain();
  sub_236C35EA8();
  swift_release();
  sub_236C1D96C((uint64_t)v9, v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal15HALOverloadCase_overloadOptions, type metadata accessor for OverloadOptions);
  return v3;
}

uint64_t sub_236C19A5C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  const char *v23;
  char v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  void (*v40)(const char *, _QWORD, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint32_t v56;
  char *v58;
  char *v59;
  int v60;
  _QWORD v61[2];
  uint64_t v62;
  const char *v63;
  uint64_t v64;
  const char *v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v69 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v65 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v66 = (char *)v61 - v7;
  v62 = sub_236C35D58();
  v8 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v10 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_236C35DB8();
  v63 = *(const char **)(v11 - 8);
  v64 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for OverloadOptions(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v17 = sub_236C35AF4();
  v68 = v2;
  v18 = v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal15HALOverloadCase_overloadOptions;
  sub_236C1BE88(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal15HALOverloadCase_overloadOptions, (uint64_t)v16);
  v61[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  sub_236C358D8();
  v19 = v70;
  sub_236C1D9B0((uint64_t)v16, type metadata accessor for OverloadOptions);
  v67 = v18;
  if (v19 == 1)
  {
    v20 = v17;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    v21 = sub_236C35AE8();
    v23 = v63;
    v22 = v64;
    (*((void (**)(char *, uint64_t, uint64_t))v63 + 2))(v13, v69, v64);
    if ((v21 & 1) != 0)
    {
      (*((void (**)(char *, uint64_t))v23 + 1))(v13, v22);
      v17 = v20;
      goto LABEL_5;
    }
    sub_236C35D88();
    v24 = sub_236C35D28();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v62);
    (*((void (**)(char *, uint64_t))v23 + 1))(v13, v22);
    v17 = v20;
    v18 = v67;
    if ((v24 & 1) != 0)
    {
LABEL_5:
      v25 = sub_236C35F44();
      v26 = sub_236C3631C();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = swift_slowAlloc();
        *(_DWORD *)v27 = 134217984;
        v70 = v17;
        sub_236C363F4();
        v28 = "Ignoring overload: Message from sendSingleMessage. { reporterID=%lld }";
LABEL_34:
        v53 = v25;
        v54 = v26;
        v55 = (uint8_t *)v27;
        v56 = 12;
        goto LABEL_35;
      }
      goto LABEL_36;
    }
  }
  sub_236C1BE88(v18, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1630);
  sub_236C358D8();
  v64 = v70;
  sub_236C1D9B0((uint64_t)v16, type metadata accessor for OverloadOptions);
  v29 = v69;
  v30 = sub_236C35D10();
  v31 = *(_QWORD *)(v30 + 16);
  v61[0] = v14;
  if (v31 && (v32 = sub_236BEE010(0xD00000000000001ALL, 0x8000000236C3AB80), (v33 & 1) != 0))
  {
    v34 = v32;
    v35 = *(_QWORD *)(v30 + 56);
    v36 = sub_236C3592C();
    v37 = *(_QWORD *)(v36 - 8);
    v38 = v35 + *(_QWORD *)(v37 + 72) * v34;
    v39 = v66;
    (*(void (**)(const char *, uint64_t, uint64_t))(v37 + 16))(v66, v38, v36);
    v40 = *(void (**)(const char *, _QWORD, uint64_t, uint64_t))(v37 + 56);
    v41 = (char *)v39;
    v40(v39, 0, 1, v36);
  }
  else
  {
    v36 = sub_236C3592C();
    v41 = (char *)v66;
    (*(void (**)(const char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v66, 1, 1, v36);
  }
  swift_bridgeObjectRelease();
  sub_236C3592C();
  v42 = *(_QWORD *)(v36 - 8);
  v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
  if (v43(v41, 1, v36) == 1)
  {
    sub_236BE6C14((uint64_t)v41, &qword_2542B1640);
  }
  else if ((*(unsigned int (**)(char *, uint64_t))(v42 + 88))(v41, v36) == *MEMORY[0x24BE09AA8])
  {
    (*(void (**)(char *, uint64_t))(v42 + 96))(v41, v36);
    v44 = *(_QWORD *)v41;
    if (v44 < v64)
    {
      v25 = sub_236C35F44();
      v45 = sub_236C3631C();
      if (!os_log_type_enabled(v25, v45))
        goto LABEL_36;
      v27 = swift_slowAlloc();
      *(_DWORD *)v27 = 134218496;
      v70 = v44;
      sub_236C363F4();
      *(_WORD *)(v27 + 12) = 1024;
      LODWORD(v70) = v64;
      sub_236C363F4();
      *(_WORD *)(v27 + 18) = 2048;
      v70 = v17;
      sub_236C363F4();
      v28 = "Ignoring overload: IO buffer size invalid { ioBufferSize=%lld, ioBufferSizeThreshold=%u, reporterID=%lld }";
LABEL_29:
      v53 = v25;
      v54 = v45;
      v55 = (uint8_t *)v27;
      v56 = 28;
LABEL_35:
      _os_log_impl(&dword_236BE1000, v53, v54, v28, v55, v56);
      MEMORY[0x23B800318](v27, -1, -1);
      goto LABEL_36;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v36);
  }
  sub_236C1BE88(v67, (uint64_t)v16);
  sub_236C358D8();
  v46 = v70;
  sub_236C1D9B0((uint64_t)v16, type metadata accessor for OverloadOptions);
  v47 = sub_236C35D10();
  if (*(_QWORD *)(v47 + 16))
  {
    v48 = sub_236BEE010(0x656C6379635F6F69, 0xE800000000000000);
    v49 = (char *)v65;
    if ((v50 & 1) != 0)
    {
      (*(void (**)(const char *, unint64_t, uint64_t))(v42 + 16))(v65, *(_QWORD *)(v47 + 56) + *(_QWORD *)(v42 + 72) * v48, v36);
      v51 = 0;
    }
    else
    {
      v51 = 1;
    }
  }
  else
  {
    v51 = 1;
    v49 = (char *)v65;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v49, v51, 1, v36);
  swift_bridgeObjectRelease();
  if (v43(v49, 1, v36) == 1)
  {
    sub_236BE6C14((uint64_t)v49, &qword_2542B1640);
    goto LABEL_31;
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v42 + 88))(v49, v36) == *MEMORY[0x24BE09AA8])
  {
    (*(void (**)(char *, uint64_t))(v42 + 96))(v49, v36);
    v52 = *(_QWORD *)v49;
    if (*(_QWORD *)v49 < v46)
    {
      v25 = sub_236C35F44();
      v45 = sub_236C3631C();
      if (!os_log_type_enabled(v25, v45))
        goto LABEL_36;
      v27 = swift_slowAlloc();
      *(_DWORD *)v27 = 134218496;
      v70 = v52;
      sub_236C363F4();
      *(_WORD *)(v27 + 12) = 1024;
      LODWORD(v70) = v46;
      sub_236C363F4();
      *(_WORD *)(v27 + 18) = 2048;
      v70 = v17;
      sub_236C363F4();
      v28 = "Ignoring overload: IO cycle invalid { ioCycle=%lld, ioCycleThreshold=%u, reporterID=%lld }";
      goto LABEL_29;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v49, v36);
  }
LABEL_31:
  if ((sub_236C1A600(v29) & 1) != 0)
  {
    v25 = sub_236C35F44();
    v26 = sub_236C3631C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      *(_DWORD *)v27 = 134217984;
      v70 = v17;
      sub_236C363F4();
      v28 = "Ignoring overload: Overload occurs on explicitly ignored device. { reporterID=%lld }";
      goto LABEL_34;
    }
  }
  else
  {
    v58 = sub_236C1CAF8();
    if (v58)
    {
      v59 = v58;
      if (*((_QWORD *)v58 + 2))
      {
        v62 = v17;
        swift_bridgeObjectRetain();
        v65 = "PageFaultsOnIOThread";
        v66 = "phpB(aa2d)(8223)";
        v63 = "ClientProcessIsThrottled";
        v64 = (uint64_t)"PageFaultsOffIOThread";
        __asm { BR              X9 }
      }
      swift_bridgeObjectRelease();
    }
    sub_236C1BE88(v67, (uint64_t)v16);
    sub_236C358D8();
    v60 = v70;
    sub_236C1D9B0((uint64_t)v16, type metadata accessor for OverloadOptions);
    if (v60 != 1 || !sub_236C1CDC0())
      return 1;
    v25 = sub_236C35F44();
    v26 = sub_236C3631C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      *(_DWORD *)v27 = 134217984;
      v70 = v17;
      sub_236C363F4();
      v28 = "Ignoring overload: Client output is silent. { reporterID=%lld }";
      goto LABEL_34;
    }
  }
LABEL_36:

  return 0;
}

void sub_236C1A5E4()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x236C1A398);
}

uint64_t sub_236C1A600(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v20;
  unsigned int (*v21)(_QWORD, _QWORD, _QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *i;
  unint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD v65[2];
  unsigned int (*v66)(_QWORD, _QWORD, _QWORD);
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v2 = type metadata accessor for OverloadOptions(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v65 - v9;
  v11 = sub_236C35D10();
  if (*(_QWORD *)(v11 + 16))
  {
    v69 = v4;
    v12 = sub_236BEE010(0xD000000000000015, 0x8000000236C397E0);
    if ((v13 & 1) != 0)
    {
      v14 = v12;
      v15 = *(_QWORD *)(v11 + 56);
      v16 = sub_236C3592C();
      v17 = v2;
      v18 = *(_QWORD *)(v16 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v10, v15 + *(_QWORD *)(v18 + 72) * v14, v16);
      v19 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
      v2 = v17;
      v19(v10, 0, 1, v16);
    }
    else
    {
      v16 = sub_236C3592C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
    }
    v4 = v69;
  }
  else
  {
    v16 = sub_236C3592C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
  }
  swift_bridgeObjectRelease();
  sub_236C3592C();
  v20 = *(_QWORD *)(v16 - 8);
  v21 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v20 + 48);
  if (v21(v10, 1, v16) == 1)
  {
    sub_236BE6C14((uint64_t)v10, &qword_2542B1640);
  }
  else if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v10, v16) == *MEMORY[0x24BE09AD0])
  {
    v66 = v21;
    v67 = a1;
    v68 = v8;
    (*(void (**)(char *, uint64_t))(v20 + 96))(v10, v16);
    v22 = sub_236C36148();
    v71 = v23;
    swift_bridgeObjectRelease();
    sub_236C1BE88(v70 + OBJC_IVAR____TtC22AudioAnalyticsExternal15HALOverloadCase_overloadOptions, (uint64_t)v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1610);
    sub_236C358D8();
    sub_236C1D9B0((uint64_t)v4, type metadata accessor for OverloadOptions);
    v24 = sub_236C36148();
    v26 = v25;
    swift_bridgeObjectRelease();
    v74 = v24;
    v75 = v26;
    v72 = 44;
    v73 = 0xE100000000000000;
    sub_236BED490();
    v27 = sub_236C36418();
    swift_bridgeObjectRelease();
    v28 = *(_QWORD *)(v27 + 16);
    if (v28)
    {
      v65[0] = v2;
      v69 = v4;
      swift_bridgeObjectRetain();
      v65[1] = v27;
      v29 = (unint64_t *)(v27 + 40);
      while (1)
      {
        v31 = *(v29 - 1);
        v30 = *v29;
        v74 = v22;
        v75 = v71;
        v72 = v31;
        v73 = v30;
        swift_bridgeObjectRetain();
        if ((sub_236C3643C() & 1) != 0)
          break;
        v29 += 2;
        swift_bridgeObjectRelease();
        if (!--v28)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v4 = v69;
          goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v49 = sub_236C35F44();
      v50 = sub_236C3631C();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = swift_slowAlloc();
        v52 = swift_slowAlloc();
        v74 = v52;
        *(_DWORD *)v51 = 136315394;
        swift_bridgeObjectRetain();
        v72 = sub_236C0ED40(v31, v30, &v74);
        sub_236C363F4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v51 + 12) = 2080;
        v53 = swift_bridgeObjectRetain();
        v54 = MEMORY[0x23B7FF6AC](v53, MEMORY[0x24BEE0D00]);
        v56 = v55;
        swift_bridgeObjectRelease();
        v72 = sub_236C0ED40(v54, v56, &v74);
        sub_236C363F4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_236BE1000, v49, v50, "Ignoring overload: Ignored device was active. { inputDevice=%s, ignoredInputDevices=%s }", (uint8_t *)v51, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B800318](v52, -1, -1);
        MEMORY[0x23B800318](v51, -1, -1);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      return 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_17:
    v8 = v68;
    v21 = v66;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v16);
  }
  v32 = sub_236C35D10();
  if (*(_QWORD *)(v32 + 16) && (v33 = sub_236BEE010(0xD000000000000016, 0x8000000236C39800), (v34 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v8, *(_QWORD *)(v32 + 56) + *(_QWORD *)(v20 + 72) * v33, v16);
    v35 = 0;
  }
  else
  {
    v35 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v8, v35, 1, v16);
  swift_bridgeObjectRelease();
  if (v21(v8, 1, v16) == 1)
  {
    sub_236BE6C14((uint64_t)v8, &qword_2542B1640);
    return 0;
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v8, v16) != *MEMORY[0x24BE09AD0])
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v16);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v20 + 96))(v8, v16);
  v37 = sub_236C36148();
  v38 = (uint64_t)v4;
  v40 = v39;
  swift_bridgeObjectRelease();
  sub_236C1BE88(v70 + OBJC_IVAR____TtC22AudioAnalyticsExternal15HALOverloadCase_overloadOptions, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1610);
  sub_236C358D8();
  sub_236C1D9B0(v38, type metadata accessor for OverloadOptions);
  v41 = sub_236C36148();
  v43 = v42;
  swift_bridgeObjectRelease();
  v74 = v41;
  v75 = v43;
  v72 = 44;
  v73 = 0xE100000000000000;
  sub_236BED490();
  v44 = sub_236C36418();
  swift_bridgeObjectRelease();
  v45 = *(_QWORD *)(v44 + 16);
  if (!v45)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  for (i = (unint64_t *)(v44 + 40); ; i += 2)
  {
    v48 = *(i - 1);
    v47 = *i;
    v74 = v37;
    v75 = v40;
    v72 = v48;
    v73 = v47;
    swift_bridgeObjectRetain();
    if ((sub_236C3643C() & 1) != 0)
      break;
    swift_bridgeObjectRelease();
    if (!--v45)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v57 = sub_236C35F44();
  v58 = sub_236C3631C();
  if (os_log_type_enabled(v57, v58))
  {
    v59 = swift_slowAlloc();
    v60 = swift_slowAlloc();
    v74 = v60;
    *(_DWORD *)v59 = 136315394;
    swift_bridgeObjectRetain();
    v72 = sub_236C0ED40(v48, v47, &v74);
    sub_236C363F4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v59 + 12) = 2080;
    v61 = swift_bridgeObjectRetain();
    v62 = MEMORY[0x23B7FF6AC](v61, MEMORY[0x24BEE0D00]);
    v64 = v63;
    swift_bridgeObjectRelease();
    v72 = sub_236C0ED40(v62, v64, &v74);
    sub_236C363F4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_236BE1000, v57, v58, "Ignoring overload: Ignored device was active. { outputDevice=%s, ignoredOutputDevices=%s }", (uint8_t *)v59, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B800318](v60, -1, -1);
    MEMORY[0x23B800318](v59, -1, -1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  return 1;
}

uint64_t sub_236C1AF9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (uint64_t *)((char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_236C35D10();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_236BEE010(0x5F656761705F6F69, 0xEE0073746C756166), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(v3 + 56);
    v8 = sub_236C3592C();
    v9 = *(_QWORD *)(v8 - 8);
    (*(void (**)(uint64_t *, unint64_t, uint64_t))(v9 + 16))(v2, v7 + *(_QWORD *)(v9 + 72) * v6, v8);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  }
  else
  {
    v8 = sub_236C3592C();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  }
  swift_bridgeObjectRelease();
  sub_236C3592C();
  v10 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(v2, 1, v8) == 1)
  {
    sub_236BE6C14((uint64_t)v2, &qword_2542B1640);
  }
  else
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t))(v10 + 88))(v2, v8) == *MEMORY[0x24BE09AA8])
    {
      (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v2, v8);
      result = *v2;
      if ((*v2 & 0x8000000000000000) == 0)
        return result;
      sub_236C36538();
      __break(1u);
    }
    (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v2, v8);
  }
  return 0;
}

uint64_t sub_236C1B18C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a3;
  v29 = a8;
  v16 = type metadata accessor for HALOverloadCase.OverloadInfo(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v20 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v20)
    goto LABEL_10;
  v21 = HIBYTE(a6) & 0xF;
  if ((a6 & 0x2000000000000000) == 0)
    v21 = a5 & 0xFFFFFFFFFFFFLL;
  if (v21 && (sub_236C3568C() & 1) != 0)
  {
    *v19 = a1;
    v19[1] = a2;
    if (a4)
    {
      v22 = v28;
    }
    else
    {
      v22 = sub_236C35DC4();
      a4 = v25;
    }
    v19[2] = v22;
    v19[3] = a4;
    v19[4] = a5;
    v19[5] = a6;
    v26 = (char *)v19 + *(int *)(v16 + 28);
    v27 = sub_236C35728();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v26, a7, v27);
    *(_QWORD *)((char *)v19 + *(int *)(v16 + 32)) = v29;
    sub_236C1D96C((uint64_t)v19, a9, type metadata accessor for HALOverloadCase.OverloadInfo);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(a9, 0, 1, v16);
  }
  else
  {
LABEL_10:
    v23 = sub_236C35728();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a7, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(a9, 1, 1, v16);
  }
}

uint64_t sub_236C1B33C(uint64_t a1)
{
  if (*(_QWORD *)(a1 + *(int *)(type metadata accessor for HALOverloadCase.OverloadInfo(0) + 32)))
  {
    sub_236C364C0();
    sub_236C36184();
    sub_236C3664C();
    sub_236C36184();
    swift_bridgeObjectRelease();
    sub_236C36184();
  }
  return 0;
}

void sub_236C1B418(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v4 = sub_236C35728();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v7)
  {
    v8 = v7;
    v18 = a2;
    v9 = (void *)sub_236C356C8();
    v10 = (void *)sub_236C360D0();
    sub_236C15500(MEMORY[0x24BEE4AF8]);
    v11 = (void *)sub_236C36040();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v8, sel_operationToOpenResource_usingApplication_userInfo_, v9, v10, v11);

    if (v12)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
      v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = v18;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
      aBlock[4] = sub_236C1D928;
      aBlock[5] = v14;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_236BF5A50;
      aBlock[3] = &block_descriptor_4;
      v15 = _Block_copy(aBlock);
      v16 = v12;
      sub_236C1BE78((uint64_t)sub_236C1D928);
      swift_release();
      objc_msgSend(v16, sel_setCompletionBlock_, v15);

      _Block_release(v15);
      swift_release();
    }
    objc_msgSend(v12, sel_start);

  }
}

uint64_t sub_236C1B658(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = sub_236C35728();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_236C35F50();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236C35F2C();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  v11 = sub_236C35F44();
  v12 = sub_236C3634C();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v22 = v7;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v21 = v8;
    v16 = v15;
    v24 = v15;
    *(_DWORD *)v14 = 136380675;
    v20[1] = v14 + 4;
    v17 = sub_236C356F8();
    v23 = sub_236C0ED40(v17, v18, &v24);
    sub_236C363F4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _os_log_impl(&dword_236BE1000, v11, v12, "Finished opening URL in the Files app. { tailspinPath=%{private}s }", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B800318](v16, -1, -1);
    MEMORY[0x23B800318](v14, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v10, v22);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_236C1B874@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_236C35728();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = type metadata accessor for HALOverloadCase(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(_QWORD *)(v9 + ((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v7;
  sub_236C35B78();
  v10 = sub_236C35B84();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a2, 0, 1, v10);
}

void sub_236C1BA0C()
{
  id v0;
  void *v1;
  void *v2;
  id v3;

  v0 = objc_allocWithZone(MEMORY[0x24BE0A128]);
  v1 = (void *)sub_236C360D0();
  v2 = (void *)sub_236C360D0();
  v3 = objc_msgSend(v0, sel_initWithName_version_identifier_, v1, v2, 628219);

  qword_256447A60 = (uint64_t)v3;
}

uint64_t sub_236C1BAA4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_236C1BAD8 + 4 * byte_236C382E1[a1]))(0x6E776F6E6B6E55, 0xE700000000000000);
}

unint64_t sub_236C1BAD8()
{
  return 0xD000000000000014;
}

unint64_t sub_236C1BB40()
{
  return 0xD000000000000011;
}

uint64_t sub_236C1BB5C()
{
  return 0x6F68736B63617453;
}

void sub_236C1BB78(char *a1)
{
  sub_236C196C0(*a1);
}

void sub_236C1BB84()
{
  char *v0;

  sub_236C27414(0, *v0);
}

void sub_236C1BB90(uint64_t a1)
{
  char *v1;

  sub_236C27320(a1, *v1);
}

void sub_236C1BB98(uint64_t a1)
{
  char *v1;

  sub_236C27414(a1, *v1);
}

uint64_t sub_236C1BBA0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_236C1D084();
  *a1 = result;
  return result;
}

uint64_t sub_236C1BBCC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_236C1BAA4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_236C1BBF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal15HALOverloadCase_name;
  v2 = sub_236C35A40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal15HALOverloadCase_tailspinRequest + 16);
  sub_236C1D074(*(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal15HALOverloadCase_tailspinRequest));
  sub_236C1D074(v3);
  swift_release();
  sub_236C1D9B0(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal15HALOverloadCase_overloadOptions, type metadata accessor for OverloadOptions);
  v4 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal15HALOverloadCase_logger;
  v5 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocClassInstance();
}

uint64_t sub_236C1BCC0()
{
  return type metadata accessor for HALOverloadCase(0);
}

uint64_t type metadata accessor for HALOverloadCase(uint64_t a1)
{
  return sub_236BEB454(a1, qword_256447A98);
}

uint64_t sub_236C1BCDC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_236C35A40();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for OverloadOptions(319);
    if (v2 <= 0x3F)
    {
      result = sub_236C35F50();
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

unint64_t sub_236C1BDA4()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int8 *)(v0 + 20) << 32);
}

uint64_t sub_236C1BDC8()
{
  return swift_retain();
}

uint64_t sub_236C1BDD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal15HALOverloadCase_name;
  v4 = sub_236C35A40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_236C1BE1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal15HALOverloadCase_tailspinRequest);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal15HALOverloadCase_tailspinRequest + 16);
  sub_236C1BE78(v1);
  sub_236C1BE78(v2);
  return v1;
}

uint64_t sub_236C1BE78(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_236C1BE88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OverloadOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_236C1BECC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542B30B0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_236C1C72C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_236C1BFD8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256447B50);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_236C1C81C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_236C1C0E4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256447A00);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 216);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[27 * v8 + 4])
          memmove(v12, a4 + 4, 216 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_236C1C924(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_236C1C20C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_236C1C438(a1, a2, a3, a4, &qword_2542B1540, (uint64_t (*)(_QWORD))MEMORY[0x24BE09FA8]);
}

char *sub_236C1C220(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256447B48);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_236C1CA14(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_236C1C318(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1608);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_236C1D61C(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_236C1C424(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_236C1C438(a1, a2, a3, a4, &qword_256447A28, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0]);
}

uint64_t sub_236C1C438(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_236C36538();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_236C1D704(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_236C1C644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;

  v0 = sub_236C35F50();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236C35F2C();
  v4 = sub_236C35F44();
  v5 = sub_236C3634C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_236BE1000, v4, v5, "Successfully surfaced customer overload notification.", v6, 2u);
    MEMORY[0x23B800318](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_236C1C72C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_236C36574();
  __break(1u);
  return result;
}

uint64_t sub_236C1C81C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256447B58);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_236C36574();
  __break(1u);
  return result;
}

uint64_t sub_236C1C924(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 216 * a1 + 32;
    v6 = a3 + 216 * v4;
    if (v5 >= v6 || v5 + 216 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_236C36574();
  __break(1u);
  return result;
}

char *sub_236C1CA14(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_236C36574();
  __break(1u);
  return result;
}

char *sub_236C1CAF8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v20[4];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (_QWORD *)((char *)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_236C35D10();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_236BEE010(0x6573756163, 0xE500000000000000), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(v3 + 56);
    v8 = sub_236C3592C();
    v9 = *(_QWORD *)(v8 - 8);
    (*(void (**)(_QWORD *, unint64_t, uint64_t))(v9 + 16))(v2, v7 + *(_QWORD *)(v9 + 72) * v6, v8);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  }
  else
  {
    v8 = sub_236C3592C();
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  }
  swift_bridgeObjectRelease();
  sub_236C3592C();
  v10 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v2, 1, v8) == 1)
  {
    sub_236BE6C14((uint64_t)v2, &qword_2542B1640);
    return 0;
  }
  if ((*(unsigned int (**)(_QWORD *, uint64_t))(v10 + 88))(v2, v8) != *MEMORY[0x24BE09AD0])
  {
    (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v2, v8);
    return 0;
  }
  (*(void (**)(_QWORD *, uint64_t))(v10 + 96))(v2, v8);
  v11 = v2[1];
  v20[2] = *v2;
  v20[3] = v11;
  v20[0] = 44;
  v20[1] = 0xE100000000000000;
  sub_236BED490();
  v12 = sub_236C36418();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    swift_bridgeObjectRetain();
    v14 = v12 + 40;
    v15 = (char *)MEMORY[0x24BEE4AF8];
    do
    {
      swift_bridgeObjectRetain();
      v16 = sub_236C3658C();
      swift_bridgeObjectRelease();
      if (v16 <= 6)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v15 = sub_236C1C220(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
        v18 = *((_QWORD *)v15 + 2);
        v17 = *((_QWORD *)v15 + 3);
        if (v18 >= v17 >> 1)
          v15 = sub_236C1C220((char *)(v17 > 1), v18 + 1, 1, v15);
        *((_QWORD *)v15 + 2) = v18 + 1;
        v15[v18 + 32] = v16;
      }
      v14 += 16;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = (char *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  return v15;
}

BOOL sub_236C1CDC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t (*v16)(uint64_t *, uint64_t);
  int v17;
  int v18;
  void (*v19)(uint64_t *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v26;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (uint64_t *)((char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v1);
  v5 = (uint64_t *)((char *)&v26 - v4);
  v6 = sub_236C35D10();
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_236BEE010(0xD00000000000001FLL, 0x8000000236C3ABA0), (v8 & 1) != 0))
  {
    v9 = v7;
    v10 = *(_QWORD *)(v6 + 56);
    v11 = sub_236C3592C();
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(uint64_t *, unint64_t, uint64_t))(v12 + 16))(v5, v10 + *(_QWORD *)(v12 + 72) * v9, v11);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v5, 0, 1, v11);
  }
  else
  {
    v11 = sub_236C3592C();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
  }
  swift_bridgeObjectRelease();
  sub_236C3592C();
  v13 = *(_QWORD *)(v11 - 8);
  v14 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v5, 1, v11) == 1)
  {
    v15 = (uint64_t)v5;
LABEL_7:
    sub_236BE6C14(v15, &qword_2542B1640);
    return 0;
  }
  v16 = *(uint64_t (**)(uint64_t *, uint64_t))(v13 + 88);
  v17 = v16(v5, v11);
  if (v17 != *MEMORY[0x24BE09AA8])
  {
    (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v5, v11);
    return 0;
  }
  v18 = v17;
  v19 = *(void (**)(uint64_t *, uint64_t))(v13 + 96);
  v19(v5, v11);
  v20 = *v5;
  v21 = sub_236C35D10();
  if (*(_QWORD *)(v21 + 16) && (v22 = sub_236BEE010(0xD000000000000020, 0x8000000236C3ABC0), (v23 & 1) != 0))
  {
    (*(void (**)(uint64_t *, unint64_t, uint64_t))(v13 + 16))(v3, *(_QWORD *)(v21 + 56) + *(_QWORD *)(v13 + 72) * v22, v11);
    v24 = 0;
  }
  else
  {
    v24 = 1;
  }
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v3, v24, 1, v11);
  swift_bridgeObjectRelease();
  if (v14(v3, 1, v11) == 1)
  {
    v15 = (uint64_t)v3;
    goto LABEL_7;
  }
  if (v16(v3, v11) != v18)
  {
    (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v3, v11);
    return 0;
  }
  v19(v3, v11);
  return v20 > 0 || *v3 == 1;
}

uint64_t sub_236C1D074(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_236C1D084()
{
  unint64_t v0;

  v0 = sub_236C3658C();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_236C1D0CC(uint64_t a1)
{
  sub_236C1B33C(a1);
  sub_236C364C0();
  sub_236C36184();
  swift_bridgeObjectRetain();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C35A88();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  swift_bridgeObjectRetain();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C2C404();
  sub_236C36184();
  swift_bridgeObjectRelease();
  return 0;
}

id sub_236C1D268(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;

  v40 = a2;
  v2 = sub_236C35728();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_256447B60);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for HALOverloadCase.OverloadInfo(0);
  v38 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v34 = (uint64_t)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_236C1AF9C();
  sub_236C35DA0();
  v11 = sub_236C36274();
  v13 = v12;
  v14 = sub_236C35D04();
  v16 = v15;
  v17 = sub_236C35D94();
  v19 = v18;
  v35 = v3;
  v36 = v2;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v20(v5, v40, v2);
  sub_236C1B18C(v11, v13, v14, v16, v17, v19, (uint64_t)v5, v37, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v8, 1, v39) == 1)
  {
    sub_236BE6C14((uint64_t)v8, qword_256447B60);
    return 0;
  }
  else
  {
    v22 = v34;
    sub_236C1D96C((uint64_t)v8, v34, type metadata accessor for HALOverloadCase.OverloadInfo);
    v41 = 0;
    v42 = 0xE000000000000000;
    sub_236C364C0();
    swift_bridgeObjectRelease();
    v41 = 91;
    v42 = 0xE100000000000000;
    sub_236C35A88();
    sub_236C36184();
    swift_bridgeObjectRelease();
    sub_236C36184();
    swift_bridgeObjectRetain();
    sub_236C36184();
    swift_bridgeObjectRelease();
    sub_236C1D0CC(v22);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256447A28);
    v23 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_236C37710;
    v20((char *)(v24 + v23), v40, v36);
    if (qword_256447070 != -1)
      swift_once();
    v25 = (void *)qword_256447A60;
    v26 = objc_allocWithZone(MEMORY[0x24BE0A130]);
    v27 = v25;
    v28 = (void *)sub_236C360D0();
    swift_bridgeObjectRelease();
    v29 = (void *)sub_236C360D0();
    swift_bridgeObjectRelease();
    v30 = (void *)sub_236C360D0();
    v31 = (void *)sub_236C36208();
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(v26, sel_initWithTitle_problemDescription_displayReason_attachments_component_, v28, v29, v30, v31, v27);

    sub_236C1D9B0(v22, type metadata accessor for HALOverloadCase.OverloadInfo);
  }
  return v21;
}

char *sub_236C1D61C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_236C36574();
  __break(1u);
  return result;
}

uint64_t sub_236C1D704(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_236C36574();
  __break(1u);
  return result;
}

uint64_t sub_236C1D81C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_236C35728();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_236C1D888()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_236C35728() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_236C1B418(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_236C1D8C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_236C35728();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_236C1D928()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_236C35728() - 8) + 80);
  return sub_236C1B658(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t type metadata accessor for HALOverloadCase.OverloadInfo(uint64_t a1)
{
  return sub_236BEB454(a1, qword_256447BC0);
}

uint64_t sub_236C1D96C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_236C1D9B0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_236C1D9EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    v10 = *(int *)(a3 + 28);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    v13 = sub_236C35728();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 32));
  }
  return v4;
}

uint64_t sub_236C1DACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_236C35728();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_236C1DB24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  v12 = sub_236C35728();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *sub_236C1DBD8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_236C35728();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

_OWORD *sub_236C1DCA8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_236C35728();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *sub_236C1DD28(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_236C35728();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_236C1DDC8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_236C1DDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_236C35728();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_236C1DE50()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_236C1DE5C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_236C35728();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_236C1DED0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_236C35728();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for HALOverloadCase.OverloadCause(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HALOverloadCase.OverloadCause(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_236C1E030 + 4 * byte_236C382ED[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_236C1E064 + 4 * byte_236C382E8[v4]))();
}

uint64_t sub_236C1E064(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236C1E06C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236C1E074);
  return result;
}

uint64_t sub_236C1E080(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236C1E088);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_236C1E08C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236C1E094(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HALOverloadCase.OverloadCause()
{
  return &type metadata for HALOverloadCase.OverloadCause;
}

unint64_t sub_236C1E0B4()
{
  unint64_t result;

  result = qword_256447C08;
  if (!qword_256447C08)
  {
    result = MEMORY[0x23B80027C](&unk_236C38408, &type metadata for HALOverloadCase.OverloadCause);
    atomic_store(result, (unint64_t *)&qword_256447C08);
  }
  return result;
}

void sub_236C1E0FC()
{
  id v0;
  void *v1;
  void *v2;
  id v3;

  v0 = objc_allocWithZone(MEMORY[0x24BE0A128]);
  v1 = (void *)sub_236C360D0();
  v2 = (void *)sub_236C360D0();
  v3 = objc_msgSend(v0, sel_initWithName_version_identifier_, v1, v2, 956466);

  qword_256447C10 = (uint64_t)v3;
}

uint64_t sub_236C1E19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14PHASEIssueCase_name;
  v2 = sub_236C35A40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14PHASEIssueCase_tailspinRequest + 16);
  sub_236C1D074(*(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14PHASEIssueCase_tailspinRequest));
  sub_236C1D074(v3);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_236C1E228()
{
  return type metadata accessor for PHASEIssueCase();
}

uint64_t type metadata accessor for PHASEIssueCase()
{
  uint64_t result;

  result = qword_256447C40;
  if (!qword_256447C40)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236C1E26C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_236C35A40();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_236C1E2FC()
{
  return 1;
}

uint64_t sub_236C1E304()
{
  return swift_retain();
}

uint64_t sub_236C1E314@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14PHASEIssueCase_name;
  v4 = sub_236C35A40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_236C1E358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14PHASEIssueCase_tailspinRequest);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14PHASEIssueCase_tailspinRequest + 16);
  sub_236C1BE78(v1);
  sub_236C1BE78(v2);
  return v1;
}

uint64_t sub_236C1E3B4()
{
  sub_236C364C0();
  sub_236C36184();
  sub_236C35DA0();
  sub_236C36274();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C35A88();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C35D94();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C2C404();
  sub_236C36184();
  swift_bridgeObjectRelease();
  return 0;
}

id sub_236C1E504(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  sub_236C364C0();
  swift_bridgeObjectRelease();
  sub_236C35A88();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C35D04();
  if (!v3)
    sub_236C35DC4();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C1E3B4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447A28);
  v4 = sub_236C35728();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_236C37710;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v7 + v6, a2, v4);
  if (qword_256447078 != -1)
    swift_once();
  v8 = (void *)qword_256447C10;
  v9 = objc_allocWithZone(MEMORY[0x24BE0A130]);
  v10 = v8;
  v11 = (void *)sub_236C360D0();
  swift_bridgeObjectRelease();
  v12 = (void *)sub_236C360D0();
  swift_bridgeObjectRelease();
  v13 = (void *)sub_236C360D0();
  v14 = (void *)sub_236C36208();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v9, sel_initWithTitle_problemDescription_displayReason_attachments_component_, v11, v12, v13, v14, v10, 91, 0xE100000000000000);

  return v15;
}

uint64_t PowerLogWorker.__allocating_init(with:)(uint64_t a1)
{
  swift_allocObject();
  return PowerLogWorker.init(with:)(a1);
}

Swift::Bool __swiftcall PowerLogWorker.start()()
{
  uint64_t v0;

  swift_beginAccess();
  *(_BYTE *)(v0 + 16) = 1;
  return 1;
}

uint64_t sub_236C1E7B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B14F0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_236C35DB8();
  result = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC22AudioAnalyticsExternal14PowerLogWorker_rmsState;
  if ((*(_BYTE *)(v3 + 82) & 1) != 0)
    goto LABEL_8;
  v15 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal14PowerLogWorker_rmsState) + 80);
  v16 = (unsigned __int128)(v15 * (__int128)10) >> 64;
  v17 = 10 * v15;
  if (v16 != v17 >> 63)
  {
    __break(1u);
    return result;
  }
  if (v17 < 60)
  {
LABEL_8:
    v32 = *(_QWORD *)(v3 + v14);
    *(_QWORD *)(v32 + 16) = 0;
    *(_QWORD *)(v32 + 24) = 0;
    *(_QWORD *)(v32 + 32) = 0;
    *(_QWORD *)(v32 + 40) = 0xFF7FFFFF7F7FFFFFLL;
    *(_QWORD *)(v32 + 48) = 0;
    *(_QWORD *)(v32 + 56) = 0xE000000000000000;
    swift_retain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v32 + 64) = 0;
    *(_BYTE *)(v32 + 72) = 1;
    *(_QWORD *)(v32 + 80) = 0;
    return swift_release();
  }
  v45 = OBJC_IVAR____TtC22AudioAnalyticsExternal14PowerLogWorker_rmsState;
  v40 = v8;
  v41 = v13;
  v42 = v11;
  v43 = result;
  v44 = *(unsigned __int16 *)(v3 + 80);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 48));
  sub_236C35B0C();
  v18 = sub_236C35E3C();
  v20 = v19;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v3 + 48);
  v46 = (_QWORD *)(v3 + 24);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 24), v21);
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInt_, sub_236C35B3C());
  v23 = sub_236C1F724(v18, v20, v22, a1, a2);
  swift_bridgeObjectRelease();

  if (!v23)
  {
    v14 = OBJC_IVAR____TtC22AudioAnalyticsExternal14PowerLogWorker_rmsState;
    goto LABEL_8;
  }
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v24 = sub_236C35F44();
  v25 = sub_236C36328();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v48 = v27;
    *(_DWORD *)v26 = 134218243;
    __swift_project_boxed_opaque_existential_1(v46, *(_QWORD *)(v3 + 48));
    v28 = sub_236C35AF4();
    swift_release();
    v47 = v28;
    sub_236C363F4();
    swift_release();
    *(_WORD *)(v26 + 12) = 2081;
    v39 = v26 + 14;
    swift_bridgeObjectRetain();
    v29 = sub_236C36058();
    v31 = v30;
    swift_bridgeObjectRelease();
    v47 = sub_236C0ED40(v29, v31, &v48);
    sub_236C363F4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_236BE1000, v24, v25, "Sending RMS message to PowerLog. { reporterID=%lld, message=%{private}s }", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B800318](v27, -1, -1);
    MEMORY[0x23B800318](v26, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_release_n();
  }
  v33 = (void *)sub_236C360D0();
  v34 = (void *)sub_236C36040();
  PLLogRegisteredEvent();

  v35 = sub_236C36088();
  swift_bridgeObjectRelease();
  if (v35)
  {
    sub_236C35E54();
    v36 = sub_236C35D58();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v40, 1, 1, v36);
    v37 = v41;
    sub_236C35D64();
    __swift_project_boxed_opaque_existential_1(v46, *(_QWORD *)(v3 + 48));
    sub_236C35B18();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v37, v43);
  }
  v38 = *(_QWORD *)(v3 + v45);
  *(_QWORD *)(v38 + 16) = 0;
  *(_QWORD *)(v38 + 24) = 0;
  *(_QWORD *)(v38 + 32) = 0;
  *(_QWORD *)(v38 + 40) = 0xFF7FFFFF7F7FFFFFLL;
  *(_QWORD *)(v38 + 48) = 0;
  *(_QWORD *)(v38 + 56) = 0xE000000000000000;
  swift_retain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 64) = 0;
  *(_BYTE *)(v38 + 72) = 1;
  *(_QWORD *)(v38 + 80) = 0;
  return swift_release();
}

void sub_236C1ED0C()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  NSObject *oslog;
  os_log_t osloga;

  if ((*(_BYTE *)(v0 + 82) & 1) != 0)
  {
    swift_retain();
    oslog = sub_236C35F44();
    v1 = sub_236C36334();
    if (os_log_type_enabled(oslog, v1))
    {
      v2 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v2 = 134217984;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48));
      sub_236C35AF4();
      sub_236C363F4();
      swift_release();
      _os_log_impl(&dword_236BE1000, oslog, v1, "Failed to send Haptics message, PLClientID is nil { reporterID=%lld }", v2, 0xCu);
      MEMORY[0x23B800318](v2, -1, -1);

    }
    else
    {
      swift_release();

    }
  }
  else
  {
    if (sub_236C1F140())
    {
      v3 = (void *)sub_236C360D0();
      v4 = (void *)sub_236C36040();
      swift_bridgeObjectRelease();
      PLLogRegisteredEvent();

    }
    if (sub_236C1F3F8())
    {
      v5 = sub_236C35F44();
      v6 = sub_236C36328();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v7 = 0;
        _os_log_impl(&dword_236BE1000, v5, v6, "Sending haptics engineStateMessage.", v7, 2u);
        MEMORY[0x23B800318](v7, -1, -1);
      }

      v8 = (void *)sub_236C360D0();
      v9 = (void *)sub_236C36040();
      swift_bridgeObjectRelease();
      PLLogRegisteredEvent();

    }
    if (sub_236C20A44())
    {
      v10 = sub_236C35F44();
      v11 = sub_236C36328();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_236BE1000, v10, v11, "Sending haptics longRunningMessage.", v12, 2u);
        MEMORY[0x23B800318](v12, -1, -1);
      }

      v13 = (void *)sub_236C360D0();
      osloga = (os_log_t)sub_236C36040();
      swift_bridgeObjectRelease();
      PLLogRegisteredEvent();

    }
  }
}

Swift::Void __swiftcall PowerLogWorker.stop()()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48));
  if ((sub_236C35AE8() & 1) == 0)
    sub_236C1E7B4(1886352499, 0xE400000000000000);
  swift_beginAccess();
  *(_BYTE *)(v0 + 16) = 0;
}

unint64_t sub_236C1F140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t inited;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[176];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_236C35D10();
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_236BEE010(0x6E4F656E69676E45, 0xEC000000656D6954), (v7 & 1) != 0))
  {
    v8 = v6;
    v9 = *(_QWORD *)(v5 + 56);
    v10 = sub_236C3592C();
    v11 = *(_QWORD *)(v10 - 8);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v11 + 16))(v4, v9 + *(_QWORD *)(v11 + 72) * v8, v10);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v4, 0, 1, v10);
  }
  else
  {
    v10 = sub_236C3592C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_236C3592C();
  v12 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v10) == 1)
  {
    sub_236BE6C14((uint64_t)v4, &qword_2542B1640);
  }
  else
  {
    v13 = sub_236C358FC();
    v15 = v14;
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v4, v10);
    if ((v15 & 1) == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1548);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_236C37720;
      *(_QWORD *)(inited + 32) = 0xD000000000000010;
      *(_QWORD *)(inited + 40) = 0x8000000236C3B200;
      v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, *(double *)&v13);
      v18 = sub_236C09ABC();
      *(_QWORD *)(inited + 48) = v17;
      *(_QWORD *)(inited + 72) = v18;
      *(_QWORD *)(inited + 80) = 0x746163696C707041;
      *(_QWORD *)(inited + 88) = 0xEF656D614E6E6F69;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 48));
      sub_236C35B0C();
      v19 = sub_236C35E3C();
      v21 = v20;
      swift_bridgeObjectRelease();
      v22 = MEMORY[0x24BEE0D00];
      *(_QWORD *)(inited + 96) = v19;
      *(_QWORD *)(inited + 104) = v21;
      *(_QWORD *)(inited + 120) = v22;
      strcpy((char *)(inited + 128), "TimestampEnd");
      *(_BYTE *)(inited + 141) = 0;
      *(_WORD *)(inited + 142) = -5120;
      sub_236C35DA0();
      *(_QWORD *)(inited + 168) = MEMORY[0x24BEE13C8];
      *(_QWORD *)(inited + 144) = v23;
      return sub_236C15500(inited);
    }
  }
  return 0;
}

unint64_t sub_236C1F3F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  _BYTE v24[176];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_236C35D10();
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_236BEE010(0x7453656E69676E45, 0xEB00000000657461), (v7 & 1) != 0))
  {
    v8 = v6;
    v9 = *(_QWORD *)(v5 + 56);
    v10 = sub_236C3592C();
    v11 = *(_QWORD *)(v10 - 8);
    (*(void (**)(_QWORD *, unint64_t, uint64_t))(v11 + 16))(v4, v9 + *(_QWORD *)(v11 + 72) * v8, v10);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v4, 0, 1, v10);
  }
  else
  {
    v10 = sub_236C3592C();
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_236C3592C();
  v12 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v10) == 1)
  {
    sub_236BE6C14((uint64_t)v4, &qword_2542B1640);
    return 0;
  }
  else if ((*(unsigned int (**)(_QWORD *, uint64_t))(v12 + 88))(v4, v10) == *MEMORY[0x24BE09AD0])
  {
    (*(void (**)(_QWORD *, uint64_t))(v12 + 96))(v4, v10);
    if (*v4 == 0x6E4F656E69676E45 && v4[1] == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      v15 = 1;
    }
    else
    {
      v15 = sub_236C36658();
      swift_bridgeObjectRelease();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1548);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_236C37720;
    *(_QWORD *)(inited + 32) = 0x746163696C707041;
    *(_QWORD *)(inited + 40) = 0xEF656D614E6E6F69;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 48));
    sub_236C35B0C();
    v17 = sub_236C35E3C();
    v19 = v18;
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = v17;
    *(_QWORD *)(inited + 56) = v19;
    *(_QWORD *)(inited + 72) = v20;
    *(_QWORD *)(inited + 80) = 0x737574617453;
    *(_QWORD *)(inited + 88) = 0xE600000000000000;
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v15 & 1);
    v22 = sub_236C09ABC();
    *(_QWORD *)(inited + 96) = v21;
    *(_QWORD *)(inited + 120) = v22;
    strcpy((char *)(inited + 128), "TimestampEnd");
    *(_BYTE *)(inited + 141) = 0;
    *(_WORD *)(inited + 142) = -5120;
    sub_236C35DA0();
    *(_QWORD *)(inited + 168) = MEMORY[0x24BEE13C8];
    *(_QWORD *)(inited + 144) = v23;
    return sub_236C15500(inited);
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v4, v10);
    return 0;
  }
}

unint64_t sub_236C1F724(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  double v16;
  uint64_t inited;
  id v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  double v22;
  id v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;

  v6 = v5;
  v11 = OBJC_IVAR____TtC22AudioAnalyticsExternal14PowerLogWorker_rmsState;
  v12 = *(_QWORD *)(v6 + OBJC_IVAR____TtC22AudioAnalyticsExternal14PowerLogWorker_rmsState);
  if (*(uint64_t *)(v12 + 16) <= 0 && *(uint64_t *)(v12 + 24) <= 0 && *(uint64_t *)(v12 + 32) < 1
    || (*(_BYTE *)(v12 + 72) & 1) != 0)
  {
    swift_retain();
    v13 = sub_236C35F44();
    v14 = sub_236C36334();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v15 = 134217984;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 48));
      sub_236C35AF4();
      sub_236C363F4();
      swift_release();
      _os_log_impl(&dword_236BE1000, v13, v14, "Failed to build RMS message. { reporterID=%lld }", v15, 0xCu);
      MEMORY[0x23B800318](v15, -1, -1);
    }
    else
    {
      swift_release();
    }

    return 0;
  }
  else
  {
    v16 = *(double *)(v12 + 64) + -10.0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1548);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_236C384B0;
    *(_QWORD *)(inited + 32) = 0x6D69547472617453;
    *(_QWORD *)(inited + 40) = 0xE900000000000065;
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v16);
    v19 = sub_236C09ABC();
    *(_QWORD *)(inited + 48) = v18;
    *(_QWORD *)(inited + 72) = v19;
    *(_QWORD *)(inited + 80) = 0x746163696C707041;
    v20 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 88) = 0xEF656D614E6E6F69;
    *(_QWORD *)(inited + 96) = a1;
    *(_QWORD *)(inited + 104) = a2;
    *(_QWORD *)(inited + 120) = v20;
    *(_QWORD *)(inited + 128) = 0x736D5278616DLL;
    *(_QWORD *)(inited + 136) = 0xE600000000000000;
    LODWORD(v16) = *(_DWORD *)(*(_QWORD *)(v6 + v11) + 44);
    v21 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
    swift_bridgeObjectRetain();
    LODWORD(v22) = LODWORD(v16);
    *(_QWORD *)(inited + 144) = objc_msgSend(v21, sel_initWithFloat_, v22);
    *(_QWORD *)(inited + 168) = v19;
    *(_QWORD *)(inited + 176) = 0x736D526E696DLL;
    *(_QWORD *)(inited + 184) = 0xE600000000000000;
    LODWORD(v16) = *(_DWORD *)(*(_QWORD *)(v6 + v11) + 40);
    v23 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
    LODWORD(v24) = LODWORD(v16);
    *(_QWORD *)(inited + 192) = objc_msgSend(v23, sel_initWithFloat_, v24);
    *(_QWORD *)(inited + 216) = v19;
    *(_QWORD *)(inited + 224) = 0x65636E656C6973;
    *(_QWORD *)(inited + 232) = 0xE700000000000000;
    *(_QWORD *)(inited + 240) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(*(_QWORD *)(v6 + v11) + 16));
    *(_QWORD *)(inited + 264) = v19;
    *(_QWORD *)(inited + 272) = 0x7465697571;
    *(_QWORD *)(inited + 280) = 0xE500000000000000;
    *(_QWORD *)(inited + 288) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(*(_QWORD *)(v6 + v11) + 24));
    *(_QWORD *)(inited + 312) = v19;
    *(_QWORD *)(inited + 320) = 0x656C6269647561;
    *(_QWORD *)(inited + 328) = 0xE700000000000000;
    *(_QWORD *)(inited + 336) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *(_QWORD *)(*(_QWORD *)(v6 + v11) + 32));
    *(_QWORD *)(inited + 360) = v19;
    *(_QWORD *)(inited + 368) = 1701080942;
    *(_QWORD *)(inited + 376) = 0xE400000000000000;
    v25 = *(_QWORD *)(v6 + v11);
    v26 = *(_QWORD *)(v25 + 56);
    *(_QWORD *)(inited + 384) = *(_QWORD *)(v25 + 48);
    *(_QWORD *)(inited + 392) = v26;
    v27 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 408) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 416) = 6580592;
    *(_QWORD *)(inited + 424) = 0xE300000000000000;
    *(_QWORD *)(inited + 432) = a3;
    *(_QWORD *)(inited + 456) = v19;
    *(_QWORD *)(inited + 464) = 0x726574726F706572;
    *(_QWORD *)(inited + 472) = 0xEA00000000004449;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 48));
    swift_bridgeObjectRetain();
    v28 = a3;
    *(_QWORD *)(inited + 480) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithLongLong_, sub_236C35AF4());
    *(_QWORD *)(inited + 504) = v19;
    *(_QWORD *)(inited + 512) = 0x6E6F73616572;
    *(_QWORD *)(inited + 520) = 0xE600000000000000;
    *(_QWORD *)(inited + 552) = v27;
    *(_QWORD *)(inited + 528) = a4;
    *(_QWORD *)(inited + 536) = a5;
    swift_bridgeObjectRetain();
    return sub_236C15500(inited);
  }
}

uint64_t sub_236C1FB70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_236C36190();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    do
    {
      v6 = sub_236C36190();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v4 = sub_236C36658();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      v2 = sub_236C36190();
      v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_236C36190();
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t PowerLogWorker.isStarted.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_236C1FD04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v26)(uint64_t *, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t result;
  int v40;
  _QWORD *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  char *v65;

  v2 = v1;
  v4 = sub_236C35DB8();
  v63 = *(_QWORD *)(v4 - 8);
  v64 = (uint64_t *)v4;
  MEMORY[0x24BDAC7A8](v4);
  v65 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (uint64_t *)((char *)&v60 - v11);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t *)((char *)&v60 - v13);
  v15 = sub_236C35D10();
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_236BEE010(7564658, 0xE300000000000000), (v17 & 1) != 0))
  {
    v18 = v16;
    v19 = v2;
    v20 = *(_QWORD *)(v15 + 56);
    v21 = sub_236C3592C();
    v22 = *(_QWORD *)(v21 - 8);
    v23 = v20 + *(_QWORD *)(v22 + 72) * v18;
    v2 = v19;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v22 + 16))(v14, v23, v21);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v14, 0, 1, v21);
  }
  else
  {
    v21 = sub_236C3592C();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v14, 1, 1, v21);
  }
  swift_bridgeObjectRelease();
  sub_236C3592C();
  v24 = *(_QWORD *)(v21 - 8);
  v25 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v14, 1, v21) == 1)
  {
    sub_236BE6C14((uint64_t)v14, &qword_2542B1640);
    goto LABEL_24;
  }
  v62 = v2;
  v26 = *(uint64_t (**)(uint64_t *, uint64_t))(v24 + 88);
  v27 = v26(v14, v21);
  if (v27 != *MEMORY[0x24BE09AD0])
  {
    (*(void (**)(uint64_t *, uint64_t))(v24 + 8))(v14, v21);
LABEL_23:
    v2 = v62;
    goto LABEL_24;
  }
  v28 = v27;
  v61 = *(void (**)(uint64_t *, uint64_t))(v24 + 96);
  v61(v14, v21);
  v29 = *v14;
  v30 = v14[1];
  v60 = v29;
  v31 = sub_236C35D10();
  if (*(_QWORD *)(v31 + 16) && (v32 = sub_236BEE010(1801545072, 0xE400000000000000), (v33 & 1) != 0))
  {
    (*(void (**)(uint64_t *, unint64_t, uint64_t))(v24 + 16))(v12, *(_QWORD *)(v31 + 56) + *(_QWORD *)(v24 + 72) * v32, v21);
    v34 = 0;
  }
  else
  {
    v34 = 1;
  }
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v12, v34, 1, v21);
  swift_bridgeObjectRelease();
  if (v25(v12, 1, v21) == 1)
  {
    swift_bridgeObjectRelease();
    sub_236BE6C14((uint64_t)v12, &qword_2542B1640);
    goto LABEL_23;
  }
  if (v26(v12, v21) != v28)
    goto LABEL_22;
  v61(v12, v21);
  v35 = *v12;
  v36 = v12[1];
  v37 = sub_236C20690(v60, v30);
  swift_bridgeObjectRelease();
  v2 = v62;
  if ((v37 & 0x100000000) == 0)
  {
    v38 = sub_236C20690(v35, v36);
    result = swift_bridgeObjectRelease();
    if ((v38 & 0x100000000) != 0)
      goto LABEL_24;
    v40 = v37;
    if (*(float *)&v37 >= -110.0)
    {
      v45 = v63;
      v12 = v64;
      v41 = (_QWORD *)v2;
      if (*(float *)&v37 < -50.0)
      {
        v53 = *(_QWORD *)(v2 + 24);
        v41 = (_QWORD *)(v2 + 24);
        v44 = v53 + 10;
        if (!__OFADD__(v53, 10))
          goto LABEL_41;
        __break(1u);
      }
      v54 = v41[4];
      v41 += 4;
      v44 = v54 + 10;
      if (__OFADD__(v54, 10))
        goto LABEL_49;
      goto LABEL_41;
    }
    v41 = (_QWORD *)(v2 + 16);
    v42 = *(_QWORD *)(v2 + 16);
    v43 = __OFADD__(v42, 10);
    v44 = v42 + 10;
    v45 = v63;
    v12 = v64;
    if (!v43)
    {
LABEL_41:
      v55 = v38;
      *v41 = v44;
      if (*(float *)(v2 + 40) <= *(float *)&v37)
        v40 = *(_DWORD *)(v2 + 40);
      if (*(float *)(v2 + 44) > *(float *)&v38)
        v55 = *(_DWORD *)(v2 + 44);
      *(_DWORD *)(v2 + 40) = v40;
      *(_DWORD *)(v2 + 44) = v55;
      v56 = *(_QWORD *)(v2 + 64);
      v57 = *(unsigned __int8 *)(v2 + 72);
      v58 = v65;
      (*(void (**)(char *, uint64_t, uint64_t *))(v45 + 16))(v65, a1, v12);
      if (v57 == 1)
      {
        sub_236C35DA0();
        v58 = v65;
        v56 = v59;
      }
      (*(void (**)(char *, uint64_t *))(v45 + 8))(v58, v12);
      v2 = v62;
      *(_QWORD *)(v62 + 64) = v56;
      *(_BYTE *)(v2 + 72) = 0;
      goto LABEL_24;
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v24 + 8))(v12, v21);
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
LABEL_24:
  v46 = sub_236C35D10();
  if (*(_QWORD *)(v46 + 16) && (v47 = sub_236BEE010(1701080942, 0xE400000000000000), (v48 & 1) != 0))
  {
    (*(void (**)(uint64_t *, unint64_t, uint64_t))(v24 + 16))(v9, *(_QWORD *)(v46 + 56) + *(_QWORD *)(v24 + 72) * v47, v21);
    v49 = 0;
  }
  else
  {
    v49 = 1;
  }
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v9, v49, 1, v21);
  swift_bridgeObjectRelease();
  if (v25(v9, 1, v21) == 1)
  {
    result = sub_236BE6C14((uint64_t)v9, &qword_2542B1640);
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t))(v24 + 88))(v9, v21) == *MEMORY[0x24BE09AD0])
  {
    (*(void (**)(uint64_t *, uint64_t))(v24 + 96))(v9, v21);
    v50 = v9[1];
    *(_QWORD *)(v2 + 48) = *v9;
    *(_QWORD *)(v2 + 56) = v50;
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = (*(uint64_t (**)(uint64_t *, uint64_t))(v24 + 8))(v9, v21);
  }
  v51 = *(_QWORD *)(v2 + 80);
  v43 = __OFADD__(v51, 1);
  v52 = v51 + 1;
  if (!v43)
  {
    *(_QWORD *)(v2 + 80) = v52;
    return result;
  }
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_236C2023C()
{
  uint64_t v0;
  uint64_t result;

  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xFF7FFFFF7F7FFFFFLL;
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0xE000000000000000;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 64) = 0;
  *(_BYTE *)(v0 + 72) = 1;
  *(_QWORD *)(v0 + 80) = 0;
  return result;
}

uint64_t sub_236C20280()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t PowerLogWorker.workerConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14PowerLogWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PowerLogWorker.workerConfig.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14PowerLogWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*PowerLogWorker.workerConfig.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t PowerLogWorker.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14PowerLogWorker_logger;
  v2 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14PowerLogWorker_workerConfig;
  v4 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t PowerLogWorker.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14PowerLogWorker_logger;
  v2 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14PowerLogWorker_workerConfig;
  v4 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_236C204CC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = *v0;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v0 + 24), *(_QWORD *)(*v0 + 48));
  if ((sub_236C35AE8() & 1) == 0)
    sub_236C1E7B4(1886352499, 0xE400000000000000);
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = 0;
  return result;
}

uint64_t sub_236C20548()
{
  return sub_236BE6C98(&qword_2542B1AA0, (uint64_t (*)(uint64_t))type metadata accessor for PowerLogWorker, (uint64_t)&protocol conformance descriptor for PowerLogWorker);
}

uint64_t type metadata accessor for PowerLogWorker()
{
  uint64_t result;

  result = qword_2542B1AA8;
  if (!qword_2542B1AA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236C205B0()
{
  return type metadata accessor for PowerLogWorker();
}

uint64_t sub_236C205B8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_236C35F50();
  if (v1 <= 0x3F)
  {
    result = sub_236C35CB0();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PowerLogWorker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PowerLogWorker.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

unint64_t sub_236C20690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  float v21;
  uint64_t v22;
  unsigned __int8 v23;
  float *v24;
  uint64_t v25;
  uint64_t v26;
  float *v27;
  float v28;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B14B8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = a1;
  v32 = a2;
  sub_236C358A8();
  v30[0] = 0;
  v30[1] = 0xE000000000000000;
  sub_236C0DFA8();
  sub_236C0DFEC();
  sub_236C209B4();
  sub_236C36310();
  v8 = *(void (**)(char *, uint64_t))(v5 + 8);
  v8(v7, v4);
  v31 = v33;
  v32 = v34;
  sub_236C358A8();
  sub_236C20A00();
  v9 = sub_236C360AC();
  v8(v7, v4);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain();
    v11 = v9 + 56;
    v12 = (char *)MEMORY[0x24BEE4AF8];
    do
    {
      swift_bridgeObjectRetain();
      v13 = sub_236C362EC();
      if ((v13 & 0x100000000) == 0)
      {
        v14 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_236C1C318(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
        v16 = *((_QWORD *)v12 + 2);
        v15 = *((_QWORD *)v12 + 3);
        if (v16 >= v15 >> 1)
          v12 = sub_236C1C318((char *)(v15 > 1), v16 + 1, 1, v12);
        *((_QWORD *)v12 + 2) = v16 + 1;
        *(_DWORD *)&v12[4 * v16 + 32] = v14;
      }
      v11 += 32;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    v17 = *((_QWORD *)v12 + 2);
    v18 = *(_QWORD *)(v9 + 16);
    swift_bridgeObjectRelease();
    if (v17 == v18)
    {
      v19 = *((_QWORD *)v12 + 2);
      if (v19)
      {
        if (v19 == 1)
        {
          v20 = 0;
          v21 = 0.0;
        }
        else
        {
          v20 = v19 & 0x7FFFFFFFFFFFFFFELL;
          v24 = (float *)(v12 + 36);
          v21 = 0.0;
          v25 = v19 & 0x7FFFFFFFFFFFFFFELL;
          do
          {
            v21 = (float)(v21 + *(v24 - 1)) + *v24;
            v24 += 2;
            v25 -= 2;
          }
          while (v25);
          if (v19 == v20)
            goto LABEL_21;
        }
        v26 = v19 - v20;
        v27 = (float *)&v12[4 * v20 + 32];
        do
        {
          v28 = *v27++;
          v21 = v21 + v28;
          --v26;
        }
        while (v26);
      }
      else
      {
        v21 = 0.0;
      }
LABEL_21:
      swift_bridgeObjectRelease();
      v23 = 0;
      v22 = COERCE_UNSIGNED_INT(v21 / (float)v17);
      return v22 | ((unint64_t)v23 << 32);
    }
  }
  swift_bridgeObjectRelease();
  v22 = 0;
  v23 = 1;
  return v22 | ((unint64_t)v23 << 32);
}

unint64_t sub_236C209B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542B15B8;
  if (!qword_2542B15B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542B14B8);
    result = MEMORY[0x23B80027C](MEMORY[0x24BEE7460], v1);
    atomic_store(result, (unint64_t *)&qword_2542B15B8);
  }
  return result;
}

unint64_t sub_236C20A00()
{
  unint64_t result;

  result = qword_2542B15E0;
  if (!qword_2542B15E0)
  {
    result = MEMORY[0x23B80027C](MEMORY[0x24BEE0D18], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2542B15E0);
  }
  return result;
}

unint64_t sub_236C20A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  char v16;
  char v17;
  void (*v18)(char *, uint64_t);
  double v19;
  uint64_t inited;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v29;
  char v30;
  char v31;
  id v32;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v34;
  _OWORD v35[2];
  __int128 v36;
  unint64_t v37;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v34 - v4;
  v6 = sub_236C35D10();
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_236BEE010(0xD000000000000023, 0x8000000236C3B1D0), (v8 & 1) != 0))
  {
    v9 = v7;
    v10 = *(_QWORD *)(v6 + 56);
    v11 = sub_236C3592C();
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v5, v10 + *(_QWORD *)(v12 + 72) * v9, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v5, 0, 1, v11);
  }
  else
  {
    v11 = sub_236C3592C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
  }
  swift_bridgeObjectRelease();
  sub_236C3592C();
  v13 = *(_QWORD *)(v11 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v5, 1, v11) == 1)
  {
    sub_236BE6C14((uint64_t)v5, &qword_2542B1640);
    return 0;
  }
  v15 = sub_236C358FC();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v13 + 8);
  v18(v5, v11);
  if ((v17 & 1) != 0)
    return 0;
  v19 = *(double *)&v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1548);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_236C37710;
  *(_QWORD *)(inited + 32) = 0xD000000000000023;
  *(_QWORD *)(inited + 40) = 0x8000000236C3B1D0;
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v19);
  v22 = sub_236C09ABC();
  *(_QWORD *)(inited + 72) = v22;
  *(_QWORD *)(inited + 48) = v21;
  v23 = sub_236C15500(inited);
  v24 = sub_236C35D10();
  if (*(_QWORD *)(v24 + 16) && (v25 = sub_236BEE010(0x435F657669746341, 0xEE0073746E65696CLL), (v26 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v3, *(_QWORD *)(v24 + 56) + *(_QWORD *)(v13 + 72) * v25, v11);
    v27 = 0;
  }
  else
  {
    v27 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v3, v27, 1, v11);
  swift_bridgeObjectRelease();
  if (v14(v3, 1, v11) == 1)
  {
    sub_236BE6C14((uint64_t)v3, &qword_2542B1640);
  }
  else
  {
    v29 = sub_236C358FC();
    v31 = v30;
    v18(v3, v11);
    if ((v31 & 1) == 0)
    {
      v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, *(double *)&v29);
      v37 = v22;
      *(_QWORD *)&v36 = v32;
      sub_236BECFF4(&v36, v35);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v34 = v23;
      sub_236C0A85C(v35, 0x435F657669746341, 0xEE0073746E65696CLL, isUniquelyReferenced_nonNull_native);
      v23 = v34;
      swift_bridgeObjectRelease();
    }
  }
  return v23;
}

uint64_t sub_236C20DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, char *);
  compression_stream *v48;
  compression_algorithm v49;
  id v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  void *v55;
  unsigned int v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v5 = v4;
  v71 = a3;
  v69 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2564479E8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_236C35728();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v60 - v16;
  v18 = v5 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_logger;
  sub_236C35EFC();
  v19 = OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_streamPointer;
  v20 = swift_slowAlloc();
  v68 = v19;
  *(_QWORD *)(v5 + v19) = v20;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_bufferSizeBytes) = 0x8000;
  LODWORD(v70) = sub_236C35A94();
  if ((v70 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v34 = sub_236C3589C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(a4, v34);
    v35 = sub_236C35884();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v71, v35);
    goto LABEL_5;
  }
  v63 = v18;
  v65 = v17;
  v66 = v12;
  v21 = v71;
  v22 = (uint64_t *)(v5 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_serialNumber);
  v23 = (void *)v69;
  *v22 = v69;
  v22[1] = a2;
  v61 = v15;
  v62 = v22;
  v67 = a4;
  v24 = v5 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_streamOperation;
  v25 = sub_236C35884();
  v64 = *(_QWORD *)(v25 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v24, v21, v25);
  v26 = v5 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_compressionAlgorithm;
  v27 = sub_236C3589C();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = v26;
  v30 = v67;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v29, v67, v27);
  swift_bridgeObjectRetain();
  v31 = v23;
  v32 = v21;
  sub_236C21354(v31, a2, v30, v21, (uint64_t)v10);
  swift_bridgeObjectRelease();
  v33 = v66;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v10, 1, v11) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v27);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v21, v25);
    sub_236BE6C14((uint64_t)v10, &qword_2564479E8);
    swift_bridgeObjectRelease();
    v18 = v63;
LABEL_5:
    v36 = sub_236C35F50();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v18, v36);
    if ((v70 & 1) != 0)
    {
      v37 = v5 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_streamOperation;
      v38 = sub_236C35884();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
      v39 = v5 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_compressionAlgorithm;
      v40 = sub_236C3589C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
    }
    type metadata accessor for AVCompressFile();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v60 = v28;
  v62 = (_QWORD *)v27;
  v69 = v25;
  v43 = v65;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v65, v10, v11);
  v44 = v11;
  v45 = v5 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_fileURL;
  v46 = v33;
  v47 = *(void (**)(uint64_t, char *))(v33 + 16);
  v70 = v44;
  v47(v5 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_fileURL, v43);
  v48 = *(compression_stream **)(v5 + v68);
  LODWORD(v43) = sub_236C35878();
  v49 = sub_236C35890();
  v41 = v5;
  if (compression_stream_init(v48, (compression_stream_operation)v43, v49) == COMPRESSION_STATUS_ERROR)
  {
    v57 = sub_236C35F44();
    v58 = sub_236C36334();
    if (os_log_type_enabled(v57, v58))
    {
      v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v59 = 0;
      _os_log_impl(&dword_236BE1000, v57, v58, "Unable to initialize the compression stream.", v59, 2u);
      MEMORY[0x23B800318](v59, -1, -1);
    }
    swift_release();

    (*(void (**)(uint64_t, _QWORD *))(v60 + 8))(v67, v62);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v32, v69);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v65, v70);
  }
  else
  {
    if ((sub_236C21A38() & 1) != 0)
    {
      v50 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      v51 = v61;
      v52 = v70;
      ((void (*)(char *, uint64_t, uint64_t))v47)(v61, v45, v70);
      sub_236C356EC();
      v53 = v21;
      v54 = *(void (**)(char *, uint64_t))(v46 + 8);
      v54(v51, v52);
      v55 = (void *)sub_236C360D0();
      swift_bridgeObjectRelease();
      v56 = objc_msgSend(v50, sel_createFileAtPath_contents_attributes_, v55, 0, 0);

      (*(void (**)(uint64_t, _QWORD *))(v60 + 8))(v67, v62);
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v53, v69);
      v54(v65, v52);
      if (v56)
        return v41;
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD *))(v60 + 8))(v67, v62);
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v21, v69);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v65, v70);
    }
    swift_release();
  }
  return 0;
}

uint64_t sub_236C21354@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v38 = a3;
  v39 = a4;
  v40 = a1;
  v42 = a5;
  v43 = sub_236C35728();
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v37 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_236C35884();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_236C357DC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v16 = (void *)sub_236C360D0();
  objc_msgSend(v15, sel_setDateFormat_, v16);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2564474F0);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_236C37860;
  *(_QWORD *)(v17 + 56) = MEMORY[0x24BEE0D00];
  v18 = sub_236C082B4();
  *(_QWORD *)(v17 + 64) = v18;
  *(_QWORD *)(v17 + 32) = v40;
  *(_QWORD *)(v17 + 40) = a2;
  swift_bridgeObjectRetain();
  sub_236C357D0();
  v19 = (void *)sub_236C357A0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v40 = v15;
  v20 = objc_msgSend(v15, sel_stringFromDate_, v19);

  v21 = sub_236C360F4();
  v23 = v22;

  *(_QWORD *)(v17 + 96) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v17 + 104) = v18;
  *(_QWORD *)(v17 + 72) = v21;
  *(_QWORD *)(v17 + 80) = v23;
  sub_236C3610C();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v39, v7);
  v24 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v10, v7);
  if (v24 == *MEMORY[0x24BEDFFC8])
  {
    sub_236C23B40(v38);
    if (!v25)
    {
      swift_bridgeObjectRelease();

      v31 = v42;
      v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
      v33 = 1;
      v34 = v43;
      return v30(v31, v33, 1, v34);
    }
    if (qword_256447030 != -1)
      swift_once();
    v26 = v43;
    __swift_project_value_buffer(v43, (uint64_t)qword_256448E58);
    v27 = v37;
    sub_236C356D4();
    swift_bridgeObjectRelease();
    v28 = v42;
    sub_236C356E0();
    swift_bridgeObjectRelease();

    v29 = v41;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v26);
    v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
    v31 = v28;
  }
  else
  {
    if (v24 != *MEMORY[0x24BEDFFC0])
    {
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v42, 1, 1, v43);
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    if (qword_256447030 != -1)
      swift_once();
    v26 = v43;
    __swift_project_value_buffer(v43, (uint64_t)qword_256448E58);
    v32 = v42;
    sub_236C356D4();

    swift_bridgeObjectRelease();
    v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
    v31 = v32;
  }
  v33 = 0;
  v34 = v26;
  return v30(v31, v33, 1, v34);
}

uint64_t sub_236C21774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  compression_stream *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_logger;
  v3 = sub_236C35F44();
  v4 = sub_236C36328();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_236BE1000, v3, v4, "Destroying compression stream!", v5, 2u);
    MEMORY[0x23B800318](v5, -1, -1);
  }

  sub_236C23180();
  v6 = *(compression_stream **)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_streamPointer);
  compression_stream_destroy(v6);
  MEMORY[0x23B800318](v6, -1, -1);
  v7 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_fileURL;
  v8 = sub_236C35728();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  v9 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v2, v9);
  v10 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_streamOperation;
  v11 = sub_236C35884();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_compressionAlgorithm;
  v13 = sub_236C3589C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  return v1;
}

uint64_t sub_236C218F4()
{
  sub_236C21774();
  return swift_deallocClassInstance();
}

uint64_t sub_236C21918()
{
  return type metadata accessor for AVCompressFile();
}

uint64_t type metadata accessor for AVCompressFile()
{
  uint64_t result;

  result = qword_256447D40;
  if (!qword_256447D40)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236C2195C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = sub_236C35728();
  if (v1 <= 0x3F)
  {
    result = sub_236C35F50();
    if (v2 <= 0x3F)
    {
      result = sub_236C35884();
      if (v3 <= 0x3F)
      {
        result = sub_236C3589C();
        if (v4 <= 0x3F)
          return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

id sub_236C21A38()
{
  id v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  if (qword_256447030 != -1)
    swift_once();
  v1 = sub_236C35728();
  __swift_project_value_buffer(v1, (uint64_t)qword_256448E58);
  v2 = (void *)sub_236C356C8();
  v17[0] = 0;
  v3 = objc_msgSend(v0, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v2, 1, 0, v17);

  v4 = v17[0];
  if ((_DWORD)v3)
  {
    v5 = sub_236C35F44();
    v6 = sub_236C36328();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (void *)swift_slowAlloc();
      v17[0] = v8;
      *(_DWORD *)v7 = 136380675;
      v9 = sub_236C356F8();
      sub_236C0ED40(v9, v10, (uint64_t *)v17);
      sub_236C363F4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_236BE1000, v5, v6, "Logging directory created. { adaptiveVolumeLogsPath=%{private}s }", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v8, -1, -1);
      MEMORY[0x23B800318](v7, -1, -1);
    }

  }
  else
  {
    v11 = v4;
    v12 = (void *)sub_236C35680();

    swift_willThrow();
    v13 = sub_236C35F44();
    v14 = sub_236C36334();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_236BE1000, v13, v14, "Unable to create adaptive volume logs filepath", v15, 2u);
      MEMORY[0x23B800318](v15, -1, -1);
    }

  }
  return v3;
}

uint64_t sub_236C21CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  v1 = sub_236C35884();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_streamOperation, v1);
  v5 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  if (v5 == *MEMORY[0x24BEDFFC8])
    return 0x73736572706D6F63;
  if (v5 == *MEMORY[0x24BEDFFC0])
    return 0x6572706D6F636564;
  v7 = sub_236C35F44();
  v8 = sub_236C36334();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_236BE1000, v7, v8, "Unknown filter operation encountered.", v9, 2u);
    MEMORY[0x23B800318](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return 0x6E776F6E6B6E75;
}

uint64_t sub_236C21E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  const char *v21;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  v30 = a1;
  v33 = *MEMORY[0x24BDAC8D0];
  v5 = sub_236C3574C();
  v6 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  v29 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_236C35728();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_236C35884();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BEDFFD8];
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEDFFC8], v12);
  sub_236BE6C98(&qword_256447E58, v13, MEMORY[0x24BEDFFE8]);
  sub_236C361F0();
  sub_236C361F0();
  v17 = v32;
  LODWORD(v13) = v31;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v12);
  if (v17 == (_DWORD)v13)
  {
    sub_236C23CC4();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_fileURL, v8);
    if (sub_236C2306C((uint64_t)v11))
    {
      v23 = swift_slowAlloc();
      v26 = swift_allocObject();
      *(_DWORD *)(v26 + 16) = 0;
      *(_DWORD *)(swift_allocObject() + 16) = 0;
      v24 = *(uint64_t **)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_streamPointer);
      *v24 = v23;
      v24[1] = 0x8000;
      __asm { BR              X10 }
    }
    v18 = sub_236C35F44();
    v19 = sub_236C36334();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      v21 = "Could not make file handle.";
LABEL_7:
      _os_log_impl(&dword_236BE1000, v18, v19, v21, v20, 2u);
      MEMORY[0x23B800318](v20, -1, -1);
    }
  }
  else
  {
    v18 = sub_236C35F44();
    v19 = sub_236C36334();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      v21 = "Must init stream with compression operation to compress data.";
      goto LABEL_7;
    }
  }

  return 0xFFFFFFFFLL;
}

void sub_236C228A4(const uint8_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int *a5@<X8>)
{
  int *v5;
  int *v8;
  compression_stream *v9;
  compression_status v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  size_t src_size;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  int v21;
  uint64_t v22;
  uint64_t v24[3];
  size_t v25;

  v5 = a5;
  if (a1)
  {
    v8 = (int *)(a3 + 16);
    v9 = *(compression_stream **)(a2 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_streamPointer);
    v9->src_ptr = a1;
    swift_beginAccess();
    v10 = compression_stream_process(v9, *(_DWORD *)(a4 + 16));
    swift_beginAccess();
    *(_DWORD *)(a3 + 16) = v10;
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    v11 = sub_236C35F44();
    v12 = sub_236C36328();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v24[0] = v22;
      *(_DWORD *)v13 = 67175427;
      swift_beginAccess();
      sub_236C363F4();
      swift_release();
      *(_WORD *)(v13 + 8) = 2081;
      v14 = sub_236C21CF4();
      sub_236C0ED40(v14, v15, v24);
      sub_236C363F4();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 18) = 1025;
      swift_beginAccess();
      v16 = *(_DWORD *)(a4 + 16);
      swift_release();
      LODWORD(v25) = v16;
      sub_236C363F4();
      swift_release();
      *(_WORD *)(v13 + 24) = 2049;
      src_size = v9->src_size;
      swift_release();
      v25 = src_size;
      sub_236C363F4();
      swift_release();
      _os_log_impl(&dword_236BE1000, v11, v12, "compression_stream_process. { status=%{private}d, operation=%{private}s, flags=%{private}d, streamPointer.pointee.src_size=%{private}ld }", (uint8_t *)v13, 0x22u);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v22, -1, -1);
      MEMORY[0x23B800318](v13, -1, -1);

    }
    else
    {
      swift_release();

      swift_release_n();
      swift_release_n();
    }
    swift_beginAccess();
    v21 = *v8;
    v5 = a5;
  }
  else
  {
    v18 = sub_236C35F44();
    v19 = sub_236C36334();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_236BE1000, v18, v19, "Could not get compression sourceData baseAddress.", v20, 2u);
      MEMORY[0x23B800318](v20, -1, -1);
    }

    v21 = -1;
  }
  *v5 = v21;
}

BOOL sub_236C22C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  BOOL v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  char v29;
  void *v30;
  void *v31;
  int v33;
  char *v34;
  char *v35;
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  v3 = v2;
  v45 = *MEMORY[0x24BDAC8D0];
  v6 = sub_236C3586C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v40 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2564479F8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_236C357DC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v39 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v38 - v15;
  v17 = sub_236C35728();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_serialNumber) == a1
     && *(_QWORD *)(v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_serialNumber + 8) == a2;
  if (!v21 && (sub_236C36658() & 1) == 0)
    return 1;
  v22 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v3 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_fileURL, v17);
  sub_236C356EC();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  v23 = (void *)sub_236C360D0();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v43 = 0;
  v24 = objc_msgSend(v22, sel_attributesOfItemAtPath_error_, v23, &v43);

  v25 = (id)v43;
  if (!v24)
  {
    v30 = v25;
    v31 = (void *)sub_236C35680();

    swift_willThrow();
    sub_236C357C4();
    goto LABEL_12;
  }
  type metadata accessor for FileAttributeKey(0);
  sub_236BE6C98(&qword_256447538, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_236C376BC);
  v26 = sub_236C3604C();

  sub_236C357C4();
  if (!v26)
  {
LABEL_12:
    v43 = 0u;
    v44 = 0u;
LABEL_13:
    sub_236BE6C14((uint64_t)&v43, &qword_256447738);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_14:
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
    sub_236BE6C14((uint64_t)v10, &qword_2564479F8);
    return 0;
  }
  if (*(_QWORD *)(v26 + 16))
  {
    v27 = (id)*MEMORY[0x24BDD0C58];
    v28 = sub_236C005D0((uint64_t)v27);
    if ((v29 & 1) != 0)
    {
      sub_236BED454(*(_QWORD *)(v26 + 56) + 32 * v28, (uint64_t)&v43);
    }
    else
    {
      v43 = 0u;
      v44 = 0u;
    }

  }
  else
  {
    v43 = 0u;
    v44 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v44 + 1))
    goto LABEL_13;
  v33 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, v33 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    goto LABEL_14;
  v34 = v39;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v39, v10, v11);
  v35 = v40;
  sub_236C35848();
  v36 = sub_236C3583C();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v42);
  v37 = *(void (**)(char *, uint64_t))(v12 + 8);
  v37(v34, v11);
  v37(v16, v11);
  return (v36 & 1) == 0;
}

id sub_236C2306C(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = (void *)sub_236C356C8();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForUpdatingURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = sub_236C35728();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_236C35680();

    swift_willThrow();
    v9 = sub_236C35728();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

void sub_236C23180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  NSObject *v20;
  uint64_t v21;
  uint8_t *v22;
  void *v23;
  unsigned __int8 v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  os_log_type_t v30;
  uint8_t *v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  id v37[2];

  v1 = v0;
  v37[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_236C35728();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_236C35884();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEDFFD8];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEDFFC8], v6);
  sub_236BE6C98(&qword_256447E58, v7, MEMORY[0x24BEDFFE8]);
  sub_236C361F0();
  sub_236C361F0();
  v11 = (int)v37[0];
  LODWORD(v7) = v36;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
  if (v11 == (_DWORD)v7)
  {
    v12 = sub_236C2363C(0, 0xE000000000000000);
    v14 = v13;
    do
      v15 = sub_236C21E7C(v12, v14);
    while (!v15);
    if (v15 == -1)
    {
      v16 = sub_236C35F44();
      v17 = sub_236C36334();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_236BE1000, v16, v17, "Error ending compression stream.", v18, 2u);
        MEMORY[0x23B800318](v18, -1, -1);
      }

    }
    sub_236BF9E3C(v12, v14);
  }
  sub_236C23CC4();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14AVCompressFile_fileURL, v2);
  v19 = sub_236C2306C((uint64_t)v5);
  v23 = v19;
  if (v19)
  {
    v37[0] = 0;
    v24 = objc_msgSend(v19, sel_closeAndReturnError_, v37);

    if ((v24 & 1) != 0)
    {
      v25 = v37[0];
      return;
    }
    v35[1] = v37[0];
    v26 = v37[0];
    v27 = (void *)sub_236C35680();

    swift_willThrow();
    v28 = v27;
    v29 = v27;
    v20 = sub_236C35F44();
    v30 = sub_236C36334();
    if (!os_log_type_enabled(v20, v30))
    {

      return;
    }
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = (void *)swift_slowAlloc();
    v37[0] = v32;
    *(_DWORD *)v31 = 136380675;
    swift_getErrorValue();
    v33 = sub_236C36688();
    v36 = sub_236C0ED40(v33, v34, (uint64_t *)v37);
    sub_236C363F4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_236BE1000, v20, v30, "Couldn't close file handle. { error=%{private}s }", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B800318](v32, -1, -1);
    MEMORY[0x23B800318](v31, -1, -1);

  }
  else
  {
    v20 = sub_236C35F44();
    v21 = sub_236C36334();
    if (os_log_type_enabled(v20, (os_log_type_t)v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_236BE1000, v20, (os_log_type_t)v21, "Could not make file handle.", v22, 2u);
      MEMORY[0x23B800318](v22, -1, -1);
    }
  }

}

uint64_t sub_236C2363C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  _BYTE *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447E68);
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_236BE6C14((uint64_t)v14, &qword_256447E70);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_236C364E4();
      }
      if (v2)
        v4 = (_BYTE *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_BYTE *)v2;
    }
    v6 = sub_236C2442C(v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_236C3619C();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = sub_236C24490(v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x24BDAC7A8](*(_QWORD *)&v14[0]);
    sub_236C23D78();
    __asm { BR              X12 }
  }
  sub_236BF28D8(v14, (uint64_t)v17);
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  sub_236C35674();
  swift_bridgeObjectRelease();
  v14[0] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

uint64_t sub_236C23B40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v8;

  v2 = sub_236C3589C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x24BEE0008])
    return 0x6573667A6CLL;
  if (v6 == *MEMORY[0x24BEE0000])
    return 1651076218;
  if (v6 == *MEMORY[0x24BEDFFF0])
    return 3439212;
  if (v6 == *MEMORY[0x24BEDFFF8])
    return 1634564716;
  if (v6 == *MEMORY[0x24BEE0018])
    return 0x70616D7469627A6CLL;
  if (v6 == *MEMORY[0x24BEE0010])
    return 0x696C746F7262;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0;
}

unint64_t sub_236C23CC4()
{
  unint64_t result;

  result = qword_256447E60;
  if (!qword_256447E60)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256447E60);
  }
  return result;
}

uint64_t sub_236C23D00(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_236C361CC();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x23B7FF640](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

void sub_236C23D78()
{
  __asm { BR              X11 }
}

_QWORD *sub_236C23DD8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

_BYTE *sub_236C24068@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_236C24274(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_236C24334((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_236C243AC((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

_QWORD *sub_236C240DC(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a3)
  {
    result = a1(&v6, a3, a4 - a3);
    if (v4)
      return result;
    return (_QWORD *)v6;
  }
  result = a1(&v6, 0, 0);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

char *sub_236C24140(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_236C35638();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_236C3565C();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_236C35650();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

uint64_t sub_236C241EC@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  char v3;
  uint64_t v4;

  if (result)
  {
    swift_bridgeObjectRetain();
    result = sub_236C364CC();
    if ((v3 & 1) == 0)
    {
      v4 = result;
      result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_236C24274(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_236C24334(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_236C35668();
  swift_allocObject();
  result = sub_236C3562C();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_236C35758();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_236C243AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_236C35668();
  swift_allocObject();
  result = sub_236C3562C();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

_BYTE *sub_236C2442C(_BYTE *result, _BYTE *a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (_BYTE *)sub_236C24274(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (_BYTE *)sub_236C24334((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (_BYTE *)sub_236C243AC((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_236C24490(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_236C35668();
      swift_allocObject();
      sub_236C35644();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_236C35758();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

_QWORD *sub_236C2452C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  _QWORD v13[2];

  v5 = *(uint64_t **)(v3 + 16);
  v7 = *v5;
  v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  result = sub_236C240DC((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_236C24588, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_236C24588@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_236C241EC(a1, a2);
}

uint64_t sub_236C245A4()
{
  return swift_deallocObject();
}

uint64_t sub_236C245B4(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;

  if (!a2)
  {
    swift_release();
    return 0;
  }
  if (a2 > 14)
  {
    if ((unint64_t)a2 < 0x7FFFFFFF)
      return a2 << 32;
    sub_236C35758();
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = 0;
    *(_QWORD *)(v3 + 24) = a2;
    return v3;
  }
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v4 = (_BYTE *)sub_236C35638();
    if (!v4)
    {
LABEL_10:
      v5 = sub_236C35650();
      if (v5 >= a2)
        v6 = a2;
      else
        v6 = v5;
      v7 = &v4[v6];
      if (v4)
        v8 = v7;
      else
        v8 = 0;
      v3 = sub_236C24274(v4, v8);
      swift_release();
      return v3;
    }
    result = sub_236C3565C();
    if (!__OFSUB__(0, result))
    {
      v4 -= result;
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

void sub_236C24698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  const uint8_t *v11;
  uint64_t v12;
  int v13;

  v11 = (const uint8_t *)sub_236C35638();
  if (v11)
  {
    v12 = sub_236C3565C();
    if (__OFSUB__(a1, v12))
      goto LABEL_7;
    v11 += a1 - v12;
  }
  if (!__OFSUB__(a2, a1))
  {
    sub_236C35650();
    sub_236C228A4(v11, a4, a5, a6, &v13);
    return;
  }
  __break(1u);
LABEL_7:
  __break(1u);
}

uint64_t sub_236C24758(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_236C2479C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_236BECFF4((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_236C0A85C(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_236BE6C14(a1, &qword_256447738);
    sub_236C25A3C(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_236BE6C14((uint64_t)v9, &qword_256447738);
  }
}

uint64_t sub_236C24870(uint64_t a1, __int16 a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2564479F8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_236C357DC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_236BE6C14(a1, &qword_2564479F8);
    v13 = sub_236BE3E64(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_236C13DEC();
        v17 = v22;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, v9);
      sub_236C25F14(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_236BE6C14((uint64_t)v8, &qword_2564479F8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_236C0A98C((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_236C24A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_236C3592C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_236BE6C14(a1, &qword_2542B1640);
    sub_236C25B2C(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_236BE6C14((uint64_t)v10, &qword_2542B1640);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_236C0AAB0((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_236C24BBC(uint64_t a1, void *a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  _OWORD v7[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_236BECFF4((_OWORD *)a1, v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_236BF2110(v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_236BE6C14(a1, &qword_256447738);
    sub_236C25C5C((uint64_t)a2, v7);

    return sub_236BE6C14((uint64_t)v7, &qword_256447738);
  }
}

_QWORD *RTCWorker.__allocating_init(with:)(_QWORD *a1)
{
  swift_allocObject();
  return RTCWorker.init(with:)(a1);
}

uint64_t sub_236C24CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;

  sub_236C35920();
  v7 = sub_236C36130();
  v9 = v8;
  v10 = (uint64_t *)(a4 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_summaryEvents);
  swift_beginAccess();
  v11 = *v10;
  v12 = *(_QWORD *)(*v10 + 16);
  swift_bridgeObjectRetain_n();
  if (v12 && (v13 = sub_236BEE010(a1, a2), (v14 & 1) != 0))
  {
    v15 = *(_QWORD **)(*(_QWORD *)(v11 + 56) + 8 * v13);
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  v16 = sub_236C24E24(v7, v9, v15, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19 = *v10;
  *v10 = 0x8000000000000000;
  sub_236C0ABEC(v16, a1, a2, isUniquelyReferenced_nonNull_native);
  *v10 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_236C24E24(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v29;
  uint64_t v30;

  v10 = sub_236C35DF4();
  v11 = sub_236C15C0C(a4, a5, v10);
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {
    if ((sub_236BFA194(a1, a2, a3) & 1) != 0)
    {
      swift_bridgeObjectRetain();
      return (uint64_t)a3;
    }
    v15 = swift_bridgeObjectRetain();
    v16 = sub_236BFE398(v15);
    swift_bridgeObjectRelease();
    v30 = v16;
    swift_bridgeObjectRetain();
    sub_236BEDE64((uint64_t *)&v29, a1, a2);
    swift_bridgeObjectRelease();
    v17 = sub_236C35E00();
    LOBYTE(v16) = sub_236C15C0C(a4, a5, v17);
    swift_bridgeObjectRelease();
    v18 = v30;
    if ((v16 & 1) != 0 || (v19 = *(_QWORD *)(v30 + 16), sub_236C35DD0() >= v19))
    {
      v26 = swift_bridgeObjectRetain();
      v27 = sub_236C09BF0(v26);
      swift_bridgeObjectRelease();
      v29 = v27;
      sub_236C14384((uint64_t *)&v29);
      swift_bridgeObjectRelease();
      return (uint64_t)v29;
    }
    v20 = swift_bridgeObjectRetain();
    v21 = sub_236C09BF0(v20);
    swift_bridgeObjectRelease();
    v29 = v21;
    sub_236C14384((uint64_t *)&v29);
    swift_bridgeObjectRelease();
    v22 = (uint64_t)v29;
    v23 = sub_236C35DD0();
    if ((v23 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v18 = v23;
      if (*(_QWORD *)(v22 + 16) >= v23)
      {
        sub_236C36664();
        swift_unknownObjectRetain_n();
        v24 = swift_dynamicCastClass();
        if (!v24)
        {
          swift_release();
          v24 = MEMORY[0x24BEE4AF8];
        }
        v25 = *(_QWORD *)(v24 + 16);
        swift_release();
        if (v25 == v18)
        {
          a3 = (_QWORD *)swift_dynamicCastClass();
          if (!a3)
          {
            swift_release();
            a3 = (_QWORD *)MEMORY[0x24BEE4AF8];
          }
          goto LABEL_18;
        }
LABEL_23:
        swift_release();
        a3 = (_QWORD *)sub_236C09CD4(v22, v22 + 32, 0, (2 * v18) | 1);
LABEL_18:
        swift_release();
        return (uint64_t)a3;
      }
    }
    __break(1u);
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a3 = sub_236C1BECC(0, a3[2] + 1, 1, a3);
  v13 = a3[2];
  v12 = a3[3];
  if (v13 >= v12 >> 1)
    a3 = sub_236C1BECC((_QWORD *)(v12 > 1), v13 + 1, 1, a3);
  a3[2] = v13 + 1;
  v14 = &a3[2 * v13];
  v14[4] = a1;
  v14[5] = a2;
  return (uint64_t)a3;
}

Swift::Void __swiftcall RTCWorker.stop()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _BYTE *v12;
  void *v13;
  _QWORD *v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B14F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_236C35DB8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (_BYTE *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_isStarted);
  swift_beginAccess();
  if (*v12 == 1 && (v13 = *(void **)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcReporting)) != 0)
  {
    v25 = v5;
    v14 = (_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session), *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session + 24));
    v15 = v13;
    if ((sub_236C35AE8() & 1) == 0)
    {
      v16 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_summaryEvents;
      swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)v16 + 16))
      {
        v17 = swift_bridgeObjectRetain();
        sub_236C268A8(v17, (void (*)(uint64_t, uint64_t, uint64_t))sub_236C26EFC);
        swift_bridgeObjectRelease();
        __swift_project_boxed_opaque_existential_1(v14, v14[3]);
        *v11 = (unsigned __int16)sub_236C35B00();
        v18 = *MEMORY[0x24BE09AB8];
        v19 = sub_236C3592C();
        v20 = *(_QWORD *)(v19 - 8);
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v20 + 104))(v11, v18, v19);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v11, 0, 1, v19);
        swift_beginAccess();
        sub_236C24A48((uint64_t)v11, 0xD000000000000018, 0x8000000236C3B2C0);
        swift_endAccess();
        v21 = sub_236C35D58();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 1, 1, v21);
        swift_bridgeObjectRetain();
        sub_236C35D64();
        sub_236BE7738((uint64_t)v8);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v25);
      }
    }
    -[NSObject flushMessages](v15, sel_flushMessages);
  }
  else
  {
    swift_retain();
    v15 = sub_236C35F44();
    v22 = sub_236C36328();
    if (os_log_type_enabled(v15, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v23 = 134217984;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session), *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session + 24));
      v26 = sub_236C35AF4();
      sub_236C363F4();
      swift_release();
      _os_log_impl(&dword_236BE1000, v15, v22, "RTC worker not started, skipping stop. { reporterID=%lld }", v23, 0xCu);
      MEMORY[0x23B800318](v23, -1, -1);
    }
    else
    {
      swift_release();
    }
  }

  sub_236BE4B3C();
}

uint64_t sub_236C254E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (_QWORD *)((char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14[1] = a3;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FD0);
  sub_236BED514();
  *v8 = sub_236C360B8();
  v8[1] = v9;
  v10 = *MEMORY[0x24BE09AD0];
  v11 = sub_236C3592C();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 104))(v8, v10, v11);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  swift_beginAccess();
  sub_236C24A48((uint64_t)v8, a1, a2);
  return swift_endAccess();
}

uint64_t sub_236C25620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker____lazy_storage___timeFuzzer;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker____lazy_storage___timeFuzzer + 25) & 1) == 0)
    return *(_QWORD *)v1;
  result = 0;
  *(_OWORD *)v1 = xmmword_236C38690;
  *(_QWORD *)(v1 + 16) = 0;
  *(_WORD *)(v1 + 24) = 1;
  return result;
}

uint64_t sub_236C25684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  _BYTE v6[32];

  v4 = (void *)sub_236C360D0();
  sub_236BED454(a3, (uint64_t)v6);
  return sub_236C24BBC((uint64_t)v6, v4);
}

uint64_t RTCWorker.workerConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_workerConfig;
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RTCWorker.isStarted.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_isStarted);
  swift_beginAccess();
  return *v1;
}

uint64_t RTCWorker.summaryEvent.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t RTCWorker.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_workerConfig;
  v2 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session);
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_logger;
  v4 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcConfig;
  v6 = sub_236C35E0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t RTCWorker.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_workerConfig;
  v2 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_session);
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_logger;
  v4 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_rtcConfig;
  v6 = sub_236C35E0C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_236C25978()
{
  RTCWorker.stop()();
}

uint64_t sub_236C25998()
{
  _QWORD *v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal9RTCWorker_isStarted);
  swift_beginAccess();
  return *v1;
}

double sub_236C259E0(uint64_t a1)
{
  _BYTE *v1;
  double v2;
  double result;

  if ((v1[8] & 1) == 0)
    return *(double *)v1;
  sub_236C0737C(a1, 0.0, 120000.0);
  result = v2 / -1000.0 + 60.0;
  *(double *)v1 = result;
  v1[8] = 0;
  return result;
}

double sub_236C25A3C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_236BEE010(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_236C13C08();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_236BECFF4((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_236C25D40(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_236C25B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_236BEE010(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_236BEE20C();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = sub_236C3592C();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a3, v12 + *(_QWORD *)(v14 + 72) * v8, v13);
    sub_236C260F4(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = sub_236C3592C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

double sub_236C25C5C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_236BEBFFC(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_236C1400C();
      v9 = v11;
    }

    sub_236BECFF4((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_236C262F0(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

unint64_t sub_236C25D40(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_236C36454();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_236C366A0();
        swift_bridgeObjectRetain();
        sub_236C36154();
        v10 = sub_236C366C4();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_236C25F14(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _WORD *v11;
  _WORD *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_236C36454();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_236C366A0();
        sub_236C366B8();
        result = sub_236C366C4();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v9 < v8)
          goto LABEL_11;
LABEL_12:
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_WORD *)(v10 + 2 * v3);
        v12 = (_WORD *)(v10 + 2 * v6);
        if (v3 != v6 || v11 >= v12 + 1)
          *v11 = *v12;
        v13 = *(_QWORD *)(a2 + 56);
        v14 = *(_QWORD *)(*(_QWORD *)(sub_236C357DC() - 8) + 72);
        v15 = v14 * v3;
        result = v13 + v14 * v3;
        v16 = v14 * v6;
        v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v15 == v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v9 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v9)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_236C260F4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_236C36454();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_236C366A0();
        swift_bridgeObjectRetain();
        sub_236C36154();
        v9 = sub_236C366C4();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(sub_236C3592C() - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_236C262F0(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_236C36454();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v11 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = sub_236C363C4();

        v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= (uint64_t)v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(a2 + 48);
            v17 = (_QWORD *)(v16 + 8 * v3);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1)
              *v17 = *v18;
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v10 = v21[1];
              *v20 = *v21;
              v20[1] = v10;
              v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= (uint64_t)v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_236C264A0(uint64_t a1, void (*a2)(uint64_t, uint64_t, char *))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, char *);

  v28 = a2;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FA0);
  MEMORY[0x24BDAC7A8](v27);
  v4 = (uint64_t *)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v26 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26)
      return swift_release();
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v26)
        return swift_release();
      v22 = *(_QWORD *)(v25 + 8 * v10);
      if (!v22)
      {
        v10 = v21 + 2;
        if (v21 + 2 >= v26)
          return swift_release();
        v22 = *(_QWORD *)(v25 + 8 * v10);
        if (!v22)
        {
          v10 = v21 + 3;
          if (v21 + 3 >= v26)
            return swift_release();
          v22 = *(_QWORD *)(v25 + 8 * v10);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v22 - 1) & v22;
    v12 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_5:
    v13 = *(_QWORD *)(a1 + 56);
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v15 = *v14;
    v16 = v14[1];
    v17 = sub_236C3592C();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = v13 + *(_QWORD *)(v18 + 72) * v12;
    v20 = (char *)v4 + *(int *)(v27 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v19, v17);
    *v4 = v15;
    v4[1] = v16;
    swift_bridgeObjectRetain();
    v28(v15, v16, v20);
    result = sub_236BE6C14((uint64_t)v4, &qword_2542B2FA0);
  }
  v23 = v21 + 4;
  if (v23 >= v26)
    return swift_release();
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v26)
      return swift_release();
    v22 = *(_QWORD *)(v25 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_236C266E4(uint64_t a1, void (*a2)(uint64_t, uint64_t, _BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD v18[2];
  _BYTE v19[32];
  uint64_t v20;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v20 + 8 * v15);
    ++v9;
    if (!v16)
    {
      v9 = v15 + 1;
      if (v15 + 1 >= v7)
        return swift_release();
      v16 = *(_QWORD *)(v20 + 8 * v9);
      if (!v16)
      {
        v9 = v15 + 2;
        if (v15 + 2 >= v7)
          return swift_release();
        v16 = *(_QWORD *)(v20 + 8 * v9);
        if (!v16)
        {
          v9 = v15 + 3;
          if (v15 + 3 >= v7)
            return swift_release();
          v16 = *(_QWORD *)(v20 + 8 * v9);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v13 = *v12;
    v14 = v12[1];
    sub_236BED454(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v19);
    v18[0] = v13;
    v18[1] = v14;
    swift_bridgeObjectRetain();
    a2(v13, v14, v19);
    result = sub_236BE6C14((uint64_t)v18, &qword_2542B2FB0);
  }
  v17 = v15 + 4;
  if (v17 >= v7)
    return swift_release();
  v16 = *(_QWORD *)(v20 + 8 * v17);
  if (v16)
  {
    v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v9 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v20 + 8 * v9);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_236C268A8(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8)
      return swift_release();
    v18 = *(_QWORD *)(v4 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v8)
        return swift_release();
      v18 = *(_QWORD *)(v4 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v8)
          return swift_release();
        v18 = *(_QWORD *)(v4 + 8 * v10);
        if (!v18)
        {
          v10 = v17 + 3;
          if (v17 + 3 >= v8)
            return swift_release();
          v18 = *(_QWORD *)(v4 + 8 * v10);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v18 - 1) & v18;
    v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_5:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v14 = *v13;
    v15 = v13[1];
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v14, v15, v16);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v19 = v17 + 4;
  if (v19 >= v8)
    return swift_release();
  v18 = *(_QWORD *)(v4 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v18 = *(_QWORD *)(v4 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_236C26A40(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int64_t v41;

  v29 = a2;
  v30 = a1;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FA0);
  MEMORY[0x24BDAC7A8](v38);
  v34 = (uint64_t *)((char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_236C3592C();
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  result = MEMORY[0x24BDAC7A8](v5);
  v35 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = 0;
  v39 = (_QWORD *)a3;
  v9 = *(_QWORD *)(a3 + 64);
  v31 = 0;
  v32 = a3 + 64;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v33 = (unint64_t)(v10 + 63) >> 6;
  v14 = v35;
  v13 = v36;
  v15 = v37;
  v16 = v34;
  while (1)
  {
    if (v12)
    {
      v40 = (v12 - 1) & v12;
      v41 = v8;
      v17 = __clz(__rbit64(v12)) | (v8 << 6);
      goto LABEL_5;
    }
    v23 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v23 >= v33)
      return sub_236C333D4(v30, v29, v31, v39);
    v24 = *(_QWORD *)(v32 + 8 * v23);
    v25 = v8 + 1;
    if (!v24)
    {
      v25 = v8 + 2;
      if (v8 + 2 >= v33)
        return sub_236C333D4(v30, v29, v31, v39);
      v24 = *(_QWORD *)(v32 + 8 * v25);
      if (!v24)
      {
        v25 = v8 + 3;
        if (v8 + 3 >= v33)
          return sub_236C333D4(v30, v29, v31, v39);
        v24 = *(_QWORD *)(v32 + 8 * v25);
        if (!v24)
          break;
      }
    }
LABEL_20:
    v40 = (v24 - 1) & v24;
    v41 = v25;
    v17 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_5:
    v18 = (uint64_t *)(v39[6] + 16 * v17);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
    v21(v14, v39[7] + *(_QWORD *)(v13 + 72) * v17, v15);
    *v16 = v20;
    v16[1] = v19;
    v21((char *)v16 + *(int *)(v38 + 48), (unint64_t)v14, v15);
    swift_bridgeObjectRetain_n();
    v22 = sub_236C35DE8();
    LOBYTE(v20) = sub_236C15C0C(v20, v19, v22);
    swift_bridgeObjectRelease();
    sub_236BE6C14((uint64_t)v16, &qword_2542B2FA0);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v15);
    result = swift_bridgeObjectRelease();
    v8 = v41;
    v12 = v40;
    if ((v20 & 1) == 0)
    {
      *(unint64_t *)((char *)v30 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      if (__OFADD__(v31++, 1))
      {
        __break(1u);
        return sub_236C333D4(v30, v29, v31, v39);
      }
    }
  }
  v26 = v8 + 4;
  if (v8 + 4 >= v33)
    return sub_236C333D4(v30, v29, v31, v39);
  v24 = *(_QWORD *)(v32 + 8 * v26);
  if (v24)
  {
    v25 = v8 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v25 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v25 >= v33)
      return sub_236C333D4(v30, v29, v31, v39);
    v24 = *(_QWORD *)(v32 + 8 * v25);
    ++v26;
    if (v24)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_236C26D40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  unsigned int v5;
  unint64_t v6;
  size_t v7;
  uint64_t isStackAllocationSafe;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v2 = v1;
  v12[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a1 + 32);
  v5 = v4 & 0x3F;
  v6 = (unint64_t)((1 << v4) + 63) >> 6;
  v7 = 8 * v6;
  isStackAllocationSafe = swift_retain_n();
  if (v5 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    swift_retain();
    v9 = sub_236C26A40((_QWORD *)((char *)v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, a1);
    swift_release();
    if (v2)
      swift_willThrow();
    swift_release_n();
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v7);
    swift_retain();
    v9 = sub_236C26A40((unint64_t *)v10, v6, a1);
    swift_release();
    MEMORY[0x23B800318](v10, -1, -1);
    swift_release_n();
  }
  return v9;
}

uint64_t sub_236C26EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_236C24CAC(a1, a2, a3, v3);
}

uint64_t sub_236C26EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236C254E4(a1, a2, a3);
}

unint64_t sub_236C26F08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542B2E80;
  if (!qword_2542B2E80)
  {
    v1 = type metadata accessor for RTCWorker();
    result = MEMORY[0x23B80027C](&protocol conformance descriptor for RTCWorker, v1);
    atomic_store(result, (unint64_t *)&qword_2542B2E80);
  }
  return result;
}

uint64_t type metadata accessor for RTCWorker()
{
  uint64_t result;

  result = qword_2542B2E88;
  if (!qword_2542B2E88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236C26F8C()
{
  return type metadata accessor for RTCWorker();
}

uint64_t sub_236C26F94()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_236C35CB0();
  if (v1 <= 0x3F)
  {
    result = sub_236C35F50();
    if (v2 <= 0x3F)
    {
      result = sub_236C35E0C();
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for RTCWorker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RTCWorker.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for TimeFuzzer(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TimeFuzzer(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TimeFuzzer()
{
  return &type metadata for TimeFuzzer;
}

uint64_t sub_236C27104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_236C25684(a1, a2, a3);
}

void sub_236C2710C(char a1)
{
  sub_236C366A0();
  __asm { BR              X10 }
}

uint64_t sub_236C27160()
{
  sub_236C36154();
  swift_bridgeObjectRelease();
  return sub_236C366C4();
}

void sub_236C27228(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_236C2726C()
{
  sub_236C36154();
  return swift_bridgeObjectRelease();
}

void sub_236C27320(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_236C27360()
{
  sub_236C36154();
  return swift_bridgeObjectRelease();
}

void sub_236C27414(uint64_t a1, char a2)
{
  sub_236C366A0();
  __asm { BR              X10 }
}

uint64_t sub_236C27460()
{
  sub_236C36154();
  swift_bridgeObjectRelease();
  return sub_236C366C4();
}

void sub_236C27528(uint64_t a1, char a2)
{
  sub_236C366A0();
  __asm { BR              X10 }
}

uint64_t sub_236C27578()
{
  sub_236C36154();
  swift_bridgeObjectRelease();
  return sub_236C366C4();
}

uint64_t sub_236C27640(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_236BF2240(0, v1, 0);
    v2 = v14;
    v4 = *(_QWORD *)(sub_236C35C98() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_236C35C8C();
      v9 = v8;
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_236BF2240(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t SessionSummaryWorker.__allocating_init(with:)(_QWORD *a1)
{
  swift_allocObject();
  return SessionSummaryWorker.init(with:)(a1);
}

Swift::Bool __swiftcall SessionSummaryWorker.start()()
{
  uint64_t v0;

  swift_beginAccess();
  *(_BYTE *)(v0 + 16) = 1;
  return 1;
}

uint64_t sub_236C277B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  unsigned int (*v27)(uint64_t *, uint64_t, uint64_t);
  uint64_t result;
  unsigned int (*v29)(uint64_t *, uint64_t);
  uint64_t v30;
  unint64_t v31;
  char v32;
  void (*v33)(unsigned int (*)(uint64_t *, uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  void (*v59)(unsigned int (*)(uint64_t *, uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t (*v60)(uint64_t *, uint64_t);
  unsigned int (*v61)(uint64_t *, uint64_t);
  char *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v62 = (char *)&v57 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (uint64_t *)((char *)&v57 - v9);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (unsigned int (*)(uint64_t *, uint64_t))((char *)&v57 - v12);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (uint64_t *)((char *)&v57 - v14);
  v16 = sub_236C35D10();
  if (*(_QWORD *)(v16 + 16) && (v17 = sub_236BEE010(0x656C6379635F6F69, 0xE800000000000000), (v18 & 1) != 0))
  {
    v19 = v17;
    v20 = *(_QWORD *)(v16 + 56);
    v21 = sub_236C3592C();
    v61 = v13;
    v22 = v5;
    v23 = v1;
    v24 = *(_QWORD *)(v21 - 8);
    (*(void (**)(uint64_t *, unint64_t, uint64_t))(v24 + 16))(v15, v20 + *(_QWORD *)(v24 + 72) * v19, v21);
    v25 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v24 + 56);
    v1 = v23;
    v5 = v22;
    v13 = v61;
    v25(v15, 0, 1, v21);
  }
  else
  {
    v21 = sub_236C3592C();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v15, 1, 1, v21);
  }
  swift_bridgeObjectRelease();
  sub_236C3592C();
  v26 = *(_QWORD *)(v21 - 8);
  v27 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v26 + 48);
  if (v27(v15, 1, v21) == 1)
    return sub_236BE9274((uint64_t)v15);
  v29 = *(unsigned int (**)(uint64_t *, uint64_t))(v26 + 88);
  if (v29(v15, v21) != *MEMORY[0x24BE09AA8])
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v26 + 8))(v15, v21);
  v60 = *(uint64_t (**)(uint64_t *, uint64_t))(v26 + 96);
  v61 = v29;
  result = v60(v15, v21);
  if (*v15 < 3)
    return result;
  v30 = sub_236C35D10();
  if (*(_QWORD *)(v30 + 16) && (v31 = sub_236BEE010(0xD000000000000015, 0x8000000236C397E0), (v32 & 1) != 0))
  {
    (*(void (**)(unsigned int (*)(uint64_t *, uint64_t), unint64_t, uint64_t))(v26 + 16))(v13, *(_QWORD *)(v30 + 56) + *(_QWORD *)(v26 + 72) * v31, v21);
    v33 = *(void (**)(unsigned int (*)(uint64_t *, uint64_t), uint64_t, uint64_t, uint64_t))(v26 + 56);
    v33(v13, 0, 1, v21);
  }
  else
  {
    v33 = *(void (**)(unsigned int (*)(uint64_t *, uint64_t), uint64_t, uint64_t, uint64_t))(v26 + 56);
    v33(v13, 1, 1, v21);
  }
  swift_bridgeObjectRelease();
  if (v27((uint64_t *)v13, 1, v21) == 1)
  {
    sub_236BE9274((uint64_t)v13);
  }
  else if (v61((uint64_t *)v13, v21) == *MEMORY[0x24BE09AD0])
  {
    v58 = v10;
    v59 = v33;
    v60((uint64_t *)v13, v21);
    v34 = *(_QWORD *)v13;
    v35 = *((_QWORD *)v13 + 1);
    v36 = v34;
    v65 = v34;
    v66 = v35;
    v63 = 0x676E696B776148;
    v64 = 0xE700000000000000;
    sub_236BED490();
    if ((sub_236C3643C() & 1) != 0)
      return swift_bridgeObjectRelease();
    v65 = v36;
    v66 = v35;
    v63 = 5263169;
    v64 = 0xE300000000000000;
    v37 = sub_236C3643C();
    result = swift_bridgeObjectRelease();
    v10 = v58;
    v33 = v59;
    if ((v37 & 1) != 0)
      return result;
  }
  else
  {
    (*(void (**)(unsigned int (*)(uint64_t *, uint64_t), uint64_t))(v26 + 8))(v13, v21);
  }
  v38 = sub_236C35D10();
  if (*(_QWORD *)(v38 + 16) && (v39 = sub_236BEE010(0xD000000000000016, 0x8000000236C39800), (v40 & 1) != 0))
  {
    (*(void (**)(_QWORD *, unint64_t, uint64_t))(v26 + 16))(v10, *(_QWORD *)(v38 + 56) + *(_QWORD *)(v26 + 72) * v39, v21);
    v41 = 0;
  }
  else
  {
    v41 = 1;
  }
  v33((unsigned int (*)(uint64_t *, uint64_t))v10, v41, 1, v21);
  swift_bridgeObjectRelease();
  if (v27(v10, 1, v21) != 1)
  {
    if (v61(v10, v21) != *MEMORY[0x24BE09AD0])
    {
      (*(void (**)(_QWORD *, uint64_t))(v26 + 8))(v10, v21);
      goto LABEL_32;
    }
    v59 = v33;
    v60(v10, v21);
    v43 = *v10;
    v42 = v10[1];
    v65 = v43;
    v66 = v42;
    v63 = 0x726F746175746341;
    v64 = 0xE800000000000000;
    sub_236BED490();
    if ((sub_236C3643C() & 1) == 0)
    {
      v65 = v43;
      v66 = v42;
      v63 = 0x6E65676F6C6148;
      v64 = 0xE700000000000000;
      v44 = sub_236C3643C();
      result = swift_bridgeObjectRelease();
      v33 = v59;
      if ((v44 & 1) != 0)
        return result;
      goto LABEL_32;
    }
    return swift_bridgeObjectRelease();
  }
  sub_236BE9274((uint64_t)v10);
LABEL_32:
  v45 = sub_236C35D10();
  if (*(_QWORD *)(v45 + 16))
  {
    v46 = sub_236BEE010(0x61776572705F7369, 0xED0000676E696D72);
    v47 = v62;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v26 + 16))(v62, *(_QWORD *)(v45 + 56) + *(_QWORD *)(v26 + 72) * v46, v21);
      v49 = 0;
    }
    else
    {
      v49 = 1;
    }
  }
  else
  {
    v49 = 1;
    v47 = v62;
  }
  v33((unsigned int (*)(uint64_t *, uint64_t))v47, v49, 1, v21);
  swift_bridgeObjectRelease();
  if (v27((uint64_t *)v47, 1, v21) == 1)
  {
    sub_236BE9274((uint64_t)v47);
  }
  else if (v61((uint64_t *)v47, v21) == *MEMORY[0x24BE09AB0])
  {
    result = v60((uint64_t *)v47, v21);
    if ((*v47 & 1) != 0)
      return result;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v47, v21);
  }
  v50 = sub_236C35D10();
  if (*(_QWORD *)(v50 + 16) && (v51 = sub_236BEE010(0x766F6365725F7369, 0xED0000676E697265), (v52 & 1) != 0))
  {
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v26 + 16))(v5, *(_QWORD *)(v50 + 56) + *(_QWORD *)(v26 + 72) * v51, v21);
    v53 = 0;
  }
  else
  {
    v53 = 1;
  }
  v33((unsigned int (*)(uint64_t *, uint64_t))v5, v53, 1, v21);
  swift_bridgeObjectRelease();
  if (v27((uint64_t *)v5, 1, v21) == 1)
  {
    result = sub_236BE9274((uint64_t)v5);
  }
  else if (v61((uint64_t *)v5, v21) == *MEMORY[0x24BE09AB0])
  {
    result = v60((uint64_t *)v5, v21);
    if ((*v5 & 1) != 0)
      return result;
  }
  else
  {
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v26 + 8))(v5, v21);
  }
  v54 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_audibleOverloadCount);
  v55 = __CFADD__(v54, 1);
  v56 = v54 + 1;
  if (v55)
    __break(1u);
  else
    *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_audibleOverloadCount) = v56;
  return result;
}

uint64_t SessionSummaryWorker.SessionSummaryKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_236C27F5C + 4 * byte_236C387F0[*v0]))(0x79745F6575737369, 0xEA00000000006570);
}

uint64_t sub_236C27F5C()
{
  return 0x656C6379635F6F69;
}

uint64_t sub_236C27F74()
{
  return 0x61776572705F7369;
}

uint64_t sub_236C27F98()
{
  return 0x766F6365725F7369;
}

unint64_t sub_236C27FC0()
{
  return 0xD000000000000015;
}

unint64_t sub_236C27FDC()
{
  return 0xD000000000000016;
}

Swift::Void __swiftcall SessionSummaryWorker.stop()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  double v19;
  unint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t inited;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  BOOL v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  uint8_t *v36;
  void (*v37)(char *, _QWORD, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(uint64_t *, _QWORD);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint8_t *v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90[92];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B14F0);
  MEMORY[0x24BDAC7A8](v2);
  v87 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_236C35DB8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v74 - v9;
  v11 = sub_236C35C98();
  v88 = *(uint8_t **)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v74 - v15;
  swift_beginAccess();
  *(_BYTE *)(v1 + 16) = 0;
  v17 = OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_totalMessageCount;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_totalMessageCount))
  {
    v75 = v8;
    v76 = v5;
    v77 = v10;
    v78 = v4;
    v89 = OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_activeCount;
    v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_activeCount);
    v85 = v14;
    if (v18)
      v19 = *(double *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_totalActiveTime)
          / (double)v18;
    else
      v19 = 0.0;
    v21 = (_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_session);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_session), *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_session + 24));
    sub_236C35B00();
    sub_236C35E84();
    v22 = sub_236C3613C();
    v84 = v23;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1548);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_236C389E0;
    *(_QWORD *)(inited + 32) = 0xD000000000000011;
    *(_QWORD *)(inited + 40) = 0x8000000236C3B3F0;
    v25 = OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_totalActiveTime;
    v26 = MEMORY[0x24BEE13C8];
    *(_QWORD *)(inited + 48) = *(_QWORD *)(v1
                                         + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_totalActiveTime);
    *(_QWORD *)(inited + 72) = v26;
    strcpy((char *)(inited + 80), "active_count");
    *(_BYTE *)(inited + 93) = 0;
    *(_WORD *)(inited + 94) = -5120;
    v27 = MEMORY[0x24BEE4568];
    *(_QWORD *)(inited + 96) = *(_QWORD *)(v1 + v89);
    *(_QWORD *)(inited + 120) = v27;
    strcpy((char *)(inited + 128), "overload_count");
    *(_BYTE *)(inited + 143) = -18;
    v28 = OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_overloadCount;
    *(_QWORD *)(inited + 144) = *(_QWORD *)(v1
                                          + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_overloadCount);
    *(_QWORD *)(inited + 168) = v27;
    *(_QWORD *)(inited + 176) = 0xD000000000000016;
    *(_QWORD *)(inited + 184) = 0x8000000236C3B410;
    v29 = OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_audibleOverloadCount;
    *(_QWORD *)(inited + 192) = *(_QWORD *)(v1
                                          + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_audibleOverloadCount);
    *(_QWORD *)(inited + 216) = v27;
    *(_QWORD *)(inited + 224) = 0xD000000000000013;
    *(_QWORD *)(inited + 232) = 0x8000000236C3B430;
    *(double *)(inited + 240) = v19;
    *(_QWORD *)(inited + 264) = v26;
    strcpy((char *)(inited + 272), "num_messages");
    *(_BYTE *)(inited + 285) = 0;
    *(_WORD *)(inited + 286) = -5120;
    *(_QWORD *)(inited + 288) = *(_QWORD *)(v1 + v17);
    *(_QWORD *)(inited + 312) = v27;
    *(_QWORD *)(inited + 320) = 0xD000000000000013;
    *(_QWORD *)(inited + 328) = 0x8000000236C3B450;
    v30 = (unint64_t *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_uniqueMessageCount);
    *(_QWORD *)(inited + 336) = *(_QWORD *)(v1
                                          + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_uniqueMessageCount);
    *(_QWORD *)(inited + 360) = v27;
    *(_QWORD *)(inited + 368) = 0xD000000000000016;
    *(_QWORD *)(inited + 376) = 0x8000000236C3B470;
    v31 = *(_QWORD *)(v1 + v17);
    v32 = v31 >= *v30;
    v33 = v31 - *v30;
    if (!v32)
    {
      __break(1u);
      return;
    }
    v34 = inited;
    v80 = v30;
    v81 = v29;
    v82 = v28;
    v83 = v25;
    v86 = v17;
    *(_QWORD *)(inited + 384) = v33;
    *(_QWORD *)(inited + 408) = v27;
    *(_QWORD *)(inited + 416) = 0xD000000000000014;
    *(_QWORD *)(inited + 424) = 0x8000000236C3B490;
    v79 = v22;
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    v35 = sub_236C35AE8();
    *(_QWORD *)(v34 + 456) = MEMORY[0x24BEE1328];
    *(_BYTE *)(v34 + 432) = v35 & 1;
    v36 = v88;
    v37 = (void (*)(char *, _QWORD, uint64_t))*((_QWORD *)v88 + 13);
    v37(v16, *MEMORY[0x24BE09E00], v11);
    v38 = sub_236C35C8C();
    v40 = v39;
    v41 = (void (*)(char *, uint64_t))*((_QWORD *)v36 + 1);
    v41(v16, v11);
    *(_QWORD *)(v34 + 464) = v38;
    *(_QWORD *)(v34 + 472) = v40;
    *(_QWORD *)(v34 + 504) = MEMORY[0x24BEE0D00];
    v42 = v84;
    v43 = v85;
    *(_QWORD *)(v34 + 480) = v79;
    *(_QWORD *)(v34 + 488) = v42;
    v37(v43, *MEMORY[0x24BE09DD8], v11);
    v44 = sub_236C35C8C();
    v46 = v45;
    v41(v43, v11);
    *(_QWORD *)(v34 + 512) = v44;
    *(_QWORD *)(v34 + 520) = v46;
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    v47 = sub_236C35B48();
    v48 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v34 + 552) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v34 + 528) = v47;
    *(_QWORD *)(v34 + 536) = v49;
    *(_QWORD *)(v34 + 560) = 0xD000000000000011;
    *(_QWORD *)(v34 + 568) = 0x8000000236C3B4B0;
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    v50 = sub_236C35B24();
    *(_QWORD *)(v34 + 600) = v48;
    *(_QWORD *)(v34 + 576) = v50;
    *(_QWORD *)(v34 + 584) = v51;
    strcpy((char *)(v34 + 608), "thermal_state");
    *(_WORD *)(v34 + 622) = -4864;
    sub_236C35A7C();
    v52 = sub_236C35AAC();
    *(_QWORD *)(v34 + 648) = v48;
    *(_QWORD *)(v34 + 624) = v52;
    *(_QWORD *)(v34 + 632) = v53;
    *(_QWORD *)(v34 + 656) = 0xD000000000000011;
    *(_QWORD *)(v34 + 664) = 0x8000000236C3B4D0;
    v54 = sub_236C35A70();
    *(_QWORD *)(v34 + 696) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v34 + 672) = v54 & 1;
    sub_236C15500(v34);
    v55 = sub_236C36088();
    swift_bridgeObjectRelease();
    if (v55)
    {
      v56 = sub_236C35D58();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v87, 1, 1, v56);
      v57 = v77;
      sub_236C35D64();
      v58 = (void (*)(uint64_t *, _QWORD))sub_236C35D7C();
      sub_236C35D4C();
      v58(v90, 0);
      __swift_project_boxed_opaque_existential_1(v21, v21[3]);
      v60 = v75;
      v59 = v76;
      v61 = v78;
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v75, v57, v78);
      v62 = sub_236C35B18();
      v63 = *(void (**)(char *, uint64_t))(v59 + 8);
      v63(v60, v61);
      v64 = v86;
      if ((v62 & 1) == 0)
      {
        swift_retain();
        v65 = sub_236C35F44();
        v66 = sub_236C36334();
        if (os_log_type_enabled(v65, v66))
        {
          v67 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v67 = 134217984;
          v68 = v21[3];
          v87 = (char *)v21[4];
          v88 = v67 + 4;
          __swift_project_boxed_opaque_existential_1(v21, v68);
          v64 = v86;
          v90[0] = sub_236C35AF4();
          v57 = v77;
          sub_236C363F4();
          swift_release();
          _os_log_impl(&dword_236BE1000, v65, v66, "Summary message dropped { reporterID=%lld }", v67, 0xCu);
          v69 = v67;
          v61 = v78;
          MEMORY[0x23B800318](v69, -1, -1);

        }
        else
        {

          swift_release();
        }
      }
      v63(v57, v61);
      *(_QWORD *)(v1 + v83) = 0;
      *(_QWORD *)(v1 + v89) = 0;
      *(_QWORD *)(v1 + v82) = 0;
      *(_QWORD *)(v1 + v81) = 0;
      *(_QWORD *)(v1 + v64) = 0;
    }
    else
    {
      swift_retain();
      v70 = sub_236C35F44();
      v71 = sub_236C36334();
      if (os_log_type_enabled(v70, v71))
      {
        v72 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v72 = 134217984;
        v88 = v72 + 4;
        __swift_project_boxed_opaque_existential_1(v21, v21[3]);
        v90[0] = sub_236C35AF4();
        sub_236C363F4();
        swift_release();
        _os_log_impl(&dword_236BE1000, v70, v71, "Could not convert summary contents to SimpleType! Dropping. { reporterID=%lld }", v72, 0xCu);
        MEMORY[0x23B800318](v72, -1, -1);
      }
      else
      {
        swift_release();
      }
      v73 = v86;

      *(_QWORD *)(v1 + v83) = 0;
      *(_QWORD *)(v1 + v89) = 0;
      *(_QWORD *)(v1 + v82) = 0;
      *(_QWORD *)(v1 + v81) = 0;
      *(_QWORD *)(v1 + v73) = 0;
    }
    v20 = v80;
  }
  else
  {
    *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_totalActiveTime) = 0;
    *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_activeCount) = 0;
    *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_overloadCount) = 0;
    *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_audibleOverloadCount) = 0;
    *(_QWORD *)(v1 + v17) = 0;
    v20 = (unint64_t *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_uniqueMessageCount);
  }
  *v20 = 0;
}

uint64_t SessionSummaryWorker.isStarted.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SessionSummaryWorker.summaryEvent.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t SessionSummaryWorker.workerConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SessionSummaryWorker.workerConfig.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*SessionSummaryWorker.workerConfig.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t SessionSummaryWorker.neededPreviousFields.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t SessionSummaryWorker.neededPreviousFields.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_neededPreviousFields);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*SessionSummaryWorker.neededPreviousFields.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

AudioAnalyticsExternal::SessionSummaryWorker::SessionSummaryKeys_optional __swiftcall SessionSummaryWorker.SessionSummaryKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  AudioAnalyticsExternal::SessionSummaryWorker::SessionSummaryKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_236C3658C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_236C28B90(char *a1)
{
  sub_236C194A0(*a1);
}

void sub_236C28B9C()
{
  char *v0;

  sub_236C2710C(*v0);
}

void sub_236C28BA4(uint64_t a1)
{
  char *v1;

  sub_236C27228(a1, *v1);
}

void sub_236C28BAC(uint64_t a1)
{
  char *v1;

  sub_236C27528(a1, *v1);
}

AudioAnalyticsExternal::SessionSummaryWorker::SessionSummaryKeys_optional sub_236C28BB4(Swift::String *a1)
{
  return SessionSummaryWorker.SessionSummaryKeys.init(rawValue:)(*a1);
}

uint64_t sub_236C28BC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SessionSummaryWorker.SessionSummaryKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t SessionSummaryWorker.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_workerConfig;
  v2 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_session);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_logger;
  v4 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t SessionSummaryWorker.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_workerConfig;
  v2 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_session);
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal20SessionSummaryWorker_logger;
  v4 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

void sub_236C28D38()
{
  SessionSummaryWorker.stop()();
}

unint64_t sub_236C28D5C()
{
  unint64_t result;

  result = qword_256447E78;
  if (!qword_256447E78)
  {
    result = MEMORY[0x23B80027C](&protocol conformance descriptor for SessionSummaryWorker.SessionSummaryKeys, &type metadata for SessionSummaryWorker.SessionSummaryKeys);
    atomic_store(result, (unint64_t *)&qword_256447E78);
  }
  return result;
}

uint64_t sub_236C28DA0()
{
  return type metadata accessor for SessionSummaryWorker();
}

uint64_t type metadata accessor for SessionSummaryWorker()
{
  uint64_t result;

  result = qword_2542B2580;
  if (!qword_2542B2580)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236C28DE4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_236C35CB0();
  if (v1 <= 0x3F)
  {
    result = sub_236C35F50();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for SessionSummaryWorker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SessionSummaryWorker.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t getEnumTagSinglePayload for SessionSummaryWorker.SessionSummaryKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionSummaryWorker.SessionSummaryKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_236C28FA8 + 4 * byte_236C387FB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_236C28FDC + 4 * byte_236C387F6[v4]))();
}

uint64_t sub_236C28FDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236C28FE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236C28FECLL);
  return result;
}

uint64_t sub_236C28FF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236C29000);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_236C29004(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236C2900C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionSummaryWorker.SessionSummaryKeys()
{
  return &type metadata for SessionSummaryWorker.SessionSummaryKeys;
}

uint64_t sub_236C2902C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2564479E8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_236C35698();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v0, qword_256447E80);
  v7 = __swift_project_value_buffer(v0, (uint64_t)qword_256447E80);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDCD790], v3);
  v8 = sub_236C35728();
  v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v2, 1, 1, v8);
  sub_236C35704();
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v9)(v7, 0, 1, v8);
}

void sub_236C29170()
{
  id v0;
  void *v1;
  void *v2;
  id v3;

  v0 = objc_allocWithZone(MEMORY[0x24BE0A128]);
  v1 = (void *)sub_236C360D0();
  v2 = (void *)sub_236C360D0();
  v3 = objc_msgSend(v0, sel_initWithName_version_identifier_, v1, v2, 672578);

  qword_256447E98 = (uint64_t)v3;
}

uint64_t sub_236C29208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal11SiriTTSCase_name;
  v2 = sub_236C35A40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal11SiriTTSCase_tailspinRequest + 16);
  sub_236C1D074(*(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal11SiriTTSCase_tailspinRequest));
  sub_236C1D074(v3);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_236C29294()
{
  return type metadata accessor for SiriTTSCase();
}

uint64_t type metadata accessor for SiriTTSCase()
{
  uint64_t result;

  result = qword_256447EC8;
  if (!qword_256447EC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236C292D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_236C35A40();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_236C29368()
{
  return swift_retain();
}

uint64_t sub_236C29378@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal11SiriTTSCase_name;
  v4 = sub_236C35A40();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_236C293BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal11SiriTTSCase_tailspinRequest);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal11SiriTTSCase_tailspinRequest + 16);
  sub_236C1BE78(v1);
  sub_236C1BE78(v2);
  return v1;
}

uint64_t sub_236C29418()
{
  sub_236C364C0();
  sub_236C36184();
  sub_236C35DA0();
  sub_236C36274();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C35A88();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C35D94();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C2C404();
  sub_236C36184();
  swift_bridgeObjectRelease();
  return 0;
}

id sub_236C29568(uint64_t a1, uint64_t a2)
{
  void (*v4)(char *, char *, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  id v38;
  void *v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  _QWORD v50[3];
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unsigned int (*v55)(char *, uint64_t, uint64_t);
  void (*v56)(unint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;

  v64 = *MEMORY[0x24BDAC8D0];
  v4 = (void (*)(char *, char *, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_2564479E8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v50 - v8;
  v10 = sub_236C35728();
  v58 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v59 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v60 = (char *)v50 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v51 = (char *)v50 - v15;
  v52 = a1;
  sub_236C35D04();
  if (!v16)
    sub_236C35DC4();
  v62 = 0;
  v63 = 0xE000000000000000;
  sub_236C364C0();
  swift_bridgeObjectRelease();
  v62 = 91;
  v63 = 0xE100000000000000;
  sub_236C35A88();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C36184();
  swift_bridgeObjectRelease();
  v17 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v63;
  v50[2] = v62;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447A28);
  v18 = v58;
  v19 = *(_QWORD *)(v58 + 72);
  v20 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_236C37710;
  v54 = v20;
  v56 = *(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 16);
  v56(v21 + v20, a2, v10);
  v62 = v21;
  if (qword_256447080 != -1)
LABEL_36:
    swift_once();
  v22 = __swift_project_value_buffer((uint64_t)v4, (uint64_t)qword_256447E80);
  sub_236C29C70(v22, (uint64_t)v9);
  v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v55(v9, 1, v10) == 1)
  {
    sub_236C29CB8((uint64_t)v9);
    goto LABEL_32;
  }
  v57 = v19;
  v4 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v4(v51, v9, v10);
  v23 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v19 = sub_236C356C8();
  v61 = 0;
  v24 = objc_msgSend(v23, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v19, 0, 4, &v61);

  v25 = v61;
  if (v24)
  {
    v50[1] = v17;
    v26 = sub_236C36214();
    v27 = v25;

    v61 = (id)MEMORY[0x24BEE4AF8];
    v53 = *(_QWORD *)(v26 + 16);
    if (v53)
    {
      v28 = 0;
      v9 = (char *)(v26 + v54);
      v18 = v58;
      while (1)
      {
        if (v28 >= *(_QWORD *)(v26 + 16))
        {
          __break(1u);
          goto LABEL_36;
        }
        v56((unint64_t)v7, (uint64_t)v9, v10);
        v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
        v17(v7, 0, 1, v10);
        if (v55(v7, 1, v10) == 1)
          goto LABEL_30;
        v4(v60, v7, v10);
        sub_236C356A4();
        v29 = sub_236C3613C();
        v31 = v30;
        swift_bridgeObjectRelease();
        if (v29 == 6709603 && v31 == 0xE300000000000000)
          break;
        v32 = sub_236C36658();
        v19 = v57;
        if ((v32 & 1) != 0 || v29 == 0x6E6970736C696174 && v31 == 0xE800000000000000)
          break;
        v33 = sub_236C36658();
        swift_bridgeObjectRelease();
        if ((v33 & 1) != 0)
          goto LABEL_19;
        v18 = v58;
        (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v10);
LABEL_24:
        ++v28;
        v9 += v19;
        if (v53 == v28)
          goto LABEL_29;
      }
      swift_bridgeObjectRelease();
LABEL_19:
      v4(v59, v60, v10);
      v34 = v61;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_236C16BEC(0, v34[2] + 1, 1);
        v34 = v61;
      }
      v36 = v34[2];
      v35 = v34[3];
      if (v36 >= v35 >> 1)
      {
        sub_236C16BEC(v35 > 1, v36 + 1, 1);
        v34 = v61;
      }
      v34[2] = v36 + 1;
      v37 = (char *)v34 + v54 + v36 * v57;
      v19 = v57;
      v4(v37, v59, v10);
      v61 = v34;
      v18 = v58;
      goto LABEL_24;
    }
    v18 = v58;
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56);
LABEL_29:
    v17(v7, 1, 1, v10);
LABEL_30:
    swift_bridgeObjectRelease();
    sub_236C29CB8((uint64_t)v7);
    v40 = (uint64_t)v61;
  }
  else
  {
    v38 = v61;
    v39 = (void *)sub_236C35680();

    swift_willThrow();
    v40 = MEMORY[0x24BEE4AF8];
    v18 = v58;
  }
  sub_236C29E60(v40);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v51, v10);
LABEL_32:
  sub_236C29418();
  if (qword_256447088 != -1)
    swift_once();
  v41 = (void *)qword_256447E98;
  v42 = objc_allocWithZone(MEMORY[0x24BE0A130]);
  v43 = v41;
  v44 = (void *)sub_236C360D0();
  swift_bridgeObjectRelease();
  v45 = (void *)sub_236C360D0();
  swift_bridgeObjectRelease();
  v46 = (void *)sub_236C360D0();
  v47 = (void *)sub_236C36208();
  swift_bridgeObjectRelease();
  v48 = objc_msgSend(v42, sel_initWithTitle_problemDescription_displayReason_attachments_component_, v44, v45, v46, v47, v43);

  return v48;
}

uint64_t sub_236C29C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2564479E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_236C29CB8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2564479E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_236C29CF8(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_236C1C20C(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = sub_236C35DB8();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_236C36574();
  __break(1u);
  return result;
}

uint64_t sub_236C29E60(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_236C1C424(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = sub_236C35728();
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_236C36574();
  __break(1u);
  return result;
}

uint64_t SummaryDecoratorWorker.__allocating_init(with:)(_QWORD *a1)
{
  swift_allocObject();
  return SummaryDecoratorWorker.init(with:)(a1);
}

Swift::Bool __swiftcall SummaryDecoratorWorker.start()()
{
  uint64_t v0;

  swift_beginAccess();
  *(_BYTE *)(v0 + 16) = 1;
  return 1;
}

Swift::Void __swiftcall SummaryDecoratorWorker.stop()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1650);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_summaryDecoratorStates);
  if (v4 >> 62)
    goto LABEL_17;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v5)
  {
    v17 = v4 & 0xC000000000000001;
    v6 = 4;
    while (1)
    {
      v7 = v6 - 4;
      if (!v17)
        break;
      v8 = MEMORY[0x23B7FF964](v6 - 4, v4);
      v9 = v6 - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_15;
LABEL_9:
      if (*(_BYTE *)(v8 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_isRunning) == 1)
      {
        sub_236C116CC(0, (uint64_t)v3);
      }
      else
      {
        v10 = sub_236C35DB8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 1, 1, v10);
      }
      v11 = *(_QWORD *)(sub_236C35950() + 16);
      swift_bridgeObjectRelease();
      if (v11 + 0x4000000000000000 < 0)
        goto LABEL_16;
      sub_236C3592C();
      v12 = sub_236C36064();
      v13 = (uint64_t *)(v8 + OBJC_IVAR____TtC22AudioAnalyticsExternal20DurationSummaryState_previousValues);
      swift_beginAccess();
      *v13 = v12;
      swift_bridgeObjectRelease();
      v14 = sub_236C35950();
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v18 = *v13;
      *v13 = 0x8000000000000000;
      sub_236BEC134(v14, (uint64_t)sub_236BEDDE0, 0, isUniquelyReferenced_nonNull_native, &v18);
      *v13 = v18;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      sub_236BE6C14((uint64_t)v3, &qword_2542B1650);
      ++v6;
      if (v9 == v5)
        goto LABEL_18;
    }
    v8 = *(_QWORD *)(v4 + 8 * v6);
    swift_retain();
    v9 = v6 - 3;
    if (!__OFADD__(v7, 1))
      goto LABEL_9;
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain_n();
    v5 = sub_236C36544();
    swift_bridgeObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRelease();
}

uint64_t SummaryDecoratorWorker.addDecoratorData(_:operatingSystem:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  uint64_t v31;
  double *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  unint64_t v41;
  char v42;
  double v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  double v49;
  double v50;
  double v51;
  double v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(double *, uint64_t, unint64_t);
  uint64_t v71;
  int v72;
  double v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  int v77;
  double v78;
  double v79;
  double v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  double *v84;
  uint64_t v85;
  int v86;
  _BYTE *v87;
  uint64_t v88;
  _QWORD *v89;
  _BYTE *v90;
  _QWORD *v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t *v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t inited;
  int v99;
  uint64_t v100;
  char v101;
  BOOL v102;
  int v103;
  _BYTE *v104;
  int v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  char v109;
  char v110;
  char v111;
  _BYTE *v112;
  uint64_t *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  NSObject *v124;
  os_log_type_t v125;
  uint64_t v126;
  uint64_t v127;
  double v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  _OWORD *v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _BYTE *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  double v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  void (*v147)(void);
  uint64_t *v148;
  _BYTE *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  double v154;
  uint64_t *v155;
  _QWORD *v156;
  _BYTE *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _BYTE v162[12];
  unsigned int v163;
  _BYTE *v164;
  uint64_t v165;
  _BYTE *v166;
  _BYTE *v167;
  _BYTE *v168;
  _BYTE *v169;
  __int128 v170;
  unsigned int v171;
  _BYTE *v172;
  __int128 v173;
  uint64_t v174;
  _BYTE *v175;
  int v176;
  uint64_t v177;
  _QWORD *v178;
  unint64_t v179;
  uint64_t v180;
  int v181;
  __int128 v182;
  _BYTE *v183;
  int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  uint64_t *v188;
  _BYTE *v189;
  uint64_t v190;
  double *v191;
  _BYTE *v192;
  unint64_t v193;
  double *v194;
  _BYTE *v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _BYTE *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  void (*v204)(_BYTE *, _QWORD, uint64_t);
  void (*v205)(_BYTE *, uint64_t);
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  double v209;
  void (*v210)(double *, unint64_t);
  uint64_t v211;
  uint64_t (*v212)(double *, unint64_t);
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  void (*v216)(_BYTE *, unint64_t, uint64_t);
  uint64_t v217;
  _BYTE *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;

  v190 = a2;
  v223 = *MEMORY[0x24BDAC8D0];
  v202 = sub_236C35AB8();
  v201 = *(_QWORD *)(v202 - 8);
  MEMORY[0x24BDAC7A8](v202);
  v200 = &v162[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v206 = sub_236C35C98();
  v203 = *(_QWORD *)(v206 - 8);
  v5 = MEMORY[0x24BDAC7A8](v206);
  v164 = &v162[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = MEMORY[0x24BDAC7A8](v5);
  v166 = &v162[-v8];
  v9 = MEMORY[0x24BDAC7A8](v7);
  v167 = &v162[-v10];
  v11 = MEMORY[0x24BDAC7A8](v9);
  v175 = &v162[-v12];
  v13 = MEMORY[0x24BDAC7A8](v11);
  v189 = &v162[-v14];
  v15 = MEMORY[0x24BDAC7A8](v13);
  v169 = &v162[-v16];
  MEMORY[0x24BDAC7A8](v15);
  v192 = &v162[-v17];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = &v162[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = MEMORY[0x24BDAC7A8](v19);
  v188 = (uint64_t *)&v162[-v23];
  v24 = MEMORY[0x24BDAC7A8](v22);
  v168 = &v162[-v25];
  v26 = MEMORY[0x24BDAC7A8](v24);
  v191 = &v162[-v27];
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (double *)&v162[-v29];
  MEMORY[0x24BDAC7A8](v28);
  v32 = (double *)&v162[-v31];
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1650);
  MEMORY[0x24BDAC7A8](v33);
  v35 = &v162[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v211 = sub_236C35DB8();
  v36 = *(_QWORD *)(v211 - 8);
  v37 = MEMORY[0x24BDAC7A8](v211);
  v218 = &v162[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v37);
  v183 = &v162[-v39];
  v165 = a1;
  *(double *)&result = COERCE_DOUBLE(sub_236C2BFC4());
  if ((v42 & 1) == 0)
  {
    v43 = *(double *)&result;
    v44 = v41;
    v45 = *(_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_summaryDecoratorStates);
    v172 = v21;
    v215 = v36;
    v193 = v45;
    if (v45 >> 62)
      goto LABEL_124;
    v46 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
LABEL_4:
    v48 = v211;
    v49 = v43;
    v50 = *(double *)&v44;
    if (v46)
    {
      v43 = 0.0;
      v178 = (_QWORD *)(v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_session);
      v177 = v2 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_logger;
      v197 = v193 & 0xC000000000000001;
      v180 = v193 & 0xFFFFFFFFFFFFFF8;
      v179 = v193 + 32;
      LODWORD(v214) = *MEMORY[0x24BE09AC0];
      v187 = *MEMORY[0x24BE09E10];
      v176 = *MEMORY[0x24BE09AB0];
      v163 = *MEMORY[0x24BE09DF8];
      v181 = *MEMORY[0x24BE09AD0];
      v51 = 0.0;
      v186 = *MEMORY[0x24BE09E38];
      v174 = MEMORY[0x24BEE4AD8] + 8;
      v185 = *MEMORY[0x24BE09C48];
      v171 = *MEMORY[0x24BE09E20];
      *(_QWORD *)&v47 = 136381187;
      v173 = v47;
      v170 = xmmword_236C37860;
      v213 = 0x8000000236C3A810;
      v182 = xmmword_236C37710;
      v52 = 0.0;
      v195 = v35;
      v196 = v46;
      v194 = v30;
      while (1)
      {
        if (v197)
        {
          v53 = MEMORY[0x23B7FF964](*(_QWORD *)&v43, v193);
          v54 = __OFADD__((*(_QWORD *)&v43)++, 1);
          if (v54)
            goto LABEL_122;
        }
        else
        {
          if (*(_QWORD *)&v43 >= *(_QWORD *)(v180 + 16))
            goto LABEL_123;
          v53 = swift_retain();
          v54 = __OFADD__((*(_QWORD *)&v43)++, 1);
          if (v54)
          {
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            swift_bridgeObjectRetain();
            v36 = v215;
            v46 = sub_236C36544();
            goto LABEL_4;
          }
        }
        v55 = v53 + OBJC_IVAR____TtC22AudioAnalyticsExternal29DurationSummaryDecoratorState_decoratorRunningMessage;
        v56 = v53;
        swift_beginAccess();
        sub_236C0D160(v55, (uint64_t)v35);
        v57 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v36 + 48))(v35, 1, v48);
        v209 = v43;
        v208 = v56;
        if (v57 == 1)
        {
          sub_236BE6C14((uint64_t)v35, &qword_2542B1650);
          v58 = (uint64_t *)(v56
                          + OBJC_IVAR____TtC22AudioAnalyticsExternal29DurationSummaryDecoratorState_completeDecoratorMessages);
          swift_beginAccess();
          v59 = *v58;
          swift_bridgeObjectRetain();
          v60 = *(_QWORD *)(v59 + 16);
          if (v60)
            break;
          goto LABEL_105;
        }
        v112 = v183;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v36 + 32))(v183, v35, v48);
        v113 = (uint64_t *)(v56
                         + OBJC_IVAR____TtC22AudioAnalyticsExternal29DurationSummaryDecoratorState_completeDecoratorMessages);
        swift_beginAccess();
        v114 = *v113;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1540);
        v115 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
        v116 = swift_allocObject();
        *(_OWORD *)(v116 + 16) = v182;
        v117 = v116 + v115;
        v48 = v211;
        (*(void (**)(unint64_t, _BYTE *, uint64_t))(v36 + 16))(v117, v112, v211);
        v221 = v114;
        swift_bridgeObjectRetain();
        sub_236C29CF8(v116);
        v59 = v221;
        (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v112, v48);
        v60 = *(_QWORD *)(v59 + 16);
        if (v60)
          break;
LABEL_105:
        swift_bridgeObjectRelease();
        v118 = sub_236C3595C();
        v216 = (void (*)(_BYTE *, unint64_t, uint64_t))MEMORY[0x23B7FF304](v118);
        v44 = v119;
        v120 = sub_236C3598C();
        v217 = MEMORY[0x23B7FF31C](v120);
        v122 = v121;
        __swift_project_boxed_opaque_existential_1(v178, v178[3]);
        v123 = sub_236C35AF4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v2 = v177;
        v124 = sub_236C35F44();
        v125 = sub_236C36328();
        if (os_log_type_enabled(v124, v125))
        {
          v126 = swift_slowAlloc();
          v212 = (uint64_t (*)(double *, unint64_t))v123;
          v127 = v126;
          v2 = swift_slowAlloc();
          v221 = v2;
          *(_DWORD *)v127 = v173;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v127 + 4) = sub_236C0ED40((uint64_t)v216, v44, &v221);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v127 + 12) = 2081;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v127 + 14) = sub_236C0ED40(v217, v122, &v221);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v127 + 22) = 2048;
          *(_QWORD *)(v127 + 24) = v212;
          _os_log_impl(&dword_236BE1000, v124, v125, "No decorator data found. { audioEventType=%{private}s, audioEventCategory=%{private}s, reporterID=%lld }", (uint8_t *)v127, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x23B800318](v2, -1, -1);
          MEMORY[0x23B800318](v127, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        swift_release();

        v35 = v195;
        v36 = v215;
LABEL_6:
        v43 = v209;
        if (*(_QWORD *)&v209 == v196)
        {
          swift_bridgeObjectRelease();
          goto LABEL_111;
        }
      }
      v61 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      v199 = v59;
      v62 = v59 + v61;
      v217 = *(_QWORD *)(v36 + 72);
      v216 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v36 + 16);
      while (1)
      {
        v216(v218, v62, v48);
        v2 = sub_236C35D10();
        if (*(_QWORD *)(v2 + 16))
        {
          v63 = sub_236BEE010(0xD000000000000011, v213);
          if ((v64 & 1) != 0)
          {
            v65 = v63;
            v66 = *(_QWORD *)(v2 + 56);
            *(double *)&v44 = COERCE_DOUBLE(sub_236C3592C());
            v67 = *(_QWORD *)(v44 - 8);
            v68 = v66 + *(_QWORD *)(v67 + 72) * v65;
            v48 = v211;
            (*(void (**)(double *, uint64_t, unint64_t))(v67 + 16))(v32, v68, v44);
            (*(void (**)(double *, _QWORD, uint64_t, unint64_t))(v67 + 56))(v32, 0, 1, v44);
          }
          else
          {
            *(double *)&v44 = COERCE_DOUBLE(sub_236C3592C());
            (*(void (**)(double *, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v44 - 8) + 56))(v32, 1, 1, v44);
          }
          v36 = v215;
        }
        else
        {
          *(double *)&v44 = COERCE_DOUBLE(sub_236C3592C());
          (*(void (**)(double *, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v44 - 8) + 56))(v32, 1, 1, v44);
        }
        swift_bridgeObjectRelease();
        sub_236C3592C();
        v69 = *(_QWORD *)(v44 - 8);
        v70 = *(unsigned int (**)(double *, uint64_t, unint64_t))(v69 + 48);
        if (v70(v32, 1, v44) == 1)
          break;
        v2 = *(_QWORD *)(v69 + 88);
        v72 = ((uint64_t (*)(double *, unint64_t))v2)(v32, v44);
        if (v72 == (_DWORD)v214)
        {
          v212 = (uint64_t (*)(double *, unint64_t))v2;
          v210 = *(void (**)(double *, unint64_t))(v69 + 96);
          v210(v32, v44);
          v73 = *v32;
          v2 = sub_236C35D10();
          if (*(_QWORD *)(v2 + 16) && (v74 = sub_236BEE010(0x7972616D6D75735FLL, 0xEF656D6954646E45), (v75 & 1) != 0))
          {
            (*(void (**)(double *, unint64_t, unint64_t))(v69 + 16))(v30, *(_QWORD *)(v2 + 56) + *(_QWORD *)(v69 + 72) * v74, v44);
            v76 = 0;
          }
          else
          {
            v76 = 1;
          }
          (*(void (**)(double *, uint64_t, uint64_t, unint64_t))(v69 + 56))(v30, v76, 1, v44);
          swift_bridgeObjectRelease();
          if (v70(v30, 1, v44) == 1)
          {
            v71 = (uint64_t)v30;
            goto LABEL_32;
          }
          v77 = v212(v30, v44);
          if (v77 == (_DWORD)v214)
          {
            v210(v30, v44);
            v78 = *v30;
            if (v73 < v49)
              v79 = v49;
            else
              v79 = v73;
            if (v78 >= v50)
              v78 = v50;
            if (v79 < v78)
            {
              v80 = v78 - v79;
              v81 = sub_236C35D10();
              v82 = v192;
              v83 = v206;
              v204 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v203 + 104);
              v204(v192, v187, v206);
              v84 = (double *)v191;
              v207 = v81;
              sub_236C36070();
              v205 = *(void (**)(_BYTE *, uint64_t))(v203 + 8);
              v205(v82, v83);
              if (v70(v84, 1, v44) == 1)
              {
                v85 = (uint64_t)v84;
                goto LABEL_42;
              }
              v86 = v212(v84, v44);
              if (v86 != v176)
              {
                (*(void (**)(double *, unint64_t))(v69 + 8))(v84, v44);
                goto LABEL_53;
              }
              v210(v84, v44);
              v102 = *(_BYTE *)v84 == 1;
              v30 = v194;
              if (!v102)
              {
LABEL_53:
                v92 = v189;
                v93 = v206;
                v204(v189, v186, v206);
                v94 = v188;
                sub_236C36070();
                v205(v92, v93);
                if (v70((double *)v94, 1, v44) == 1)
                {
                  sub_236BE6C14((uint64_t)v94, &qword_2542B1640);
                  goto LABEL_60;
                }
                v95 = v212((double *)v94, v44);
                if (v95 == v181)
                {
                  v210((double *)v94, v44);
                  v97 = *v94;
                  v96 = v94[1];
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B30B0);
                  inited = swift_initStackObject();
                  *(_OWORD *)(inited + 16) = v170;
                  *(_QWORD *)(inited + 32) = 49;
                  *(_QWORD *)(inited + 40) = 0xE100000000000000;
                  *(_QWORD *)(inited + 48) = 50;
                  *(_QWORD *)(inited + 56) = 0xE100000000000000;
                  v198 = v97;
                  if (v97 == 49 && v96 == 0xE100000000000000)
                  {
                    v99 = 1;
                  }
                  else
                  {
                    v100 = v198;
                    v101 = sub_236C36658();
                    v102 = v100 == 50 && v96 == 0xE100000000000000;
                    v103 = v102;
                    v99 = 1;
                    if ((v101 & 1) == 0 && !v103)
                      v99 = sub_236C36658();
                  }
                  LODWORD(v198) = v99;
                  swift_release();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  (*(void (**)(uint64_t *, unint64_t))(v69 + 8))(v94, v44);
LABEL_60:
                  LODWORD(v198) = 0;
                }
                (*(void (**)(_BYTE *, _QWORD, uint64_t))(v201 + 104))(v200, v185, v202);
                sub_236BE6C98(&qword_2542B14E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE09C50], MEMORY[0x24BE09C58]);
                sub_236C361F0();
                sub_236C361F0();
                v2 = v222;
                if (v221 == v219 && v222 == v220)
                {
                  swift_bridgeObjectRelease_n();
                  (*(void (**)(_BYTE *, uint64_t))(v201 + 8))(v200, v202);
                  v48 = v211;
                  v30 = v194;
                  goto LABEL_75;
                }
                v184 = sub_236C36658();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                (*(void (**)(_BYTE *, uint64_t))(v201 + 8))(v200, v202);
                v48 = v211;
                v30 = v194;
                if ((v184 & 1) != 0)
                {
LABEL_75:
                  (*(void (**)(_BYTE *, uint64_t))(v215 + 8))(v218, v48);
                  swift_bridgeObjectRelease();
                  goto LABEL_76;
                }
                v104 = v175;
                v204(v175, v171, v206);
                v2 = (uint64_t)v172;
                sub_236C36070();
                swift_bridgeObjectRelease();
                v205(v104, v206);
                if (v70((double *)v2, 1, v44) == 1)
                {
                  v48 = v211;
                  (*(void (**)(_BYTE *, uint64_t))(v215 + 8))(v218, v211);
                  sub_236BE6C14(v2, &qword_2542B1640);
                  goto LABEL_89;
                }
                v105 = v212((double *)v2, v44);
                v48 = v211;
                if (v105 != v181)
                {
                  (*(void (**)(_BYTE *, uint64_t))(v215 + 8))(v218, v211);
                  (*(void (**)(uint64_t, unint64_t))(v69 + 8))(v2, v44);
LABEL_89:
                  if ((v198 & 1) != 0)
LABEL_90:
                    v51 = v51 + v80;
LABEL_91:
                  v36 = v215;
                  goto LABEL_45;
                }
                v210((double *)v2, v44);
                v106 = *(_QWORD *)v2;
                v2 = *(_QWORD *)(v2 + 8);
                if (v106 == 49 && v2 == 0xE100000000000000)
                {
                  swift_bridgeObjectRelease();
                  (*(void (**)(_BYTE *, uint64_t))(v215 + 8))(v218, v48);
LABEL_76:
                  if ((v198 & 1) == 0)
                    goto LABEL_91;
                }
                else
                {
                  v110 = sub_236C36658();
                  swift_bridgeObjectRelease();
                  (*(void (**)(_BYTE *, uint64_t))(v215 + 8))(v218, v48);
                  if ((v198 & 1) == 0)
                    goto LABEL_91;
                  if ((v110 & 1) == 0)
                    goto LABEL_90;
                }
LABEL_77:
                v52 = v52 + v80;
                goto LABEL_91;
              }
              v87 = v169;
              v88 = v206;
              v204(v169, v163, v206);
              v89 = v168;
              sub_236C36070();
              v90 = v87;
              v91 = v89;
              v205(v90, v88);
              if (v70((double *)v89, 1, v44) == 1)
              {
                v85 = (uint64_t)v89;
LABEL_42:
                sub_236BE6C14(v85, &qword_2542B1640);
                goto LABEL_53;
              }
              v107 = v212((double *)v89, v44);
              if (v107 != v181)
              {
                (*(void (**)(_QWORD *, unint64_t))(v69 + 8))(v89, v44);
                goto LABEL_53;
              }
              v210((double *)v89, v44);
              v108 = *v89;
              v2 = v91[1];
              if (*v91 == 28271 && v2 == 0xE200000000000000)
              {
                v109 = 1;
                goto LABEL_100;
              }
              v109 = sub_236C36658();
              if (v108 == 6710895 && v2 == 0xE300000000000000)
              {
                swift_bridgeObjectRelease();
                if ((v109 & 1) == 0)
                {
LABEL_103:
                  v48 = v211;
                  (*(void (**)(_BYTE *, uint64_t))(v215 + 8))(v218, v211);
                  swift_bridgeObjectRelease();
                  goto LABEL_90;
                }
              }
              else
              {
LABEL_100:
                v111 = sub_236C36658();
                swift_bridgeObjectRelease();
                if ((v109 & 1) == 0)
                {
                  if ((v111 & 1) == 0)
                    goto LABEL_53;
                  goto LABEL_103;
                }
              }
              v48 = v211;
              (*(void (**)(_BYTE *, uint64_t))(v215 + 8))(v218, v211);
              swift_bridgeObjectRelease();
              goto LABEL_77;
            }
          }
          else
          {
            (*(void (**)(double *, unint64_t))(v69 + 8))(v30, v44);
          }
        }
        else
        {
          (*(void (**)(double *, unint64_t))(v69 + 8))(v32, v44);
        }
LABEL_44:
        (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v218, v48);
LABEL_45:
        v62 += v217;
        if (!--v60)
        {
          swift_release();
          swift_bridgeObjectRelease();
          v35 = v195;
          goto LABEL_6;
        }
      }
      v71 = (uint64_t)v32;
LABEL_32:
      sub_236BE6C14(v71, &qword_2542B1640);
      goto LABEL_44;
    }
    swift_bridgeObjectRelease();
    v51 = 0.0;
    v52 = 0.0;
LABEL_111:
    v128 = round(v50 - v49 - v52 - v51);
    if ((~*(_QWORD *)&v128 & 0x7FF0000000000000) != 0)
    {
      if (v128 > -9.22337204e18)
      {
        if (v128 < 9.22337204e18)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542B14D8);
          v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FB8);
          v130 = *(_QWORD *)(v129 - 8);
          v131 = *(_QWORD *)(v130 + 72);
          v132 = (*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
          v133 = (_OWORD *)swift_allocObject();
          v133[1] = xmmword_236C37720;
          v134 = (uint64_t *)((char *)v133 + v132);
          v135 = *(int *)(v129 + 48);
          v136 = *MEMORY[0x24BE09E50];
          v137 = v203;
          v138 = v167;
          v139 = v206;
          v218 = *(_BYTE **)(v203 + 104);
          ((void (*)(_BYTE *, uint64_t, uint64_t))v218)(v167, v136, v206);
          v140 = sub_236C35C8C();
          v142 = v141;
          v217 = *(_QWORD *)(v137 + 8);
          ((void (*)(_BYTE *, uint64_t))v217)(v138, v139);
          *v134 = v140;
          v134[1] = v142;
          v143 = round(v52);
          if ((~*(_QWORD *)&v143 & 0x7FF0000000000000) != 0)
          {
            if (v143 > -9.22337204e18)
            {
              if (v143 < 9.22337204e18)
              {
                v216 = (void (*)(_BYTE *, unint64_t, uint64_t))v133;
                v144 = (char *)v134 + v135;
                *(uint64_t *)((char *)v134 + v135) = (uint64_t)v143;
                v145 = *MEMORY[0x24BE09AA8];
                v146 = sub_236C3592C();
                v147 = *(void (**)(void))(*(_QWORD *)(v146 - 8) + 104);
                ((void (*)(char *, uint64_t, uint64_t))v147)(v144, v145, v146);
                v215 = v131;
                v148 = (uint64_t *)((char *)v134 + v131);
                v214 = *(int *)(v129 + 48);
                v149 = v166;
                v150 = v206;
                ((void (*)(_BYTE *, _QWORD, uint64_t))v218)(v166, *MEMORY[0x24BE09E48], v206);
                v151 = sub_236C35C8C();
                v153 = v152;
                ((void (*)(_BYTE *, uint64_t))v217)(v149, v150);
                *v148 = v151;
                v148[1] = v153;
                v154 = round(v51);
                if ((~*(_QWORD *)&v154 & 0x7FF0000000000000) != 0)
                {
                  if (v154 > -9.22337204e18)
                  {
                    if (v154 < 9.22337204e18)
                    {
                      *(uint64_t *)((char *)v148 + v214) = (uint64_t)v154;
                      v147();
                      v155 = (uint64_t *)((char *)v134 + 2 * v215);
                      v156 = (uint64_t *)((char *)v155 + *(int *)(v129 + 48));
                      v157 = v164;
                      v158 = v206;
                      ((void (*)(_BYTE *, _QWORD, uint64_t))v218)(v164, *MEMORY[0x24BE09E30], v206);
                      v159 = sub_236C35C8C();
                      v161 = v160;
                      ((void (*)(_BYTE *, uint64_t))v217)(v157, v158);
                      *v155 = v159;
                      v155[1] = v161;
                      *v156 = (uint64_t)v128;
                      ((void (*)(_QWORD *, uint64_t, uint64_t))v147)(v156, v145, v146);
                      sub_236BF22BC((uint64_t)v216);
                      sub_236C35CE0();
                      *(double *)&result = COERCE_DOUBLE(swift_bridgeObjectRelease());
                      return result;
                    }
LABEL_133:
                    __break(1u);
                  }
LABEL_132:
                  __break(1u);
                  goto LABEL_133;
                }
LABEL_131:
                __break(1u);
                goto LABEL_132;
              }
LABEL_130:
              __break(1u);
              goto LABEL_131;
            }
LABEL_129:
            __break(1u);
            goto LABEL_130;
          }
LABEL_128:
          __break(1u);
          goto LABEL_129;
        }
LABEL_127:
        __break(1u);
        goto LABEL_128;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_127;
  }
  return result;
}

uint64_t SummaryDecoratorWorker.isStarted.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SummaryDecoratorWorker.summaryEvent.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t SummaryDecoratorWorker.workerConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SummaryDecoratorWorker.workerConfig.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*SummaryDecoratorWorker.workerConfig.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t SummaryDecoratorWorker.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_workerConfig;
  v2 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_session);
  swift_release();
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_logger;
  v4 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t SummaryDecoratorWorker.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_workerConfig;
  v2 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_session);
  swift_release();
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal22SummaryDecoratorWorker_logger;
  v4 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

void sub_236C2BD24()
{
  SummaryDecoratorWorker.stop()();
}

uint64_t sub_236C2BD44(uint64_t a1, uint64_t a2)
{
  return SummaryDecoratorWorker.addDecoratorData(_:operatingSystem:)(a1, a2);
}

uint64_t sub_236C2BD64(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, char *))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, char *);

  v29 = a2;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FA0);
  MEMORY[0x24BDAC7A8](v28);
  v4 = (uint64_t *)((char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(a1 + 64);
  v26 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v27 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v21 >= v27)
      goto LABEL_24;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v27)
        goto LABEL_24;
      v22 = *(_QWORD *)(v26 + 8 * v10);
      if (!v22)
      {
        v10 = v21 + 2;
        if (v21 + 2 >= v27)
          goto LABEL_24;
        v22 = *(_QWORD *)(v26 + 8 * v10);
        if (!v22)
        {
          v10 = v21 + 3;
          if (v21 + 3 >= v27)
            goto LABEL_24;
          v22 = *(_QWORD *)(v26 + 8 * v10);
          if (!v22)
          {
            v23 = v21 + 4;
            if (v23 >= v27)
            {
LABEL_24:
              v24 = 1;
              goto LABEL_25;
            }
            v22 = *(_QWORD *)(v26 + 8 * v23);
            if (!v22)
            {
              while (1)
              {
                v10 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_27;
                if (v10 >= v27)
                  goto LABEL_24;
                v22 = *(_QWORD *)(v26 + 8 * v10);
                ++v23;
                if (v22)
                  goto LABEL_22;
              }
            }
            v10 = v23;
          }
        }
      }
    }
LABEL_22:
    v8 = (v22 - 1) & v22;
    v12 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_5:
    v13 = *(_QWORD *)(a1 + 56);
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v15 = *v14;
    v16 = v14[1];
    v17 = sub_236C3592C();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = v13 + *(_QWORD *)(v18 + 72) * v12;
    v20 = (char *)v4 + *(int *)(v28 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v19, v17);
    *v4 = v15;
    v4[1] = v16;
    swift_bridgeObjectRetain();
    LOBYTE(v20) = v29(v15, v16, v20);
    result = sub_236BE6C14((uint64_t)v4, &qword_2542B2FA0);
    if ((v20 & 1) == 0)
    {
      v24 = 0;
LABEL_25:
      swift_release();
      return v24;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_236C2BFC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t (*v16)(uint64_t *, uint64_t);
  int v17;
  int v18;
  void (*v19)(uint64_t *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v26;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (uint64_t *)((char *)&v26 - v4);
  v6 = sub_236C35D10();
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_236BEE010(0xD000000000000011, 0x8000000236C3A810), (v8 & 1) != 0))
  {
    v9 = v7;
    v10 = *(_QWORD *)(v6 + 56);
    v11 = sub_236C3592C();
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(uint64_t *, unint64_t, uint64_t))(v12 + 16))(v5, v10 + *(_QWORD *)(v12 + 72) * v9, v11);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v5, 0, 1, v11);
  }
  else
  {
    v11 = sub_236C3592C();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
  }
  swift_bridgeObjectRelease();
  sub_236C3592C();
  v13 = *(_QWORD *)(v11 - 8);
  v14 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v5, 1, v11) == 1)
  {
    v15 = (uint64_t)v5;
LABEL_7:
    sub_236BE6C14(v15, &qword_2542B1640);
    return 0;
  }
  v16 = *(uint64_t (**)(uint64_t *, uint64_t))(v13 + 88);
  v17 = v16(v5, v11);
  if (v17 != *MEMORY[0x24BE09AC0])
  {
    (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v5, v11);
    return 0;
  }
  v18 = v17;
  v19 = *(void (**)(uint64_t *, uint64_t))(v13 + 96);
  v19(v5, v11);
  v20 = *v5;
  v21 = sub_236C35D10();
  if (*(_QWORD *)(v21 + 16) && (v22 = sub_236BEE010(0x7972616D6D75735FLL, 0xEF656D6954646E45), (v23 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v3, *(_QWORD *)(v21 + 56) + *(_QWORD *)(v13 + 72) * v22, v11);
    v24 = 0;
  }
  else
  {
    v24 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v3, v24, 1, v11);
  swift_bridgeObjectRelease();
  if (v14((uint64_t *)v3, 1, v11) == 1)
  {
    v15 = (uint64_t)v3;
    goto LABEL_7;
  }
  if (v16((uint64_t *)v3, v11) != v18)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v3, v11);
    return 0;
  }
  v19((uint64_t *)v3, v11);
  return v20;
}

uint64_t sub_236C2C274()
{
  return sub_236BE6C98(&qword_2542B2A68, (uint64_t (*)(uint64_t))type metadata accessor for SummaryDecoratorWorker, (uint64_t)&protocol conformance descriptor for SummaryDecoratorWorker);
}

uint64_t type metadata accessor for SummaryDecoratorWorker()
{
  uint64_t result;

  result = qword_2542B2A70;
  if (!qword_2542B2A70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236C2C2DC()
{
  return type metadata accessor for SummaryDecoratorWorker();
}

uint64_t sub_236C2C2E4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_236C35CB0();
  if (v1 <= 0x3F)
  {
    result = sub_236C35F50();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SummaryDecoratorWorker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SummaryDecoratorWorker.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_236C2C3B0()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TailspinCaseState()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for TailspinCaseProperties()
{
  return &type metadata for TailspinCaseProperties;
}

uint64_t sub_236C2C404()
{
  MEMORY[0x23B7FEF2C]();
  sub_236C35A7C();
  sub_236C35AAC();
  sub_236C35A70();
  sub_236C364C0();
  sub_236C36184();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C36184();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_236C2C560()
{
  uint64_t result;

  type metadata accessor for TailspinManager();
  swift_allocObject();
  result = sub_236C2C59C();
  qword_2542B4180 = result;
  return result;
}

uint64_t sub_236C2C59C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t result;
  void *v35;
  uint64_t v36;
  void *v37;
  NSObject *v38;
  int *v39;
  _BYTE v40[12];
  unsigned int v41;
  void (*v42)(_BYTE *);
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t aBlock;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t (*v51)();
  uint64_t v52;

  v1 = v0;
  v2 = sub_236C36364();
  MEMORY[0x24BDAC7A8](v2);
  v46 = &v40[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_236C3637C();
  v5 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v45 = &v40[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_236C35FEC();
  MEMORY[0x24BDAC7A8](v7);
  v44 = &v40[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for OverloadOptions(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v40[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for TailspinOptions(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v40[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(aBlock) = 0;
  sub_236C358F0();
  LOBYTE(aBlock) = 1;
  sub_236C358F0();
  v15 = *(int *)(v12 + 24);
  v14[v15] = sub_236C35E6C() & 1;
  v16 = *(int *)(v12 + 28);
  v14[v16] = sub_236C35E18() & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3060);
  v17 = swift_allocObject();
  *(_DWORD *)(v17 + ((*(unsigned int *)(*(_QWORD *)v17 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  v18 = (_QWORD *)MEMORY[0x24BEE27A8];
  sub_236C2F8A4((uint64_t)v14, v17 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v17 + 16), type metadata accessor for TailspinOptions);
  sub_236C1D9B0((uint64_t)v14, type metadata accessor for TailspinOptions);
  *(_QWORD *)(v1 + 16) = v17;
  sub_236C30F70();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1600);
  v19 = swift_allocObject();
  *(_DWORD *)(v19 + ((*(unsigned int *)(*(_QWORD *)v19 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_236C2F8A4((uint64_t)v11, v19 + *(_QWORD *)(*v18 + *(_QWORD *)v19 + 16), type metadata accessor for OverloadOptions);
  sub_236C1D9B0((uint64_t)v11, type metadata accessor for OverloadOptions);
  *(_QWORD *)(v1 + 24) = v19;
  type metadata accessor for TailspinStatus();
  swift_allocObject();
  *(_QWORD *)(v1 + 32) = sub_236C2FA9C();
  *(_QWORD *)(v1 + 40) = 0;
  *(_BYTE *)(v1 + 48) = 1;
  sub_236BE7428(0, (unint64_t *)&qword_2542B3008);
  sub_236C35FC8();
  v41 = *MEMORY[0x24BEE5758];
  v42 = *(void (**)(_BYTE *))(v5 + 104);
  v20 = v45;
  v42(v45);
  aBlock = MEMORY[0x24BEE4AF8];
  sub_236BE6C98(&qword_2542B3000, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B2FE0);
  sub_236BFE458((unint64_t *)&qword_2542B2FE8, &qword_2542B2FE0);
  sub_236C36448();
  *(_QWORD *)(v1 + 56) = sub_236C363A0();
  sub_236C35FC8();
  ((void (*)(_BYTE *, _QWORD, uint64_t))v42)(v20, v41, v43);
  aBlock = MEMORY[0x24BEE4AF8];
  sub_236C36448();
  *(_QWORD *)(v1 + 64) = sub_236C363A0();
  sub_236C362D4();
  *(_QWORD *)(v1 + 72) = v21;
  sub_236C362D4();
  *(_QWORD *)(v1 + 80) = v22;
  sub_236C2F180();
  *(_DWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal15TailspinManager_defaultsChangedToken) = 0;
  sub_236C35F2C();
  v23 = OBJC_IVAR____TtC22AudioAnalyticsExternal15TailspinManager_fileManager;
  *(_QWORD *)(v1 + v23) = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v24 = OBJC_IVAR____TtC22AudioAnalyticsExternal15TailspinManager_tailspinDumpOutputOptions;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B30B8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_236C37860;
  *(_QWORD *)(inited + 32) = sub_236C360F4();
  *(_QWORD *)(inited + 40) = v26;
  sub_236BE7428(0, (unint64_t *)&qword_2542B3028);
  *(_QWORD *)(inited + 48) = sub_236C363AC();
  *(_QWORD *)(inited + 56) = sub_236C360F4();
  *(_QWORD *)(inited + 64) = v27;
  *(_QWORD *)(inited + 72) = sub_236C363AC();
  *(_QWORD *)(v1 + v24) = sub_236C15754(inited);
  v28 = OBJC_IVAR____TtC22AudioAnalyticsExternal15TailspinManager_tailspin;
  type metadata accessor for VerboseTailspin();
  swift_allocObject();
  *(_QWORD *)(v1 + v28) = sub_236C34D1C();
  v29 = OBJC_IVAR____TtC22AudioAnalyticsExternal15TailspinManager_periodicTailspinVerificationClosure;
  sub_236C3628C();
  sub_236C35ADC();
  swift_allocObject();
  *(_QWORD *)(v1 + v29) = sub_236C35AC4();
  sub_236BE6C98(&qword_2542B1D70, (uint64_t (*)(uint64_t))type metadata accessor for TailspinManager, (uint64_t)&unk_236C38C70);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_236C35A58();
  swift_release();
  swift_release();
  swift_release();
  v30 = *(NSObject **)(v1 + 64);
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = sub_236C2F958;
  *(_QWORD *)(v31 + 24) = v1;
  v51 = sub_236C2F924;
  v52 = v31;
  v32 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v48 = 1107296256;
  v49 = sub_236BF24A4;
  v50 = &block_descriptor_35;
  v33 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v30, v33);
  _Block_release(v33);
  LOBYTE(v30) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v30 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v35 = *(void **)(v1 + 64);
    v36 = swift_allocObject();
    swift_weakInit();
    v51 = sub_236C2F91C;
    v52 = v36;
    aBlock = v32;
    v48 = 1107296256;
    v49 = sub_236C2D0C0;
    v50 = &block_descriptor_41;
    v37 = _Block_copy(&aBlock);
    v38 = v35;
    swift_release();
    v39 = (int *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal15TailspinManager_defaultsChangedToken);
    swift_beginAccess();
    notify_register_dispatch("com.apple.coreaudio.audioanalytics.tailspin.defaultsChanged", v39, v38, v37);
    swift_endAccess();
    _Block_release(v37);
    swift_release();

    return v1;
  }
  return result;
}

uint64_t sub_236C2CDB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint8_t *v21;
  char v22;
  void *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v0 = sub_236C35FB0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_236C35FEC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_236C35F50();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = result;
    v26 = v4;
    v27 = v1;
    sub_236C35F2C();
    v14 = sub_236C35F44();
    v15 = sub_236C36328();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v25 = v7;
      v17 = v3;
      v18 = v0;
      v19 = v5;
      v20 = v16;
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_236BE1000, v14, v15, "Tailspin Defaults Changed Notification received. Re-reading user defaults.", v16, 2u);
      v21 = v20;
      v5 = v19;
      v0 = v18;
      v3 = v17;
      v7 = v25;
      MEMORY[0x23B800318](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_236BE7CA0();
    swift_retain();
    v22 = sub_236BE8554();
    swift_release();
    if ((v22 & 1) != 0)
    {
      aBlock[4] = sub_236C2F888;
      aBlock[5] = v13;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_236BF5A50;
      aBlock[3] = &block_descriptor_44;
      v23 = _Block_copy(aBlock);
      swift_retain();
      sub_236C35FBC();
      v28 = MEMORY[0x24BEE4AF8];
      sub_236BE6C98(&qword_2564474F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256447500);
      sub_236BFE458(&qword_256447508, &qword_256447500);
      sub_236C36448();
      MEMORY[0x23B7FF820](0, v7, v3, v23);
      _Block_release(v23);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v3, v0);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v26);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_236C2D0C0(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_236C2D0FC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (int *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal15TailspinManager_defaultsChangedToken);
  swift_beginAccess();
  notify_cancel(*v1);
  swift_release();
  swift_release();
  swift_release();

  v2 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal15TailspinManager_tailspinDirectory;
  v3 = sub_236C35728();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal15TailspinManager_logger;
  v5 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_236C2D200()
{
  sub_236C2D0FC();
  return swift_deallocClassInstance();
}

uint64_t sub_236C2D224()
{
  return type metadata accessor for TailspinManager();
}

uint64_t type metadata accessor for TailspinManager()
{
  uint64_t result;

  result = qword_2542B1D78;
  if (!qword_2542B1D78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236C2D268()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_236C35728();
  if (v1 <= 0x3F)
  {
    result = sub_236C35F50();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_236C2D358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  char *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD aBlock[7];

  v42 = a7;
  v43 = a8;
  v40 = a4;
  v41 = a6;
  v38 = a2;
  v39 = a3;
  v37 = a1;
  v46 = sub_236C35FB0();
  v49 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v45 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_236C35FEC();
  v47 = *(_QWORD *)(v11 - 8);
  v48 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_236C35DB8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = *(_QWORD *)(v8 + 56);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a5, v14);
  v18 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v19 = (v16 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 39) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v21 + v18, v17, v14);
  v22 = (uint64_t *)(v21 + v19);
  v24 = v37;
  v23 = v38;
  *v22 = v37;
  v22[1] = v23;
  v26 = v39;
  v25 = v40;
  v22[2] = v39;
  v22[3] = v25;
  v28 = v41;
  v27 = v42;
  *(_QWORD *)(v21 + v20) = v41;
  v29 = (_QWORD *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8));
  v30 = v43;
  *v29 = v27;
  v29[1] = v30;
  aBlock[4] = sub_236C2F41C;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236BF5A50;
  aBlock[3] = &block_descriptor_5;
  v31 = _Block_copy(aBlock);
  swift_retain();
  sub_236C1BE78(v24);
  sub_236C1BE78(v26);
  v32 = v28;
  swift_retain();
  sub_236C35FBC();
  v50 = MEMORY[0x24BEE4AF8];
  sub_236BE6C98(&qword_2564474F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447500);
  sub_236BFE458(&qword_256447508, &qword_256447500);
  v34 = v45;
  v33 = v46;
  sub_236C36448();
  MEMORY[0x23B7FF820](0, v13, v34, v31);
  _Block_release(v31);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v34, v33);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v48);
  return swift_release();
}

void sub_236C2D630(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, void (*a5)(uint64_t, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  os_log_type_t v30;
  uint8_t *v31;
  int v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint8_t *v41;
  os_log_t v42;
  Class v43;
  double v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  double v48;
  Class v49;
  os_log_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  unint64_t v55;
  os_log_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  char *v62;
  _QWORD v63[2];
  uint8_t *v64;
  uint64_t v65;
  os_log_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  Class isa;
  os_log_t v79;
  uint64_t v80;
  uint64_t aBlock[7];

  v72 = a6;
  v73 = a8;
  v70 = a4;
  v71 = a5;
  v69 = a3;
  v74 = a9;
  v12 = sub_236C35FB0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_236C35FEC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v75 = (char *)v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2564479E8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_236C35728();
  isa = v22[-1].isa;
  v79 = v22;
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v76 = a2;
  v77 = (uint64_t)v63 - v26;
  if (*(_BYTE *)(a1 + 48))
    v27 = 0.0;
  else
    v27 = *(double *)(a1 + 40);
  sub_236C35DA0();
  v29 = v27 - v28;
  if (v29 <= 0.0)
  {
    v68 = v17;
    swift_getKeyPath();
    swift_retain();
    sub_236C35EB4();
    swift_release();
    swift_release();
    v32 = LOBYTE(aBlock[0]);
    if ((sub_236C35A94() & 1) != 0 && v32)
    {
      notify_post("com.apple.coreaudio.audiocapturer.notification");
      v33 = sub_236C35F44();
      v34 = sub_236C36334();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        v67 = v16;
        v36 = v15;
        v37 = v13;
        v38 = v12;
        v39 = a7;
        v40 = v35;
        *(_WORD *)v35 = 0;
        _os_log_impl(&dword_236BE1000, v33, v34, "Overload detected - audio capturer notification posted.", v35, 2u);
        v41 = v40;
        a7 = v39;
        v12 = v38;
        v13 = v37;
        v15 = v36;
        v16 = v67;
        MEMORY[0x23B800318](v41, -1, -1);
      }

    }
    sub_236C2DE0C(v21);
    v43 = isa;
    v42 = v79;
    if ((*((unsigned int (**)(char *, uint64_t, os_log_t))isa + 6))(v21, 1, v79) == 1)
    {
      sub_236BE6C14((uint64_t)v21, &qword_2564479E8);
      sub_236C36280();
      *(double *)(a1 + 40) = v44 + *(double *)(a1 + 80);
      *(_BYTE *)(a1 + 48) = 0;
    }
    else
    {
      v67 = a7;
      (*((void (**)(uint64_t, char *, os_log_t))v43 + 4))(v77, v21, v42);
      v45 = sub_236C35F44();
      v46 = sub_236C3634C();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v47 = 0;
        _os_log_impl(&dword_236BE1000, v45, v46, "Dropped tailspin.", v47, 2u);
        MEMORY[0x23B800318](v47, -1, -1);
      }

      sub_236C36280();
      *(double *)(a1 + 40) = v48 + *(double *)(a1 + 72);
      *(_BYTE *)(a1 + 48) = 0;
      notify_post("com.apple.coreaudio.audioanalytics.tailspin.dropped-tailspin");
      swift_getKeyPath();
      swift_retain();
      sub_236C35EB4();
      swift_release();
      swift_release();
      if (LOBYTE(aBlock[0]) == 1)
      {
        v49 = isa;
        v50 = v79;
        (*((void (**)(char *, uint64_t, os_log_t))isa + 2))(v25, v77, v79);
        v51 = sub_236C35F44();
        v52 = sub_236C3634C();
        if (os_log_type_enabled(v51, v52))
        {
          v66 = v51;
          v53 = (uint8_t *)swift_slowAlloc();
          v65 = swift_slowAlloc();
          aBlock[0] = v65;
          v64 = v53;
          *(_DWORD *)v53 = 136380675;
          v63[1] = v53 + 4;
          v54 = sub_236C356F8();
          v80 = sub_236C0ED40(v54, v55, aBlock);
          sub_236C363F4();
          swift_bridgeObjectRelease();
          (*((void (**)(char *, os_log_t))v49 + 1))(v25, v79);
          v56 = v66;
          v57 = v64;
          _os_log_impl(&dword_236BE1000, v66, v52, "Submitting tailspin via diagnostic request. { path=%{private}s }", v64, 0xCu);
          v58 = v65;
          swift_arrayDestroy();
          MEMORY[0x23B800318](v58, -1, -1);
          MEMORY[0x23B800318](v57, -1, -1);

        }
        else
        {

          (*((void (**)(char *, os_log_t))v49 + 1))(v25, v50);
        }
        sub_236C2E4D8();
      }
      swift_getKeyPath();
      swift_retain();
      sub_236C35EB4();
      swift_release();
      swift_release();
      if ((aBlock[0] & 1) == 0 && (sub_236C2E7F4(v69, v70, v71, v72, v76, v77) & 1) != 0)
        notify_post("com.apple.coreaudio.audioanalytics.tailspin.surfaced-notification");
      v59 = swift_allocObject();
      v60 = v74;
      *(_QWORD *)(v59 + 16) = v73;
      *(_QWORD *)(v59 + 24) = v60;
      aBlock[4] = (uint64_t)sub_236BF2464;
      aBlock[5] = v59;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_236BF5A50;
      aBlock[3] = (uint64_t)&block_descriptor_11;
      v61 = _Block_copy(aBlock);
      swift_retain();
      v62 = v75;
      sub_236C35FBC();
      v80 = MEMORY[0x24BEE4AF8];
      sub_236BE6C98(&qword_2564474F8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256447500);
      sub_236BFE458(&qword_256447508, &qword_256447500);
      sub_236C36448();
      MEMORY[0x23B7FF820](0, v62, v15, v61);
      _Block_release(v61);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v62, v16);
      (*((void (**)(uint64_t, os_log_t))isa + 1))(v77, v79);
      swift_release();
    }
  }
  else
  {
    v79 = (os_log_t)sub_236C35F44();
    v30 = sub_236C3634C();
    if (os_log_type_enabled(v79, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v31 = 134217984;
      *(double *)aBlock = v29;
      sub_236C363F4();
      _os_log_impl(&dword_236BE1000, v79, v30, "Not dropping tailspin: Issue occurred before latest tailspin dump. { lateness=%f }", v31, 0xCu);
      MEMORY[0x23B800318](v31, -1, -1);
    }

  }
}

uint64_t sub_236C2DE0C@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  void *v12;
  unsigned int v13;
  id v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v38;
  uint8_t *v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  void (*v43)(char *, uint64_t);
  uint8_t *v44;
  unint64_t v45;
  void *v46;
  int v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  int v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  id v60[2];

  v57 = a1;
  v60[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_236C35F8C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_236C35728();
  v56 = *(_QWORD *)(v58 - 8);
  v6 = MEMORY[0x24BDAC7A8](v58);
  v55 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v51 - v8;
  v10 = *(void **)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal15TailspinManager_fileManager);
  v11 = (void *)sub_236C356C8();
  sub_236C35E9C();
  type metadata accessor for FileAttributeKey(0);
  sub_236BE6C98(&qword_256447538, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_236C376BC);
  v12 = (void *)sub_236C36040();
  swift_bridgeObjectRelease();
  v60[0] = 0;
  v13 = objc_msgSend(v10, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v11, 1, v12, v60);

  if (v13)
  {
    v14 = v60[0];
    sub_236C2EEF4((uint64_t)v9);
    sub_236C356F8();
    v15 = sub_236C35F98();
    MEMORY[0x24BDAC7A8](v15);
    *(&v51 - 2) = 0x20000000002;
    *((_DWORD *)&v51 - 2) = 16777654;
    sub_236C35F80();
    v16 = v9;
    v53 = (int)v60[0];
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v30 = v55;
    v31 = v56;
    v32 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
    v54 = v16;
    v33 = v16;
    v34 = v58;
    v32(v55, v33, v58);
    v35 = sub_236C35F44();
    v36 = sub_236C3634C();
    if (os_log_type_enabled(v35, v36))
    {
      v38 = swift_slowAlloc();
      v52 = v32;
      v39 = (uint8_t *)v38;
      v40 = (void *)swift_slowAlloc();
      v60[0] = v40;
      *(_DWORD *)v39 = 136380675;
      v41 = sub_236C356F8();
      v59 = sub_236C0ED40(v41, v42, (uint64_t *)v60);
      sub_236C363F4();
      swift_bridgeObjectRelease();
      v43 = *(void (**)(char *, uint64_t))(v31 + 8);
      v43(v30, v58);
      _os_log_impl(&dword_236BE1000, v35, v36, "Dropping tailspin using tailspin_dump_output api. { path=%{private}s }", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v40, -1, -1);
      v44 = v39;
      v32 = v52;
      v34 = v58;
      MEMORY[0x23B800318](v44, -1, -1);

    }
    else
    {

      v43 = *(void (**)(char *, uint64_t))(v31 + 8);
      v43(v30, v34);
    }
    objc_msgSend((id)objc_opt_self(), sel_post_arg1_arg2_arg3_arg4_, 4624, 0, 0, 0, 0);
    v45 = sub_236C34878();
    sub_236C10D78(v45);
    swift_bridgeObjectRelease();
    v46 = (void *)sub_236C36040();
    swift_bridgeObjectRelease();
    v47 = tailspin_dump_output_with_options_sync();

    if (v47)
    {
      v48 = v57;
      v49 = v54;
      v32(v57, v54, v34);
      v50 = 0;
    }
    else
    {
      v50 = 1;
      v48 = v57;
      v49 = v54;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v48, v50, 1, v34);
    sub_236C2F494();
    return ((uint64_t (*)(char *, uint64_t))v43)(v49, v34);
  }
  else
  {
    v17 = v60[0];
    v18 = (void *)sub_236C35680();

    swift_willThrow();
    v19 = v58;
    v20 = v56;
    v21 = v18;
    v22 = v18;
    v23 = sub_236C35F44();
    v24 = sub_236C36334();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = (void *)swift_slowAlloc();
      v60[0] = v26;
      *(_DWORD *)v25 = 136380675;
      swift_getErrorValue();
      v27 = sub_236C36688();
      v59 = sub_236C0ED40(v27, v28, (uint64_t *)v60);
      sub_236C363F4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_236BE1000, v23, v24, "TailspinManager failed to drop tailspin. { error=%{private}s }", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v26, -1, -1);
      MEMORY[0x23B800318](v25, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v57, 1, 1, v19);
  }
}

uint64_t sub_236C2E47C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  type metadata accessor for TailspinOptions(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  result = sub_236C358D8();
  *a1 = v3;
  return result;
}

void sub_236C2E4D8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  sub_236C35D04();
  if (!v0)
    sub_236C35DC4();
  v1 = sub_236C35CEC();
  v2 = (void *)sub_236C360D0();
  v3 = (void *)sub_236C360D0();
  v4 = (void *)sub_236C360D0();
  swift_bridgeObjectRelease();
  sub_236BECC30(v1);
  swift_bridgeObjectRelease();
  v5 = (void *)sub_236C36040();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_236C360D0();
  sub_236C356EC();
  v7 = (void *)sub_236C360D0();
  swift_bridgeObjectRelease();
  v8 = 0;
  DRSubmitLog();

}

uint64_t sub_236C2E7F4(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256448040);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_236C35B84();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_236C35A94() & 1) != 0)
  {
    if (a1)
    {
      swift_retain();
      if (isTapToRadarAvailable())
      {
        v16 = a1(a5, v24);
        if (v16)
        {
          v17 = (void *)v16;
          sub_236C35C38();
          sub_236C35C2C();
          sub_236C35C20();
          sub_236C1D074((uint64_t)a1);
          swift_release();

          return 1;
        }
        v19 = sub_236C35F44();
        v20 = sub_236C36334();
        if (!os_log_type_enabled(v19, v20))
          goto LABEL_16;
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        v22 = "RadarDraft object is nil. Not surfacing notification.";
      }
      else
      {
        v19 = sub_236C35F44();
        v20 = sub_236C36334();
        if (!os_log_type_enabled(v19, v20))
        {
LABEL_16:
          sub_236C1D074((uint64_t)a1);

          return 0;
        }
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        v22 = "TapToRadarKit is not available.";
      }
      _os_log_impl(&dword_236BE1000, v19, v20, v22, v21, 2u);
      MEMORY[0x23B800318](v21, -1, -1);
      goto LABEL_16;
    }
    return 1;
  }
  if (!a3)
    return 1;
  swift_retain();
  a3(a5, v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_236C35C38();
    sub_236C35C2C();
    sub_236C35C14();
    sub_236C1D074((uint64_t)a3);
    swift_release();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 1;
  }
  sub_236C1D074((uint64_t)a3);
  sub_236BE6C14((uint64_t)v11, &qword_256448040);
  return 0;
}

uint64_t sub_236C2EACC()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t result;
  char v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  uint64_t (*v14)();
  uint64_t v15;

  v1 = *(NSObject **)(v0 + 64);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_236BF27D4;
  *(_QWORD *)(v2 + 24) = v0;
  v14 = sub_236BF2464;
  v15 = v2;
  v3 = MEMORY[0x24BDAC760];
  v10 = MEMORY[0x24BDAC760];
  v11 = 1107296256;
  v12 = sub_236BF24A4;
  v13 = &block_descriptor_17;
  v4 = _Block_copy(&v10);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v1 & 1) != 0)
  {
    __break(1u);
    return result;
  }
  swift_retain();
  v6 = sub_236BE8554();
  swift_release();
  if ((v6 & 1) != 0)
  {
    v7 = *(NSObject **)(v0 + 56);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = sub_236C2F844;
    *(_QWORD *)(v8 + 24) = v0;
    v14 = sub_236C2F924;
    v15 = v8;
    v10 = v3;
    v11 = 1107296256;
    v12 = sub_236BF24A4;
    v13 = &block_descriptor_24_0;
    v9 = _Block_copy(&v10);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v7, v9);
    _Block_release(v9);
    LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
    swift_release_n();
    result = swift_release();
    if ((v7 & 1) == 0)
      return result;
    __break(1u);
  }
  return swift_release();
}

uint64_t sub_236C2ECCC()
{
  uint64_t result;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  result = sub_236C34950();
  if ((result & 1) == 0)
  {
    v1 = sub_236C35F44();
    v2 = sub_236C36334();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v3 = 0;
      _os_log_impl(&dword_236BE1000, v1, v2, "Tailspin not configured for verbosity. Performing setup again.", v3, 2u);
      MEMORY[0x23B800318](v3, -1, -1);
    }

    return sub_236C34108();
  }
  return result;
}

uint64_t sub_236C2ED84@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  sub_236C358C0();
  v4 = type metadata accessor for TailspinOptions(0);
  sub_236C358C0();
  *(_BYTE *)(a1 + *(int *)(v4 + 24)) = sub_236C35E6C() & 1;
  *(_BYTE *)(a1 + *(int *)(v4 + 28)) = sub_236C35E18() & 1;
  result = sub_236C30AE4();
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_236C2EE1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1630);
  sub_236C358C0();
  type metadata accessor for OverloadOptions(0);
  sub_236C358C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  sub_236C358C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1610);
  sub_236C358C0();
  sub_236C358C0();
  sub_236C358C0();
  result = sub_236C30CB4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_236C2EEF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v19 = a1;
  v1 = sub_236C35698();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_236C357DC();
  v17 = *(_QWORD *)(v5 - 8);
  v18 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_236C35DA0();
  sub_236C357AC();
  v8 = sub_236C35D04();
  if (v9)
    v16 = v8;
  else
    v16 = sub_236C35DC4();
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v11 = (void *)sub_236C360D0();
  objc_msgSend(v10, sel_setDateFormat_, v11);

  v12 = (void *)sub_236C357A0();
  v13 = objc_msgSend(v10, sel_stringFromDate_, v12);

  sub_236C360F4();
  v20 = 0;
  v21 = 0xE000000000000000;
  sub_236C364C0();
  swift_bridgeObjectRelease();
  v20 = 0xD000000000000013;
  v21 = 0x8000000236C3BA40;
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCD7A0], v1);
  sub_236BED490();
  sub_236C35710();

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v18);
  return swift_bridgeObjectRelease();
}

uint64_t sub_236C2F180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSString *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;

  v0 = sub_236C35698();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_236C35728();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_236C35A94() & 1) != 0)
    return sub_236C35E48();
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v9 = NSTemporaryDirectory();
  sub_236C360F4();

  sub_236C356B0();
  swift_bridgeObjectRelease();
  v12 = 0x6E6970736C696154;
  v13 = 0xE900000000000073;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDCD7A0], v0);
  sub_236BED490();
  sub_236C3571C();

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_236C2F348(uint64_t result)
{
  if ((result & 1) != 0)
    return sub_236C2EACC();
  return result;
}

uint64_t sub_236C2F354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_236C35DB8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  if (*(_QWORD *)(v0 + v4 + 16))
    swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_236C2F41C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_236C35DB8() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_236C2D630(*(_QWORD *)(v0 + 16), v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(void (**)(uint64_t, uint64_t))(v0 + v3 + 16), *(_QWORD *)(v0 + v3 + 24), *(_QWORD *)(v0 + ((v3 + 39) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_236C2F494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  int v5;
  void *v6;
  _DWORD *v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[3];
  uint64_t v17;

  v0 = sub_236C35F50();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_236C35F74();
  if ((result & 0x100000000) != 0)
  {
    v5 = result;
    LODWORD(v17) = result;
    sub_236C2F7F0();
    swift_willThrowTypedImpl();
    v6 = (void *)swift_allocError();
    *v7 = v5;
    sub_236C35F2C();
    v8 = v6;
    v9 = v6;
    v10 = sub_236C35F44();
    v11 = sub_236C36334();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v17 = v13;
      *(_DWORD *)v12 = 136380675;
      v16[1] = v12 + 4;
      swift_getErrorValue();
      v14 = sub_236C36688();
      v16[2] = sub_236C0ED40(v14, v15, &v17);
      sub_236C363F4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_236BE1000, v10, v11, "Failed to close file descriptor. { error=%{private}s }", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v13, -1, -1);
      MEMORY[0x23B800318](v12, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

uint64_t sub_236C2F6D0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;
  int v3;
  _DWORD *v4;

  result = sub_236C35F68();
  v3 = result;
  if ((result & 0x100000000) != 0)
  {
    sub_236C2F7F0();
    swift_willThrowTypedImpl();
    result = swift_allocError();
    *v4 = v3;
  }
  else
  {
    *a1 = result;
  }
  return result;
}

uint64_t sub_236C2F758@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  result = sub_236C358D8();
  *a1 = v3;
  return result;
}

uint64_t sub_236C2F79C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_236C2F7C0@<X0>(_DWORD *a1@<X8>)
{
  return sub_236C2F6D0(a1);
}

unint64_t sub_236C2F7F0()
{
  unint64_t result;

  result = qword_256448048;
  if (!qword_256448048)
  {
    result = MEMORY[0x23B80027C](MEMORY[0x24BEE6000], MEMORY[0x24BEE5FF8]);
    atomic_store(result, (unint64_t *)&qword_256448048);
  }
  return result;
}

uint64_t sub_236C2F834()
{
  return swift_deallocObject();
}

uint64_t sub_236C2F844()
{
  return sub_236C35AD0();
}

uint64_t sub_236C2F878()
{
  return swift_deallocObject();
}

uint64_t sub_236C2F888()
{
  return sub_236C2ECCC();
}

uint64_t sub_236C2F8A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_236C2F8E8()
{
  return swift_deallocObject();
}

uint64_t sub_236C2F8F8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_236C2F91C()
{
  return sub_236C2CDB0();
}

unint64_t static TailspinKeys.isEnabledKey.getter()
{
  return 0xD000000000000017;
}

unint64_t static TailspinKeys.isReadyKey.getter()
{
  return 0xD000000000000019;
}

void sub_236C2F994()
{
  qword_2542B30C8 = (uint64_t)&unk_25082E690;
}

uint64_t static TailspinKeys.all.getter()
{
  if (qword_2542B30D0 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for TailspinKeys()
{
  return &type metadata for TailspinKeys;
}

uint64_t sub_236C2F9F8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  return sub_236C358B4();
}

uint64_t sub_236C2FA44()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TailspinStatus()
{
  return objc_opt_self();
}

uint64_t sub_236C2FA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _QWORD *v7;
  void (*v8)(uint64_t, _BYTE *, uint64_t);
  void (*v9)(_BYTE *, uint64_t);
  uint64_t v10;
  _BYTE v12[16];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_236C35B90();
  sub_236C35C80();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_236C35C74();
  v12[15] = 0;
  sub_236C358F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B3058);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + ((*(unsigned int *)(*(_QWORD *)v6 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  v7 = (_QWORD *)MEMORY[0x24BEE27A8];
  v8 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v3 + 16);
  v8(v6 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v6 + 16), v5, v2);
  v9 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v9(v5, v2);
  *(_QWORD *)(v0 + 24) = v6;
  v12[14] = 0;
  sub_236C358F0();
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + ((*(unsigned int *)(*(_QWORD *)v10 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  v8(v10 + *(_QWORD *)(*v7 + *(_QWORD *)v10 + 16), v5, v2);
  v9(v5, v2);
  *(_QWORD *)(v1 + 32) = v10;
  return v1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for TailspinRequest()
{
  return &type metadata for TailspinRequest;
}

char *sub_236C2FCDC(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1630);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8(&a1[a3[5]], &a2[a3[5]], v7);
    v9 = a3[6];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v14 = a3[7];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1610);
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v18(&a1[a3[8]], &a2[a3[8]], v17);
    v13(&a1[a3[9]], &a2[a3[9]], v12);
  }
  return a1;
}

uint64_t sub_236C2FE1C(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1630);
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  v6 = a1 + a2[6];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v12(v6, v7);
  v8 = a1 + a2[7];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1610);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(a1 + a2[8], v9);
  return ((uint64_t (*)(uint64_t, uint64_t))v12)(a1 + a2[9], v7);
}

uint64_t sub_236C2FF08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1630);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1610);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v17(v14, v15, v16);
  v17(a1 + a3[8], a2 + a3[8], v16);
  v12(a1 + a3[9], a2 + a3[9], v11);
  return a1;
}

uint64_t sub_236C3001C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1630);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24);
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1610);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  v17(a1 + a3[8], a2 + a3[8], v16);
  v12(a1 + a3[9], a2 + a3[9], v11);
  return a1;
}

uint64_t sub_236C30130(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1630);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1610);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v17(v14, v15, v16);
  v17(a1 + a3[8], a2 + a3[8], v16);
  v12(a1 + a3[9], a2 + a3[9], v11);
  return a1;
}

uint64_t sub_236C30244(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1630);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1610);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40);
  v17(v14, v15, v16);
  v17(a1 + a3[8], a2 + a3[8], v16);
  v12(a1 + a3[9], a2 + a3[9], v11);
  return a1;
}

uint64_t sub_236C30358()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_236C30364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1630);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 24);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1610);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 28);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_236C30408()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_236C30414(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1630);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1610);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 28);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for OverloadOptions(uint64_t a1)
{
  return sub_236BEB454(a1, (uint64_t *)&unk_2542B14C0);
}

void sub_236C304D4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_236C305A8(319, &qword_2542B1638);
  if (v0 <= 0x3F)
  {
    sub_236C305A8(319, (unint64_t *)&qword_2542B1628);
    if (v1 <= 0x3F)
    {
      sub_236C305A8(319, &qword_2542B1618);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_236C305A8(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_236C358E4();
    if (!v4)
      atomic_store(v3, a2);
  }
}

_QWORD *sub_236C305EC(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((_QWORD *)((char *)a1 + a3[5]), (_QWORD *)((char *)a2 + a3[5]), v7);
    v9 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
  }
  return a1;
}

uint64_t sub_236C306A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_236C30728(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_236C307B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_236C3083C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_236C308C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_236C308D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_236C30960()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_236C3096C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

void sub_236C309E8()
{
  unint64_t v0;

  sub_236C305A8(319, (unint64_t *)&qword_2542B1628);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_236C30A6C()
{
  unsigned __int8 v1;

  type metadata accessor for TailspinOptions(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  sub_236C358D8();
  return v1;
}

uint64_t sub_236C30AB4()
{
  unsigned __int8 v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  sub_236C358D8();
  return v1;
}

uint64_t sub_236C30AE4()
{
  sub_236C364C0();
  sub_236C36184();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  sub_236C358D8();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  type metadata accessor for TailspinOptions(0);
  sub_236C358D8();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C36184();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_236C30CB4()
{
  sub_236C364C0();
  sub_236C36184();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1630);
  sub_236C358D8();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  type metadata accessor for OverloadOptions(0);
  sub_236C358D8();
  sub_236C3664C();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  sub_236C358D8();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1610);
  sub_236C358D8();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C358D8();
  sub_236C36184();
  swift_bridgeObjectRelease();
  sub_236C36184();
  sub_236C358D8();
  sub_236C36184();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_236C30F70()
{
  sub_236C358F0();
  type metadata accessor for OverloadOptions(0);
  sub_236C358F0();
  sub_236C358F0();
  sub_236C358F0();
  sub_236C358F0();
  return sub_236C358F0();
}

_QWORD *_s22AudioAnalyticsExternal15TailspinRequestV12NotificationVwxx_0(_QWORD *result)
{
  _QWORD *v1;

  v1 = result;
  if (*result)
    result = (_QWORD *)swift_release();
  if (v1[2])
    return (_QWORD *)swift_release();
  return result;
}

_QWORD *_s22AudioAnalyticsExternal15TailspinRequestV12NotificationVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*a2)
  {
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = a2[2];
  if (v5)
  {
    v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  return a1;
}

_QWORD *_s22AudioAnalyticsExternal15TailspinRequestV12NotificationVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    sub_236BE6C14((uint64_t)a1, &qword_256448050);
  }
  else if (v4)
  {
    v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v7 = a2[2];
  if (!a1[2])
  {
    if (v7)
    {
      v9 = a2[3];
      a1[2] = v7;
      a1[3] = v9;
      swift_retain();
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v7)
  {
    sub_236BE6C14((uint64_t)(a1 + 2), &qword_256448058);
    goto LABEL_14;
  }
  v8 = a2[3];
  a1[2] = v7;
  a1[3] = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s22AudioAnalyticsExternal15TailspinRequestV12NotificationVwta_0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)a1)
  {
    if (*a2)
    {
      v4 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v4;
      swift_release();
      goto LABEL_6;
    }
    sub_236BE6C14(a1, &qword_256448050);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  v5 = a2[2];
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_10:
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v5)
  {
    sub_236BE6C14(a1 + 16, &qword_256448058);
    goto LABEL_10;
  }
  v6 = a2[3];
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  swift_release();
  return a1;
}

uint64_t _s22AudioAnalyticsExternal15TailspinRequestV12NotificationVwet_0(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s22AudioAnalyticsExternal15TailspinRequestV12NotificationVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TailspinRequest.Notification()
{
  return &type metadata for TailspinRequest.Notification;
}

_QWORD *destroy for TailspinRequest.Notification.CustomerNotification(_QWORD *result)
{
  if (*result >= 0xFFFFFFFFuLL)
    return (_QWORD *)swift_release();
  return result;
}

uint64_t sub_236C31444(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_236C3145C(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for TailspinRequest.Notification.CustomerNotification()
{
  return &type metadata for TailspinRequest.Notification.CustomerNotification;
}

uint64_t _s22AudioAnalyticsExternal15TailspinRequestV12NotificationV20InternalNotificationOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_retain();
  }
  return a1;
}

unint64_t *_s22AudioAnalyticsExternal15TailspinRequestV12NotificationV20InternalNotificationOwca_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *_s22AudioAnalyticsExternal15TailspinRequestV12NotificationV20InternalNotificationOwta_0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  if (*a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_release();
  return a1;
}

uint64_t _s22AudioAnalyticsExternal15TailspinRequestV12NotificationV20InternalNotificationOwet_0(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t _s22AudioAnalyticsExternal15TailspinRequestV12NotificationV20InternalNotificationOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TailspinRequest.Notification.InternalNotification()
{
  return &type metadata for TailspinRequest.Notification.InternalNotification;
}

uint64_t sub_236C31688@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  result = sub_236C358D8();
  *a1 = v3;
  return result;
}

uint64_t *TailspinWorker.__allocating_init(with:)(__int128 *a1)
{
  swift_allocObject();
  return TailspinWorker.init(with:)(a1);
}

uint64_t sub_236C31704@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  result = sub_236C358D8();
  *a1 = v3;
  return result;
}

uint64_t static TailspinWorker.initialize(config:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B15C0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_236C35CC8();
  v4 = *(_QWORD *)(v3 + 16);
  v5 = sub_236C35A4C();
  v6 = *(_QWORD *)(v5 - 8);
  if (v4)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v2, v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5);
    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v2, v7, 1, v5);
  swift_bridgeObjectRelease();
  sub_236C35A4C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) == 1)
  {
    sub_236BE6C14((uint64_t)v2, &qword_2542B15C0);
    v8 = 0;
  }
  else
  {
    v8 = sub_236C35A1C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v2, v5);
  }
  swift_beginAccess();
  qword_2542B15D0 = v8;
  return swift_bridgeObjectRelease();
}

Swift::Bool __swiftcall TailspinWorker.start()()
{
  uint64_t v0;

  swift_beginAccess();
  *(_BYTE *)(v0 + 16) = 1;
  return 1;
}

void TailspinWorker.process(message:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t ObjectType;
  uint64_t v41;
  double (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint8_t *v61;
  uint64_t v62;
  double v63;
  double v64;
  uint64_t v65;
  double v66;
  int v67;
  double v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t, uint64_t);
  NSObject *v70;
  os_log_type_t v71;
  int v72;
  _BOOL4 v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  os_log_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  os_log_t v96[2];
  uint8_t *v97;
  uint64_t v98;
  uint64_t (*v99)(uint64_t, uint64_t);
  uint64_t v100;
  __int128 v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;

  v3 = v2;
  v4 = v1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256448060);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_236C35A40();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v108 = (char *)v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v96 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1640);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (uint64_t *)((char *)v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((sub_236C32470() & 1) != 0)
  {
    v106 = a1;
    v18 = sub_236C35D10();
    if (*(_QWORD *)(v18 + 16))
    {
      v107 = v1;
      v19 = sub_236BEE010(0x79745F6575737369, 0xEA00000000006570);
      if ((v20 & 1) != 0)
      {
        v21 = v19;
        v105 = v10;
        v22 = v14;
        v23 = *(_QWORD *)(v18 + 56);
        v24 = sub_236C3592C();
        v103 = v2;
        v104 = v9;
        v25 = *(_QWORD *)(v24 - 8);
        v26 = v23 + *(_QWORD *)(v25 + 72) * v21;
        v14 = v22;
        v10 = v105;
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v25 + 16))(v17, v26, v24);
        v27 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v25 + 56);
        v3 = v103;
        v9 = v104;
        v27(v17, 0, 1, v24);
      }
      else
      {
        v24 = sub_236C3592C();
        (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v17, 1, 1, v24);
      }
      v4 = v107;
    }
    else
    {
      v24 = sub_236C3592C();
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v17, 1, 1, v24);
    }
    swift_bridgeObjectRelease();
    sub_236C3592C();
    v28 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v28 + 48))(v17, 1, v24) == 1)
    {
      sub_236BE6C14((uint64_t)v17, &qword_2542B1640);
    }
    else if ((*(unsigned int (**)(uint64_t *, uint64_t))(v28 + 88))(v17, v24) == *MEMORY[0x24BE09AD0])
    {
      (*(void (**)(uint64_t *, uint64_t))(v28 + 96))(v17, v24);
      v29 = *v17;
      v30 = v17[1];
      swift_bridgeObjectRetain();
      sub_236C35A28();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        sub_236BE6C14((uint64_t)v8, &qword_256448060);
        swift_bridgeObjectRetain();
        v31 = sub_236C35F44();
        v32 = sub_236C3634C();
        if (os_log_type_enabled(v31, v32))
        {
          v33 = v29;
          v34 = (uint8_t *)swift_slowAlloc();
          v35 = swift_slowAlloc();
          v110 = v35;
          *(_DWORD *)v34 = 136380675;
          swift_bridgeObjectRetain();
          v109 = sub_236C0ED40(v33, v30, &v110);
          sub_236C363F4();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_236BE1000, v31, v32, "Unrecognized issueType. { issueType = %{private}s }", v34, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B800318](v35, -1, -1);
          MEMORY[0x23B800318](v34, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v8, v9);
        v36 = sub_236C32704();
        if (*(_QWORD *)(v36 + 16) && (v37 = sub_236C01D58((uint64_t)v14), (v38 & 1) != 0))
        {
          v107 = v4;
          v101 = *(_OWORD *)(*(_QWORD *)(v36 + 56) + 16 * v37);
          v39 = v101;
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          ObjectType = swift_getObjectType();
          v41 = *((_QWORD *)&v101 + 1);
          v42 = *(double (**)(uint64_t, uint64_t))(*((_QWORD *)&v101 + 1) + 24);
          v104 = v39;
          v43 = ((uint64_t (*)(uint64_t, _QWORD))v42)(ObjectType, *((_QWORD *)&v101 + 1));
          if ((v43 & 0x100000000) != 0
            || (v44 = v43,
                (*(void (**)(uint64_t, uint64_t))(v41 + 32))(ObjectType, v41),
                swift_retain(),
                swift_release(),
                sub_236C35EA8(),
                swift_release(),
                v110 <= v44))
          {
            sub_236C36280();
            v64 = v63;
            v99 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 32);
            v65 = v99(ObjectType, v41);
            v66 = *(double *)(v65 + 24);
            v67 = *(unsigned __int8 *)(v65 + 32);
            swift_release();
            v68 = 0.0;
            if (!v67)
              v68 = v66;
            if (v42(ObjectType, v41) <= v64 - v68
              && (v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 16),
                  v100 = ObjectType,
                  (v69(v106, v107 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_session, ObjectType, v41) & 1) != 0))
            {
              v105 = v10;
              swift_unknownObjectRetain_n();
              v70 = sub_236C35F44();
              v71 = sub_236C3634C();
              v72 = v71;
              v73 = os_log_type_enabled(v70, v71);
              v102 = v14;
              if (v73)
              {
                LODWORD(v103) = v72;
                v74 = swift_slowAlloc();
                v98 = swift_slowAlloc();
                v110 = v98;
                *(_DWORD *)v74 = 136380675;
                v96[1] = (os_log_t)(v74 + 4);
                v97 = (uint8_t *)v74;
                v75 = v108;
                v76 = v100;
                (*(void (**)(uint64_t, uint64_t))(v41 + 56))(v100, v41);
                v77 = sub_236C35A34();
                v96[0] = v70;
                v78 = v77;
                v80 = v79;
                (*(void (**)(char *, uint64_t))(v105 + 8))(v75, v9);
                v109 = sub_236C0ED40(v78, v80, &v110);
                sub_236C363F4();
                swift_unknownObjectRelease_n();
                swift_bridgeObjectRelease();
                v81 = v96[0];
                v82 = v97;
                _os_log_impl(&dword_236BE1000, v96[0], (os_log_type_t)v103, "Preconditions met. Submitting tailspin request. { case=%{private}s }", v97, 0xCu);
                v83 = v98;
                swift_arrayDestroy();
                MEMORY[0x23B800318](v83, -1, -1);
                MEMORY[0x23B800318](v82, -1, -1);

              }
              else
              {
                swift_unknownObjectRelease_n();

                v76 = v100;
              }
              v84 = v9;
              v103 = v3;
              v85 = v99(v76, v41);
              sub_236C36280();
              *(_QWORD *)(v85 + 24) = v86;
              *(_BYTE *)(v85 + 32) = 0;
              swift_release();
              if (qword_2542B1D60 != -1)
                swift_once();
              v108 = (char *)qword_2542B4180;
              v87 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 64))(v76, v41);
              v89 = v88;
              v91 = v90;
              v93 = v92;
              v94 = *(void **)(v107 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_requestQueue);
              v95 = swift_allocObject();
              *(_OWORD *)(v95 + 16) = v101;
              swift_unknownObjectRetain();
              sub_236C2D358(v87, v89, v91, v93, v106, v94, (uint64_t)sub_236C33238, v95);
              swift_release();
              sub_236C1D074(v87);
              sub_236C1D074(v91);
              swift_unknownObjectRelease();
              (*(void (**)(char *, uint64_t))(v105 + 8))(v102, v84);
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
              swift_unknownObjectRelease();
            }
          }
          else
          {
            v100 = ObjectType;
            v45 = v10;
            swift_unknownObjectRetain_n();
            v46 = sub_236C35F44();
            v47 = sub_236C3634C();
            v48 = v47;
            if (os_log_type_enabled(v46, v47))
            {
              v49 = swift_slowAlloc();
              v103 = v3;
              v50 = v49;
              v107 = swift_slowAlloc();
              v110 = v107;
              *(_DWORD *)v50 = 136380931;
              *(_QWORD *)&v101 = v50 + 4;
              v51 = *(void (**)(uint64_t, uint64_t))(v41 + 56);
              v105 = v44;
              v52 = v108;
              LODWORD(v106) = v48;
              v51(v100, v41);
              v53 = sub_236C35A34();
              v55 = v54;
              v102 = v14;
              v56 = *(void (**)(char *, uint64_t))(v45 + 8);
              v56(v52, v9);
              v109 = sub_236C0ED40(v53, v55, &v110);
              sub_236C363F4();
              swift_unknownObjectRelease_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v50 + 12) = 1024;
              LODWORD(v109) = v105;
              sub_236C363F4();
              _os_log_impl(&dword_236BE1000, v46, (os_log_type_t)v106, "TailspinCase limited by maxNumSuccesfulRequests. { case=%{private}s, maxNumSuccesfulRequests=%u }", (uint8_t *)v50, 0x12u);
              v57 = v107;
              swift_arrayDestroy();
              MEMORY[0x23B800318](v57, -1, -1);
              MEMORY[0x23B800318](v50, -1, -1);
              swift_unknownObjectRelease();

              v56(v102, v9);
            }
            else
            {

              swift_unknownObjectRelease_n();
              (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v9);
            }
          }
        }
        else
        {
          v105 = v10;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          v58 = sub_236C35F44();
          v59 = sub_236C3634C();
          if (os_log_type_enabled(v58, v59))
          {
            v102 = v14;
            v60 = v29;
            v61 = (uint8_t *)swift_slowAlloc();
            v62 = swift_slowAlloc();
            v110 = v62;
            v104 = v9;
            *(_DWORD *)v61 = 136380675;
            swift_bridgeObjectRetain();
            v109 = sub_236C0ED40(v60, v30, &v110);
            sub_236C363F4();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_236BE1000, v58, v59, "TailspinCase for this issue is not enabled. { issueType=%{private}s }", v61, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B800318](v62, -1, -1);
            MEMORY[0x23B800318](v61, -1, -1);

            (*(void (**)(char *, uint64_t))(v105 + 8))(v102, v104);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            (*(void (**)(char *, uint64_t))(v105 + 8))(v14, v9);
          }
        }
      }
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t))(v28 + 8))(v17, v24);
    }
  }
}

uint64_t sub_236C32470()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0;
  if (sub_236C35D70() != 7 || (unsigned __int16)sub_236C35CF8() != 6)
    return 0;
  objc_msgSend((id)objc_opt_self(), sel_post_arg1_arg2_arg3_arg4_, 4623, 0, 0, 0, 0);
  if ((sub_236C327F8() & 1) == 0)
  {
    v6 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_tailspinOptions;
    swift_beginAccess();
    v7 = type metadata accessor for TailspinOptions(0);
    if (*(_BYTE *)(v6 + *(int *)(v7 + 24)) != 1 || (*(_BYTE *)(v6 + *(int *)(v7 + 28)) & 1) != 0)
      return 1;
    swift_retain();
    v2 = sub_236C35F44();
    v3 = sub_236C3631C();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v4 = 134217984;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_session), *(_QWORD *)(v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_session + 24));
      sub_236C35AF4();
      sub_236C363F4();
      swift_release();
      v5 = "Ignoring overload: Audio Captures enabled. { reporterID=%lld }";
      goto LABEL_11;
    }
LABEL_12:
    swift_release();
    goto LABEL_13;
  }
  swift_retain();
  v2 = sub_236C35F44();
  v3 = sub_236C3631C();
  if (!os_log_type_enabled(v2, v3))
    goto LABEL_12;
  v4 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)v4 = 134217984;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_session), *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_session + 24));
  sub_236C35AF4();
  sub_236C363F4();
  swift_release();
  v5 = "Ignoring overload: Sysdiagnose in progress. { reporterID=%lld }";
LABEL_11:
  _os_log_impl(&dword_236BE1000, v2, v3, v5, v4, 0xCu);
  MEMORY[0x23B800318](v4, -1, -1);
LABEL_13:

  return 0;
}

unint64_t sub_236C32704()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker____lazy_storage___tailspinCases;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker____lazy_storage___tailspinCases))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker____lazy_storage___tailspinCases);
  }
  else
  {
    v2 = sub_236C32CA8();
    *(_QWORD *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_236C32764(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
  swift_retain();
  swift_release();
  sub_236C33390();
  sub_236C35EE4();
  return swift_release();
}

Swift::Void __swiftcall TailspinWorker.stop()()
{
  uint64_t v0;

  swift_beginAccess();
  *(_BYTE *)(v0 + 16) = 0;
}

uint64_t sub_236C327F8()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  id v14[2];

  v14[1] = *(id *)MEMORY[0x24BDAC8D0];
  LOBYTE(v13) = 0;
  v14[0] = 0;
  if (objc_msgSend((id)objc_opt_self(), sel_isInProgressWithDestination_error_, &v13, v14))
  {
    v0 = v13;
    v1 = v14[0];
  }
  else
  {
    v2 = v14[0];
    v3 = (void *)sub_236C35680();

    swift_willThrow();
    v4 = v3;
    v5 = v3;
    v6 = sub_236C35F44();
    v7 = sub_236C36334();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = (void *)swift_slowAlloc();
      v14[0] = v9;
      *(_DWORD *)v8 = 136380675;
      swift_getErrorValue();
      v10 = sub_236C36688();
      v13 = sub_236C0ED40(v10, v11, (uint64_t *)v14);
      sub_236C363F4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_236BE1000, v6, v7, "isSysdiagnoseInProgress failed. { error=%{private}s }", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B800318](v9, -1, -1);
      MEMORY[0x23B800318](v8, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  return v0;
}

uint64_t static TailspinWorker.enabledCaseNames.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static TailspinWorker.enabledCaseNames.setter(uint64_t a1)
{
  swift_beginAccess();
  qword_2542B15D0 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static TailspinWorker.enabledCaseNames.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t TailspinWorker.isStarted.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t TailspinWorker.isStarted.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = a1;
  return result;
}

uint64_t (*TailspinWorker.isStarted.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t TailspinWorker.workerConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TailspinWorker.workerConfig.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*TailspinWorker.workerConfig.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_236C32CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  id (**v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  id (**v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256448070);
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447A40);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_236C37720;
  v4 = v27 + v3;
  v5 = (uint64_t *)(v27 + v3 + *(int *)(v0 + 48));
  v6 = *MEMORY[0x24BE09BC0];
  v7 = sub_236C35A40();
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v4, v6, v7);
  type metadata accessor for HALOverloadCase(0);
  swift_allocObject();
  *v5 = sub_236C19890(0, 0, 1);
  v5[1] = (uint64_t)&off_25082F538;
  v9 = (uint64_t *)(v4 + v2 + *(int *)(v0 + 48));
  v10 = *MEMORY[0x24BE09BB0];
  v8();
  type metadata accessor for PHASEIssueCase();
  v11 = swift_allocObject();
  ((void (*)(uint64_t, uint64_t, uint64_t))v8)(v11 + OBJC_IVAR____TtC22AudioAnalyticsExternal14PHASEIssueCase_name, v10, v7);
  v12 = (id (**)(uint64_t, uint64_t))(v11
                                             + OBJC_IVAR____TtC22AudioAnalyticsExternal14PHASEIssueCase_tailspinRequest);
  *v12 = sub_236C1E0F8;
  v12[1] = 0;
  v12[2] = 0;
  v12[3] = 0;
  v13 = OBJC_IVAR____TtC22AudioAnalyticsExternal14PHASEIssueCase_state;
  type metadata accessor for TailspinCaseState();
  v14 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447550);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v14 + 16) = v15;
  *(_QWORD *)(v14 + 24) = 0;
  *(_BYTE *)(v14 + 32) = 1;
  *(_QWORD *)(v11 + v13) = v14;
  *(_DWORD *)(v11 + 16) = 1;
  *(_BYTE *)(v11 + 20) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *v9 = v11;
  v9[1] = (uint64_t)&off_25082F6E8;
  v16 = (uint64_t *)(v4 + 2 * v2 + *(int *)(v0 + 48));
  v17 = *MEMORY[0x24BE09BB8];
  v8();
  type metadata accessor for SiriTTSCase();
  v18 = swift_allocObject();
  ((void (*)(uint64_t, uint64_t, uint64_t))v8)(v18 + OBJC_IVAR____TtC22AudioAnalyticsExternal11SiriTTSCase_name, v17, v7);
  v19 = (id (**)(uint64_t, uint64_t))(v18
                                             + OBJC_IVAR____TtC22AudioAnalyticsExternal11SiriTTSCase_tailspinRequest);
  *v19 = sub_236C29028;
  v19[1] = 0;
  v19[2] = 0;
  v19[3] = 0;
  v20 = OBJC_IVAR____TtC22AudioAnalyticsExternal11SiriTTSCase_state;
  v21 = swift_allocObject();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v21 + 16) = v22;
  *(_QWORD *)(v21 + 24) = 0;
  *(_BYTE *)(v21 + 32) = 1;
  *(_QWORD *)(v18 + v20) = v21;
  *(_DWORD *)(v18 + 16) = 1;
  *(_BYTE *)(v18 + 20) = 0;
  *(_QWORD *)(v18 + 24) = 0;
  *v16 = v18;
  v16[1] = (uint64_t)&off_25082F9D0;
  v23 = sub_236C1586C(v27);
  swift_beginAccess();
  v24 = qword_2542B15D0;
  if (qword_2542B15D0)
  {
    swift_bridgeObjectRetain();
    v25 = sub_236C33F54(v23, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v25;
  }
  return v23;
}

uint64_t TailspinWorker.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_workerConfig;
  v2 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_236BF2798(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_tailspinOptions);
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_logger;
  v4 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_session);

  return v0;
}

uint64_t TailspinWorker.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_workerConfig;
  v2 = sub_236C35CB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_236BF2798(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_tailspinOptions);
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_logger;
  v4 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_session);

  return swift_deallocClassInstance();
}

void sub_236C33148(uint64_t a1)
{
  TailspinWorker.process(message:)(a1);
}

uint64_t sub_236C33168@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC22AudioAnalyticsExternal14TailspinWorker_workerConfig;
  swift_beginAccess();
  v4 = sub_236C35CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_236C331D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TailspinOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_236C33214()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_236C33238()
{
  uint64_t v0;

  return sub_236C32764(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_236C33240()
{
  return sub_236BE6C98(&qword_2542B1510, (uint64_t (*)(uint64_t))type metadata accessor for TailspinWorker, (uint64_t)&protocol conformance descriptor for TailspinWorker);
}

uint64_t type metadata accessor for TailspinWorker()
{
  uint64_t result;

  result = qword_2542B1C50;
  if (!qword_2542B1C50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_236C332A8()
{
  return type metadata accessor for TailspinWorker();
}

uint64_t sub_236C332B0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_236C35CB0();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TailspinOptions(319);
    if (v2 <= 0x3F)
    {
      result = sub_236C35F50();
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for TailspinWorker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TailspinWorker.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

unint64_t sub_236C33390()
{
  unint64_t result;

  result = qword_256448068;
  if (!qword_256448068)
  {
    result = MEMORY[0x23B80027C](MEMORY[0x24BEE4538], MEMORY[0x24BEE44F0]);
    atomic_store(result, (unint64_t *)&qword_256448068);
  }
  return result;
}

uint64_t sub_236C333D4(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;

  v8 = sub_236C3592C();
  v49 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v48 = (char *)&v43 - v12;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  v47 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1538);
  result = sub_236C36568();
  v14 = result;
  v44 = a1;
  v45 = a2;
  if (a2 < 1)
    v15 = 0;
  else
    v15 = *a1;
  v16 = 0;
  v17 = result + 64;
  v18 = v47;
  v19 = v48;
  v46 = a4;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v50 = v16;
      v21 = v20 | (v16 << 6);
    }
    else
    {
      v22 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_40;
      if (v22 >= v45)
        return v14;
      v23 = v44[v22];
      v24 = v16 + 1;
      if (!v23)
      {
        v24 = v16 + 2;
        if (v16 + 2 >= v45)
          return v14;
        v23 = v44[v24];
        if (!v23)
        {
          v24 = v16 + 3;
          if (v16 + 3 >= v45)
            return v14;
          v23 = v44[v24];
          if (!v23)
          {
            v25 = v16 + 4;
            if (v16 + 4 >= v45)
              return v14;
            v23 = v44[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v24 >= v45)
                  return v14;
                v23 = v44[v24];
                ++v25;
                if (v23)
                  goto LABEL_24;
              }
            }
            v24 = v16 + 4;
          }
        }
      }
LABEL_24:
      v15 = (v23 - 1) & v23;
      v50 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    v26 = a4[7];
    v27 = (uint64_t *)(a4[6] + 16 * v21);
    v28 = *v27;
    v29 = v27[1];
    v30 = v49;
    v31 = *(_QWORD *)(v49 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v19, v26 + v31 * v21, v18);
    v32 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v32(v51, v19, v18);
    sub_236C366A0();
    swift_bridgeObjectRetain();
    sub_236C36154();
    result = sub_236C366C4();
    v33 = -1 << *(_BYTE *)(v14 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v36 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      v18 = v47;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v33) >> 6;
      v18 = v47;
      do
      {
        if (++v35 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v39 = v35 == v38;
        if (v35 == v38)
          v35 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v40 == -1);
      v36 = __clz(__rbit64(~v40)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
    v41 = (_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * v36);
    *v41 = v28;
    v41[1] = v29;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v32)(*(_QWORD *)(v14 + 56) + v36 * v31, v51, v18);
    ++*(_QWORD *)(v14 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v46;
    v16 = v50;
    if (!a3)
      return v14;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_236C3371C(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __int128 v44;

  v8 = sub_236C35A40();
  v41 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v43 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v40 = (char *)&v36 - v11;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447A48);
  result = sub_236C36568();
  v13 = result;
  v37 = a1;
  v38 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 64;
  v39 = a4;
  while (1)
  {
    if (v14)
    {
      v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v42 = v15;
      v18 = v17 | (v15 << 6);
    }
    else
    {
      v19 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v19 >= v38)
        return v13;
      v20 = v37[v19];
      v21 = v15 + 1;
      if (!v20)
      {
        v21 = v15 + 2;
        if (v15 + 2 >= v38)
          return v13;
        v20 = v37[v21];
        if (!v20)
        {
          v21 = v15 + 3;
          if (v15 + 3 >= v38)
            return v13;
          v20 = v37[v21];
          if (!v20)
          {
            v22 = v15 + 4;
            if (v15 + 4 >= v38)
              return v13;
            v20 = v37[v22];
            if (!v20)
            {
              while (1)
              {
                v21 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v21 >= v38)
                  return v13;
                v20 = v37[v21];
                ++v22;
                if (v20)
                  goto LABEL_24;
              }
            }
            v21 = v15 + 4;
          }
        }
      }
LABEL_24:
      v14 = (v20 - 1) & v20;
      v42 = v21;
      v18 = __clz(__rbit64(v20)) + (v21 << 6);
    }
    v23 = v40;
    v24 = v41;
    v25 = *(_QWORD *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v40, a4[6] + v25 * v18, v8);
    v44 = *(_OWORD *)(a4[7] + 16 * v18);
    v26 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    v26(v43, v23, v8);
    sub_236BE6C98(&qword_256447860, (uint64_t (*)(uint64_t))MEMORY[0x24BE09BD8], MEMORY[0x24BE09BE8]);
    swift_unknownObjectRetain();
    result = sub_236C36094();
    v27 = -1 << *(_BYTE *)(v13 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v16 + 8 * (v28 >> 6))) != 0)
    {
      v30 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v16 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v33 = v29 == v32;
        if (v29 == v32)
          v29 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v29);
      }
      while (v34 == -1);
      v30 = __clz(__rbit64(~v34)) + (v29 << 6);
    }
    *(_QWORD *)(v16 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(_QWORD *)(v13 + 48) + v30 * v25, v43, v8);
    *(_OWORD *)(*(_QWORD *)(v13 + 56) + 16 * v30) = v44;
    ++*(_QWORD *)(v13 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v39;
    v15 = v42;
    if (!a3)
      return v13;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_236C33A7C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  unint64_t v34;
  char *v35;
  char v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  BOOL v43;
  uint64_t v44;
  unint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  int64_t v58;
  __int128 v59;
  uint64_t (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;

  v44 = a2;
  v45 = a1;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256448078);
  MEMORY[0x24BDAC7A8](v55);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_236C35A40();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v44 - v13;
  v46 = a4;
  v47 = 0;
  v15 = 0;
  v16 = *(_QWORD *)(a3 + 64);
  v52 = a3 + 64;
  v17 = 1 << *(_BYTE *)(a3 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v53 = (unint64_t)(v17 + 63) >> 6;
  v49 = a3;
  v50 = v9;
  v48 = (char *)&v44 - v13;
  while (1)
  {
    if (v19)
    {
      v20 = v7;
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v58 = v15;
      v22 = v21 | (v15 << 6);
      goto LABEL_22;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
      goto LABEL_39;
    if (v23 >= v53)
      return sub_236C3371C(v45, v44, v47, (_QWORD *)a3);
    v24 = *(_QWORD *)(v52 + 8 * v23);
    v25 = v15 + 1;
    if (!v24)
    {
      v25 = v15 + 2;
      if (v15 + 2 >= v53)
        return sub_236C3371C(v45, v44, v47, (_QWORD *)a3);
      v24 = *(_QWORD *)(v52 + 8 * v25);
      if (!v24)
      {
        v25 = v15 + 3;
        if (v15 + 3 >= v53)
          return sub_236C3371C(v45, v44, v47, (_QWORD *)a3);
        v24 = *(_QWORD *)(v52 + 8 * v25);
        if (!v24)
          break;
      }
    }
LABEL_21:
    v20 = v7;
    v19 = (v24 - 1) & v24;
    v58 = v25;
    v22 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_22:
    v27 = *(_QWORD *)(a3 + 48);
    v61 = *(_QWORD *)(v9 + 72);
    v28 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    v29 = a3;
    v30 = v22;
    v28(v14, v27 + v61 * v22, v8);
    v31 = *(_QWORD *)(v29 + 56);
    v56 = v30;
    v59 = *(_OWORD *)(v31 + 16 * v30);
    v32 = v20;
    v28(v20, (unint64_t)v14, v8);
    *(_OWORD *)&v20[*(int *)(v55 + 48)] = v59;
    v62 = *(_QWORD *)(a4 + 16);
    if (!v62)
    {
      swift_unknownObjectRetain_n();
      v7 = v20;
      a3 = v29;
      v15 = v58;
      goto LABEL_5;
    }
    v57 = v19;
    v33 = v51;
    v34 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v60 = (uint64_t (*)(char *, uint64_t, uint64_t))v28;
    v28(v51, a4 + v34, v8);
    sub_236BE6C98(&qword_256447868, (uint64_t (*)(uint64_t))MEMORY[0x24BE09BD8], MEMORY[0x24BE09BF0]);
    v54 = v59;
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    v35 = v32;
    v36 = sub_236C360C4();
    v37 = *(void (**)(char *, uint64_t))(v9 + 8);
    v38 = v33;
    v37(v33, v8);
    if ((v36 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v7 = v35;
      v14 = v48;
      a3 = v49;
LABEL_33:
      v19 = v57;
      v15 = v58;
      sub_236BE6C14((uint64_t)v7, &qword_256448078);
      swift_unknownObjectRelease();
      result = ((uint64_t (*)(char *, uint64_t))v37)(v14, v8);
      *(unint64_t *)((char *)v45 + ((v56 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v56;
      v43 = __OFADD__(v47++, 1);
      v9 = v50;
      if (v43)
        goto LABEL_40;
    }
    else
    {
      if (v62 != 1)
      {
        v39 = a4 + v61 + v34;
        v40 = 1;
        while (1)
        {
          result = v60(v38, v39, v8);
          v41 = v40 + 1;
          if (__OFADD__(v40, 1))
            break;
          v42 = sub_236C360C4();
          v37(v38, v8);
          if ((v42 & 1) != 0)
          {
            a4 = v46;
            swift_bridgeObjectRelease();
            v14 = v48;
            a3 = v49;
            v7 = v35;
            goto LABEL_33;
          }
          ++v40;
          v39 += v61;
          if (v41 == v62)
          {
            a4 = v46;
            swift_bridgeObjectRelease();
            a3 = v49;
            v9 = v50;
            v7 = v35;
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      swift_bridgeObjectRelease();
      v7 = v35;
      a3 = v49;
      v9 = v50;
LABEL_31:
      v14 = v48;
      v19 = v57;
      v15 = v58;
LABEL_5:
      sub_236BE6C14((uint64_t)v7, &qword_256448078);
      swift_unknownObjectRelease();
      result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
  v26 = v15 + 4;
  if (v15 + 4 >= v53)
    return sub_236C3371C(v45, v44, v47, (_QWORD *)a3);
  v24 = *(_QWORD *)(v52 + 8 * v26);
  if (v24)
  {
    v25 = v15 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v25 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v25 >= v53)
      return sub_236C3371C(v45, v44, v47, (_QWORD *)a3);
    v24 = *(_QWORD *)(v52 + 8 * v25);
    ++v26;
    if (v24)
      goto LABEL_21;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_236C33F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v10 = sub_236C33A7C((_QWORD *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    v10 = sub_236C33A7C((unint64_t *)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x23B800318](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_236C34108()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  const char *v17;
  char v19;

  v0 = sub_236C35F44();
  v1 = sub_236C36328();
  if (os_log_type_enabled(v0, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_236BE1000, v0, v1, "Performing tailspin setup.", v2, 2u);
    MEMORY[0x23B800318](v2, -1, -1);
  }

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, 0);
  v4 = sub_236C35B9C();
  MEMORY[0x23B7FF040](v3, 0xD000000000000011, 0x8000000236C3BF50, 0x6C7070612E6D6F63, 0xEC00000061642E65, v4, v5);

  swift_bridgeObjectRelease();
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, 0);
  v7 = sub_236C35B9C();
  MEMORY[0x23B7FF040](v6, 0xD000000000000018, 0x8000000236C3BF70, 0x6C7070612E6D6F63, 0xEC00000061642E65, v7, v8);

  swift_bridgeObjectRelease();
  notify_post("com.apple.da.tasking_changed");
  sub_236C35134(0);
  sub_236C34640();
  v9 = tailspin_config_create_with_config();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  sub_236C358CC();
  swift_endAccess();
  if (v19 == 1)
  {
    tailspin_sampling_option_set();
    v10 = sub_236C35F44();
    v11 = sub_236C3634C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_236BE1000, v10, v11, "Enabling cswitch sampling.", v12, 2u);
      MEMORY[0x23B800318](v12, -1, -1);
    }

  }
  v13 = tailspin_config_apply_sync();
  v14 = sub_236C35F44();
  if ((_DWORD)v13)
  {
    v15 = sub_236C36328();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      v17 = "Successfully applied tailspin configuration.";
LABEL_12:
      _os_log_impl(&dword_236BE1000, v14, v15, v17, v16, 2u);
      MEMORY[0x23B800318](v16, -1, -1);
    }
  }
  else
  {
    v15 = sub_236C36334();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      v17 = "Failed to apply tailspin configuration. Exiting early.";
      goto LABEL_12;
    }
  }

  MEMORY[0x23B800408](v9);
  return v13;
}

uint64_t sub_236C34464()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  v0 = sub_236C35F44();
  v1 = sub_236C36328();
  if (os_log_type_enabled(v0, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_236BE1000, v0, v1, "Performing tailspin teardown.", v2, 2u);
    MEMORY[0x23B800318](v2, -1, -1);
  }

  sub_236C35B9C();
  sub_236C35BC0();
  swift_bridgeObjectRelease();
  sub_236C35B9C();
  sub_236C35BC0();
  swift_bridgeObjectRelease();
  sub_236C352B0();
  notify_post("com.apple.da.tasking_changed");
  v3 = tailspin_config_create_with_default_config();
  v4 = tailspin_config_apply_sync();
  if ((_DWORD)v4)
  {
    MEMORY[0x23B800408](v3);
  }
  else
  {
    v5 = sub_236C35F44();
    v6 = sub_236C36334();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_236BE1000, v5, v6, "Failed to apply the defualt system tailspin configuration. Exiting early.", v7, 2u);
      MEMORY[0x23B800318](v7, -1, -1);
    }

  }
  return v4;
}

uint64_t sub_236C34640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC22AudioAnalyticsExternal15VerboseTailspin____lazy_storage___verboseConfig;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal15VerboseTailspin____lazy_storage___verboseConfig);
  if (!v2)
  {
    v2 = tailspin_config_create_with_default_config();
    sub_236C34E10();
    *(_QWORD *)(v0 + v1) = v2;
  }
  return v2;
}

uint64_t sub_236C34694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_236C34640();
  MEMORY[0x23B800408](v1);
  swift_bridgeObjectRelease();
  v2 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal15VerboseTailspin_logger;
  v3 = sub_236C35F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  v4 = v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal15VerboseTailspin_cSwitchSamplingPreference;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocClassInstance();
}

uint64_t sub_236C34730()
{
  return type metadata accessor for VerboseTailspin();
}

uint64_t type metadata accessor for VerboseTailspin()
{
  uint64_t result;

  result = qword_2542B1F50;
  if (!qword_2542B1F50)
    return swift_getSingletonMetadata();
  return result;
}

void sub_236C34774()
{
  unint64_t v0;
  unint64_t v1;

  sub_236C35F50();
  if (v0 <= 0x3F)
  {
    sub_236C34824();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_236C34824()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2542B1628)
  {
    v0 = sub_236C358E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2542B1628);
  }
}

unint64_t sub_236C34878()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542B30B8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_236C37860;
    *(_QWORD *)(inited + 32) = sub_236C360F4();
    *(_QWORD *)(inited + 40) = v4;
    sub_236C09ABC();
    *(_QWORD *)(inited + 48) = sub_236C363AC();
    *(_QWORD *)(inited + 56) = sub_236C360F4();
    *(_QWORD *)(inited + 64) = v5;
    *(_QWORD *)(inited + 72) = sub_236C363AC();
    v1 = sub_236C15754(inited);
    *(_QWORD *)(v2 + 16) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_236C34950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  char v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;

  v0 = tailspin_config_create_with_current_state();
  if (v0)
  {
    v1 = v0;
    sub_236C34640();
    v2 = tailspin_config_create_with_config();
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542B1620);
    sub_236C358CC();
    swift_endAccess();
    v3 = 1;
    tailspin_sampling_option_set();
    v4 = (id)tailspin_config_copy_description();
    v5 = sub_236C360F4();
    v7 = v6;

    v8 = (id)tailspin_config_copy_description();
    v9 = sub_236C360F4();
    v11 = v10;

    if (v5 != v9 || v7 != v11)
      v3 = sub_236C36658();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = sub_236C34BF8();
    v13 = sub_236C35F44();
    v14 = sub_236C3634C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      *(_DWORD *)v15 = 67109376;
      sub_236C363F4();
      *(_WORD *)(v15 + 8) = 1024;
      sub_236C363F4();
      _os_log_impl(&dword_236BE1000, v13, v14, "Verifying tailspin configuration. { isPreferredConfig=%{BOOL}d, diagnosticsDisabled=%{BOOL}d }", (uint8_t *)v15, 0xEu);
      MEMORY[0x23B800318](v15, -1, -1);
    }

    v16 = v3 & v12;
    MEMORY[0x23B800408](v2);
    MEMORY[0x23B800408](v1);
  }
  else
  {
    v17 = sub_236C35F44();
    v18 = sub_236C36334();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_236BE1000, v17, v18, "Unable to retrieve current tailspin state.", v19, 2u);
      MEMORY[0x23B800318](v19, -1, -1);
    }

    v16 = 0;
  }
  return v16 & 1;
}

BOOL sub_236C34BF8()
{
  _BOOL8 result;
  char v2;
  char v3;
  char v4;

  sub_236C35B9C();
  sub_236C35BA8();
  swift_bridgeObjectRelease();
  if (v4 == 2 || (v4 & 1) != 0)
    return 0;
  sub_236C35B9C();
  sub_236C35BA8();
  swift_bridgeObjectRelease();
  result = 0;
  if (v3 != 2 && (v3 & 1) == 0)
  {
    v2 = sub_236C35440();
    return v2 != 2 && (v2 & 1) == 0;
  }
  return result;
}

uint64_t sub_236C34D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_236C35F50();
  MEMORY[0x24BDAC7A8](v1);
  *(_QWORD *)(v0 + 16) = 0;
  sub_236C35F2C();
  v2 = OBJC_IVAR____TtC22AudioAnalyticsExternal15VerboseTailspin_systemUtility;
  sub_236C35F2C();
  sub_236C35A10();
  swift_allocObject();
  *(_QWORD *)(v0 + v2) = sub_236C35A04();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC22AudioAnalyticsExternal15VerboseTailspin____lazy_storage___verboseConfig) = 0;
  sub_236C358F0();
  return v0;
}

uint64_t sub_236C34E10()
{
  tailspin_oncore_sampling_period_set();
  tailspin_full_sampling_period_set();
  tailspin_buffer_size_set();
  tailspin_enabled_set();
  tailspin_sampling_option_set();
  tailspin_kdbg_filter_clear();
  tailspin_kdbg_filter_class_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_class_set();
  tailspin_kdbg_filter_class_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_class_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_class_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_class_set();
  tailspin_kdbg_filter_class_set();
  tailspin_kdbg_filter_class_set();
  tailspin_kdbg_filter_class_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_class_set();
  tailspin_kdbg_filter_class_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_class_set();
  tailspin_kdbg_filter_class_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_subclass_set();
  tailspin_kdbg_filter_class_set();
  tailspin_kdbg_filter_subclass_set();
  return tailspin_kdbg_filter_subclass_set();
}

uint64_t sub_236C35134(char a1)
{
  char isUniquelyReferenced_nonNull_native;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD v7[2];
  __int128 v8;
  uint64_t v9;

  sub_236C35B9C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447748);
  sub_236C35BA8();
  swift_bridgeObjectRelease();
  if (!(_QWORD)v8)
    sub_236C15500(MEMORY[0x24BEE4AF8]);
  v9 = MEMORY[0x24BEE1328];
  LOBYTE(v8) = a1 & 1;
  sub_236BECFF4(&v8, v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_236C0A85C(v7, 0xD000000000000015, 0x8000000236C3BFB0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v3 = (void *)sub_236C36040();
  v4 = sub_236C35B9C();
  MEMORY[0x23B7FF040](v3, 0x6F69647541, 0xE500000000000000, 0xD00000000000001FLL, 0x8000000236C3BF90, v4, v5);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_236C352B0()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD v6[2];

  sub_236C35B9C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447748);
  sub_236C35BA8();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)&v6[0])
  {
    if (*(_QWORD *)(*(_QWORD *)&v6[0] + 16)
      && (v1 = sub_236BEE010(0xD000000000000015, 0x8000000236C3BFB0), (v2 & 1) != 0))
    {
      sub_236BED454(*(_QWORD *)(*(_QWORD *)&v6[0] + 56) + 32 * v1, (uint64_t)v6);
      sub_236C35574((uint64_t)v6);
      sub_236C25A3C(0xD000000000000015, 0x8000000236C3BFB0, v6);
      sub_236C35574((uint64_t)v6);
      v3 = (void *)sub_236C36040();
      v4 = sub_236C35B9C();
      MEMORY[0x23B7FF040](v3, 0x6F69647541, 0xE500000000000000, 0xD00000000000001FLL, 0x8000000236C3BF90, v4, v5);
      swift_bridgeObjectRelease();

      return swift_bridgeObjectRelease();
    }
    else
    {
      memset(v6, 0, sizeof(v6));
      swift_bridgeObjectRelease();
      return sub_236C35574((uint64_t)v6);
    }
  }
  return result;
}

uint64_t sub_236C35440()
{
  unint64_t v0;
  char v1;
  unsigned __int8 v3;
  __int128 v4;
  __int128 v5;

  sub_236C35B9C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256447748);
  sub_236C35BA8();
  swift_bridgeObjectRelease();
  if (!(_QWORD)v4)
  {
    v4 = 0u;
    v5 = 0u;
LABEL_11:
    sub_236C35574((uint64_t)&v4);
    return 2;
  }
  if (*(_QWORD *)(v4 + 16) && (v0 = sub_236BEE010(0xD000000000000015, 0x8000000236C3BFB0), (v1 & 1) != 0))
  {
    sub_236BED454(*(_QWORD *)(v4 + 56) + 32 * v0, (uint64_t)&v4);
  }
  else
  {
    v4 = 0u;
    v5 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v5 + 1))
    goto LABEL_11;
  if (swift_dynamicCast())
    return v3;
  else
    return 2;
}

uint64_t sub_236C35574(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256447738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_236C355B4()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_236C355C0()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_236C355CC()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_236C355D8()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_236C355E4()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_236C355F0()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_236C355FC()
{
  return MEMORY[0x24BDCB6D0]();
}

uint64_t sub_236C35608()
{
  return MEMORY[0x24BDCB720]();
}

uint64_t sub_236C35614()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_236C35620()
{
  return MEMORY[0x24BDCBBA0]();
}

uint64_t sub_236C3562C()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_236C35638()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_236C35644()
{
  return MEMORY[0x24BDCBBD0]();
}

uint64_t sub_236C35650()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_236C3565C()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_236C35668()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_236C35674()
{
  return MEMORY[0x24BDCC1E0]();
}

uint64_t sub_236C35680()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_236C3568C()
{
  return MEMORY[0x24BDCD748]();
}

uint64_t sub_236C35698()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_236C356A4()
{
  return MEMORY[0x24BDCD810]();
}

uint64_t sub_236C356B0()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_236C356BC()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_236C356C8()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_236C356D4()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_236C356E0()
{
  return MEMORY[0x24BDCD938]();
}

uint64_t sub_236C356EC()
{
  return MEMORY[0x24BDCD9E8]();
}

uint64_t sub_236C356F8()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_236C35704()
{
  return MEMORY[0x24BDCDA70]();
}

uint64_t sub_236C35710()
{
  return MEMORY[0x24BDCDAA0]();
}

uint64_t sub_236C3571C()
{
  return MEMORY[0x24BDCDAA8]();
}

uint64_t sub_236C35728()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_236C35734()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_236C35740()
{
  return MEMORY[0x24BDCDB80]();
}

uint64_t sub_236C3574C()
{
  return MEMORY[0x24BDCDBB0]();
}

uint64_t sub_236C35758()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_236C35764()
{
  return MEMORY[0x24BDCDC28]();
}

uint64_t sub_236C35770()
{
  return MEMORY[0x24BDCDC40]();
}

uint64_t sub_236C3577C()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_236C35788()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_236C35794()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_236C357A0()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_236C357AC()
{
  return MEMORY[0x24BDCE778]();
}

uint64_t sub_236C357B8()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_236C357C4()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_236C357D0()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_236C357DC()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_236C357E8()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_236C357F4()
{
  return MEMORY[0x24BDCE9B8]();
}

uint64_t sub_236C35800()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_236C3580C()
{
  return MEMORY[0x24BDCEF80]();
}

uint64_t sub_236C35818()
{
  return MEMORY[0x24BDCEFA0]();
}

uint64_t sub_236C35824()
{
  return MEMORY[0x24BDCEFF0]();
}

uint64_t sub_236C35830()
{
  return MEMORY[0x24BDCF0F0]();
}

uint64_t sub_236C3583C()
{
  return MEMORY[0x24BDCF188]();
}

uint64_t sub_236C35848()
{
  return MEMORY[0x24BDCF1B0]();
}

uint64_t sub_236C35854()
{
  return MEMORY[0x24BDCF290]();
}

uint64_t sub_236C35860()
{
  return MEMORY[0x24BDCF2D0]();
}

uint64_t sub_236C3586C()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_236C35878()
{
  return MEMORY[0x24BEDFFD0]();
}

uint64_t sub_236C35884()
{
  return MEMORY[0x24BEDFFD8]();
}

uint64_t sub_236C35890()
{
  return MEMORY[0x24BEE0020]();
}

uint64_t sub_236C3589C()
{
  return MEMORY[0x24BEE0028]();
}

uint64_t sub_236C358A8()
{
  return MEMORY[0x24BEE73C0]();
}

uint64_t sub_236C358B4()
{
  return MEMORY[0x24BE09A60]();
}

uint64_t sub_236C358C0()
{
  return MEMORY[0x24BE09A68]();
}

uint64_t sub_236C358CC()
{
  return MEMORY[0x24BE09A70]();
}

uint64_t sub_236C358D8()
{
  return MEMORY[0x24BE09A78]();
}

uint64_t sub_236C358E4()
{
  return MEMORY[0x24BE09A80]();
}

uint64_t sub_236C358F0()
{
  return MEMORY[0x24BE09A90]();
}

uint64_t sub_236C358FC()
{
  return MEMORY[0x24BE09A98]();
}

uint64_t sub_236C35908()
{
  return MEMORY[0x24BE09AA0]();
}

uint64_t sub_236C35914()
{
  return MEMORY[0x24BE09AC8]();
}

uint64_t sub_236C35920()
{
  return MEMORY[0x24BE09AD8]();
}

uint64_t sub_236C3592C()
{
  return MEMORY[0x24BE09AE0]();
}

uint64_t sub_236C35938()
{
  return MEMORY[0x24BE09B00]();
}

uint64_t sub_236C35944()
{
  return MEMORY[0x24BE09B08]();
}

uint64_t sub_236C35950()
{
  return MEMORY[0x24BE09B10]();
}

uint64_t sub_236C3595C()
{
  return MEMORY[0x24BE09B18]();
}

uint64_t sub_236C35968()
{
  return MEMORY[0x24BE09B20]();
}

uint64_t sub_236C35974()
{
  return MEMORY[0x24BE09B28]();
}

uint64_t sub_236C35980()
{
  return MEMORY[0x24BE09B30]();
}

uint64_t sub_236C3598C()
{
  return MEMORY[0x24BE09B38]();
}

uint64_t sub_236C35998()
{
  return MEMORY[0x24BE09B40]();
}

uint64_t sub_236C359A4()
{
  return MEMORY[0x24BE09B48]();
}

uint64_t sub_236C359B0()
{
  return MEMORY[0x24BE09B50]();
}

uint64_t sub_236C359BC()
{
  return MEMORY[0x24BE09B58]();
}

uint64_t sub_236C359C8()
{
  return MEMORY[0x24BE09B60]();
}

uint64_t sub_236C359D4()
{
  return MEMORY[0x24BE09B68]();
}

uint64_t sub_236C359E0()
{
  return MEMORY[0x24BE09B70]();
}

uint64_t sub_236C359EC()
{
  return MEMORY[0x24BE09B78]();
}

uint64_t sub_236C359F8()
{
  return MEMORY[0x24BE09B80]();
}

uint64_t sub_236C35A04()
{
  return MEMORY[0x24BE09B90]();
}

uint64_t sub_236C35A10()
{
  return MEMORY[0x24BE09B98]();
}

uint64_t sub_236C35A1C()
{
  return MEMORY[0x24BE09BA8]();
}

uint64_t sub_236C35A28()
{
  return MEMORY[0x24BE09BC8]();
}

uint64_t sub_236C35A34()
{
  return MEMORY[0x24BE09BD0]();
}

uint64_t sub_236C35A40()
{
  return MEMORY[0x24BE09BD8]();
}

uint64_t sub_236C35A4C()
{
  return MEMORY[0x24BE09BF8]();
}

uint64_t sub_236C35A58()
{
  return MEMORY[0x24BE09C08]();
}

uint64_t sub_236C35A64()
{
  return MEMORY[0x24BE09C10]();
}

uint64_t sub_236C35A70()
{
  return MEMORY[0x24BE09C18]();
}

uint64_t sub_236C35A7C()
{
  return MEMORY[0x24BE09C20]();
}

uint64_t sub_236C35A88()
{
  return MEMORY[0x24BE09C28]();
}

uint64_t sub_236C35A94()
{
  return MEMORY[0x24BE09C30]();
}

uint64_t sub_236C35AA0()
{
  return MEMORY[0x24BE09C38]();
}

uint64_t sub_236C35AAC()
{
  return MEMORY[0x24BE09C40]();
}

uint64_t sub_236C35AB8()
{
  return MEMORY[0x24BE09C50]();
}

uint64_t sub_236C35AC4()
{
  return MEMORY[0x24BE09C60]();
}

uint64_t sub_236C35AD0()
{
  return MEMORY[0x24BE09C68]();
}

uint64_t sub_236C35ADC()
{
  return MEMORY[0x24BE09C70]();
}

uint64_t sub_236C35AE8()
{
  return MEMORY[0x24BE09C88]();
}

uint64_t sub_236C35AF4()
{
  return MEMORY[0x24BE09C90]();
}

uint64_t sub_236C35B00()
{
  return MEMORY[0x24BE09C98]();
}

uint64_t sub_236C35B0C()
{
  return MEMORY[0x24BE09CA0]();
}

uint64_t sub_236C35B18()
{
  return MEMORY[0x24BE09CA8]();
}

uint64_t sub_236C35B24()
{
  return MEMORY[0x24BE09CB0]();
}

uint64_t sub_236C35B30()
{
  return MEMORY[0x24BE09CB8]();
}

uint64_t sub_236C35B3C()
{
  return MEMORY[0x24BE09CC0]();
}

uint64_t sub_236C35B48()
{
  return MEMORY[0x24BE09CC8]();
}

uint64_t sub_236C35B54()
{
  return MEMORY[0x24BE09CD0]();
}

uint64_t sub_236C35B60()
{
  return MEMORY[0x24BE09CD8]();
}

uint64_t sub_236C35B6C()
{
  return MEMORY[0x24BE09CE0]();
}

uint64_t sub_236C35B78()
{
  return MEMORY[0x24BE09CE8]();
}

uint64_t sub_236C35B84()
{
  return MEMORY[0x24BE09CF0]();
}

uint64_t sub_236C35B90()
{
  return MEMORY[0x24BE09D00]();
}

uint64_t sub_236C35B9C()
{
  return MEMORY[0x24BE09D08]();
}

uint64_t sub_236C35BA8()
{
  return MEMORY[0x24BE09D10]();
}

uint64_t sub_236C35BB4()
{
  return MEMORY[0x24BE09D18]();
}

uint64_t sub_236C35BC0()
{
  return MEMORY[0x24BE09D20]();
}

uint64_t sub_236C35BCC()
{
  return MEMORY[0x24BE09D28]();
}

uint64_t sub_236C35BD8()
{
  return MEMORY[0x24BE09D30]();
}

uint64_t sub_236C35BE4()
{
  return MEMORY[0x24BE09D38]();
}

uint64_t sub_236C35BF0()
{
  return MEMORY[0x24BE09D48]();
}

uint64_t sub_236C35BFC()
{
  return MEMORY[0x24BE09D50]();
}

uint64_t sub_236C35C08()
{
  return MEMORY[0x24BE09D58]();
}

uint64_t sub_236C35C14()
{
  return MEMORY[0x24BE09D60]();
}

uint64_t sub_236C35C20()
{
  return MEMORY[0x24BE09D68]();
}

uint64_t sub_236C35C2C()
{
  return MEMORY[0x24BE09D70]();
}

uint64_t sub_236C35C38()
{
  return MEMORY[0x24BE09D78]();
}

uint64_t sub_236C35C44()
{
  return MEMORY[0x24BE09D80]();
}

uint64_t sub_236C35C50()
{
  return MEMORY[0x24BE09D88]();
}

uint64_t sub_236C35C5C()
{
  return MEMORY[0x24BE09D90]();
}

uint64_t sub_236C35C68()
{
  return MEMORY[0x24BE09D98]();
}

uint64_t sub_236C35C74()
{
  return MEMORY[0x24BE09DA0]();
}

uint64_t sub_236C35C80()
{
  return MEMORY[0x24BE09DA8]();
}

uint64_t sub_236C35C8C()
{
  return MEMORY[0x24BE09E68]();
}

uint64_t sub_236C35C98()
{
  return MEMORY[0x24BE09E78]();
}

uint64_t sub_236C35CA4()
{
  return MEMORY[0x24BE09E88]();
}

uint64_t sub_236C35CB0()
{
  return MEMORY[0x24BE09EE0]();
}

uint64_t sub_236C35CBC()
{
  return MEMORY[0x24BE09EF0]();
}

uint64_t sub_236C35CC8()
{
  return MEMORY[0x24BE09EF8]();
}

uint64_t sub_236C35CD4()
{
  return MEMORY[0x24BE09F00]();
}

uint64_t sub_236C35CE0()
{
  return MEMORY[0x24BE09F10]();
}

uint64_t sub_236C35CEC()
{
  return MEMORY[0x24BE09F18]();
}

uint64_t sub_236C35CF8()
{
  return MEMORY[0x24BE09F20]();
}

uint64_t sub_236C35D04()
{
  return MEMORY[0x24BE09F28]();
}

uint64_t sub_236C35D10()
{
  return MEMORY[0x24BE09F30]();
}

uint64_t sub_236C35D1C()
{
  return MEMORY[0x24BE09F38]();
}

uint64_t sub_236C35D28()
{
  return MEMORY[0x24BE09F40]();
}

uint64_t sub_236C35D34()
{
  return MEMORY[0x24BE09F48]();
}

uint64_t sub_236C35D40()
{
  return MEMORY[0x24BE09F50]();
}

uint64_t sub_236C35D4C()
{
  return MEMORY[0x24BE09F58]();
}

uint64_t sub_236C35D58()
{
  return MEMORY[0x24BE09F60]();
}

uint64_t sub_236C35D64()
{
  return MEMORY[0x24BE09F70]();
}

uint64_t sub_236C35D70()
{
  return MEMORY[0x24BE09F78]();
}

uint64_t sub_236C35D7C()
{
  return MEMORY[0x24BE09F80]();
}

uint64_t sub_236C35D88()
{
  return MEMORY[0x24BE09F88]();
}

uint64_t sub_236C35D94()
{
  return MEMORY[0x24BE09F90]();
}

uint64_t sub_236C35DA0()
{
  return MEMORY[0x24BE09F98]();
}

uint64_t sub_236C35DAC()
{
  return MEMORY[0x24BE09FA0]();
}

uint64_t sub_236C35DB8()
{
  return MEMORY[0x24BE09FA8]();
}

uint64_t sub_236C35DC4()
{
  return MEMORY[0x24BE09FB8]();
}

uint64_t sub_236C35DD0()
{
  return MEMORY[0x24BE09FC0]();
}

uint64_t sub_236C35DDC()
{
  return MEMORY[0x24BE09FC8]();
}

uint64_t sub_236C35DE8()
{
  return MEMORY[0x24BE09FD0]();
}

uint64_t sub_236C35DF4()
{
  return MEMORY[0x24BE09FD8]();
}

uint64_t sub_236C35E00()
{
  return MEMORY[0x24BE09FE0]();
}

uint64_t sub_236C35E0C()
{
  return MEMORY[0x24BE09FE8]();
}

uint64_t sub_236C35E18()
{
  return MEMORY[0x24BE09FF8]();
}

uint64_t sub_236C35E24()
{
  return MEMORY[0x24BE0A000]();
}

uint64_t sub_236C35E30()
{
  return MEMORY[0x24BE0A008]();
}

uint64_t sub_236C35E3C()
{
  return MEMORY[0x24BE0A010]();
}

uint64_t sub_236C35E48()
{
  return MEMORY[0x24BE0A018]();
}

uint64_t sub_236C35E54()
{
  return MEMORY[0x24BE0A020]();
}

uint64_t sub_236C35E60()
{
  return MEMORY[0x24BE0A028]();
}

uint64_t sub_236C35E6C()
{
  return MEMORY[0x24BE0A030]();
}

uint64_t sub_236C35E78()
{
  return MEMORY[0x24BE0A038]();
}

uint64_t sub_236C35E84()
{
  return MEMORY[0x24BE0A040]();
}

uint64_t sub_236C35E90()
{
  return MEMORY[0x24BE0A048]();
}

uint64_t sub_236C35E9C()
{
  return MEMORY[0x24BE0A050]();
}

uint64_t sub_236C35EA8()
{
  return MEMORY[0x24BE0A058]();
}

uint64_t sub_236C35EB4()
{
  return MEMORY[0x24BE0A060]();
}

uint64_t sub_236C35EC0()
{
  return MEMORY[0x24BE0A068]();
}

uint64_t sub_236C35ECC()
{
  return MEMORY[0x24BE0A070]();
}

uint64_t sub_236C35ED8()
{
  return MEMORY[0x24BE0A078]();
}

uint64_t sub_236C35EE4()
{
  return MEMORY[0x24BE0A080]();
}

uint64_t sub_236C35EF0()
{
  return MEMORY[0x24BE0A088]();
}

uint64_t sub_236C35EFC()
{
  return MEMORY[0x24BE0A090]();
}

uint64_t sub_236C35F08()
{
  return MEMORY[0x24BE0A098]();
}

uint64_t sub_236C35F14()
{
  return MEMORY[0x24BE0A0A0]();
}

uint64_t sub_236C35F20()
{
  return MEMORY[0x24BE0A0A8]();
}

uint64_t sub_236C35F2C()
{
  return MEMORY[0x24BE0A0B0]();
}

uint64_t sub_236C35F38()
{
  return MEMORY[0x24BE0A0B8]();
}

uint64_t sub_236C35F44()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_236C35F50()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_236C35F5C()
{
  return MEMORY[0x24BEE5370]();
}

uint64_t sub_236C35F68()
{
  return MEMORY[0x24BEE5F78]();
}

uint64_t sub_236C35F74()
{
  return MEMORY[0x24BEE5F98]();
}

uint64_t sub_236C35F80()
{
  return MEMORY[0x24BEE6010]();
}

uint64_t sub_236C35F8C()
{
  return MEMORY[0x24BEE60D8]();
}

uint64_t sub_236C35F98()
{
  return MEMORY[0x24BEE6100]();
}

uint64_t sub_236C35FA4()
{
  return MEMORY[0x24BEE5428]();
}

uint64_t sub_236C35FB0()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_236C35FBC()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_236C35FC8()
{
  return MEMORY[0x24BEE54D0]();
}

uint64_t sub_236C35FD4()
{
  return MEMORY[0x24BEE54E0]();
}

uint64_t sub_236C35FE0()
{
  return MEMORY[0x24BEE54E8]();
}

uint64_t sub_236C35FEC()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_236C35FF8()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_236C36004()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_236C36010()
{
  return MEMORY[0x24BEE5618]();
}

uint64_t sub_236C3601C()
{
  return MEMORY[0x24BEE5620]();
}

uint64_t sub_236C36028()
{
  return MEMORY[0x24BEE5628]();
}

uint64_t sub_236C36034()
{
  return MEMORY[0x24BEE5648]();
}

uint64_t sub_236C36040()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_236C3604C()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_236C36058()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_236C36064()
{
  return MEMORY[0x24BEE0290]();
}

uint64_t sub_236C36070()
{
  return MEMORY[0x24BE0A0C0]();
}

uint64_t sub_236C3607C()
{
  return MEMORY[0x24BE0A0C8]();
}

uint64_t sub_236C36088()
{
  return MEMORY[0x24BE0A0D0]();
}

uint64_t sub_236C36094()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_236C360A0()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_236C360AC()
{
  return MEMORY[0x24BEE75E0]();
}

uint64_t sub_236C360B8()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_236C360C4()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_236C360D0()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_236C360DC()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_236C360E8()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_236C360F4()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_236C36100()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_236C3610C()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_236C36118()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_236C36124()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_236C36130()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_236C3613C()
{
  return MEMORY[0x24BEE0A08]();
}

uint64_t sub_236C36148()
{
  return MEMORY[0x24BEE0A20]();
}

uint64_t sub_236C36154()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_236C36160()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_236C3616C()
{
  return MEMORY[0x24BEE0BA0]();
}

uint64_t sub_236C36178()
{
  return MEMORY[0x24BEE0BB0]();
}

uint64_t sub_236C36184()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_236C36190()
{
  return MEMORY[0x24BEE0C00]();
}

uint64_t sub_236C3619C()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_236C361A8()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_236C361B4()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_236C361C0()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_236C361CC()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_236C361D8()
{
  return MEMORY[0x24BEE0CD0]();
}

uint64_t sub_236C361E4()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_236C361F0()
{
  return MEMORY[0x24BEE0FD8]();
}

uint64_t sub_236C361FC()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_236C36208()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_236C36214()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_236C36220()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_236C3622C()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_236C36238()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_236C36244()
{
  return MEMORY[0x24BE0A0D8]();
}

uint64_t sub_236C36250()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_236C3625C()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_236C36268()
{
  return MEMORY[0x24BDCFC58]();
}

uint64_t sub_236C36274()
{
  return MEMORY[0x24BE0A0E0]();
}

uint64_t sub_236C36280()
{
  return MEMORY[0x24BE0A0E8]();
}

uint64_t sub_236C3628C()
{
  return MEMORY[0x24BE0A0F0]();
}

uint64_t sub_236C36298()
{
  return MEMORY[0x24BE0A0F8]();
}

uint64_t sub_236C362A4()
{
  return MEMORY[0x24BE0A100]();
}

uint64_t sub_236C362B0()
{
  return MEMORY[0x24BE0A108]();
}

uint64_t sub_236C362BC()
{
  return MEMORY[0x24BE0A110]();
}

uint64_t sub_236C362C8()
{
  return MEMORY[0x24BE0A118]();
}

uint64_t sub_236C362D4()
{
  return MEMORY[0x24BE0A120]();
}

uint64_t sub_236C362E0()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_236C362EC()
{
  return MEMORY[0x24BEE1570]();
}

uint64_t sub_236C362F8()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_236C36304()
{
  return MEMORY[0x24BEE7648]();
}

uint64_t sub_236C36310()
{
  return MEMORY[0x24BEE7668]();
}

uint64_t sub_236C3631C()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_236C36328()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_236C36334()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_236C36340()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_236C3634C()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_236C36358()
{
  return MEMORY[0x24BEE5650]();
}

uint64_t sub_236C36364()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_236C36370()
{
  return MEMORY[0x24BEE56B8]();
}

uint64_t sub_236C3637C()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_236C36388()
{
  return MEMORY[0x24BEE5780]();
}

uint64_t sub_236C36394()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_236C363A0()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_236C363AC()
{
  return MEMORY[0x24BDD01F0]();
}

uint64_t sub_236C363B8()
{
  return MEMORY[0x24BDD01F8]();
}

uint64_t sub_236C363C4()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_236C363D0()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_236C363DC()
{
  return MEMORY[0x24BDD0258]();
}

uint64_t sub_236C363E8()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_236C363F4()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_236C36400()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_236C3640C()
{
  return MEMORY[0x24BDD04B8]();
}

uint64_t sub_236C36418()
{
  return MEMORY[0x24BDD04C8]();
}

uint64_t sub_236C36424()
{
  return MEMORY[0x24BDD0508]();
}

uint64_t sub_236C36430()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t sub_236C3643C()
{
  return MEMORY[0x24BDD0638]();
}

uint64_t sub_236C36448()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_236C36454()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_236C36460()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_236C3646C()
{
  return MEMORY[0x24BEE22E8]();
}

uint64_t sub_236C36478()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_236C36484()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_236C36490()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_236C3649C()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_236C364A8()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_236C364B4()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_236C364C0()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_236C364CC()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_236C364D8()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_236C364E4()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_236C364F0()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_236C364FC()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_236C36508()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_236C36514()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_236C36520()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_236C3652C()
{
  return MEMORY[0x24BEE2EE0]();
}

uint64_t sub_236C36538()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_236C36544()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_236C36550()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_236C3655C()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_236C36568()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_236C36574()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_236C36580()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_236C3658C()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_236C36598()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_236C365A4()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_236C365B0()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_236C365BC()
{
  return MEMORY[0x24BEE3378]();
}

uint64_t sub_236C365C8()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_236C365D4()
{
  return MEMORY[0x24BEE33A8]();
}

uint64_t sub_236C365E0()
{
  return MEMORY[0x24BEE33B8]();
}

uint64_t sub_236C365EC()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_236C365F8()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_236C36604()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_236C36610()
{
  return MEMORY[0x24BEE34C8]();
}

uint64_t sub_236C3661C()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_236C36628()
{
  return MEMORY[0x24BEE34F8]();
}

uint64_t sub_236C36634()
{
  return MEMORY[0x24BEE3508]();
}

uint64_t sub_236C36640()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_236C3664C()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_236C36658()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_236C36664()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_236C36670()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_236C3667C()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_236C36688()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_236C36694()
{
  return MEMORY[0x24BDD07A0]();
}

uint64_t sub_236C366A0()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_236C366AC()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_236C366B8()
{
  return MEMORY[0x24BEE4308]();
}

uint64_t sub_236C366C4()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_236C366D0()
{
  return MEMORY[0x24BDD07B8]();
}

uint64_t sub_236C366DC()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_236C366E8()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_236C366F4()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_236C36700()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t AnalyticsIsEventUsed()
{
  return MEMORY[0x24BE1A1A8]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x24BE1A1C8]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x24BE0C258]();
}

void CCHmac(CCHmacAlgorithm algorithm, const void *key, size_t keyLength, const void *data, size_t dataLength, void *macOut)
{
  MEMORY[0x24BDAC238](*(_QWORD *)&algorithm, key, keyLength, data, dataLength, macOut);
}

unsigned __int8 *__cdecl CC_MD5(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x24BDAC300](data, *(_QWORD *)&len, md);
}

uint64_t DRSubmitLog()
{
  return MEMORY[0x24BE2CA88]();
}

io_object_t IOIteratorNext(io_iterator_t iterator)
{
  return MEMORY[0x24BDD8668](*(_QWORD *)&iterator);
}

IONotificationPortRef IONotificationPortCreate(mach_port_t mainPort)
{
  return (IONotificationPortRef)MEMORY[0x24BDD8690](*(_QWORD *)&mainPort);
}

void IONotificationPortDestroy(IONotificationPortRef notify)
{
  MEMORY[0x24BDD8698](notify);
}

void IONotificationPortSetDispatchQueue(IONotificationPortRef notify, dispatch_queue_t queue)
{
  MEMORY[0x24BDD86B0](notify, queue);
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return MEMORY[0x24BDD86F8](*(_QWORD *)&object);
}

kern_return_t IORegistryEntryGetRegistryEntryID(io_registry_entry_t entry, uint64_t *entryID)
{
  return MEMORY[0x24BDD8910](*(_QWORD *)&entry, entryID);
}

CFMutableDictionaryRef IORegistryEntryIDMatching(uint64_t entryID)
{
  return (CFMutableDictionaryRef)MEMORY[0x24BDD8918](entryID);
}

uint64_t IOReportChannelGetChannelName()
{
  return MEMORY[0x24BED4AC0]();
}

uint64_t IOReportChannelGetDriverName()
{
  return MEMORY[0x24BED4AC8]();
}

uint64_t IOReportChannelGetFormat()
{
  return MEMORY[0x24BED4AD0]();
}

uint64_t IOReportChannelGetGroup()
{
  return MEMORY[0x24BED4AD8]();
}

uint64_t IOReportChannelGetSubGroup()
{
  return MEMORY[0x24BED4AE0]();
}

uint64_t IOReportChannelGetUnitLabel()
{
  return MEMORY[0x24BED4AE8]();
}

uint64_t IOReportCopyFilteredChannels()
{
  return MEMORY[0x24BED4B18]();
}

uint64_t IOReportCreateSamples()
{
  return MEMORY[0x24BED4B20]();
}

uint64_t IOReportCreateSamplesDelta()
{
  return MEMORY[0x24BED4B28]();
}

uint64_t IOReportCreateSubscription()
{
  return MEMORY[0x24BED4B30]();
}

uint64_t IOReportHistogramGetBucketBounds()
{
  return MEMORY[0x24BED4B40]();
}

uint64_t IOReportHistogramGetBucketCount()
{
  return MEMORY[0x24BED4B48]();
}

uint64_t IOReportHistogramGetBucketHits()
{
  return MEMORY[0x24BED4B50]();
}

uint64_t IOReportHistogramGetMaxValue()
{
  return MEMORY[0x24BED4B60]();
}

uint64_t IOReportHistogramGetMinValue()
{
  return MEMORY[0x24BED4B68]();
}

uint64_t IOReportIterate()
{
  return MEMORY[0x24BED4B70]();
}

uint64_t IOReportSimpleGetIntegerValue()
{
  return MEMORY[0x24BED4B90]();
}

uint64_t IOReportStateGetCount()
{
  return MEMORY[0x24BED4B98]();
}

uint64_t IOReportStateGetDutyCycle()
{
  return MEMORY[0x24BED4BA0]();
}

uint64_t IOReportStateGetInTransitions()
{
  return MEMORY[0x24BED4BB0]();
}

uint64_t IOReportStateGetNameForIndex()
{
  return MEMORY[0x24BED4BB8]();
}

uint64_t IOReportStateGetResidency()
{
  return MEMORY[0x24BED4BC0]();
}

kern_return_t IOServiceAddMatchingNotification(IONotificationPortRef notifyPort, const io_name_t notificationType, CFDictionaryRef matching, IOServiceMatchingCallback callback, void *refCon, io_iterator_t *notification)
{
  return MEMORY[0x24BDD8960](notifyPort, notificationType, matching, callback, refCon, notification);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return MEMORY[0x24BDD8988](*(_QWORD *)&mainPort, matching);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x24BDD1280]();
}

uint64_t PLLogRegisteredEvent()
{
  return MEMORY[0x24BE74F58]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x24BDAC780](exception_object);
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x24BEDCE10]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x24BEDCE18]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

compression_status compression_stream_destroy(compression_stream *stream)
{
  return MEMORY[0x24BEDB998](stream);
}

compression_status compression_stream_init(compression_stream *stream, compression_stream_operation operation, compression_algorithm algorithm)
{
  return MEMORY[0x24BEDB9A8](stream, *(_QWORD *)&operation, *(_QWORD *)&algorithm);
}

compression_status compression_stream_process(compression_stream *stream, int flags)
{
  return MEMORY[0x24BEDB9B0](stream, *(_QWORD *)&flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x24BDADDC8]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x24BDADDD0](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x24BDADDD8](group);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x24BDADED0](label, attr);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x24BDADF28](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x24BDADF30](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x24BDADF38](dsema, timeout);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADFE8](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x24BDADFF8](when, delta);
}

uint64_t isTapToRadarAvailable()
{
  return MEMORY[0x24BE0A150]();
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x24BDAF138](*(_QWORD *)&token);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x24BDAF160](name);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x24BDAF170](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x24BEDD0B0](self, _cmd, offset, atomic);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x24BEDD138]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x24BEDD2A8](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x24BEDD3D0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x24BDAF368](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

long double pow(long double __x, long double __y)
{
  long double result;

  MEMORY[0x24BDAF688](__x, __y);
  return result;
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x24BEE4F50]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x24BEE5058]();
}

uint64_t tailspin_buffer_size_set()
{
  return MEMORY[0x24BEDE430]();
}

uint64_t tailspin_config_apply_sync()
{
  return MEMORY[0x24BEDE438]();
}

uint64_t tailspin_config_copy_description()
{
  return MEMORY[0x24BEDE440]();
}

uint64_t tailspin_config_create_with_config()
{
  return MEMORY[0x24BEDE448]();
}

uint64_t tailspin_config_create_with_current_state()
{
  return MEMORY[0x24BEDE450]();
}

uint64_t tailspin_config_create_with_default_config()
{
  return MEMORY[0x24BEDE458]();
}

uint64_t tailspin_config_free()
{
  return MEMORY[0x24BEDE470]();
}

uint64_t tailspin_dump_output_with_options_sync()
{
  return MEMORY[0x24BEDE4A0]();
}

uint64_t tailspin_enabled_set()
{
  return MEMORY[0x24BEDE4B0]();
}

uint64_t tailspin_full_sampling_period_set()
{
  return MEMORY[0x24BEDE4B8]();
}

uint64_t tailspin_kdbg_filter_class_set()
{
  return MEMORY[0x24BEDE4C0]();
}

uint64_t tailspin_kdbg_filter_clear()
{
  return MEMORY[0x24BEDE4C8]();
}

uint64_t tailspin_kdbg_filter_subclass_set()
{
  return MEMORY[0x24BEDE4D0]();
}

uint64_t tailspin_oncore_sampling_period_set()
{
  return MEMORY[0x24BEDE4D8]();
}

uint64_t tailspin_sampling_option_set()
{
  return MEMORY[0x24BEDE4E0]();
}

