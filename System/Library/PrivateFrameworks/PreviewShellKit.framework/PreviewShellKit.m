id ConnectViewController.__allocating_init()()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return sub_2447001B4();
}

id ConnectViewController.init()()
{
  return sub_2447001B4();
}

id sub_2446FEA64(__int16 *a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  void *v6;
  id result;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34[9];
  objc_super v35;

  v35.receiver = v1;
  v35.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(&qword_25737CF40);
  v3 = objc_msgSendSuper2(&v35, sel_initWithNibName_bundle_, 0, 0);
  sub_244701230(a1, (uint64_t)v34);
  v4 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_25737CF48));
  v5 = v3;
  v6 = (void *)sub_244794DC4();
  result = objc_msgSend(v6, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  v8 = result;
  objc_msgSend(result, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  objc_msgSend(v5, sel_addChildViewController_, v6);
  result = objc_msgSend(v5, sel_view);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = result;
  result = objc_msgSend(v6, sel_view);
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v10 = result;
  objc_msgSend(v9, sel_addSubview_, result);

  __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF30);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_244796130;
  result = objc_msgSend(v6, sel_view);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v12 = result;
  v13 = objc_msgSend(result, sel_topAnchor);

  result = objc_msgSend(v5, sel_view);
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v14 = result;
  v15 = objc_msgSend(result, sel_topAnchor);

  v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v15);
  *(_QWORD *)(v11 + 32) = v16;
  result = objc_msgSend(v6, sel_view);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v17 = result;
  v18 = objc_msgSend(result, sel_bottomAnchor);

  result = objc_msgSend(v5, sel_view);
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v19 = result;
  v20 = objc_msgSend(result, sel_bottomAnchor);

  v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);
  *(_QWORD *)(v11 + 40) = v21;
  result = objc_msgSend(v6, sel_view);
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v22 = result;
  v23 = objc_msgSend(result, sel_leftAnchor);

  result = objc_msgSend(v5, sel_view);
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v24 = result;
  v25 = objc_msgSend(result, sel_leftAnchor);

  v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v25);
  *(_QWORD *)(v11 + 48) = v26;
  result = objc_msgSend(v6, sel_view);
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v27 = result;
  v28 = objc_msgSend(result, sel_rightAnchor);

  result = objc_msgSend(v5, sel_view);
  if (result)
  {
    v29 = result;
    v30 = (void *)objc_opt_self();
    v31 = objc_msgSend(v29, sel_rightAnchor);

    v32 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v31);
    *(_QWORD *)(v11 + 56) = v32;
    v34[0] = v11;
    sub_24479519C();
    sub_2447011F4();
    v33 = (void *)sub_244795178();
    swift_bridgeObjectRelease();
    objc_msgSend(v30, sel_activateConstraints_, v33);

    objc_msgSend(v6, sel_didMoveToParentViewController_, v5);
    sub_24470126C((uint64_t)a1);
    return v5;
  }
LABEL_23:
  __break(1u);
  return result;
}

void sub_2446FEED0()
{
  sub_244795550();
  __break(1u);
}

id ConnectViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

__n128 XcodeImage.body.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __n128 result;
  uint64_t v23;
  _OWORD v24[8];
  uint64_t v25;

  v3 = sub_244794F38();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(double *)(v1 + 16);
  type metadata accessor for ConnectViewController();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = (void *)sub_24479504C();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_withConfiguration_, v11, v10, 0);

  if (v12)
    sub_244794F20();
  else
    sub_244794F2C();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDF3FD0], v3);
  v13 = sub_244794F44();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v14 = sub_244794F98();
  sub_2446FF1A0(0.0, 1, 0.0, 1, v7, 0, 0.0, 1, (uint64_t)v24, 0.0, 1, v7, 0, v14, v15, v13, 0, 1);
  swift_release();
  v16 = sub_244794EFC();
  KeyPath = swift_getKeyPath();
  v18 = v24[7];
  *(_OWORD *)(a1 + 96) = v24[6];
  *(_OWORD *)(a1 + 112) = v18;
  v19 = v25;
  v20 = v24[3];
  *(_OWORD *)(a1 + 32) = v24[2];
  *(_OWORD *)(a1 + 48) = v20;
  v21 = v24[5];
  *(_OWORD *)(a1 + 64) = v24[4];
  *(_OWORD *)(a1 + 80) = v21;
  result = (__n128)v24[1];
  *(_OWORD *)a1 = v24[0];
  *(__n128 *)(a1 + 16) = result;
  *(_QWORD *)(a1 + 128) = v19;
  *(_QWORD *)(a1 + 136) = KeyPath;
  *(_QWORD *)(a1 + 144) = v16;
  return result;
}

uint64_t sub_2446FF1A0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, __int16 a18)
{
  __int16 v19;
  void *v28;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v19 = a18;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_244795388();
    v28 = (void *)sub_244794E0C();
    sub_244794A64();

    v19 = a18;
  }
  sub_244794CE0();
  *(_OWORD *)(a9 + 72) = v33;
  *(_OWORD *)(a9 + 88) = v34;
  *(_OWORD *)(a9 + 104) = v35;
  *(_OWORD *)(a9 + 120) = v36;
  *(_OWORD *)(a9 + 24) = v30;
  *(_OWORD *)(a9 + 40) = v31;
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = a17;
  *(_BYTE *)(a9 + 16) = v19 & 1;
  *(_BYTE *)(a9 + 17) = HIBYTE(v19) & 1;
  *(_OWORD *)(a9 + 56) = v32;
  return swift_retain();
}

double sub_2446FF374@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_2446FF3CC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_25737CF00, &qword_25737CF08).n128_u64[0];
  return result;
}

__n128 sub_2446FF3CC@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t *v19;
  void *v28;
  _OWORD *v29;
  __n128 result;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __n128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v19 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_244795388();
    v28 = (void *)sub_244794E0C();
    sub_244794A64();

    v19 = a17;
  }
  sub_244794CE0();
  sub_244701400(v17, a9, a16);
  v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *v29 = v31;
  v29[1] = v32;
  result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

double sub_2446FF598@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_2446FF3CC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_25737CF10, &qword_25737CF18).n128_u64[0];
  return result;
}

uint64_t sub_2446FF5F8()
{
  return sub_244794ECC();
}

uint64_t ConnectView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  int v14;
  uint64_t v15;
  __int16 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v29 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737CCC0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737CCC8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737CCD0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)v1;
  v11 = *(_QWORD *)(v1 + 8);
  v13 = *(unsigned __int8 *)(v1 + 16);
  v14 = *(unsigned __int8 *)(v1 + 17);
  *(_QWORD *)v4 = sub_244794DB8();
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v15 = (uint64_t)&v4[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737CCD8) + 44)];
  if (v14)
    v16 = 256;
  else
    v16 = 0;
  sub_2446FF84C(v12, v11, v16 | v13, v15);
  v17 = sub_244794E24();
  sub_244701400((uint64_t)v4, (uint64_t)v7, &qword_25737CCC0);
  v7[*(int *)(v5 + 36)] = v17;
  sub_244701444((uint64_t)v4, &qword_25737CCC0);
  v18 = sub_244794F98();
  sub_2446FF3CC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v10, 0.0, 1, INFINITY, 0, v18, v19, &qword_25737CCC8, &qword_25737CCD0);
  sub_244701444((uint64_t)v7, &qword_25737CCC8);
  v20 = sub_244794EE4();
  v21 = sub_244794E18();
  v22 = sub_244794F98();
  v24 = v23;
  v25 = v29;
  sub_244701400((uint64_t)v10, v29, &qword_25737CCD0);
  v26 = v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737CCE0) + 36);
  *(_QWORD *)v26 = v20;
  *(_BYTE *)(v26 + 8) = v21;
  *(_QWORD *)(v26 + 16) = v22;
  *(_QWORD *)(v26 + 24) = v24;
  return sub_244701444((uint64_t)v10, &qword_25737CCD0);
}

uint64_t sub_2446FF84C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int16 v46;
  _QWORD v47[5];
  unsigned __int8 v48;
  uint64_t v49;

  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF50);
  v8 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF58);
  v11 = MEMORY[0x24BDAC7A8](v37);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v34 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v34 - v17;
  v36 = sub_244794DB8();
  sub_2446FFBF0((uint64_t)v47);
  v35 = v47[0];
  v39 = v47[1];
  v19 = v47[2];
  v41 = v47[4];
  v42 = v47[3];
  v40 = v48;
  v43 = v49;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v20 + 24) = a2;
  *(_BYTE *)(v20 + 32) = a3 & 1;
  *(_BYTE *)(v20 + 33) = HIBYTE(a3) & 1;
  v44 = a1;
  v45 = a2;
  v46 = a3 & 0x101;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF60);
  sub_24470130C(&qword_25737CF68, &qword_25737CF60, MEMORY[0x24BDF5428]);
  sub_244794F74();
  if ((a3 & 0x100) != 0)
  {
    v22 = (void *)sub_24479504C();
    v23 = (void *)objc_opt_self();
    v24 = objc_msgSend(v23, sel_colorNamed_, v22);

    if (!v24)
      v24 = objc_msgSend(v23, sel_systemBlueColor);
    v21 = MEMORY[0x249517A2C](v24);
  }
  else
  {
    v21 = 0;
  }
  KeyPath = swift_getKeyPath();
  v26 = v38;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v16, v10, v38);
  v27 = (uint64_t *)&v16[*(int *)(v37 + 36)];
  *v27 = KeyPath;
  v27[1] = v21;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v26);
  sub_244701354((uint64_t)v16, (uint64_t)v18);
  sub_244701400((uint64_t)v18, (uint64_t)v13, &qword_25737CF58);
  *(_QWORD *)a4 = 0;
  *(_BYTE *)(a4 + 8) = 1;
  *(_QWORD *)(a4 + 16) = v36;
  *(_QWORD *)(a4 + 24) = 0;
  *(_BYTE *)(a4 + 32) = 1;
  v28 = v39;
  *(_QWORD *)(a4 + 40) = v35;
  *(_QWORD *)(a4 + 48) = v28;
  *(_QWORD *)(a4 + 56) = v19;
  v30 = v41;
  v29 = v42;
  *(_QWORD *)(a4 + 64) = v42;
  *(_QWORD *)(a4 + 72) = v30;
  v31 = v40;
  *(_BYTE *)(a4 + 80) = v40;
  *(_QWORD *)(a4 + 88) = v43;
  *(_QWORD *)(a4 + 96) = 0;
  *(_BYTE *)(a4 + 104) = 1;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF70);
  sub_244701400((uint64_t)v13, a4 + *(int *)(v32 + 80), &qword_25737CF58);
  swift_bridgeObjectRetain();
  sub_24470139C(v29, v30, v31);
  swift_bridgeObjectRetain();
  sub_244701444((uint64_t)v18, &qword_25737CF58);
  sub_244701444((uint64_t)v13, &qword_25737CF58);
  swift_bridgeObjectRelease();
  sub_2447013AC(v29, v30, v31);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2446FFBF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  sub_244794DA0();
  v2 = sub_244794E90();
  v4 = v3;
  v6 = v5 & 1;
  sub_244794E54();
  v7 = sub_244794E78();
  v9 = v8;
  v11 = v10 & 1;
  sub_2447013AC(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_244794EFC();
  v12 = sub_244794E84();
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_release();
  sub_2447013AC(v7, v9, v11);
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = 0x6F634965646F6358;
  *(_QWORD *)(a1 + 8) = 0xEB0000000034366ELL;
  *(_QWORD *)(a1 + 16) = 0x4050000000000000;
  *(_QWORD *)(a1 + 24) = v12;
  *(_QWORD *)(a1 + 32) = v14;
  *(_BYTE *)(a1 + 40) = v16 & 1;
  *(_QWORD *)(a1 + 48) = v18;
  swift_bridgeObjectRetain();
  sub_24470139C(v12, v14, v16 & 1);
  swift_bridgeObjectRetain();
  sub_2447013AC(v12, v14, v16 & 1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2446FFD9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  void *v12;
  _QWORD aBlock[6];

  v0 = sub_244793804();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF80);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)aBlock - v8;
  sub_2447937F8();
  sub_244701400((uint64_t)v9, (uint64_t)v7, &qword_25737CF80);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v7, 1, v0) == 1)
  {
    sub_244701444((uint64_t)v9, &qword_25737CF80);
    v9 = v7;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v7, v0);
    v10 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
    v11 = (void *)sub_2447937BC();
    aBlock[4] = nullsub_1;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_244700078;
    aBlock[3] = &block_descriptor;
    v12 = _Block_copy(aBlock);
    objc_msgSend(v10, sel_openURL_withCompletionHandler_, v11, v12);
    _Block_release(v12);

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return sub_244701444((uint64_t)v9, &qword_25737CF80);
}

uint64_t sub_2446FFF94@<X0>(char a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  sub_2447013BC();
  swift_bridgeObjectRetain();
  v4 = sub_244794E9C();
  v6 = v5;
  v8 = v7;
  v10 = v9;
  if ((a1 & 1) != 0)
    v11 = sub_244794F2C();
  else
    v11 = 0;
  v12 = v8 & 1;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 32) = v11;
  sub_24470139C(v4, v6, v12);
  swift_bridgeObjectRetain();
  sub_2447013AC(v4, v6, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_244700078(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

void sub_2447000B8(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_2447000C0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_2447000D4(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_244700104(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_244700118(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_24470012C@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_244700138@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_244700144(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

_DWORD *sub_244700150(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

uint64_t sub_244700164@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_244794D1C();
  *a1 = result;
  return result;
}

uint64_t sub_24470018C()
{
  swift_retain();
  return sub_244794D28();
}

id sub_2447001B4()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id result;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  objc_super v31;

  v31.receiver = v0;
  v31.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(&qword_25737CF88);
  v1 = objc_msgSendSuper2(&v31, sel_initWithNibName_bundle_, 0, 0);
  objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_25737CF90));
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = (void *)sub_244794DC4();
  result = objc_msgSend(v3, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  v5 = result;
  objc_msgSend(result, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  objc_msgSend(v2, sel_addChildViewController_, v3);
  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v6 = result;
  result = objc_msgSend(v3, sel_view);
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  objc_msgSend(v6, sel_addSubview_, result);

  __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF30);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_244796130;
  result = objc_msgSend(v3, sel_view);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v9 = result;
  v10 = objc_msgSend(result, sel_topAnchor);

  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v11 = result;
  v12 = objc_msgSend(result, sel_topAnchor);

  v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v12);
  *(_QWORD *)(v8 + 32) = v13;
  result = objc_msgSend(v3, sel_view);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v14 = result;
  v15 = objc_msgSend(result, sel_bottomAnchor);

  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v16 = result;
  v17 = objc_msgSend(result, sel_bottomAnchor);

  v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
  *(_QWORD *)(v8 + 40) = v18;
  result = objc_msgSend(v3, sel_view);
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v19 = result;
  v20 = objc_msgSend(result, sel_leftAnchor);

  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = result;
  v22 = objc_msgSend(result, sel_leftAnchor);

  v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(_QWORD *)(v8 + 48) = v23;
  result = objc_msgSend(v3, sel_view);
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v24 = result;
  v25 = objc_msgSend(result, sel_rightAnchor);

  result = objc_msgSend(v2, sel_view);
  if (result)
  {
    v26 = result;
    v27 = (void *)objc_opt_self();
    v28 = objc_msgSend(v26, sel_rightAnchor);

    v29 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v28);
    *(_QWORD *)(v8 + 56) = v29;
    sub_24479519C();
    sub_2447011F4();
    v30 = (void *)sub_244795178();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_activateConstraints_, v30);

    objc_msgSend(v3, sel_didMoveToParentViewController_, v2);
    return v2;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ConnectViewController()
{
  uint64_t result;

  result = qword_25737CD10;
  if (!qword_25737CD10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24951880C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_2447006AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2447006BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2447006CC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for ConnectViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConnectViewController.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_244700714()
{
  return type metadata accessor for ConnectViewController();
}

uint64_t destroy for XcodeImage()
{
  return swift_bridgeObjectRelease();
}

_QWORD *_s15PreviewShellKit10XcodeImageVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for XcodeImage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for XcodeImage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for XcodeImage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XcodeImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for XcodeImage()
{
  return &type metadata for XcodeImage;
}

uint64_t sub_24470089C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ConnectView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ConnectView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConnectView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectView()
{
  return &type metadata for ConnectView;
}

unint64_t sub_244700A20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25737CDC0;
  if (!qword_25737CDC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737CDC8);
    v2[0] = sub_244700C04(&qword_25737CDD0, &qword_25737CDD8, (uint64_t (*)(void))sub_244700B00);
    v2[1] = sub_24470130C(&qword_25737CDF0, &qword_25737CDF8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25737CDC0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x249518818](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_244700B00()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25737CDE0;
  if (!qword_25737CDE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737CDE8);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEEC40];
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25737CDE0);
  }
  return result;
}

unint64_t sub_244700B68()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25737CE00;
  if (!qword_25737CE00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737CCE0);
    v2[0] = sub_244700C04(&qword_25737CE08, &qword_25737CCD0, (uint64_t (*)(void))sub_244700C70);
    v2[1] = sub_24470130C(&qword_25737CE20, &qword_25737CE28, MEMORY[0x24BDEF370]);
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25737CE00);
  }
  return result;
}

uint64_t sub_244700C04(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_244700C70()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25737CE10;
  if (!qword_25737CE10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737CCC8);
    v2[0] = sub_24470130C(&qword_25737CE18, &qword_25737CCC0, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDF0420];
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25737CE10);
  }
  return result;
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_2447014AC(a1, &qword_25737CEF0);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_244700D18(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_244700D38(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_2447014AC(a1, &qword_25737CEF8);
}

id sub_244700D74(char a1, void *a2, char a3, uint64_t a4)
{
  void *v4;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id result;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  objc_super v44;

  v44.receiver = v4;
  v44.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(&qword_25737CF20);
  v9 = objc_msgSendSuper2(&v44, sel_initWithNibName_bundle_, 0, 0);
  LOBYTE(v41) = a1;
  LOBYTE(v42) = a3;
  v43 = a4;
  v10 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_25737CF28));
  swift_retain();
  v11 = v9;
  v12 = a2;
  v13 = (void *)sub_244794DC4();
  result = objc_msgSend(v13, sel_view, v41, a2, v42, v43);
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  v15 = result;
  objc_msgSend(result, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  objc_msgSend(v11, sel_addChildViewController_, v13);
  result = objc_msgSend(v11, sel_view);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = result;
  result = objc_msgSend(v13, sel_view);
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v17 = result;
  objc_msgSend(v16, sel_addSubview_, result);

  __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF30);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_244796130;
  result = objc_msgSend(v13, sel_view);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v19 = result;
  v20 = objc_msgSend(result, sel_topAnchor);

  result = objc_msgSend(v11, sel_view);
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v21 = result;
  v22 = objc_msgSend(result, sel_topAnchor);

  v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(_QWORD *)(v18 + 32) = v23;
  result = objc_msgSend(v13, sel_view);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v24 = result;
  v25 = objc_msgSend(result, sel_bottomAnchor);

  result = objc_msgSend(v11, sel_view);
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v26 = result;
  v27 = objc_msgSend(result, sel_bottomAnchor);

  v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
  *(_QWORD *)(v18 + 40) = v28;
  result = objc_msgSend(v13, sel_view);
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v29 = result;
  v30 = objc_msgSend(result, sel_leftAnchor);

  result = objc_msgSend(v11, sel_view);
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v31 = result;
  v32 = objc_msgSend(result, sel_leftAnchor);

  v33 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v32);
  *(_QWORD *)(v18 + 48) = v33;
  result = objc_msgSend(v13, sel_view);
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v34 = result;
  v35 = objc_msgSend(result, sel_rightAnchor);

  result = objc_msgSend(v11, sel_view);
  if (result)
  {
    v36 = result;
    v37 = (void *)objc_opt_self();
    v38 = objc_msgSend(v36, sel_rightAnchor);

    v39 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v38);
    *(_QWORD *)(v18 + 56) = v39;
    sub_24479519C();
    sub_2447011F4();
    v40 = (void *)sub_244795178();
    swift_bridgeObjectRelease();
    objc_msgSend(v37, sel_activateConstraints_, v40, v18);

    objc_msgSend(v13, sel_didMoveToParentViewController_, v11);
    return v11;
  }
LABEL_23:
  __break(1u);
  return result;
}

unint64_t sub_2447011F4()
{
  unint64_t result;

  result = qword_25737CF38;
  if (!qword_25737CF38)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25737CF38);
  }
  return result;
}

uint64_t sub_244701230(__int16 *a1, uint64_t a2)
{
  initializeWithCopy for CrashedView(a2, a1);
  return a2;
}

uint64_t sub_24470126C(uint64_t a1)
{
  destroy for CrashedView(a1);
  return a1;
}

uint64_t sub_2447012A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2447012C4()
{
  return sub_2446FFD9C();
}

uint64_t sub_2447012EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2446FFF94(*(_BYTE *)(v1 + 32), a1);
}

uint64_t sub_24470130C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x249518824](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_244701354(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24470139C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_2447013AC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

unint64_t sub_2447013BC()
{
  unint64_t result;

  result = qword_25737CF78;
  if (!qword_25737CF78)
  {
    result = MEMORY[0x249518824](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25737CF78);
  }
  return result;
}

uint64_t sub_244701400(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_244701444(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_2447014AC(a1, &qword_25737CF98);
}

void sub_2447014AC(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

unint64_t static PreviewAgentUtilities.pathToPreviewsInjection.getter()
{
  return 0xD00000000000004FLL;
}

ValueMetadata *type metadata accessor for PreviewAgentUtilities()
{
  return &type metadata for PreviewAgentUtilities;
}

uint64_t PreviewSceneAgentProxy.invalidationHandle.getter()
{
  return swift_retain();
}

id PreviewSceneAgentProxy.scene.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

uint64_t PreviewSceneAgentProxy.pid.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 32);
}

uint64_t PreviewSceneAgentProxy.sceneClientSettingsUpdates.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D060);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE6A10], v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D070);
  sub_244795250();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_244701604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v8[9] = a6;
  v8[10] = v7;
  v8[7] = a4;
  v8[8] = a5;
  v8[5] = a2;
  v8[6] = a3;
  v8[4] = a1;
  v8[11] = *v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D328);
  v8[12] = v10;
  v8[13] = *(_QWORD *)(v10 - 8);
  v8[14] = swift_task_alloc();
  v11 = sub_2447945D8();
  v8[15] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v8[16] = v12;
  v8[17] = *(_QWORD *)(v12 + 64);
  v8[18] = swift_task_alloc();
  v8[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  v8[20] = swift_task_alloc();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D330);
  v8[21] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v8[22] = v14;
  v8[23] = *(_QWORD *)(v14 + 64);
  v8[24] = swift_task_alloc();
  v8[25] = swift_task_alloc();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0A8);
  v8[26] = v15;
  v8[27] = *(_QWORD *)(v15 - 8);
  v16 = swift_task_alloc();
  v17 = *a7;
  v8[28] = v16;
  v8[29] = v17;
  v8[30] = sub_244795208();
  v8[31] = sub_2447951FC();
  v8[32] = sub_2447951D8();
  v8[33] = v18;
  return swift_task_switch();
}

uint64_t sub_244701788()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  unsigned int v10;
  uint64_t (*v11)(uint64_t);
  _QWORD *v12;
  uint64_t v14;

  v1 = v0[9];
  v2 = v0[10];
  v3 = v0[8];
  v4 = v0[5];
  sub_2447948A8();
  swift_allocObject();
  LOBYTE(v14) = 2;
  *(_QWORD *)(v2 + 16) = sub_24479489C();
  v5 = OBJC_IVAR____TtC15PreviewShellKit22PreviewSceneAgentProxy_currentUpdateDelegate;
  v0[34] = OBJC_IVAR____TtC15PreviewShellKit22PreviewSceneAgentProxy_currentUpdateDelegate;
  v6 = v2 + v5;
  *(_OWORD *)v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_QWORD *)(v6 + 32) = 0;
  *(_QWORD *)(v2 + 24) = objc_msgSend(objc_allocWithZone((Class)PSScene), sel_initWithScene_, v4, v14, 0, 0);
  v7 = OBJC_IVAR____TtC15PreviewShellKit22PreviewSceneAgentProxy_messageStreamHub;
  v0[35] = OBJC_IVAR____TtC15PreviewShellKit22PreviewSceneAgentProxy_messageStreamHub;
  v8 = (_QWORD *)(v2 + v7);
  *v8 = v3;
  v8[1] = v1;
  swift_retain();
  swift_retain();
  v9 = (void *)sub_244793918();
  v10 = objc_msgSend(v9, sel_pid);

  *(_DWORD *)(v2 + 32) = v10;
  sub_2447943A4();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BE78560];
  v12 = (_QWORD *)swift_task_alloc();
  v0[36] = v12;
  sub_24470665C(&qword_25737D170, v11, MEMORY[0x24BE78528]);
  *v12 = v0;
  v12[1] = sub_244701914;
  return sub_2447938DC();
}

uint64_t sub_244701914()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 296) = v0;
  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_244701980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t ObjectType;
  uint64_t (*v51)(uint64_t, uint64_t);
  id v52;
  void *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 200);
  v67 = *(_QWORD *)(v0 + 184);
  v69 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD *)(v0 + 168);
  v65 = *(_QWORD *)(v0 + 176);
  v72 = v6;
  v7 = *(_QWORD *)(v0 + 80);
  v8 = *(void **)(v0 + 40);
  v79 = *(_QWORD *)(v0 + 32);
  v80 = *(_QWORD *)(v0 + 160);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v7 + OBJC_IVAR____TtC15PreviewShellKit22PreviewSceneAgentProxy_connectionSender, v1, v2);
  *(_QWORD *)(swift_allocObject() + 16) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D338);
  swift_allocObject();
  v77 = v8;
  *(_QWORD *)(v7 + 48) = sub_244793A44();
  v9 = objc_allocWithZone((Class)type metadata accessor for PreviewSceneAgentProxy.SceneDelegate(0));
  v10 = swift_retain_n();
  *(_QWORD *)(v7 + 40) = sub_244704E50(v10);
  v11 = *(int *)(v6 + 48);
  v12 = sub_2447951FC();
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_25737D180);
  v62 = MEMORY[0x24BEE3F20];
  v60 = MEMORY[0x24BEE4AE0] + 8;
  v61 = v13;
  v58 = v12;
  v59 = MEMORY[0x24BEE6930];
  LOBYTE(v57) = 2;
  v14 = v5;
  v15 = sub_244794458();
  swift_release();
  *(_QWORD *)(v5 + v11) = v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D080);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  v19 = v4;
  v76 = v14;
  v18(v4, v14, v16);
  v20 = v18;
  v74 = v18;
  v21 = v7;
  v63 = v7;
  v22 = v7 + OBJC_IVAR____TtC15PreviewShellKit22PreviewSceneAgentProxy_disconnected;
  v23 = v19;
  v75 = v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v22, v19, v16);
  swift_retain();
  swift_retain();
  sub_244793A5C();
  v24 = *(void **)(v21 + 40);
  objc_msgSend(v77, sel_setDelegate_, v24, v57, v58, v59, v60, v61, v62);
  *(_QWORD *)(v0 + 16) = v24;
  v25 = *(int *)(v72 + 48);
  v20(v23, v14, v16);
  *(_QWORD *)(v23 + v25) = v15;
  v26 = *(unsigned __int8 *)(v65 + 80);
  v27 = (v26 + 16) & ~v26;
  v67 += 7;
  v28 = swift_allocObject();
  sub_2447076A4(v23, v28 + v27);
  *(_QWORD *)(v28 + ((v27 + v67) & 0xFFFFFFFFFFFFFFF8)) = v63;
  sub_24470665C(&qword_25737D2F8, type metadata accessor for PreviewSceneAgentProxy.SceneDelegate, (uint64_t)&unk_2447964B4);
  swift_retain();
  swift_retain();
  v29 = v24;
  sub_24479477C();
  swift_release();

  v30 = sub_244795220();
  v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v64(v80, 1, 1, v30);
  v31 = *(int *)(v72 + 48);
  v32 = v23;
  v74(v23, v76, v16);
  *(_QWORD *)(v23 + v31) = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  v33 = sub_2447951FC();
  v34 = (v26 + 40) & ~v26;
  v35 = (v34 + v67) & 0xFFFFFFFFFFFFFFF8;
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = v33;
  v36[3] = MEMORY[0x24BEE6930];
  v36[4] = v79;
  sub_2447076A4(v32, (uint64_t)v36 + v34);
  *(_QWORD *)((char *)v36 + v35) = v63;
  sub_244713B34(v80, (uint64_t)&unk_25737D348, (uint64_t)v36);
  swift_release();
  v64(v80, 1, 1, v30);
  v37 = *(int *)(v72 + 48);
  v74(v32, v76, v75);
  *(_QWORD *)(v32 + v37) = v15;
  v38 = v77;
  swift_retain();
  swift_retain();
  v39 = sub_2447951FC();
  v40 = (_QWORD *)swift_allocObject();
  v40[2] = v39;
  v40[3] = MEMORY[0x24BEE6930];
  v40[4] = v63;
  sub_2447076A4(v32, (uint64_t)v40 + v34);
  *(_QWORD *)((char *)v40 + v35) = v79;
  *(_QWORD *)((char *)v40 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8)) = v38;
  sub_244713B34(v80, (uint64_t)&unk_25737D358, (uint64_t)v40);
  swift_release();
  v41 = *(_QWORD *)(v0 + 200);
  if (v69)
  {
    v42 = *(void **)(v0 + 232);
    v43 = *(void **)(v0 + 40);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();

    swift_release();
    swift_release();

    v44 = v41;
  }
  else
  {
    v73 = *(_QWORD *)(v0 + 144);
    v70 = *(_QWORD *)(v0 + 128);
    v45 = *(_QWORD *)(v0 + 112);
    v71 = *(_QWORD *)(v0 + 120);
    v46 = *(_QWORD *)(v0 + 96);
    v66 = *(_QWORD *)(v0 + 152);
    v68 = *(_QWORD *)(v0 + 104);
    v47 = *(_QWORD *)(v0 + 80);
    v48 = *(_QWORD *)(v0 + 56);
    v81 = *(_QWORD *)(v0 + 200);
    v78 = *(void **)(v0 + 40);
    v49 = *(void **)(v47 + 24);
    ObjectType = swift_getObjectType();
    v51 = *(uint64_t (**)(uint64_t, uint64_t))(v48 + 48);
    v52 = v49;
    v53 = (void *)v51(ObjectType, v48);
    objc_msgSend(v52, sel_updateSceneSettings_with_, v53, 0);

    (*(void (**)(uint64_t, uint64_t))(v48 + 56))(ObjectType, v48);
    swift_retain();
    sub_2447943F8();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v45, v46);
    *(_QWORD *)(v0 + 24) = v47;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16))(v73, v66, v71);
    v54 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    v55 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v70 + 32))(v55 + v54, v73, v71);
    sub_24470665C(&qword_25737D318, type metadata accessor for PreviewSceneAgentProxy, (uint64_t)&protocol conformance descriptor for PreviewSceneAgentProxy);
    sub_2447947E8();
    swift_release();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();

    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v66, v71);
    v44 = v81;
  }
  sub_244701444(v44, &qword_25737D330);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 80));
}

uint64_t sub_244702110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(void **)(v0 + 40);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  swift_release();

  sub_244701444(v2 + v1, &qword_25737D090);
  swift_release();
  swift_release();
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_244702250(void *a1, void *a2)
{
  uint64_t inited;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_244796330;
  *(_QWORD *)(inited + 32) = a1;
  v10 = inited;
  sub_24479519C();
  if (v10 >> 62)
  {
    v7 = a1;
    swift_bridgeObjectRetain();
    v8 = sub_24479555C();
    swift_bridgeObjectRelease();
    if (!v8)
      goto LABEL_5;
    goto LABEL_3;
  }
  v5 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = a1;
  if (v5)
LABEL_3:
    sub_244706D58(v10);
LABEL_5:
  swift_bridgeObjectRelease();
  sub_24470758C();
  sub_24470665C(&qword_25737D310, (uint64_t (*)(uint64_t))sub_24470758C, MEMORY[0x24BEE5BD8]);
  v9 = (void *)sub_244795304();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_sendActions_, v9);

}

void sub_244702378(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  _BYTE v27[24];

  v24 = a1;
  v17 = sub_244793A8C();
  MEMORY[0x24BDAC7A8](v17);
  v16 = sub_244793A74();
  MEMORY[0x24BDAC7A8](v16);
  v15 = sub_244793A68();
  v14[2] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v14[1] = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_244794AAC();
  v18 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24479435C();
  v5 = *(_QWORD *)(v4 - 8);
  v21 = v4;
  v22 = v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v6);
  v19 = (char *)v14 - v7;
  v8 = sub_244794338();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244795208();
  sub_2447951FC();
  sub_2447951E4();
  swift_release();
  v11 = v1 + OBJC_IVAR____TtC15PreviewShellKit22PreviewSceneAgentProxy_currentUpdateDelegate;
  swift_beginAccess();
  sub_244707B20(v11, (uint64_t)&v25);
  if (v26)
  {
    sub_244707B68(&v25, (uint64_t)v27);
    sub_244707B80(v24, (uint64_t)v10);
    v12 = (char *)&loc_2447025FC + 4 * byte_244796350[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_244701444((uint64_t)&v25, &qword_25737D090);
  v13 = (void *)sub_24479432C();
  objc_msgSend(v13, sel_invalidate);

}

uint64_t sub_244702998()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D330);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D360);
  sub_24470130C(&qword_25737D368, &qword_25737D360, MEMORY[0x24BE76490]);
  sub_244794548();
  sub_24470665C(&qword_25737D128, type metadata accessor for PreviewSceneAgentProxy, (uint64_t)&protocol conformance descriptor for PreviewSceneAgentProxy);
  return sub_24479459C();
}

uint64_t sub_244702AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  uint64_t v8;
  _QWORD *v9;

  v6[5] = a5;
  v6[6] = a6;
  v6[7] = *a6;
  v8 = sub_244794608();
  v6[8] = v8;
  v6[9] = *(_QWORD *)(v8 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = sub_244795208();
  v6[12] = sub_2447951FC();
  v6[2] = a4;
  v9 = (_QWORD *)swift_task_alloc();
  v6[13] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
  sub_24470130C(&qword_25737D380, &qword_25737D370, MEMORY[0x24BE78130]);
  *v9 = v6;
  v9[1] = sub_244702BA8;
  return sub_2447947F4();
}

uint64_t sub_244702BA8()
{
  swift_task_dealloc();
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_244702C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737D330) + 48));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D360);
  sub_24470130C(&qword_25737D368, &qword_25737D360, MEMORY[0x24BE76490]);
  sub_244794548();
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 48);
  sub_24470665C(&qword_25737D128, type metadata accessor for PreviewSceneAgentProxy, (uint64_t)&protocol conformance descriptor for PreviewSceneAgentProxy);
  sub_24479459C();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244702D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  _QWORD *v10;

  v7[16] = a6;
  v7[17] = a7;
  v7[14] = a4;
  v7[15] = a5;
  v9 = sub_244794608();
  v7[18] = v9;
  v7[19] = *(_QWORD *)(v9 - 8);
  v7[20] = swift_task_alloc();
  v7[21] = sub_244795208();
  v7[22] = sub_2447951FC();
  v7[10] = a4;
  v10 = (_QWORD *)swift_task_alloc();
  v7[23] = v10;
  type metadata accessor for PreviewSceneAgentProxy(0);
  sub_24470665C(&qword_25737D318, type metadata accessor for PreviewSceneAgentProxy, (uint64_t)&protocol conformance descriptor for PreviewSceneAgentProxy);
  *v10 = v7;
  v10[1] = sub_244702E40;
  return sub_2447947F4();
}

uint64_t sub_244702E40()
{
  swift_task_dealloc();
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_244702EB0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(void **)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 152);
  v9 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 112);
  swift_release();
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737D330) + 48));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D360);
  sub_24470130C(&qword_25737D368, &qword_25737D360, MEMORY[0x24BE76490]);
  sub_244794554();
  *(_QWORD *)(v0 + 96) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
  sub_24470130C(&qword_25737D378, &qword_25737D370, MEMORY[0x24BE78128]);
  sub_24479459C();
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v5 + 40);
  type metadata accessor for PreviewSceneAgentProxy.SceneDelegate(0);
  sub_24470665C(&qword_25737D2F0, type metadata accessor for PreviewSceneAgentProxy.SceneDelegate, (uint64_t)&unk_24479648C);
  sub_24479459C();
  sub_244722474(v2);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v9);
  *(_QWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  v6 = v5 + OBJC_IVAR____TtC15PreviewShellKit22PreviewSceneAgentProxy_currentUpdateDelegate;
  swift_beginAccess();
  sub_244705FC4(v0 + 16, v6);
  swift_endAccess();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PreviewSceneAgentProxy.onDisconnect(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_244795208();
  sub_2447951FC();
  sub_2447951E4();
  swift_release();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_244705EF0;
  *(_QWORD *)(v5 + 24) = v4;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D080);
  sub_244794464();
  return swift_release();
}

uint64_t sub_2447031BC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2447031DC(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_2447031FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  void (*v24)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t (*v47)(void);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE v57[12];
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  void (*v63)(_BYTE *, uint64_t, uint64_t);
  void (*v64)(_BYTE *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  _BYTE *v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[6];

  v77 = a2;
  v76 = a3;
  v79 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v3);
  v74 = &v57[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_24479438C();
  MEMORY[0x24BDAC7A8](v5);
  v71 = &v57[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v75 = sub_244794308();
  v70 = *(_QWORD *)(v75 - 8);
  v7 = MEMORY[0x24BDAC7A8](v75);
  v72 = v8;
  v73 = &v57[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v69 = &v57[-v9];
  v61 = sub_244793A68();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v11 = &v57[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_2447942F0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = &v57[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_244794320();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = &v57[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v67 = sub_244794AAC();
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v21 = &v57[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_244795208();
  sub_2447951FC();
  sub_2447951E4();
  swift_release();
  sub_244705F80(v76, (uint64_t)v81);
  v22 = v78 + OBJC_IVAR____TtC15PreviewShellKit22PreviewSceneAgentProxy_currentUpdateDelegate;
  swift_beginAccess();
  sub_244705FC4((uint64_t)v81, v22);
  swift_endAccess();
  sub_244794A7C();
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 16);
  v76 = v16;
  v64 = v23;
  v23(v19, v77, v16);
  v65 = v13;
  v24 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16);
  v25 = v15;
  v68 = v12;
  v63 = v24;
  v24(v15, v79, v12);
  v62 = v21;
  v26 = sub_244794AA0();
  v27 = sub_244795394();
  v28 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    v29 = swift_slowAlloc();
    v59 = swift_slowAlloc();
    v81[0] = v59;
    *(_DWORD *)v29 = 136446722;
    v58 = v28;
    sub_244794314();
    sub_24470665C(&qword_25737D0C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE78778], MEMORY[0x24BE78798]);
    v30 = v61;
    v31 = sub_2447955B0();
    v33 = v32;
    (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v11, v30);
    v80 = sub_24470600C(v31, v33, v81);
    sub_244795448();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v19, v76);
    *(_WORD *)(v29 + 12) = 2082;
    v34 = v69;
    sub_2447942C0();
    sub_24470665C(&qword_25737D0C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0], MEMORY[0x24BE78410]);
    v35 = v75;
    v36 = sub_2447955B0();
    v38 = v37;
    v39 = v70;
    (*(void (**)(_BYTE *, uint64_t))(v70 + 8))(v34, v35);
    v80 = sub_24470600C(v36, v38, v81);
    sub_244795448();
    swift_bridgeObjectRelease();
    v40 = v68;
    (*(void (**)(_BYTE *, uint64_t))(v65 + 8))(v25, v68);
    *(_WORD *)(v29 + 22) = 2082;
    v80 = sub_24470600C(0x79747265706F7250, 0xEC0000007473694CLL, v81);
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v26, (os_log_type_t)v58, "PreviewSceneAgentProxy performing update %{public}s for entry point %{public}s, expecting %{public}s", (uint8_t *)v29, 0x20u);
    v41 = v59;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v41, -1, -1);
    MEMORY[0x2495188D8](v29, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v66 + 8))(v62, v67);
    v42 = v39;
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v17 + 8))(v19, v76);
    v40 = v68;
    (*(void (**)(_BYTE *, uint64_t))(v65 + 8))(v25, v68);

    (*(void (**)(_BYTE *, uint64_t))(v66 + 8))(v62, v67);
    v34 = v69;
    v42 = v70;
  }
  v43 = v78;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0A0);
  v45 = (uint64_t)v71;
  v46 = &v71[*(int *)(v44 + 48)];
  v63(v71, v79, v40);
  v64(v46, v77, v76);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v45, 0, 1, v44);
  sub_244794494();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0A8);
  sub_24470130C(&qword_25737D0B0, &qword_25737D0A8, MEMORY[0x24BE78270]);
  v47 = MEMORY[0x24BE78538];
  sub_24470665C(&qword_25737D0B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE78538], MEMORY[0x24BE78530]);
  v48 = sub_2447940C8();
  sub_244707D44(v45, (uint64_t (*)(_QWORD))v47);
  LODWORD(v46) = *(_DWORD *)(v43 + 32);
  sub_2447942C0();
  v49 = sub_244795220();
  v50 = (uint64_t)v74;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v74, 1, 1, v49);
  v51 = v73;
  v52 = v75;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v42 + 16))(v73, v34, v75);
  v53 = (*(unsigned __int8 *)(v42 + 80) + 44) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v54 = swift_allocObject();
  *(_QWORD *)(v54 + 16) = 0;
  *(_QWORD *)(v54 + 24) = 0;
  *(_QWORD *)(v54 + 32) = v48;
  *(_DWORD *)(v54 + 40) = (_DWORD)v46;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v42 + 32))(v54 + v53, v51, v52);
  v55 = sub_2447044B8(v50, (uint64_t)&unk_25737D3A8, v54);
  (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v34, v52);
  return v55;
}

uint64_t PreviewSceneAgentProxy.perform<A>(update:with:delegate:expecting:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  void (*v24)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  _BYTE *v30;
  os_log_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  os_log_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t (*v50)(void);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v55[12];
  int v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  Class isa;
  os_log_t v61;
  void (*v62)(_BYTE *, uint64_t, uint64_t);
  uint64_t v63;
  void (*v64)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79[6];

  v71 = a6;
  v74 = a5;
  v75 = a3;
  v76 = a2;
  v77 = a1;
  v7 = sub_24479438C();
  MEMORY[0x24BDAC7A8](v7);
  v70 = &v55[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v73 = sub_244794308();
  v69 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v68 = &v55[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v61 = (os_log_t)sub_244793A68();
  isa = v61[-1].isa;
  MEMORY[0x24BDAC7A8](v61);
  v59 = &v55[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_2447942F0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v55[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_244794320();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = &v55[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = sub_244794AAC();
  v66 = *(_QWORD *)(v19 - 8);
  v67 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v21 = &v55[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_244795208();
  sub_2447951FC();
  sub_2447951E4();
  swift_release();
  sub_244705F80(v75, (uint64_t)v79);
  v72 = v6;
  v22 = v6 + OBJC_IVAR____TtC15PreviewShellKit22PreviewSceneAgentProxy_currentUpdateDelegate;
  swift_beginAccess();
  sub_244705FC4((uint64_t)v79, v22);
  swift_endAccess();
  sub_244794A7C();
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16);
  v75 = v15;
  v64 = v23;
  v23(v18, v76, v15);
  v63 = v12;
  v24 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16);
  v25 = v14;
  v62 = v24;
  v24(v14, v77, v11);
  v65 = v21;
  v26 = sub_244794AA0();
  v27 = sub_244795394();
  v28 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    v29 = swift_slowAlloc();
    v57 = swift_slowAlloc();
    v79[0] = v57;
    *(_DWORD *)v29 = 136446722;
    v58 = v11;
    v30 = v59;
    v56 = v28;
    sub_244794314();
    sub_24470665C(&qword_25737D0C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE78778], MEMORY[0x24BE78798]);
    v31 = v61;
    v32 = sub_2447955B0();
    v34 = v33;
    (*((void (**)(_BYTE *, os_log_t))isa + 1))(v30, v31);
    v78 = sub_24470600C(v32, v34, v79);
    v61 = v26;
    sub_244795448();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v18, v75);
    *(_WORD *)(v29 + 12) = 2082;
    v35 = (uint64_t)v68;
    sub_2447942C0();
    sub_24470665C(&qword_25737D0C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0], MEMORY[0x24BE78410]);
    v36 = v73;
    v37 = sub_2447955B0();
    v39 = v38;
    v40 = v69;
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v35, v36);
    v78 = sub_24470600C(v37, v39, v79);
    v11 = v58;
    sub_244795448();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v25, v11);
    *(_WORD *)(v29 + 22) = 2082;
    v41 = sub_244795694();
    v78 = sub_24470600C(v41, v42, v79);
    sub_244795448();
    swift_bridgeObjectRelease();
    v43 = v61;
    _os_log_impl(&dword_2446FC000, v61, (os_log_type_t)v56, "PreviewSceneAgentProxy performing update %{public}s for entry point %{public}s, expecting %{public}s", (uint8_t *)v29, 0x20u);
    v44 = v57;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v44, -1, -1);
    MEMORY[0x2495188D8](v29, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v66 + 8))(v65, v67);
    v45 = v40;
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v18, v75);
    (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v14, v11);

    (*(void (**)(_BYTE *, uint64_t))(v66 + 8))(v65, v67);
    v35 = (uint64_t)v68;
    v45 = v69;
  }
  v46 = v72;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0A0);
  v48 = (uint64_t)v70;
  v49 = &v70[*(int *)(v47 + 48)];
  v62(v70, v77, v11);
  v64(v49, v76, v75);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v48, 0, 1, v47);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0A8);
  sub_24470130C(&qword_25737D0B0, &qword_25737D0A8, MEMORY[0x24BE78270]);
  v50 = MEMORY[0x24BE78538];
  sub_24470665C(&qword_25737D0B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE78538], MEMORY[0x24BE78530]);
  v51 = v74;
  v52 = sub_2447940C8();
  sub_244707D44(v48, (uint64_t (*)(_QWORD))v50);
  LODWORD(v49) = *(_DWORD *)(v46 + 32);
  sub_2447942C0();
  v53 = Task<>.enhancingPreviewAgentConnectionError(for:_:)((int)v49, v35, v52, v51);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v35, v73);
  return v53;
}

uint64_t PreviewSceneAgentProxy.perform(update:with:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2447031FC(a1, a2, a3);
  v10 = sub_244795220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  sub_244795208();
  swift_retain();
  v11 = sub_2447951FC();
  v12 = (_QWORD *)swift_allocObject();
  v13 = MEMORY[0x24BEE6930];
  v12[2] = v11;
  v12[3] = v13;
  v12[4] = v9;
  v14 = sub_244704384((uint64_t)v8, (uint64_t)&unk_25737D0E0, (uint64_t)v12);
  swift_release();
  return v14;
}

uint64_t sub_244704190()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_244794494();
  v0[2] = v1;
  v0[3] = *(_QWORD *)(v1 - 8);
  v0[4] = swift_task_alloc();
  v0[5] = sub_244795208();
  v0[6] = sub_2447951FC();
  v2 = (_QWORD *)swift_task_alloc();
  v0[7] = v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_25737D180);
  *v2 = v0;
  v2[1] = sub_244704254;
  return sub_2447952C8();
}

uint64_t sub_244704254()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    (*(void (**)(_QWORD, _QWORD))(v2[3] + 8))(v2[4], v2[2]);
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_244704304()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244704344()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244704384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_244795220();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_244795214();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_244701444(a1, &qword_25737D0D0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2447951D8();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_2447044B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_244795220();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_244795214();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_244701444(a1, &qword_25737D0D0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2447951D8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  sub_244794494();
  return swift_task_create();
}

uint64_t PreviewSceneAgentProxy.generateStaticOutput<A>(for:expecting:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = v3;
  v7 = sub_24479438C();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BE78538];
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0A0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0A8);
  sub_24470130C(&qword_25737D0B0, &qword_25737D0A8, MEMORY[0x24BE78270]);
  sub_24470665C(&qword_25737D0B8, v8, MEMORY[0x24BE78530]);
  v12 = sub_2447940C8();
  sub_244707D44((uint64_t)v10, v8);
  v13 = Task<>.enhancingPreviewAgentConnectionError(for:_:)(*(_DWORD *)(v4 + 32), a1, v12, a3);
  swift_release();
  return v13;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_244794308();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2447942FC();
  v9 = PreviewSceneAgentProxy.generateStaticOutput<A>(for:expecting:)((uint64_t)v7, v8, a3);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9;
}

uint64_t PreviewSceneAgentProxy.sendCommitPostSynchronize()()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[16];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0E8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = &v6[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_244795208();
  sub_2447951FC();
  sub_2447951E4();
  swift_release();
  v6[15] = 0;
  v3 = sub_244794FB0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = sub_244793A2C();
  sub_244701444((uint64_t)v2, &qword_25737D0E8);
  return v4;
}

uint64_t PreviewSceneAgentProxy.sendRequestPreferredSize()()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[16];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0E8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = &v6[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_244795208();
  sub_2447951FC();
  sub_2447951E4();
  swift_release();
  v6[15] = 1;
  v3 = sub_244794FB0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  type metadata accessor for CGSize(0);
  v4 = sub_244793A38();
  sub_244701444((uint64_t)v2, &qword_25737D0E8);
  return v4;
}

uint64_t PreviewSceneAgentProxy.addMessageStream(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = sub_244793F18();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = v3;
  v6 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[1] = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0F0);
  v11 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  v26 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244793D14();
  v24 = sub_2447952A4();
  v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15PreviewShellKit22PreviewSceneAgentProxy_messageStreamHub);
  v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15PreviewShellKit22PreviewSceneAgentProxy_messageStreamHub + 8);
  v16 = *(_DWORD *)(v1 + 32);
  v23[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D100);
  v17 = sub_244795220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 1, 1, v17);
  v18 = v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v19 = (*(unsigned __int8 *)(v4 + 80) + 36) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v15;
  *(_QWORD *)(v20 + 24) = v14;
  *(_DWORD *)(v20 + 32) = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v20 + v19, (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v18);
  swift_retain();
  swift_retain();
  sub_2447949BC();
  sub_24470130C(&qword_25737D110, &qword_25737D0F0, MEMORY[0x24BE76D88]);
  v21 = v25;
  sub_244794578();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v21);
  return v24;
}

uint64_t PreviewSceneAgentProxy.sendEndpoint(_:context:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v5 = sub_244793E40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_244794398();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BE78550];
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737D118) + 48)];
  v14 = sub_244793F18();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, a3, v14);
  v15 = sub_244794494();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, a2, v15);
  sub_244793E34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0A8);
  sub_24470665C(&qword_25737D120, v10, MEMORY[0x24BE78548]);
  sub_2447939B4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_244707D44((uint64_t)v12, v10);
}

id sub_244704E50(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  _QWORD v13[2];
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D060);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtCC15PreviewShellKit22PreviewSceneAgentProxyP33_3E64D4B6ABF6A6AD0F98F116D965CFCA13SceneDelegate_invalidationHandle;
  sub_244795208();
  v9 = v1;
  sub_2447951FC();
  sub_244794854();
  swift_allocObject();
  *(_QWORD *)&v1[v8] = sub_244794848();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE6A10], v4);
  sub_244795280();
  *(_QWORD *)&v9[OBJC_IVAR____TtCC15PreviewShellKit22PreviewSceneAgentProxyP33_3E64D4B6ABF6A6AD0F98F116D965CFCA13SceneDelegate_sceneMessenger] = a1;
  swift_retain();

  v14.receiver = v9;
  v14.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v14, sel_init);
  v13[1] = v10;
  *(_QWORD *)(swift_allocObject() + 16) = v10;
  sub_24470665C(&qword_25737D2F8, type metadata accessor for PreviewSceneAgentProxy.SceneDelegate, (uint64_t)&unk_2447964B4);
  v11 = v10;
  sub_24479477C();
  swift_release();

  swift_release();
  return v11;
}

uint64_t sub_244705250(void *a1)
{
  id v2;
  id v3;

  sub_2447954CC();
  sub_2447950E8();
  v2 = objc_msgSend(a1, sel_clientSettings);
  v3 = objc_msgSend(v2, sel_description);
  sub_244795058();

  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  return 0;
}

uint64_t SceneClientSettingsUpdate.init(clientSettings:transitionContext:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

id sub_2447053F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_244705490()
{
  return swift_retain();
}

uint64_t sub_2447054A4()
{
  sub_24470665C(&qword_25737D2F8, type metadata accessor for PreviewSceneAgentProxy.SceneDelegate, (uint64_t)&unk_2447964B4);
  return sub_244794770();
}

uint64_t PreviewSceneAgentProxy.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC15PreviewShellKit22PreviewSceneAgentProxy_connectionSender;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_244701444(v0 + OBJC_IVAR____TtC15PreviewShellKit22PreviewSceneAgentProxy_currentUpdateDelegate, &qword_25737D090);
  swift_release();
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC15PreviewShellKit22PreviewSceneAgentProxy_disconnected;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D080);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t PreviewSceneAgentProxy.__deallocating_deinit()
{
  PreviewSceneAgentProxy.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2447055E8()
{
  return swift_retain();
}

uint64_t sub_2447055F4()
{
  sub_24470665C(&qword_25737D318, type metadata accessor for PreviewSceneAgentProxy, (uint64_t)&protocol conformance descriptor for PreviewSceneAgentProxy);
  return sub_2447947D0();
}

id SceneClientSettingsUpdate.clientSettings.getter()
{
  id *v0;

  return *v0;
}

void SceneClientSettingsUpdate.clientSettings.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*SceneClientSettingsUpdate.clientSettings.modify())()
{
  return nullsub_1;
}

void *SceneClientSettingsUpdate.transitionContext.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

void SceneClientSettingsUpdate.transitionContext.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*SceneClientSettingsUpdate.transitionContext.modify())()
{
  return nullsub_1;
}

uint64_t sub_2447056E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  *(_QWORD *)(v6 + 96) = a6;
  *(_DWORD *)(v6 + 68) = a5;
  *(_QWORD *)(v6 + 104) = type metadata accessor for AgentConnectionError();
  *(_QWORD *)(v6 + 112) = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B0);
  *(_QWORD *)(v6 + 120) = v7;
  *(_QWORD *)(v6 + 128) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 136) = swift_task_alloc();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 144) = v8;
  sub_244794494();
  __swift_instantiateConcreteTypeFromMangledName(qword_25737D180);
  *v8 = v6;
  v8[1] = sub_244705800;
  return sub_2447952C8();
}

uint64_t sub_244705800()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 152) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2447058D4()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v12;
  void *v13;
  _QWORD *v14;

  v1 = (void *)sub_244793798();
  v2 = objc_msgSend(v1, sel_isBSServiceConnectionError);

  if (!v2)
  {
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = objc_msgSend((id)objc_opt_self(), sel_identifierWithPid_, *(unsigned int *)(v0 + 68));
  if (!v3)
    goto LABEL_7;
  v4 = v3;
  v5 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 88) = 0;
  v6 = objc_msgSend(v5, sel_handleForIdentifier_error_, v4, v0 + 88);
  v7 = *(void **)(v0 + 88);
  if (!v6)
  {
    v12 = v7;
    v13 = (void *)sub_2447937A4();

    swift_willThrow();
LABEL_7:
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
    v10 = sub_2447949D4();
    goto LABEL_8;
  }
  v8 = v6;
  v9 = v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  *(_QWORD *)(swift_task_alloc() + 16) = v8;
  sub_244794980();
  swift_task_dealloc();
  sub_244794968();
  v10 = sub_24479498C();
  swift_release();
  swift_release();

LABEL_8:
  *(_QWORD *)(v0 + 160) = v10;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v14;
  *v14 = v0;
  v14[1] = sub_244705BC0;
  return sub_2447949A4();
}

uint64_t sub_244705BC0()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244705C48()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;

  v1 = *(void **)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 104);
  sub_2447945E4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v8 = *(void **)(v0 + 56);
  v9 = *(_BYTE *)(v0 + 64);
  v10 = sub_244794308();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v5, v6, v10);
  *(_QWORD *)(v0 + 72) = v8;
  *(_BYTE *)(v0 + 80) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3C0);
  *(_BYTE *)(v5 + *(int *)(v7 + 20)) = sub_244795688() & 1;
  v11 = v1;
  sub_24470665C(&qword_25737D3C8, (uint64_t (*)(uint64_t))type metadata accessor for AgentConnectionError, (uint64_t)&unk_244796D00);
  sub_24479465C();

  v12 = *(_QWORD *)(v0 + 40);
  v13 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v12);
  v14 = *(_QWORD *)(v12 - 8);
  v15 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v14 + 16))(v15, v13, v12);
  if (sub_2447955BC())
  {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v12);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v16, v15, v12);
  }
  v17 = *(void **)(v0 + 152);
  v18 = *(_QWORD *)(v0 + 112);
  swift_willThrow();

  sub_244707D38(v8, v9);
  sub_244707D44(v18, (uint64_t (*)(_QWORD))type metadata accessor for AgentConnectionError);
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244705E7C(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_244705E8C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_244705EC0()
{
  return 0;
}

uint64_t sub_244705ECC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244705EF0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_244705F10(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_24470600C(v6, v7, a3);
  v8 = *a1 + 8;
  sub_244795448();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_244705F80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_244705FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24470600C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_2447060DC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_244707DA8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_244707DA8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_2447060DC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_244795454();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_244706294(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_2447954FC();
  if (!v8)
  {
    sub_244795544();
    __break(1u);
LABEL_17:
    result = sub_24479558C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_244706294(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_244706328(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_244706500(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_244706500(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_244706328(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_24470649C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_2447954D8();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_244795544();
      __break(1u);
LABEL_10:
      v2 = sub_244795100();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_24479558C();
    __break(1u);
LABEL_14:
    result = sub_244795544();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_24470649C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25737D3D0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_244706500(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25737D3D0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_24479558C();
  __break(1u);
  return result;
}

_BYTE **sub_24470664C(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_24470665C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x249518824](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24470669C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2447066C8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_244706734;
  return sub_244704190();
}

uint64_t sub_244706734()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_24470677C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244793F18();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 36) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_2447067F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_244793F18() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_DWORD *)(v1 + 32);
  v8 = v1 + ((v4 + 36) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_244707DE8;
  return sub_244743990(a1, v5, v6, v7, v8);
}

uint64_t sub_24470688C()
{
  return sub_24470665C(&qword_25737D128, type metadata accessor for PreviewSceneAgentProxy, (uint64_t)&protocol conformance descriptor for PreviewSceneAgentProxy);
}

uint64_t type metadata accessor for PreviewSceneAgentProxy(uint64_t a1)
{
  return sub_244706AAC(a1, (uint64_t *)&unk_25737D158);
}

uint64_t sub_2447068CC()
{
  return type metadata accessor for PreviewSceneAgentProxy(0);
}

void sub_2447068D4()
{
  unint64_t v0;
  unint64_t v1;

  sub_2447069AC();
  if (v0 <= 0x3F)
  {
    sub_244706A24();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for PreviewSceneAgentProxy()
{
  return swift_lookUpClassMethod();
}

void sub_2447069AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25737D168)
  {
    sub_2447943A4();
    sub_24470665C(&qword_25737D170, (uint64_t (*)(uint64_t))MEMORY[0x24BE78560], MEMORY[0x24BE78528]);
    v0 = sub_2447939CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25737D168);
  }
}

void sub_244706A24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25737D178)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_25737D180);
    v0 = sub_244794470();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25737D178);
  }
}

uint64_t sub_244706A90()
{
  return type metadata accessor for PreviewSceneAgentProxy.SceneDelegate(0);
}

uint64_t type metadata accessor for PreviewSceneAgentProxy.SceneDelegate(uint64_t a1)
{
  return sub_244706AAC(a1, (uint64_t *)&unk_25737D2D8);
}

uint64_t sub_244706AAC(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_244706AE0()
{
  unint64_t v0;

  sub_244706B5C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_244706B5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25737D2E8)
  {
    v0 = sub_244795274();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25737D2E8);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for SceneClientSettingsUpdate(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for SceneClientSettingsUpdate(id *a1)
{

}

uint64_t assignWithCopy for SceneClientSettingsUpdate(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for SceneClientSettingsUpdate(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for HostShellMessageStreamHub(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HostShellMessageStreamHub(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SceneClientSettingsUpdate()
{
  return &type metadata for SceneClientSettingsUpdate;
}

uint64_t sub_244706D2C()
{
  return sub_24470665C(&qword_25737D2F0, type metadata accessor for PreviewSceneAgentProxy.SceneDelegate, (uint64_t)&unk_24479648C);
}

void sub_244706D58(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_24479555C();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737D398);
      v3 = sub_2447954C0();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_24479555C();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x24BEE4B08];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v41 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v39 = v1;
    while (1)
    {
      v8 = MEMORY[0x249518044](v7, v1);
      v9 = __OFADD__(v7++, 1);
      if (v9)
      {
        __break(1u);
        goto LABEL_37;
      }
      v10 = v8;
      v11 = sub_2447953F4();
      v12 = -1 << *(_BYTE *)(v3 + 32);
      v13 = v11 & ~v12;
      v14 = v13 >> 6;
      v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
      v16 = 1 << v13;
      if (((1 << v13) & v15) != 0)
      {
        sub_24470758C();
        v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
        v18 = sub_244795400();

        if ((v18 & 1) != 0)
        {
LABEL_11:
          swift_unknownObjectRelease();
          v1 = v39;
          goto LABEL_12;
        }
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_244795400();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v39;
      }
      *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
      v22 = *(_QWORD *)(v3 + 16);
      v9 = __OFADD__(v22, 1);
      v23 = v22 + 1;
      if (v9)
        goto LABEL_38;
      *(_QWORD *)(v3 + 16) = v23;
LABEL_12:
      if (v7 == v41)
        return;
    }
  }
  v24 = 0;
  v40 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v40)
  {
    v25 = *(id *)(v1 + 32 + 8 * v24);
    v26 = sub_2447953F4();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_24470758C();
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_244795400();

      if ((v33 & 1) != 0)
        goto LABEL_24;
      v34 = ~v27;
      v28 = (v28 + 1) & v34;
      v29 = v28 >> 6;
      v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
      v31 = 1 << v28;
      if ((v30 & (1 << v28)) != 0)
      {
        while (1)
        {
          v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
          v36 = sub_244795400();

          if ((v36 & 1) != 0)
            break;
          v28 = (v28 + 1) & v34;
          v29 = v28 >> 6;
          v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
          v31 = 1 << v28;
          if ((v30 & (1 << v28)) == 0)
            goto LABEL_32;
        }
LABEL_24:

        v4 = v41;
        goto LABEL_25;
      }
LABEL_32:
      v4 = v41;
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_39;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v4)
      return;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_2447070B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  sub_244795208();
  sub_2447951FC();
  sub_2447951E4();
  swift_release();
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_244795490();
    sub_24470758C();
    sub_24470665C(&qword_25737D310, (uint64_t (*)(uint64_t))sub_24470758C, MEMORY[0x24BEE5BD8]);
    sub_24479531C();
    a1 = v19;
    v2 = v20;
    v3 = v21;
    v4 = v22;
    v5 = v23;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v2 = a1 + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v4 = 0;
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  while (a1 < 0)
  {
    if (!sub_24479549C())
      goto LABEL_32;
    sub_24470758C();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v13 = v18;
    swift_unknownObjectRelease();
    v12 = v4;
    v10 = v5;
    if (!v18)
      goto LABEL_32;
LABEL_30:
    sub_244793A80();
    if (swift_dynamicCastClass())
    {
      v17 = v13;
      sub_244793A50();

    }
    v4 = v12;
    v5 = v10;
  }
  if (v5)
  {
    v10 = (v5 - 1) & v5;
    v11 = __clz(__rbit64(v5)) | (v4 << 6);
    v12 = v4;
LABEL_29:
    v13 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v11);
    if (!v13)
      goto LABEL_32;
    goto LABEL_30;
  }
  v14 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v14 >= v9)
      goto LABEL_32;
    v15 = *(_QWORD *)(v2 + 8 * v14);
    v12 = v4 + 1;
    if (!v15)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v9)
        goto LABEL_32;
      v15 = *(_QWORD *)(v2 + 8 * v12);
      if (!v15)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v9)
          goto LABEL_32;
        v15 = *(_QWORD *)(v2 + 8 * v12);
        if (!v15)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v9)
            goto LABEL_32;
          v15 = *(_QWORD *)(v2 + 8 * v12);
          if (!v15)
          {
            v16 = v4 + 5;
            while (v9 != v16)
            {
              v15 = *(_QWORD *)(v2 + 8 * v16++);
              if (v15)
              {
                v12 = v16 - 1;
                goto LABEL_28;
              }
            }
LABEL_32:
            sub_2447075C8();
            return;
          }
        }
      }
    }
LABEL_28:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v12 << 6);
    goto LABEL_29;
  }
  __break(1u);
}

void sub_2447073A4(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  _QWORD v14[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D300);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244795208();
  sub_2447951FC();
  sub_2447951E4();
  swift_release();
  v8 = objc_msgSend(a1, sel_clientSettings);
  objc_opt_self();
  v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    v10 = (void *)v9;
    v14[0] = v9;
    v14[1] = a2;
    v11 = a2;
    v12 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737D070);
    sub_24479525C();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {

    MEMORY[0x24BDAC7A8](v13);
    sub_244794614();
  }
}

uint64_t sub_244707584()
{
  uint64_t v0;

  return sub_244705250(*(void **)(v0 + 16));
}

unint64_t sub_24470758C()
{
  unint64_t result;

  result = qword_25737D308;
  if (!qword_25737D308)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25737D308);
  }
  return result;
}

uint64_t sub_2447075C8()
{
  return swift_release();
}

uint64_t sub_2447075D0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2447075F4(void *a1)
{
  uint64_t v1;

  sub_244702250(a1, *(void **)(v1 + 16));
}

uint64_t sub_244707600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737D330) - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D080);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2447076A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2447076EC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D330);
  return sub_244702998();
}

uint64_t sub_244707740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737D330) - 8) + 80);
  v2 = (v1 + 40) & ~v1;
  swift_unknownObjectRelease();
  swift_release();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D080);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2447077F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737D330) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *(_QWORD **)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_244706734;
  return sub_244702AB8(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_2447078A4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737D330) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D080);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_244707970(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737D330) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[4];
  v10 = (uint64_t)v1 + v5;
  v11 = *(_QWORD *)((char *)v1 + v6);
  v12 = *(_QWORD *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_244707DE8;
  return sub_244702D60(a1, v7, v8, v9, v10, v11, v12);
}

id sub_244707A38(_QWORD *a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 24), sel_updateSceneSettings_with_, *a1, a1[1]);
}

uint64_t sub_244707A4C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_2447945D8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_244707AAC()
{
  sub_2447945D8();
  return sub_2447945CC();
}

uint64_t sub_244707B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_244707B68(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_244707B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244794338();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_244707BE8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D070);
  return sub_244795268();
}

uint64_t sub_244707C20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244794308();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 44) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_244707C9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_244794308() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_DWORD *)(v1 + 40);
  v9 = v1 + ((v4 + 44) & ~v4);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_244707DE8;
  return sub_2447056E8(a1, v5, v6, v7, v8, v9);
}

void sub_244707D38(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

uint64_t sub_244707D44(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_244707D80(uint64_t a1)
{
  uint64_t v1;

  sub_2447217FC(a1, *(void **)(v1 + 16));
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_244707DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

id CrashedViewController.__allocating_init(style:snapshotImage:)(__int16 *a1, void *a2)
{
  objc_class *v2;
  id v5;
  id v6;
  id v7;
  char v9;
  uint64_t v10;
  __int16 v11[24];
  void *v12;
  char v13;
  uint64_t v14;

  v5 = objc_allocWithZone(v2);
  sub_244707F18(a1, (uint64_t)v11);
  v12 = a2;
  v6 = a2;
  sub_244794F50();
  v13 = v9;
  v14 = v10;
  v7 = sub_2446FEA64(v11);

  sub_244707F54((uint64_t)a1);
  return v7;
}

id CrashedViewController.init(style:snapshotImage:)(__int16 *a1, void *a2)
{
  id v4;
  id v5;
  char v7;
  uint64_t v8;
  __int16 v9[24];
  void *v10;
  char v11;
  uint64_t v12;

  sub_244707F18(a1, (uint64_t)v9);
  v10 = a2;
  v4 = a2;
  sub_244794F50();
  v11 = v7;
  v12 = v8;
  v5 = sub_2446FEA64(v9);

  sub_244707F54((uint64_t)a1);
  return v5;
}

uint64_t sub_244707F18(__int16 *a1, uint64_t a2)
{
  initializeWithCopy for SceneCrashedStyle(a2, a1);
  return a2;
}

uint64_t sub_244707F54(uint64_t a1)
{
  destroy for SceneCrashedStyle(a1);
  return a1;
}

void sub_244707F88()
{
  sub_244795550();
  __break(1u);
}

id CrashedViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

double CrashedView.body.getter@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __int16 *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  char v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  double result;
  __int128 v19;
  _OWORD v20[4];
  uint64_t v21;
  id v22;
  _QWORD v23[7];
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD v28[2];
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  v2 = (__int16 *)v1;
  v4 = sub_244794F8C();
  MEMORY[0x24BDAC7A8](v4);
  v5 = *(void **)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 64);
  LOBYTE(v28[0]) = *(_BYTE *)(v1 + 56);
  *((_QWORD *)&v28[0] + 1) = v6;
  v7 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D440);
  sub_244794F5C();
  v8 = (char)v22;
  v22 = objc_msgSend((id)objc_opt_self(), sel_rootSettings);
  sub_244707F18(v2, (uint64_t)v23);
  v23[6] = v5;
  v24 = v8;
  sub_244794F80();
  v25 = sub_244794CC8();
  v26 = 0x404E000000000000;
  v9 = (void *)sub_24479504C();
  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_colorNamed_, v9);

  if (!v11)
    v11 = objc_msgSend(v10, sel_systemBlueColor);
  v27 = MEMORY[0x249517A2C](v11);
  sub_244701230(v2, (uint64_t)v20);
  v12 = swift_allocObject();
  v13 = v20[3];
  *(_OWORD *)(v12 + 48) = v20[2];
  *(_OWORD *)(v12 + 64) = v13;
  *(_QWORD *)(v12 + 80) = v21;
  v14 = v20[1];
  *(_OWORD *)(v12 + 16) = v20[0];
  *(_OWORD *)(v12 + 32) = v14;
  sub_2447082CC((uint64_t)&v22, (uint64_t)v28);
  *(_QWORD *)&v33 = sub_2447082C4;
  *((_QWORD *)&v33 + 1) = v12;
  v34 = 0uLL;
  sub_244708300((uint64_t)&v22);
  v15 = v32;
  a1[4] = v31;
  a1[5] = v15;
  v16 = v34;
  a1[6] = v33;
  a1[7] = v16;
  v17 = v28[1];
  *a1 = v28[0];
  a1[1] = v17;
  result = *(double *)&v29;
  v19 = v30;
  a1[2] = v29;
  a1[3] = v19;
  return result;
}

uint64_t sub_244708234()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D440);
  return sub_244794F68();
}

uint64_t sub_244708288()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2447082C4()
{
  return sub_244708234();
}

uint64_t sub_2447082CC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for InnerCrashedView(a2, a1);
  return a2;
}

uint64_t sub_244708300(uint64_t a1)
{
  destroy for InnerCrashedView(a1);
  return a1;
}

uint64_t sub_24470832C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for CrashedViewController(uint64_t a1)
{
  return sub_244706AAC(a1, qword_25737D470);
}

uint64_t method lookup function for CrashedViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CrashedViewController.__allocating_init(style:snapshotImage:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_244708368()
{
  return type metadata accessor for CrashedViewController(0);
}

uint64_t initializeBufferWithCopyOfBuffer for ServerFarm(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for CrashedView(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 32))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);

  return swift_release();
}

uint64_t initializeWithCopy for CrashedView(uint64_t a1, __int16 *a2)
{
  __int16 *v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  void *v10;
  id v11;

  v5 = *a2;
  v4 = a2 + 4;
  *(_WORD *)a1 = v5;
  v6 = a1 + 8;
  v7 = *((_QWORD *)a2 + 4);
  if (v7)
  {
    v8 = *((_QWORD *)a2 + 5);
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v6, (uint64_t)v4);
  }
  else
  {
    v9 = *((_OWORD *)v4 + 1);
    *(_OWORD *)v6 = *(_OWORD *)v4;
    *(_OWORD *)(v6 + 16) = v9;
    *(_QWORD *)(v6 + 32) = *((_QWORD *)v4 + 4);
  }
  v10 = (void *)*((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  v11 = v10;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CrashedView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  void *v9;
  void *v10;
  id v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = a1 + 8;
  v5 = (__int128 *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 32) = v6;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, a2 + 8);
      goto LABEL_8;
    }
LABEL_7:
    v7 = *v5;
    v8 = v5[1];
    *(_QWORD *)(v4 + 32) = *((_QWORD *)v5 + 4);
    *(_OWORD *)v4 = v7;
    *(_OWORD *)(v4 + 16) = v8;
    goto LABEL_8;
  }
  if (!v6)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
LABEL_8:
  v9 = *(void **)(a1 + 48);
  v10 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v10;
  v11 = v10;

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for CrashedView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void *v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = a1 + 8;
  if (*(_QWORD *)(a1 + 32))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v4 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(a2 + 40);
  v7 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v6;

  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CrashedView(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CrashedView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CrashedView()
{
  return &type metadata for CrashedView;
}

uint64_t sub_244708814()
{
  return sub_24470D684(&qword_25737D520, &qword_25737D528, (uint64_t (*)(void))sub_244708848, MEMORY[0x24BDF0910]);
}

unint64_t sub_244708848()
{
  unint64_t result;

  result = qword_25737D530;
  if (!qword_25737D530)
  {
    result = MEMORY[0x249518824](&unk_2447965B4, &type metadata for InnerCrashedView);
    atomic_store(result, (unint64_t *)&qword_25737D530);
  }
  return result;
}

uint64_t destroy for InnerCrashedView(uint64_t a1)
{

  if (*(_QWORD *)(a1 + 40))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);

  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for InnerCrashedView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  id v13;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v5 = a1 + 16;
  v6 = a2 + 16;
  v7 = *(_QWORD *)(a2 + 40);
  v8 = v4;
  if (v7)
  {
    v9 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 48) = v9;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(v5, v6, v7);
  }
  else
  {
    v10 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)v5 = *(_OWORD *)v6;
    *(_OWORD *)(v5 + 16) = v10;
    *(_QWORD *)(v5 + 32) = *(_QWORD *)(v6 + 32);
  }
  v11 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v13 = v11;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InnerCrashedView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v7 = *(_QWORD *)(a2 + 40);
  if (!*(_QWORD *)(a1 + 40))
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 40) = v7;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 16, a2 + 16);
      goto LABEL_8;
    }
LABEL_7:
    v8 = *(_OWORD *)(a2 + 16);
    v9 = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = v9;
    goto LABEL_8;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
LABEL_8:
  v10 = *(void **)(a1 + 56);
  v11 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v11;
  v12 = v11;

  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for InnerCrashedView(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int128 v5;
  uint64_t v6;
  void *v7;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  if (*(_QWORD *)(a1 + 40))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v6;

  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for InnerCrashedView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InnerCrashedView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InnerCrashedView()
{
  return &type metadata for InnerCrashedView;
}

uint64_t sub_244708C18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_244708C28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF00);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF08);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D538);
  MEMORY[0x24BDAC7A8](v36);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D540);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D548);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D550);
  MEMORY[0x24BDAC7A8](v35);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v12 = sub_244794F98();
  v12[1] = v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D558);
  sub_244708F9C(v1, (uint64_t)v12 + *(int *)(v19 + 44));
  v20 = sub_244794E24();
  sub_244701400((uint64_t)v12, (uint64_t)v15, &qword_25737D540);
  v15[*(int *)(v13 + 36)] = v20;
  sub_244701444((uint64_t)v12, &qword_25737D540);
  v21 = v1;
  sub_24470A1A8((uint64_t)v4);
  v22 = sub_244794F98();
  sub_2446FF374(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v7, 0.0, 1, INFINITY, 0, v22, v23);
  sub_244701444((uint64_t)v4, &qword_25737CF00);
  v24 = sub_244794E18();
  sub_244701400((uint64_t)v7, (uint64_t)v9, &qword_25737CF08);
  v9[*(int *)(v36 + 36)] = v24;
  sub_244701444((uint64_t)v7, &qword_25737CF08);
  v25 = sub_244794F98();
  v27 = v26;
  v28 = (uint64_t)&v17[*(int *)(v35 + 36)];
  sub_244701400((uint64_t)v9, v28, &qword_25737D538);
  v29 = (uint64_t *)(v28 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737D560) + 36));
  *v29 = v25;
  v29[1] = v27;
  sub_244701400((uint64_t)v15, (uint64_t)v17, &qword_25737D548);
  sub_244701444((uint64_t)v9, &qword_25737D538);
  sub_244701444((uint64_t)v15, &qword_25737D548);
  objc_msgSend(*(id *)v21, sel_crashAnimationDuration);
  v30 = sub_244794FA4();
  LOBYTE(v25) = *(_BYTE *)(v21 + 64);
  v31 = v37;
  sub_244701400((uint64_t)v17, v37, &qword_25737D550);
  v32 = v31 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737D568) + 36);
  *(_QWORD *)v32 = v30;
  *(_BYTE *)(v32 + 8) = v25;
  return sub_244701444((uint64_t)v17, &qword_25737D550);
}

uint64_t sub_244708F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  int v37;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _OWORD *v78;
  int v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  __int16 *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115[8];
  uint64_t v116;
  char v117;
  _BYTE v118[7];
  _BYTE v119[7];
  _BYTE v120[7];
  _BYTE v121[7];
  _BYTE v122[7];
  uint64_t v123;
  _QWORD v124[4];
  unsigned __int8 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  unsigned __int8 v133;
  uint64_t v134;
  unsigned __int8 v135;
  char v136;
  char v137;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D610);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D618);
  MEMORY[0x24BDAC7A8](v7);
  v114 = (uint64_t)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D620);
  MEMORY[0x24BDAC7A8](v9);
  v105 = (uint64_t *)((char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D628);
  v110 = *(_QWORD *)(v111 - 8);
  v11 = MEMORY[0x24BDAC7A8](v111);
  v104 = (uint64_t)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v103 = (uint64_t)&v77 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D630);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v112 = (uint64_t)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v113 = (uint64_t)&v77 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D638);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (uint64_t *)((char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = sub_244794CD4();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (_OWORD *)((char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF10);
  MEMORY[0x24BDAC7A8](v106);
  v25 = (char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF18);
  MEMORY[0x24BDAC7A8](v26);
  v108 = (uint64_t)&v77 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D640);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v109 = (uint64_t)&v77 - v34;
  if (*(_BYTE *)(a1 + 9) == 1)
  {
    v102 = a2;
    v96 = v33;
    v97 = v31;
    v98 = v32;
    v99 = v4;
    v100 = v7;
    v82 = sub_244794DB8();
    sub_244709AE4((uint64_t)&v123);
    v35 = v123;
    v107 = v124[0];
    v89 = v124[1];
    v88 = v124[2];
    v87 = v124[3];
    v80 = v125;
    v86 = v126;
    v85 = v127;
    v84 = v128;
    v83 = v129;
    v36 = v130;
    v92 = v131;
    v90 = v132;
    v94 = v134;
    v137 = 1;
    v136 = v130;
    v93 = v133;
    v135 = v133;
    v79 = v133;
    v37 = sub_244794E18();
    _ZF = *(_BYTE *)(a1 + 8) == 1;
    v101 = v6;
    v95 = (__int16 *)(a1 + 8);
    v91 = a1;
    v81 = v37;
    if (_ZF)
    {
      v123 = sub_244794EF0();
      v40 = sub_244794CC8();
    }
    else
    {
      v40 = *(_QWORD *)(a1 + 72);
      swift_retain();
    }
    v41 = v106;
    v117 = 1;
    v42 = (char *)v23 + *(int *)(v21 + 20);
    v43 = *MEMORY[0x24BDEEB68];
    v44 = sub_244794DAC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v42, v43, v44);
    __asm { FMOV            V0.2D, #15.0 }
    v78 = v23;
    *v23 = _Q0;
    sub_24470D480((uint64_t)v23, (uint64_t)v20 + *(int *)(v18 + 52), (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
    *v20 = v40;
    *(_WORD *)((char *)v20 + *(int *)(v18 + 56)) = 256;
    sub_244701400((uint64_t)v20, (uint64_t)&v25[*(int *)(v41 + 36)], &qword_25737D638);
    *(_QWORD *)v25 = v82;
    *((_QWORD *)v25 + 1) = 0;
    v25[16] = 1;
    *(_DWORD *)(v25 + 17) = *(_DWORD *)v122;
    *((_DWORD *)v25 + 5) = *(_DWORD *)&v122[3];
    v49 = v107;
    *((_QWORD *)v25 + 3) = v35;
    *((_QWORD *)v25 + 4) = v49;
    v77 = v35;
    v50 = v88;
    *((_QWORD *)v25 + 5) = v89;
    *((_QWORD *)v25 + 6) = v50;
    *((_QWORD *)v25 + 7) = v87;
    v25[64] = v80;
    *(_DWORD *)(v25 + 65) = *(_DWORD *)v121;
    *((_DWORD *)v25 + 17) = *(_DWORD *)&v121[3];
    v51 = v85;
    *((_QWORD *)v25 + 9) = v86;
    *((_QWORD *)v25 + 10) = v51;
    v52 = v83;
    *((_QWORD *)v25 + 11) = v84;
    *((_QWORD *)v25 + 12) = v52;
    v25[104] = v36;
    *(_DWORD *)(v25 + 105) = *(_DWORD *)v120;
    *((_DWORD *)v25 + 27) = *(_DWORD *)&v120[3];
    v106 = v40;
    v53 = v92;
    v54 = v90;
    *((_QWORD *)v25 + 14) = v92;
    *((_QWORD *)v25 + 15) = v54;
    v25[128] = v79;
    *(_DWORD *)(v25 + 129) = *(_DWORD *)v119;
    *((_DWORD *)v25 + 33) = *(_DWORD *)&v119[3];
    *((_QWORD *)v25 + 17) = v94;
    v25[144] = v81;
    *(_DWORD *)(v25 + 145) = *(_DWORD *)v118;
    *((_DWORD *)v25 + 37) = *(_DWORD *)&v118[3];
    *(_OWORD *)(v25 + 152) = 0u;
    *(_OWORD *)(v25 + 168) = 0u;
    v25[184] = v117;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    LOBYTE(v42) = v93;
    sub_24470139C(v53, v54, v93);
    swift_bridgeObjectRetain();
    sub_244701444((uint64_t)v20, &qword_25737D638);
    sub_244707D44((uint64_t)v78, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_2447013AC(v53, v54, (char)v42);
    swift_bridgeObjectRelease();
    v55 = sub_244794F98();
    v56 = 1;
    v57 = v108;
    sub_2446FF598(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v108, 0.0, 1, INFINITY, 0, v55, v58);
    sub_244701444((uint64_t)v25, &qword_25737CF10);
    v59 = v91;
    v60 = 0.0;
    if (*(_BYTE *)(v91 + 64))
      v61 = 1.0;
    else
      v61 = 0.0;
    v62 = v96;
    sub_244701400(v57, v96, &qword_25737CF18);
    *(double *)(v62 + *(int *)(v97 + 36)) = v61;
    sub_244701444(v57, &qword_25737CF18);
    v63 = v109;
    sub_24470D4C4(v62, v109, &qword_25737D640);
    sub_244707F18(v95, (uint64_t)&v123);
    sub_24470D4C4((uint64_t)v124, (uint64_t)v115, &qword_25737D650);
    v64 = v116;
    sub_244701444((uint64_t)v115, &qword_25737D650);
    if (v64)
    {
      v65 = sub_244794DB8();
      v66 = (uint64_t)v105;
      *v105 = v65;
      *(_QWORD *)(v66 + 8) = 0;
      *(_BYTE *)(v66 + 16) = 1;
      v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D660);
      sub_244709E08(v59, (_QWORD *)(v66 + *(int *)(v67 + 44)));
      if (*(_BYTE *)(v59 + 64))
        v60 = 1.0;
      v68 = v104;
      sub_244701400(v66, v104, &qword_25737D620);
      v69 = v111;
      *(double *)(v68 + *(int *)(v111 + 36)) = v60;
      sub_244701444(v66, &qword_25737D620);
      v70 = v103;
      sub_24470D4C4(v68, v103, &qword_25737D628);
      v71 = v113;
      sub_24470D4C4(v70, v113, &qword_25737D628);
      v56 = 0;
      v72 = (uint64_t)v101;
    }
    else
    {
      v72 = (uint64_t)v101;
      v71 = v113;
      v69 = v111;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56))(v71, v56, 1, v69);
    v73 = v98;
    sub_244701400(v63, v98, &qword_25737D640);
    v74 = v112;
    sub_244701400(v71, v112, &qword_25737D630);
    v75 = v114;
    sub_244701400(v73, v114, &qword_25737D640);
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D658);
    sub_244701400(v74, v75 + *(int *)(v76 + 48), &qword_25737D630);
    sub_244701444(v74, &qword_25737D630);
    sub_244701444(v73, &qword_25737D640);
    sub_244701400(v75, v72, &qword_25737D618);
    swift_storeEnumTagMultiPayload();
    sub_24470130C(&qword_25737D648, &qword_25737D618, MEMORY[0x24BDF5428]);
    sub_244794DD0();
    sub_244701444(v75, &qword_25737D618);
    sub_244701444(v71, &qword_25737D630);
    return sub_244701444(v63, &qword_25737D640);
  }
  else
  {
    *v6 = sub_244794EF0();
    swift_storeEnumTagMultiPayload();
    sub_24470130C(&qword_25737D648, &qword_25737D618, MEMORY[0x24BDF5428]);
    return sub_244794DD0();
  }
}

uint64_t sub_244709AE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t v41;
  uint64_t v42;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D698);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_244794F2C();
  v5 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
  v41 = MEMORY[0x249517A2C](v5);
  KeyPath = swift_getKeyPath();
  sub_244794E60();
  v6 = sub_244794E48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  v39 = sub_244794E6C();
  sub_244701444((uint64_t)v4, &qword_25737D698);
  v38 = swift_getKeyPath();
  HIDWORD(v37) = sub_244794E30();
  sub_244794C8C();
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  sub_244794DA0();
  v15 = sub_244794E90();
  v17 = v16;
  v19 = v18 & 1;
  sub_244794E54();
  v20 = sub_244794E78();
  v22 = v21;
  v24 = v23 & 1;
  sub_2447013AC(v15, v17, v19);
  swift_bridgeObjectRelease();
  sub_244794F08();
  v25 = sub_244794E84();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  swift_release();
  LOBYTE(v15) = v29 & 1;
  sub_2447013AC(v20, v22, v24);
  swift_bridgeObjectRelease();
  v32 = v41;
  v34 = v39;
  v33 = KeyPath;
  *(_QWORD *)a1 = v42;
  *(_QWORD *)(a1 + 8) = v33;
  v35 = v38;
  *(_QWORD *)(a1 + 16) = v32;
  *(_QWORD *)(a1 + 24) = v35;
  *(_QWORD *)(a1 + 32) = v34;
  *(_BYTE *)(a1 + 40) = BYTE4(v37);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v14;
  *(_BYTE *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = v25;
  *(_QWORD *)(a1 + 96) = v27;
  *(_BYTE *)(a1 + 104) = v15;
  *(_QWORD *)(a1 + 112) = v31;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24470139C(v25, v27, v15);
  swift_bridgeObjectRetain();
  sub_2447013AC(v25, v27, v15);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244709E08@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t *v22;
  void (*v23)(char *, uint64_t);
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  _QWORD *v29;
  _OWORD v30[6];

  v29 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D668);
  v28 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D670);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D678);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v28 - v14;
  sub_2447082CC(a1, (uint64_t)v30);
  v16 = (_OWORD *)swift_allocObject();
  v17 = v30[3];
  v16[3] = v30[2];
  v16[4] = v17;
  v18 = v30[5];
  v16[5] = v30[4];
  v16[6] = v18;
  v19 = v30[1];
  v16[1] = v30[0];
  v16[2] = v19;
  sub_244794F74();
  sub_24470130C(&qword_25737D680, &qword_25737D668, MEMORY[0x24BDF43B0]);
  sub_24470BCD8();
  sub_244794EC0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v3);
  v20 = *(_QWORD *)(a1 + 88);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v9, v6);
  v22 = (uint64_t *)&v13[*(int *)(v10 + 36)];
  *v22 = KeyPath;
  v22[1] = v20;
  v23 = *(void (**)(char *, uint64_t))(v7 + 8);
  swift_retain();
  v23(v9, v6);
  sub_24470D4C4((uint64_t)v13, (uint64_t)v15, &qword_25737D678);
  sub_244701400((uint64_t)v15, (uint64_t)v13, &qword_25737D678);
  v24 = v29;
  *v29 = 0;
  *((_BYTE *)v24 + 8) = 1;
  v25 = v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D690);
  sub_244701400((uint64_t)v13, (uint64_t)v25 + *(int *)(v26 + 48), &qword_25737D678);
  sub_244701444((uint64_t)v15, &qword_25737D678);
  return sub_244701444((uint64_t)v13, &qword_25737D678);
}

uint64_t sub_24470A0A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[8];
  uint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  sub_244707F18((__int16 *)(a1 + 8), (uint64_t)v4);
  sub_24470D4C4((uint64_t)&v5, (uint64_t)v6, &qword_25737D650);
  v1 = v7;
  if (!v7)
    return sub_244701444((uint64_t)v6, &qword_25737D650);
  v2 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
}

uint64_t sub_24470A134@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_244794DA0();
  result = sub_244794E90();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_24470A1A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  char v30;
  uint64_t *v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[2];
  __int16 v44;

  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D570);
  MEMORY[0x24BDAC7A8](v42);
  v4 = (uint64_t *)((char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D578);
  MEMORY[0x24BDAC7A8](v36);
  v35 = (uint64_t *)((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D580);
  MEMORY[0x24BDAC7A8](v37);
  v39 = (uint64_t *)((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D588);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D590);
  MEMORY[0x24BDAC7A8](v38);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D598);
  MEMORY[0x24BDAC7A8](v41);
  v40 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_244794F38();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(void **)(v1 + 56);
  if (v17 && (v18 = *(unsigned __int8 *)(v1 + 8), v18 != 3))
  {
    v32 = v11;
    v34 = a1;
    v33 = v17;
    sub_244794F20();
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BDF3FD0], v13);
    v20 = sub_244794F44();
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    if (v18)
    {
      v21 = (uint64_t)v40;
      if (v18 == 1)
      {
        v43[0] = v20;
        v43[1] = 0;
        v44 = 1;
        swift_retain();
        v22 = sub_244794F98();
        v23 = (uint64_t)v35;
        *v35 = v22;
        *(_QWORD *)(v23 + 8) = v24;
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D5E8);
        sub_24470A7B0(v43, v1, v23 + *(int *)(v25 + 44));
        swift_release();
        sub_244701400(v23, (uint64_t)v9, &qword_25737D578);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_25737CDE8);
        sub_244700B00();
        sub_24470130C(&qword_25737D5B0, &qword_25737D578, MEMORY[0x24BDF4750]);
        v26 = (uint64_t)v32;
        sub_244794DD0();
        sub_244701400(v26, (uint64_t)v39, &qword_25737D590);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_25737D5C0);
        sub_24470AB94();
        sub_24470AC18();
        sub_244794DD0();
        sub_244701444(v26, &qword_25737D590);
        sub_244701444(v23, &qword_25737D578);
      }
      else
      {
        v28 = 1.0;
        if (*(_BYTE *)(v1 + 64) == 1)
        {
          objc_msgSend(*(id *)v1, sel_crashFadeOutOpacity);
          v28 = v29;
        }
        swift_retain();
        v30 = sub_244794E18();
        v31 = v39;
        *v39 = v20;
        v31[1] = 0;
        *((_WORD *)v31 + 8) = 1;
        *((double *)v31 + 3) = v28;
        *((_BYTE *)v31 + 32) = v30;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_25737D5C0);
        sub_24470AB94();
        sub_24470AC18();
        sub_244794DD0();
      }
    }
    else
    {
      *(_QWORD *)v9 = v20;
      *((_QWORD *)v9 + 1) = 0;
      *((_WORD *)v9 + 8) = 1;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737CDE8);
      sub_244700B00();
      sub_24470130C(&qword_25737D5B0, &qword_25737D578, MEMORY[0x24BDF4750]);
      v27 = (uint64_t)v32;
      sub_244794DD0();
      sub_244701400(v27, (uint64_t)v39, &qword_25737D590);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737D5C0);
      sub_24470AB94();
      sub_24470AC18();
      v21 = (uint64_t)v40;
      sub_244794DD0();
      sub_244701444(v27, &qword_25737D590);
    }
    sub_244701400(v21, (uint64_t)v4, &qword_25737D598);
    swift_storeEnumTagMultiPayload();
    sub_24470AB28();
    sub_244794DD0();

    swift_release();
    return sub_244701444(v21, &qword_25737D598);
  }
  else
  {
    *v4 = sub_244794EE4();
    swift_storeEnumTagMultiPayload();
    sub_24470AB28();
    return sub_244794DD0();
  }
}

uint64_t sub_24470A7B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D5F0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D5F8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v24 - v12;
  v14 = *a1;
  v27 = a1[1];
  v15 = *((unsigned __int8 *)a1 + 16);
  v25 = *((unsigned __int8 *)a1 + 17);
  v26 = v15;
  swift_retain();
  v16 = sub_244794EF0();
  v17 = sub_244794F98();
  v19 = v18;
  sub_24470A98C(v28, (uint64_t)v7);
  v20 = (uint64_t *)&v7[*(int *)(v5 + 36)];
  *v20 = v17;
  v20[1] = v19;
  sub_244701400((uint64_t)v7, (uint64_t)v11 + *(int *)(v8 + 36), &qword_25737D5F0);
  *v11 = v16;
  sub_244701444((uint64_t)v7, &qword_25737D5F0);
  sub_24470D4C4((uint64_t)v11, (uint64_t)v13, &qword_25737D5F8);
  sub_244701400((uint64_t)v13, (uint64_t)v11, &qword_25737D5F8);
  v21 = v27;
  *(_QWORD *)a3 = v14;
  *(_QWORD *)(a3 + 8) = v21;
  *(_BYTE *)(a3 + 16) = v26;
  *(_BYTE *)(a3 + 17) = v25;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D600);
  sub_244701400((uint64_t)v11, a3 + *(int *)(v22 + 48), &qword_25737D5F8);
  swift_retain();
  sub_244701444((uint64_t)v13, &qword_25737D5F8);
  sub_244701444((uint64_t)v11, &qword_25737D5F8);
  return swift_release();
}

uint64_t sub_24470A98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v22;

  v4 = sub_244794CD4();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (_OWORD *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D608);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 64) != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, 1, 1, v7);
  v11 = (char *)v6 + *(int *)(v4 + 20);
  v12 = *MEMORY[0x24BDEEB68];
  v13 = sub_244794DAC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  __asm { FMOV            V0.2D, #15.0 }
  *v6 = _Q0;
  v19 = *(_QWORD *)(a1 + 72);
  v20 = MEMORY[0x24BDED998];
  sub_24470D480((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_QWORD *)&v10[*(int *)(v7 + 52)] = v19;
  *(_WORD *)&v10[*(int *)(v7 + 56)] = 256;
  swift_retain();
  sub_244707D44((uint64_t)v6, (uint64_t (*)(_QWORD))v20);
  sub_24470D4C4((uint64_t)v10, a2, &qword_25737D608);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
}

unint64_t sub_24470AB28()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25737D5A0;
  if (!qword_25737D5A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737D598);
    v2[0] = sub_24470AB94();
    v2[1] = sub_24470AC18();
    result = MEMORY[0x249518824](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25737D5A0);
  }
  return result;
}

unint64_t sub_24470AB94()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25737D5A8;
  if (!qword_25737D5A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737D590);
    v2[0] = sub_244700B00();
    v2[1] = sub_24470130C(&qword_25737D5B0, &qword_25737D578, MEMORY[0x24BDF4750]);
    result = MEMORY[0x249518824](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25737D5A8);
  }
  return result;
}

unint64_t sub_24470AC18()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25737D5B8;
  if (!qword_25737D5B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737D5C0);
    v2[0] = sub_24470D684((unint64_t *)&qword_25737D5C8, &qword_25737D5D0, (uint64_t (*)(void))sub_244700B00, MEMORY[0x24BDECC38]);
    v2[1] = sub_24470130C(&qword_25737D5D8, &qword_25737D5E0, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25737D5B8);
  }
  return result;
}

double sub_24470ACBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  double result;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v0 = sub_244794DDC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D810);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6E8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v21 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v21 - v14;
  type metadata accessor for UV_BorderedButtonStyle_iOS.BorderedButton(0);
  sub_24470BD1C((uint64_t)v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v13, *MEMORY[0x24BDEFEE8], v0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v13, 0, 1, v0);
  v16 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_244701400((uint64_t)v15, (uint64_t)v6, &qword_25737D6E8);
  sub_244701400((uint64_t)v13, v16, &qword_25737D6E8);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v17((uint64_t)v6, 1, v0) == 1)
  {
    sub_244701444((uint64_t)v13, &qword_25737D6E8);
    sub_244701444((uint64_t)v15, &qword_25737D6E8);
    if (v17(v16, 1, v0) == 1)
    {
      sub_244701444((uint64_t)v6, &qword_25737D6E8);
      return 29.0;
    }
  }
  else
  {
    sub_244701400((uint64_t)v6, (uint64_t)v10, &qword_25737D6E8);
    if (v17(v16, 1, v0) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v16, v0);
      sub_24470665C(&qword_25737D818, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], MEMORY[0x24BDEFF08]);
      v19 = sub_244795040();
      v20 = *(void (**)(char *, uint64_t))(v1 + 8);
      v20(v3, v0);
      sub_244701444((uint64_t)v13, &qword_25737D6E8);
      sub_244701444((uint64_t)v15, &qword_25737D6E8);
      v20(v10, v0);
      sub_244701444((uint64_t)v6, &qword_25737D6E8);
      result = 29.0;
      if ((v19 & 1) != 0)
        return result;
      return 58.0;
    }
    sub_244701444((uint64_t)v13, &qword_25737D6E8);
    sub_244701444((uint64_t)v15, &qword_25737D6E8);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
  }
  sub_244701444((uint64_t)v6, &qword_25737D810);
  return 58.0;
}

uint64_t sub_24470AFD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  _OWORD *v41;
  uint64_t *v42;
  double v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t (*v57)(void);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _OWORD *v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;

  v99 = a1;
  v106 = type metadata accessor for UV_BorderedButtonStyle_iOS.BorderedButton(0);
  MEMORY[0x24BDAC7A8](v106);
  v108 = (uint64_t)&v92 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_244794CD4();
  MEMORY[0x24BDAC7A8](v101);
  v100 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D7B0);
  MEMORY[0x24BDAC7A8](v103);
  v104 = (uint64_t)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D7B8);
  MEMORY[0x24BDAC7A8](v107);
  v97 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D7C0);
  MEMORY[0x24BDAC7A8](v95);
  v98 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D7C8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D7D0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D7D8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D7E0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_25737D7E8);
  MEMORY[0x24BDAC7A8](v105);
  v20 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D7F0);
  MEMORY[0x24BDAC7A8](v102);
  v96 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D7F8);
  MEMORY[0x24BDAC7A8](v93);
  v94 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = sub_244794D94();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D800);
  sub_244794DE8();
  sub_244794F98();
  sub_244794CE0();
  sub_244701400((uint64_t)v9, (uint64_t)v12, &qword_25737D7C8);
  v23 = &v12[*(int *)(v10 + 36)];
  v24 = v114;
  *((_OWORD *)v23 + 4) = v113;
  *((_OWORD *)v23 + 5) = v24;
  *((_OWORD *)v23 + 6) = v115;
  v25 = v110;
  *(_OWORD *)v23 = v109;
  *((_OWORD *)v23 + 1) = v25;
  v26 = v112;
  *((_OWORD *)v23 + 2) = v111;
  *((_OWORD *)v23 + 3) = v26;
  v27 = (uint64_t)v9;
  v28 = v1;
  sub_244701444(v27, &qword_25737D7C8);
  LOBYTE(v10) = sub_244794E18();
  sub_244794C8C();
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  sub_244701400((uint64_t)v12, (uint64_t)v15, &qword_25737D7D0);
  v37 = &v15[*(int *)(v13 + 36)];
  *v37 = v10;
  *((_QWORD *)v37 + 1) = v30;
  *((_QWORD *)v37 + 2) = v32;
  *((_QWORD *)v37 + 3) = v34;
  *((_QWORD *)v37 + 4) = v36;
  v37[40] = 0;
  sub_244701444((uint64_t)v12, &qword_25737D7D0);
  v38 = sub_244794EFC();
  KeyPath = swift_getKeyPath();
  sub_244701400((uint64_t)v15, (uint64_t)v18, &qword_25737D7D8);
  v40 = *(int *)(v16 + 36);
  v41 = v100;
  v42 = (uint64_t *)&v18[v40];
  *v42 = KeyPath;
  v42[1] = v38;
  sub_244701444((uint64_t)v15, &qword_25737D7D8);
  v43 = sub_24470B8E8();
  sub_244701400((uint64_t)v18, (uint64_t)v20, &qword_25737D7E0);
  v44 = *((int *)v105 + 9);
  v105 = v20;
  *(double *)&v20[v44] = v43;
  sub_244701444((uint64_t)v18, &qword_25737D7E0);
  v45 = (char *)v41 + *(int *)(v101 + 20);
  v46 = *MEMORY[0x24BDEEB68];
  v47 = sub_244794DAC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v45, v46, v47);
  __asm { FMOV            V0.2D, #14.0 }
  *v41 = _Q0;
  v53 = (void *)sub_24479504C();
  v54 = (void *)objc_opt_self();
  v55 = objc_msgSend(v54, sel_colorNamed_, v53);

  if (!v55)
    v55 = objc_msgSend(v54, sel_systemBlueColor);
  v56 = MEMORY[0x249517A68](v55);
  v57 = MEMORY[0x24BDED998];
  v58 = v104;
  sub_24470D480((uint64_t)v41, v104, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  v59 = v103;
  *(_QWORD *)(v58 + *(int *)(v103 + 52)) = v56;
  *(_WORD *)(v58 + *(int *)(v59 + 56)) = 256;
  sub_244707D44((uint64_t)v41, (uint64_t (*)(_QWORD))v57);
  v60 = v28 + *(int *)(v106 + 20);
  v61 = *(_QWORD *)v60;
  LOBYTE(v57) = *(_BYTE *)(v60 + 8);
  sub_24470C88C(*(_QWORD *)v60, (char)v57);
  v62 = sub_24470C18C(v61, (char)v57);
  sub_24470C9C0(v61, (char)v57);
  v63 = v108;
  sub_24470D480(v28, v108, type metadata accessor for UV_BorderedButtonStyle_iOS.BorderedButton);
  if ((v62 & 1) == 0)
  {
    sub_244707D44(v63, type metadata accessor for UV_BorderedButtonStyle_iOS.BorderedButton);
    v66 = v99;
    v67 = (uint64_t)v98;
    v68 = (uint64_t)v97;
    v69 = (uint64_t)v96;
    v70 = v95;
    v71 = (uint64_t)v94;
    v72 = v93;
    goto LABEL_7;
  }
  v64 = sub_244794DF4();
  sub_244707D44(v63, type metadata accessor for UV_BorderedButtonStyle_iOS.BorderedButton);
  v65 = 1.0;
  v66 = v99;
  v67 = (uint64_t)v98;
  v68 = (uint64_t)v97;
  v69 = (uint64_t)v96;
  v70 = v95;
  v71 = (uint64_t)v94;
  v72 = v93;
  if ((v64 & 1) != 0)
LABEL_7:
    v65 = 0.5;
  sub_244701400(v58, v68, &qword_25737D7B0);
  *(double *)(v68 + *(int *)(v107 + 36)) = v65;
  sub_244701444(v58, &qword_25737D7B0);
  sub_244794F98();
  sub_244794CBC();
  sub_244701400(v68, v67, &qword_25737D7B8);
  v73 = (_OWORD *)(v67 + *(int *)(v70 + 36));
  v74 = v117;
  *v73 = v116;
  v73[1] = v74;
  v73[2] = v118;
  sub_244701444(v68, &qword_25737D7B8);
  v75 = sub_244794F98();
  v77 = v76;
  v78 = v69 + *(int *)(v102 + 36);
  sub_244701400(v67, v78, &qword_25737D7C0);
  v79 = (uint64_t *)(v78 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737D808) + 36));
  *v79 = v75;
  v79[1] = v77;
  v80 = (uint64_t)v105;
  sub_244701400((uint64_t)v105, v69, &qword_25737D7E8);
  sub_244701444(v67, &qword_25737D7C0);
  sub_244701444(v80, &qword_25737D7E8);
  LOBYTE(v80) = sub_244794E30();
  v81 = sub_244794E3C();
  sub_244794E3C();
  if (sub_244794E3C() != v80)
    v81 = sub_244794E3C();
  sub_24470ACBC();
  sub_244794C8C();
  v83 = v82;
  v85 = v84;
  v87 = v86;
  v89 = v88;
  sub_244701400(v69, v71, &qword_25737D7F0);
  v90 = v71 + *(int *)(v72 + 36);
  *(_BYTE *)v90 = v81;
  *(_QWORD *)(v90 + 8) = v83;
  *(_QWORD *)(v90 + 16) = v85;
  *(_QWORD *)(v90 + 24) = v87;
  *(_QWORD *)(v90 + 32) = v89;
  *(_BYTE *)(v90 + 40) = 0;
  sub_244701444(v69, &qword_25737D7F0);
  return sub_24470D4C4(v71, v66, &qword_25737D7F8);
}

double sub_24470B8E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  double result;
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for UV_BorderedButtonStyle_iOS.BorderedButton(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_244794CA4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  sub_24470BF4C((uint64_t)&v19 - v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, *MEMORY[0x24BDEB3F0], v5);
  v12 = sub_244794C98();
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, v5);
  v13(v11, v5);
  v14 = v1 + *(int *)(v2 + 20);
  v15 = *(_QWORD *)v14;
  LOBYTE(v5) = *(_BYTE *)(v14 + 8);
  sub_24470C88C(*(_QWORD *)v14, v5);
  v16 = sub_24470C18C(v15, v5);
  sub_24470C9C0(v15, v5);
  if ((v12 & 1) != 0)
  {
    sub_24470D480(v1, (uint64_t)v4, type metadata accessor for UV_BorderedButtonStyle_iOS.BorderedButton);
    if ((v16 & 1) != 0)
    {
      v17 = sub_244794DF4();
      sub_244707D44((uint64_t)v4, type metadata accessor for UV_BorderedButtonStyle_iOS.BorderedButton);
      result = 1.0;
      if ((v17 & 1) == 0)
        return result;
    }
    else
    {
      sub_244707D44((uint64_t)v4, type metadata accessor for UV_BorderedButtonStyle_iOS.BorderedButton);
    }
    return 0.5;
  }
  result = 0.5;
  if ((v16 & 1) != 0)
    return 1.0;
  return result;
}

uint64_t sub_24470BAB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_244794CA4();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_244794D10();
}

uint64_t sub_24470BB2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6E8);
  MEMORY[0x24BDAC7A8](v2);
  sub_244701400(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_25737D6E8);
  return sub_244794D40();
}

uint64_t sub_24470BBB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;

  v4 = sub_244794E00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  v5 = (int *)type metadata accessor for UV_BorderedButtonStyle_iOS.BorderedButton(0);
  v6 = a2 + v5[5];
  *(_QWORD *)v6 = swift_getKeyPath();
  *(_BYTE *)(v6 + 8) = 0;
  v7 = (uint64_t *)(a2 + v5[6]);
  *v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6D8);
  swift_storeEnumTagMultiPayload();
  v8 = (uint64_t *)(a2 + v5[7]);
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6E0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24470BC84()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 56))
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24470BCD0()
{
  uint64_t v0;

  return sub_24470A0A0(v0 + 16);
}

unint64_t sub_24470BCD8()
{
  unint64_t result;

  result = qword_25737D688;
  if (!qword_25737D688)
  {
    result = MEMORY[0x249518824](&unk_2447966BC, &type metadata for UV_BorderedButtonStyle_iOS);
    atomic_store(result, (unint64_t *)&qword_25737D688);
  }
  return result;
}

uint64_t sub_24470BD1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  v2 = v1;
  v4 = sub_244794D88();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6E0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244701400(v2, (uint64_t)v10, &qword_25737D6E0);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_24470D4C4((uint64_t)v10, a1, &qword_25737D6E8);
  v12 = sub_244795388();
  v13 = sub_244794E0C();
  v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v18[1] = a1;
    v17 = v16;
    v19 = v16;
    *(_DWORD *)v15 = 136315138;
    v18[2] = sub_24470600C(0xD000000000000020, 0x800000024479D370, &v19);
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v17, -1, -1);
    MEMORY[0x2495188D8](v15, -1, -1);
  }

  sub_244794D7C();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24470BF4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  os_log_type_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;

  v2 = v1;
  v4 = sub_244794D88();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6D8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244701400(v2, (uint64_t)v10, &qword_25737D6D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_244794CA4();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    v13 = sub_244795388();
    v14 = sub_244794E0C();
    v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v19[1] = a1;
      v18 = v17;
      v20 = v17;
      *(_DWORD *)v16 = 136315138;
      v19[2] = sub_24470600C(0x686353726F6C6F43, 0xEB00000000656D65, &v20);
      sub_244795448();
      _os_log_impl(&dword_2446FC000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v18, -1, -1);
      MEMORY[0x2495188D8](v16, -1, -1);
    }

    sub_244794D7C();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_24470C18C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_244794D88();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain();
  v8 = sub_244795388();
  v9 = sub_244794E0C();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_24470600C(1819242306, 0xE400000000000000, &v15);
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v12, -1, -1);
    MEMORY[0x2495188D8](v11, -1, -1);
  }

  sub_244794D7C();
  swift_getAtKeyPath();
  sub_24470C9C0(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_24470C344@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_244794CEC();
  *a1 = result;
  return result;
}

uint64_t sub_24470C36C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_244794CEC();
  *a1 = result;
  return result;
}

uint64_t sub_24470C394()
{
  swift_retain();
  return sub_244794CF8();
}

uint64_t sub_24470C3BC()
{
  swift_retain();
  return sub_244794CF8();
}

uint64_t sub_24470C3EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_244794D4C();
  *a1 = result;
  return result;
}

uint64_t sub_24470C414()
{
  swift_retain();
  return sub_244794D58();
}

ValueMetadata *type metadata accessor for UV_BorderedButtonStyle_iOS()
{
  return &type metadata for UV_BorderedButtonStyle_iOS;
}

unint64_t sub_24470C450()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25737D6A0;
  if (!qword_25737D6A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737D568);
    v2[0] = sub_24470C4D4();
    v2[1] = sub_24470130C(&qword_25737D6C8, &qword_25737D6D0, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25737D6A0);
  }
  return result;
}

unint64_t sub_24470C4D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25737D6A8;
  if (!qword_25737D6A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737D550);
    v2[0] = sub_24470C558();
    v2[1] = sub_24470130C(&qword_25737D6C0, &qword_25737D560, MEMORY[0x24BDEF370]);
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25737D6A8);
  }
  return result;
}

unint64_t sub_24470C558()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25737D6B0;
  if (!qword_25737D6B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737D548);
    v2[0] = sub_24470130C(&qword_25737D6B8, &qword_25737D540, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDF0420];
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25737D6B0);
  }
  return result;
}

uint64_t sub_24470C5DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for UV_BorderedButtonStyle_iOS.BorderedButton(uint64_t a1)
{
  return sub_244706AAC(a1, (uint64_t *)&unk_25737D758);
}

uint64_t sub_24470C600@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_244794D64();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24470C62C()
{
  return sub_244794D70();
}

uint64_t sub_24470C650()
{
  return sub_244794D04();
}

uint64_t sub_24470C674()
{
  return sub_244794D34();
}

uint64_t *sub_24470C698(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244794E00();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)v10;
    v12 = v10[8];
    sub_24470C88C(*(_QWORD *)v10, v12);
    *(_QWORD *)v9 = v11;
    v9[8] = v12;
    v13 = a3[6];
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_244794CA4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v18 = a3[7];
    v19 = (uint64_t *)((char *)a1 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_244794DDC();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6E8);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24470C88C(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_24470C898(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = sub_244794E00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_24470C9C0(*(_QWORD *)(a1 + a2[5]), *(_BYTE *)(a1 + a2[5] + 8));
  v5 = a1 + a2[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_244794CA4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + a2[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6E0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v8 = sub_244794DDC();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

uint64_t sub_24470C9C0(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_24470C9CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_244794E00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  sub_24470C88C(*(_QWORD *)v9, v11);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = v11;
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_244794CA4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_244794DDC();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6E8);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  else
  {
    *v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_24470CB94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_244794E00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  sub_24470C88C(*(_QWORD *)v9, v11);
  v12 = *(_QWORD *)v8;
  v13 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = v11;
  sub_24470C9C0(v12, v13);
  if (a1 != a2)
  {
    v14 = a3[6];
    v15 = (_QWORD *)(a1 + v14);
    v16 = (_QWORD *)(a2 + v14);
    sub_244701444(a1 + v14, &qword_25737D6D8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_244794CA4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v18 = a3[7];
    v19 = (_QWORD *)(a1 + v18);
    v20 = (_QWORD *)(a2 + v18);
    sub_244701444(a1 + v18, &qword_25737D6E0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_244794DDC();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6E8);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24470CD90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_244794E00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (void *)(a1 + v8);
  v12 = (const void *)(a2 + v8);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_244794CA4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  v15 = a3[7];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_244794DDC();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6E8);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v16, v17, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24470CF48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_244794E00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  LOBYTE(v9) = *((_BYTE *)v9 + 8);
  v11 = *(_QWORD *)v8;
  v12 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = (_BYTE)v9;
  sub_24470C9C0(v11, v12);
  if (a1 != a2)
  {
    v13 = a3[6];
    v14 = (void *)(a1 + v13);
    v15 = (const void *)(a2 + v13);
    sub_244701444(a1 + v13, &qword_25737D6D8);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_244794CA4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    v18 = a3[7];
    v19 = (void *)(a1 + v18);
    v20 = (const void *)(a2 + v18);
    sub_244701444(a1 + v18, &qword_25737D6E0);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_244794DDC();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6E8);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v19, v20, v22);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24470D138()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24470D144(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_244794E00();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 254)
  {
    v9 = *(unsigned __int8 *)(a1 + a3[5] + 8);
    if (v9 > 1)
      return (v9 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6F0);
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = a3[6];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(qword_25737D6F8);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = a3[7];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1 + v13, a2, v12);
  }
}

uint64_t sub_24470D214()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24470D220(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_244794E00();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(a1 + a4[5] + 8) = -(char)a2;
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D6F0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(qword_25737D6F8);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[7];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_24470D2F0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_244794E00();
  if (v0 <= 0x3F)
  {
    sub_24470D398();
    if (v1 <= 0x3F)
    {
      sub_24470D3EC();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_24470D398()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25737D768)
  {
    sub_244794CA4();
    v0 = sub_244794CB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25737D768);
  }
}

void sub_24470D3EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25737D770[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737D6E8);
    v0 = sub_244794CB0();
    if (!v1)
      atomic_store(v0, qword_25737D770);
  }
}

uint64_t sub_24470D444()
{
  return sub_24470665C(&qword_25737D7A8, type metadata accessor for UV_BorderedButtonStyle_iOS.BorderedButton, (uint64_t)&unk_2447967B0);
}

uint64_t sub_24470D470()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24470D480(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24470D4C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24470D508()
{
  return sub_24470D684(&qword_25737D820, &qword_25737D7F8, (uint64_t (*)(void))sub_24470D53C, MEMORY[0x24BDECC60]);
}

unint64_t sub_24470D53C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25737D828;
  if (!qword_25737D828)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737D7F0);
    v2[0] = sub_24470D684(&qword_25737D830, &qword_25737D7E8, (uint64_t (*)(void))sub_24470D5E0, MEMORY[0x24BDECC38]);
    v2[1] = sub_24470130C(&qword_25737D858, &qword_25737D808, MEMORY[0x24BDEF370]);
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25737D828);
  }
  return result;
}

unint64_t sub_24470D5E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25737D838;
  if (!qword_25737D838)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737D7E0);
    v2[0] = sub_24470D684(&qword_25737D840, &qword_25737D7D8, (uint64_t (*)(void))sub_24470D6EC, MEMORY[0x24BDECC60]);
    v2[1] = sub_24470130C(&qword_25737CDF0, &qword_25737CDF8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25737D838);
  }
  return result;
}

uint64_t sub_24470D684(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24470D6EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25737D848;
  if (!qword_25737D848)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737D7D0);
    v2[0] = sub_24470130C(&qword_25737D850, &qword_25737D7C8, MEMORY[0x24BDF4498]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25737D848);
  }
  return result;
}

uint64_t sub_24470D774(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (a2 < 0)
  {
    v3 = 0x3A7361766E61635BLL;
    (*(void (**)(void))(a2 + 32))();
  }
  else
  {
    v3 = 0x203A49556E6F6E5BLL;
    (*(void (**)(void))(a2 + 40))();
  }
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  return v3;
}

uint64_t sub_24470D818()
{
  uint64_t *v0;

  return sub_24470D774(*v0, v0[1]);
}

uint64_t sub_24470D820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char isUniquelyReferenced_nonNull_native;
  _BYTE v57[4];
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v5 = v4;
  v62 = a1;
  v63 = a2;
  v8 = sub_244794AAC();
  v60 = *(_QWORD *)(v8 - 8);
  v61 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = &v57[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v57[-v12];
  v14 = type metadata accessor for ContentKey();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = &v57[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = &v57[-v19];
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = &v57[-v22];
  MEMORY[0x24BDAC7A8](v21);
  v25 = &v57[-v24];
  v26 = sub_244793E88();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v25, a3, v26);
  sub_24470E1C0(a4, (uint64_t)&v25[*(int *)(v14 + 20)]);
  v27 = *v5;
  if (*(_QWORD *)(*v5 + 16) && (v28 = sub_24470F394((uint64_t)v25), (v29 & 1) != 0))
  {
    v30 = (uint64_t *)(*(_QWORD *)(v27 + 56) + 16 * v28);
    v31 = *v30;
    v32 = v30[1];
    sub_244794A7C();
    sub_2447103FC((uint64_t)v25, (uint64_t)v23);
    v33 = sub_244794AA0();
    v34 = sub_24479537C();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v65 = v36;
      *(_DWORD *)v35 = 136315650;
      v37 = sub_24470D774(v62, v63);
      v63 = v32;
      v64 = sub_24470600C(v37, v38, &v65);
      v62 = v31;
      sub_244795448();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      v39 = ContentKey.description.getter();
      v64 = sub_24470600C(v39, v40, &v65);
      sub_244795448();
      swift_bridgeObjectRelease();
      sub_2447105E0((uint64_t)v23);
      *(_WORD *)(v35 + 22) = 2080;
      v41 = sub_24470D774(v62, v63);
      v64 = sub_24470600C(v41, v42, &v65);
      sub_244795448();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2446FC000, v33, v34, "can't register %s for %s -- existing record: %s", (uint8_t *)v35, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v36, -1, -1);
      MEMORY[0x2495188D8](v35, -1, -1);

    }
    else
    {

      sub_2447105E0((uint64_t)v23);
    }
    (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v13, v61);
  }
  else
  {
    sub_244794A7C();
    sub_2447103FC((uint64_t)v25, (uint64_t)v20);
    v43 = sub_244794AA0();
    v44 = sub_244795364();
    v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      v46 = swift_slowAlloc();
      v59 = swift_slowAlloc();
      v65 = v59;
      *(_DWORD *)v46 = 136315394;
      v47 = sub_24470D774(v62, v63);
      v58 = v45;
      v64 = sub_24470600C(v47, v48, &v65);
      sub_244795448();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2080;
      v49 = ContentKey.description.getter();
      v64 = sub_24470600C(v49, v50, &v65);
      v51 = v63;
      sub_244795448();
      swift_bridgeObjectRelease();
      v52 = (uint64_t)v20;
      v53 = v62;
      sub_2447105E0(v52);
      _os_log_impl(&dword_2446FC000, v43, (os_log_type_t)v58, "registering %s for %s", (uint8_t *)v46, 0x16u);
      v54 = v59;
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v54, -1, -1);
      MEMORY[0x2495188D8](v46, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v11, v61);
    }
    else
    {
      sub_2447105E0((uint64_t)v20);

      (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v11, v61);
      v53 = v62;
      v51 = v63;
    }
    sub_2447103FC((uint64_t)v25, (uint64_t)v17);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v65 = *v5;
    *v5 = 0x8000000000000000;
    sub_24478CA34(v53, v51, (uint64_t)v17, isUniquelyReferenced_nonNull_native);
    *v5 = v65;
    swift_bridgeObjectRelease();
    sub_2447105E0((uint64_t)v17);
  }
  return sub_2447105E0((uint64_t)v25);
}

uint64_t ContentKey.init(for:with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_244793E88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = type metadata accessor for ContentKey();
  return sub_24470D4C4(a2, a3 + *(int *)(v7 + 20), &qword_25737D860);
}

uint64_t type metadata accessor for ContentKey()
{
  uint64_t result;

  result = qword_25737D8F0;
  if (!qword_25737D8F0)
    return swift_getSingletonMetadata();
  return result;
}

void ContentProviderRegistry.register<A>(provider:for:override:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    v8 = type metadata accessor for NonUIBox(0, a4, a5, a4);
    v9 = MEMORY[0x249518824](&unk_2447991B0, v8);
    v10 = *(_QWORD *)(sub_244793E88() - 8);
    v11 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v12 = *(_QWORD *)(v10 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_24470D820(v8, v9, v11, a3);
      v11 += v12;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
}

{
  uint64_t v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    v8 = type metadata accessor for CanvasBox(0, a4, a5, a4);
    v9 = MEMORY[0x249518824](&unk_24479B3F0, v8) | 0x8000000000000000;
    v10 = *(_QWORD *)(sub_244793E88() - 8);
    v11 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v12 = *(_QWORD *)(v10 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_24470D820(v8, v9, v11, a3);
      v11 += v12;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
}

uint64_t ContentKey.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_244793E94();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContentKey();
  sub_24470E1C0(v0 + *(int *)(v8 + 20), (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_244701444((uint64_t)v3, &qword_25737D860);
    v11 = 60;
    v12 = 0xE100000000000000;
    sub_244793E88();
    sub_24470665C(&qword_25737D868, (uint64_t (*)(uint64_t))MEMORY[0x24BE77570], MEMORY[0x24BE77598]);
    sub_2447955B0();
    sub_2447950E8();
    swift_bridgeObjectRelease();
    sub_2447950E8();
    return v11;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    v11 = 60;
    v12 = 0xE100000000000000;
    sub_244793E88();
    sub_24470665C(&qword_25737D868, (uint64_t (*)(uint64_t))MEMORY[0x24BE77570], MEMORY[0x24BE77598]);
    sub_2447955B0();
    sub_2447950E8();
    swift_bridgeObjectRelease();
    sub_2447950E8();
    sub_24470665C(&qword_25737D870, (uint64_t (*)(uint64_t))MEMORY[0x24BE775A0], MEMORY[0x24BE775C0]);
    sub_2447955B0();
    sub_2447950E8();
    swift_bridgeObjectRelease();
    sub_2447950E8();
    v9 = v11;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v9;
}

uint64_t sub_24470E1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ContentKey.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_244793E94();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244793E88();
  sub_24470665C(&qword_25737D878, (uint64_t (*)(uint64_t))MEMORY[0x24BE77570], MEMORY[0x24BE77580]);
  sub_244795028();
  v8 = type metadata accessor for ContentKey();
  sub_24470E1C0(v0 + *(int *)(v8 + 20), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_244795664();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_244795664();
  sub_24470665C(&qword_25737D880, (uint64_t (*)(uint64_t))MEMORY[0x24BE775A0], MEMORY[0x24BE775B0]);
  sub_244795028();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t ContentKey.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_244793E94();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24479564C();
  sub_244793E88();
  sub_24470665C(&qword_25737D878, (uint64_t (*)(uint64_t))MEMORY[0x24BE77570], MEMORY[0x24BE77580]);
  sub_244795028();
  v8 = type metadata accessor for ContentKey();
  sub_24470E1C0(v0 + *(int *)(v8 + 20), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_244795664();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_244795664();
    sub_24470665C(&qword_25737D880, (uint64_t (*)(uint64_t))MEMORY[0x24BE775A0], MEMORY[0x24BE775B0]);
    sub_244795028();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_24479567C();
}

uint64_t sub_24470E524(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v4 = sub_244793E94();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244793E88();
  sub_24470665C(&qword_25737D878, (uint64_t (*)(uint64_t))MEMORY[0x24BE77570], MEMORY[0x24BE77580]);
  sub_244795028();
  sub_24470E1C0(v2 + *(int *)(a2 + 20), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
    return sub_244795664();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  sub_244795664();
  sub_24470665C(&qword_25737D880, (uint64_t (*)(uint64_t))MEMORY[0x24BE775A0], MEMORY[0x24BE775B0]);
  sub_244795028();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24470E6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v4 = sub_244793E94();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24479564C();
  sub_244793E88();
  sub_24470665C(&qword_25737D878, (uint64_t (*)(uint64_t))MEMORY[0x24BE77570], MEMORY[0x24BE77580]);
  sub_244795028();
  sub_24470E1C0(v2 + *(int *)(a2 + 20), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_244795664();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_244795664();
    sub_24470665C(&qword_25737D880, (uint64_t (*)(uint64_t))MEMORY[0x24BE775A0], MEMORY[0x24BE775B0]);
    sub_244795028();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return sub_24479567C();
}

void *ContentProviderRegistry.boxRecipe(for:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;

  v3 = type metadata accessor for ContentKey();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = *v1;
  if (!*(_QWORD *)(v6 + 16))
    return 0;
  v7 = sub_24470F394(a1);
  if ((v8 & 1) == 0)
    return 0;
  v9 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v7);
  v10 = *v9;
  v11 = v9[1];
  sub_2447103FC(a1, (uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v10;
  if (v11 < 0)
  {
    *(_QWORD *)(v13 + 24) = v11 & 0x7FFFFFFFFFFFFFFFLL;
    v14 = v13 + v12;
    v15 = sub_244710488;
  }
  else
  {
    *(_QWORD *)(v13 + 24) = v11;
    v14 = v13 + v12;
    v15 = sub_2447105A0;
  }
  sub_244710444((uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  return v15;
}

uint64_t sub_24470E98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  uint64_t v14;

  v8 = sub_244793E88();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v11 + 16))(v10, a3);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(a2 + 24);
  a4[3] = a1;
  a4[4] = a2;
  __swift_allocate_boxed_opaque_existential_1(a4);
  return v12(v10, a1, a2);
}

uint64_t sub_24470EA34@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v17;

  v10 = sub_244793E88();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, a4);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(a3 + 16);
  a5[3] = a2;
  a5[4] = a3;
  __swift_allocate_boxed_opaque_existential_1(a5);
  v15 = swift_unknownObjectRetain();
  return v14(v15, a1, v12, a2, a3);
}

uint64_t ContentProviderRegistry.variantGroups(for:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v4;
  char v5;
  uint64_t v6;

  v2 = *v1;
  if (!*(_QWORD *)(v2 + 16))
    return 0;
  v4 = sub_24470F394(a1);
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v4 + 8);
  if (v6 < 0)
    return (*(uint64_t (**)(uint64_t))(v6 + 24))(a1);
  else
    return (*(uint64_t (**)(uint64_t))(v6 + 32))(a1);
}

uint64_t ContentProviderRegistry.firstSupportedOverride(for:from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a1;
  v29 = type metadata accessor for ContentKey();
  MEMORY[0x24BDAC7A8](v29);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_244793E94();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a2 + 16);
  if (v12)
  {
    v13 = *v3;
    v14 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v15 = *(_QWORD *)(v9 + 72);
    v27 = a3;
    v28 = v15;
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v26[1] = a2;
    swift_bridgeObjectRetain();
    do
    {
      v16(v11, v14, v8);
      v17 = sub_244793E88();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v7, v30, v17);
      v18 = &v7[*(int *)(v29 + 20)];
      v16(v18, (uint64_t)v11, v8);
      v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v19((uint64_t)v18, 0, 1, v8);
      if (*(_QWORD *)(v13 + 16))
      {
        sub_24470F394((uint64_t)v7);
        if ((v20 & 1) != 0)
        {
          sub_2447105E0((uint64_t)v7);
          swift_bridgeObjectRelease();
          v21 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
          v22 = v27;
          v21(v27, v11, v8);
          v23 = v22;
          v24 = 0;
          return v19(v23, v24, 1, v8);
        }
      }
      sub_2447105E0((uint64_t)v7);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v14 += v28;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    a3 = v27;
  }
  else
  {
    v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  }
  v23 = a3;
  v24 = 1;
  return v19(v23, v24, 1, v8);
}

uint64_t static ContentCategory.source(_:)()
{
  return sub_244794A58();
}

uint64_t static CategoryMap.contentCategories.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;

  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D888);
  v4 = MEMORY[0x24BDAC7A8](v58);
  v57 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v56 = (uint64_t)&v49 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v55 = (char *)&v49 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v54 = (char *)&v49 - v10;
  v11 = sub_244793E88();
  v65 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v64 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  v66 = MEMORY[0x24BEE4AF8];
  sub_24470FF8C(0, v14, 0);
  result = sub_24470FFC8(v13);
  v17 = result;
  v18 = 0;
  v19 = v13 + 64;
  v20 = *(_BYTE *)(v13 + 32);
  v49 = v13 + 88;
  v50 = v14;
  v52 = v13 + 64;
  v53 = v13;
  v51 = v16;
  while ((v17 & 0x8000000000000000) == 0 && (uint64_t)v17 < 1 << v20)
  {
    if ((*(_QWORD *)(v19 + 8 * (v17 >> 6)) & (1 << v17)) == 0)
      goto LABEL_29;
    if (*(_DWORD *)(v13 + 36) != (_DWORD)v16)
      goto LABEL_30;
    v60 = 1 << v17;
    v61 = v17 >> 6;
    v59 = v18;
    v22 = v58;
    v23 = (uint64_t)v54;
    v24 = &v54[*(int *)(v58 + 48)];
    v25 = *(_QWORD *)(v13 + 48);
    v62 = *(_QWORD *)(v65 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v65 + 16);
    v26(v54, v25 + v62 * v17, v11);
    v27 = *(_QWORD *)(v13 + 56);
    v28 = sub_244794308();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(_QWORD *)(v29 + 72);
    v63 = v17;
    v31 = *(void (**)(char *, unint64_t, uint64_t))(v29 + 16);
    v31(v24, v27 + v30 * v17, v28);
    v32 = (uint64_t)v55;
    v26(v55, v23, v11);
    v31((char *)(v32 + *(int *)(v22 + 48)), (unint64_t)v24, v28);
    v33 = v56;
    sub_24470D4C4(v32, v56, &qword_25737D888);
    sub_244701444(v23, &qword_25737D888);
    v34 = *(int *)(v22 + 48);
    v35 = v57;
    v36 = &v57[v34];
    v37 = v33 + v34;
    v26(v57, v33, v11);
    v31(v36, v37, v28);
    v38 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
    v38(v64, v35, v11);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v28);
    sub_244701444(v33, &qword_25737D888);
    v39 = v66;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24470FF8C(0, *(_QWORD *)(v39 + 16) + 1, 1);
      v39 = v66;
    }
    v41 = *(_QWORD *)(v39 + 16);
    v40 = *(_QWORD *)(v39 + 24);
    v42 = v63;
    if (v41 >= v40 >> 1)
    {
      sub_24470FF8C(v40 > 1, v41 + 1, 1);
      v39 = v66;
    }
    *(_QWORD *)(v39 + 16) = v41 + 1;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v38)(v39+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ v41 * v62, v64, v11);
    v66 = v39;
    v13 = v53;
    v20 = *(_BYTE *)(v53 + 32);
    v17 = 1 << v20;
    if (v42 >= 1 << v20)
      goto LABEL_31;
    v19 = v52;
    v43 = v61;
    v44 = *(_QWORD *)(v52 + 8 * v61);
    if ((v44 & v60) == 0)
      goto LABEL_32;
    LODWORD(v16) = v51;
    if (*(_DWORD *)(v53 + 36) != (_DWORD)v51)
      goto LABEL_33;
    v45 = v44 & (-2 << (v42 & 0x3F));
    if (v45)
    {
      v17 = __clz(__rbit64(v45)) | v42 & 0xFFFFFFFFFFFFFFC0;
      v21 = v50;
    }
    else
    {
      v46 = v61 + 1;
      v47 = (v17 + 63) >> 6;
      v21 = v50;
      if (v61 + 1 < v47)
      {
        v48 = *(_QWORD *)(v52 + 8 * v46);
        if (!v48)
        {
          v46 = v61 + 2;
          if (v61 + 2 >= v47)
            goto LABEL_4;
          v48 = *(_QWORD *)(v52 + 8 * v46);
          if (!v48)
          {
            while (v47 - 3 != v43)
            {
              v48 = *(_QWORD *)(v49 + 8 * v43++);
              if (v48)
              {
                v46 = v43 + 2;
                goto LABEL_19;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_19:
        v17 = __clz(__rbit64(v48)) + (v46 << 6);
      }
    }
LABEL_4:
    v18 = v59 + 1;
    if (v59 + 1 == v21)
    {
      swift_bridgeObjectRelease();
      return v39;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t static CategoryMap.unhandled(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v16;

  v8 = sub_244793E88();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v13 = type metadata accessor for Unhandled(0, a2, a3, v12);
  a4[3] = v13;
  a4[4] = MEMORY[0x249518824](&unk_244796A08, v13);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a4);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v9 + 32))(boxed_opaque_existential_1, v11, v8);
}

uint64_t sub_24470F2DC()
{
  return 0;
}

uint64_t sub_24470F2FC()
{
  return 0;
}

uint64_t sub_24470F310(uint64_t a1)
{
  MEMORY[0x249518824](&unk_244796A08, a1);
  return sub_244794668();
}

uint64_t sub_24470F350(uint64_t a1)
{
  MEMORY[0x249518824](&unk_244796A08, a1);
  return sub_244794638();
}

unint64_t sub_24470F394(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = sub_244793E94();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24479564C();
  sub_244793E88();
  sub_24470665C(&qword_25737D878, (uint64_t (*)(uint64_t))MEMORY[0x24BE77570], MEMORY[0x24BE77580]);
  sub_244795028();
  v9 = type metadata accessor for ContentKey();
  sub_24470E1C0(a1 + *(int *)(v9 + 20), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_244795664();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_244795664();
    sub_24470665C(&qword_25737D880, (uint64_t (*)(uint64_t))MEMORY[0x24BE775A0], MEMORY[0x24BE775B0]);
    sub_244795028();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v10 = sub_24479567C();
  return sub_24470F8B4(a1, v10);
}

unint64_t sub_24470F54C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_244793E88();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77570];
  sub_24470665C(&qword_25737D878, (uint64_t (*)(uint64_t))MEMORY[0x24BE77570], MEMORY[0x24BE77580]);
  v3 = sub_24479501C();
  return sub_24470FCE0(a1, v3, v2, &qword_25737D9E0, MEMORY[0x24BE77588]);
}

unint64_t sub_24470F5E4(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_2447943D4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE761F8];
  sub_24470665C(&qword_25737D9D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE761F8], MEMORY[0x24BE76208]);
  v3 = sub_24479501C();
  return sub_24470FCE0(a1, v3, v2, &qword_25737D9D8, MEMORY[0x24BE76210]);
}

unint64_t sub_24470F67C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24479564C();
  swift_bridgeObjectRetain();
  sub_2447950C4();
  swift_bridgeObjectRelease();
  v4 = sub_24479567C();
  return sub_24470FE10(a1, a2, v4);
}

unint64_t sub_24470F6F0(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_244793F18();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0];
  sub_24470665C(&qword_25737D9B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0], MEMORY[0x24BE77800]);
  v3 = sub_24479501C();
  return sub_24470FCE0(a1, v3, v2, &qword_25737D9B8, MEMORY[0x24BE77808]);
}

unint64_t sub_24470F788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24479564C();
  sub_2447950C4();
  v4 = sub_24479567C();
  return sub_24470FE10(a1, a2, v4);
}

unint64_t sub_24470F7EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244795640();
  return sub_24470FEF0(a1, v2);
}

unint64_t sub_24470F81C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_244793B28();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77038];
  sub_24470665C(&qword_25737D9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77038], MEMORY[0x24BE77048]);
  v3 = sub_24479501C();
  return sub_24470FCE0(a1, v3, v2, &qword_25737D9C8, MEMORY[0x24BE77050]);
}

unint64_t sub_24470F8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  char v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v5 = sub_244793E94();
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v35 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D9E8);
  MEMORY[0x24BDAC7A8](v37);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v33 - v13;
  v36 = type metadata accessor for ContentKey();
  MEMORY[0x24BDAC7A8](v36);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v2 + 64;
  v41 = v2;
  v18 = -1 << *(_BYTE *)(v2 + 32);
  v19 = a2 & ~v18;
  if (((*(_QWORD *)(v2 + 64 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
    return v19;
  v38 = ~v18;
  v39 = *(_QWORD *)(v15 + 72);
  v34 = a1;
  while (1)
  {
    v20 = v12;
    sub_2447103FC(*(_QWORD *)(v41 + 48) + v39 * v19, (uint64_t)v17);
    sub_244793E88();
    sub_24470665C(&qword_25737D9F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77570], MEMORY[0x24BE77590]);
    sub_244795160();
    sub_244795160();
    if (v45 == v43 && v46 == v44)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v22 = sub_2447955D4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0)
        goto LABEL_5;
    }
    v23 = *(int *)(v36 + 20);
    v24 = (uint64_t)&v17[v23];
    sub_24470E1C0(a1 + v23, (uint64_t)v14);
    v25 = (uint64_t)&v8[*(int *)(v37 + 48)];
    sub_24470E1C0(v24, (uint64_t)v8);
    sub_24470E1C0((uint64_t)v14, v25);
    v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
    if (v26(v8, 1, v5) == 1)
      break;
    sub_24470E1C0((uint64_t)v8, (uint64_t)v12);
    if (v26((char *)v25, 1, v5) == 1)
    {
      sub_244701444((uint64_t)v14, &qword_25737D860);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v5);
      goto LABEL_4;
    }
    v27 = v42;
    v28 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v35, v25, v5);
    sub_24470665C(&qword_25737D9F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE775A0], MEMORY[0x24BE775B8]);
    v29 = sub_244795040();
    v30 = *(void (**)(char *, uint64_t))(v27 + 8);
    a1 = v34;
    v31 = v28;
    v12 = v20;
    v30(v31, v5);
    sub_244701444((uint64_t)v14, &qword_25737D860);
    v30(v20, v5);
    sub_244701444((uint64_t)v8, &qword_25737D860);
    if ((v29 & 1) != 0)
      goto LABEL_20;
LABEL_5:
    sub_2447105E0((uint64_t)v17);
    v19 = (v19 + 1) & v38;
    if (((*(_QWORD *)(v40 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      return v19;
  }
  sub_244701444((uint64_t)v14, &qword_25737D860);
  if (v26((char *)v25, 1, v5) != 1)
  {
LABEL_4:
    sub_244701444((uint64_t)v8, &qword_25737D9E8);
    goto LABEL_5;
  }
  sub_244701444((uint64_t)v8, &qword_25737D860);
LABEL_20:
  sub_2447105E0((uint64_t)v17);
  return v19;
}

unint64_t sub_24470FCE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_24470665C(v21, v20, v22);
      v17 = sub_244795040();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_24470FE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2447955D4() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2447955D4() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_24470FEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_24470FF8C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24475C270(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_24470FFA8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_24475C450(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_24470FFC8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

BOOL _s15PreviewShellKit10ContentKeyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char v17;
  _BOOL8 result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = sub_244793E94();
  v30 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v28 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D9E8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v29 = (uint64_t)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v27 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v27 - v15;
  sub_244793E88();
  sub_24470665C(&qword_25737D9F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77570], MEMORY[0x24BE77590]);
  sub_244795160();
  sub_244795160();
  if (v33 == v31 && v34 == v32)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v17 = sub_2447955D4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v17 & 1) == 0)
      return result;
  }
  v19 = type metadata accessor for ContentKey();
  sub_24470E1C0(a1 + *(int *)(v19 + 20), (uint64_t)v16);
  sub_24470E1C0(a2 + *(int *)(v19 + 20), (uint64_t)v14);
  v20 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_24470E1C0((uint64_t)v16, (uint64_t)v8);
  sub_24470E1C0((uint64_t)v14, v20);
  v21 = v30;
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  if (v22((uint64_t)v8, 1, v4) == 1)
  {
    sub_244701444((uint64_t)v14, &qword_25737D860);
    sub_244701444((uint64_t)v16, &qword_25737D860);
    if (v22(v20, 1, v4) == 1)
    {
      sub_244701444((uint64_t)v8, &qword_25737D860);
      return 1;
    }
    goto LABEL_10;
  }
  v23 = v29;
  sub_24470E1C0((uint64_t)v8, v29);
  if (v22(v20, 1, v4) == 1)
  {
    sub_244701444((uint64_t)v14, &qword_25737D860);
    sub_244701444((uint64_t)v16, &qword_25737D860);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v4);
LABEL_10:
    sub_244701444((uint64_t)v8, &qword_25737D9E8);
    return 0;
  }
  v24 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v28, v20, v4);
  sub_24470665C(&qword_25737D9F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE775A0], MEMORY[0x24BE775B8]);
  v25 = sub_244795040();
  v26 = *(void (**)(char *, uint64_t))(v21 + 8);
  v26(v24, v4);
  sub_244701444((uint64_t)v14, &qword_25737D860);
  sub_244701444((uint64_t)v16, &qword_25737D860);
  v26((char *)v23, v4);
  sub_244701444((uint64_t)v8, &qword_25737D860);
  return (v25 & 1) != 0;
}

uint64_t sub_2447103FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContentKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_244710444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContentKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_244710488@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ContentKey() - 8) + 80);
  return sub_24470EA34(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v5 + 32) & ~v5), a2);
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for ContentKey();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 32) & ~v2);
  v4 = sub_244793E88();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + *(int *)(v1 + 20);
  v6 = sub_244793E94();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return swift_deallocObject();
}

uint64_t sub_2447105A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ContentKey() - 8) + 80);
  return sub_24470E98C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3), a1);
}

uint64_t sub_2447105E0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ContentKey();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for Unhandled(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Unhandled);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_244710664()
{
  return sub_24470665C(&qword_25737D890, (uint64_t (*)(uint64_t))type metadata accessor for ContentKey, (uint64_t)&protocol conformance descriptor for ContentKey);
}

ValueMetadata *type metadata accessor for ContentProviderRegistry()
{
  return &type metadata for ContentProviderRegistry;
}

uint64_t *initializeBufferWithCopyOfBuffer for ContentKey(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244793E88();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_244793E94();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t destroy for ContentKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = sub_244793E88();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_244793E94();
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t initializeWithCopy for ContentKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_244793E88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_244793E94();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for ContentKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_244793E88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_244793E94();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for ContentKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_244793E88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_244793E94();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for ContentKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_244793E88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_244793E94();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentKey()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244710C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_244793E88();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ContentKey()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244710CD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_244793E88();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_244710D50()
{
  unint64_t v0;
  unint64_t v1;

  sub_244793E88();
  if (v0 <= 0x3F)
  {
    sub_244710DD4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_244710DD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25737D900)
  {
    sub_244793E94();
    v0 = sub_24479540C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25737D900);
  }
}

uint64_t sub_244710E2C()
{
  return swift_retain();
}

uint64_t destroy for ContentProviderRegistry.BoxRecipe()
{
  return sub_244710E44();
}

uint64_t sub_244710E44()
{
  return swift_release();
}

uint64_t _s15PreviewShellKit23ContentProviderRegistryV9BoxRecipeOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_244710E2C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ContentProviderRegistry.BoxRecipe(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_244710E2C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_244710E44();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ContentProviderRegistry.BoxRecipe(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_244710E44();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentProviderRegistry.BoxRecipe(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentProviderRegistry.BoxRecipe(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_244710FCC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_244710FD4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ContentProviderRegistry.BoxRecipe()
{
  return &type metadata for ContentProviderRegistry.BoxRecipe;
}

uint64_t dispatch thunk of static CategoryMap.entryPoints.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t getEnumTagSinglePayload for ContentProviderRegistry.Record(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x3FFF);
  v3 = (((*(_QWORD *)(a1 + 8) >> 50) >> 13) | (2
                                                           * ((*(_QWORD *)(a1 + 8) >> 50) & 0x1C00 | ((*(_QWORD *)(a1 + 8) & 7) << 7) | (*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFE)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ContentProviderRegistry.Record(uint64_t result, unsigned int a2, unsigned int a3)
{
  unint64_t v3;

  if (a2 > 0x3FFE)
  {
    *(_QWORD *)result = a2 - 0x3FFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3FFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x3FFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x1FFF | ((-a2 & 0x3FFF) << 13);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_QWORD *)(result + 8) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_2447110DC(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) >> 63;
}

uint64_t sub_2447110E8(uint64_t result)
{
  *(_QWORD *)(result + 8) &= ~0x8000000000000000;
  return result;
}

_QWORD *sub_2447110F8(_QWORD *result, uint64_t a2)
{
  uint64_t v2;

  v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  *result &= 0xFFFFFFFFFFFFFF8uLL;
  result[1] = v2;
  return result;
}

ValueMetadata *type metadata accessor for ContentProviderRegistry.Record()
{
  return &type metadata for ContentProviderRegistry.Record;
}

uint64_t sub_244711120()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_244711128()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244793E88();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_244711190(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244793E88();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_2447111CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244793E88();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_244711200(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244793E88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_244711244(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244793E88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_244711288(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244793E88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_2447112CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244793E88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_244711310()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24471131C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244793E88();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_244711358()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244711364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244793E88();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_2447113A4()
{
  JUMPOUT(0x249518824);
}

void sub_2447113B4()
{
  JUMPOUT(0x249518824);
}

void sub_2447113C4()
{
  JUMPOUT(0x249518824);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24951877C](a1, v6, a5);
}

uint64_t PassThroughProvider.invalidationHandle.getter()
{
  sub_244711E70();
  return swift_retain();
}

uint64_t sub_244711414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v17[5];

  sub_244794710();
  swift_allocObject();
  *a5 = sub_244794704();
  v11 = type metadata accessor for PassThroughProvider(0, a3, a4, v10);
  sub_244711EB8(a1, (uint64_t)a5 + *(int *)(v11 + 36));
  v12 = (char *)a5 + *(int *)(v11 + 40);
  v13 = sub_244794308();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a2, v13);
  v17[3] = type metadata accessor for PreviewNonUIAgentProxy();
  v17[4] = sub_244712800();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  sub_244711EB8(a1, (uint64_t)boxed_opaque_existential_1);
  MEMORY[0x249518824](&protocol conformance descriptor for PassThroughProvider<A>, v11);
  sub_24479453C();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a2, v13);
  sub_244711EFC(a1);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
}

uint64_t static PassThroughProvider.create(for:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  type metadata accessor for PreviewNonUIAgentProxy();
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_25737DA08);
  v5[16] = swift_task_alloc();
  v6 = sub_244794308();
  v5[17] = v6;
  v5[18] = *(_QWORD *)(v6 - 8);
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244711640()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  _QWORD *v16;
  uint64_t v18;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 104) + 8))();
  if (*(_QWORD *)(v1 + 16) && (v2 = sub_24470F54C(*(_QWORD *)(v0 + 80)), (v3 & 1) != 0))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 16))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v1 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 144) + 72) * v2, *(_QWORD *)(v0 + 136));
    v4 = 0;
  }
  else
  {
    v4 = 1;
  }
  v5 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v7, v4, 1, v5);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1)
  {
    v9 = *(_QWORD *)(v0 + 96);
    v8 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 80);
    sub_244711E78(*(_QWORD *)(v0 + 128));
    static CategoryMap.unhandled(_:)(v10, v9, v8, (uint64_t *)(v0 + 16));
    v11 = *(_QWORD *)(v0 + 40);
    v12 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v11);
    v13 = *(_QWORD *)(v11 - 8);
    v14 = swift_task_alloc();
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v13 + 16))(v14, v12, v11);
    if (sub_2447955BC())
    {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v11);
    }
    else
    {
      swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v18, v14, v11);
    }
    swift_willThrow();
    swift_task_dealloc();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v15 = *(_DWORD **)(v0 + 88);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 32))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
    *(_OWORD *)(v0 + 56) = *(_OWORD *)((char *)v15
                                     + *(int *)(type metadata accessor for PreviewAgentConnector() + 24)
                                     + 48);
    LODWORD(v15) = *v15;
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v16;
    *v16 = v0;
    v16[1] = sub_2447118A8;
    return SharedAgentServer<>.requestPreviewNonUIAgent(for:)(*(_QWORD *)(v0 + 120), (int)v15);
  }
}

uint64_t sub_2447118A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24471190C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 96);
  v9 = *(uint64_t **)(v0 + 72);
  sub_244711EB8(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  sub_244711414(v6, v1, v8, v7, v9);
  sub_244711EFC(v5);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2447119EC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PassThroughProvider.performUpdate(updatePayload:previewType:context:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a3;
  v26 = a1;
  v27 = sub_2447942E4();
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_244794494();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_244794308();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2447942F0();
  v22 = *(_QWORD *)(v16 - 8);
  v23 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v24 + *(int *)(a5 + 40), v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v26, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v7, v28, v27);
  sub_2447942B4();
  v19 = PreviewNonUIAgentProxy.perform<A>(update:expecting:)((uint64_t)v18, v8, v8, MEMORY[0x24BE76518]);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v23);
  return v19;
}

uint64_t PassThroughProvider.stop()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  return sub_2447949D4();
}

uint64_t PassThroughProvider.prepareForRelaunch()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  return sub_2447949D4();
}

uint64_t sub_244711D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return PassThroughProvider.performUpdate(updatePayload:previewType:context:delegate:)(a1, a2, a3, a4, a5);
}

uint64_t sub_244711D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  v10 = *(_QWORD *)(a4 + 16);
  v11 = *(_QWORD *)(a4 + 24);
  *v9 = v4;
  v9[1] = sub_244706734;
  return static PassThroughProvider.create(for:using:)(a1, a2, a3, v10, v11);
}

uint64_t sub_244711D8C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  return sub_2447949D4();
}

uint64_t sub_244711DF4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  return sub_2447949D4();
}

uint64_t sub_244711E5C()
{
  sub_244711E70();
  return swift_retain();
}

uint64_t sub_244711E70()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_244711E78(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA08);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_244711EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PreviewNonUIAgentProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_244711EFC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PreviewNonUIAgentProxy();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_244711F38(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x249518824](&protocol conformance descriptor for PassThroughProvider<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_244711F64(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x249518824](&protocol conformance descriptor for PassThroughProvider<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_244711F90()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_244711F98()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PreviewNonUIAgentProxy();
  if (v1 <= 0x3F)
  {
    result = sub_244794308();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_24471202C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 36);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(uint64_t *)((char *)a2 + v8);
    *((_DWORD *)v9 + 2) = *(_DWORD *)((char *)a2 + v8 + 8);
    v11 = (int *)type metadata accessor for PreviewNonUIAgentProxy();
    v12 = v11[6];
    v13 = &v9[v12];
    v14 = &v10[v12];
    swift_retain();
    swift_retain();
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = v11[7];
    v17 = &v9[v16];
    v18 = &v10[v16];
    v19 = *((_QWORD *)v18 + 1);
    *(_QWORD *)v17 = *(_QWORD *)v18;
    *((_QWORD *)v17 + 1) = v19;
    *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
    v20 = *(int *)(a3 + 40);
    v21 = (char *)v7 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_244794308();
    v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v24(v21, v22, v23);
  }
  return v7;
}

uint64_t sub_244712174(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_release();
  v4 = a1 + *(int *)(a2 + 36);
  swift_release();
  v5 = v4 + *(int *)(type metadata accessor for PreviewNonUIAgentProxy() + 24);
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();
  swift_release();
  v7 = a1 + *(int *)(a2 + 40);
  v8 = sub_244794308();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *sub_244712234(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)((char *)a2 + v6);
  *((_DWORD *)v7 + 2) = *(_DWORD *)((char *)a2 + v6 + 8);
  v9 = (int *)type metadata accessor for PreviewNonUIAgentProxy();
  v10 = v9[6];
  v11 = &v7[v10];
  v12 = &v8[v10];
  swift_retain();
  swift_retain();
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = v9[7];
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = v17;
  *(_QWORD *)&v7[v9[8]] = *(_QWORD *)&v8[v9[8]];
  v18 = *(int *)(a3 + 40);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_244794308();
  v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  v22(v19, v20, v21);
  return a1;
}

_QWORD *sub_244712354(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_retain();
  swift_release();
  *((_DWORD *)v7 + 2) = *((_DWORD *)v8 + 2);
  v9 = (int *)type metadata accessor for PreviewNonUIAgentProxy();
  v10 = v9[6];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = v9[7];
  v15 = &v7[v14];
  v16 = &v8[v14];
  *(_QWORD *)&v7[v14] = *(_QWORD *)&v8[v14];
  swift_retain();
  swift_release();
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_retain();
  swift_release();
  *(_QWORD *)&v7[v9[8]] = *(_QWORD *)&v8[v9[8]];
  swift_retain();
  swift_release();
  v17 = *(int *)(a3 + 40);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_244794308();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

_QWORD *sub_2447124A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)((char *)a2 + v6);
  *((_DWORD *)v7 + 2) = *(_DWORD *)((char *)a2 + v6 + 8);
  v9 = (int *)type metadata accessor for PreviewNonUIAgentProxy();
  v10 = v9[6];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_OWORD *)&v7[v9[7]] = *(_OWORD *)&v8[v9[7]];
  *(_QWORD *)&v7[v9[8]] = *(_QWORD *)&v8[v9[8]];
  v14 = *(int *)(a3 + 40);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_244794308();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

_QWORD *sub_244712584(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  swift_release();
  *((_DWORD *)v7 + 2) = *((_DWORD *)v8 + 2);
  v9 = (int *)type metadata accessor for PreviewNonUIAgentProxy();
  v10 = v9[6];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = v9[7];
  v15 = &v7[v14];
  v16 = &v8[v14];
  *(_QWORD *)&v7[v14] = *(_QWORD *)&v8[v14];
  swift_release();
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_release();
  *(_QWORD *)&v7[v9[8]] = *(_QWORD *)&v8[v9[8]];
  swift_release();
  v17 = *(int *)(a3 + 40);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_244794308();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t sub_2447126A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2447126AC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for PreviewNonUIAgentProxy();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 36);
    }
    else
    {
      v10 = sub_244794308();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 40);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_24471274C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_244712758(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for PreviewNonUIAgentProxy();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      v10 = sub_244794308();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 40);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for PassThroughProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PassThroughProvider);
}

unint64_t sub_244712800()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25737DAE0;
  if (!qword_25737DAE0)
  {
    v1 = type metadata accessor for PreviewNonUIAgentProxy();
    result = MEMORY[0x249518824](&protocol conformance descriptor for PreviewNonUIAgentProxy, v1);
    atomic_store(result, (unint64_t *)&qword_25737DAE0);
  }
  return result;
}

uint64_t static PreviewVariantGroup.colorSchemeVariantGroup.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD v22[2];
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;

  v30 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DAE8);
  MEMORY[0x24BDAC7A8](v1);
  v29 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_2447941E8();
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v23 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_244794200();
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DAF0);
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_244793FF0();
  MEMORY[0x24BDAC7A8](v8);
  v22[1] = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DAF8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_244793C18();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_244793DC8();
  MEMORY[0x24BDAC7A8](v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB00);
  sub_244793DE0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_244796B50;
  sub_244793DBC();
  sub_244793B58();
  v15 = sub_244793D50();
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v16(v12, 1, 1, v15);
  sub_244793DD4();
  sub_244793DBC();
  sub_244793B4C();
  v16(v12, 1, 1, v15);
  sub_244793DD4();
  sub_244793DBC();
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v23, *MEMORY[0x24BE77DD0], v27);
  sub_244793DBC();
  sub_2447941F4();
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v5, *MEMORY[0x24BE77DF0], v28);
  swift_bridgeObjectRetain();
  v17 = v24;
  sub_24479420C();
  v18 = sub_244794218();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
  v19 = v29;
  sub_244794194();
  v20 = sub_2447941A0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
  return sub_244793FFC();
}

uint64_t static PreviewVariantGroup.orientationVariantGroup.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, _QWORD, uint64_t, uint64_t);
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD v25[3];
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;

  v34 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DAE8);
  MEMORY[0x24BDAC7A8](v1);
  v33 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_2447941E8();
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v27 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_244794200();
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v26 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DAF0);
  MEMORY[0x24BDAC7A8](v5);
  v28 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_244793FF0();
  MEMORY[0x24BDAC7A8](v7);
  v25[2] = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DAF8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_244793C18();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_244793DC8();
  MEMORY[0x24BDAC7A8](v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB00);
  v25[1] = 2 * *(_QWORD *)(*(_QWORD *)(sub_244793DE0() - 8) + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_244796B60;
  sub_244793DBC();
  sub_244793B7C();
  v14 = *MEMORY[0x24BE77290];
  v15 = sub_244793D50();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 104);
  v17(v11, v14, v15);
  v18 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56);
  v18(v11, 0, 1, v15);
  sub_244793DD4();
  sub_244793DBC();
  sub_244793B64();
  v17(v11, *MEMORY[0x24BE77278], v15);
  v18(v11, 0, 1, v15);
  sub_244793DD4();
  sub_244793DBC();
  sub_244793B70();
  v17(v11, *MEMORY[0x24BE77280], v15);
  v18(v11, 0, 1, v15);
  sub_244793DD4();
  sub_244793DBC();
  (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v27, *MEMORY[0x24BE77DD0], v31);
  sub_244793DBC();
  v19 = v26;
  sub_2447941F4();
  (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v19, *MEMORY[0x24BE77DF0], v32);
  swift_bridgeObjectRetain();
  v20 = v28;
  sub_24479420C();
  v21 = sub_244794218();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 0, 1, v21);
  v22 = v33;
  sub_244794194();
  v23 = sub_2447941A0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
  return sub_244793FFC();
}

uint64_t static PreviewVariantGroup.dynamicTypeVariantGroup.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;

  v33 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DAE8);
  MEMORY[0x24BDAC7A8](v1);
  v32 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_2447941E8();
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v26 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_244794200();
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DAF0);
  MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_244793FF0();
  MEMORY[0x24BDAC7A8](v7);
  v24 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DAF8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_244793C18();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_244793DC8();
  MEMORY[0x24BDAC7A8](v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB00);
  sub_244793DE0();
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_244796B70;
  sub_244793DBC();
  sub_244793BF4();
  v14 = sub_244793D50();
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v11, 1, 1, v14);
  sub_244793DD4();
  v22 = 0xD000000000000021;
  sub_244793DBC();
  sub_244793BD0();
  v15(v11, 1, 1, v14);
  sub_244793DD4();
  sub_244793DBC();
  sub_244793BDC();
  v15(v11, 1, 1, v14);
  sub_244793DD4();
  sub_244793DBC();
  sub_244793BC4();
  v15(v11, 1, 1, v14);
  sub_244793DD4();
  sub_244793DBC();
  sub_244793BE8();
  v15(v11, 1, 1, v14);
  sub_244793DD4();
  sub_244793DBC();
  sub_244793C00();
  v15(v11, 1, 1, v14);
  sub_244793DD4();
  v22 = 0xD000000000000024;
  sub_244793DBC();
  sub_244793C0C();
  v15(v11, 1, 1, v14);
  sub_244793DD4();
  sub_244793DBC();
  sub_244793B88();
  v15(v11, 1, 1, v14);
  sub_244793DD4();
  sub_244793DBC();
  sub_244793B94();
  v15(v11, 1, 1, v14);
  sub_244793DD4();
  sub_244793DBC();
  sub_244793BA0();
  v15(v11, 1, 1, v14);
  sub_244793DD4();
  sub_244793DBC();
  sub_244793BAC();
  v15(v11, 1, 1, v14);
  sub_244793DD4();
  sub_244793DBC();
  sub_244793BB8();
  v15(v11, 1, 1, v14);
  sub_244793DD4();
  sub_244793DBC();
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v26, *MEMORY[0x24BE77DD8], v30);
  sub_244793DBC();
  v16 = v25;
  sub_2447941F4();
  (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v16, *MEMORY[0x24BE77DF0], v31);
  swift_bridgeObjectRetain();
  v17 = v27;
  sub_24479420C();
  v18 = sub_244794218();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
  v19 = v32;
  sub_244794194();
  v20 = sub_2447941A0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
  return sub_244793FFC();
}

uint64_t sub_244713B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_244795220();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_244795214();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_244701444(a1, &qword_25737D0D0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2447951D8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t ServerFarm.daemonServer.getter()
{
  return swift_retain();
}

uint64_t ServerFarm.serviceHubServer.getter()
{
  return swift_retain();
}

uint64_t ServerFarm.jitBootstrapAgentServer.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

uint64_t ServerFarm.controlAgentServer.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 40);
  *a1 = *(_QWORD *)(v1 + 32);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

uint64_t ServerFarm.previewNonUIAgentServer.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *a1 = *(_QWORD *)(v1 + 48);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

uint64_t ServerFarm.previewSceneAgentServer.getter()
{
  return swift_retain();
}

uint64_t ServerFarm.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[2];

  v2 = sub_244793894();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB08);
  swift_allocObject();
  *a1 = sub_244715E1C(&qword_25737DFD8, &qword_25737DFE0, MEMORY[0x24BE77FE8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB10);
  swift_allocObject();
  a1[1] = sub_244715E1C(&qword_25737DFC8, &qword_25737DFD0, MEMORY[0x24BE77FE0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB18);
  swift_allocObject();
  v6 = sub_244718A90();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB20);
  v7 = sub_244794890();
  a1[2] = v6;
  a1[3] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB28);
  swift_allocObject();
  v8 = sub_244718784();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB30);
  v9 = sub_244794890();
  a1[4] = v8;
  a1[5] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB38);
  swift_allocObject();
  v10 = sub_244718478();
  v11 = sub_244794890();
  a1[6] = v10;
  a1[7] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB40);
  swift_allocObject();
  a1[8] = sub_24471816C();
  a1[9] = sub_244723928();
  a1[10] = v12;
  a1[11] = v13;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BE78018], v2);
  type metadata accessor for HostServer();
  v14 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(v14 + OBJC_IVAR____TtC15PreviewShellKit10HostServer_service, v5, v2);
  v19[1] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB48);
  v15 = sub_244794A70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_QWORD *)(v14 + OBJC_IVAR____TtC15PreviewShellKit10HostServer_activeListener) = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB50);
  v16 = sub_244793AEC();
  a1[12] = v14;
  a1[13] = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB58);
  swift_allocObject();
  v17 = sub_244717E60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB60);
  swift_retain();
  result = sub_244793B04();
  a1[14] = v17;
  a1[15] = result;
  return result;
}

uint64_t ServerFarm.HostMessages.viaDaemon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB70);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ServerFarm.HostMessages.viaDaemon.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB70);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ServerFarm.HostMessages.viaDaemon.modify())()
{
  return nullsub_1;
}

uint64_t ServerFarm.HostMessages.viaServiceHub.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ServerFarm.HostMessages() + 20);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB78);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ServerFarm.HostMessages.viaServiceHub.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ServerFarm.HostMessages() + 20);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB78);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ServerFarm.HostMessages.viaServiceHub.modify())()
{
  type metadata accessor for ServerFarm.HostMessages();
  return nullsub_1;
}

uint64_t ServerFarm.activate()@<X0>(char *a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  __int128 v33;
  char *v34;
  uint64_t v35;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  void (*v44)(uint64_t, char *, uint64_t);
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _OWORD v55[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E630);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = v6;
  v44 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v37 - v12;
  v14 = v1[5];
  v49 = v1[4];
  v50 = v14;
  v15 = v1[7];
  v51 = v1[6];
  v52 = v15;
  v16 = v1[1];
  v45 = *v1;
  v17 = v1[2];
  v18 = v1[3];
  v46 = v16;
  v47 = v17;
  v48 = v18;
  sub_244715FCC(a1);
  v19 = type metadata accessor for ServerFarm.HostMessages();
  sub_244716370(&a1[*(int *)(v19 + 20)]);
  v55[0] = v46;
  sub_24471D454((uint64_t)v55);
  sub_2447159C4(&v45);
  sub_24471D488((uint64_t)v55);
  v54 = v47;
  sub_24471D454((uint64_t)&v54);
  sub_2447155A8(&v45);
  sub_24471D488((uint64_t)&v54);
  v53 = v48;
  sub_24471D454((uint64_t)&v53);
  sub_24471518C(&v45);
  sub_24471D488((uint64_t)&v53);
  sub_244714D70(&v45);
  v20 = *((_QWORD *)&v49 + 1);
  v40 = *((_QWORD *)&v50 + 1);
  v21 = v50;
  v39 = v13;
  sub_2447253B8(v13);
  sub_24471450C(&v45);
  v22 = sub_244795220();
  v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v43(v5, 1, 1, v22);
  v23 = v7;
  v42 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v37 = v11;
  v24 = v8;
  v42(v11, v13, v8);
  v25 = *(unsigned __int8 *)(v7 + 80);
  v26 = (v25 + 32) & ~v25;
  v41 = v25 | 7;
  v27 = ((unint64_t)v44 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = 0;
  *(_QWORD *)(v28 + 24) = 0;
  v44 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 32);
  v44(v28 + v26, v11, v24);
  v29 = (_QWORD *)(v28 + v27);
  *v29 = v20;
  v29[1] = v21;
  v29[2] = v40;
  swift_retain();
  swift_retain();
  swift_retain();
  v30 = (uint64_t)v38;
  sub_244713B34((uint64_t)v38, (uint64_t)&unk_25737DB80, v28);
  swift_release();
  v31 = *(void (**)(char *, uint64_t))(v23 + 8);
  v32 = v39;
  v31(v39, v24);
  v33 = v51;
  sub_2447253B8(v32);
  v43((char *)v30, 1, 1, v22);
  v34 = v37;
  v42(v37, v32, v24);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = 0;
  *(_QWORD *)(v35 + 24) = 0;
  v44(v35 + v26, v34, v24);
  *(_OWORD *)(v35 + v27) = v33;
  swift_retain();
  swift_retain();
  sub_244713B34(v30, (uint64_t)&unk_25737DB88, v35);
  swift_release();
  v31(v32, v24);
  return sub_244714954(&v45);
}

uint64_t sub_24471450C(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  objc_class *v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t result;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  _QWORD *v36;
  uint64_t v37;
  _OWORD *v38;
  uint64_t v39;
  _QWORD v40[4];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  objc_super v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _BYTE aBlock[136];

  v38 = a1;
  v1 = a1[5];
  v55 = a1[4];
  v56 = v1;
  v2 = a1[7];
  v57 = a1[6];
  v58 = v2;
  v3 = a1[1];
  v51 = *a1;
  v52 = v3;
  v4 = a1[3];
  v53 = a1[2];
  v54 = v4;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DCA8);
  MEMORY[0x24BDAC7A8](v37);
  v36 = (_QWORD **)((char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_244793894();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v36 - v11;
  v13 = *MEMORY[0x24BE78058];
  v14 = sub_244793888();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v12, *MEMORY[0x24BE77FF0], v6);
  v15 = (objc_class *)type metadata accessor for AsyncListenerDelegate();
  v16 = (char *)objc_allocWithZone(v15);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  v17 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v18 = (v8 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v19 + v17, v10, v6);
  v20 = (_QWORD *)(v19 + v18);
  v21 = v39;
  *v20 = &unk_25737DCB8;
  v20[1] = v21;
  v22 = &v16[OBJC_IVAR____TtC15PreviewShellKit21AsyncListenerDelegate_serviceConnectionHandler];
  *(_QWORD *)v22 = &unk_25737DCC0;
  *((_QWORD *)v22 + 1) = v19;
  v50.receiver = v16;
  v50.super_class = v15;
  swift_retain();
  v23 = objc_msgSendSuper2(&v50, sel_init);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v40[2] = v23;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = sub_24471E56C;
  *(_QWORD *)(v24 + 24) = v40;
  *(_QWORD *)&aBlock[32] = sub_244720808;
  *(_QWORD *)&aBlock[40] = v24;
  *(_QWORD *)aBlock = MEMORY[0x24BDAC760];
  *(_QWORD *)&aBlock[8] = 1107296256;
  *(_QWORD *)&aBlock[16] = sub_244715DE0;
  *(_QWORD *)&aBlock[24] = &block_descriptor_37;
  v25 = _Block_copy(aBlock);
  v26 = (void *)objc_opt_self();
  swift_retain();
  v27 = objc_msgSend(v26, sel_listenerWithConfigurator_, v25);
  _Block_release(v25);
  swift_release();
  LOBYTE(v25) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v25 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v27, sel_activate);
    v29 = (_QWORD *)(v21 + *(_QWORD *)(*(_QWORD *)v21 + 96));
    v30 = *(int *)(v37 + 48);
    v31 = (char *)v36 + v30;
    v32 = (char *)v29 + v30;
    *v36 = *v29;
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DCC8);
    v34 = *(_QWORD *)(v33 - 8);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
    *(_QWORD *)aBlock = v27;
    *(_OWORD *)&aBlock[72] = v55;
    *(_OWORD *)&aBlock[88] = v56;
    *(_OWORD *)&aBlock[104] = v57;
    *(_OWORD *)&aBlock[120] = v58;
    *(_OWORD *)&aBlock[8] = v51;
    *(_OWORD *)&aBlock[24] = v52;
    *(_OWORD *)&aBlock[40] = v53;
    *(_OWORD *)&aBlock[56] = v54;
    v47 = *(_OWORD *)&aBlock[96];
    v48 = *(_OWORD *)&aBlock[112];
    v49 = *((_QWORD *)&v58 + 1);
    v43 = *(_OWORD *)&aBlock[32];
    v44 = *(_OWORD *)&aBlock[48];
    v45 = *(_OWORD *)&aBlock[64];
    v46 = *(_OWORD *)&aBlock[80];
    v41 = *(_OWORD *)aBlock;
    v42 = *(_OWORD *)&aBlock[16];
    v35 = v27;
    sub_24471E2F0((uint64_t)v38);
    sub_24470130C(&qword_25737DCD0, &qword_25737DCC8, MEMORY[0x24BE76D88]);
    sub_244794560();

    sub_24471EAD8((void **)aBlock);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v31, v33);
  }
  return result;
}

uint64_t sub_244714954(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t result;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _QWORD *v34;
  uint64_t v35;
  _OWORD *v36;
  uint64_t v37;
  _QWORD v38[4];
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  objc_super v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _BYTE aBlock[136];

  v36 = a1;
  v1 = a1[5];
  v53 = a1[4];
  v54 = v1;
  v2 = a1[7];
  v55 = a1[6];
  v56 = v2;
  v3 = a1[1];
  v49 = *a1;
  v50 = v3;
  v4 = a1[3];
  v51 = a1[2];
  v52 = v4;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC40);
  MEMORY[0x24BDAC7A8](v35);
  v34 = (_QWORD **)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_244793894();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v34 - v11;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))((char *)&v34 - v11, *MEMORY[0x24BE77FF8], v6);
  v13 = (objc_class *)type metadata accessor for AsyncListenerDelegate();
  v14 = (char *)objc_allocWithZone(v13);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  v15 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = (v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v17 + v15, v10, v6);
  v18 = (_QWORD *)(v17 + v16);
  v19 = v37;
  *v18 = &unk_25737DC50;
  v18[1] = v19;
  v20 = &v14[OBJC_IVAR____TtC15PreviewShellKit21AsyncListenerDelegate_serviceConnectionHandler];
  *(_QWORD *)v20 = &unk_25737DC58;
  *((_QWORD *)v20 + 1) = v17;
  v48.receiver = v14;
  v48.super_class = v13;
  swift_retain();
  v21 = objc_msgSendSuper2(&v48, sel_init);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v38[2] = v21;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_24471E2A8;
  *(_QWORD *)(v22 + 24) = v38;
  *(_QWORD *)&aBlock[32] = sub_244705EF0;
  *(_QWORD *)&aBlock[40] = v22;
  *(_QWORD *)aBlock = MEMORY[0x24BDAC760];
  *(_QWORD *)&aBlock[8] = 1107296256;
  *(_QWORD *)&aBlock[16] = sub_244715DE0;
  *(_QWORD *)&aBlock[24] = &block_descriptor_0;
  v23 = _Block_copy(aBlock);
  v24 = (void *)objc_opt_self();
  swift_retain();
  v25 = objc_msgSend(v24, sel_listenerWithConfigurator_, v23);
  _Block_release(v23);
  swift_release();
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v23 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v25, sel_activate);
    v27 = (_QWORD *)(v19 + *(_QWORD *)(*(_QWORD *)v19 + 96));
    v28 = *(int *)(v35 + 48);
    v29 = (char *)v34 + v28;
    v30 = (char *)v27 + v28;
    *v34 = *v27;
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC60);
    v32 = *(_QWORD *)(v31 - 8);
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
    *(_QWORD *)aBlock = v25;
    *(_OWORD *)&aBlock[72] = v53;
    *(_OWORD *)&aBlock[88] = v54;
    *(_OWORD *)&aBlock[104] = v55;
    *(_OWORD *)&aBlock[120] = v56;
    *(_OWORD *)&aBlock[8] = v49;
    *(_OWORD *)&aBlock[24] = v50;
    *(_OWORD *)&aBlock[40] = v51;
    *(_OWORD *)&aBlock[56] = v52;
    v45 = *(_OWORD *)&aBlock[96];
    v46 = *(_OWORD *)&aBlock[112];
    v47 = *((_QWORD *)&v56 + 1);
    v41 = *(_OWORD *)&aBlock[32];
    v42 = *(_OWORD *)&aBlock[48];
    v43 = *(_OWORD *)&aBlock[64];
    v44 = *(_OWORD *)&aBlock[80];
    v39 = *(_OWORD *)aBlock;
    v40 = *(_OWORD *)&aBlock[16];
    v33 = v25;
    sub_24471E2F0((uint64_t)v36);
    sub_24470130C(&qword_25737DC68, &qword_25737DC60, MEMORY[0x24BE76D88]);
    sub_244794560();

    sub_24471EAD8((void **)aBlock);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v29, v31);
  }
  return result;
}

uint64_t sub_244714D70(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t result;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _QWORD *v34;
  uint64_t v35;
  _OWORD *v36;
  uint64_t v37;
  _QWORD v38[4];
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  objc_super v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _BYTE aBlock[136];

  v36 = a1;
  v1 = a1[5];
  v53 = a1[4];
  v54 = v1;
  v2 = a1[7];
  v55 = a1[6];
  v56 = v2;
  v3 = a1[1];
  v49 = *a1;
  v50 = v3;
  v4 = a1[3];
  v51 = a1[2];
  v52 = v4;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DCE8);
  MEMORY[0x24BDAC7A8](v35);
  v34 = (_QWORD **)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_244793894();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v34 - v11;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))((char *)&v34 - v11, *MEMORY[0x24BE78010], v6);
  v13 = (objc_class *)type metadata accessor for AsyncListenerDelegate();
  v14 = (char *)objc_allocWithZone(v13);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  v15 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = (v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v17 + v15, v10, v6);
  v18 = (_QWORD *)(v17 + v16);
  v19 = v37;
  *v18 = &unk_25737DCF8;
  v18[1] = v19;
  v20 = &v14[OBJC_IVAR____TtC15PreviewShellKit21AsyncListenerDelegate_serviceConnectionHandler];
  *(_QWORD *)v20 = &unk_25737DD00;
  *((_QWORD *)v20 + 1) = v17;
  v48.receiver = v14;
  v48.super_class = v13;
  swift_retain();
  v21 = objc_msgSendSuper2(&v48, sel_init);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v38[2] = v21;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_24471E670;
  *(_QWORD *)(v22 + 24) = v38;
  *(_QWORD *)&aBlock[32] = sub_244720808;
  *(_QWORD *)&aBlock[40] = v22;
  *(_QWORD *)aBlock = MEMORY[0x24BDAC760];
  *(_QWORD *)&aBlock[8] = 1107296256;
  *(_QWORD *)&aBlock[16] = sub_244715DE0;
  *(_QWORD *)&aBlock[24] = &block_descriptor_55;
  v23 = _Block_copy(aBlock);
  v24 = (void *)objc_opt_self();
  swift_retain();
  v25 = objc_msgSend(v24, sel_listenerWithConfigurator_, v23);
  _Block_release(v23);
  swift_release();
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v23 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v25, sel_activate);
    v27 = (_QWORD *)(v19 + *(_QWORD *)(*(_QWORD *)v19 + 96));
    v28 = *(int *)(v35 + 48);
    v29 = (char *)v34 + v28;
    v30 = (char *)v27 + v28;
    *v34 = *v27;
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DD08);
    v32 = *(_QWORD *)(v31 - 8);
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
    *(_QWORD *)aBlock = v25;
    *(_OWORD *)&aBlock[72] = v53;
    *(_OWORD *)&aBlock[88] = v54;
    *(_OWORD *)&aBlock[104] = v55;
    *(_OWORD *)&aBlock[120] = v56;
    *(_OWORD *)&aBlock[8] = v49;
    *(_OWORD *)&aBlock[24] = v50;
    *(_OWORD *)&aBlock[40] = v51;
    *(_OWORD *)&aBlock[56] = v52;
    v45 = *(_OWORD *)&aBlock[96];
    v46 = *(_OWORD *)&aBlock[112];
    v47 = *((_QWORD *)&v56 + 1);
    v41 = *(_OWORD *)&aBlock[32];
    v42 = *(_OWORD *)&aBlock[48];
    v43 = *(_OWORD *)&aBlock[64];
    v44 = *(_OWORD *)&aBlock[80];
    v39 = *(_OWORD *)aBlock;
    v40 = *(_OWORD *)&aBlock[16];
    v33 = v25;
    sub_24471E2F0((uint64_t)v36);
    sub_24470130C(&qword_25737DD10, &qword_25737DD08, MEMORY[0x24BE76D88]);
    sub_244794560();

    sub_24471EAD8((void **)aBlock);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v29, v31);
  }
  return result;
}

uint64_t sub_24471518C(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t result;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _QWORD *v34;
  uint64_t v35;
  _OWORD *v36;
  uint64_t v37;
  _QWORD v38[4];
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  objc_super v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _BYTE aBlock[136];

  v36 = a1;
  v1 = a1[5];
  v53 = a1[4];
  v54 = v1;
  v2 = a1[7];
  v55 = a1[6];
  v56 = v2;
  v3 = a1[1];
  v49 = *a1;
  v50 = v3;
  v4 = a1[3];
  v51 = a1[2];
  v52 = v4;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DD40);
  MEMORY[0x24BDAC7A8](v35);
  v34 = (_QWORD **)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_244793894();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v34 - v11;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))((char *)&v34 - v11, *MEMORY[0x24BE78008], v6);
  v13 = (objc_class *)type metadata accessor for AsyncListenerDelegate();
  v14 = (char *)objc_allocWithZone(v13);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  v15 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = (v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v17 + v15, v10, v6);
  v18 = (_QWORD *)(v17 + v16);
  v19 = v37;
  *v18 = &unk_25737DD50;
  v18[1] = v19;
  v20 = &v14[OBJC_IVAR____TtC15PreviewShellKit21AsyncListenerDelegate_serviceConnectionHandler];
  *(_QWORD *)v20 = &unk_25737DD58;
  *((_QWORD *)v20 + 1) = v17;
  v48.receiver = v14;
  v48.super_class = v13;
  swift_retain();
  v21 = objc_msgSendSuper2(&v48, sel_init);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v38[2] = v21;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_24471E7C4;
  *(_QWORD *)(v22 + 24) = v38;
  *(_QWORD *)&aBlock[32] = sub_244720808;
  *(_QWORD *)&aBlock[40] = v22;
  *(_QWORD *)aBlock = MEMORY[0x24BDAC760];
  *(_QWORD *)&aBlock[8] = 1107296256;
  *(_QWORD *)&aBlock[16] = sub_244715DE0;
  *(_QWORD *)&aBlock[24] = &block_descriptor_73;
  v23 = _Block_copy(aBlock);
  v24 = (void *)objc_opt_self();
  swift_retain();
  v25 = objc_msgSend(v24, sel_listenerWithConfigurator_, v23);
  _Block_release(v23);
  swift_release();
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v23 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v25, sel_activate);
    v27 = (_QWORD *)(v19 + *(_QWORD *)(*(_QWORD *)v19 + 96));
    v28 = *(int *)(v35 + 48);
    v29 = (char *)v34 + v28;
    v30 = (char *)v27 + v28;
    *v34 = *v27;
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DD60);
    v32 = *(_QWORD *)(v31 - 8);
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
    *(_QWORD *)aBlock = v25;
    *(_OWORD *)&aBlock[72] = v53;
    *(_OWORD *)&aBlock[88] = v54;
    *(_OWORD *)&aBlock[104] = v55;
    *(_OWORD *)&aBlock[120] = v56;
    *(_OWORD *)&aBlock[8] = v49;
    *(_OWORD *)&aBlock[24] = v50;
    *(_OWORD *)&aBlock[40] = v51;
    *(_OWORD *)&aBlock[56] = v52;
    v45 = *(_OWORD *)&aBlock[96];
    v46 = *(_OWORD *)&aBlock[112];
    v47 = *((_QWORD *)&v56 + 1);
    v41 = *(_OWORD *)&aBlock[32];
    v42 = *(_OWORD *)&aBlock[48];
    v43 = *(_OWORD *)&aBlock[64];
    v44 = *(_OWORD *)&aBlock[80];
    v39 = *(_OWORD *)aBlock;
    v40 = *(_OWORD *)&aBlock[16];
    v33 = v25;
    sub_24471E2F0((uint64_t)v36);
    sub_24470130C(&qword_25737DD68, &qword_25737DD60, MEMORY[0x24BE76D88]);
    sub_244794560();

    sub_24471EAD8((void **)aBlock);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v29, v31);
  }
  return result;
}

uint64_t sub_2447155A8(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t result;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _QWORD *v34;
  uint64_t v35;
  _OWORD *v36;
  uint64_t v37;
  _QWORD v38[4];
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  objc_super v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _BYTE aBlock[136];

  v36 = a1;
  v1 = a1[5];
  v53 = a1[4];
  v54 = v1;
  v2 = a1[7];
  v55 = a1[6];
  v56 = v2;
  v3 = a1[1];
  v49 = *a1;
  v50 = v3;
  v4 = a1[3];
  v51 = a1[2];
  v52 = v4;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DD80);
  MEMORY[0x24BDAC7A8](v35);
  v34 = (_QWORD **)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_244793894();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v34 - v11;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))((char *)&v34 - v11, *MEMORY[0x24BE77FD8], v6);
  v13 = (objc_class *)type metadata accessor for AsyncListenerDelegate();
  v14 = (char *)objc_allocWithZone(v13);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  v15 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = (v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v17 + v15, v10, v6);
  v18 = (_QWORD *)(v17 + v16);
  v19 = v37;
  *v18 = &unk_25737DD90;
  v18[1] = v19;
  v20 = &v14[OBJC_IVAR____TtC15PreviewShellKit21AsyncListenerDelegate_serviceConnectionHandler];
  *(_QWORD *)v20 = &unk_25737DD98;
  *((_QWORD *)v20 + 1) = v17;
  v48.receiver = v14;
  v48.super_class = v13;
  swift_retain();
  v21 = objc_msgSendSuper2(&v48, sel_init);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v38[2] = v21;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_24471E8E0;
  *(_QWORD *)(v22 + 24) = v38;
  *(_QWORD *)&aBlock[32] = sub_244720808;
  *(_QWORD *)&aBlock[40] = v22;
  *(_QWORD *)aBlock = MEMORY[0x24BDAC760];
  *(_QWORD *)&aBlock[8] = 1107296256;
  *(_QWORD *)&aBlock[16] = sub_244715DE0;
  *(_QWORD *)&aBlock[24] = &block_descriptor_91;
  v23 = _Block_copy(aBlock);
  v24 = (void *)objc_opt_self();
  swift_retain();
  v25 = objc_msgSend(v24, sel_listenerWithConfigurator_, v23);
  _Block_release(v23);
  swift_release();
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v23 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v25, sel_activate);
    v27 = (_QWORD *)(v19 + *(_QWORD *)(*(_QWORD *)v19 + 96));
    v28 = *(int *)(v35 + 48);
    v29 = (char *)v34 + v28;
    v30 = (char *)v27 + v28;
    *v34 = *v27;
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DDA0);
    v32 = *(_QWORD *)(v31 - 8);
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
    *(_QWORD *)aBlock = v25;
    *(_OWORD *)&aBlock[72] = v53;
    *(_OWORD *)&aBlock[88] = v54;
    *(_OWORD *)&aBlock[104] = v55;
    *(_OWORD *)&aBlock[120] = v56;
    *(_OWORD *)&aBlock[8] = v49;
    *(_OWORD *)&aBlock[24] = v50;
    *(_OWORD *)&aBlock[40] = v51;
    *(_OWORD *)&aBlock[56] = v52;
    v45 = *(_OWORD *)&aBlock[96];
    v46 = *(_OWORD *)&aBlock[112];
    v47 = *((_QWORD *)&v56 + 1);
    v41 = *(_OWORD *)&aBlock[32];
    v42 = *(_OWORD *)&aBlock[48];
    v43 = *(_OWORD *)&aBlock[64];
    v44 = *(_OWORD *)&aBlock[80];
    v39 = *(_OWORD *)aBlock;
    v40 = *(_OWORD *)&aBlock[16];
    v33 = v25;
    sub_24471E2F0((uint64_t)v36);
    sub_24470130C(&qword_25737DDA8, &qword_25737DDA0, MEMORY[0x24BE76D88]);
    sub_244794560();

    sub_24471EAD8((void **)aBlock);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v29, v31);
  }
  return result;
}

uint64_t sub_2447159C4(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t result;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _QWORD *v34;
  uint64_t v35;
  _OWORD *v36;
  uint64_t v37;
  _QWORD v38[4];
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  objc_super v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _BYTE aBlock[136];

  v36 = a1;
  v1 = a1[5];
  v53 = a1[4];
  v54 = v1;
  v2 = a1[7];
  v55 = a1[6];
  v56 = v2;
  v3 = a1[1];
  v49 = *a1;
  v50 = v3;
  v4 = a1[3];
  v51 = a1[2];
  v52 = v4;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DDC0);
  MEMORY[0x24BDAC7A8](v35);
  v34 = (_QWORD **)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_244793894();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v34 - v11;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))((char *)&v34 - v11, *MEMORY[0x24BE78000], v6);
  v13 = (objc_class *)type metadata accessor for AsyncListenerDelegate();
  v14 = (char *)objc_allocWithZone(v13);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  v15 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = (v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v17 + v15, v10, v6);
  v18 = (_QWORD *)(v17 + v16);
  v19 = v37;
  *v18 = &unk_25737DDD0;
  v18[1] = v19;
  v20 = &v14[OBJC_IVAR____TtC15PreviewShellKit21AsyncListenerDelegate_serviceConnectionHandler];
  *(_QWORD *)v20 = &unk_25737DDD8;
  *((_QWORD *)v20 + 1) = v17;
  v48.receiver = v14;
  v48.super_class = v13;
  swift_retain();
  v21 = objc_msgSendSuper2(&v48, sel_init);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v38[2] = v21;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_24471EAA8;
  *(_QWORD *)(v22 + 24) = v38;
  *(_QWORD *)&aBlock[32] = sub_244720808;
  *(_QWORD *)&aBlock[40] = v22;
  *(_QWORD *)aBlock = MEMORY[0x24BDAC760];
  *(_QWORD *)&aBlock[8] = 1107296256;
  *(_QWORD *)&aBlock[16] = sub_244715DE0;
  *(_QWORD *)&aBlock[24] = &block_descriptor_109;
  v23 = _Block_copy(aBlock);
  v24 = (void *)objc_opt_self();
  swift_retain();
  v25 = objc_msgSend(v24, sel_listenerWithConfigurator_, v23);
  _Block_release(v23);
  swift_release();
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v23 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v25, sel_activate);
    v27 = (_QWORD *)(v19 + *(_QWORD *)(*(_QWORD *)v19 + 96));
    v28 = *(int *)(v35 + 48);
    v29 = (char *)v34 + v28;
    v30 = (char *)v27 + v28;
    *v34 = *v27;
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DDE0);
    v32 = *(_QWORD *)(v31 - 8);
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
    *(_QWORD *)aBlock = v25;
    *(_OWORD *)&aBlock[72] = v53;
    *(_OWORD *)&aBlock[88] = v54;
    *(_OWORD *)&aBlock[104] = v55;
    *(_OWORD *)&aBlock[120] = v56;
    *(_OWORD *)&aBlock[8] = v49;
    *(_OWORD *)&aBlock[24] = v50;
    *(_OWORD *)&aBlock[40] = v51;
    *(_OWORD *)&aBlock[56] = v52;
    v45 = *(_OWORD *)&aBlock[96];
    v46 = *(_OWORD *)&aBlock[112];
    v47 = *((_QWORD *)&v56 + 1);
    v41 = *(_OWORD *)&aBlock[32];
    v42 = *(_OWORD *)&aBlock[48];
    v43 = *(_OWORD *)&aBlock[64];
    v44 = *(_OWORD *)&aBlock[80];
    v39 = *(_OWORD *)aBlock;
    v40 = *(_OWORD *)&aBlock[16];
    v33 = v25;
    sub_24471E2F0((uint64_t)v36);
    sub_24470130C(&qword_25737DDE8, &qword_25737DDE0, MEMORY[0x24BE76D88]);
    sub_244794560();

    sub_24471EAD8((void **)aBlock);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v29, v31);
  }
  return result;
}

uint64_t sub_244715DE0(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

uint64_t sub_244715E1C(uint64_t *a1, uint64_t *a2, unsigned int *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;

  v7 = sub_244793894();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  *(_QWORD *)(v3 + 120) = MEMORY[0x24BEE4B00];
  v19 = 1;
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE6A10], v11);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_244794734();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *a3, v7);
  type metadata accessor for HostServer();
  v15 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v15 + OBJC_IVAR____TtC15PreviewShellKit10HostServer_service, v10, v7);
  v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB48);
  v16 = sub_244794A70();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_QWORD *)(v15 + OBJC_IVAR____TtC15PreviewShellKit10HostServer_activeListener) = v16;
  *(_QWORD *)(v3 + 112) = v15;
  return v3;
}

uint64_t sub_244715FCC@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v42 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v1);
  v46 = (uint64_t)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E630);
  v39 = *(_QWORD *)(v48 - 8);
  v41 = *(_QWORD *)(v39 + 64);
  v3 = MEMORY[0x24BDAC7A8](v48);
  v45 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v43 = (char *)&v35 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE80);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE88);
  v40 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v40 + 64);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v35 - v15;
  v17 = *(int *)(v14 + 48);
  v38 = v14;
  v44 = (char *)&v35 + v17 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC00);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE6A10], v6);
  v37 = v16;
  sub_24479522C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v18 = v43;
  sub_2447253B8(v43);
  v19 = sub_244795220();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v46, 1, 1, v19);
  v20 = v39;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v45, v18, v48);
  v21 = &v13[*(int *)(v10 + 48)];
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB70);
  v36 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v13, v16, v22);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE90);
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v44, v23);
  v25 = v20;
  v26 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v27 = (v41 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (*(unsigned __int8 *)(v40 + 80) + v27 + 8) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v29 = swift_allocObject();
  v30 = v29 + v26;
  *(_QWORD *)(v29 + 16) = 0;
  *(_QWORD *)(v29 + 24) = 0;
  v31 = v48;
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v30, v45, v48);
  *(_QWORD *)(v29 + v27) = v47;
  sub_24470D4C4((uint64_t)v13, v29 + v28, &qword_25737DE88);
  swift_retain();
  sub_244713B34(v46, (uint64_t)&unk_25737DEA0, v29);
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v43, v31);
  v32 = &v13[*(int *)(v38 + 48)];
  v33 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v33(v13, v37, v22);
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v32, v44, v23);
  v33(v42, v13, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v32, v23);
}

uint64_t sub_244716370@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v42 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v1);
  v46 = (uint64_t)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E630);
  v39 = *(_QWORD *)(v48 - 8);
  v41 = *(_QWORD *)(v39 + 64);
  v3 = MEMORY[0x24BDAC7A8](v48);
  v45 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v43 = (char *)&v35 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE10);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE18);
  v40 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v40 + 64);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v35 - v15;
  v17 = *(int *)(v14 + 48);
  v38 = v14;
  v44 = (char *)&v35 + v17 - v15;
  __swift_instantiateConcreteTypeFromMangledName(qword_25737DC10);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE6A10], v6);
  v37 = v16;
  sub_24479522C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v18 = v43;
  sub_2447253B8(v43);
  v19 = sub_244795220();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v46, 1, 1, v19);
  v20 = v39;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v45, v18, v48);
  v21 = &v13[*(int *)(v10 + 48)];
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB78);
  v36 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v13, v16, v22);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE20);
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v44, v23);
  v25 = v20;
  v26 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v27 = (v41 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (*(unsigned __int8 *)(v40 + 80) + v27 + 8) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v29 = swift_allocObject();
  v30 = v29 + v26;
  *(_QWORD *)(v29 + 16) = 0;
  *(_QWORD *)(v29 + 24) = 0;
  v31 = v48;
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v30, v45, v48);
  *(_QWORD *)(v29 + v27) = v47;
  sub_24470D4C4((uint64_t)v13, v29 + v28, &qword_25737DE18);
  swift_retain();
  sub_244713B34(v46, (uint64_t)&unk_25737DE30, v29);
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v43, v31);
  v32 = &v13[*(int *)(v38 + 48)];
  v33 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v33(v13, v37, v22);
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v32, v44, v23);
  v33(v42, v13, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v32, v23);
}

uint64_t sub_244716714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE38);
  v6[6] = v7;
  v6[7] = *(_QWORD *)(v7 - 8);
  v6[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24471677C()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E630);
  sub_244795244();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_244716804;
  return sub_24479528C();
}

uint64_t sub_244716804()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244716858()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 80) = v1;
  if (v1)
  {
    *(_DWORD *)(v0 + 88) = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737DE18) + 48);
    return swift_task_switch();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2447168E0()
{
  uint64_t v0;

  sub_244716C14(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 40) + *(int *)(v0 + 88));
  return swift_task_switch();
}

uint64_t sub_244716928()
{
  uint64_t v0;
  _QWORD *v1;

  swift_release();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_244716804;
  return sub_24479528C();
}

uint64_t sub_244716994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE38);
  v6[6] = v7;
  v6[7] = *(_QWORD *)(v7 - 8);
  v6[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2447169FC()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E630);
  sub_244795244();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_244716A84;
  return sub_24479528C();
}

uint64_t sub_244716A84()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244716AD8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 80) = v1;
  if (v1)
  {
    *(_DWORD *)(v0 + 88) = *(_DWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737DE88) + 48);
    return swift_task_switch();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_244716B60()
{
  uint64_t v0;

  sub_244716F6C(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 40) + *(int *)(v0 + 88));
  return swift_task_switch();
}

uint64_t sub_244716BA8()
{
  uint64_t v0;
  _QWORD *v1;

  swift_release();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_244716A84;
  return sub_24479528C();
}

uint64_t sub_244716C14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;

  v3 = v2;
  v37 = a2;
  v41 = a1;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE20);
  v42 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v39 = (char *)v4;
  v43 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2447943D4();
  v9 = *(_QWORD **)(v8 - 8);
  v10 = v9[8];
  v11 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - v13;
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v3 + 120) + 16))
  {
    v45 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE58);
    sub_24479474C();
  }
  sub_2447943C8();
  v15 = (void (*)(char *, char *, uint64_t))v9[2];
  v36 = v14;
  v15(v12, v14, v8);
  swift_beginAccess();
  v16 = v41;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v44 = *(_QWORD *)(v3 + 120);
  *(_QWORD *)(v3 + 120) = 0x8000000000000000;
  v35 = v9;
  sub_24478CB90(v16, (uint64_t)v12, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v3 + 120) = v44;
  swift_bridgeObjectRelease();
  v38 = (void (*)(char *, uint64_t))v9[1];
  v38(v12, v8);
  swift_endAccess();
  v18 = sub_244795220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 1, 1, v18);
  v19 = v8;
  v33 = v8;
  v34 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v42;
  v21 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v43, v37, v40);
  v15(v12, v14, v19);
  v22 = sub_24470130C(&qword_25737DE40, &qword_25737DB10, (uint64_t)&protocol conformance descriptor for AggregatingHostServer<A>);
  v23 = (*(unsigned __int8 *)(v20 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v24 = (uint64_t)&v39[v23 + 7];
  v39 = v7;
  v25 = v21;
  v26 = v16;
  v27 = v24 & 0xFFFFFFFFFFFFFFF8;
  v28 = v35;
  v29 = (*((unsigned __int8 *)v35 + 80) + (v24 & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*((unsigned __int8 *)v35
                                                                                                 + 80);
  v30 = (char *)swift_allocObject();
  *((_QWORD *)v30 + 2) = v3;
  *((_QWORD *)v30 + 3) = v22;
  *((_QWORD *)v30 + 4) = v26;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v30[v23], v43, v25);
  *(_QWORD *)&v30[v27] = v3;
  v31 = v33;
  ((void (*)(char *, char *, uint64_t))v28[4])(&v30[v29], v34, v33);
  swift_retain_n();
  swift_retain();
  sub_244713B34((uint64_t)v39, (uint64_t)&unk_25737DE50, (uint64_t)v30);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v38)(v36, v31);
}

uint64_t sub_244716F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;

  v3 = v2;
  v37 = a2;
  v41 = a1;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE90);
  v42 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v39 = (char *)v4;
  v43 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2447943D4();
  v9 = *(_QWORD **)(v8 - 8);
  v10 = v9[8];
  v11 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - v13;
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v3 + 120) + 16))
  {
    v45 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737DEC0);
    sub_24479474C();
  }
  sub_2447943C8();
  v15 = (void (*)(char *, char *, uint64_t))v9[2];
  v36 = v14;
  v15(v12, v14, v8);
  swift_beginAccess();
  v16 = v41;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v44 = *(_QWORD *)(v3 + 120);
  *(_QWORD *)(v3 + 120) = 0x8000000000000000;
  v35 = v9;
  sub_24478CB90(v16, (uint64_t)v12, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v3 + 120) = v44;
  swift_bridgeObjectRelease();
  v38 = (void (*)(char *, uint64_t))v9[1];
  v38(v12, v8);
  swift_endAccess();
  v18 = sub_244795220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 1, 1, v18);
  v19 = v8;
  v33 = v8;
  v34 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v42;
  v21 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v43, v37, v40);
  v15(v12, v14, v19);
  v22 = sub_24470130C(&qword_25737DEA8, &qword_25737DB08, (uint64_t)&protocol conformance descriptor for AggregatingHostServer<A>);
  v23 = (*(unsigned __int8 *)(v20 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v24 = (uint64_t)&v39[v23 + 7];
  v39 = v7;
  v25 = v21;
  v26 = v16;
  v27 = v24 & 0xFFFFFFFFFFFFFFF8;
  v28 = v35;
  v29 = (*((unsigned __int8 *)v35 + 80) + (v24 & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*((unsigned __int8 *)v35
                                                                                                 + 80);
  v30 = (char *)swift_allocObject();
  *((_QWORD *)v30 + 2) = v3;
  *((_QWORD *)v30 + 3) = v22;
  *((_QWORD *)v30 + 4) = v26;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v30[v23], v43, v25);
  *(_QWORD *)&v30[v27] = v3;
  v31 = v33;
  ((void (*)(char *, char *, uint64_t))v28[4])(&v30[v29], v34, v33);
  swift_retain_n();
  swift_retain();
  sub_244713B34((uint64_t)v39, (uint64_t)&unk_25737DEB8, (uint64_t)v30);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v38)(v36, v31);
}

uint64_t sub_2447172C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DC10);
  v7[9] = v8;
  v7[10] = *(_QWORD *)(v8 - 8);
  v7[11] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE60);
  v7[12] = v9;
  v7[13] = *(_QWORD *)(v9 - 8);
  v7[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE68);
  v7[15] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB78);
  v7[16] = v10;
  v7[17] = *(_QWORD *)(v10 - 8);
  v7[18] = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE70);
  v7[19] = v11;
  v7[20] = *(_QWORD *)(v11 - 8);
  v7[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2447173D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[17];
  v1 = v0[18];
  v3 = v0[16];
  sub_244793948();
  sub_24470665C(&qword_25737DE78, (uint64_t (*)(uint64_t))MEMORY[0x24BE781A0], MEMORY[0x24BE78198]);
  sub_2447938E8();
  sub_244795244();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[22] = sub_24470130C(&qword_25737DE40, &qword_25737DB10, (uint64_t)&protocol conformance descriptor for AggregatingHostServer<A>);
  v4 = (_QWORD *)swift_task_alloc();
  v0[23] = v4;
  *v4 = v0;
  v4[1] = sub_2447174DC;
  return sub_24479528C();
}

uint64_t sub_2447174DC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244717534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 48))(v1, 1, *(_QWORD *)(v0 + 72)) == 1)
  {
    v3 = *(_QWORD *)(v0 + 56);
    v2 = *(_QWORD *)(v0 + 64);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
    swift_beginAccess();
    sub_244789A84(v2);
    swift_endAccess();
    swift_release();
    if (!*(_QWORD *)(*(_QWORD *)(v3 + 120) + 16))
    {
      *(_BYTE *)(v0 + 192) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE58);
      sub_24479474C();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 96);
    sub_24470D4C4(v1, *(_QWORD *)(v0 + 88), qword_25737DC10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE20);
    sub_244795238();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v8;
    *v8 = v0;
    v8[1] = sub_2447174DC;
    return sub_24479528C();
  }
}

uint64_t sub_2447176F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC00);
  v7[9] = v8;
  v7[10] = *(_QWORD *)(v8 - 8);
  v7[11] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DEC8);
  v7[12] = v9;
  v7[13] = *(_QWORD *)(v9 - 8);
  v7[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DED0);
  v7[15] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB70);
  v7[16] = v10;
  v7[17] = *(_QWORD *)(v10 - 8);
  v7[18] = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DED8);
  v7[19] = v11;
  v7[20] = *(_QWORD *)(v11 - 8);
  v7[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24471780C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[17];
  v1 = v0[18];
  v3 = v0[16];
  sub_2447938AC();
  sub_24470665C(&qword_25737E2D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE78090], MEMORY[0x24BE78088]);
  sub_2447938E8();
  sub_244795244();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[22] = sub_24470130C(&qword_25737DEA8, &qword_25737DB08, (uint64_t)&protocol conformance descriptor for AggregatingHostServer<A>);
  v4 = (_QWORD *)swift_task_alloc();
  v0[23] = v4;
  *v4 = v0;
  v4[1] = sub_244717910;
  return sub_24479528C();
}

uint64_t sub_244717910()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244717968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 80) + 48))(v1, 1, *(_QWORD *)(v0 + 72)) == 1)
  {
    v3 = *(_QWORD *)(v0 + 56);
    v2 = *(_QWORD *)(v0 + 64);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
    swift_beginAccess();
    sub_244789A84(v2);
    swift_endAccess();
    swift_release();
    if (!*(_QWORD *)(*(_QWORD *)(v3 + 120) + 16))
    {
      *(_BYTE *)(v0 + 192) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737DEC0);
      sub_24479474C();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 96);
    sub_24470D4C4(v1, *(_QWORD *)(v0 + 88), &qword_25737DC00);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE90);
    sub_244795238();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v8;
    *v8 = v0;
    v8[1] = sub_244717910;
    return sub_24479528C();
  }
}

uint64_t sub_244717B2C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _WORD v33[8];

  v27 = sub_244793894();
  v29 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DCA8);
  v32 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v32 + 64);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 + *(int *)(v7 + 48) - v8;
  v10 = (uint64_t *)((char *)&v25 - v8);
  v31 = (uint64_t)&v25 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DF20);
  v26 = v9;
  v11 = sub_2447952B0();
  *v10 = v11;
  v12 = (char *)v6 + *(int *)(v3 + 48);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DCC8);
  v14 = *(_QWORD *)(v13 - 8);
  v25 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v25(v12, v9, v13);
  v30 = v0;
  v15 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  *v15 = v11;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))((char *)v15 + *(int *)(v3 + 48), v12, v13);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC70);
  strcpy((char *)v33, "listener for ");
  v33[7] = -4864;
  v16 = *MEMORY[0x24BE78058];
  v17 = sub_244793888();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v2, v16, v17);
  v18 = v29;
  v19 = v27;
  (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v2, *MEMORY[0x24BE77FF0], v27);
  sub_24470665C((unint64_t *)&qword_25737DC80, (uint64_t (*)(uint64_t))MEMORY[0x24BE78068], MEMORY[0x24BE78078]);
  swift_retain_n();
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v2, v19);
  v20 = (char *)v6 + *(int *)(v3 + 48);
  *v6 = v11;
  v25(v20, v26, v13);
  v21 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v22 = swift_allocObject();
  sub_24470D4C4((uint64_t)v6, v22 + v21, &qword_25737DCA8);
  v23 = sub_244794434();
  sub_244701444(v31, &qword_25737DCA8);
  result = v30;
  *(_QWORD *)(v30 + *(_QWORD *)(*(_QWORD *)v30 + 104)) = v23;
  return result;
}

uint64_t sub_244717E60()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _WORD v30[8];

  v24 = sub_244793894();
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v1 = (char *)&v22 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC40);
  v28 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v28 + 64);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v22 + *(int *)(v6 + 48) - v7;
  v9 = (uint64_t *)((char *)&v22 - v7);
  v27 = (uint64_t)&v22 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DEE0);
  v23 = v8;
  v10 = sub_2447952B0();
  *v9 = v10;
  v11 = (char *)v5 + *(int *)(v2 + 48);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC60);
  v13 = *(_QWORD *)(v12 - 8);
  v22 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v22(v11, v8, v12);
  v14 = (uint64_t *)(v29 + *(_QWORD *)(*(_QWORD *)v29 + 96));
  *v14 = v10;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v14 + *(int *)(v2 + 48), v11, v12);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC70);
  strcpy((char *)v30, "listener for ");
  v30[7] = -4864;
  v15 = v26;
  v16 = v24;
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v1, *MEMORY[0x24BE77FF8], v24);
  sub_24470665C((unint64_t *)&qword_25737DC80, (uint64_t (*)(uint64_t))MEMORY[0x24BE78068], MEMORY[0x24BE78078]);
  swift_retain_n();
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v1, v16);
  v17 = (char *)v5 + *(int *)(v2 + 48);
  *v5 = v10;
  v22(v17, v23, v12);
  v18 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v19 = swift_allocObject();
  sub_24470D4C4((uint64_t)v5, v19 + v18, &qword_25737DC40);
  v20 = sub_244794434();
  sub_244701444(v27, &qword_25737DC40);
  result = v29;
  *(_QWORD *)(v29 + *(_QWORD *)(*(_QWORD *)v29 + 104)) = v20;
  return result;
}

uint64_t sub_24471816C()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _WORD v30[8];

  v24 = sub_244793894();
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v1 = (char *)&v22 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DCE8);
  v28 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v28 + 64);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v22 + *(int *)(v6 + 48) - v7;
  v9 = (uint64_t *)((char *)&v22 - v7);
  v27 = (uint64_t)&v22 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DF48);
  v23 = v8;
  v10 = sub_2447952B0();
  *v9 = v10;
  v11 = (char *)v5 + *(int *)(v2 + 48);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DD08);
  v13 = *(_QWORD *)(v12 - 8);
  v22 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v22(v11, v8, v12);
  v14 = (uint64_t *)(v29 + *(_QWORD *)(*(_QWORD *)v29 + 96));
  *v14 = v10;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v14 + *(int *)(v2 + 48), v11, v12);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DD20);
  strcpy((char *)v30, "listener for ");
  v30[7] = -4864;
  v15 = v26;
  v16 = v24;
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v1, *MEMORY[0x24BE78010], v24);
  sub_24470665C((unint64_t *)&qword_25737DC80, (uint64_t (*)(uint64_t))MEMORY[0x24BE78068], MEMORY[0x24BE78078]);
  swift_retain_n();
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v1, v16);
  v17 = (char *)v5 + *(int *)(v2 + 48);
  *v5 = v10;
  v22(v17, v23, v12);
  v18 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v19 = swift_allocObject();
  sub_24470D4C4((uint64_t)v5, v19 + v18, &qword_25737DCE8);
  v20 = sub_244794434();
  sub_244701444(v27, &qword_25737DCE8);
  result = v29;
  *(_QWORD *)(v29 + *(_QWORD *)(*(_QWORD *)v29 + 104)) = v20;
  return result;
}

uint64_t sub_244718478()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _WORD v30[8];

  v24 = sub_244793894();
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v1 = (char *)&v22 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DD40);
  v28 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v28 + 64);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v22 + *(int *)(v6 + 48) - v7;
  v9 = (uint64_t *)((char *)&v22 - v7);
  v27 = (uint64_t)&v22 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DF68);
  v23 = v8;
  v10 = sub_2447952B0();
  *v9 = v10;
  v11 = (char *)v5 + *(int *)(v2 + 48);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DD60);
  v13 = *(_QWORD *)(v12 - 8);
  v22 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v22(v11, v8, v12);
  v14 = (uint64_t *)(v29 + *(_QWORD *)(*(_QWORD *)v29 + 96));
  *v14 = v10;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v14 + *(int *)(v2 + 48), v11, v12);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC70);
  strcpy((char *)v30, "listener for ");
  v30[7] = -4864;
  v15 = v26;
  v16 = v24;
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v1, *MEMORY[0x24BE78008], v24);
  sub_24470665C((unint64_t *)&qword_25737DC80, (uint64_t (*)(uint64_t))MEMORY[0x24BE78068], MEMORY[0x24BE78078]);
  swift_retain_n();
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v1, v16);
  v17 = (char *)v5 + *(int *)(v2 + 48);
  *v5 = v10;
  v22(v17, v23, v12);
  v18 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v19 = swift_allocObject();
  sub_24470D4C4((uint64_t)v5, v19 + v18, &qword_25737DD40);
  v20 = sub_244794434();
  sub_244701444(v27, &qword_25737DD40);
  result = v29;
  *(_QWORD *)(v29 + *(_QWORD *)(*(_QWORD *)v29 + 104)) = v20;
  return result;
}

uint64_t sub_244718784()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _WORD v30[8];

  v24 = sub_244793894();
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v1 = (char *)&v22 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DD80);
  v28 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v28 + 64);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v22 + *(int *)(v6 + 48) - v7;
  v9 = (uint64_t *)((char *)&v22 - v7);
  v27 = (uint64_t)&v22 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DF88);
  v23 = v8;
  v10 = sub_2447952B0();
  *v9 = v10;
  v11 = (char *)v5 + *(int *)(v2 + 48);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DDA0);
  v13 = *(_QWORD *)(v12 - 8);
  v22 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v22(v11, v8, v12);
  v14 = (uint64_t *)(v29 + *(_QWORD *)(*(_QWORD *)v29 + 96));
  *v14 = v10;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v14 + *(int *)(v2 + 48), v11, v12);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC70);
  strcpy((char *)v30, "listener for ");
  v30[7] = -4864;
  v15 = v26;
  v16 = v24;
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v1, *MEMORY[0x24BE77FD8], v24);
  sub_24470665C((unint64_t *)&qword_25737DC80, (uint64_t (*)(uint64_t))MEMORY[0x24BE78068], MEMORY[0x24BE78078]);
  swift_retain_n();
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v1, v16);
  v17 = (char *)v5 + *(int *)(v2 + 48);
  *v5 = v10;
  v22(v17, v23, v12);
  v18 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v19 = swift_allocObject();
  sub_24470D4C4((uint64_t)v5, v19 + v18, &qword_25737DD80);
  v20 = sub_244794434();
  sub_244701444(v27, &qword_25737DD80);
  result = v29;
  *(_QWORD *)(v29 + *(_QWORD *)(*(_QWORD *)v29 + 104)) = v20;
  return result;
}

uint64_t sub_244718A90()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _WORD v30[8];

  v24 = sub_244793894();
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v1 = (char *)&v22 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DDC0);
  v28 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v28 + 64);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v22 + *(int *)(v6 + 48) - v7;
  v9 = (uint64_t *)((char *)&v22 - v7);
  v27 = (uint64_t)&v22 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DFA8);
  v23 = v8;
  v10 = sub_2447952B0();
  *v9 = v10;
  v11 = (char *)v5 + *(int *)(v2 + 48);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DDE0);
  v13 = *(_QWORD *)(v12 - 8);
  v22 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v22(v11, v8, v12);
  v14 = (uint64_t *)(v29 + *(_QWORD *)(*(_QWORD *)v29 + 96));
  *v14 = v10;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v14 + *(int *)(v2 + 48), v11, v12);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DDF0);
  strcpy((char *)v30, "listener for ");
  v30[7] = -4864;
  v15 = v26;
  v16 = v24;
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v1, *MEMORY[0x24BE78000], v24);
  sub_24470665C((unint64_t *)&qword_25737DC80, (uint64_t (*)(uint64_t))MEMORY[0x24BE78068], MEMORY[0x24BE78078]);
  swift_retain_n();
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v1, v16);
  v17 = (char *)v5 + *(int *)(v2 + 48);
  *v5 = v10;
  v22(v17, v23, v12);
  v18 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v19 = swift_allocObject();
  sub_24470D4C4((uint64_t)v5, v19 + v18, &qword_25737DDC0);
  v20 = sub_244794434();
  sub_244701444(v27, &qword_25737DDC0);
  result = v29;
  *(_QWORD *)(v29 + *(_QWORD *)(*(_QWORD *)v29 + 104)) = v20;
  return result;
}

uint64_t sub_244718D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[54] = a3;
  v4[55] = a4;
  v4[56] = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DDC0);
  v4[57] = swift_task_alloc();
  v4[52] = a1;
  v4[53] = a2;
  return swift_task_switch();
}

uint64_t sub_244718E08()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD **)(v0 + 456);
  v2 = *(uint64_t **)(v0 + 440);
  v3 = *(int *)(*(_QWORD *)(v0 + 448) + 48);
  *(_DWORD *)(v0 + 520) = v3;
  v4 = (char *)v1 + v3;
  v5 = (char *)v2 + v3;
  v6 = *v2;
  *(_QWORD *)(v0 + 464) = *v2;
  *v1 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DDE0);
  *(_QWORD *)(v0 + 472) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v0 + 480) = v8;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v4, v5, v7);
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 488) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DFA8);
  *v9 = v0;
  v9[1] = sub_244718ED4;
  return sub_2447952EC();
}

uint64_t sub_244718ED4()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244718F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _QWORD *v13;
  char *v15;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 480);
  v3 = *(_QWORD *)(v0 + 456) + *(int *)(v0 + 520);
  v4 = *(_OWORD *)(v0 + 232);
  v5 = *(_OWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 280);
  v6 = *(_OWORD *)(v0 + 168);
  v7 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 64) = v7;
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 96) = v4;
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 32) = v6;
  v8 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 112) = v5;
  *(_OWORD *)(v0 + 128) = v8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  *(_QWORD *)(v0 + 496) = objc_msgSend(*(id *)(v0 + 16), sel_endpoint);
  v9 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v0 + 368) = v9;
  v10 = *(_OWORD *)(v0 + 136);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v0 + 400) = v10;
  v11 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v0 + 304) = v11;
  v12 = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v0 + 336) = v12;
  sub_24471E2F0(v0 + 24);
  v15 = (char *)&dword_25737E8B0 + dword_25737E8B0;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 504) = v13;
  *v13 = v0;
  v13[1] = sub_24471904C;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t))v15)(v0 + 416, *(_QWORD *)(v0 + 432), v0 + 288);
}

uint64_t sub_24471904C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 512) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v3 = *(void **)(v2 + 496);
    sub_24471F9BC(v2 + 24);

  }
  else
  {

    sub_24471F9BC(v2 + 24);
  }
  return swift_task_switch();
}

uint64_t sub_2447190D0()
{
  uint64_t v0;

  sub_24471EAD8((void **)(v0 + 16));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244719110()
{
  uint64_t v0;

  sub_24471EAD8((void **)(v0 + 16));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244719150(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[6] = a1;
  v2[7] = a2;
  v3 = sub_244794608();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v4 = sub_244793894();
  v2[11] = v4;
  v2[12] = *(_QWORD *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v5 = sub_244794AAC();
  v2[14] = v5;
  v2[15] = *(_QWORD *)(v5 - 8);
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244719224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unsigned int v4;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = (void *)sub_244793918();
  v4 = objc_msgSend(v3, sel_pid);

  *(_DWORD *)(v0 + 160) = v4;
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 104));
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC70);
  sub_24470130C(&qword_25737DC78, &qword_25737DC70, MEMORY[0x24BE763A8]);
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_2447192DC()
{
  uint64_t v0;

  sub_24479441C();
  *(_QWORD *)(v0 + 152) = 0;
  return swift_task_switch();
}

uint64_t sub_244719340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = sub_244795220();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v5 = *(_DWORD *)(v0 + 160);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 32) = v3;
  *(_QWORD *)(v6 + 40) = v2;
  *(_DWORD *)(v6 + 48) = v5;
  swift_retain();
  swift_retain();
  sub_244713B34(v1, (uint64_t)&unk_25737DCE0, v6);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24471941C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(void **)(v0 + 152);
  sub_244794A7C();
  v2 = v1;
  v3 = v1;
  v4 = sub_244794AA0();
  v5 = sub_24479537C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 152);
    v29 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 104);
    v30 = *(_QWORD *)(v0 + 112);
    v31 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 96);
    v10 = swift_slowAlloc();
    v27 = (_QWORD *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v32 = v28;
    *(_DWORD *)v10 = 136446466;
    v11 = *MEMORY[0x24BE78058];
    v12 = sub_244793888();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v7, v11, v12);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v7, *MEMORY[0x24BE77FF0], v8);
    sub_24470665C((unint64_t *)&qword_25737DC80, (uint64_t (*)(uint64_t))MEMORY[0x24BE78068], MEMORY[0x24BE78078]);
    v13 = sub_2447955B0();
    v15 = v14;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    *(_QWORD *)(v0 + 32) = sub_24470600C(v13, v15, &v32);
    sub_244795448();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2114;
    v16 = v6;
    v17 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 40) = v17;
    sub_244795448();
    *v27 = v17;

    _os_log_impl(&dword_2446FC000, v4, v5, "listener for %{public}s rejecting connection: %{public}@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v27, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v28, -1, -1);
    MEMORY[0x2495188D8](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
  }
  else
  {
    v18 = *(void **)(v0 + 152);
    v20 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 128);
    v21 = *(_QWORD *)(v0 + 112);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  v22 = *(void **)(v0 + 152);
  v24 = *(_QWORD *)(v0 + 72);
  v23 = *(_QWORD *)(v0 + 80);
  v25 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 48);
  sub_2447945FC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
  sub_24470130C(&qword_25737D378, &qword_25737D370, MEMORY[0x24BE78128]);
  sub_24479459C();

  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2447197A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[6] = a1;
  v2[7] = a2;
  v3 = sub_244794608();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v4 = sub_244793894();
  v2[11] = v4;
  v2[12] = *(_QWORD *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v5 = sub_244794AAC();
  v2[14] = v5;
  v2[15] = *(_QWORD *)(v5 - 8);
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244719878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unsigned int v4;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = (void *)sub_244793918();
  v4 = objc_msgSend(v3, sel_pid);

  *(_DWORD *)(v0 + 160) = v4;
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 104));
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC70);
  sub_24470130C(&qword_25737DC78, &qword_25737DC70, MEMORY[0x24BE763A8]);
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_244719930()
{
  uint64_t v0;

  sub_24479441C();
  *(_QWORD *)(v0 + 152) = 0;
  return swift_task_switch();
}

uint64_t sub_244719994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = sub_244795220();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v5 = *(_DWORD *)(v0 + 160);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 32) = v3;
  *(_QWORD *)(v6 + 40) = v2;
  *(_DWORD *)(v6 + 48) = v5;
  swift_retain();
  swift_retain();
  sub_244713B34(v1, (uint64_t)&unk_25737DC90, v6);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244719A70()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(void **)(v0 + 152);
  sub_244794A7C();
  v2 = v1;
  v3 = v1;
  v4 = sub_244794AA0();
  v5 = sub_24479537C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 152);
    v27 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 112);
    v29 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 96);
    v10 = swift_slowAlloc();
    v25 = (_QWORD *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v30 = v26;
    *(_DWORD *)v10 = 136446466;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v7, *MEMORY[0x24BE77FF8], v8);
    sub_24470665C((unint64_t *)&qword_25737DC80, (uint64_t (*)(uint64_t))MEMORY[0x24BE78068], MEMORY[0x24BE78078]);
    v11 = sub_2447955B0();
    v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    *(_QWORD *)(v0 + 32) = sub_24470600C(v11, v13, &v30);
    sub_244795448();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2114;
    v14 = v6;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 40) = v15;
    sub_244795448();
    *v25 = v15;

    _os_log_impl(&dword_2446FC000, v4, v5, "listener for %{public}s rejecting connection: %{public}@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v25, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v26, -1, -1);
    MEMORY[0x2495188D8](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  }
  else
  {
    v16 = *(void **)(v0 + 152);
    v18 = *(_QWORD *)(v0 + 120);
    v17 = *(_QWORD *)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 112);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  v20 = *(void **)(v0 + 152);
  v22 = *(_QWORD *)(v0 + 72);
  v21 = *(_QWORD *)(v0 + 80);
  v23 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 48);
  sub_2447945FC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
  sub_24470130C(&qword_25737D378, &qword_25737D370, MEMORY[0x24BE78128]);
  sub_24479459C();

  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244719DCC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[9] = a1;
  v2[10] = a2;
  v3 = sub_244794608();
  v2[11] = v3;
  v2[12] = *(_QWORD *)(v3 - 8);
  v2[13] = swift_task_alloc();
  v4 = sub_244793894();
  v2[14] = v4;
  v2[15] = *(_QWORD *)(v4 - 8);
  v2[16] = swift_task_alloc();
  v5 = sub_244794AAC();
  v2[17] = v5;
  v2[18] = *(_QWORD *)(v5 - 8);
  v2[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  v2[20] = swift_task_alloc();
  sub_244794494();
  v2[21] = swift_task_alloc();
  v6 = sub_2447943BC();
  v2[22] = v6;
  v2[23] = *(_QWORD *)(v6 - 8);
  v2[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244719EE8()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (void *)sub_244793918();
  v2 = objc_msgSend(v1, sel_pid);

  sub_24479390C();
  sub_24470665C(&qword_25737DD18, (uint64_t (*)(uint64_t))MEMORY[0x24BE78588], MEMORY[0x24BE78570]);
  sub_24479483C();
  *(_QWORD *)(v0 + 200) = 0;
  v4 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v8 = sub_2447943B0();
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  *(_DWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v8;
  *(_QWORD *)(v0 + 32) = v10;
  *(_QWORD *)(v0 + 208) = *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 104));
  *(_QWORD *)(v0 + 64) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DD20);
  sub_24470130C(&qword_25737DD28, &qword_25737DD20, MEMORY[0x24BE763A8]);
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_24471A370()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 200);
  sub_24479441C();
  *(_QWORD *)(v0 + 216) = v1;
  return swift_task_switch();
}

uint64_t sub_24471A3D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = sub_244795220();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v5 = *(_DWORD *)(v0 + 16);
  v7 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 40) = v2;
  *(_DWORD *)(v8 + 48) = v5;
  *(_QWORD *)(v8 + 56) = v7;
  *(_QWORD *)(v8 + 64) = v6;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_244713B34(v1, (uint64_t)&unk_25737DD38, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24471A4E4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 216);
  sub_244794A7C();
  v2 = v1;
  v3 = v1;
  v4 = sub_244794AA0();
  v5 = sub_24479537C();
  if (os_log_type_enabled(v4, v5))
  {
    v24 = *(_QWORD *)(v0 + 144);
    v6 = *(_QWORD *)(v0 + 128);
    v25 = *(_QWORD *)(v0 + 136);
    v26 = *(_QWORD *)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 112);
    v8 = *(_QWORD *)(v0 + 120);
    v9 = swift_slowAlloc();
    v22 = (_QWORD *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v27 = v23;
    *(_DWORD *)v9 = 136446466;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v6, *MEMORY[0x24BE78010], v7);
    sub_24470665C((unint64_t *)&qword_25737DC80, (uint64_t (*)(uint64_t))MEMORY[0x24BE78068], MEMORY[0x24BE78078]);
    v10 = sub_2447955B0();
    v12 = v11;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    *(_QWORD *)(v0 + 48) = sub_24470600C(v10, v12, &v27);
    sub_244795448();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2114;
    v13 = v1;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 56) = v14;
    sub_244795448();
    *v22 = v14;

    _os_log_impl(&dword_2446FC000, v4, v5, "listener for %{public}s rejecting connection: %{public}@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v22, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v23, -1, -1);
    MEMORY[0x2495188D8](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 144);
    v15 = *(_QWORD *)(v0 + 152);
    v17 = *(_QWORD *)(v0 + 136);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  v19 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 104);
  v20 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 72);
  sub_2447945FC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
  sub_24470130C(&qword_25737D378, &qword_25737D370, MEMORY[0x24BE78128]);
  sub_24479459C();

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24471A858(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[6] = a1;
  v2[7] = a2;
  v3 = sub_244794608();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v4 = sub_244793894();
  v2[11] = v4;
  v2[12] = *(_QWORD *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v5 = sub_244794AAC();
  v2[14] = v5;
  v2[15] = *(_QWORD *)(v5 - 8);
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24471A92C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unsigned int v4;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = (void *)sub_244793918();
  v4 = objc_msgSend(v3, sel_pid);

  *(_DWORD *)(v0 + 160) = v4;
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 104));
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC70);
  sub_24470130C(&qword_25737DC78, &qword_25737DC70, MEMORY[0x24BE763A8]);
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_24471A9E4()
{
  uint64_t v0;

  sub_24479441C();
  *(_QWORD *)(v0 + 152) = 0;
  return swift_task_switch();
}

uint64_t sub_24471AA48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = sub_244795220();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v5 = *(_DWORD *)(v0 + 160);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 32) = v3;
  *(_QWORD *)(v6 + 40) = v2;
  *(_DWORD *)(v6 + 48) = v5;
  swift_retain();
  swift_retain();
  sub_244713B34(v1, (uint64_t)&unk_25737DD78, v6);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24471AB24()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(void **)(v0 + 152);
  sub_244794A7C();
  v2 = v1;
  v3 = v1;
  v4 = sub_244794AA0();
  v5 = sub_24479537C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 152);
    v27 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 112);
    v29 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 96);
    v10 = swift_slowAlloc();
    v25 = (_QWORD *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v30 = v26;
    *(_DWORD *)v10 = 136446466;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v7, *MEMORY[0x24BE78008], v8);
    sub_24470665C((unint64_t *)&qword_25737DC80, (uint64_t (*)(uint64_t))MEMORY[0x24BE78068], MEMORY[0x24BE78078]);
    v11 = sub_2447955B0();
    v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    *(_QWORD *)(v0 + 32) = sub_24470600C(v11, v13, &v30);
    sub_244795448();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2114;
    v14 = v6;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 40) = v15;
    sub_244795448();
    *v25 = v15;

    _os_log_impl(&dword_2446FC000, v4, v5, "listener for %{public}s rejecting connection: %{public}@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v25, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v26, -1, -1);
    MEMORY[0x2495188D8](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  }
  else
  {
    v16 = *(void **)(v0 + 152);
    v18 = *(_QWORD *)(v0 + 120);
    v17 = *(_QWORD *)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 112);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  v20 = *(void **)(v0 + 152);
  v22 = *(_QWORD *)(v0 + 72);
  v21 = *(_QWORD *)(v0 + 80);
  v23 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 48);
  sub_2447945FC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
  sub_24470130C(&qword_25737D378, &qword_25737D370, MEMORY[0x24BE78128]);
  sub_24479459C();

  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24471AE80(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[6] = a1;
  v2[7] = a2;
  v3 = sub_244794608();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v4 = sub_244793894();
  v2[11] = v4;
  v2[12] = *(_QWORD *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v5 = sub_244794AAC();
  v2[14] = v5;
  v2[15] = *(_QWORD *)(v5 - 8);
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24471AF54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unsigned int v4;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = (void *)sub_244793918();
  v4 = objc_msgSend(v3, sel_pid);

  *(_DWORD *)(v0 + 160) = v4;
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 104));
  *(_QWORD *)(v0 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC70);
  sub_24470130C(&qword_25737DC78, &qword_25737DC70, MEMORY[0x24BE763A8]);
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_24471B00C()
{
  uint64_t v0;

  sub_24479441C();
  *(_QWORD *)(v0 + 152) = 0;
  return swift_task_switch();
}

uint64_t sub_24471B070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = sub_244795220();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v5 = *(_DWORD *)(v0 + 160);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 32) = v3;
  *(_QWORD *)(v6 + 40) = v2;
  *(_DWORD *)(v6 + 48) = v5;
  swift_retain();
  swift_retain();
  sub_244713B34(v1, (uint64_t)&unk_25737DDB8, v6);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24471B14C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(void **)(v0 + 152);
  sub_244794A7C();
  v2 = v1;
  v3 = v1;
  v4 = sub_244794AA0();
  v5 = sub_24479537C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 152);
    v27 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 112);
    v29 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 96);
    v10 = swift_slowAlloc();
    v25 = (_QWORD *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v30 = v26;
    *(_DWORD *)v10 = 136446466;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 104))(v7, *MEMORY[0x24BE77FD8], v8);
    sub_24470665C((unint64_t *)&qword_25737DC80, (uint64_t (*)(uint64_t))MEMORY[0x24BE78068], MEMORY[0x24BE78078]);
    v11 = sub_2447955B0();
    v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    *(_QWORD *)(v0 + 32) = sub_24470600C(v11, v13, &v30);
    sub_244795448();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2114;
    v14 = v6;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 40) = v15;
    sub_244795448();
    *v25 = v15;

    _os_log_impl(&dword_2446FC000, v4, v5, "listener for %{public}s rejecting connection: %{public}@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v25, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v26, -1, -1);
    MEMORY[0x2495188D8](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  }
  else
  {
    v16 = *(void **)(v0 + 152);
    v18 = *(_QWORD *)(v0 + 120);
    v17 = *(_QWORD *)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 112);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  v20 = *(void **)(v0 + 152);
  v22 = *(_QWORD *)(v0 + 72);
  v21 = *(_QWORD *)(v0 + 80);
  v23 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 48);
  sub_2447945FC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
  sub_24470130C(&qword_25737D378, &qword_25737D370, MEMORY[0x24BE78128]);
  sub_24479459C();

  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24471B4A8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[15] = a1;
  v2[16] = a2;
  v3 = sub_244794608();
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v4 = sub_244793894();
  v2[20] = v4;
  v2[21] = *(_QWORD *)(v4 - 8);
  v2[22] = swift_task_alloc();
  v5 = sub_244794AAC();
  v2[23] = v5;
  v2[24] = *(_QWORD *)(v5 - 8);
  v2[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  v2[26] = swift_task_alloc();
  v6 = sub_244794494();
  v2[27] = v6;
  v2[28] = *(_QWORD *)(v6 - 8);
  v2[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24471B5A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_24479390C();
  v0[2] = 0xD00000000000001DLL;
  v1 = MEMORY[0x24BE76CB0];
  v0[5] = MEMORY[0x24BEE0D00];
  v0[6] = v1;
  v0[3] = 0x800000024479D8A0;
  sub_24479447C();
  v0[30] = 0;
  v2 = v0[15];
  v3 = v0[16];
  (*(void (**)(_QWORD, _QWORD))(v0[28] + 8))(v0[29], v0[27]);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  v4 = v0[10];
  v0[7] = v0[9];
  v0[8] = v4;
  v0[31] = *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 104));
  v0[14] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DDF0);
  sub_24470130C(&qword_25737DDF8, &qword_25737DDF0, MEMORY[0x24BE763A8]);
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_24471BA28()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);
  sub_24479441C();
  *(_QWORD *)(v0 + 256) = v1;
  return swift_task_switch();
}

uint64_t sub_24471BA88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = sub_244795220();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v3;
  v7[5] = v2;
  v7[6] = v6;
  v7[7] = v5;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_244713B34(v1, (uint64_t)&unk_25737DE08, (uint64_t)v7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24471BB80()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 256);
  sub_244794A7C();
  v2 = v1;
  v3 = v1;
  v4 = sub_244794AA0();
  v5 = sub_24479537C();
  if (os_log_type_enabled(v4, v5))
  {
    v24 = *(_QWORD *)(v0 + 192);
    v6 = *(_QWORD *)(v0 + 176);
    v25 = *(_QWORD *)(v0 + 184);
    v26 = *(_QWORD *)(v0 + 200);
    v7 = *(_QWORD *)(v0 + 160);
    v8 = *(_QWORD *)(v0 + 168);
    v9 = swift_slowAlloc();
    v22 = (_QWORD *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v27 = v23;
    *(_DWORD *)v9 = 136446466;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v6, *MEMORY[0x24BE78000], v7);
    sub_24470665C((unint64_t *)&qword_25737DC80, (uint64_t (*)(uint64_t))MEMORY[0x24BE78068], MEMORY[0x24BE78078]);
    v10 = sub_2447955B0();
    v12 = v11;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    *(_QWORD *)(v0 + 96) = sub_24470600C(v10, v12, &v27);
    sub_244795448();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2114;
    v13 = v1;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 104) = v14;
    sub_244795448();
    *v22 = v14;

    _os_log_impl(&dword_2446FC000, v4, v5, "listener for %{public}s rejecting connection: %{public}@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v22, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v23, -1, -1);
    MEMORY[0x2495188D8](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 192);
    v15 = *(_QWORD *)(v0 + 200);
    v17 = *(_QWORD *)(v0 + 184);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  v19 = *(_QWORD *)(v0 + 144);
  v18 = *(_QWORD *)(v0 + 152);
  v20 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v0 + 120);
  sub_2447945FC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
  sub_24470130C(&qword_25737D378, &qword_25737D370, MEMORY[0x24BE78128]);
  sub_24479459C();

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_24471BEE8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  void *v12;
  id v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t);
  void *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void (*v23)(char *, uint64_t);
  unsigned int v24;
  void (*v25)(char *, uint64_t, uint64_t);
  id v26;
  char *v27;
  uint64_t v28;

  v28 = a2;
  v26 = a1;
  v2 = sub_244793894();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v27 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23 - v6;
  v8 = *MEMORY[0x24BE78058];
  v9 = sub_244793888();
  v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104);
  v25(v7, v8, v9);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v24 = *MEMORY[0x24BE77FF0];
  v10 = v24;
  v11(v7, v24, v2);
  sub_24479384C();
  v23 = *(void (**)(char *, uint64_t))(v3 + 8);
  v23(v7, v2);
  v12 = (void *)sub_24479504C();
  swift_bridgeObjectRelease();
  v13 = v26;
  objc_msgSend(v26, sel_setDomain_, v12);

  v14 = v25;
  v25(v7, v8, v9);
  v11(v7, v10, v2);
  sub_244793858();
  v15 = v23;
  v23(v7, v2);
  v16 = (void *)sub_24479504C();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setService_, v16);

  v17 = v27;
  v14(v27, v8, v9);
  v11(v17, v24, v2);
  v18 = v17;
  sub_244793864();
  v20 = v19;
  v15(v18, v2);
  if (v20)
  {
    v21 = (void *)sub_24479504C();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setInstance_, v21);

  }
  return objc_msgSend(v13, sel_setDelegate_, v28);
}

id sub_24471C130(void *a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t);
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;

  v6 = sub_244793894();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v22 - v11;
  v13 = *a3;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v14((char *)&v22 - v11, v13, v6);
  sub_24479384C();
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v12, v6);
  v16 = (void *)sub_24479504C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setDomain_, v16);

  v14(v12, v13, v6);
  sub_244793858();
  v15(v12, v6);
  v17 = (void *)sub_24479504C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setService_, v17);

  v14(v10, v13, v6);
  sub_244793864();
  v19 = v18;
  v15(v10, v6);
  if (v19)
  {
    v20 = (void *)sub_24479504C();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_setInstance_, v20);

  }
  return objc_msgSend(a1, sel_setDelegate_, a2);
}

uint64_t sub_24471C304(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(int, uint64_t, uint64_t);

  v3[4] = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DF08);
  v3[5] = v6;
  v3[6] = *(_QWORD *)(v6 - 8);
  v3[7] = swift_task_alloc();
  v8 = *(_QWORD *)(a3 + 32);
  v7 = *(_QWORD *)(a3 + 40);
  v11 = (uint64_t (*)(int, uint64_t, uint64_t))((char *)&dword_25737E780 + dword_25737E780);
  v9 = (_QWORD *)swift_task_alloc();
  v3[8] = v9;
  *v9 = v3;
  v9[1] = sub_24471C3AC;
  return v11(a1, v8, v7);
}

uint64_t sub_24471C3AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);
  _QWORD *v6;

  v3 = (_QWORD *)*v2;
  v3[9] = a1;
  v3[10] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  sub_244793990();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE78208];
  v6 = (_QWORD *)swift_task_alloc();
  v3[11] = v6;
  sub_24470665C((unint64_t *)&qword_25737DF10, v5, MEMORY[0x24BE78200]);
  *v6 = v3;
  v6[1] = sub_24471C498;
  return sub_2447938DC();
}

uint64_t sub_24471C498()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_24471C504()
{
  uint64_t v0;
  _QWORD *v1;

  *(_OWORD *)(v0 + 16) = xmmword_244796B90;
  sub_24471FAB8();
  *(_QWORD *)(v0 + 104) = sub_2447939A8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_25737D180);
  *v1 = v0;
  v1[1] = sub_24471C5B8;
  return sub_2447952C8();
}

uint64_t sub_24471C5B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24471C624(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(int, uint64_t, uint64_t);

  v3[4] = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DF08);
  v3[5] = v6;
  v3[6] = *(_QWORD *)(v6 - 8);
  v3[7] = swift_task_alloc();
  v8 = *(_QWORD *)(a3 + 32);
  v7 = *(_QWORD *)(a3 + 40);
  v11 = (uint64_t (*)(int, uint64_t, uint64_t))((char *)&dword_25737E780 + dword_25737E780);
  v9 = (_QWORD *)swift_task_alloc();
  v3[8] = v9;
  *v9 = v3;
  v9[1] = sub_24471C6CC;
  return v11(a1, v8, v7);
}

uint64_t sub_24471C6CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);
  _QWORD *v6;

  v3 = (_QWORD *)*v2;
  v3[9] = a1;
  v3[10] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  sub_244793990();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE78208];
  v6 = (_QWORD *)swift_task_alloc();
  v3[11] = v6;
  sub_24470665C((unint64_t *)&qword_25737DF10, v5, MEMORY[0x24BE78200]);
  *v6 = v3;
  v6[1] = sub_24471C7B8;
  return sub_2447938DC();
}

uint64_t sub_24471C7B8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_24471C824()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24471C858()
{
  uint64_t v0;
  _QWORD *v1;

  *(_OWORD *)(v0 + 16) = xmmword_244796BA0;
  sub_24471FAB8();
  *(_QWORD *)(v0 + 104) = sub_2447939A8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_25737D180);
  *v1 = v0;
  v1[1] = sub_24471C90C;
  return sub_2447952C8();
}

uint64_t sub_24471C90C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24471C978()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24471C9B4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24471C9FC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24471CA40(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24471CAA4;
  return v6(a1);
}

uint64_t sub_24471CAA4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_24471CAF0(int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_244707DE8;
  return sub_24471F2EC(v5, a3);
}

uint64_t sub_24471CB44(int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_244707DE8;
  return sub_24471F614(v5, a3);
}

uint64_t sub_24471CB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5 = *(_DWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_244707DE8;
  return sub_24471FC3C(v5, v6, v7, a3);
}

uint64_t sub_24471CC00(int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_244707DE8;
  return sub_24471FFA4(v5, a3);
}

uint64_t sub_24471CC54(int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_244707DE8;
  return sub_244720374(v5, a3);
}

uint64_t sub_24471CCA8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *a1;
  v7 = a1[1];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_244706734;
  return sub_244718D9C(v6, v7, a2, a3);
}

uint64_t sub_24471CD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _DWORD *a6)
{
  uint64_t v6;
  _QWORD *v7;

  *(_QWORD *)(v6 + 24) = a5;
  *(_DWORD *)(v6 + 48) = *a6;
  *(_QWORD *)(v6 + 16) = a4;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 32) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
  sub_24470130C(&qword_25737D380, &qword_25737D370, MEMORY[0x24BE78130]);
  *v7 = v6;
  v7[1] = sub_24471CDAC;
  return sub_2447947DC();
}

uint64_t sub_24471CDAC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24471CE00()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + *(_QWORD *)(**(_QWORD **)(v0 + 24) + 104));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC70);
  sub_24470130C(&qword_25737DC78, &qword_25737DC70, MEMORY[0x24BE763A8]);
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_24471CE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  *(_QWORD *)(v6 + 48) = a5;
  v7 = *(_QWORD *)(a6 + 8);
  v8 = *(_QWORD *)(a6 + 16);
  *(_DWORD *)(v6 + 16) = *(_DWORD *)a6;
  *(_QWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 32) = v8;
  *(_QWORD *)(v6 + 40) = a4;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 56) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
  sub_24470130C(&qword_25737D380, &qword_25737D370, MEMORY[0x24BE78130]);
  *v9 = v6;
  v9[1] = sub_24471CF34;
  return sub_2447947DC();
}

uint64_t sub_24471CF34()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24471CF88()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + *(_QWORD *)(**(_QWORD **)(v0 + 48) + 104));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DD20);
  sub_24470130C(&qword_25737DD28, &qword_25737DD20, MEMORY[0x24BE763A8]);
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_24471D018()
{
  uint64_t v0;

  sub_244794410();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24471D04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _DWORD *a6)
{
  uint64_t v6;
  _QWORD *v7;

  *(_QWORD *)(v6 + 24) = a5;
  *(_DWORD *)(v6 + 48) = *a6;
  *(_QWORD *)(v6 + 16) = a4;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 32) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
  sub_24470130C(&qword_25737D380, &qword_25737D370, MEMORY[0x24BE78130]);
  *v7 = v6;
  v7[1] = sub_24471D0E8;
  return sub_2447947DC();
}

uint64_t sub_24471D0E8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24471D13C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + *(_QWORD *)(**(_QWORD **)(v0 + 24) + 104));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC70);
  sub_24470130C(&qword_25737DC78, &qword_25737DC70, MEMORY[0x24BE763A8]);
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_24471D1CC()
{
  uint64_t v0;

  sub_244794410();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24471D200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;

  v6[5] = a5;
  v7 = a6[1];
  v6[2] = *a6;
  v6[3] = v7;
  v6[4] = a4;
  v8 = (_QWORD *)swift_task_alloc();
  v6[6] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
  sub_24470130C(&qword_25737D380, &qword_25737D370, MEMORY[0x24BE78130]);
  *v8 = v6;
  v8[1] = sub_24471D29C;
  return sub_2447947DC();
}

uint64_t sub_24471D29C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24471D2F0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = *(_QWORD *)(*(_QWORD *)(v0 + 40) + *(_QWORD *)(**(_QWORD **)(v0 + 40) + 104));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DDF0);
  sub_24470130C(&qword_25737DDF8, &qword_25737DDF0, MEMORY[0x24BE763A8]);
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_24471D380()
{
  uint64_t v0;

  sub_244794410();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24471D3B4(uint64_t a1, unsigned int *a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_244706734;
  return sub_24474380C(a1, a2);
}

uint64_t type metadata accessor for ServerFarm.HostMessages()
{
  uint64_t result;

  result = qword_25737DBE8;
  if (!qword_25737DBE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24471D454(uint64_t a1)
{
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24471D488(uint64_t a1)
{
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_24471D4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E630);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24471D560(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737E630) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = (uint64_t *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = v9[2];
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_244707DE8;
  return sub_244723350(a1, v6, v7, v8, v10, v11, v12);
}

uint64_t sub_24471D620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E630);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24471D6C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737E630) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = (uint64_t *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_244706734;
  return sub_24473A3B4(a1, v6, v7, v8, v10, v11);
}

uint64_t destroy for ServerFarm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for ServerFarm(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ServerFarm(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  a1[14] = a2[14];
  swift_retain();
  swift_release();
  a1[15] = a2[15];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

_OWORD *assignWithTake for ServerFarm(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_release();
  a1[3] = a2[3];
  swift_release();
  swift_release();
  a1[4] = a2[4];
  swift_release();
  swift_release();
  a1[5] = a2[5];
  swift_release();
  swift_release();
  a1[6] = a2[6];
  swift_release();
  swift_release();
  a1[7] = a2[7];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerFarm(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerFarm(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerFarm()
{
  return &type metadata for ServerFarm;
}

uint64_t *initializeBufferWithCopyOfBuffer for ServerFarm.HostMessages(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB70);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB78);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for ServerFarm.HostMessages(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB78);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for ServerFarm.HostMessages(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ServerFarm.HostMessages(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for ServerFarm.HostMessages(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ServerFarm.HostMessages(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ServerFarm.HostMessages()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24471DFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB70);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB78);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ServerFarm.HostMessages()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24471E03C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB70);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB78);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_24471E0C0()
{
  unint64_t v0;
  unint64_t v1;

  sub_24471E164(319, &qword_25737DBF8, &qword_25737DC00);
  if (v0 <= 0x3F)
  {
    sub_24471E164(319, &qword_25737DC08, qword_25737DC10);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_24471E164(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_244795298();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_24471E1B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_244707DE8;
  return sub_2447197A4(a1, v1);
}

uint64_t sub_24471E204(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = *(_QWORD *)(sub_244793894() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v2 + v7;
  v9 = (uint64_t *)(v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_244707DE8;
  return sub_2447265C0(a1, a2, v8, v10, v11);
}

id sub_24471E2A8(void *a1)
{
  uint64_t v1;

  return sub_24471C130(a1, *(_QWORD *)(v1 + 16), MEMORY[0x24BE77FF8]);
}

uint64_t sub_24471E2C8()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_24471E2F0(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24471E3F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_244707DE8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *))((char *)&dword_25737DC88
                                                                                        + dword_25737DC88))(a1, v4, v5, v6, v7, (_DWORD *)(v1 + 48));
}

uint64_t sub_24471E484()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24471E4A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_244707DE8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25737DC98 + dword_25737DC98))(a1, v4);
}

uint64_t sub_24471E518(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_244707DE8;
  return sub_244719150(a1, v1);
}

id sub_24471E56C(void *a1)
{
  uint64_t v1;

  return sub_24471BEE8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_24471E574()
{
  return swift_deallocObject();
}

uint64_t sub_24471E588(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_244707DE8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *))((char *)&dword_25737DCD8
                                                                                        + dword_25737DCD8))(a1, v4, v5, v6, v7, (_DWORD *)(v1 + 48));
}

uint64_t sub_24471E61C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_244707DE8;
  return sub_244719DCC(a1, v1);
}

id sub_24471E670(void *a1)
{
  uint64_t v1;

  return sub_24471C130(a1, *(_QWORD *)(v1 + 16), MEMORY[0x24BE78010]);
}

uint64_t sub_24471E690()
{
  return swift_deallocObject();
}

uint64_t sub_24471E6A0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24471E6DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_244707DE8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_25737DD30
                                                                                       + dword_25737DD30))(a1, v4, v5, v6, v7, (uint64_t)(v1 + 6));
}

uint64_t sub_24471E770(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_244707DE8;
  return sub_24471A858(a1, v1);
}

id sub_24471E7C4(void *a1)
{
  uint64_t v1;

  return sub_24471C130(a1, *(_QWORD *)(v1 + 16), MEMORY[0x24BE78008]);
}

uint64_t sub_24471E7E4()
{
  return swift_deallocObject();
}

uint64_t sub_24471E7F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_244707DE8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *))((char *)&dword_25737DD70
                                                                                        + dword_25737DD70))(a1, v4, v5, v6, v7, (_DWORD *)(v1 + 48));
}

uint64_t sub_24471E88C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_244707DE8;
  return sub_24471AE80(a1, v1);
}

id sub_24471E8E0(void *a1)
{
  uint64_t v1;

  return sub_24471C130(a1, *(_QWORD *)(v1 + 16), MEMORY[0x24BE77FD8]);
}

uint64_t sub_24471E900()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_16Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24471E948(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_244707DE8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *))((char *)&dword_25737DDB0
                                                                                        + dword_25737DDB0))(a1, v4, v5, v6, v7, (_DWORD *)(v1 + 48));
}

uint64_t sub_24471E9DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_244707DE8;
  return sub_24471B4A8(a1, v1);
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_244793894();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

id sub_24471EAA8(void *a1)
{
  uint64_t v1;

  return sub_24471C130(a1, *(_QWORD *)(v1 + 16), MEMORY[0x24BE78000]);
}

uint64_t sub_24471EAC8()
{
  return swift_deallocObject();
}

void **sub_24471EAD8(void **a1)
{
  void *v3;

  v3 = *a1;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return a1;
}

uint64_t sub_24471EBE4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24471EC20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_244707DE8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *))((char *)&dword_25737DE00
                                                                                        + dword_25737DE00))(a1, v4, v5, v6, v7, v1 + 6);
}

uint64_t sub_24471ECB4()
{
  return objectdestroy_116Tm(&qword_25737DE18, &qword_25737DB78, &qword_25737DE20);
}

uint64_t sub_24471ECD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737E630) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737DE18) - 8) + 80);
  v8 = v6 + v7 + 8;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = *(_QWORD *)(v1 + v6);
  v13 = v1 + (v8 & ~v7);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_244707DE8;
  return sub_244716714(a1, v9, v10, v11, v12, v13);
}

uint64_t sub_24471EDA0()
{
  return objectdestroy_121Tm(&qword_25737DE20);
}

uint64_t sub_24471EDAC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737DE20) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_2447943D4() - 8) + 80);
  v8 = v6 + v7 + 8;
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v5;
  v13 = *(_QWORD *)((char *)v1 + v6);
  v14 = (uint64_t)v1 + (v8 & ~v7);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_244707DE8;
  return sub_2447172C4(a1, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_24471EE88()
{
  return objectdestroy_116Tm(&qword_25737DE88, &qword_25737DB70, &qword_25737DE90);
}

uint64_t objectdestroy_116Tm(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E630);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
  v12 = (v9 + v11 + 8) & ~v11;
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v3 + v8, v6);
  swift_release();
  v13 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v3 + v12, v13);
  v14 = v3 + v12 + *(int *)(v10 + 48);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  return swift_deallocObject();
}

uint64_t sub_24471EFC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737E630) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737DE88) - 8) + 80);
  v8 = v6 + v7 + 8;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = *(_QWORD *)(v1 + v6);
  v13 = v1 + (v8 & ~v7);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_244707DE8;
  return sub_244716994(a1, v9, v10, v11, v12, v13);
}

uint64_t sub_24471F090()
{
  return objectdestroy_121Tm(&qword_25737DE90);
}

uint64_t objectdestroy_121Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = sub_2447943D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v5 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v1 + v8, v6);
  return swift_deallocObject();
}

uint64_t sub_24471F170(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737DE90) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_2447943D4() - 8) + 80);
  v8 = v6 + v7 + 8;
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[4];
  v12 = (uint64_t)v1 + v5;
  v13 = *(_QWORD *)((char *)v1 + v6);
  v14 = (uint64_t)v1 + (v8 & ~v7);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_244707DE8;
  return sub_2447176F8(a1, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_24471F24C()
{
  return objectdestroy_136Tm(&qword_25737DC40, &qword_25737DC60);
}

uint64_t sub_24471F260(int *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737DC40) - 8) + 80);
  v7 = v2 + ((v6 + 16) & ~v6);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_244707DE8;
  return ((uint64_t (*)(int *, uint64_t, uint64_t))((char *)&dword_25737DEE8 + dword_25737DEE8))(a1, a2, v7);
}

uint64_t sub_24471F2EC(int a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 416) = a2;
  *(_DWORD *)(v2 + 496) = a1;
  *(_QWORD *)(v2 + 424) = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DCA8);
  *(_QWORD *)(v2 + 432) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24471F350()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD **)(v0 + 432);
  v2 = *(uint64_t **)(v0 + 416);
  v3 = *(int *)(*(_QWORD *)(v0 + 424) + 48);
  *(_DWORD *)(v0 + 500) = v3;
  v4 = (char *)v1 + v3;
  v5 = (char *)v2 + v3;
  v6 = *v2;
  *(_QWORD *)(v0 + 440) = *v2;
  *v1 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DCC8);
  *(_QWORD *)(v0 + 448) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v0 + 456) = v8;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v4, v5, v7);
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 464) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DF20);
  *v9 = v0;
  v9[1] = sub_24471F41C;
  return sub_2447952EC();
}

uint64_t sub_24471F41C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24471F47C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _QWORD *v14;
  char *v16;

  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 432) + *(int *)(v0 + 500);
  v4 = *(_OWORD *)(v0 + 232);
  v5 = *(_OWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 280);
  v6 = *(_OWORD *)(v0 + 168);
  v7 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 64) = v7;
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 96) = v4;
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 32) = v6;
  v8 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 112) = v5;
  *(_OWORD *)(v0 + 128) = v8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  v9 = objc_msgSend(*(id *)(v0 + 16), sel_endpoint);
  *(_QWORD *)(v0 + 472) = v9;
  v10 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v0 + 368) = v10;
  v11 = *(_OWORD *)(v0 + 136);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v0 + 400) = v11;
  v12 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v0 + 304) = v12;
  v13 = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v0 + 336) = v13;
  sub_24471E2F0(v0 + 24);
  v16 = (char *)&dword_25737DF40 + dword_25737DF40;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 480) = v14;
  *v14 = v0;
  v14[1] = sub_24471F598;
  return ((uint64_t (*)(_QWORD, id, uint64_t))v16)(*(unsigned int *)(v0 + 496), v9, v0 + 288);
}

uint64_t sub_24471F598()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v2 = *(void **)(*(_QWORD *)v1 + 472);
  v3 = *(_QWORD *)v1 + 24;
  *(_QWORD *)(*(_QWORD *)v1 + 488) = v0;
  swift_task_dealloc();

  sub_24471F9BC(v3);
  return swift_task_switch();
}

uint64_t sub_24471F614(int a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 416) = a2;
  *(_DWORD *)(v2 + 496) = a1;
  *(_QWORD *)(v2 + 424) = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC40);
  *(_QWORD *)(v2 + 432) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24471F678()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD **)(v0 + 432);
  v2 = *(uint64_t **)(v0 + 416);
  v3 = *(int *)(*(_QWORD *)(v0 + 424) + 48);
  *(_DWORD *)(v0 + 500) = v3;
  v4 = (char *)v1 + v3;
  v5 = (char *)v2 + v3;
  v6 = *v2;
  *(_QWORD *)(v0 + 440) = *v2;
  *v1 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC60);
  *(_QWORD *)(v0 + 448) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v0 + 456) = v8;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v4, v5, v7);
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 464) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DEE0);
  *v9 = v0;
  v9[1] = sub_24471F744;
  return sub_2447952EC();
}

uint64_t sub_24471F744()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24471F7A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _QWORD *v14;
  char *v16;

  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 432) + *(int *)(v0 + 500);
  v4 = *(_OWORD *)(v0 + 232);
  v5 = *(_OWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 280);
  v6 = *(_OWORD *)(v0 + 168);
  v7 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 64) = v7;
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 96) = v4;
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 32) = v6;
  v8 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 112) = v5;
  *(_OWORD *)(v0 + 128) = v8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  v9 = objc_msgSend(*(id *)(v0 + 16), sel_endpoint);
  *(_QWORD *)(v0 + 472) = v9;
  v10 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v0 + 368) = v10;
  v11 = *(_OWORD *)(v0 + 136);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v0 + 400) = v11;
  v12 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v0 + 304) = v12;
  v13 = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v0 + 336) = v13;
  sub_24471E2F0(v0 + 24);
  v16 = (char *)&dword_25737DF00 + dword_25737DF00;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 480) = v14;
  *v14 = v0;
  v14[1] = sub_24471F8C0;
  return ((uint64_t (*)(_QWORD, id, uint64_t))v16)(*(unsigned int *)(v0 + 496), v9, v0 + 288);
}

uint64_t sub_24471F8C0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v2 = *(void **)(*(_QWORD *)v1 + 472);
  v3 = *(_QWORD *)v1 + 24;
  *(_QWORD *)(*(_QWORD *)v1 + 488) = v0;
  swift_task_dealloc();

  sub_24471F9BC(v3);
  return swift_task_switch();
}

uint64_t sub_24471F93C()
{
  uint64_t v0;

  sub_24471EAD8((void **)(v0 + 16));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24471F97C()
{
  uint64_t v0;

  sub_24471EAD8((void **)(v0 + 16));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24471F9BC(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_24471FAB8()
{
  unint64_t result;

  result = qword_25737DF18;
  if (!qword_25737DF18)
  {
    result = MEMORY[0x249518824](MEMORY[0x24BE781E8], MEMORY[0x24BE781F8]);
    atomic_store(result, (unint64_t *)&qword_25737DF18);
  }
  return result;
}

uint64_t sub_24471FAFC()
{
  return objectdestroy_136Tm(&qword_25737DCA8, &qword_25737DCC8);
}

uint64_t sub_24471FB10(int *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737DCA8) - 8) + 80);
  v7 = v2 + ((v6 + 16) & ~v6);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_244707DE8;
  return ((uint64_t (*)(int *, uint64_t, uint64_t))((char *)&dword_25737DF28 + dword_25737DF28))(a1, a2, v7);
}

uint64_t sub_24471FB9C()
{
  return objectdestroy_136Tm(&qword_25737DCE8, &qword_25737DD08);
}

uint64_t sub_24471FBB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737DCE8) - 8) + 80);
  v7 = v2 + ((v6 + 16) & ~v6);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_244707DE8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_25737DF50 + dword_25737DF50))(a1, a2, v7);
}

uint64_t sub_24471FC3C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 440) = a4;
  *(_QWORD *)(v4 + 448) = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DCE8);
  *(_QWORD *)(v4 + 456) = swift_task_alloc();
  *(_DWORD *)(v4 + 416) = a1;
  *(_QWORD *)(v4 + 424) = a2;
  *(_QWORD *)(v4 + 432) = a3;
  return swift_task_switch();
}

uint64_t sub_24471FCB8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD **)(v0 + 456);
  v2 = *(uint64_t **)(v0 + 440);
  v3 = *(int *)(*(_QWORD *)(v0 + 448) + 48);
  *(_DWORD *)(v0 + 520) = v3;
  v4 = (char *)v1 + v3;
  v5 = (char *)v2 + v3;
  v6 = *v2;
  *(_QWORD *)(v0 + 464) = *v2;
  *v1 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DD08);
  *(_QWORD *)(v0 + 472) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v0 + 480) = v8;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v4, v5, v7);
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 488) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DF48);
  *v9 = v0;
  v9[1] = sub_24471FD84;
  return sub_2447952EC();
}

uint64_t sub_24471FD84()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24471FDE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _QWORD *v14;
  uint64_t (*v16)(unsigned int *, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 480);
  v3 = *(_QWORD *)(v0 + 456) + *(int *)(v0 + 520);
  v4 = *(_OWORD *)(v0 + 232);
  v5 = *(_OWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 280);
  v6 = *(_OWORD *)(v0 + 168);
  v7 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 64) = v7;
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 96) = v4;
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 32) = v6;
  v8 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 112) = v5;
  *(_OWORD *)(v0 + 128) = v8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  v9 = objc_msgSend(*(id *)(v0 + 16), sel_endpoint);
  *(_QWORD *)(v0 + 496) = v9;
  v10 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v0 + 368) = v10;
  v11 = *(_OWORD *)(v0 + 136);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v0 + 400) = v11;
  v12 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v0 + 304) = v12;
  v13 = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v0 + 336) = v13;
  sub_24471E2F0(v0 + 24);
  v16 = (uint64_t (*)(unsigned int *, uint64_t, uint64_t))((char *)&dword_25737F498 + dword_25737F498);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 504) = v14;
  *v14 = v0;
  v14[1] = sub_24471904C;
  return v16((unsigned int *)(v0 + 416), (uint64_t)v9, v0 + 288);
}

uint64_t sub_24471FF04()
{
  return objectdestroy_136Tm(&qword_25737DD40, &qword_25737DD60);
}

uint64_t sub_24471FF18(int *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737DD40) - 8) + 80);
  v7 = v2 + ((v6 + 16) & ~v6);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_244707DE8;
  return ((uint64_t (*)(int *, uint64_t, uint64_t))((char *)&dword_25737DF70 + dword_25737DF70))(a1, a2, v7);
}

uint64_t sub_24471FFA4(int a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 416) = a2;
  *(_DWORD *)(v2 + 496) = a1;
  *(_QWORD *)(v2 + 424) = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DD40);
  *(_QWORD *)(v2 + 432) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244720008()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD **)(v0 + 432);
  v2 = *(uint64_t **)(v0 + 416);
  v3 = *(int *)(*(_QWORD *)(v0 + 424) + 48);
  *(_DWORD *)(v0 + 500) = v3;
  v4 = (char *)v1 + v3;
  v5 = (char *)v2 + v3;
  v6 = *v2;
  *(_QWORD *)(v0 + 440) = *v2;
  *v1 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DD60);
  *(_QWORD *)(v0 + 448) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v0 + 456) = v8;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v4, v5, v7);
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 464) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DF68);
  *v9 = v0;
  v9[1] = sub_2447200D4;
  return sub_2447952EC();
}

uint64_t sub_2447200D4()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244720134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _QWORD *v14;
  char *v16;

  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 432) + *(int *)(v0 + 500);
  v4 = *(_OWORD *)(v0 + 232);
  v5 = *(_OWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 280);
  v6 = *(_OWORD *)(v0 + 168);
  v7 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 64) = v7;
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 96) = v4;
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 32) = v6;
  v8 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 112) = v5;
  *(_OWORD *)(v0 + 128) = v8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  v9 = objc_msgSend(*(id *)(v0 + 16), sel_endpoint);
  *(_QWORD *)(v0 + 472) = v9;
  v10 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v0 + 368) = v10;
  v11 = *(_OWORD *)(v0 + 136);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v0 + 400) = v11;
  v12 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v0 + 304) = v12;
  v13 = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v0 + 336) = v13;
  sub_24471E2F0(v0 + 24);
  v16 = (char *)&dword_25737F478 + dword_25737F478;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 480) = v14;
  *v14 = v0;
  v14[1] = sub_244720250;
  return ((uint64_t (*)(_QWORD, id, uint64_t))v16)(*(unsigned int *)(v0 + 496), v9, v0 + 288);
}

uint64_t sub_244720250()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 488) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v3 = *(void **)(v2 + 472);
    sub_24471F9BC(v2 + 24);

  }
  else
  {

    sub_24471F9BC(v2 + 24);
  }
  return swift_task_switch();
}

uint64_t sub_2447202D4()
{
  return objectdestroy_136Tm(&qword_25737DD80, &qword_25737DDA0);
}

uint64_t sub_2447202E8(int *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737DD80) - 8) + 80);
  v7 = v2 + ((v6 + 16) & ~v6);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_244707DE8;
  return ((uint64_t (*)(int *, uint64_t, uint64_t))((char *)&dword_25737DF90 + dword_25737DF90))(a1, a2, v7);
}

uint64_t sub_244720374(int a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 416) = a2;
  *(_DWORD *)(v2 + 496) = a1;
  *(_QWORD *)(v2 + 424) = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DD80);
  *(_QWORD *)(v2 + 432) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2447203D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD **)(v0 + 432);
  v2 = *(uint64_t **)(v0 + 416);
  v3 = *(int *)(*(_QWORD *)(v0 + 424) + 48);
  *(_DWORD *)(v0 + 500) = v3;
  v4 = (char *)v1 + v3;
  v5 = (char *)v2 + v3;
  v6 = *v2;
  *(_QWORD *)(v0 + 440) = *v2;
  *v1 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DDA0);
  *(_QWORD *)(v0 + 448) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v0 + 456) = v8;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v4, v5, v7);
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 464) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DF88);
  *v9 = v0;
  v9[1] = sub_2447204A4;
  return sub_2447952EC();
}

uint64_t sub_2447204A4()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244720504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _QWORD *v13;
  uint64_t (*v15)(int);

  v1 = *(_QWORD *)(v0 + 448);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 432) + *(int *)(v0 + 500);
  v4 = *(_OWORD *)(v0 + 232);
  v5 = *(_OWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 280);
  v6 = *(_OWORD *)(v0 + 168);
  v7 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 64) = v7;
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 96) = v4;
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 32) = v6;
  v8 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 112) = v5;
  *(_OWORD *)(v0 + 128) = v8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  *(_QWORD *)(v0 + 472) = objc_msgSend(*(id *)(v0 + 16), sel_endpoint);
  v9 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v0 + 368) = v9;
  v10 = *(_OWORD *)(v0 + 136);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v0 + 400) = v10;
  v11 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v0 + 304) = v11;
  v12 = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v0 + 336) = v12;
  sub_24471E2F0(v0 + 24);
  v15 = (uint64_t (*)(int))((char *)&dword_25737E790 + dword_25737E790);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 480) = v13;
  *v13 = v0;
  v13[1] = sub_244720614;
  return v15(*(_DWORD *)(v0 + 496));
}

uint64_t sub_244720614()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 488) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v3 = *(void **)(v2 + 472);
    sub_24471F9BC(v2 + 24);

  }
  else
  {

    sub_24471F9BC(v2 + 24);
  }
  return swift_task_switch();
}

uint64_t sub_244720698()
{
  return objectdestroy_136Tm(&qword_25737DDC0, &qword_25737DDE0);
}

uint64_t objectdestroy_136Tm(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = v2 + ((v5 + 16) & ~v5);
  swift_release();
  v7 = v6 + *(int *)(v4 + 48);
  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_deallocObject();
}

uint64_t sub_244720738(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737DDC0) - 8) + 80);
  v7 = v2 + ((v6 + 16) & ~v6);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_244707DE8;
  return ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))((char *)&dword_25737DFB0 + dword_25737DFB0))(a1, a2, v7);
}

uint64_t Task<>.enhancingPreviewAgentConnectionError(for:_:)(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v8 = sub_244794308();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_244795220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 52) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  *(_QWORD *)(v16 + 32) = a4;
  *(_QWORD *)(v16 + 40) = a3;
  *(_DWORD *)(v16 + 48) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_retain();
  return sub_244720964((uint64_t)v13, (uint64_t)&unk_25737DFF0, v16);
}

uint64_t sub_244720964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_244795220();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_244795214();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_244721040(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2447951D8();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_244720A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  *(_QWORD *)(v6 + 88) = a6;
  *(_DWORD *)(v6 + 68) = a5;
  *(_QWORD *)(v6 + 96) = type metadata accessor for AgentConnectionError();
  *(_QWORD *)(v6 + 104) = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B0);
  *(_QWORD *)(v6 + 112) = v7;
  *(_QWORD *)(v6 + 120) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 128) = swift_task_alloc();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 136) = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_25737D180);
  *v8 = v6;
  v8[1] = sub_244720B68;
  return sub_2447952C8();
}

uint64_t sub_244720B68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 144) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_244720BEC()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244720C48()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;

  v1 = *(void **)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 96);
  sub_2447945E4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v8 = *(void **)(v0 + 56);
  *(_QWORD *)(v0 + 72) = v8;
  v9 = *(_BYTE *)(v0 + 64);
  *(_BYTE *)(v0 + 80) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3C0);
  LOBYTE(v2) = sub_244795688();
  v10 = sub_244794308();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v5, v7, v10);
  *(_BYTE *)(v5 + *(int *)(v6 + 20)) = v2 & 1;
  v11 = v1;
  sub_24470665C(&qword_25737D3C8, (uint64_t (*)(uint64_t))type metadata accessor for AgentConnectionError, (uint64_t)&unk_244796D00);
  sub_24479465C();

  v12 = *(_QWORD *)(v0 + 40);
  v13 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v12);
  v14 = *(_QWORD *)(v12 - 8);
  v15 = swift_task_alloc();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v14 + 16))(v15, v13, v12);
  if (sub_2447955BC())
  {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v12);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v16, v15, v12);
  }
  v17 = *(void **)(v0 + 144);
  v18 = *(_QWORD *)(v0 + 104);
  swift_willThrow();

  sub_244707D38(v8, v9);
  sub_24472125C(v18);
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244720E4C()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  _QWORD *v3;

  v1 = (void *)sub_244793798();
  v2 = objc_msgSend(v1, sel_isBSServiceConnectionError);

  if (v2)
  {
    *(_QWORD *)(v0 + 152) = sub_2447225AC(*(unsigned int *)(v0 + 68), 0x3FF8000000000000, 0);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v3;
    *v3 = v0;
    v3[1] = sub_244720BEC;
    return sub_2447949A4();
  }
  else
  {
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_244720F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244794308();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 52) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_244720F94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_244794308() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_DWORD *)(v1 + 48);
  v9 = v1 + ((v4 + 52) & ~v4);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_244706734;
  return sub_244720A8C(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_244721040(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for AgentConnectionError()
{
  uint64_t result;

  result = qword_25737E050;
  if (!qword_25737E050)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2447210BC()
{
  sub_2447954CC();
  sub_2447950E8();
  sub_244794308();
  sub_24470665C(&qword_25737D0C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE783F0], MEMORY[0x24BE78410]);
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  return 0;
}

unint64_t sub_244721184()
{
  return 0xD000000000000019;
}

unint64_t sub_2447211A0(uint64_t a1)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + *(int *)(a1 + 20)))
    return 0xD00000000000002CLL;
  else
    return 0;
}

uint64_t sub_2447211D4()
{
  return 1;
}

uint64_t sub_2447211DC()
{
  sub_24470665C(&qword_25737D3C8, (uint64_t (*)(uint64_t))type metadata accessor for AgentConnectionError, (uint64_t)&unk_244796D00);
  return sub_244794668();
}

uint64_t sub_24472121C()
{
  sub_24470665C(&qword_25737D3C8, (uint64_t (*)(uint64_t))type metadata accessor for AgentConnectionError, (uint64_t)&unk_244796D00);
  return sub_244794638();
}

uint64_t sub_24472125C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AgentConnectionError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_244721298(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244794308();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_244721320(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244794308();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_244721354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_244794308();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2447213B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_244794308();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_24472140C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_244794308();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_244721468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_244794308();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_2447214C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2447214D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_244794308();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_24472155C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244721568(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_244794308();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_2447215E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244794308();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_244721650()
{
  return sub_24470665C(&qword_25737E088, (uint64_t (*)(uint64_t))type metadata accessor for AgentConnectionError, (uint64_t)&unk_244796C50);
}

uint64_t sub_24472167C()
{
  return sub_24470665C(&qword_25737E090, (uint64_t (*)(uint64_t))type metadata accessor for AgentConnectionError, (uint64_t)&unk_244796CB8);
}

uint64_t sub_2447216A8()
{
  return sub_24470665C(&qword_25737E098, (uint64_t (*)(uint64_t))type metadata accessor for AgentConnectionError, (uint64_t)&unk_244796C90);
}

uint64_t dispatch thunk of PreviewShellSceneConfigurator.configure(sceneSettings:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PreviewShellSceneBinder.bind(scene:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t static ProcessUtilities.observeExit(for:timeout:)(uint64_t a1, uint64_t a2, char a3)
{
  return sub_2447225AC(a1, a2, a3 & 1);
}

id static ProcessUtilities.processHandle(for:)(uint64_t a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = objc_msgSend((id)objc_opt_self(), sel_identifierWithPid_, a1);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = (void *)objc_opt_self();
  v10[0] = 0;
  v4 = v2;
  v5 = objc_msgSend(v3, sel_handleForIdentifier_error_, v4, v10);
  v6 = v10[0];
  if (v5)
  {

  }
  else
  {
    v7 = v6;
    v8 = (void *)sub_2447937A4();

    swift_willThrow();
    v5 = 0;
  }

  return v5;
}

void sub_2447217FC(uint64_t a1, void *a2)
{
  void *v3;
  _QWORD v4[6];

  v4[4] = sub_244722FB4;
  v4[5] = a1;
  v4[0] = MEMORY[0x24BDAC760];
  v4[1] = 1107296256;
  v4[2] = sub_2447218A0;
  v4[3] = &block_descriptor_1;
  v3 = _Block_copy(v4);
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_monitorForDeath_, v3);
  _Block_release(v3);
}

void sub_2447218A0(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(id, id);
  id v6;
  id v7;

  v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(v7, v6);
  swift_release();

}

void static ProcessUtilities.kill(processHandle:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  id v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  os_log_t v33;
  uint8_t *v34;
  void *v35;
  _QWORD v36[2];
  uint8_t *v37;
  os_log_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  id v43;
  uint64_t v44;
  id v45[2];

  v45[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_244794AAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_allocWithZone(MEMORY[0x24BE80D40]);
  v7 = (void *)sub_24479504C();
  v8 = objc_msgSend(v6, sel_initWithExplanation_, v7);

  objc_msgSend(v8, sel_setMaximumTerminationResistance_, 40);
  v9 = objc_msgSend((id)objc_opt_self(), sel_predicateMatchingHandle_, a1);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE80D48]), sel_initWithPredicate_context_, v9, v8);
  v45[0] = 0;
  if (objc_msgSend(v10, sel_execute_, v45))
  {
    v11 = v45[0];

    return;
  }
  v42 = v5;
  v43 = v9;
  v40 = v3;
  v41 = v2;
  v12 = v45[0];
  v13 = (void *)sub_2447937A4();

  swift_willThrow();
  v14 = (void *)sub_244793798();
  v15 = objc_msgSend(v14, sel_domain);
  v16 = sub_244795058();
  v18 = v17;

  sub_244795058();
  v19 = sub_2447950B8();
  v21 = v20;
  swift_bridgeObjectRelease();
  if (v16 == v19 && v18 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v22 = sub_2447955D4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
LABEL_10:
      swift_willThrow();

      return;
    }
  }
  if (objc_msgSend(v14, sel_code) != (id)3)
    goto LABEL_10;
  v23 = v42;
  sub_244794A94();
  v24 = v14;
  v25 = sub_244794AA0();
  v26 = sub_244795394();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v39 = (void *)swift_slowAlloc();
    v45[0] = v39;
    v37 = v27;
    v38 = v25;
    *(_DWORD *)v27 = 136315138;
    v36[1] = v27 + 4;
    v28 = v24;
    v29 = objc_msgSend(v28, sel_description);
    v30 = sub_244795058();
    v32 = v31;

    v44 = sub_24470600C(v30, v32, (uint64_t *)v45);
    sub_244795448();

    swift_bridgeObjectRelease();
    v34 = v37;
    v33 = v38;
    _os_log_impl(&dword_2446FC000, v38, v26, "Ignoring failed RBS kill request %s", v37, 0xCu);
    v35 = v39;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v35, -1, -1);
    MEMORY[0x2495188D8](v34, -1, -1);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v41);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v40 + 8))(v23, v41);
  }
}

void ProcessError.lowValueTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = sub_244793E64();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for ProcessError();
  MEMORY[0x24BDAC7A8](v2);
  sub_244722868(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_244721E28 + 4 * byte_244796DF0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_244721E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v0);
  *(_QWORD *)(v4 - 64) = 0;
  *(_QWORD *)(v4 - 56) = 0xE000000000000000;
  sub_2447954CC();
  v5 = *(_QWORD *)(v4 - 56);
  *(_QWORD *)(v4 - 64) = *(_QWORD *)(v4 - 64);
  *(_QWORD *)(v4 - 56) = v5;
  sub_2447950E8();
  sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  v6 = *(_QWORD *)(v4 - 64);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v0);
  return v6;
}

unint64_t ProcessError.additionalInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int EnumCaseMultiPayload;
  unint64_t result;
  uint64_t v6;

  v1 = type metadata accessor for ProcessError();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244722868(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_2447228AC((uint64_t)v3);
  result = 0;
  if (!EnumCaseMultiPayload)
  {
    if (os_variant_has_internal_diagnostics())
      return 0xD000000000000086;
    else
      return 0;
  }
  return result;
}

uint64_t ProcessError.additionalDiagnostics.getter()
{
  return 0;
}

uint64_t ProcessError.isPotentialCrash.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unsigned int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v7;

  v1 = type metadata accessor for ProcessError();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244722868(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload < 2)
  {
    v5 = 0;
LABEL_5:
    sub_2447228AC((uint64_t)v3);
    return v5;
  }
  v5 = 1;
  if (EnumCaseMultiPayload - 3 >= 2)
    goto LABEL_5;
  return v5;
}

uint64_t sub_244722214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unsigned int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v7;

  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244722868(v1, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload < 2)
  {
    v5 = 0;
LABEL_5:
    sub_2447228AC((uint64_t)v3);
    return v5;
  }
  v5 = 1;
  if (EnumCaseMultiPayload - 3 >= 2)
    goto LABEL_5;
  return v5;
}

uint64_t sub_2447222AC()
{
  sub_24470665C(&qword_25737E160, (uint64_t (*)(uint64_t))type metadata accessor for ProcessError, (uint64_t)&protocol conformance descriptor for ProcessError);
  return sub_244794668();
}

uint64_t sub_2447222EC()
{
  sub_24470665C(&qword_25737E160, (uint64_t (*)(uint64_t))type metadata accessor for ProcessError, (uint64_t)&protocol conformance descriptor for ProcessError);
  return sub_244794638();
}

id RBSProcessHandle.applicationProcess.getter()
{
  void *v0;
  id v1;
  id v2;
  __int128 v4;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  objc_msgSend(v0, sel_auditToken);
  v2 = objc_msgSend(v1, sel_uv_registerProcessForAuditToken_, &v4);

  return v2;
}

uint64_t sub_2447223B0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_2447944AC();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE76550];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2447944A0();
  sub_24470665C(&qword_25737E168, v1, MEMORY[0x24BE76558]);
  v5 = swift_allocError();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v6, v4, v0);
  return v5;
}

void sub_244722474(void *a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  sub_2447945A8();
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v2 = objc_msgSend(a1, sel_identifier);
  v3 = (uint64_t)v2;
  v4 = v2;
  if (!v2)
  {
    sub_244795058();
    v4 = (void *)sub_24479504C();
    swift_bridgeObjectRelease();
    sub_244795058();
    v3 = sub_24479504C();
    swift_bridgeObjectRelease();
  }
  v5 = v2;
  v6 = objc_msgSend(v8, sel_sceneWithIdentifier_, v4);

  if (v6)
  {
    objc_msgSend(v8, sel_destroyScene_withTransitionContext_, v3, 0);
    v7 = (void *)v3;
  }
  else
  {
    v7 = v8;
    v8 = (id)v3;
  }

}

uint64_t sub_2447225AC(uint64_t a1, uint64_t a2, char a3)
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = objc_msgSend((id)objc_opt_self(), sel_identifierWithPid_, a1);
  if (!v4)
    goto LABEL_6;
  v5 = v4;
  v6 = (void *)objc_opt_self();
  v17[0] = 0;
  v7 = v5;
  v8 = objc_msgSend(v6, sel_handleForIdentifier_error_, v7, v17);
  if (!v8)
  {
    v14 = v17[0];
    v15 = (void *)sub_2447937A4();

    swift_willThrow();
LABEL_6:
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
    return sub_2447949D4();
  }
  v9 = v8;
  v10 = v17[0];

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_244794980();
  if ((a3 & 1) != 0)
  {

  }
  else
  {
    sub_244794968();
    v13 = sub_24479498C();

    swift_release();
    swift_release();
    return v13;
  }
  return v12;
}

uint64_t type metadata accessor for ProcessError()
{
  uint64_t result;

  result = qword_25737E128;
  if (!qword_25737E128)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_244722868(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ProcessError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2447228AC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ProcessError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2447228E8()
{
  return sub_24470665C(&qword_25737E0A0, (uint64_t (*)(uint64_t))type metadata accessor for ProcessError, (uint64_t)&protocol conformance descriptor for ProcessError);
}

uint64_t sub_244722914()
{
  return sub_24470665C(&qword_25737E0A8, (uint64_t (*)(uint64_t))type metadata accessor for ProcessError, (uint64_t)&protocol conformance descriptor for ProcessError);
}

uint64_t sub_244722940()
{
  return sub_24470665C(&qword_25737E0B0, (uint64_t (*)(uint64_t))type metadata accessor for ProcessError, (uint64_t)&protocol conformance descriptor for ProcessError);
}

ValueMetadata *type metadata accessor for ProcessUtilities()
{
  return &type metadata for ProcessUtilities;
}

uint64_t *initializeBufferWithCopyOfBuffer for ProcessError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() > 2)
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v7 = sub_244793E64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ProcessError(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (result <= 2)
  {
    v3 = sub_244793E64();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for ProcessError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 2)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_244793E64();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for ProcessError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_2447228AC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_244793E64();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for ProcessError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() > 2)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_244793E64();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for ProcessError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_2447228AC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_244793E64();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ProcessError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for ProcessError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_244722F2C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_244722F3C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244793E64();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t dispatch thunk of ProviderUpdateDelegate.notePreviewStopped()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ProviderUpdateDelegate.notePreviewCrashed(pid:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of CanvasUpdateDelegate.perform(handshake:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of CanvasUpdateDelegate.adjust(preferences:fenceHandle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of CanvasUpdateDelegate.notePreviewRequestedKeyStatus()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CanvasUpdateDelegate.notePreviewRequestedZoom()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CanvasUpdateDelegate.notePreviewSuppressed(presentation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t destroy for HostAgentMessageStreamHub()
{
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *_s15PreviewShellKit25HostAgentMessageStreamHubVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for HostAgentMessageStreamHub(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for HostAgentMessageStreamHub(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for HostAgentMessageStreamHub(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HostAgentMessageStreamHub(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HostAgentMessageStreamHub()
{
  return &type metadata for HostAgentMessageStreamHub;
}

uint64_t sub_2447231E0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = sub_244793EA0();
  *a1 = result;
  return result;
}

uint64_t sub_244723208(uint64_t a1, unsigned int *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *a2;
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_25737F5D0 + dword_25737F5D0);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_244723274;
  return v6(v3);
}

uint64_t sub_244723274(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_2447232F0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD **)(v0 + 16);
  v2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
  v2[4] = sub_2447238E4((unint64_t *)&qword_25737E178, MEMORY[0x24BE78120]);
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244723350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[9] = a4;
  v7[10] = a7;
  v8 = sub_244794AAC();
  v7[11] = v8;
  v7[12] = *(_QWORD *)(v8 - 8);
  v7[13] = swift_task_alloc();
  v9 = sub_244794608();
  v7[14] = v9;
  v7[15] = *(_QWORD *)(v9 - 8);
  v7[16] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE38);
  v7[17] = v10;
  v7[18] = *(_QWORD *)(v10 - 8);
  v7[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244723404()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E630);
  sub_244795244();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v1;
  *v1 = v0;
  v1[1] = sub_24472348C;
  return sub_24479528C();
}

uint64_t sub_24472348C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2447234E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 168) = v1;
  if (v1)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
    *(_QWORD *)(v0 + 176) = v2;
    *(_QWORD *)(v0 + 40) = v2;
    *(_QWORD *)(v0 + 48) = sub_2447238E4((unint64_t *)&qword_25737E178, MEMORY[0x24BE78120]);
    *(_QWORD *)(v0 + 16) = v1;
    swift_retain();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v3;
    *v3 = v0;
    v3[1] = sub_2447235CC;
    return sub_244793AF8();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2447235CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 192) = v0;
  swift_task_dealloc();
  if (!v0)
    __swift_destroy_boxed_opaque_existential_1Tm(v2 + 16);
  return swift_task_switch();
}

uint64_t sub_244723638()
{
  uint64_t v0;
  _QWORD *v1;

  swift_release();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v1;
  *v1 = v0;
  v1[1] = sub_24472348C;
  return sub_24479528C();
}

uint64_t sub_2447236A4()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v1 = (void *)v0[24];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  sub_244794A7C();
  v2 = v1;
  v3 = v1;
  v4 = sub_244794AA0();
  v5 = sub_24479537C();
  v6 = os_log_type_enabled(v4, v5);
  v7 = (void *)v0[24];
  if (v6)
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v8 + 4) = v11;
    *v9 = v11;

    _os_log_impl(&dword_2446FC000, v4, v5, "Failed to attach host connection to message pipe: %@", (uint8_t *)v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v9, -1, -1);
    MEMORY[0x2495188D8](v8, -1, -1);
  }
  else
  {

  }
  v12 = (void *)v0[24];
  v13 = v0[21];
  v15 = v0[15];
  v14 = v0[16];
  v16 = v0[13];
  v21 = v0[14];
  v18 = v0[11];
  v17 = v0[12];

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  v0[8] = v13;
  sub_2447945FC();
  sub_2447238E4(&qword_25737D378, MEMORY[0x24BE78128]);
  sub_24479459C();

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v21);
  swift_release();
  v19 = (_QWORD *)swift_task_alloc();
  v0[20] = v19;
  *v19 = v0;
  v19[1] = sub_24472348C;
  return sub_24479528C();
}

uint64_t sub_2447238E4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737D370);
    result = MEMORY[0x249518824](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_244723928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v0 = sub_244793894();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *MEMORY[0x24BE78050];
  v5 = sub_244793888();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v3, v4, v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE77FF0], v0);
  type metadata accessor for HostServer();
  v6 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 16))(v6 + OBJC_IVAR____TtC15PreviewShellKit10HostServer_service, v3, v0);
  v9[1] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB48);
  v7 = sub_244794A70();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC15PreviewShellKit10HostServer_activeListener) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E180);
  swift_allocObject();
  sub_244717B2C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E188);
  swift_retain();
  sub_244793B04();
  return v6;
}

uint64_t sub_244723AC0(uint64_t a1, unsigned int *a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_244706734;
  v5[2] = a1;
  v6 = *a2;
  v9 = (uint64_t (*)(uint64_t))((char *)&dword_25737F5D0 + dword_25737F5D0);
  v7 = (_QWORD *)swift_task_alloc();
  v5[3] = v7;
  *v7 = v5;
  v7[1] = sub_244723274;
  return v9(v6);
}

id StoppedViewController.__allocating_init(style:snapshotImage:)(_BYTE *a1, void *a2)
{
  objc_class *v2;
  id v5;
  id v6;
  id v7;
  char v9;
  uint64_t v10;

  v5 = objc_allocWithZone(v2);
  LOBYTE(a1) = *a1;
  v6 = a2;
  sub_244794F50();
  v7 = sub_244700D74((char)a1, a2, v9, v10);

  swift_release();
  return v7;
}

id StoppedViewController.init(style:snapshotImage:)(char *a1, void *a2)
{
  char v3;
  id v4;
  id v5;
  char v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a2;
  sub_244794F50();
  v5 = sub_244700D74(v3, a2, v7, v8);

  swift_release();
  return v5;
}

void sub_244723C78()
{
  sub_244795550();
  __break(1u);
}

id StoppedViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id StoppedView.body.getter@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v3;
  char v4;
  void *v5;
  char v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v12;
  char v13;

  v3 = sub_244794F8C();
  MEMORY[0x24BDAC7A8](v3);
  v4 = *v1;
  v5 = (void *)*((_QWORD *)v1 + 1);
  v6 = v1[16];
  v7 = *((_QWORD *)v1 + 3);
  v12 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D440);
  sub_244794F5C();
  v8 = objc_msgSend((id)objc_opt_self(), sel_rootSettings);
  sub_244794F80();
  v9 = sub_244794CC8();
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v4;
  *(_QWORD *)(v10 + 24) = v5;
  *(_BYTE *)(v10 + 32) = v6;
  *(_QWORD *)(v10 + 40) = v7;
  *(_QWORD *)a1 = v8;
  *(_BYTE *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = sub_244724B80;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 48) = v10;
  swift_retain();
  return v12;
}

uint64_t sub_244723E58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  v37 = a1;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D560);
  MEMORY[0x24BDAC7A8](v36);
  v35 = &v30[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF00);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF08);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D538);
  MEMORY[0x24BDAC7A8](v32);
  v10 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E290);
  MEMORY[0x24BDAC7A8](v33);
  v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = *(id *)v1;
  v13 = v34;
  v14 = *(_BYTE *)(v1 + 8);
  v15 = *(_QWORD *)(v1 + 16);
  v16 = *(_BYTE *)(v1 + 24);
  v17 = *(_QWORD *)(v1 + 32);
  v18 = sub_244794EF0();
  v31 = sub_244794E24();
  v38 = v13;
  v39 = v14;
  v40 = v15;
  v41 = v16;
  v42 = v17;
  sub_244724190((uint64_t)v5);
  v19 = sub_244794F98();
  sub_2446FF374(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v8, 0.0, 1, INFINITY, 0, v19, v20);
  sub_244701444((uint64_t)v5, &qword_25737CF00);
  LOBYTE(v17) = sub_244794E18();
  sub_244701400((uint64_t)v8, (uint64_t)v10, &qword_25737CF08);
  v10[*(int *)(v32 + 36)] = v17;
  sub_244701444((uint64_t)v8, &qword_25737CF08);
  v21 = sub_244794F98();
  v23 = v22;
  v24 = v35;
  sub_244701400((uint64_t)v10, (uint64_t)v35, &qword_25737D538);
  v25 = (uint64_t *)&v24[*(int *)(v36 + 36)];
  *v25 = v21;
  v25[1] = v23;
  sub_244701400((uint64_t)v24, (uint64_t)&v12[*(int *)(v33 + 36)], &qword_25737D560);
  *(_QWORD *)v12 = v18;
  v12[8] = v31;
  swift_retain();
  sub_244701444((uint64_t)v24, &qword_25737D560);
  sub_244701444((uint64_t)v10, &qword_25737D538);
  swift_release();
  objc_msgSend(v34, sel_crashAnimationDuration);
  v26 = sub_244794FA4();
  v27 = v37;
  sub_244701400((uint64_t)v12, v37, &qword_25737E290);
  v28 = v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737E298) + 36);
  *(_QWORD *)v28 = v26;
  *(_BYTE *)(v28 + 8) = v16;
  return sub_244701444((uint64_t)v12, &qword_25737E290);
}

uint64_t sub_244724190@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  void *v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  char v30;
  uint64_t v31;
  id v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  __int16 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  char v47;
  char v48;
  _BYTE v49[9];

  v41 = a1;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D570);
  MEMORY[0x24BDAC7A8](v40);
  v3 = (uint64_t *)((char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D578);
  MEMORY[0x24BDAC7A8](v34);
  v33 = (uint64_t *)((char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D580);
  MEMORY[0x24BDAC7A8](v36);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D588);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D590);
  MEMORY[0x24BDAC7A8](v37);
  v35 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D598);
  MEMORY[0x24BDAC7A8](v39);
  v38 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_244794F38();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v1[1];
  v44 = *v1;
  v45 = v16;
  v46 = *((_QWORD *)v1 + 4);
  v17 = (void *)v16;
  if ((_QWORD)v16
    && (v47 = BYTE8(v44),
        sub_24470D4C4((uint64_t)&v47, (uint64_t)&v48, &qword_25737E2A0),
        sub_24470D4C4((uint64_t)&v48, (uint64_t)v49, &qword_25737E2A0),
        v18 = v49[0],
        v49[0] != 3))
  {
    v32 = v17;
    sub_244794F20();
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BDF3FD0], v12);
    v20 = sub_244794F44();
    swift_release();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if (v18)
    {
      v21 = (uint64_t)v38;
      if (v18 == 1)
      {
        v42[0] = v20;
        v42[1] = 0;
        v43 = 1;
        swift_retain();
        v22 = sub_244794F98();
        v23 = (uint64_t)v33;
        *v33 = v22;
        *(_QWORD *)(v23 + 8) = v24;
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D5E8);
        sub_244724804((char *)v42, (uint64_t)&v44, v23 + *(int *)(v25 + 44));
        swift_release();
        sub_244701400(v23, (uint64_t)v9, &qword_25737D578);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_25737CDE8);
        sub_244725358((unint64_t *)&qword_25737CDE0, &qword_25737CDE8, MEMORY[0x24BDF40E8], MEMORY[0x24BDEEC40]);
        sub_24470130C(&qword_25737D5B0, &qword_25737D578, MEMORY[0x24BDF4750]);
        v26 = (uint64_t)v35;
        sub_244794DD0();
        sub_244701400(v26, (uint64_t)v6, &qword_25737D590);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_25737D5C0);
        sub_24470AB94();
        sub_24470AC18();
        sub_244794DD0();
        sub_244701444(v26, &qword_25737D590);
        sub_244701444(v23, &qword_25737D578);
      }
      else
      {
        v28 = 1.0;
        if ((BYTE8(v45) & 1) != 0)
        {
          objc_msgSend((id)v44, sel_crashFadeOutOpacity);
          v28 = v29;
        }
        swift_retain();
        v30 = sub_244794E18();
        *(_QWORD *)v6 = v20;
        *((_QWORD *)v6 + 1) = 0;
        *((_WORD *)v6 + 8) = 1;
        *((double *)v6 + 3) = v28;
        v6[32] = v30;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_25737D5C0);
        sub_24470AB94();
        sub_24470AC18();
        sub_244794DD0();
      }
    }
    else
    {
      *(_QWORD *)v9 = v20;
      *((_QWORD *)v9 + 1) = 0;
      *((_WORD *)v9 + 8) = 1;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737CDE8);
      sub_244725358((unint64_t *)&qword_25737CDE0, &qword_25737CDE8, MEMORY[0x24BDF40E8], MEMORY[0x24BDEEC40]);
      sub_24470130C(&qword_25737D5B0, &qword_25737D578, MEMORY[0x24BDF4750]);
      v27 = (uint64_t)v35;
      sub_244794DD0();
      sub_244701400(v27, (uint64_t)v6, &qword_25737D590);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737D5C0);
      sub_24470AB94();
      sub_24470AC18();
      v21 = (uint64_t)v38;
      sub_244794DD0();
      sub_244701444(v27, &qword_25737D590);
    }
    sub_244701400(v21, (uint64_t)v3, &qword_25737D598);
    swift_storeEnumTagMultiPayload();
    sub_24470AB28();
    sub_244794DD0();

    swift_release();
    return sub_244701444(v21, &qword_25737D598);
  }
  else
  {
    *v3 = sub_244794EE4();
    swift_storeEnumTagMultiPayload();
    sub_24470AB28();
    return sub_244794DD0();
  }
}

uint64_t sub_244724804@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v41[12];
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;

  v43 = sub_244794CD4();
  MEMORY[0x24BDAC7A8](v43);
  v6 = &v41[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D608);
  v52 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v41[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D5F0);
  MEMORY[0x24BDAC7A8](v51);
  v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D5F8);
  v12 = MEMORY[0x24BDAC7A8](v49);
  v50 = &v41[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (uint64_t *)&v41[-v15];
  MEMORY[0x24BDAC7A8](v14);
  v18 = &v41[-v17];
  v19 = *(_QWORD *)a1;
  v48 = *((_QWORD *)a1 + 1);
  v47 = a1[16];
  LODWORD(a1) = a1[17];
  swift_retain();
  v46 = sub_244794EF0();
  v21 = sub_244794F98();
  v44 = v22;
  v45 = v21;
  if ((*(_BYTE *)(a2 + 24) & 1) != 0)
  {
    v24 = *(int *)(v43 + 20);
    v42 = (int)a1;
    a1 = (char *)v6 + v24;
    v43 = a3;
    v25 = v7;
    v26 = *MEMORY[0x24BDEEB68];
    v27 = sub_244794DAC();
    v28 = a1;
    LOBYTE(a1) = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v28, v26, v27);
    __asm { FMOV            V0.2D, #15.0 }
    *v6 = _Q0;
    v34 = *(_QWORD *)(a2 + 32);
    sub_2447251AC((uint64_t)v6, (uint64_t)v9);
    *(_QWORD *)&v9[*(int *)(v25 + 52)] = v34;
    *(_WORD *)&v9[*(int *)(v25 + 56)] = 256;
    v7 = v25;
    a3 = v43;
    swift_retain();
    sub_2447251F0((uint64_t)v6);
    sub_24470D4C4((uint64_t)v9, (uint64_t)v11, &qword_25737D608);
    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v11, v23, 1, v7);
  v35 = (uint64_t *)&v11[*(int *)(v51 + 36)];
  v36 = v44;
  *v35 = v45;
  v35[1] = v36;
  sub_244701400((uint64_t)v11, (uint64_t)v16 + *(int *)(v49 + 36), &qword_25737D5F0);
  *v16 = v46;
  sub_244701444((uint64_t)v11, &qword_25737D5F0);
  sub_24470D4C4((uint64_t)v16, (uint64_t)v18, &qword_25737D5F8);
  v37 = v50;
  sub_244701400((uint64_t)v18, (uint64_t)v50, &qword_25737D5F8);
  v38 = v48;
  *(_QWORD *)a3 = v19;
  *(_QWORD *)(a3 + 8) = v38;
  *(_BYTE *)(a3 + 16) = v47;
  *(_BYTE *)(a3 + 17) = (_BYTE)a1;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D600);
  sub_244701400((uint64_t)v37, a3 + *(int *)(v39 + 48), &qword_25737D5F8);
  swift_retain();
  sub_244701444((uint64_t)v18, &qword_25737D5F8);
  sub_244701444((uint64_t)v37, &qword_25737D5F8);
  return swift_release();
}

uint64_t sub_244724B54()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244724B80()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D440);
  return sub_244794F68();
}

uint64_t sub_244724BD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for StoppedViewController()
{
  uint64_t result;

  result = qword_25737E1C8;
  if (!qword_25737E1C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t method lookup function for StoppedViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StoppedViewController.__allocating_init(style:snapshotImage:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_244724C34()
{
  return type metadata accessor for StoppedViewController();
}

uint64_t destroy for StoppedView(uint64_t a1)
{

  return swift_release();
}

uint64_t initializeWithCopy for StoppedView(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for StoppedView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = v5;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for StoppedView(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for StoppedView(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StoppedView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for StoppedView()
{
  return &type metadata for StoppedView;
}

unint64_t sub_244724E3C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25737E278;
  if (!qword_25737E278)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737E280);
    v2[0] = sub_244724EA8();
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25737E278);
  }
  return result;
}

unint64_t sub_244724EA8()
{
  unint64_t result;

  result = qword_25737E288;
  if (!qword_25737E288)
  {
    result = MEMORY[0x249518824](&unk_2447970E4, &type metadata for InnerStoppedView);
    atomic_store(result, (unint64_t *)&qword_25737E288);
  }
  return result;
}

uint64_t destroy for InnerStoppedView(id *a1)
{

  return swift_release();
}

uint64_t initializeWithCopy for InnerStoppedView(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = v3;
  v6 = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InnerStoppedView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(void **)(a1 + 16);
  v8 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  v9 = v8;

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for InnerStoppedView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for InnerStoppedView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InnerStoppedView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InnerStoppedView()
{
  return &type metadata for InnerStoppedView;
}

uint64_t sub_244725110()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_244725120()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25737D5C8;
  if (!qword_25737D5C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737D5D0);
    v2[0] = sub_244725358((unint64_t *)&qword_25737CDE0, &qword_25737CDE8, MEMORY[0x24BDF40E8], MEMORY[0x24BDEEC40]);
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25737D5C8);
  }
  return result;
}

uint64_t sub_2447251AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244794CD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2447251F0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244794CD4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_244725230()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25737E2A8;
  if (!qword_25737E2A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737E298);
    v2[0] = sub_2447252B4();
    v2[1] = sub_24470130C(&qword_25737D6C8, &qword_25737D6D0, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25737E2A8);
  }
  return result;
}

unint64_t sub_2447252B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25737E2B0;
  if (!qword_25737E2B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737E290);
    v2[0] = sub_244725358(&qword_25737E2B8, (uint64_t *)&unk_25737E2C0, MEMORY[0x24BDF3E20], MEMORY[0x24BDF0420]);
    v2[1] = sub_24470130C(&qword_25737D6C0, &qword_25737D560, MEMORY[0x24BDEF370]);
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25737E2B0);
  }
  return result;
}

uint64_t sub_244725358(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3;
    v9[1] = a4;
    result = MEMORY[0x249518824](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2447253B8@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *);
  uint64_t v23;
  void (*v24)(char *, char *);
  unint64_t v25;
  uint64_t v26;
  objc_class *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  id v40;
  _QWORD *v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t result;
  id v46;
  char *v47;
  char *v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  void (*v62)(char *, uint64_t, uint64_t);
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  id v71;
  id v72;
  uint64_t v73;
  id aBlock[6];
  objc_super v75;

  v61 = a1;
  v64 = sub_244793894();
  v1 = *(_QWORD *)(v64 - 8);
  v66 = *(_QWORD *)(v1 + 64);
  v67 = v1;
  v2 = MEMORY[0x24BDAC7A8](v64);
  v65 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v63 = (char *)&v53 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E618);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E620);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v53 - v15;
  v17 = (char *)&v53 + *(int *)(v14 + 48) - v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE6A10], v5);
  sub_24479522C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v62 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
  v18 = v63;
  v19 = v64;
  v62(v63, v68 + OBJC_IVAR____TtC15PreviewShellKit10HostServer_service, v64);
  v59 = v9;
  v20 = &v13[*(int *)(v9 + 48)];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E630);
  v54 = *(_QWORD *)(v21 - 8);
  v22 = *(void (**)(char *, char *))(v54 + 16);
  v58 = v16;
  v57 = v21;
  v22(v13, v16);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E638);
  v55 = *(_QWORD *)(v23 - 8);
  v24 = *(void (**)(char *, char *))(v55 + 16);
  v53 = v17;
  v56 = v23;
  v24(v20, v17);
  v25 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v26 = swift_allocObject();
  v60 = v13;
  sub_244726B28((uint64_t)v13, v26 + v25);
  v27 = (objc_class *)type metadata accessor for AsyncListenerDelegate();
  v28 = (char *)objc_allocWithZone(v27);
  v29 = v65;
  v30 = v18;
  v31 = v19;
  v62(v65, (uint64_t)v18, v19);
  v32 = v67;
  v33 = (*(unsigned __int8 *)(v67 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
  v34 = (v66 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject();
  v36 = v35 + v33;
  v37 = v68;
  (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v36, v29, v31);
  v38 = (_QWORD *)(v35 + v34);
  *v38 = &unk_25737E640;
  v38[1] = v26;
  v39 = &v28[OBJC_IVAR____TtC15PreviewShellKit21AsyncListenerDelegate_serviceConnectionHandler];
  *(_QWORD *)v39 = &unk_25737DC58;
  *((_QWORD *)v39 + 1) = v35;
  v75.receiver = v28;
  v75.super_class = v27;
  v40 = objc_msgSendSuper2(&v75, sel_init);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v31);
  v70 = v37;
  v71 = v40;
  v41 = (_QWORD *)swift_allocObject();
  v41[2] = sub_244726C58;
  v41[3] = &v69;
  aBlock[4] = sub_244726C70;
  aBlock[5] = v41;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_244715DE0;
  aBlock[3] = &block_descriptor_2;
  v42 = _Block_copy(aBlock);
  v43 = (void *)objc_opt_self();
  swift_retain();
  v44 = objc_msgSend(v43, sel_listenerWithConfigurator_, v42);
  _Block_release(v42);
  swift_release();
  LOBYTE(v42) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v42 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v44, sel_activate);
    v73 = *(_QWORD *)(v37 + OBJC_IVAR____TtC15PreviewShellKit10HostServer_activeListener);
    swift_getKeyPath();
    v72 = v44;
    swift_retain();
    v46 = v44;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737E6B0);
    sub_244726C90();
    sub_244794860();

    swift_release();
    swift_release();

    v47 = v60;
    v48 = &v60[*(int *)(v59 + 48)];
    v49 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
    v50 = v57;
    v49(v60, v58, v57);
    v51 = v55;
    v52 = v56;
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v48, v53, v56);
    v49(v61, v47, v50);
    return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v48, v52);
  }
  return result;
}

uint64_t sub_244725928(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25737E6C0);
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24472598C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E620);
  *(_QWORD *)(v0 + 16) = v4;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E638);
  sub_244795238();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_244725A28(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;

  sub_24479384C();
  v5 = (void *)sub_24479504C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setDomain_, v5);

  sub_244793858();
  v6 = (void *)sub_24479504C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setService_, v6);

  sub_244793864();
  if (v7)
  {
    v8 = (void *)sub_24479504C();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_setInstance_, v8);

  }
  return objc_msgSend(a1, sel_setDelegate_, a3);
}

uint64_t sub_244725B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC15PreviewShellKit10HostServer_service;
  v2 = sub_244793894();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t static DaemonService.shellService.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_244725B8C(MEMORY[0x24BE77FE8], a1);
}

uint64_t sub_244725B74@<X0>(uint64_t a1@<X8>)
{
  return sub_244725BD4(MEMORY[0x24BE77FE8], a1);
}

uint64_t static ServiceHubService.shellService.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_244725B8C(MEMORY[0x24BE77FE0], a1);
}

uint64_t sub_244725B8C@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = sub_244793894();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a2, v3, v4);
}

uint64_t sub_244725BC8@<X0>(uint64_t a1@<X8>)
{
  return sub_244725BD4(MEMORY[0x24BE77FE0], a1);
}

uint64_t sub_244725BD4@<X0>(unsigned int *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = sub_244793894();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a2, v3, v4);
}

BOOL static AggregatingHostServer.ConnectionMonitor.Status.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t AggregatingHostServer.ConnectionMonitor.Status.hash(into:)()
{
  return sub_244795658();
}

uint64_t AggregatingHostServer.ConnectionMonitor.Status.hashValue.getter()
{
  sub_24479564C();
  sub_244795658();
  return sub_24479567C();
}

BOOL sub_244725C88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static AggregatingHostServer.ConnectionMonitor.Status.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_244725C94()
{
  return AggregatingHostServer.ConnectionMonitor.Status.hashValue.getter();
}

uint64_t sub_244725C9C()
{
  return AggregatingHostServer.ConnectionMonitor.Status.hash(into:)();
}

uint64_t sub_244725CA4()
{
  sub_24479564C();
  AggregatingHostServer.ConnectionMonitor.Status.hash(into:)();
  return sub_24479567C();
}

uint64_t AggregatingHostServer.ConnectionMonitor.status.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned __int8 v5;

  type metadata accessor for AggregatingHostServer.ConnectionMonitor.Status(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  sub_244794764();
  sub_244794740();
  return v5;
}

uint64_t type metadata accessor for AggregatingHostServer.ConnectionMonitor.Status(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AggregatingHostServer.ConnectionMonitor.Status);
}

uint64_t sub_244725D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for AggregatingHostServer.ConnectionMonitor.Status(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  sub_244794764();
  return sub_24479474C();
}

uint64_t AggregatingHostServer.ConnectionMonitor.$status.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for AggregatingHostServer.ConnectionMonitor.Status(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  sub_244794764();
  return sub_244794758();
}

uint64_t AggregatingHostServer.connectionMonitor.getter@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = (uint64_t)v2 + *(_QWORD *)(*v2 + 120);
  v6 = type metadata accessor for AggregatingHostServer.ConnectionMonitor(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, v5, v6);
}

uint64_t type metadata accessor for AggregatingHostServer.ConnectionMonitor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AggregatingHostServer.ConnectionMonitor);
}

uint64_t *AggregatingHostServer.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  swift_release();
  swift_bridgeObjectRelease();
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 120);
  v4 = type metadata accessor for AggregatingHostServer.ConnectionMonitor(0, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t AggregatingHostServer.__deallocating_deinit()
{
  AggregatingHostServer.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t AggregatingHostServer.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_244725E8C()
{
  return sub_24470665C(&qword_25737E2D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE78090], MEMORY[0x24BE78088]);
}

uint64_t sub_244725EB8()
{
  return sub_24470665C(&qword_25737DE78, (uint64_t (*)(uint64_t))MEMORY[0x24BE781A0], MEMORY[0x24BE78198]);
}

void sub_244725EE4()
{
  JUMPOUT(0x249518824);
}

uint64_t sub_244725EF4()
{
  return AggregatingHostServer.unownedExecutor.getter();
}

uint64_t sub_244725F0C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _BYTE *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v5 = type metadata accessor for AggregatingHostServer.ConnectionMonitor(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8), a3);
  result = AggregatingHostServer.ConnectionMonitor.status.getter(v5, v6, v7, v8);
  *a4 = result;
  return result;
}

uint64_t sub_244725F44(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v5 = type metadata accessor for AggregatingHostServer.ConnectionMonitor(0, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4);
  return sub_244725D28(v4, v5, v6, v7);
}

uint64_t sub_244725F80()
{
  return 16;
}

__n128 sub_244725F8C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_244725F98()
{
  return type metadata accessor for HostServer();
}

uint64_t type metadata accessor for HostServer()
{
  uint64_t result;

  result = qword_25737E350;
  if (!qword_25737E350)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_244725FDC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244793894();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t dispatch thunk of static OneWayHostService.shellService.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for DaemonService()
{
  return &type metadata for DaemonService;
}

ValueMetadata *type metadata accessor for ServiceHubService()
{
  return &type metadata for ServiceHubService;
}

uint64_t sub_244726080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  type metadata accessor for AggregatingHostServer.ConnectionMonitor.Status(255, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), a4);
  result = sub_244794764();
  if (v5 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for AggregatingHostServer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AggregatingHostServer);
}

uint64_t method lookup function for AggregatingHostServer()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_24472613C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  type metadata accessor for AggregatingHostServer.ConnectionMonitor.Status(255, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  result = sub_244794764();
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2447261B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  type metadata accessor for AggregatingHostServer.ConnectionMonitor.Status(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  v6 = sub_244794764();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1, a2, v6);
}

uint64_t sub_244726200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  type metadata accessor for AggregatingHostServer.ConnectionMonitor.Status(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  v5 = sub_244794764();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
}

uint64_t sub_244726248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  type metadata accessor for AggregatingHostServer.ConnectionMonitor.Status(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  v6 = sub_244794764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  return a1;
}

uint64_t sub_24472629C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  type metadata accessor for AggregatingHostServer.ConnectionMonitor.Status(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  v6 = sub_244794764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  return a1;
}

uint64_t sub_2447262F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  type metadata accessor for AggregatingHostServer.ConnectionMonitor.Status(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  v6 = sub_244794764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  return a1;
}

uint64_t sub_244726344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  type metadata accessor for AggregatingHostServer.ConnectionMonitor.Status(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  v6 = sub_244794764();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  return a1;
}

uint64_t sub_244726398()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2447263A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  type metadata accessor for AggregatingHostServer.ConnectionMonitor.Status(255, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), a4);
  v6 = sub_244794764();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t sub_2447263F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2447263FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  type metadata accessor for AggregatingHostServer.ConnectionMonitor.Status(255, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), a4);
  v6 = sub_244794764();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a2, v6);
}

uint64_t sub_24472644C()
{
  return swift_allocateGenericValueMetadata();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PreviewShellPluginRegistry.PluginLocation(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_2447264F0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24472653C + 4 * byte_244797145[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_244726570 + 4 * byte_244797140[v4]))();
}

uint64_t sub_244726570(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244726578(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244726580);
  return result;
}

uint64_t sub_24472658C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244726594);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_244726598(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2447265A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2447265AC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_2447265B4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

uint64_t sub_2447265C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = sub_244793894();
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 - 8);
  v5[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244726628()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  void *v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);

  v2 = v0[8];
  v1 = v0[9];
  v3 = v0[7];
  v4 = v0[4];
  v5 = (int *)v0[5];
  v6 = (void *)v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  v7 = v6;
  swift_unknownObjectRetain();
  v8 = sub_244793900();
  v0[10] = v8;
  v11 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  v9 = (_QWORD *)swift_task_alloc();
  v0[11] = v9;
  *v9 = v0;
  v9[1] = sub_2447266FC;
  return v11(v8);
}

uint64_t sub_2447266FC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244726750()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244726788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_2447267A4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD, _QWORD);

  v3 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v0[2]
                                                         + OBJC_IVAR____TtC15PreviewShellKit21AsyncListenerDelegate_serviceConnectionHandler)
                                              + *(_QWORD *)(v0[2]
                                                          + OBJC_IVAR____TtC15PreviewShellKit21AsyncListenerDelegate_serviceConnectionHandler));
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = v1;
  *v1 = v0;
  v1[1] = sub_244726810;
  return v3(v0[3], v0[4]);
}

uint64_t sub_244726810()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t type metadata accessor for AsyncListenerDelegate()
{
  return objc_opt_self();
}

uint64_t sub_2447269D8()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_244726A14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_244707DE8;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return swift_task_switch();
}

uint64_t sub_244726A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E620);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E630);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + *(int *)(v1 + 48);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E638);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocObject();
}

uint64_t sub_244726B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_244726B70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737E620) - 8) + 80);
  v5 = v1 + ((v4 + 16) & ~v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_244706734;
  return sub_244725928(a1, v5);
}

uint64_t sub_244726BE0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_244793894();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

id sub_244726C58(void *a1)
{
  uint64_t v1;

  return sub_244725A28(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_244726C60()
{
  return swift_deallocObject();
}

uint64_t sub_244726C70(uint64_t a1)
{
  uint64_t v1;

  return sub_2447031DC(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

unint64_t sub_244726C90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25737E6B8;
  if (!qword_25737E6B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737E6B0);
    result = MEMORY[0x249518824](MEMORY[0x24BE76C78], v1);
    atomic_store(result, (unint64_t *)&qword_25737E6B8);
  }
  return result;
}

unint64_t sub_244726CDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E740);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E748);
  v6 = sub_244795580();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_244701400(v12, (uint64_t)v5, &qword_25737E740);
    result = sub_24470F394((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = type metadata accessor for ContentKey();
    result = sub_2447299F8((uint64_t)v5, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for ContentKey);
    *(_OWORD *)(v7[7] + 16 * v16) = *(_OWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_244726E74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E730);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E738);
  v6 = sub_244795580();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_244701400(v12, (uint64_t)v5, &qword_25737E730);
    v14 = *v5;
    v15 = v5[1];
    result = sub_24470F67C(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = type metadata accessor for JITManager.Storage.Record();
    result = sub_2447299F8(v9, v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for JITManager.Storage.Record);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_244727014(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E720);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E728);
  v6 = sub_244795580();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (char *)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_244701400(v12, (uint64_t)v5, &qword_25737E720);
    v14 = *v5;
    v15 = v5[1];
    result = sub_24470F788(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = sub_244794068();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, v9, v21);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

BOOL static PreviewShellPluginRegistry.PluginLocation.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t PreviewShellPluginRegistry.PluginLocation.hash(into:)()
{
  return sub_244795658();
}

uint64_t PreviewShellPluginRegistry.PluginLocation.hashValue.getter()
{
  sub_24479564C();
  sub_244795658();
  return sub_24479567C();
}

BOOL sub_24472722C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_244727244()
{
  sub_24479564C();
  sub_244795658();
  return sub_24479567C();
}

uint64_t sub_244727288()
{
  return sub_244795658();
}

uint64_t sub_2447272B0()
{
  sub_24479564C();
  sub_244795658();
  return sub_24479567C();
}

uint64_t PreviewShellPluginRegistry.providers.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t PreviewShellPluginRegistry.providers.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  return result;
}

uint64_t (*PreviewShellPluginRegistry.providers.modify())()
{
  return nullsub_1;
}

uint64_t PreviewShellPluginRegistry.launchers.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t PreviewShellPluginRegistry.launchers.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = v2;
  return result;
}

uint64_t (*PreviewShellPluginRegistry.launchers.modify())()
{
  return nullsub_1;
}

uint64_t PreviewShellPluginRegistry.sceneConfigurator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_244701400(v1 + 16, a1, &qword_25737E6D0);
}

uint64_t PreviewShellPluginRegistry.sceneConfigurator.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_244727410(a1, v1 + 16, &qword_25737E6D0);
}

uint64_t (*PreviewShellPluginRegistry.sceneConfigurator.modify())()
{
  return nullsub_1;
}

uint64_t PreviewShellPluginRegistry.sceneBinder.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_244701400(v1 + 56, a1, &qword_25737E6D8);
}

uint64_t PreviewShellPluginRegistry.sceneBinder.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_244727410(a1, v1 + 56, &qword_25737E6D8);
}

uint64_t sub_244727410(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*PreviewShellPluginRegistry.sceneBinder.modify())()
{
  return nullsub_1;
}

uint64_t static PreviewShellPluginRegistry.load<A>(using:location:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  __int128 v41;
  char *v42;
  char *v43;
  unint64_t v44;
  unint64_t *v45;
  uint64_t v47;
  void (*v48)(_OWORD *, _QWORD);
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(__int128 *, _QWORD);
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  NSObject *v70;
  char *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  unint64_t *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  char *v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  void (*v98)(char *, char *, uint64_t);
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  __int128 v102[2];
  _OWORD v103[2];
  uint64_t v104;
  _OWORD v105[2];
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;

  v99 = a3;
  v85 = a4;
  v95 = sub_244794AAC();
  v94 = *(_QWORD *)(v95 - 8);
  v6 = MEMORY[0x24BDAC7A8](v95);
  v88 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v87 = (char *)&v82 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v82 = (char *)&v82 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E6E0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v82 - v16;
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)&v91 = (char *)&v82 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E6E8);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v97 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v82 - v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E6F0);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_244797370;
  *(_QWORD *)&v105[0] = a2;
  swift_getMetatypeMetadata();
  v26 = sub_244795088();
  v27 = v99;
  *(_QWORD *)(v25 + 32) = a1;
  *(_QWORD *)(v25 + 40) = v27;
  *(_QWORD *)(v25 + 48) = v26;
  *(_QWORD *)(v25 + 56) = v28;
  *(_QWORD *)(v25 + 64) = a2;
  v29 = sub_244728E30();
  *(_QWORD *)&v105[0] = v25;
  sub_244728034((uint64_t)v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E6F8);
  sub_2447294B0();
  sub_24470130C(&qword_25737E708, &qword_25737E6F8, MEMORY[0x24BEE12C8]);
  sub_24479471C();
  v108 = sub_244726CDC(MEMORY[0x24BEE4AF8]);
  v107 = MEMORY[0x24BEE4B00];
  v99 = v20;
  v98 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v98(v17, v24, v19);
  v30 = sub_24470130C(&qword_25737E710, &qword_25737E6E8, MEMORY[0x24BE76860]);
  v86 = v24;
  v31 = v91;
  sub_244795328();
  *(_QWORD *)&v17[*(int *)(v11 + 36)] = *(_QWORD *)&v105[0];
  v83 = v17;
  sub_24470D4C4((uint64_t)v17, v31, &qword_25737E6E0);
  v84 = v11;
  v32 = *(int *)(v11 + 36);
  v33 = v82;
  v34 = (uint64_t *)(v31 + v32);
  v35 = *(_QWORD *)(v31 + v32);
  sub_244795340();
  v92 = v14;
  v96 = v30;
  if (v35 != *(_QWORD *)&v105[0])
  {
    *(_QWORD *)&v36 = 136446210;
    v90 = v36;
    v89 = MEMORY[0x24BEE4AD8] + 8;
    v93 = v34;
    do
    {
      v48 = (void (*)(_OWORD *, _QWORD))sub_244795358();
      v50 = *v49;
      v51 = v49[1];
      v53 = v49[2];
      v52 = v49[3];
      swift_bridgeObjectRetain();
      v48(v105, 0);
      v54 = v97;
      v98(v97, (char *)v31, v19);
      sub_24479534C();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v54, v19);
      sub_244794A7C();
      swift_bridgeObjectRetain_n();
      v55 = sub_244794AA0();
      v56 = sub_244795394();
      if (os_log_type_enabled(v55, v56))
      {
        v57 = swift_slowAlloc();
        v58 = v19;
        v59 = v33;
        v60 = swift_slowAlloc();
        *(_QWORD *)&v105[0] = v60;
        *(_DWORD *)v57 = v90;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v57 + 4) = sub_24470600C(v53, v52, (uint64_t *)v105);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2446FC000, v55, v56, "Registering plugin '%{public}s'", (uint8_t *)v57, 0xCu);
        swift_arrayDestroy();
        v61 = v60;
        v33 = v59;
        v19 = v58;
        v31 = v91;
        MEMORY[0x2495188D8](v61, -1, -1);
        MEMORY[0x2495188D8](v57, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v94 + 8))(v33, v95);
      v14 = v92;
      (*(void (**)(unint64_t *, uint64_t, uint64_t))(v51 + 8))(&v108, v50, v51);
      (*(void (**)(unint64_t *, uint64_t, uint64_t))(v51 + 16))(&v107, v50, v51);
      swift_bridgeObjectRelease();
      v47 = *v93;
      sub_244795340();
    }
    while (v47 != *(_QWORD *)&v105[0]);
  }
  sub_244701444(v31, &qword_25737E6E0);
  v106 = 0;
  memset(v105, 0, sizeof(v105));
  v104 = 0;
  memset(v103, 0, sizeof(v103));
  v37 = (uint64_t)v83;
  v98(v83, v86, v19);
  sub_244795328();
  v38 = v84;
  *(_QWORD *)(v37 + *(int *)(v84 + 36)) = *(_QWORD *)&v102[0];
  sub_24470D4C4(v37, (uint64_t)v14, &qword_25737E6E0);
  v39 = &v14[*(int *)(v38 + 36)];
  v40 = *(_QWORD *)v39;
  sub_244795340();
  v42 = v88;
  v43 = v87;
  if (v40 != *(_QWORD *)&v102[0])
  {
    *(_QWORD *)&v41 = 136446210;
    v91 = v41;
    *(_QWORD *)&v90 = MEMORY[0x24BEE4AD8] + 8;
    do
    {
      v63 = (void (*)(__int128 *, _QWORD))sub_244795358();
      v66 = *v64;
      v65 = v64[1];
      v67 = v64[3];
      v93 = (uint64_t *)v64[2];
      swift_bridgeObjectRetain();
      v63(v102, 0);
      v68 = v97;
      v98(v97, v14, v19);
      sub_24479534C();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v68, v19);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v65 + 24))(&v100, v66, v65);
      if (v101)
      {
        sub_244707B68(&v100, (uint64_t)v102);
        sub_244701400((uint64_t)v105, (uint64_t)&v100, &qword_25737E6D0);
        v69 = v101;
        sub_244701444((uint64_t)&v100, &qword_25737E6D0);
        if (v69)
        {
          sub_244794A7C();
          swift_bridgeObjectRetain_n();
          v70 = sub_244794AA0();
          v71 = v43;
          v72 = sub_244795388();
          if (os_log_type_enabled(v70, v72))
          {
            v73 = swift_slowAlloc();
            v74 = swift_slowAlloc();
            *(_QWORD *)&v100 = v74;
            *(_DWORD *)v73 = v91;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v73 + 4) = sub_24470600C((uint64_t)v93, v67, (uint64_t *)&v100);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_2446FC000, v70, v72, "Ignoring scene configurator provided by plugin '%{public}s'\nas more than one configurator is registered.", (uint8_t *)v73, 0xCu);
            swift_arrayDestroy();
            v75 = v74;
            v42 = v88;
            MEMORY[0x2495188D8](v75, -1, -1);
            v76 = v73;
            v14 = v92;
            MEMORY[0x2495188D8](v76, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          (*(void (**)(char *, uint64_t))(v94 + 8))(v71, v95);
          v43 = v71;
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v102);
        }
        else
        {
          sub_244701444((uint64_t)v105, &qword_25737E6D0);
          sub_244707B68(v102, (uint64_t)v105);
        }
      }
      else
      {
        sub_244701444((uint64_t)&v100, &qword_25737E6D0);
      }
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v65 + 32))(&v100, v66, v65);
      if (v101)
      {
        sub_244707B68(&v100, (uint64_t)v102);
        sub_244701400((uint64_t)v103, (uint64_t)&v100, &qword_25737E6D8);
        if (v101)
        {
          sub_244701444((uint64_t)&v100, &qword_25737E6D8);
          sub_244794A7C();
          swift_bridgeObjectRetain_n();
          v77 = sub_244794AA0();
          v78 = sub_244795388();
          if (os_log_type_enabled(v77, v78))
          {
            v79 = swift_slowAlloc();
            v80 = swift_slowAlloc();
            *(_QWORD *)&v100 = v80;
            *(_DWORD *)v79 = v91;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v79 + 4) = sub_24470600C((uint64_t)v93, v67, (uint64_t *)&v100);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_2446FC000, v77, v78, "Ignoring scene binder provided by plugin '%{public}s'\nas more than one binder is registered.", (uint8_t *)v79, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2495188D8](v80, -1, -1);
            v81 = v79;
            v43 = v87;
            MEMORY[0x2495188D8](v81, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          (*(void (**)(char *, uint64_t))(v94 + 8))(v42, v95);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v102);
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_244701444((uint64_t)&v100, &qword_25737E6D8);
          sub_244701444((uint64_t)v103, &qword_25737E6D8);
          sub_244707B68(v102, (uint64_t)v103);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_244701444((uint64_t)&v100, &qword_25737E6D8);
      }
      v62 = *(_QWORD *)v39;
      sub_244795340();
    }
    while (v62 != *(_QWORD *)&v102[0]);
  }
  sub_244701444((uint64_t)v14, &qword_25737E6E0);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v86, v19);
  v44 = v107;
  v45 = v85;
  *v85 = v108;
  v45[1] = v44;
  sub_24470D4C4((uint64_t)v105, (uint64_t)(v45 + 2), &qword_25737E6D0);
  return sub_24470D4C4((uint64_t)v103, (uint64_t)(v45 + 7), &qword_25737E6D8);
}

void sub_244727FFC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
}

uint64_t sub_244728008()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_244728034(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_244746800(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_24479558C();
  __break(1u);
  return result;
}

unint64_t sub_24472818C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  id v64;
  void *v65;
  id v66;
  char *v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  void *v76;
  void *v77;
  id v78;
  id v79;
  void *v80;
  char *v81;
  id v82;
  id v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  id v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  void (*v91)(char *, uint64_t);
  id v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t);
  id v95;
  uint64_t v96;
  char *v97;
  _QWORD v99[2];
  __int128 v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  __int128 v116;
  char *v117;
  uint64_t v118;
  char *v119;
  void (*v120)(char *, uint64_t);
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  id v127[3];

  v127[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = sub_244794AAC();
  v1 = *(_QWORD *)(v0 - 8);
  v122 = v0;
  v123 = v1;
  v2 = MEMORY[0x24BDAC7A8](v0);
  v104 = (char *)v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v115 = (char *)v99 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v117 = (char *)v99 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v112 = (char *)v99 - v8;
  v118 = sub_244793804();
  v9 = *(_QWORD *)(v118 - 8);
  v10 = MEMORY[0x24BDAC7A8](v118);
  v101 = (char *)v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v119 = (char *)v99 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v113 = (char *)v99 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v121 = (char *)v99 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E760);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v111 = (uint64_t)v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v110 = (uint64_t)v99 - v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E768);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E770);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_QWORD *)(v22 + 72);
  v109 = v22;
  v24 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_244796B50;
  v106 = v25;
  v26 = v25 + v24;
  v125 = 0;
  v126 = 0xE000000000000000;
  sub_2447954CC();
  swift_bridgeObjectRelease();
  v125 = 0xD000000000000019;
  v126 = 0x800000024479DDC0;
  v27 = *(int *)(v21 + 48);
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447937B0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v26 + v27) = 0;
  v28 = v9;
  v125 = 0;
  v126 = 0xE000000000000000;
  sub_2447954CC();
  swift_bridgeObjectRelease();
  v29 = v104;
  v125 = 0xD000000000000027;
  v126 = 0x800000024479DDE0;
  v103 = v23;
  v105 = v26;
  v30 = *(int *)(v21 + 48);
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447937B0();
  swift_bridgeObjectRelease();
  v31 = 0;
  v102 = 0;
  *(_BYTE *)(v26 + v23 + v30) = 1;
  v33 = v112;
  v32 = v113;
  v34 = v121;
  v35 = v118;
  v36 = v115;
  v125 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v37 = 136446466;
  v100 = v37;
  v99[1] = MEMORY[0x24BEE4AD8] + 8;
  *(_QWORD *)&v37 = 136446210;
  v116 = v37;
  v124 = v28;
  v108 = v21;
  while (1)
  {
    if (v31 == 2)
    {
      v38 = 1;
      v114 = 2;
      v39 = v111;
    }
    else
    {
      v39 = v111;
      if (v31 >= *(_QWORD *)(v106 + 16))
        __break(1u);
      v40 = v31;
      sub_244701400(v105 + v31 * v103, v111, &qword_25737E770);
      v38 = 0;
      v114 = v40 + 1;
    }
    v41 = v109;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 56))(v39, v38, 1, v21);
    v42 = v39;
    v43 = v110;
    sub_24470D4C4(v42, v110, &qword_25737E760);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v43, 1, v21) == 1)
      break;
    v44 = *(_BYTE *)(v43 + *(int *)(v21 + 48));
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v34, v43, v35);
    if ((v44 & 1) == 0)
    {
      sub_244794A7C();
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v32, v34, v35);
      v45 = sub_244794AA0();
      v46 = sub_244795394();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = swift_slowAlloc();
        v48 = (void *)swift_slowAlloc();
        v127[0] = v48;
        *(_DWORD *)v47 = v116;
        v49 = sub_2447937EC();
        *(_QWORD *)(v47 + 4) = sub_24470600C(v49, v50, (uint64_t *)v127);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v124 + 8))(v113, v35);
        _os_log_impl(&dword_2446FC000, v45, v46, "Looking for bundles in %{public}s", (uint8_t *)v47, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2495188D8](v48, -1, -1);
        v51 = v47;
        v28 = v124;
        MEMORY[0x2495188D8](v51, -1, -1);

        (*(void (**)(char *, uint64_t))(v123 + 8))(v112, v122);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v28 + 8))(v32, v35);

        (*(void (**)(char *, uint64_t))(v123 + 8))(v33, v122);
      }
    }
    v52 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_2447937EC();
    v53 = (void *)sub_24479504C();
    swift_bridgeObjectRelease();
    v127[0] = 0;
    v54 = objc_msgSend(v52, sel_contentsOfDirectoryAtPath_error_, v53, v127);

    v55 = v127[0];
    if (v54)
    {
      v56 = sub_244795184();
      v57 = v55;

      v58 = *(_QWORD *)(v56 + 16);
      if (v58)
      {
        v107 = v56;
        v59 = v56 + 40;
        do
        {
          swift_bridgeObjectRetain();
          v60 = v119;
          sub_2447937C8();
          swift_bridgeObjectRelease();
          v61 = sub_2447937EC();
          v63 = v62;
          v120 = *(void (**)(char *, uint64_t))(v124 + 8);
          v120(v60, v35);
          v64 = objc_allocWithZone(MEMORY[0x24BDD1488]);
          swift_bridgeObjectRetain();
          v65 = (void *)sub_24479504C();
          swift_bridgeObjectRelease();
          v66 = objc_msgSend(v64, sel_initWithPath_, v65);

          if (v66)
          {
            v67 = v117;
            sub_244794A7C();
            swift_bridgeObjectRetain();
            v68 = sub_244794AA0();
            v69 = sub_244795394();
            if (os_log_type_enabled(v68, v69))
            {
              v70 = swift_slowAlloc();
              v71 = (void *)swift_slowAlloc();
              v127[0] = v71;
              *(_DWORD *)v70 = v116;
              swift_bridgeObjectRetain();
              *(_QWORD *)(v70 + 4) = sub_24470600C(v61, v63, (uint64_t *)v127);
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_2446FC000, v68, v69, "Found plugin bundle at path %{public}s", (uint8_t *)v70, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x2495188D8](v71, -1, -1);
              v72 = v70;
              v36 = v115;
              MEMORY[0x2495188D8](v72, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            (*(void (**)(char *, uint64_t))(v123 + 8))(v67, v122);
            v78 = v66;
            MEMORY[0x249517CC0]();
            v35 = v118;
            if (*(_QWORD *)((v125 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v125 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_2447951A8();
            sub_2447951CC();
            sub_24479519C();

          }
          else
          {
            sub_244794A7C();
            swift_bridgeObjectRetain();
            v73 = sub_244794AA0();
            v74 = sub_24479537C();
            if (os_log_type_enabled(v73, v74))
            {
              v75 = swift_slowAlloc();
              v76 = (void *)swift_slowAlloc();
              v127[0] = v76;
              *(_DWORD *)v75 = v116;
              swift_bridgeObjectRetain();
              *(_QWORD *)(v75 + 4) = sub_24470600C(v61, v63, (uint64_t *)v127);
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_2446FC000, v73, v74, "Could not instantiate bundle for path %{public}s", (uint8_t *)v75, 0xCu);
              swift_arrayDestroy();
              v77 = v76;
              v36 = v115;
              MEMORY[0x2495188D8](v77, -1, -1);
              MEMORY[0x2495188D8](v75, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            (*(void (**)(char *, uint64_t))(v123 + 8))(v36, v122);
          }
          v59 += 16;
          --v58;
        }
        while (v58);
        swift_bridgeObjectRelease();
        v29 = v104;
        v28 = v124;
        v34 = v121;
        v120(v121, v35);
      }
      else
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v34, v35);
      }
    }
    else
    {
      v79 = v127[0];
      v80 = (void *)sub_2447937A4();

      swift_willThrow();
      if ((v44 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v28 + 8))(v34, v35);

      }
      else
      {
        sub_244794A7C();
        v81 = v101;
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v101, v34, v35);
        v82 = v80;
        v83 = v80;
        v84 = sub_244794AA0();
        v85 = sub_24479537C();
        if (os_log_type_enabled(v84, v85))
        {
          v86 = swift_slowAlloc();
          v120 = (void (*)(char *, uint64_t))swift_slowAlloc();
          v127[0] = (id)swift_slowAlloc();
          v87 = v127[0];
          *(_DWORD *)v86 = v100;
          v88 = v81;
          v89 = sub_2447937EC();
          *(_QWORD *)(v86 + 4) = sub_24470600C(v89, v90, (uint64_t *)v127);
          swift_bridgeObjectRelease();
          v91 = *(void (**)(char *, uint64_t))(v124 + 8);
          v91(v88, v35);
          *(_WORD *)(v86 + 12) = 2114;
          v92 = v80;
          v93 = _swift_stdlib_bridgeErrorToNSError();
          *(_QWORD *)(v86 + 14) = v93;
          v94 = v120;
          *(_QWORD *)v120 = v93;

          _os_log_impl(&dword_2446FC000, v84, v85, "Error iterating contents of %{public}s: %{public}@", (uint8_t *)v86, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
          swift_arrayDestroy();
          MEMORY[0x2495188D8](v94, -1, -1);
          swift_arrayDestroy();
          v95 = v87;
          v29 = v104;
          MEMORY[0x2495188D8](v95, -1, -1);
          v96 = v86;
          v28 = v124;
          MEMORY[0x2495188D8](v96, -1, -1);

        }
        else
        {

          v97 = v81;
          v91 = *(void (**)(char *, uint64_t))(v28 + 8);
          v91(v97, v35);
        }

        (*(void (**)(char *, uint64_t))(v123 + 8))(v29, v122);
        v91(v34, v35);
      }
      v102 = 0;
    }
    v33 = v112;
    v32 = v113;
    v21 = v108;
    v31 = v114;
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v125;
}

_QWORD *sub_244728E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  SEL *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  _QWORD *v38;
  os_log_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char *v65;
  uint64_t v66;
  __int128 v67;
  unint64_t v68;
  int v69;
  os_log_t v70;
  _QWORD *v71;
  void *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77[2];

  v77[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = sub_244794AAC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v65 - v5;
  v7 = sub_24472818C();
  v68 = v7;
  if (v7 >> 62)
    v9 = sub_24479555C();
  else
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  v65 = v6;
  if (v9)
  {
    if (v9 < 1)
      __break(1u);
    v10 = 0;
    v73 = 0;
    v11 = v68;
    v12 = v68 & 0xC000000000000001;
    v13 = (SEL *)&unk_25157A000;
    *(_QWORD *)&v8 = 136446466;
    v67 = v8;
    v66 = MEMORY[0x24BEE4AD8] + 8;
    v74 = v68 & 0xC000000000000001;
    v75 = v9;
    do
    {
      if (v12)
        v15 = (id)MEMORY[0x249518044](v10, v11);
      else
        v15 = *(id *)(v11 + 8 * v10 + 32);
      v16 = v15;
      v77[0] = 0;
      if (objc_msgSend(v15, v13[432], v77, v65, v66))
      {
        v14 = v77[0];

      }
      else
      {
        v17 = v77[0];
        v18 = (void *)sub_2447937A4();

        swift_willThrow();
        v73 = 0;
        sub_244794A7C();
        v19 = v16;
        v20 = v18;
        v21 = v19;
        v22 = v18;
        v23 = sub_244794AA0();
        v24 = sub_24479537C();
        v25 = v24;
        if (os_log_type_enabled(v23, v24))
        {
          v26 = swift_slowAlloc();
          v71 = (_QWORD *)swift_slowAlloc();
          v72 = (void *)swift_slowAlloc();
          v77[0] = v72;
          *(_DWORD *)v26 = v67;
          v27 = objc_msgSend(v21, sel_bundlePath);
          v70 = v23;
          v28 = v4;
          v29 = v1;
          v30 = v27;
          v31 = sub_244795058();
          v69 = v25;
          v32 = v31;
          v33 = v0;
          v35 = v34;

          v1 = v29;
          v4 = v28;
          *(_QWORD *)(v26 + 4) = sub_24470600C(v32, v35, (uint64_t *)v77);

          v0 = v33;
          v11 = v68;
          swift_bridgeObjectRelease();
          *(_WORD *)(v26 + 12) = 2114;
          v36 = v18;
          v37 = _swift_stdlib_bridgeErrorToNSError();
          *(_QWORD *)(v26 + 14) = v37;
          v38 = v71;
          *v71 = v37;

          v39 = v70;
          _os_log_impl(&dword_2446FC000, v70, (os_log_type_t)v69, "Unable to load bundle at %{public}s: %{public}@", (uint8_t *)v26, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
          swift_arrayDestroy();
          MEMORY[0x2495188D8](v38, -1, -1);
          v40 = v72;
          swift_arrayDestroy();
          MEMORY[0x2495188D8](v40, -1, -1);
          MEMORY[0x2495188D8](v26, -1, -1);

        }
        else
        {

        }
        (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
        v12 = v74;
        v9 = v75;
        v13 = (SEL *)&unk_25157A000;
      }
      ++v10;
    }
    while (v9 != v10);
    swift_bridgeObjectRelease();
    v6 = v65;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E750);
  v41 = sub_244793A98();
  if (v41)
    v42 = v41;
  else
    v42 = MEMORY[0x24BEE4AF8];
  sub_244794A7C();
  swift_bridgeObjectRetain_n();
  v43 = sub_244794AA0();
  v44 = sub_244795370();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc();
    v46 = (void *)swift_slowAlloc();
    v75 = v1;
    v47 = v46;
    v77[0] = v46;
    *(_DWORD *)v45 = 136315138;
    swift_bridgeObjectRetain();
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737E758);
    v49 = MEMORY[0x249517CE4](v42, v48);
    v51 = v50;
    swift_bridgeObjectRelease();
    v76 = sub_24470600C(v49, v51, (uint64_t *)v77);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2446FC000, v43, v44, "Found types conforming to PreviewShellPlugin: %s", v45, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v47, -1, -1);
    MEMORY[0x2495188D8](v45, -1, -1);

    (*(void (**)(char *, uint64_t))(v75 + 8))(v65, v0);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  }
  v52 = *(_QWORD *)(v42 + 16);
  if (v52)
  {
    swift_bridgeObjectRetain();
    v53 = 0;
    v54 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      v56 = *(void **)(v42 + 8 * v53 + 32);
      v57 = swift_conformsToProtocol2();
      if (v57)
        v58 = v57;
      else
        v58 = 0;
      if (!v57)
        v56 = 0;
      if (v56)
      {
        v77[0] = v56;
        swift_getMetatypeMetadata();
        v59 = sub_244795088();
        v61 = v60;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v54 = sub_244746800(0, v54[2] + 1, 1, v54);
        v63 = v54[2];
        v62 = v54[3];
        if (v63 >= v62 >> 1)
          v54 = sub_244746800((_QWORD *)(v62 > 1), v63 + 1, 1, v54);
        v54[2] = v63 + 1;
        v55 = &v54[5 * v63];
        v55[4] = v56;
        v55[5] = v58;
        v55[6] = v59;
        v55[7] = v61;
        v55[8] = v56;
      }
      ++v53;
    }
    while (v52 != v53);
    swift_bridgeObjectRelease();
  }
  else
  {
    v54 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  return v54;
}

unint64_t sub_2447294B0()
{
  unint64_t result;

  result = qword_25737E700;
  if (!qword_25737E700)
  {
    result = MEMORY[0x249518824](&unk_24479747C, &type metadata for PreviewShellPluginRegistry.Plugin);
    atomic_store(result, (unint64_t *)&qword_25737E700);
  }
  return result;
}

unint64_t sub_2447294F8()
{
  unint64_t result;

  result = qword_25737E718;
  if (!qword_25737E718)
  {
    result = MEMORY[0x249518824](&protocol conformance descriptor for PreviewShellPluginRegistry.PluginLocation, &type metadata for PreviewShellPluginRegistry.PluginLocation);
    atomic_store(result, (unint64_t *)&qword_25737E718);
  }
  return result;
}

uint64_t destroy for PreviewShellPluginRegistry(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    result = __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
  if (*(_QWORD *)(a1 + 80))
    return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 56);
  return result;
}

uint64_t initializeWithCopy for PreviewShellPluginRegistry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = (_OWORD *)(a1 + 16);
  v6 = a2 + 16;
  v7 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 48) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 16, v6, v7);
  }
  else
  {
    v9 = *(_OWORD *)(v6 + 16);
    *v5 = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(v6 + 32);
  }
  v10 = (_OWORD *)(a1 + 56);
  v11 = (_OWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 80);
  if (v12)
  {
    v13 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v12;
    *(_QWORD *)(a1 + 88) = v13;
    (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v10, v11);
  }
  else
  {
    v14 = *(_OWORD *)(a2 + 72);
    *v10 = *v11;
    *(_OWORD *)(a1 + 72) = v14;
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  }
  return a1;
}

uint64_t assignWithCopy for PreviewShellPluginRegistry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 40) = v4;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
    goto LABEL_8;
  }
  v5 = *(_OWORD *)(a2 + 16);
  v6 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = v6;
LABEL_8:
  v7 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 80) = v7;
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 56, a2 + 56);
      return a1;
    }
LABEL_14:
    v8 = *(_OWORD *)(a2 + 56);
    v9 = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 56) = v8;
    *(_OWORD *)(a1 + 72) = v9;
    return a1;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 56);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  return a1;
}

uint64_t assignWithTake for PreviewShellPluginRegistry(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 80))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 56);
  v5 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v5;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

ValueMetadata *type metadata accessor for PreviewShellPluginRegistry()
{
  return &type metadata for PreviewShellPluginRegistry;
}

uint64_t storeEnumTagSinglePayload for PreviewShellPluginRegistry.PluginLocation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_244729878 + 4 * byte_244797385[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2447298AC + 4 * byte_244797380[v4]))();
}

uint64_t sub_2447298AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2447298B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2447298BCLL);
  return result;
}

uint64_t sub_2447298C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2447298D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2447298D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2447298DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PreviewShellPluginRegistry.PluginLocation()
{
  return &type metadata for PreviewShellPluginRegistry.PluginLocation;
}

uint64_t destroy for PreviewShellPluginRegistry.Plugin()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PreviewShellPluginRegistry.Plugin(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PreviewShellPluginRegistry.Plugin(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for PreviewShellPluginRegistry.Plugin(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for PreviewShellPluginRegistry.Plugin()
{
  return &type metadata for PreviewShellPluginRegistry.Plugin;
}

uint64_t sub_2447299EC()
{
  return MEMORY[0x24BEE0948];
}

uint64_t sub_2447299F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t SharedAgentServer<>.requestControlAgent(for:)(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(int, uint64_t, uint64_t);

  *(_QWORD *)(v3 + 16) = a1;
  v6 = *v2;
  v5 = v2[1];
  v9 = (uint64_t (*)(int, uint64_t, uint64_t))((char *)&dword_25737E780 + dword_25737E780);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v7;
  *v7 = v3;
  v7[1] = sub_244729AB4;
  return v9(a2, v6, v5);
}

uint64_t sub_244729AB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v5;

  v3 = *v2;
  *(_QWORD *)(v3 + 32) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  sub_244793990();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 40) = v5;
  sub_24472A31C();
  *v5 = v3;
  v5[1] = sub_244729B6C;
  return sub_2447938DC();
}

uint64_t sub_244729B6C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_244729BE0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static ControlAgentService.shellService.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE77FD8];
  v3 = sub_244793894();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t static ControlAgentService.bootstrap(client:context:endpoint:using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_25737E790 + dword_25737E790);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_244706734;
  return v8(a1, a3);
}

void sub_244729CC4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  void (*v11)(char *, uint64_t);
  void *v12;
  void *v13;
  uint64_t v14;

  v4 = sub_244793894();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_targetWithPid_, a2);
  objc_msgSend(a1, sel_setTarget_, v8);

  v9 = *MEMORY[0x24BE77FD8];
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, v9, v4);
  sub_24479384C();
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  v12 = (void *)sub_24479504C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setDomain_, v12);

  v10(v7, v9, v4);
  sub_244793858();
  v11(v7, v4);
  v13 = (void *)sub_24479504C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setService_, v13);

}

double static ControlAgentService.bootstrapTimeout(for:)()
{
  return 3.0;
}

id static ControlAgentService.identity(of:)()
{
  void *v0;
  id v1;

  v0 = (void *)sub_244793918();
  v1 = objc_msgSend(v0, sel_pid);

  return v1;
}

uint64_t sub_244729E90()
{
  sub_2447954CC();
  sub_2447950E8();
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_244729F24()
{
  return sub_244729E90();
}

uint64_t sub_244729F2C()
{
  sub_24472AC28();
  return sub_244794668();
}

uint64_t sub_244729F54()
{
  sub_24472AC28();
  return sub_244794638();
}

uint64_t sub_244729F7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE77FD8];
  v3 = sub_244793894();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_244729FC0(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *a1;
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_25737E790 + dword_25737E790);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_244707DE8;
  return v9(v6, a4);
}

double sub_24472A02C()
{
  return 3.0;
}

void sub_24472A034(unsigned int *a1@<X8>)
{
  void *v2;
  unsigned int v3;

  v2 = (void *)sub_244793918();
  v3 = objc_msgSend(v2, sel_pid);

  *a1 = v3;
}

uint64_t sub_24472A084(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 32) = a3;
  *(_DWORD *)(v3 + 64) = a1;
  return swift_task_switch();
}

uint64_t sub_24472A0A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, void *, uint64_t);

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v1 + 32) = v0 + 64;
  v4 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t))((int)*MEMORY[0x24BE76A38] + MEMORY[0x24BE76A38]);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *v2 = v0;
  v2[1] = sub_24472A144;
  return v4(v0 + 16, v0 + 64, &unk_25737E7F8, v1);
}

uint64_t sub_24472A144()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24472A1B0(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 32) = a3;
  *(_DWORD *)(v3 + 64) = a1;
  return swift_task_switch();
}

uint64_t sub_24472A1CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, void *, uint64_t);

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v1 + 32) = v0 + 64;
  v4 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t))((int)*MEMORY[0x24BE76A38] + MEMORY[0x24BE76A38]);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *v2 = v0;
  v2[1] = sub_24472A270;
  return v4(v0 + 16, v0 + 64, &unk_25737E870, v1);
}

uint64_t sub_24472A270()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24472A2DC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_24472A2E8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_24472A31C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25737DF10;
  if (!qword_25737DF10)
  {
    v1 = sub_244793990();
    result = MEMORY[0x249518824](MEMORY[0x24BE78200], v1);
    atomic_store(result, (unint64_t *)&qword_25737DF10);
  }
  return result;
}

uint64_t sub_24472A364(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  *(_QWORD *)(v4 + 16) = a1;
  v5 = *a4;
  v8 = (uint64_t (*)(uint64_t))((char *)&dword_25737F570 + dword_25737F570);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v6;
  *v6 = v4;
  v6[1] = sub_24472A3D0;
  return v8(v5);
}

uint64_t sub_24472A3D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_24472A44C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  *(_QWORD *)(v4 + 16) = a1;
  v5 = *a4;
  v8 = (uint64_t (*)(uint64_t))((char *)&dword_25737F5A0 + dword_25737F5A0);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v6;
  *v6 = v4;
  v6[1] = sub_24472A4B8;
  return v8(v5);
}

uint64_t sub_24472A4B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_24472A534()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD **)(v0 + 16);
  sub_2447938F4();
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24472A570(int a1)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 64) = a1;
  return swift_task_switch();
}

uint64_t sub_24472A5D4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  void **v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  _DWORD *v19;
  uint64_t (*v20)(void);
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;

  v1 = *(_DWORD *)(v0 + 64);
  v2 = swift_task_alloc();
  *(_DWORD *)(v2 + 16) = v1;
  v3 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  v4 = (void **)(v0 + 16);
  *(_QWORD *)(v3 + 16) = sub_24472AA34;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v0 + 48) = sub_244726C70;
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_244715DE0;
  *(_QWORD *)(v0 + 40) = &block_descriptor_3;
  v5 = _Block_copy((const void *)(v0 + 16));
  v6 = (void *)objc_opt_self();
  swift_retain();
  v7 = objc_msgSend(v6, sel_injectorWithConfigurator_, v5);
  _Block_release(v5);
  swift_release();
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v5 & 1) != 0)
    __break(1u);
  swift_task_dealloc();
  v8 = *(unsigned int *)(v0 + 64);
  if (v7)
  {
    v9 = (void *)objc_opt_self();
    v10 = v7;
    v11 = objc_msgSend(v9, sel_identifierWithPid_, v8);
    if (v11)
    {
      v12 = v11;
      v13 = (void *)objc_opt_self();
      *v4 = 0;
      v14 = v12;
      v15 = objc_msgSend(v13, sel_handleForIdentifier_error_, v14, v0 + 16);
      v16 = *v4;
      if (v15)
      {
        v17 = v15;
        v18 = v16;

        __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
        *(_QWORD *)(swift_task_alloc() + 16) = v17;
        sub_244794980();

        swift_task_dealloc();
LABEL_9:
        v23 = swift_allocObject();
        *(_QWORD *)(v23 + 16) = v10;
        v24 = swift_allocObject();
        *(_QWORD *)(v24 + 16) = sub_24472AACC;
        *(_QWORD *)(v24 + 24) = v23;
        v25 = v10;
        sub_2447948F0();
        swift_release();
        swift_release();

        v20 = *(uint64_t (**)(void))(v0 + 8);
        return v20();
      }
      v21 = v16;
      v22 = (void *)sub_2447937A4();

      swift_willThrow();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
    sub_2447949D4();
    goto LABEL_9;
  }
  sub_24472AA64();
  swift_allocError();
  *v19 = v8;
  swift_willThrow();
  v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_24472A988()
{
  return MEMORY[0x24BEE3FE0];
}

uint64_t sub_24472A994()
{
  return MEMORY[0x24BEE3F98];
}

ValueMetadata *type metadata accessor for ControlAgentService()
{
  return &type metadata for ControlAgentService;
}

uint64_t sub_24472A9B0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (unsigned int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_244707DE8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unsigned int *))((char *)&dword_25737E7F0 + dword_25737E7F0))(a1, v4, v5, v6);
}

void sub_24472AA34(void *a1)
{
  uint64_t v1;

  sub_244729CC4(a1, *(unsigned int *)(v1 + 16));
}

uint64_t sub_24472AA3C()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

unint64_t sub_24472AA64()
{
  unint64_t result;

  result = qword_25737E860;
  if (!qword_25737E860)
  {
    result = MEMORY[0x249518824](&unk_244797620, &type metadata for ControlAgentService.EndpointInjectionError);
    atomic_store(result, (unint64_t *)&qword_25737E860);
  }
  return result;
}

uint64_t sub_24472AAA8()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_24472AACC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_invalidate);
}

uint64_t sub_24472AADC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24472AB00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (unsigned int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_244706734;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unsigned int *))((char *)&dword_25737E868 + dword_25737E868))(a1, v4, v5, v6);
}

ValueMetadata *type metadata accessor for ControlAgentService.EndpointInjectionError()
{
  return &type metadata for ControlAgentService.EndpointInjectionError;
}

unint64_t sub_24472AB9C()
{
  unint64_t result;

  result = qword_25737E878;
  if (!qword_25737E878)
  {
    result = MEMORY[0x249518824](&unk_244797540, &type metadata for ControlAgentService.EndpointInjectionError);
    atomic_store(result, (unint64_t *)&qword_25737E878);
  }
  return result;
}

unint64_t sub_24472ABE4()
{
  unint64_t result;

  result = qword_25737E880;
  if (!qword_25737E880)
  {
    result = MEMORY[0x249518824](&unk_244797518, &type metadata for ControlAgentService.EndpointInjectionError);
    atomic_store(result, (unint64_t *)&qword_25737E880);
  }
  return result;
}

unint64_t sub_24472AC28()
{
  unint64_t result;

  result = qword_25737E888;
  if (!qword_25737E888)
  {
    result = MEMORY[0x249518824](&unk_244797588, &type metadata for ControlAgentService.EndpointInjectionError);
    atomic_store(result, (unint64_t *)&qword_25737E888);
  }
  return result;
}

uint64_t SharedAgentServer<>.requestJITBootstrapAgent(for:bootstrapMethod:)(uint64_t a1, uint64_t *a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *a2;
  *(_QWORD *)(v3 + 160) = a1;
  *(_QWORD *)(v3 + 168) = v4;
  *(_BYTE *)(v3 + 232) = *((_BYTE *)a2 + 8);
  *(_OWORD *)(v3 + 176) = *v2;
  return swift_task_switch();
}

uint64_t sub_24472ACA4()
{
  uint64_t v0;
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v14;

  v1 = *(_BYTE *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(void **)(v0 + 168);
  v4 = sub_2447948A8();
  swift_allocObject();
  v14 = *(_OWORD *)(v0 + 176);
  v5 = sub_24479489C();
  *(_QWORD *)(v0 + 192) = v5;
  *(_QWORD *)(v0 + 144) = v5;
  *(_QWORD *)(v0 + 112) = type metadata accessor for Agent(0);
  *(_QWORD *)(v0 + 120) = sub_24472AFA4();
  *(_QWORD *)(v0 + 88) = v3;
  swift_retain();
  v6 = MEMORY[0x24BE76A58];
  sub_244794800();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
  v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier + 8);
  *(_QWORD *)(v0 + 200) = v7;
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapTimeout);
  v10 = *(_BYTE *)(v3 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapTimeout + 8);
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v0 + 48) = v5;
  *(_QWORD *)(v0 + 16) = v2;
  *(_BYTE *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 32) = v9;
  *(_BYTE *)(v0 + 40) = v10;
  *(_QWORD *)(v0 + 128) = v8;
  *(_QWORD *)(v0 + 136) = v7;
  swift_bridgeObjectRetain();
  sub_24472AFEC(v2, v1);
  swift_retain();
  v11 = swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v11;
  *(_OWORD *)(v11 + 16) = v14;
  *(_QWORD *)(v11 + 32) = v0 + 128;
  *(_QWORD *)(v11 + 40) = v0 + 16;
  *(_QWORD *)&v14 = (int)*MEMORY[0x24BE76A38] + MEMORY[0x24BE76A38];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 216) = v12;
  *v12 = v0;
  v12[1] = sub_24472AE84;
  return ((uint64_t (*)(uint64_t, uint64_t, void *, uint64_t))v14)(v0 + 152, v0 + 128, &unk_25737E8A0, v11);
}

uint64_t sub_24472AE84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24472AEF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 152);
  sub_24472C164(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_24472AF48()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_24472C164(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_24472AFA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257380060;
  if (!qword_257380060)
  {
    v1 = type metadata accessor for Agent(255);
    result = MEMORY[0x249518824](&protocol conformance descriptor for Agent, v1);
    atomic_store(result, (unint64_t *)&qword_257380060);
  }
  return result;
}

id sub_24472AFEC(id result, char a2)
{
  if ((a2 & 1) == 0)
    return result;
  return result;
}

PreviewShellKit::JITBootstrapAgentConnectionIdentifier __swiftcall JITBootstrapAgentConnectionIdentifier.init(stringIdentifier:)(PreviewShellKit::JITBootstrapAgentConnectionIdentifier stringIdentifier)
{
  PreviewShellKit::JITBootstrapAgentConnectionIdentifier *v1;

  *v1 = stringIdentifier;
  return stringIdentifier;
}

uint64_t JITBootstrapAgentConnectionIdentifier.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t JITBootstrapAgentConnectionIdentifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_2447950C4();
  return swift_bridgeObjectRelease();
}

uint64_t static JITBootstrapAgentConnectionIdentifier.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_2447955D4();
}

uint64_t JITBootstrapAgentConnectionIdentifier.hashValue.getter()
{
  sub_24479564C();
  swift_bridgeObjectRetain();
  sub_2447950C4();
  swift_bridgeObjectRelease();
  return sub_24479567C();
}

uint64_t sub_24472B0F8()
{
  sub_24479564C();
  swift_bridgeObjectRetain();
  sub_2447950C4();
  swift_bridgeObjectRelease();
  return sub_24479567C();
}

uint64_t sub_24472B150()
{
  swift_bridgeObjectRetain();
  sub_2447950C4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24472B194()
{
  sub_24479564C();
  swift_bridgeObjectRetain();
  sub_2447950C4();
  swift_bridgeObjectRelease();
  return sub_24479567C();
}

uint64_t sub_24472B1E8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24472B214(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_2447955D4();
}

id JITBootstrapAgentService.BootstrapContext.bootstrapMethod.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)v1;
  v3 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v3;
  return sub_24472AFEC(v2, v3);
}

void JITBootstrapAgentService.BootstrapContext.bootstrapMethod.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  sub_24472C198(*(id *)v1, *(_BYTE *)(v1 + 8));
  *(_QWORD *)v1 = v2;
  *(_BYTE *)(v1 + 8) = v3;
}

uint64_t (*JITBootstrapAgentService.BootstrapContext.bootstrapMethod.modify())()
{
  return nullsub_1;
}

uint64_t JITBootstrapAgentService.BootstrapContext.bootstrapTimeout.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t JITBootstrapAgentService.BootstrapContext.bootstrapTimeout.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*JITBootstrapAgentService.BootstrapContext.bootstrapTimeout.modify())()
{
  return nullsub_1;
}

uint64_t JITBootstrapAgentService.BootstrapContext.agentInvalidationWrapper.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_244705F80(v1 + 32, a1);
}

uint64_t JITBootstrapAgentService.BootstrapContext.agentInvalidationWrapper.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 32;
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  return sub_244707B68(a1, v3);
}

uint64_t (*JITBootstrapAgentService.BootstrapContext.agentInvalidationWrapper.modify())()
{
  return nullsub_1;
}

uint64_t static JITBootstrapAgentService.shellService.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE78000];
  v3 = sub_244793894();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t static JITBootstrapAgentService.bootstrap(client:context:endpoint:using:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t *, uint64_t);

  v7 = (uint64_t (*)(uint64_t *, uint64_t))((char *)&dword_25737E8B0 + dword_25737E8B0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_244706734;
  return v7(a1, a2);
}

void sub_24472B3D8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  void (*v11)(char *, uint64_t);
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  _QWORD v20[2];

  v4 = sub_244793894();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_targetWithProcessIdentity_, a2);
  objc_msgSend(a1, sel_setTarget_, v8);
  v9 = *MEMORY[0x24BE78000];
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, v9, v4);
  sub_24479384C();
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  v12 = (void *)sub_24479504C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setDomain_, v12);

  v10(v7, v9, v4);
  sub_244793858();
  v11(v7, v4);
  v13 = (void *)sub_24479504C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setService_, v13);

  v14 = (void *)sub_24479504C();
  v15 = (void *)sub_24479504C();
  v16 = objc_msgSend((id)objc_opt_self(), sel_attributeWithDomain_name_, v14, v15);

  __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF30);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_244796330;
  *(_QWORD *)(v17 + 32) = v16;
  v20[1] = v17;
  sub_24479519C();
  sub_24472CFBC();
  v18 = v16;
  v19 = (void *)sub_244795178();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setAdditionalAttributes_, v19);

}

id sub_24472B654(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v9 = sub_244794AAC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  v13 = a4;
  v14 = sub_244794AA0();
  v15 = sub_24479537C();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v25 = v9;
    v17 = v16;
    v22 = (_QWORD *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v27 = v23;
    *(_DWORD *)v17 = 136446466;
    v24 = v10;
    swift_bridgeObjectRetain();
    v26 = sub_24470600C(a2, a3, &v27);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2112;
    v26 = (uint64_t)v13;
    v18 = v13;
    sub_244795448();
    v19 = v22;
    *v22 = v13;

    _os_log_impl(&dword_2446FC000, v14, v15, "Invalidating endpoint injector for: %{public}s, processIdentity: %@", (uint8_t *)v17, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v19, -1, -1);
    v20 = v23;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v20, -1, -1);
    MEMORY[0x2495188D8](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v25);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return objc_msgSend(a5, sel_invalidate);
}

void sub_24472B8CC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  void (*v11)(char *, uint64_t);
  void *v12;
  void *v13;
  uint64_t v14;

  v4 = sub_244793894();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_targetWithPid_, a2);
  objc_msgSend(a1, sel_setTarget_, v8);
  v9 = *MEMORY[0x24BE78000];
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, v9, v4);
  sub_24479384C();
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  v12 = (void *)sub_24479504C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setDomain_, v12);

  v10(v7, v9, v4);
  sub_244793858();
  v11(v7, v4);
  v13 = (void *)sub_24479504C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setService_, v13);

}

id sub_24472BA4C(uint64_t a1, uint64_t a2, unint64_t a3, int a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v9 = sub_244794AAC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  v13 = sub_244794AA0();
  v14 = sub_24479537C();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    HIDWORD(v19) = a4;
    v16 = v15;
    v17 = swift_slowAlloc();
    v22 = v17;
    *(_DWORD *)v16 = 136446466;
    v20 = v9;
    swift_bridgeObjectRetain();
    v21 = sub_24470600C(a2, a3, &v22);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 1024;
    LODWORD(v21) = HIDWORD(v19);
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v13, v14, "Invalidating endpoint injector for: %{public}s, pid: %d", (uint8_t *)v16, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v17, -1, -1);
    MEMORY[0x2495188D8](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v20);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return objc_msgSend(a5, sel_invalidate);
}

double static JITBootstrapAgentService.bootstrapTimeout(for:)(uint64_t a1)
{
  double result;

  result = *(double *)(a1 + 16);
  if (*(_BYTE *)(a1 + 24))
    return 30.0;
  return result;
}

uint64_t static JITBootstrapAgentService.identity(of:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  _QWORD v10[7];

  v3 = sub_244794494();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24479390C();
  v10[3] = MEMORY[0x24BEE0D00];
  v10[4] = MEMORY[0x24BE76CB0];
  v10[0] = 0xD00000000000001DLL;
  v10[1] = 0x800000024479D8A0;
  sub_24479447C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  if (!v1)
  {
    v8 = v10[6];
    *a1 = v10[5];
    a1[1] = v8;
  }
  return result;
}

uint64_t sub_24472BD78(void *a1)
{
  id v2;
  id v3;

  sub_2447954CC();
  sub_2447950E8();
  v2 = a1;
  v3 = objc_msgSend(v2, sel_description);
  sub_244795058();

  sub_2447950E8();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24472BE30()
{
  void **v0;

  return sub_24472BD78(*v0);
}

uint64_t sub_24472BE38()
{
  sub_24472D140();
  return sub_244794668();
}

uint64_t sub_24472BE60()
{
  sub_24472D140();
  return sub_244794638();
}

uint64_t sub_24472BE88()
{
  sub_2447954CC();
  sub_2447950E8();
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24472BF1C()
{
  return sub_24472BE88();
}

uint64_t sub_24472BF24()
{
  sub_24472D184();
  return sub_244794668();
}

uint64_t sub_24472BF4C()
{
  sub_24472D184();
  return sub_244794638();
}

uint64_t sub_24472BF74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE78000];
  v3 = sub_244793894();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_24472BFB8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t *, uint64_t);

  v7 = (uint64_t (*)(uint64_t *, uint64_t))((char *)&dword_25737E8B0 + dword_25737E8B0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_244707DE8;
  return v7(a1, a2);
}

double sub_24472C030(uint64_t a1)
{
  double result;

  result = *(double *)(a1 + 16);
  if (*(_BYTE *)(a1 + 24))
    return 30.0;
  return result;
}

uint64_t sub_24472C048@<X0>(_QWORD *a1@<X8>)
{
  return static JITBootstrapAgentService.identity(of:)(a1);
}

uint64_t sub_24472C05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v5 + 16) = a1;
  v7 = *a4;
  v8 = a4[1];
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_25737F588 + dword_25737F588);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 24) = v9;
  *v9 = v5;
  v9[1] = sub_24472A4B8;
  return v11(v7, v8, a5);
}

uint64_t sub_24472C0E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = (uint64_t *)v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_244706734;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))((char *)&dword_25737E898
                                                                                + dword_25737E898))(a1, v4, v5, v7, v6);
}

uint64_t sub_24472C164(uint64_t a1)
{
  sub_24472C198(*(id *)a1, *(_BYTE *)(a1 + 8));
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  return a1;
}

void sub_24472C198(id a1, char a2)
{
  if ((a2 & 1) == 0)

}

uint64_t sub_24472C1A4(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[26] = a2;
  v4 = sub_244794AAC();
  v2[27] = v4;
  v2[28] = *(_QWORD *)(v4 - 8);
  v2[29] = swift_task_alloc();
  v5 = swift_task_alloc();
  v6 = *a1;
  v7 = a1[1];
  v2[30] = v5;
  v2[31] = v6;
  v2[32] = v7;
  return swift_task_switch();
}

uint64_t sub_24472C220()
{
  _QWORD *v0;
  uint64_t v1;
  void ***v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t (*v40)(void);
  _DWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = (void ***)(v0 + 26);
  v1 = v0[26];
  if ((*(_BYTE *)(v1 + 24) & 1) == 0)
  {
    v3 = *(_QWORD *)(v1 + 16);
    sub_244794A88();
    swift_bridgeObjectRetain_n();
    v4 = sub_244794AA0();
    v5 = sub_244795394();
    v6 = os_log_type_enabled(v4, v5);
    v7 = v0[32];
    if (v6)
    {
      v8 = v0[31];
      v43 = v0[28];
      v44 = v0[27];
      v45 = v0[30];
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v46 = v10;
      *(_DWORD *)v9 = 136446466;
      swift_bridgeObjectRetain();
      v0[24] = sub_24470600C(v8, v7, &v46);
      sub_244795448();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v9 + 12) = 2050;
      v0[25] = v3;
      sub_244795448();
      _os_log_impl(&dword_2446FC000, v4, v5, "JIT client %{public}s bootstrap timeout override provided: %{public}f", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v10, -1, -1);
      MEMORY[0x2495188D8](v9, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v45, v44);
    }
    else
    {
      v11 = v0[30];
      v12 = v0[27];
      v13 = v0[28];
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    }
  }
  v14 = **v2;
  if (((_BYTE)(*v2)[1] & 1) != 0)
  {
    sub_244794A88();
    v15 = sub_244794AA0();
    v16 = sub_244795370();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v17 = 67240192;
      *((_DWORD *)v0 + 66) = (_DWORD)v14;
      sub_244795448();
      _os_log_impl(&dword_2446FC000, v15, v16, "Using legacy pid for endpoint injection: %{public}d", v17, 8u);
      MEMORY[0x2495188D8](v17, -1, -1);
    }
    v19 = v0[28];
    v18 = v0[29];
    v20 = v0[27];

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    v21 = swift_task_alloc();
    *(_DWORD *)(v21 + 16) = (_DWORD)v14;
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = sub_24472CE70;
    *(_QWORD *)(v22 + 24) = v21;
    v0[6] = sub_244705EF0;
    v0[7] = v22;
    v0[2] = MEMORY[0x24BDAC760];
    v0[3] = 1107296256;
    v0[4] = sub_244715DE0;
    v0[5] = &block_descriptor_4;
    v23 = _Block_copy(v0 + 2);
    v24 = (void *)objc_opt_self();
    swift_retain();
    v25 = objc_msgSend(v24, sel_injectorWithConfigurator_, v23);
    _Block_release(v23);
    swift_release();
    LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((v23 & 1) == 0)
    {
      swift_task_dealloc();
      if (v25)
      {
        v27 = (uint64_t)(v0 + 14);
        v29 = v0[31];
        v28 = v0[32];
        sub_244705F80(v0[26] + 32, (uint64_t)(v0 + 14));
        __swift_project_boxed_opaque_existential_1(v0 + 14, v0[17]);
        v30 = swift_allocObject();
        *(_QWORD *)(v30 + 16) = v29;
        *(_QWORD *)(v30 + 24) = v28;
        *(_DWORD *)(v30 + 32) = (_DWORD)v14;
        *(_QWORD *)(v30 + 40) = v25;
        swift_bridgeObjectRetain();
        v31 = v25;
        sub_2447947E8();
LABEL_14:

        swift_release();
        __swift_destroy_boxed_opaque_existential_1Tm(v27);
        swift_task_dealloc();
        swift_task_dealloc();
        v40 = (uint64_t (*)(void))v0[1];
        return v40();
      }
      sub_24472CEA0();
      swift_allocError();
      *v41 = (_DWORD)v14;
      goto LABEL_17;
    }
    __break(1u);
  }
  else
  {
    v32 = swift_task_alloc();
    *(_QWORD *)(v32 + 16) = v14;
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = sub_24472CF20;
    *(_QWORD *)(v33 + 24) = v32;
    v0[12] = sub_244720808;
    v0[13] = v33;
    v0[8] = MEMORY[0x24BDAC760];
    v0[9] = 1107296256;
    v0[10] = sub_244715DE0;
    v0[11] = &block_descriptor_19;
    v34 = _Block_copy(v0 + 8);
    v35 = (void *)objc_opt_self();
    swift_retain();
    sub_24472AFEC(v14, 0);
    v36 = objc_msgSend(v35, sel_injectorWithConfigurator_, v34);
    _Block_release(v34);
    swift_release();
    LOBYTE(v34) = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((v34 & 1) == 0)
    {
      swift_task_dealloc();
      if (v36)
      {
        v27 = (uint64_t)(v0 + 19);
        v38 = v0[31];
        v37 = v0[32];
        sub_244705F80(v0[26] + 32, (uint64_t)(v0 + 19));
        __swift_project_boxed_opaque_existential_1(v0 + 19, v0[22]);
        v39 = (_QWORD *)swift_allocObject();
        v39[2] = v38;
        v39[3] = v37;
        v39[4] = v14;
        v39[5] = v36;
        swift_bridgeObjectRetain();
        sub_24472AFEC(v14, 0);
        v31 = v36;
        sub_2447947E8();
        sub_24472C198(v14, 0);
        goto LABEL_14;
      }
      sub_24472CF38();
      swift_allocError();
      *v42 = v14;
LABEL_17:
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      v40 = (uint64_t (*)(void))v0[1];
      return v40();
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_24472C894()
{
  unint64_t result;

  result = qword_25737E8B8;
  if (!qword_25737E8B8)
  {
    result = MEMORY[0x249518824](&protocol conformance descriptor for JITBootstrapAgentConnectionIdentifier, &type metadata for JITBootstrapAgentConnectionIdentifier);
    atomic_store(result, (unint64_t *)&qword_25737E8B8);
  }
  return result;
}

unint64_t sub_24472C8DC()
{
  unint64_t result;

  result = qword_25737E8C0;
  if (!qword_25737E8C0)
  {
    result = MEMORY[0x249518824](&protocol conformance descriptor for JITBootstrapAgentConnectionIdentifier, &type metadata for JITBootstrapAgentConnectionIdentifier);
    atomic_store(result, (unint64_t *)&qword_25737E8C0);
  }
  return result;
}

unint64_t sub_24472C924()
{
  unint64_t result;

  result = qword_25737E8C8;
  if (!qword_25737E8C8)
  {
    result = MEMORY[0x249518824](&protocol conformance descriptor for JITBootstrapAgentConnectionIdentifier, &type metadata for JITBootstrapAgentConnectionIdentifier);
    atomic_store(result, (unint64_t *)&qword_25737E8C8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for JITBootstrapAgentConnectionIdentifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for JITBootstrapAgentConnectionIdentifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for JITBootstrapAgentConnectionIdentifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JITBootstrapAgentConnectionIdentifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JITBootstrapAgentConnectionIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for JITBootstrapAgentConnectionIdentifier()
{
  return &type metadata for JITBootstrapAgentConnectionIdentifier;
}

ValueMetadata *type metadata accessor for JITBootstrapAgentService()
{
  return &type metadata for JITBootstrapAgentService;
}

uint64_t initializeBufferWithCopyOfBuffer for JITBootstrapAgentService.BootstrapMethod(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_24472AFEC(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for JITBootstrapAgentService.BootstrapMethod(uint64_t a1)
{
  sub_24472C198(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for JITBootstrapAgentService.BootstrapMethod(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_24472AFEC(*(id *)a2, v4);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_24472C198(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for JITBootstrapAgentService.BootstrapMethod(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_24472C198(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for JITBootstrapAgentService.BootstrapMethod(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JITBootstrapAgentService.BootstrapMethod(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_24472CC28(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_24472CC30(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for JITBootstrapAgentService.BootstrapMethod()
{
  return &type metadata for JITBootstrapAgentService.BootstrapMethod;
}

uint64_t destroy for JITBootstrapAgentService.BootstrapContext(uint64_t a1)
{
  sub_24472C198(*(id *)a1, *(_BYTE *)(a1 + 8));
  return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
}

uint64_t initializeWithCopy for JITBootstrapAgentService.BootstrapContext(uint64_t a1, uint64_t a2)
{
  id v4;
  char v5;
  __int128 v6;

  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_24472AFEC(*(id *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 32, a2 + 32);
  return a1;
}

uint64_t assignWithCopy for JITBootstrapAgentService.BootstrapContext(uint64_t a1, uint64_t a2)
{
  id v4;
  char v5;
  void *v6;
  char v7;
  uint64_t v8;

  v4 = *(id *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_24472AFEC(*(id *)a2, v5);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_24472C198(v6, v7);
  v8 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  return a1;
}

uint64_t assignWithTake for JITBootstrapAgentService.BootstrapContext(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  char v7;
  __int128 v8;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_24472C198(v6, v7);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  v8 = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 64) = a2[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for JITBootstrapAgentService.BootstrapContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JITBootstrapAgentService.BootstrapContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for JITBootstrapAgentService.BootstrapContext()
{
  return &type metadata for JITBootstrapAgentService.BootstrapContext;
}

void sub_24472CE70(void *a1)
{
  uint64_t v1;

  sub_24472B8CC(a1, *(unsigned int *)(v1 + 16));
}

uint64_t sub_24472CE78()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

unint64_t sub_24472CEA0()
{
  unint64_t result;

  result = qword_25737E920;
  if (!qword_25737E920)
  {
    result = MEMORY[0x249518824](&unk_244797A60, &type metadata for JITBootstrapAgentService.JITEndpointInjectionPIDError);
    atomic_store(result, (unint64_t *)&qword_25737E920);
  }
  return result;
}

uint64_t sub_24472CEE4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_24472CF10(uint64_t a1)
{
  uint64_t v1;

  return sub_24472BA4C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_DWORD *)(v1 + 32), *(void **)(v1 + 40));
}

void sub_24472CF20(void *a1)
{
  uint64_t v1;

  sub_24472B3D8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_24472CF28()
{
  return swift_deallocObject();
}

unint64_t sub_24472CF38()
{
  unint64_t result;

  result = qword_25737E928;
  if (!qword_25737E928)
  {
    result = MEMORY[0x249518824](&unk_244797A20, &type metadata for JITBootstrapAgentService.JITEndpointInjectionError);
    atomic_store(result, (unint64_t *)&qword_25737E928);
  }
  return result;
}

uint64_t sub_24472CF7C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_24472CFB0(uint64_t a1)
{
  uint64_t v1;

  return sub_24472B654(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

unint64_t sub_24472CFBC()
{
  unint64_t result;

  result = qword_25737E930;
  if (!qword_25737E930)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25737E930);
  }
  return result;
}

ValueMetadata *type metadata accessor for JITBootstrapAgentService.JITEndpointInjectionError()
{
  return &type metadata for JITBootstrapAgentService.JITEndpointInjectionError;
}

ValueMetadata *type metadata accessor for JITBootstrapAgentService.JITEndpointInjectionPIDError()
{
  return &type metadata for JITBootstrapAgentService.JITEndpointInjectionPIDError;
}

unint64_t sub_24472D020()
{
  unint64_t result;

  result = qword_25737E938;
  if (!qword_25737E938)
  {
    result = MEMORY[0x249518824](&unk_244797838, &type metadata for JITBootstrapAgentService.JITEndpointInjectionPIDError);
    atomic_store(result, (unint64_t *)&qword_25737E938);
  }
  return result;
}

unint64_t sub_24472D068()
{
  unint64_t result;

  result = qword_25737E940;
  if (!qword_25737E940)
  {
    result = MEMORY[0x249518824](&unk_244797810, &type metadata for JITBootstrapAgentService.JITEndpointInjectionPIDError);
    atomic_store(result, (unint64_t *)&qword_25737E940);
  }
  return result;
}

unint64_t sub_24472D0B4()
{
  unint64_t result;

  result = qword_25737E948;
  if (!qword_25737E948)
  {
    result = MEMORY[0x249518824](&unk_244797940, &type metadata for JITBootstrapAgentService.JITEndpointInjectionError);
    atomic_store(result, (unint64_t *)&qword_25737E948);
  }
  return result;
}

unint64_t sub_24472D0FC()
{
  unint64_t result;

  result = qword_25737E950;
  if (!qword_25737E950)
  {
    result = MEMORY[0x249518824](&unk_244797918, &type metadata for JITBootstrapAgentService.JITEndpointInjectionError);
    atomic_store(result, (unint64_t *)&qword_25737E950);
  }
  return result;
}

unint64_t sub_24472D140()
{
  unint64_t result;

  result = qword_25737E958;
  if (!qword_25737E958)
  {
    result = MEMORY[0x249518824](&unk_244797988, &type metadata for JITBootstrapAgentService.JITEndpointInjectionError);
    atomic_store(result, (unint64_t *)&qword_25737E958);
  }
  return result;
}

unint64_t sub_24472D184()
{
  unint64_t result;

  result = qword_25737E960;
  if (!qword_25737E960)
  {
    result = MEMORY[0x249518824](&unk_244797880, &type metadata for JITBootstrapAgentService.JITEndpointInjectionPIDError);
    atomic_store(result, (unint64_t *)&qword_25737E960);
  }
  return result;
}

uint64_t SceneCrashedStyle.init(snapshotStyle:redCrossVisible:reloadHandler:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  return sub_24472D1EC(a3, (uint64_t)(a4 + 8));
}

uint64_t sub_24472D1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

PreviewShellKit::SceneStoppedStyle __swiftcall SceneStoppedStyle.init(snapshotStyle:)(PreviewShellKit::SceneStoppedStyle snapshotStyle)
{
  PreviewShellKit::SceneStoppedStyle *v1;

  v1->snapshotStyle.value = snapshotStyle.snapshotStyle.value;
  return snapshotStyle;
}

id SceneSettingsUpdate.sceneSettings.getter()
{
  id *v0;

  return *v0;
}

void SceneSettingsUpdate.sceneSettings.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*SceneSettingsUpdate.sceneSettings.modify())()
{
  return nullsub_1;
}

void *SceneSettingsUpdate.transitionContext.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

void SceneSettingsUpdate.transitionContext.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*SceneSettingsUpdate.transitionContext.modify())()
{
  return nullsub_1;
}

uint64_t SceneSettingsUpdate.init(sceneSettings:transitionContext:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

BOOL static SceneSnapshotStyle.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t SceneSnapshotStyle.hash(into:)()
{
  return sub_244795658();
}

uint64_t SceneSnapshotStyle.hashValue.getter()
{
  sub_24479564C();
  sub_244795658();
  return sub_24479567C();
}

BOOL sub_24472D358(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SceneCrashedStyle.snapshotStyle.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t SceneCrashedStyle.redCrossVisible.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

double static SceneCrashedStyle.default.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 40) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_WORD *)a1 = 257;
  return result;
}

double static SceneCrashedStyle.none.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 40) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_WORD *)a1 = 3;
  return result;
}

uint64_t SceneStoppedStyle.snapshotStyle.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void static SceneStoppedStyle.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static SceneStoppedStyle.none.getter(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

unint64_t sub_24472D3D8()
{
  unint64_t result;

  result = qword_25737E968;
  if (!qword_25737E968)
  {
    result = MEMORY[0x249518824](&protocol conformance descriptor for SceneSnapshotStyle, &type metadata for SceneSnapshotStyle);
    atomic_store(result, (unint64_t *)&qword_25737E968);
  }
  return result;
}

uint64_t dispatch thunk of PreviewShellScene.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PreviewShellScene.windowScene.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PreviewShellScene.role.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PreviewShellScene.hostIdentity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PreviewShellScene.sceneSettings.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of PreviewShellScene.sceneSettingsUpdates.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of PreviewShellScene.invalidateSceneSettings()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of PreviewShellScene.crashedStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of PreviewShellScene.stoppedStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of PreviewShellScene.takeSnapshot()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of PreviewShellScene.simulatedDeviceContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of PreviewShellScene.simulatedDisplayContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of PreviewShellScene.hardwareEvents.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

ValueMetadata *type metadata accessor for SceneSettingsUpdate()
{
  return &type metadata for SceneSettingsUpdate;
}

uint64_t dispatch thunk of PreviewShellScenePrivate.thumbnailFactory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PreviewShellScenePrivate.thumbnailSceneCache.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PreviewReloader.reloadRequested()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t getEnumTagSinglePayload for SceneSnapshotStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SceneSnapshotStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24472D5A8 + 4 * byte_244797AA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24472D5DC + 4 * byte_244797AA0[v4]))();
}

uint64_t sub_24472D5DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24472D5E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24472D5ECLL);
  return result;
}

uint64_t sub_24472D5F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24472D600);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24472D604(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24472D60C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_24472D618(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SceneSnapshotStyle()
{
  return &type metadata for SceneSnapshotStyle;
}

uint64_t destroy for SceneCrashedStyle(uint64_t result)
{
  if (*(_QWORD *)(result + 32))
    return __swift_destroy_boxed_opaque_existential_1Tm(result + 8);
  return result;
}

uint64_t initializeWithCopy for SceneCrashedStyle(uint64_t a1, __int16 *a2)
{
  __int16 *v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v5 = *a2;
  v4 = a2 + 4;
  *(_WORD *)a1 = v5;
  v6 = a1 + 8;
  v7 = *((_QWORD *)a2 + 4);
  if (v7)
  {
    v8 = *((_QWORD *)a2 + 5);
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v6, (uint64_t)v4);
  }
  else
  {
    v9 = *((_OWORD *)v4 + 1);
    *(_OWORD *)v6 = *(_OWORD *)v4;
    *(_OWORD *)(v6 + 16) = v9;
    *(_QWORD *)(v6 + 32) = *((_QWORD *)v4 + 4);
  }
  return a1;
}

uint64_t assignWithCopy for SceneCrashedStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v3 = a1 + 8;
  v4 = (__int128 *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 32) = v5;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 8, a2 + 8);
      return a1;
    }
LABEL_7:
    v6 = *v4;
    v7 = v4[1];
    *(_QWORD *)(v3 + 32) = *((_QWORD *)v4 + 4);
    *(_OWORD *)v3 = v6;
    *(_OWORD *)(v3 + 16) = v7;
    return a1;
  }
  if (!v5)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SceneCrashedStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = a1 + 8;
  if (*(_QWORD *)(a1 + 32))
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for SceneCrashedStyle(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SceneCrashedStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SceneCrashedStyle()
{
  return &type metadata for SceneCrashedStyle;
}

uint64_t getEnumTagSinglePayload for SceneStoppedStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v6;
  int v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  if (*a1 <= 3u)
    v6 = 3;
  else
    v6 = *a1;
  v7 = v6 - 4;
  if (*a1 < 3u)
    v8 = -1;
  else
    v8 = v7;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SceneStoppedStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24472D970 + 4 * byte_244797AAF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24472D9A4 + 4 * byte_244797AAA[v4]))();
}

uint64_t sub_24472D9A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24472D9AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24472D9B4);
  return result;
}

uint64_t sub_24472D9C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24472D9C8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_24472D9CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24472D9D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SceneStoppedStyle()
{
  return &type metadata for SceneStoppedStyle;
}

uint64_t sub_24472D9F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v2 = sub_244793894();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  sub_2447954CC();
  sub_2447950E8();
  sub_2447952F8();
  sub_2447950E8();
  v8 = a1 + 16;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(v8 + 8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_2447955C8();
  sub_2447950E8();
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
  sub_24472EC04();
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10[0];
}

unint64_t sub_24472DBA8()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_24472DBC8(uint64_t a1)
{
  MEMORY[0x249518824](&unk_244797D90, a1);
  return sub_244794668();
}

uint64_t sub_24472DBFC(uint64_t a1)
{
  MEMORY[0x249518824](&unk_244797D90, a1);
  return sub_244794638();
}

uint64_t AsyncAgentServer.deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;

  v5 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 96);
  type metadata accessor for AsyncAgentServer.ActivatedState(255, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  sub_2447952E0();
  sub_2447952BC();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 8))(v5, TupleTypeMetadata2);
  swift_release();
  return v4;
}

uint64_t type metadata accessor for AsyncAgentServer.ActivatedState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncAgentServer.ActivatedState);
}

uint64_t AsyncAgentServer.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  AsyncAgentServer.deinit(a1, a2, a3, a4);
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of static AgentService.shellService.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of static AgentService.bootstrap(client:context:endpoint:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 48)
                                                                                     + *(_QWORD *)(a6 + 48));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_244706734;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of static AgentService.bootstrapTimeout(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of static AgentService.identity(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_24472DDE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[6];

  type metadata accessor for AsyncAgentServer.ActivatedState(255, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), a4);
  result = sub_2447952BC();
  if (v5 <= 0x3F)
  {
    v6 = MEMORY[0x24BEE0190] + 64;
    swift_getTupleTypeLayout2();
    v7[4] = v7;
    v7[5] = v6;
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for AsyncAgentServer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncAgentServer);
}

uint64_t method lookup function for AsyncAgentServer()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for HostShellMessageStreamHub()
{
  swift_release();
  return swift_release();
}

_QWORD *_s15PreviewShellKit25HostShellMessageStreamHubVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for HostShellMessageStreamHub(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for HostShellMessageStreamHub(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for SharedAgentServer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SharedAgentServer);
}

uint64_t sub_24472DFB8(id *a1)
{

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_24472E058(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v6;
  v7 = *(_QWORD *)(a2 + 56);
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v7;
  v8 = *(_QWORD *)(a2 + 72);
  a1[8] = *(_QWORD *)(a2 + 64);
  a1[9] = v8;
  v11 = *(_QWORD *)(a2 + 88);
  a1[10] = *(_QWORD *)(a2 + 80);
  a1[11] = v11;
  v12 = *(_QWORD *)(a2 + 104);
  a1[12] = *(_QWORD *)(a2 + 96);
  a1[13] = v12;
  v13 = *(_QWORD *)(a2 + 120);
  a1[14] = *(_QWORD *)(a2 + 112);
  a1[15] = v13;
  a1[16] = *(_QWORD *)(a2 + 128);
  v9 = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_24472E17C(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t sub_24472E370(uint64_t a1, uint64_t a2)
{

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_release();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_release();
  return a1;
}

uint64_t sub_24472E464(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_24472E4AC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_24472E50C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24472E598(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 8) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v6 + 8) & ~v6, ((unint64_t)a2 + v6 + 8) & ~v6, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_24472E65C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80), AssociatedTypeWitness);
}

_QWORD *sub_24472E6B4(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

_QWORD *sub_24472E724(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

_QWORD *sub_24472E794(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

_QWORD *sub_24472E804(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_24472E874(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (!a2)
    return 0;
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (a2 <= v6)
    goto LABEL_20;
  v8 = ((v7 + 8) & ~v7) + *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((a2 - v6 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_20;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_20;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_20:
      if ((_DWORD)v6)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))((a1 + v7 + 8) & ~v7, v6, AssociatedTypeWitness);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_20;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if ((_DWORD)v8)
  {
    if (v8 <= 3)
      v13 = v8;
    else
      v13 = 4;
    __asm { BR              X11 }
  }
  return (v6 + v12 + 1);
}

void sub_24472E9D8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)) + *(_QWORD *)(v6 + 64);
  if (a3 <= v7)
  {
    v9 = 0;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for AsyncAgentServer.RequestTimedOut(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AsyncAgentServer.RequestTimedOut);
}

void sub_24472EBD4()
{
  JUMPOUT(0x249518824);
}

void sub_24472EBE4()
{
  JUMPOUT(0x249518824);
}

void sub_24472EBF4()
{
  JUMPOUT(0x249518824);
}

unint64_t sub_24472EC04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25737DC80;
  if (!qword_25737DC80)
  {
    v1 = sub_244793894();
    result = MEMORY[0x249518824](MEMORY[0x24BE78078], v1);
    atomic_store(result, (unint64_t *)&qword_25737DC80);
  }
  return result;
}

uint64_t sub_24472EC4C()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for JITManager();
  v0 = swift_allocObject();
  sub_244726E74(MEMORY[0x24BEE4AF8]);
  result = sub_244794A70();
  *(_QWORD *)(v0 + 16) = result;
  qword_25737EB80 = v0;
  return result;
}

uint64_t static JITManager.shared.getter()
{
  if (qword_25737CCB0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t JITManager.setUpJIT<A>(agent:bootstrapMethod:useAgentSymbolTable:_:)(uint64_t a1, uint64_t a2, uint64_t *a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v7 + 72) = a6;
  *(_QWORD *)(v7 + 80) = v6;
  *(_QWORD *)(v7 + 56) = a2;
  *(_QWORD *)(v7 + 64) = a5;
  *(_BYTE *)(v7 + 25) = a4;
  *(_QWORD *)(v7 + 48) = a1;
  v9 = sub_244794AAC();
  *(_QWORD *)(v7 + 88) = v9;
  *(_QWORD *)(v7 + 96) = *(_QWORD *)(v9 - 8);
  v10 = swift_task_alloc();
  v11 = *a3;
  *(_QWORD *)(v7 + 104) = v10;
  *(_QWORD *)(v7 + 112) = v11;
  *(_BYTE *)(v7 + 26) = *((_BYTE *)a3 + 8);
  return swift_task_switch();
}

uint64_t sub_24472ED68()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  _BOOL4 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v0 + 120) = sub_24472F2A0(*(_QWORD *)(v0 + 56));
  sub_244794A88();
  swift_retain();
  v1 = sub_244794AA0();
  v2 = sub_244795394();
  v3 = os_log_type_enabled(v1, v2);
  v5 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 56);
  if (v3)
  {
    v16 = *(_QWORD *)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 104);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17 = v9;
    *(_DWORD *)v8 = 136315138;
    v11 = *(_QWORD *)(v7 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier);
    v10 = *(_QWORD *)(v7 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier + 8);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 40) = sub_24470600C(v11, v10, &v17);
    sub_244795448();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_2446FC000, v1, v2, "JITManager: Initializing for %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v9, -1, -1);
    MEMORY[0x2495188D8](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v16);
  }
  else
  {
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  v12 = *(_BYTE *)(v0 + 26);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 112);
  *(_BYTE *)(v0 + 24) = v12;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v13;
  *v13 = v0;
  v13[1] = sub_24472EFAC;
  return sub_24472F52C((uint64_t *)(v0 + 16), *(_BYTE *)(v0 + 25));
}

uint64_t sub_24472EFAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v7)(_QWORD, uint64_t);

  v4 = *v2;
  *(_QWORD *)(v4 + 136) = a1;
  *(_QWORD *)(v4 + 144) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  v7 = (uint64_t (*)(_QWORD, uint64_t))(**(int **)(v4 + 64) + *(_QWORD *)(v4 + 64));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 152) = v6;
  *v6 = v4;
  v6[1] = sub_24472F064;
  return v7(*(_QWORD *)(v4 + 48), a1);
}

uint64_t sub_24472F064()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24472F0C8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);
  swift_release();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24472F110()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);
  *(_QWORD *)(v0 + 32) = v1;
  type metadata accessor for PreviewsJITConfigurator();
  sub_24470665C(&qword_25737EB98, (uint64_t (*)(uint64_t))type metadata accessor for PreviewsJITConfigurator, (uint64_t)&unk_244797F78);
  sub_244794518();
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24472F1D4()
{
  uint64_t v0;
  void *v1;

  swift_release();
  v1 = *(void **)(v0 + 120);
  *(_QWORD *)(v0 + 32) = v1;
  type metadata accessor for PreviewsJITConfigurator();
  sub_24470665C(&qword_25737EB98, (uint64_t (*)(uint64_t))type metadata accessor for PreviewsJITConfigurator, (uint64_t)&unk_244797F78);
  sub_244794518();
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24472F2A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  char v12;

  swift_retain();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737EE10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737EE18);
  sub_2447360C0((unint64_t *)&unk_25737EE20, &qword_25737EE10);
  sub_244794878();
  if (v1)
  {
    swift_release();
  }
  else
  {
    swift_release();
    v3 = v11;
    if (v12 == 1)
    {
      v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier);
      v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier + 8);
      v6 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v7 = (_QWORD *)swift_allocObject();
      v7[2] = v4;
      v7[3] = v5;
      v7[4] = v6;
      type metadata accessor for Agent(0);
      sub_24470665C((unint64_t *)&qword_257380060, type metadata accessor for Agent, (uint64_t)&protocol conformance descriptor for Agent);
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_244794530();
      swift_release();
      swift_release();
      v8 = swift_allocObject();
      swift_weakInit();
      v9 = (_QWORD *)swift_allocObject();
      v9[2] = v8;
      v9[3] = v4;
      v9[4] = v5;
      type metadata accessor for PreviewsJITConfigurator();
      sub_24470665C(&qword_25737EB98, (uint64_t (*)(uint64_t))type metadata accessor for PreviewsJITConfigurator, (uint64_t)&unk_244797F78);
      swift_retain();
      sub_244794530();
      swift_release();
      swift_release();
    }
  }
  return v3;
}

uint64_t sub_24472F52C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v3 + 88) = v2;
  *(_BYTE *)(v3 + 41) = a2;
  *(_QWORD *)(v3 + 96) = swift_getObjectType();
  v5 = sub_244794FC8();
  *(_QWORD *)(v3 + 104) = v5;
  *(_QWORD *)(v3 + 112) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 120) = swift_task_alloc();
  v6 = sub_2447938B8();
  *(_QWORD *)(v3 + 128) = v6;
  *(_QWORD *)(v3 + 136) = *(_QWORD *)(v6 - 8);
  v7 = swift_task_alloc();
  v8 = *a1;
  *(_QWORD *)(v3 + 144) = v7;
  *(_QWORD *)(v3 + 152) = v8;
  *(_BYTE *)(v3 + 42) = *((_BYTE *)a1 + 8);
  return swift_task_switch();
}

uint64_t sub_24472F5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char *v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17[3];

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF23PreviewsJITConfigurator_agent);
  *(_QWORD *)(v0 + 160) = v2;
  v3 = v2 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier);
  *(_QWORD *)(v0 + 168) = v4;
  v5 = *(_QWORD *)(v3 + 8);
  *(_QWORD *)(v0 + 176) = v5;
  v17[0] = v4;
  v17[1] = v5;
  v6 = objc_allocWithZone((Class)type metadata accessor for JITXPCListener());
  swift_bridgeObjectRetain_n();
  v7 = sub_2447333A0(v17);
  *(_QWORD *)(v0 + 184) = v7;
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(swift_allocObject() + 16) = v7;
  *(_QWORD *)(v0 + 192) = sub_24470665C(&qword_25737EB98, (uint64_t (*)(uint64_t))type metadata accessor for PreviewsJITConfigurator, (uint64_t)&unk_244797F78);
  v8 = v7;
  sub_244794530();
  swift_release();
  v9 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF23PreviewsJITConfigurator_stateBox);
  *(_QWORD *)(v0 + 48) = v9;
  *(_QWORD *)(v0 + 200) = v9;
  v10 = (_QWORD *)swift_task_alloc();
  v10[2] = v8;
  v10[3] = v4;
  v10[4] = v5;
  swift_retain();
  *(_QWORD *)(v0 + 208) = __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED70);
  *(_QWORD *)(v0 + 216) = sub_2447360C0(&qword_25737ED78, &qword_25737ED70);
  sub_244794878();
  LOBYTE(v8) = *(_BYTE *)(v0 + 42);
  v11 = *(_QWORD *)(v0 + 152);
  swift_release();
  swift_task_dealloc();
  v12 = v2 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapAgentServer;
  v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapAgentServer);
  *(_QWORD *)(v0 + 224) = v13;
  v14 = *(_QWORD *)(v12 + 8);
  *(_QWORD *)(v0 + 232) = v14;
  *(_QWORD *)(v0 + 16) = v13;
  *(_QWORD *)(v0 + 24) = v14;
  *(_QWORD *)(v0 + 32) = v11;
  *(_BYTE *)(v0 + 40) = (_BYTE)v8;
  swift_retain();
  swift_retain();
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v15;
  *v15 = v0;
  v15[1] = sub_24472F890;
  return SharedAgentServer<>.requestJITBootstrapAgent(for:bootstrapMethod:)(v2, (uint64_t *)(v0 + 32));
}

uint64_t sub_24472F890(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 248) = a1;
  *(_QWORD *)(v3 + 256) = v1;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_24472F928()
{
  uint64_t *v0;
  void *v1;
  id v2;
  _QWORD *v3;

  v1 = (void *)sub_244793918();
  v0[33] = (uint64_t)v1;
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[34] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_24472F9C0;
  return sub_244732328(v0[18], (uint64_t)v2, v0[23], v0[21], v0[22], (uint64_t)v2, v0[31]);
}

uint64_t sub_24472F9C0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[35] = a1;
  v3[36] = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  else
    (*(void (**)(_QWORD, _QWORD))(v3[17] + 8))(v3[18], v3[16]);
  return swift_task_switch();
}

uint64_t sub_24472FA44()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD *v12;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 280);
  v2 = *(void **)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 176);
  v15 = *(_QWORD *)(v0 + 168);
  v16 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 104);
  v14 = *(_BYTE *)(v0 + 41);
  v7 = objc_msgSend(v1, sel__xpcConnection);
  *(_QWORD *)(v0 + 296) = v7;
  sub_244735D68(0, (unint64_t *)&qword_257380030);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v5, *MEMORY[0x24BEE5490], v6);
  v8 = v1;
  *(_QWORD *)(v0 + 304) = sub_2447953E8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  v9 = swift_allocObject();
  *(_QWORD *)(v0 + 312) = v9;
  *(_QWORD *)(v9 + 16) = v15;
  *(_QWORD *)(v9 + 24) = v3;
  *(_QWORD *)(v9 + 32) = v2;
  *(_QWORD *)(v9 + 40) = v16;
  *(_BYTE *)(v9 + 48) = v14;
  *(_QWORD *)(v9 + 56) = v7;
  *(_QWORD *)(v9 + 64) = 1;
  *(_QWORD *)(v9 + 72) = v1;
  swift_bridgeObjectRetain();
  v10 = v2;
  v11 = v8;
  swift_retain();
  swift_unknownObjectRetain();
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v12;
  type metadata accessor for PreviewsJITLinker();
  *v12 = v0;
  v12[1] = sub_24472FBD8;
  return sub_2447953AC();
}

uint64_t sub_24472FBD8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 328) = v0;
  swift_task_dealloc();
  v3 = *(void **)(v2 + 304);
  swift_release();

  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_24472FC64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v10;
  void *v11;

  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 200);
  v1 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = (_QWORD *)swift_task_alloc();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  swift_retain();
  sub_244794878();
  if (v1)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    v6 = *(void **)(v0 + 280);
    v7 = *(void **)(v0 + 264);
    v8 = *(void **)(v0 + 184);
    *(_QWORD *)(v0 + 72) = *(_QWORD *)(v0 + 88);
    sub_244794518();
    swift_willThrow();
    swift_unknownObjectRelease();

    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v10 = *(void **)(v0 + 280);
    v11 = *(void **)(v0 + 264);

    swift_release();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
  }
}

uint64_t sub_24472FE8C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24472FED4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 264);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24472FF30()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 280);
  v2 = *(void **)(v0 + 264);
  v3 = *(void **)(v0 + 184);
  *(_QWORD *)(v0 + 72) = *(_QWORD *)(v0 + 88);
  sub_244794518();
  swift_willThrow();
  swift_unknownObjectRelease();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for PreviewsJITConfigurator()
{
  return objc_opt_self();
}

uint64_t JITManager.requestJIT(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_244730050()
{
  uint64_t *v0;
  char *v1;
  _QWORD *v2;

  v1 = (char *)sub_24472F2A0(v0[3]);
  v0[5] = *(_QWORD *)&v1[OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF23PreviewsJITConfigurator_future];
  swift_retain();

  v2 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_2447300FC;
  return sub_2447949B0();
}

uint64_t sub_2447300FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244730168()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_244730174(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(id *, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  id v23;
  uint64_t v24;
  char *v25;
  char v26;
  _QWORD v27[2];

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737EE30);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (id *)((char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *a1;
  if (*(_QWORD *)(*a1 + 16))
  {
    v12 = *(_QWORD *)(a2 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier);
    v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier + 8);
    swift_bridgeObjectRetain();
    v14 = sub_24470F67C(v12, v13);
    if ((v15 & 1) != 0)
    {
      v16 = v14;
      v17 = *(_QWORD *)(v11 + 56);
      v18 = type metadata accessor for JITManager.Storage.Record();
      v27[1] = a2;
      v19 = a3;
      v20 = *(_QWORD *)(v18 - 8);
      sub_24470D480(v17 + *(_QWORD *)(v20 + 72) * v16, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for JITManager.Storage.Record);
      v21 = *(void (**)(id *, _QWORD, uint64_t, uint64_t))(v20 + 56);
      a3 = v19;
      v21(v10, 0, 1, v18);
    }
    else
    {
      v18 = type metadata accessor for JITManager.Storage.Record();
      (*(void (**)(id *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for JITManager.Storage.Record();
    if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v10, 1, v18) != 1)
    {
      v25 = (char *)*v10;
      sub_24473626C((uint64_t)v10);
      v26 = 0;
      goto LABEL_11;
    }
  }
  else
  {
    v22 = type metadata accessor for JITManager.Storage.Record();
    (*(void (**)(id *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v10, 1, 1, v22);
  }
  sub_2447361E8((uint64_t)v10);
  v23 = objc_allocWithZone((Class)type metadata accessor for PreviewsJITConfigurator());
  v24 = swift_retain();
  v25 = sub_244730CDC(v24);
  sub_244730378(v25);
  if (v4)
  {

    return;
  }
  v26 = 1;
LABEL_11:
  *(_QWORD *)a3 = v25;
  *(_BYTE *)(a3 + 8) = v26;
}

uint64_t sub_244730378(char *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char *v21;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737EE30);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char **)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v24 - v7;
  v25 = *(_QWORD *)&a1[OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF23PreviewsJITConfigurator_agent];
  v9 = *(_QWORD *)(v25 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier);
  v10 = *(_QWORD *)(v25 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier + 8);
  v11 = *v1;
  v12 = *(_QWORD *)(v11 + 16);
  v26 = v9;
  if (v12)
  {
    swift_bridgeObjectRetain_n();
    v13 = sub_24470F67C(v9, v10);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      v16 = *(_QWORD *)(v11 + 56);
      v17 = type metadata accessor for JITManager.Storage.Record();
      v24 = a1;
      v18 = *(_QWORD *)(v17 - 8);
      sub_24470D480(v16 + *(_QWORD *)(v18 + 72) * v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for JITManager.Storage.Record);
      a1 = v24;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v8, 0, 1, v17);
    }
    else
    {
      v17 = type metadata accessor for JITManager.Storage.Record();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = type metadata accessor for JITManager.Storage.Record();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
    swift_bridgeObjectRetain();
  }
  type metadata accessor for JITManager.Storage.Record();
  v19 = *(_QWORD *)(v17 - 8);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v8, 1, v17);
  sub_2447361E8((uint64_t)v8);
  if (v20 == 1)
  {
    sub_24470D480(v25 + OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity, (uint64_t)v6 + *(int *)(v17 + 20), type metadata accessor for BatchIdentity);
    *v6 = a1;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v6, 0, 1, v17);
    v21 = a1;
    return sub_244789008((uint64_t)v6, v26, v10);
  }
  else
  {
    sub_2447362A8();
    swift_allocError();
    *v23 = v26;
    v23[1] = v10;
    return swift_willThrow();
  }
}

void sub_2447305EC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[3];

  v6 = sub_244794AAC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a3 + 16;
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  v11 = sub_244794AA0();
  v12 = sub_244795370();
  if (os_log_type_enabled(v11, v12))
  {
    v22 = v6;
    v13 = swift_slowAlloc();
    v21 = v7;
    v14 = v10;
    v15 = a1;
    v16 = (uint8_t *)v13;
    v17 = swift_slowAlloc();
    v24[0] = v17;
    *(_DWORD *)v16 = 136315138;
    swift_bridgeObjectRetain();
    v18 = v15;
    v10 = v14;
    v23 = sub_24470600C(v18, a2, v24);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2446FC000, v11, v12, "JITManager: Agent invalidated, so invalidating the JIT configurator: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v17, -1, -1);
    MEMORY[0x2495188D8](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_beginAccess();
  v19 = MEMORY[0x249518968](v10);
  if (v19)
  {
    v20 = (void *)v19;
    v23 = v19;
    type metadata accessor for PreviewsJITConfigurator();
    sub_24470665C(&qword_25737EB98, (uint64_t (*)(uint64_t))type metadata accessor for PreviewsJITConfigurator, (uint64_t)&unk_244797F78);
    sub_244794518();

  }
}

uint64_t sub_244730864(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = sub_244794AAC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = result;
    sub_244794A88();
    swift_bridgeObjectRetain_n();
    v11 = sub_244794AA0();
    v12 = sub_244795370();
    if (os_log_type_enabled(v11, v12))
    {
      v18 = v5;
      v13 = swift_slowAlloc();
      v19 = a2;
      v14 = (uint8_t *)v13;
      v15 = swift_slowAlloc();
      v21 = v15;
      *(_DWORD *)v14 = 136315138;
      swift_bridgeObjectRetain();
      v20 = sub_24470600C(v19, a3, &v21);
      sub_244795448();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2446FC000, v11, v12, "JITManager: Cleaning up old connection record for %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v15, -1, -1);
      MEMORY[0x2495188D8](v14, -1, -1);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    v21 = *(_QWORD *)(v10 + 16);
    MEMORY[0x24BDAC7A8](v21);
    swift_retain();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737EE10);
    v17[3] = sub_2447360C0((unint64_t *)&unk_25737EE20, &qword_25737EE10);
    v17[1] = v16;
    v17[2] = MEMORY[0x24BEE4AE0] + 8;
    v17[0] = v17;
    sub_244794878();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_244730B2C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737EE30);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v9 = sub_24470F67C(a2, a3);
  LOBYTE(a3) = v10;
  swift_bridgeObjectRelease();
  if ((a3 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *a1;
    v19 = *a1;
    *a1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_24478DFA4();
      v12 = v19;
    }
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 56);
    v14 = type metadata accessor for JITManager.Storage.Record();
    v15 = *(_QWORD *)(v14 - 8);
    sub_244736228(v13 + *(_QWORD *)(v15 + 72) * v9, (uint64_t)v8);
    sub_24478BC5C(v9, v12);
    *a1 = v12;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
  }
  else
  {
    v16 = type metadata accessor for JITManager.Storage.Record();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
  }
  return sub_2447361E8((uint64_t)v8);
}

uint64_t JITManager.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t JITManager.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

char *sub_244730CDC(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_class *ObjectType;
  objc_super v27;
  char *v28;
  uint64_t v29;

  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_244793E64();
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  v4 = *(_QWORD *)(v23 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v5 = OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF23PreviewsJITConfigurator_invalidationHandle;
  sub_244794710();
  swift_allocObject();
  v6 = v1;
  *(_QWORD *)&v1[v5] = sub_244794704();
  v25 = a1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF23PreviewsJITConfigurator_agent] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25737EE40);
  swift_retain();
  v7 = sub_244794950();
  v22[1] = v8;
  *(_QWORD *)&v6[OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF23PreviewsJITConfigurator_future] = v7;
  v28 = v8;
  v29 = 0;
  swift_retain();
  swift_retain();
  *(_QWORD *)&v6[OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF23PreviewsJITConfigurator_stateBox] = sub_244794A70();

  v27.receiver = v6;
  v27.super_class = ObjectType;
  v9 = (char *)objc_msgSendSuper2(&v27, sel_init);
  v10 = *(_QWORD *)&v9[OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF23PreviewsJITConfigurator_agent];
  v11 = *(_QWORD *)(v10 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier);
  v12 = *(_QWORD *)(v10 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier + 8);
  v13 = *(_QWORD *)&v9[OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF23PreviewsJITConfigurator_stateBox];
  v14 = OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity;
  v15 = v10 + v14 + *(int *)(type metadata accessor for BatchIdentity(0) + 20);
  v28 = v9;
  v17 = v23;
  v16 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))((char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v15, v24);
  v18 = (*(unsigned __int8 *)(v17 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = v13;
  *((_QWORD *)v19 + 3) = v11;
  *((_QWORD *)v19 + 4) = v12;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v19[v18], (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  sub_24470665C(&qword_25737EB98, (uint64_t (*)(uint64_t))type metadata accessor for PreviewsJITConfigurator, (uint64_t)&unk_244797F78);
  swift_retain_n();
  v20 = v9;
  swift_bridgeObjectRetain();
  sub_244794530();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return v20;
}

uint64_t sub_244730FC0()
{
  uint64_t result;
  uint64_t v1;
  void (*v2)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737EE00);
  sub_2447360C0(&qword_25737ED78, &qword_25737ED70);
  result = sub_244794878();
  if (v2)
  {
    v1 = swift_retain();
    v2(v1);
    sub_244736004((uint64_t)v2);
    return sub_244736004((uint64_t)v2);
  }
  return result;
}

uint64_t sub_2447310B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, void (**a5)()@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  os_log_t v34;
  os_log_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  os_log_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (**v47)();
  void (*v48)();
  uint64_t v49;
  void (*v50)();
  void (**v51)();
  uint64_t v52;
  os_log_t v53;
  int v54;
  os_log_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (**v61)();
  uint64_t v62;
  os_log_t v63;

  v61 = a5;
  v60 = a2;
  v8 = sub_244793E64();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v52 - v13;
  v15 = sub_244794AAC();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v16);
  v22 = (char *)&v52 - v21;
  v24 = *a1;
  v23 = a1[1];
  if (!(v23 >> 62))
  {
    v57 = v20;
    v58 = result;
    v59 = v24;
    sub_244794A88();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, a4, v8);
    swift_bridgeObjectRetain_n();
    v37 = sub_244794AA0();
    v38 = sub_244795370();
    v39 = v38;
    if (os_log_type_enabled(v37, v38))
    {
      v40 = swift_slowAlloc();
      v56 = swift_slowAlloc();
      v63 = (os_log_t)v56;
      *(_DWORD *)v40 = 136446466;
      v55 = v37;
      swift_bridgeObjectRetain();
      v62 = sub_24470600C(v60, a3, (uint64_t *)&v63);
      v54 = v39;
      sub_244795448();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v40 + 12) = 2080;
      v53 = (os_log_t)(v40 + 14);
      sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
      v41 = sub_2447955B0();
      v62 = sub_24470600C(v41, v42, (uint64_t *)&v63);
      sub_244795448();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      v43 = v55;
      _os_log_impl(&dword_2446FC000, v55, (os_log_type_t)v54, "PreviewsJITConfigurator(%{public}s): Agent invalidated while waiting for JIT connection setup for %s", (uint8_t *)v40, 0x16u);
      v44 = v56;
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v44, -1, -1);
      MEMORY[0x2495188D8](v40, -1, -1);

      v45 = v22;
      v46 = v60;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v45, v58);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v22, v58);
      v46 = v60;
    }
    *(_OWORD *)a1 = xmmword_244797E70;
    v48 = (void (*)())swift_allocObject();
    *((_QWORD *)v48 + 2) = v59;
    *((_QWORD *)v48 + 3) = v46;
    *((_QWORD *)v48 + 4) = a3;
    v50 = sub_24473642C;
    goto LABEL_14;
  }
  if (v23 >> 62 == 1)
  {
    v57 = v20;
    v58 = result;
    v59 = v24;
    v25 = v23 & 0x3FFFFFFFFFFFFFFFLL;
    sub_244794A88();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a4, v8);
    swift_bridgeObjectRetain_n();
    v26 = sub_244794AA0();
    v27 = sub_244795370();
    v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      v29 = swift_slowAlloc();
      v56 = v25;
      v30 = v29;
      v55 = (os_log_t)swift_slowAlloc();
      v63 = v55;
      *(_DWORD *)v30 = 136446466;
      v54 = v28;
      swift_bridgeObjectRetain();
      v62 = sub_24470600C(v60, a3, (uint64_t *)&v63);
      v53 = v26;
      sub_244795448();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2080;
      v52 = v30 + 14;
      sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
      v31 = sub_2447955B0();
      v62 = sub_24470600C(v31, v32, (uint64_t *)&v63);
      v33 = v60;
      sub_244795448();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      v34 = v53;
      _os_log_impl(&dword_2446FC000, v53, (os_log_type_t)v54, "PreviewsJITConfigurator(%{public}s): Agent invalidated while setting up JIT connection for %s", (uint8_t *)v30, 0x16u);
      v35 = v55;
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v35, -1, -1);
      v36 = v30;
      v25 = v56;
      MEMORY[0x2495188D8](v36, -1, -1);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v18, v58);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v18, v58);
      v33 = v60;
    }
    *(_OWORD *)a1 = xmmword_244797E70;
    v48 = (void (*)())swift_allocObject();
    v49 = v59;
    *((_QWORD *)v48 + 2) = v25;
    *((_QWORD *)v48 + 3) = v49;
    *((_QWORD *)v48 + 4) = v33;
    *((_QWORD *)v48 + 5) = a3;
    v50 = sub_2447363F0;
LABEL_14:
    v51 = v61;
    *v61 = v50;
    v51[1] = v48;
    return swift_bridgeObjectRetain();
  }
  if (!(v24 | v23 ^ 0x8000000000000000))
    *(_OWORD *)a1 = xmmword_244797E70;
  v47 = v61;
  *v61 = 0;
  v47[1] = 0;
  return result;
}

void sub_244731670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  _QWORD *v6;

  sub_244736438();
  v5 = (void *)swift_allocError();
  *v6 = a2;
  v6[1] = a3;
  swift_bridgeObjectRetain();
  sub_2447949EC();

}

void sub_2447316D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  _QWORD *v7;

  type metadata accessor for JITXPCListener();
  sub_24470665C(&qword_25737EDA0, (uint64_t (*)(uint64_t))type metadata accessor for JITXPCListener, (uint64_t)&unk_244797F50);
  sub_244794518();
  sub_24473647C();
  v6 = (void *)swift_allocError();
  *v7 = a3;
  v7[1] = a4;
  swift_bridgeObjectRetain();
  sub_2447949EC();

}

id sub_2447317C0()
{
  char *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id result;
  uint64_t v17;
  objc_class *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  objc_super v23;
  uint64_t v24;
  unint64_t v25;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v20 = sub_244794AAC();
  v3 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t *)(*(_QWORD *)&v0[OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF23PreviewsJITConfigurator_agent]
                 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier);
  v7 = v6[1];
  v19 = *v6;
  v21 = *(_QWORD *)&v0[OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF23PreviewsJITConfigurator_stateBox];
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED70);
  sub_2447360C0(&qword_25737ED78, &qword_25737ED70);
  sub_244794884();
  v9 = v24;
  v8 = v25;
  if ((v25 & 0x8000000000000000) != 0 && v24 | v25 ^ 0x8000000000000000)
  {
    sub_244794A88();
    swift_bridgeObjectRetain();
    v10 = sub_244794AA0();
    v11 = sub_244795370();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v18 = ObjectType;
      v14 = v13;
      v24 = v13;
      *(_DWORD *)v12 = 136446210;
      swift_bridgeObjectRetain();
      v21 = sub_24470600C(v19, v7, &v24);
      sub_244795448();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2446FC000, v10, v11, "PreviewsJITConfigurator(%{public}s): deinit", v12, 0xCu);
      swift_arrayDestroy();
      v15 = v14;
      ObjectType = v18;
      MEMORY[0x2495188D8](v15, -1, -1);
      MEMORY[0x2495188D8](v12, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
    v23.receiver = v1;
    v23.super_class = ObjectType;
    return objc_msgSendSuper2(&v23, sel_dealloc);
  }
  else
  {
    v24 = 0;
    v25 = 0xE000000000000000;
    sub_2447954CC();
    sub_2447950E8();
    swift_bridgeObjectRetain();
    sub_2447950E8();
    swift_bridgeObjectRelease();
    sub_2447950E8();
    v21 = v9;
    v22 = v8;
    sub_244795538();
    result = (id)sub_244795550();
    __break(1u);
  }
  return result;
}

uint64_t sub_244731BA8()
{
  swift_getObjectType();
  sub_24470665C(&qword_25737EDA0, (uint64_t (*)(uint64_t))type metadata accessor for JITXPCListener, (uint64_t)&unk_244797F50);
  return sub_244794518();
}

id sub_244731C34(_QWORD *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  _QWORD *v8;

  v4 = a1[1];
  if (v4 >> 62)
  {
    if (v4 >> 62 == 1)
    {
      sub_244735F98();
    }
    else if (*a1 | v4 ^ 0x8000000000000000)
    {
      sub_244735F10();
    }
    else
    {
      sub_244735F54();
    }
    swift_allocError();
    *v8 = a3;
    v8[1] = a4;
    swift_bridgeObjectRetain();
    return (id)swift_willThrow();
  }
  else
  {
    a1[1] = a2 | 0x4000000000000000;
    return (id)a2;
  }
}

uint64_t sub_244731CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  v7 = sub_2447938D0();
  v6[9] = v7;
  v6[10] = *(_QWORD *)(v7 - 8);
  v6[11] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737EDB0);
  v6[12] = v8;
  v6[13] = *(_QWORD *)(v8 - 8);
  v6[14] = swift_task_alloc();
  v9 = sub_244794AAC();
  v6[15] = v9;
  v6[16] = *(_QWORD *)(v9 - 8);
  v6[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244731DB0()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t (*v15)(uint64_t);
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 56);
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  v2 = v1;
  v3 = sub_244794AA0();
  v4 = sub_244795370();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 128);
    v18 = *(_QWORD *)(v0 + 120);
    v19 = *(_QWORD *)(v0 + 136);
    v7 = *(_QWORD *)(v0 + 48);
    v6 = *(void **)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 40);
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v20 = v10;
    *(_DWORD *)v9 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_24470600C(v8, v7, &v20);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 1026;
    LODWORD(v7) = objc_msgSend(v6, sel_pid);

    *(_DWORD *)(v0 + 184) = v7;
    sub_244795448();

    _os_log_impl(&dword_2446FC000, v3, v4, "PreviewsJITConfigurator(%{public}s): Passing endpoint for JIT to control agent service for pid: %{public}d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v10, -1, -1);
    MEMORY[0x2495188D8](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v18);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 128);
    v11 = *(_QWORD *)(v0 + 136);
    v13 = *(_QWORD *)(v0 + 120);
    v14 = *(void **)(v0 + 56);

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  sub_244793A20();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BE782B8];
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v16;
  sub_24470665C(&qword_25737EDB8, v15, MEMORY[0x24BE782B0]);
  *v16 = v0;
  v16[1] = sub_244732008;
  return sub_2447938DC();
}

uint64_t sub_244732008()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24473206C()
{
  uint64_t v0;
  _QWORD *v1;

  sub_2447938C4();
  sub_2447938B8();
  sub_24470665C(&qword_25737EDC0, (uint64_t (*)(uint64_t))MEMORY[0x24BE780B0], MEMORY[0x24BE780A0]);
  sub_24470665C((unint64_t *)&unk_25737EDC8, (uint64_t (*)(uint64_t))MEMORY[0x24BE780C8], MEMORY[0x24BE780B8]);
  *(_QWORD *)(v0 + 160) = sub_2447939C0();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_25737D180);
  *v1 = v0;
  v1[1] = sub_244732170;
  return sub_2447952C8();
}

uint64_t sub_244732170()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2447321DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24473225C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2447322B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244732328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v7[8] = a2;
  v7[9] = a3;
  v7[7] = a1;
  v8 = sub_2447938B8();
  v7[14] = v8;
  v7[15] = *(_QWORD *)(v8 - 8);
  v7[16] = swift_task_alloc();
  v9 = sub_244794AAC();
  v7[17] = v9;
  v7[18] = *(_QWORD *)(v9 - 8);
  v7[19] = swift_task_alloc();
  v7[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2447323CC()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  void *v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39[2];

  v1 = v0[9];
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF14JITXPCListener_identifier);
  v2 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF14JITXPCListener_identifier
                 + 8);
  v0[2] = *(_QWORD *)(v1 + OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF14JITXPCListener_stateBox);
  v4 = v0[8];
  v5 = (_QWORD *)swift_task_alloc();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED40);
  v32 = sub_2447360C0(&qword_25737ED50, &qword_25737ED40);
  v30 = v6;
  v31 = MEMORY[0x24BEE4AE0] + 8;
  v29 = v5;
  LOBYTE(v28) = 2;
  sub_244794878();
  v38 = v3;
  swift_release();
  swift_task_dealloc();
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  v7 = sub_244794AA0();
  v8 = sub_244795370();
  v9 = os_log_type_enabled(v7, v8);
  v10 = v0[20];
  v11 = v0[18];
  v36 = v0[17];
  if (v9)
  {
    v33 = v0[18];
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v39[0] = v13;
    *(_DWORD *)v12 = 136446210;
    swift_bridgeObjectRetain();
    v0[6] = sub_24470600C(v3, v2, v39);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2446FC000, v7, v8, "JITXPCListener(%{public}s): Listening to NSXPCListenerEndpoint", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v13, -1, -1);
    MEMORY[0x2495188D8](v12, -1, -1);

    v14 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  }
  v14(v10, v36);
  v15 = v0[9];
  v16 = *(void **)(v15 + OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF14JITXPCListener_listener);
  v17 = objc_msgSend(v16, sel_endpoint, v28, sub_244735EB0, v29, v30, v31, v32);
  v0[21] = v17;
  objc_msgSend(v16, sel_setDelegate_, v15);
  objc_msgSend(v16, sel_activate);
  sub_244794A88();
  swift_bridgeObjectRetain();
  v18 = sub_244794AA0();
  v19 = sub_244795370();
  v20 = os_log_type_enabled(v18, v19);
  v21 = v0[19];
  v22 = v0[17];
  if (v20)
  {
    v35 = v0[19];
    v34 = v0[17];
    v23 = (uint8_t *)swift_slowAlloc();
    v37 = v17;
    v24 = v14;
    v25 = swift_slowAlloc();
    v39[0] = v25;
    *(_DWORD *)v23 = 136446210;
    swift_bridgeObjectRetain();
    v0[5] = sub_24470600C(v38, v2, v39);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2446FC000, v18, v19, "JITXPCListener(%{public}s): Calling NSXPCListenerEndpoint configuration function", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v25, -1, -1);
    MEMORY[0x2495188D8](v23, -1, -1);

    v24(v35, v34);
    v17 = v37;
  }
  else
  {
    swift_bridgeObjectRelease_n();

    v14(v21, v22);
  }
  v26 = (_QWORD *)swift_task_alloc();
  v0[22] = v26;
  *v26 = v0;
  v26[1] = sub_244732924;
  return sub_244731CF4(v0[16], (uint64_t)v17, v0[10], v0[11], v0[12], v0[13]);
}

uint64_t sub_244732924()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244732988()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v1;
  *v1 = v0;
  v1[1] = sub_2447329EC;
  return sub_2447949B0();
}

uint64_t sub_2447329EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244732A50()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 96);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 72);
  type metadata accessor for JITXPCListener();
  sub_24470665C(&qword_25737EDA0, (uint64_t (*)(uint64_t))type metadata accessor for JITXPCListener, (uint64_t)&unk_244797F50);
  sub_244794518();
  swift_willThrow();
  swift_bridgeObjectRelease();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244732B5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(void **)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 56);

  v6 = *(_QWORD *)(v0 + 32);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v5, v1, v3);
  swift_bridgeObjectRelease();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_244732C10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(void **)(v0 + 96);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 72);
  type metadata accessor for JITXPCListener();
  sub_24470665C(&qword_25737EDA0, (uint64_t (*)(uint64_t))type metadata accessor for JITXPCListener, (uint64_t)&unk_244797F50);
  sub_244794518();
  swift_willThrow();
  swift_bridgeObjectRelease();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244732D34@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, void (*a4)(_QWORD)@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char *v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_QWORD);
  char v40;
  int v41;
  uint64_t result;
  uint64_t *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  int v46;
  void (*v47)(_QWORD);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;

  v48 = a6;
  v49 = a7;
  v46 = a5;
  v47 = a4;
  v45 = a1;
  v52 = sub_244794AAC();
  v44 = *(void (**)(char *, uint64_t))(v52 - 8);
  v14 = MEMORY[0x24BDAC7A8](v52);
  v53 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v43 - v16;
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  v18 = a3;
  v19 = sub_244794AA0();
  v20 = sub_244795370();
  v21 = os_log_type_enabled(v19, v20);
  v43 = a9;
  v50 = a8;
  v51 = v9;
  if (v21)
  {
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v55 = v23;
    *(_DWORD *)v22 = 136446466;
    swift_bridgeObjectRetain();
    v54 = sub_24470600C(v45, a2, &v55);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 1026;
    v24 = objc_msgSend(v18, (SEL)0x1F2A4EFC8);

    LODWORD(v54) = v24;
    sub_244795448();

    _os_log_impl(&dword_2446FC000, v19, v20, "PreviewsJITConfigurator(%{public}s): Initializing the JIT from the received XPC connection for pid: %{public}d", (uint8_t *)v22, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v23, -1, -1);
    MEMORY[0x2495188D8](v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v25 = (void (*)(char *, uint64_t))*((_QWORD *)v44 + 1);
  v26 = v52;
  v25(v17, v52);
  v27 = v53;
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  v28 = v18;
  v29 = sub_244794AA0();
  v30 = sub_244795370();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v44 = v25;
    v33 = v32;
    v55 = v32;
    *(_DWORD *)v31 = 136446466;
    swift_bridgeObjectRetain();
    v54 = sub_24470600C(v45, a2, &v55);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 12) = 1026;
    v34 = objc_msgSend(v28, sel_pid);

    LODWORD(v54) = v34;
    sub_244795448();

    _os_log_impl(&dword_2446FC000, v29, v30, "PreviewsJITConfigurator(%{public}s): JIT Initialized for pid: %{public}d", (uint8_t *)v31, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v33, -1, -1);
    MEMORY[0x2495188D8](v31, -1, -1);

    v44(v53, v52);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v25(v27, v26);
  }
  v36 = v50;
  v35 = v51;
  v38 = v48;
  v37 = v49;
  v39 = v47;
  v40 = v46;
  v41 = objc_msgSend(v28, sel_pid, v43);
  type metadata accessor for PreviewsJITLinker();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  result = sub_24474E860(v41, v39, v40 & 1, v38, v37, v36);
  if (!v35)
    *v43 = result;
  return result;
}

uint64_t sub_2447331B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t result;
  _QWORD *v9;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 >> 62 == 1)
  {

    swift_retain();
    sub_244794A04();
    swift_release();
    result = swift_release();
    *(_OWORD *)a1 = xmmword_244797E80;
  }
  else if (v4 >> 62 == 2)
  {
    if (*(_QWORD *)a1 | v4 ^ 0x8000000000000000)
      sub_244735E28();
    else
      sub_244735E6C();
    swift_allocError();
    *v9 = a3;
    v9[1] = a4;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    sub_2447954CC();
    sub_2447950E8();
    swift_bridgeObjectRetain();
    sub_2447950E8();
    swift_bridgeObjectRelease();
    sub_2447950E8();
    result = sub_244795550();
    __break(1u);
  }
  return result;
}

uint64_t sub_24473338C()
{
  return swift_retain();
}

char *sub_2447333A0(uint64_t *a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  id v17;
  char *v18;
  char v20;
  objc_super v21;
  char *v22;
  uint64_t v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v5 = *a1;
  v4 = a1[1];
  v6 = OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF14JITXPCListener_listener;
  v7 = (void *)objc_opt_self();
  v8 = v1;
  *(_QWORD *)&v1[v6] = objc_msgSend(v7, sel_anonymousListener);
  v9 = OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF14JITXPCListener_invalidationHandle;
  sub_244794710();
  swift_allocObject();
  *(_QWORD *)&v8[v9] = sub_244794704();
  v10 = &v8[OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF14JITXPCListener_identifier];
  *(_QWORD *)v10 = v5;
  *((_QWORD *)v10 + 1) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737EDF8);
  swift_bridgeObjectRetain();
  v20 = 2;
  *(_QWORD *)&v8[OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF14JITXPCListener_future] = sub_244794950();
  v22 = v11;
  v23 = 0;
  swift_retain();
  swift_retain();
  *(_QWORD *)&v8[OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF14JITXPCListener_stateBox] = sub_244794A70();

  v21.receiver = v8;
  v21.super_class = ObjectType;
  v12 = (char *)objc_msgSendSuper2(&v21, sel_init, v20, 0, 0);
  v13 = *(void **)&v12[OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF14JITXPCListener_listener];
  v14 = *(_QWORD *)&v12[OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF14JITXPCListener_stateBox];
  v22 = v12;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v13;
  v15[3] = v14;
  v15[4] = v5;
  v15[5] = v4;
  sub_24470665C(&qword_25737EDA0, (uint64_t (*)(uint64_t))type metadata accessor for JITXPCListener, (uint64_t)&unk_244797F50);
  v16 = v13;
  swift_retain_n();
  v17 = v16;
  v18 = v12;
  sub_244794530();
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_244733608(void *a1)
{
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t);

  objc_msgSend(a1, sel_setDelegate_, 0);
  objc_msgSend(a1, sel_invalidate);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737EE00);
  sub_2447360C0(&qword_25737ED50, &qword_25737ED40);
  result = sub_244794878();
  if (v4)
  {
    v3 = swift_retain();
    v4(v3);
    sub_244736004((uint64_t)v4);
    return sub_244736004((uint64_t)v4);
  }
  return result;
}

void sub_244733728(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_244733778()
{
  void (**v0)();
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  void (*v5)();

  *v4 = xmmword_244797E90;
  v5 = (void (*)())swift_allocObject();
  *((_QWORD *)v5 + 2) = v2;
  *((_QWORD *)v5 + 3) = v1;
  *((_QWORD *)v5 + 4) = v3;
  *v0 = sub_244736058;
  v0[1] = v5;
  return swift_bridgeObjectRetain();
}

void sub_244733848(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  sub_244736064();
  v4 = (void *)swift_allocError();
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  *(_QWORD *)(v5 + 8) = a1;
  *(_QWORD *)(v5 + 16) = a2;
  swift_bridgeObjectRetain();
  sub_2447949EC();

}

void sub_2447338B8(void *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5;
  void *v6;
  uint64_t v7;

  v5 = objc_msgSend(a1, sel_pid);
  sub_244736064();
  v6 = (void *)swift_allocError();
  *(_DWORD *)v7 = v5;
  *(_BYTE *)(v7 + 4) = 0;
  *(_QWORD *)(v7 + 8) = a2;
  *(_QWORD *)(v7 + 16) = a3;
  swift_bridgeObjectRetain();
  sub_2447949EC();

}

id sub_24473393C(_QWORD *a1, void *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v8 = sub_244794AAC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[1] >> 62)
  {
    sub_244794A88();
    swift_bridgeObjectRetain_n();
    v14 = sub_244794AA0();
    v15 = sub_24479537C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v22 = a3;
      v18 = v17;
      v24 = v17;
      *(_DWORD *)v16 = 136446210;
      v21[1] = v16 + 4;
      swift_bridgeObjectRetain();
      v23 = sub_24470600C(v22, a4, &v24);
      sub_244795448();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2446FC000, v14, v15, "JITXPCListener(%{public}s): NSXPCListenerEndpoint connection not in initialized state", v16, 0xCu);
      swift_arrayDestroy();
      v19 = v18;
      a3 = v22;
      MEMORY[0x2495188D8](v19, -1, -1);
      MEMORY[0x2495188D8](v16, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_244735ECC();
    swift_allocError();
    *v20 = a3;
    v20[1] = a4;
    swift_bridgeObjectRetain();
    return (id)swift_willThrow();
  }
  else
  {
    v12 = *a1 | 0x4000000000000000;
    *a1 = a2;
    a1[1] = v12;
    return a2;
  }
}

uint64_t sub_244733B60(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;

  v3 = v2;
  v5 = sub_244794AAC();
  v25 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF14JITXPCListener_identifier);
  v8 = *(_QWORD *)(v3
                 + OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF14JITXPCListener_identifier
                 + 8);
  objc_msgSend(a2, sel_auditToken);
  v23 = v28;
  v24 = v27;
  v10 = objc_allocWithZone(MEMORY[0x24BE0BDB8]);
  v27 = v24;
  v28 = v23;
  v11 = objc_msgSend(v10, sel_initWithAuditToken_, &v27);
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  v12 = sub_244794AA0();
  v13 = sub_244795370();
  if (os_log_type_enabled(v12, v13))
  {
    v22 = v3;
    v14 = swift_slowAlloc();
    *(_QWORD *)&v24 = v11;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc();
    *(_QWORD *)&v23 = a2;
    v17 = v16;
    *(_QWORD *)&v27 = v16;
    v21 = v5;
    *(_DWORD *)v15 = 136446210;
    swift_bridgeObjectRetain();
    v26 = sub_24470600C(v9, v8, (uint64_t *)&v27);
    v3 = v22;
    sub_244795448();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2446FC000, v12, v13, "JITXPCListener(%{public}s): Listener for endpoint received request for new connection.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v17, -1, -1);
    v18 = v15;
    v11 = (id)v24;
    MEMORY[0x2495188D8](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v21);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v5);
  }
  v26 = *(_QWORD *)(v3 + OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF14JITXPCListener_stateBox);
  MEMORY[0x24BDAC7A8](v26);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED48);
  sub_2447360C0(&qword_25737ED50, &qword_25737ED40);
  sub_244794878();
  v19 = swift_release();
  ((void (*)(__int128 *__return_ptr, uint64_t))v27)(&v27, v19);
  swift_release();

  return v27;
}

void sub_244733EB4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244794AAC();
  MEMORY[0x24BDAC7A8](v2);
  __asm { BR              X10 }
}

uint64_t sub_244733F48()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  *v0 = xmmword_244797E90;
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = *(_QWORD *)(v4 - 96);
  v5[3] = v1;
  v5[4] = v2;
  *v3 = sub_244735CD0;
  v3[1] = v5;
  return swift_bridgeObjectRetain();
}

void sub_24473402C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  _QWORD *v33;
  id v34;
  NSObject *v35;
  uint64_t v36;
  _QWORD *v37;

  *(_QWORD *)(v12 - 136) = a1;
  *(_QWORD *)(v12 - 128) = v2;
  *(_QWORD *)(v12 - 144) = v1;
  *(_QWORD *)(v12 - 120) = v11;
  *(_QWORD *)(v12 - 112) = v4;
  v13 = v7 & 0x3FFFFFFFFFFFFFFFLL;
  sub_244735D68(0, &qword_25737ED58);
  v14 = v10;
  swift_retain();
  *(_QWORD *)(v12 - 104) = v14;
  if ((sub_244795400() & 1) != 0)
  {
    sub_244735780(v10, v7);
    *v5 = v10;
    v5[1] = 0x8000000000000000;
    v15 = (_QWORD *)swift_allocObject();
    v16 = *(void **)(v12 - 104);
    v15[2] = *(_QWORD *)(v12 - 96);
    v15[3] = v8;
    v15[4] = v16;
    v15[5] = v6;
    v15[6] = v13;
    v15[7] = v3;
    v17 = *(_QWORD **)(v12 - 120);
    *v17 = sub_244735C44;
    v17[1] = v15;
    swift_bridgeObjectRetain();
    v18 = v16;
    v19 = v6;
    v20 = v3;
  }
  else
  {
    *(_QWORD *)(v12 - 160) = v10;
    *(_QWORD *)(v12 - 152) = v13;
    v21 = *(_QWORD *)(v12 - 128);
    sub_244794A88();
    swift_bridgeObjectRetain_n();
    v22 = v9;
    v23 = *(id *)(v12 - 104);
    v24 = v22;
    v25 = v23;
    v26 = sub_244794AA0();
    v27 = sub_24479537C();
    v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      v29 = swift_slowAlloc();
      *(_DWORD *)(v12 - 164) = v28;
      v30 = v29;
      *(_QWORD *)(v12 - 176) = swift_slowAlloc();
      v31 = swift_slowAlloc();
      *(_QWORD *)(v12 - 104) = v31;
      *(_QWORD *)(v12 - 72) = v31;
      *(_DWORD *)v30 = 136446722;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v12 - 88) = sub_24470600C(*(_QWORD *)(v12 - 96), v8, (uint64_t *)(v12 - 72));
      sub_244795448();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2112;
      *(_QWORD *)(v12 - 96) = v26;
      *(_QWORD *)(v12 - 88) = v24;
      v32 = v24;
      sub_244795448();
      v33 = *(_QWORD **)(v12 - 176);
      *v33 = v24;

      *(_WORD *)(v30 + 22) = 2112;
      *(_QWORD *)(v12 - 88) = v25;
      v34 = v25;
      sub_244795448();
      v33[1] = *(_QWORD *)(v12 - 160);

      v35 = *(NSObject **)(v12 - 96);
      _os_log_impl(&dword_2446FC000, v35, (os_log_type_t)*(_DWORD *)(v12 - 164), "JITXPCListener(%{public}s): XPC connector ignoring unrelated connection for %@ (expected %@)", (uint8_t *)v30, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v33, -1, -1);
      v36 = *(_QWORD *)(v12 - 104);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v36, -1, -1);
      MEMORY[0x2495188D8](v30, -1, -1);

      swift_release();
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v12 - 144) + 8))(*(_QWORD *)(v12 - 128), *(_QWORD *)(v12 - 136));
    }
    else
    {

      swift_release();
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v12 - 144) + 8))(v21, *(_QWORD *)(v12 - 136));
    }
    v37 = *(_QWORD **)(v12 - 120);
    *v37 = sub_244734AAC;
    v37[1] = 0;
  }
  JUMPOUT(0x24473400CLL);
}

void sub_244734350(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_244794AAC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  v10 = sub_244794AA0();
  v11 = sub_24479537C();
  if (os_log_type_enabled(v10, v11))
  {
    v20 = a3;
    v12 = swift_slowAlloc();
    v19 = v6;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc();
    v22 = v14;
    v18 = v7;
    *(_DWORD *)v13 = 136446210;
    swift_bridgeObjectRetain();
    v21 = sub_24470600C(a1, a2, &v22);
    a3 = v20;
    sub_244795448();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2446FC000, v10, v11, "JITXPCListener(%{public}s): XPC connector received connection before setup.", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v14, -1, -1);
    MEMORY[0x2495188D8](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_244735CDC();
  v15 = (void *)swift_allocError();
  *v16 = a1;
  v16[1] = a2;
  swift_bridgeObjectRetain();
  sub_2447949EC();

  *a3 = 0;
}

uint64_t sub_244734574@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  id v25;
  os_log_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a1;
  v9 = sub_244794AAC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  v13 = a3;
  v14 = a4;
  v15 = v13;
  v16 = v14;
  v17 = sub_244794AA0();
  v18 = sub_24479537C();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v32 = v9;
    v20 = v19;
    v21 = swift_slowAlloc();
    v30 = v17;
    v22 = (_QWORD *)v21;
    v31 = swift_slowAlloc();
    v36 = v31;
    *(_DWORD *)v20 = 136446722;
    v33 = a5;
    swift_bridgeObjectRetain();
    v23 = sub_24470600C(v34, a2, &v36);
    v34 = v10;
    v35 = v23;
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 12) = 2112;
    v35 = (uint64_t)v15;
    v24 = v15;
    sub_244795448();
    *v22 = v15;

    *(_WORD *)(v20 + 22) = 2112;
    v35 = (uint64_t)v16;
    v25 = v16;
    a5 = v33;
    sub_244795448();
    v22[1] = v16;

    v26 = v30;
    _os_log_impl(&dword_2446FC000, v30, v18, "JITXPCListener(%{public}s): Ignoring new connection attempt to JIT listener for pid: %@ from %@", (uint8_t *)v20, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v22, -1, -1);
    v27 = v31;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v27, -1, -1);
    MEMORY[0x2495188D8](v20, -1, -1);

    result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v12, v32);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  *a5 = 0;
  return result;
}

uint64_t sub_244734840@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v8 = sub_244794AAC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  v12 = a3;
  v13 = sub_244794AA0();
  v14 = sub_24479537C();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v24 = v8;
    v16 = v15;
    v21 = (_QWORD *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v26 = v22;
    *(_DWORD *)v16 = 136446466;
    v23 = v9;
    swift_bridgeObjectRetain();
    v25 = sub_24470600C(a1, a2, &v26);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2112;
    v25 = (uint64_t)v12;
    v17 = v12;
    sub_244795448();
    v18 = v21;
    *v21 = v12;

    _os_log_impl(&dword_2446FC000, v13, v14, "JITXPCListener(%{public}s): Invalidated, ignoring new connection attempt to JIT listener from %@", (uint8_t *)v16, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v18, -1, -1);
    v19 = v22;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v19, -1, -1);
    MEMORY[0x2495188D8](v16, -1, -1);

    result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v11, v24);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  *a4 = 0;
  return result;
}

void sub_244734AAC(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void sub_244734AB4(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, _BYTE *a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a4;
  v13 = sub_244794AAC();
  v35 = *(_QWORD *)(v13 - 8);
  v36 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A88();
  v16 = a3;
  swift_bridgeObjectRetain_n();
  v17 = v16;
  v18 = sub_244794AA0();
  v19 = sub_244795370();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v32 = a6;
    v21 = v20;
    v22 = swift_slowAlloc();
    v34 = a7;
    v23 = (_QWORD *)v22;
    v31 = swift_slowAlloc();
    v39 = v31;
    *(_DWORD *)v21 = 136446722;
    v33 = a5;
    swift_bridgeObjectRetain();
    v38 = sub_24470600C(a1, a2, &v39);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2112;
    v38 = (uint64_t)v17;
    v24 = v17;
    sub_244795448();
    *v23 = v17;

    *(_WORD *)(v21 + 22) = 2112;
    v38 = (uint64_t)v24;
    v25 = v24;
    sub_244795448();
    v23[1] = v17;

    _os_log_impl(&dword_2446FC000, v18, v19, "JITXPCListener(%{public}s): Accepting connection for: %@ from %@", (uint8_t *)v21, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
    swift_arrayDestroy();
    v26 = v23;
    a7 = v34;
    MEMORY[0x2495188D8](v26, -1, -1);
    v27 = v31;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v27, -1, -1);
    v28 = v21;
    a6 = v32;
    MEMORY[0x2495188D8](v28, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v36);
  objc_msgSend(v37, sel_setDelegate_, 0);
  v39 = (uint64_t)a6;
  v29 = a6;
  sub_244794A10();

  *a7 = 1;
}

uint64_t sub_244734EA0()
{
  return swift_retain();
}

unint64_t sub_244734EB4()
{
  return 0xD000000000000027;
}

uint64_t sub_244734ED0()
{
  return sub_244734EF0();
}

uint64_t sub_244734EF0()
{
  _QWORD v1[2];

  sub_2447954CC();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "Error type: ");
  sub_244795694();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  swift_bridgeObjectRetain();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_244734FC8()
{
  sub_244737A44();
  return sub_244794668();
}

uint64_t sub_244734FF0()
{
  sub_244737A44();
  return sub_244794638();
}

unint64_t sub_244735018()
{
  return 0xD000000000000031;
}

uint64_t sub_244735034()
{
  return sub_244734EF0();
}

uint64_t sub_244735054()
{
  sub_24473745C();
  return sub_244794668();
}

uint64_t sub_24473507C()
{
  sub_24473745C();
  return sub_244794638();
}

unint64_t sub_2447350A4()
{
  return 0xD000000000000031;
}

uint64_t sub_2447350C0()
{
  return sub_244734EF0();
}

uint64_t sub_2447350E0()
{
  sub_244737360();
  return sub_244794668();
}

uint64_t sub_244735108()
{
  sub_244737360();
  return sub_244794638();
}

unint64_t sub_244735130()
{
  return 0xD000000000000032;
}

uint64_t sub_24473514C()
{
  return sub_244734EF0();
}

uint64_t sub_24473516C()
{
  sub_244737B40();
  return sub_244794668();
}

uint64_t sub_244735194()
{
  sub_244737B40();
  return sub_244794638();
}

unint64_t sub_2447351BC()
{
  return 0xD000000000000031;
}

uint64_t sub_2447351D8()
{
  return sub_244734EF0();
}

uint64_t sub_2447351F8()
{
  sub_244737C3C();
  return sub_244794668();
}

uint64_t sub_244735220()
{
  sub_244737C3C();
  return sub_244794638();
}

unint64_t sub_244735248()
{
  return 0xD000000000000039;
}

uint64_t sub_244735264()
{
  return sub_244734EF0();
}

uint64_t sub_244735284()
{
  sub_24473784C();
  return sub_244794668();
}

uint64_t sub_2447352AC()
{
  sub_24473784C();
  return sub_244794638();
}

unint64_t sub_2447352D4()
{
  return 0xD000000000000036;
}

uint64_t sub_2447352F0()
{
  return sub_244734EF0();
}

uint64_t sub_244735310()
{
  sub_244737750();
  return sub_244794668();
}

uint64_t sub_244735338()
{
  sub_244737750();
  return sub_244794638();
}

unint64_t sub_244735360()
{
  return 0xD000000000000030;
}

uint64_t sub_24473537C()
{
  return sub_244734EF0();
}

uint64_t sub_24473539C()
{
  sub_244737654();
  return sub_244794668();
}

uint64_t sub_2447353C4()
{
  sub_244737654();
  return sub_244794638();
}

unint64_t sub_2447353EC()
{
  return 0xD000000000000024;
}

uint64_t sub_244735408()
{
  return sub_244734EF0();
}

uint64_t sub_244735428()
{
  sub_244737264();
  return sub_244794668();
}

uint64_t sub_244735450()
{
  sub_244737264();
  return sub_244794638();
}

unint64_t sub_244735478()
{
  return 0xD00000000000004BLL;
}

uint64_t sub_244735494()
{
  return sub_244734EF0();
}

uint64_t sub_2447354B4()
{
  sub_244737558();
  return sub_244794668();
}

uint64_t sub_2447354DC()
{
  sub_244737558();
  return sub_244794638();
}

unint64_t sub_244735504()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 4) & 1) != 0)
  {
    sub_2447954CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_2447954CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2447950E8();
    swift_bridgeObjectRelease();
    sub_2447950E8();
    sub_2447955B0();
  }
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return 0xD00000000000001ALL;
}

unint64_t sub_244735634()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_244735654()
{
  sub_244737948();
  return sub_244794668();
}

uint64_t sub_24473567C()
{
  sub_244737948();
  return sub_244794638();
}

uint64_t type metadata accessor for JITManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for JITManager()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for JITXPCListener()
{
  return objc_opt_self();
}

_QWORD *initializeBufferWithCopyOfBuffer for JITXPCListener.State(_QWORD *a1, uint64_t a2)
{
  id v3;
  unint64_t v4;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  sub_24473572C(*(id *)a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

id sub_24473572C(id result, unint64_t a2)
{
  unint64_t v2;
  id v3;

  v2 = a2 >> 62;
  if (a2 >> 62 == 2)
    return result;
  if ((_DWORD)v2 == 1)
  {
    v3 = result;
  }
  else if ((_DWORD)v2)
  {
    return result;
  }
  return (id)swift_retain();
}

void destroy for JITXPCListener.State(uint64_t a1)
{
  sub_244735780(*(void **)a1, *(_QWORD *)(a1 + 8));
}

void sub_244735780(void *a1, unint64_t a2)
{
  unint64_t v2;

  v2 = a2 >> 62;
  if (a2 >> 62 == 2)
  {

  }
  else
  {
    if ((_DWORD)v2 == 1)
    {

    }
    else if ((_DWORD)v2)
    {
      return;
    }
    swift_release();
  }
}

uint64_t *assignWithCopy for JITXPCListener.State(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  return sub_244735A10(a1, a2, a3, (void (*)(_QWORD, uint64_t))sub_24473572C, (void (*)(uint64_t, uint64_t))sub_244735780);
}

uint64_t assignWithTake for JITXPCListener.State(uint64_t a1, _OWORD *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *(void **)a1;
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  sub_244735780(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for JITXPCListener.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7D && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 125);
  v3 = (((*(_QWORD *)(a1 + 8) >> 57) >> 5) | (4
                                                          * ((*(_QWORD *)(a1 + 8) >> 57) & 0x18 | *(_QWORD *)(a1 + 8) & 7))) ^ 0x7F;
  if (v3 >= 0x7C)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for JITXPCListener.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7C)
  {
    *(_QWORD *)result = a2 - 125;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_2447358C0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8) >> 62;
  if ((_DWORD)v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t sub_2447358DC(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

_QWORD *sub_2447358EC(_QWORD *result, uint64_t a2)
{
  if (a2 < 3)
  {
    result[1] = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  }
  else
  {
    *result = (a2 - 3);
    result[1] = 0xC000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for JITXPCListener.State()
{
  return &type metadata for JITXPCListener.State;
}

ValueMetadata *type metadata accessor for JITXPCListener.SendableNSXPCConnection()
{
  return &type metadata for JITXPCListener.SendableNSXPCConnection;
}

uint64_t *initializeBufferWithCopyOfBuffer for PreviewsJITConfigurator.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_244735970(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

id sub_244735970(uint64_t a1, unint64_t a2)
{
  id result;
  id v3;

  if (a2 >> 62 == 1)
  {
    v3 = (id)(a2 & 0x3FFFFFFFFFFFFFFFLL);
    swift_retain();
    return v3;
  }
  else if (!(a2 >> 62))
  {
    return (id)swift_retain();
  }
  return result;
}

void destroy for PreviewsJITConfigurator.State(uint64_t a1)
{
  sub_2447359BC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

void sub_2447359BC(uint64_t a1, unint64_t a2)
{
  id v2;

  if (a2 >> 62 == 1)
  {
    v2 = (id)(a2 & 0x3FFFFFFFFFFFFFFFLL);
    swift_release();

  }
  else if (!(a2 >> 62))
  {
    swift_release();
  }
}

uint64_t *assignWithCopy for PreviewsJITConfigurator.State(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  return sub_244735A10(a1, a2, a3, (void (*)(_QWORD, uint64_t))sub_244735970, (void (*)(uint64_t, uint64_t))sub_2447359BC);
}

uint64_t *sub_244735A10(uint64_t *a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t), void (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *a2;
  v8 = a2[1];
  a4(*a2, v8);
  v9 = *a1;
  v10 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  a5(v9, v10);
  return a1;
}

uint64_t *assignWithTake for PreviewsJITConfigurator.State(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_2447359BC(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewsJITConfigurator.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 16382);
  v3 = (((*(_QWORD *)(a1 + 8) >> 50) >> 12) | (4
                                                           * ((*(_QWORD *)(a1 + 8) >> 50) & 0xC00 | ((*(_QWORD *)(a1 + 8) & 7) << 7) | (*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7))) ^ 0x3FFF;
  if (v3 >= 0x3FFD)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for PreviewsJITConfigurator.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  unint64_t v3;

  if (a2 > 0x3FFD)
  {
    *(_QWORD *)result = a2 - 16382;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3FFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x3FFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0xFFF | ((-a2 & 0x3FFF) << 12);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_QWORD *)(result + 8) = ((v3 >> 7) | (v3 << 50)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_244735B74(_QWORD *a1)
{
  uint64_t v1;

  v1 = a1[1] >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

_QWORD *sub_244735B90(_QWORD *result, uint64_t a2)
{
  uint64_t v2;

  if (a2 < 2)
  {
    v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
    *result &= 0xFFFFFFFFFFFFFF8uLL;
    result[1] = v2;
  }
  else
  {
    *result = 8 * (a2 - 2);
    result[1] = 0x8000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewsJITConfigurator.State()
{
  return &type metadata for PreviewsJITConfigurator.State;
}

ValueMetadata *type metadata accessor for JITManager.Storage()
{
  return &type metadata for JITManager.Storage;
}

void sub_244735BE0(uint64_t a1)
{
  sub_244733EB4(a1);
}

uint64_t sub_244735C00()
{
  id *v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_244735C44(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_244734AB4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(void **)(v1 + 56), a1);
}

uint64_t sub_244735C54()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_244735C80@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_244734840(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), a1);
}

uint64_t sub_244735C8C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_244735CC0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_244734574(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), a1);
}

void sub_244735CD0(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_244734350(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_244735CDC()
{
  unint64_t result;

  result = qword_25737ED68;
  if (!qword_25737ED68)
  {
    result = MEMORY[0x249518824](&unk_244799074, &type metadata for JITXPCListener.ReceivedConnectionBeforeSetup);
    atomic_store(result, (unint64_t *)&qword_25737ED68);
  }
  return result;
}

uint64_t sub_244735D20()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_244735D44()
{
  return sub_244731BA8();
}

id sub_244735D4C(_QWORD *a1)
{
  uint64_t v1;

  return sub_244731C34(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_244735D68(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_244735DA0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_244735DE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_244732D34(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(void (**)(_QWORD))(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), a1);
}

uint64_t sub_244735E0C(uint64_t a1)
{
  uint64_t *v1;

  return sub_2447331B4(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_244735E28()
{
  unint64_t result;

  result = qword_25737ED90;
  if (!qword_25737ED90)
  {
    result = MEMORY[0x249518824](&unk_244799034, &type metadata for PreviewsJITConfigurator.InvalidatedWhileSettingUpLinker);
    atomic_store(result, (unint64_t *)&qword_25737ED90);
  }
  return result;
}

unint64_t sub_244735E6C()
{
  unint64_t result;

  result = qword_25737ED98;
  if (!qword_25737ED98)
  {
    result = MEMORY[0x249518824](&unk_244798FF4, &type metadata for PreviewsJITConfigurator.FinishedWhileSettingUpLinker);
    atomic_store(result, (unint64_t *)&qword_25737ED98);
  }
  return result;
}

id sub_244735EB0(_QWORD *a1)
{
  uint64_t v1;

  return sub_24473393C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

unint64_t sub_244735ECC()
{
  unint64_t result;

  result = qword_25737EDD8;
  if (!qword_25737EDD8)
  {
    result = MEMORY[0x249518824](&unk_244798FB4, &type metadata for JITXPCListener.AskedToStartConnectionForJITXPCListenerNotInInitializedState);
    atomic_store(result, (unint64_t *)&qword_25737EDD8);
  }
  return result;
}

unint64_t sub_244735F10()
{
  unint64_t result;

  result = qword_25737EDE0;
  if (!qword_25737EDE0)
  {
    result = MEMORY[0x249518824](&unk_244798F74, &type metadata for PreviewsJITConfigurator.AskedToSetUpJITAfterConnectionInvalidated);
    atomic_store(result, (unint64_t *)&qword_25737EDE0);
  }
  return result;
}

unint64_t sub_244735F54()
{
  unint64_t result;

  result = qword_25737EDE8;
  if (!qword_25737EDE8)
  {
    result = MEMORY[0x249518824](&unk_244798F34, &type metadata for PreviewsJITConfigurator.AskedToSetUpJITAfterJITAlreadyConnected);
    atomic_store(result, (unint64_t *)&qword_25737EDE8);
  }
  return result;
}

unint64_t sub_244735F98()
{
  unint64_t result;

  result = qword_25737EDF0;
  if (!qword_25737EDF0)
  {
    result = MEMORY[0x249518824](&unk_244798EF4, &type metadata for PreviewsJITConfigurator.AskedToSetUpJITAfterAlreadySettingUpJIT);
    atomic_store(result, (unint64_t *)&qword_25737EDF0);
  }
  return result;
}

uint64_t sub_244735FE0()
{
  uint64_t v0;

  return sub_244733608(*(void **)(v0 + 16));
}

void sub_244735FEC(uint64_t a1)
{
  sub_244733728(a1);
}

uint64_t sub_244736004(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_244736014()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_244736048()
{
  uint64_t v0;

  sub_2447338B8(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_244736058()
{
  uint64_t v0;

  sub_244733848(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_244736064()
{
  unint64_t result;

  result = qword_25737EE08;
  if (!qword_25737EE08)
  {
    result = MEMORY[0x249518824](&unk_244798EB4, &type metadata for JITXPCListener.Invalidated);
    atomic_store(result, (unint64_t *)&qword_25737EE08);
  }
  return result;
}

void sub_2447360A8(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_244730174(a1, v2, a2);
}

uint64_t sub_2447360C0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x249518824](MEMORY[0x24BE76C78], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_244736100()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t objectdestroy_16Tm_0()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_244736154()
{
  uint64_t v0;

  sub_2447305EC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_244736160()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_244736188()
{
  uint64_t v0;

  return sub_244730864(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_244736194(uint64_t *a1)
{
  uint64_t v1;

  return sub_244730B2C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t type metadata accessor for JITManager.Storage.Record()
{
  uint64_t result;

  result = qword_25737EEB8;
  if (!qword_25737EEB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2447361E8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737EE30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_244736228(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for JITManager.Storage.Record();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24473626C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for JITManager.Storage.Record();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2447362A8()
{
  unint64_t result;

  result = qword_25737EE38;
  if (!qword_25737EE38)
  {
    result = MEMORY[0x249518824](&unk_244798E74, &type metadata for AgentJITConfigurationAlreadyStarted);
    atomic_store(result, (unint64_t *)&qword_25737EE38);
  }
  return result;
}

uint64_t sub_2447362EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244793E64();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_244736368()
{
  sub_244793E64();
  return sub_244730FC0();
}

uint64_t sub_24473639C@<X0>(uint64_t *a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t v2;

  return sub_2447310B4(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t objectdestroy_35Tm()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2447363F0()
{
  uint64_t *v0;

  sub_2447316D8(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t objectdestroy_53Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_24473642C()
{
  uint64_t *v0;

  sub_244731670(v0[2], v0[3], v0[4]);
}

unint64_t sub_244736438()
{
  unint64_t result;

  result = qword_25737EE50;
  if (!qword_25737EE50)
  {
    result = MEMORY[0x249518824](&unk_244798E34, &type metadata for PreviewsJITConfigurator.AgentInvalidatedWhileWaitingForJITConnection);
    atomic_store(result, (unint64_t *)&qword_25737EE50);
  }
  return result;
}

unint64_t sub_24473647C()
{
  unint64_t result;

  result = qword_25737EE58;
  if (!qword_25737EE58)
  {
    result = MEMORY[0x249518824](&unk_244798DF4, &type metadata for PreviewsJITConfigurator.AgentInvalidatedWhileSettingUpJITConnection);
    atomic_store(result, (unint64_t *)&qword_25737EE58);
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewsJITConfigurator.AgentInvalidatedWhileSettingUpJITConnection()
{
  return &type metadata for PreviewsJITConfigurator.AgentInvalidatedWhileSettingUpJITConnection;
}

ValueMetadata *type metadata accessor for PreviewsJITConfigurator.AgentInvalidatedWhileWaitingForJITConnection()
{
  return &type metadata for PreviewsJITConfigurator.AgentInvalidatedWhileWaitingForJITConnection;
}

ValueMetadata *type metadata accessor for AgentJITConfigurationAlreadyStarted()
{
  return &type metadata for AgentJITConfigurationAlreadyStarted;
}

uint64_t destroy for JITXPCListener.Invalidated()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s15PreviewShellKit14JITXPCListenerC11InvalidatedVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JITXPCListener.Invalidated(uint64_t a1, int *a2)
{
  int v3;

  v3 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JITXPCListener.Invalidated(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JITXPCListener.Invalidated(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JITXPCListener.Invalidated(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for JITXPCListener.Invalidated()
{
  return &type metadata for JITXPCListener.Invalidated;
}

ValueMetadata *type metadata accessor for PreviewsJITConfigurator.AskedToSetUpJITAfterAlreadySettingUpJIT()
{
  return &type metadata for PreviewsJITConfigurator.AskedToSetUpJITAfterAlreadySettingUpJIT;
}

ValueMetadata *type metadata accessor for PreviewsJITConfigurator.AskedToSetUpJITAfterJITAlreadyConnected()
{
  return &type metadata for PreviewsJITConfigurator.AskedToSetUpJITAfterJITAlreadyConnected;
}

ValueMetadata *type metadata accessor for PreviewsJITConfigurator.AskedToSetUpJITAfterConnectionInvalidated()
{
  return &type metadata for PreviewsJITConfigurator.AskedToSetUpJITAfterConnectionInvalidated;
}

ValueMetadata *type metadata accessor for JITXPCListener.AskedToStartConnectionForJITXPCListenerNotInInitializedState()
{
  return &type metadata for JITXPCListener.AskedToStartConnectionForJITXPCListenerNotInInitializedState;
}

ValueMetadata *type metadata accessor for PreviewsJITConfigurator.FinishedWhileSettingUpLinker()
{
  return &type metadata for PreviewsJITConfigurator.FinishedWhileSettingUpLinker;
}

ValueMetadata *type metadata accessor for PreviewsJITConfigurator.InvalidatedWhileSettingUpLinker()
{
  return &type metadata for PreviewsJITConfigurator.InvalidatedWhileSettingUpLinker;
}

ValueMetadata *type metadata accessor for JITXPCListener.ReceivedConnectionBeforeSetup()
{
  return &type metadata for JITXPCListener.ReceivedConnectionBeforeSetup;
}

void **sub_2447366DC(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (void **)((char *)a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *v7 = *(void **)((char *)a2 + v6);
    v7[1] = v9;
    v10 = (int *)type metadata accessor for BatchIdentity(0);
    v11 = v10[5];
    v12 = (char *)v7 + v11;
    v13 = &v8[v11];
    v14 = sub_244793E64();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v16 = v4;
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    v17 = v10[6];
    v18 = (char *)v7 + v17;
    v19 = &v8[v17];
    v20 = sub_244793EF4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = v10[7];
    v22 = (char *)v7 + v21;
    v23 = &v8[v21];
    v24 = sub_244793B28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    *((_BYTE *)v7 + v10[8]) = v8[v10[8]];
    v25 = v10[9];
    v26 = (char *)v7 + v25;
    v27 = &v8[v25];
    v28 = sub_2447940B0();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = sub_244793AD4();
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
  }
  return v5;
}

uint64_t sub_24473688C(id *a1, uint64_t a2)
{
  char *v4;
  int *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for BatchIdentity(0);
  v6 = &v4[v5[5]];
  v7 = sub_244793E64();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = &v4[v5[6]];
  v9 = sub_244793EF4();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = &v4[v5[7]];
  v11 = sub_244793B28();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = &v4[v5[9]];
  v13 = sub_2447940B0();
  v14 = *(_QWORD *)(v13 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v12, v13);
  return result;
}

void **sub_244736990(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (void **)((char *)a1 + v5);
  v7 = (char *)a2 + v5;
  v8 = *(uint64_t *)((char *)a2 + v5 + 8);
  *v6 = *(void **)((char *)a2 + v5);
  v6[1] = v8;
  v9 = (int *)type metadata accessor for BatchIdentity(0);
  v10 = v9[5];
  v11 = (char *)v6 + v10;
  v12 = &v7[v10];
  v13 = sub_244793E64();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v15 = v4;
  swift_bridgeObjectRetain();
  v14(v11, v12, v13);
  v16 = v9[6];
  v17 = (char *)v6 + v16;
  v18 = &v7[v16];
  v19 = sub_244793EF4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = v9[7];
  v21 = (char *)v6 + v20;
  v22 = &v7[v20];
  v23 = sub_244793B28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  *((_BYTE *)v6 + v9[8]) = v7[v9[8]];
  v24 = v9[9];
  v25 = (char *)v6 + v24;
  v26 = &v7[v24];
  v27 = sub_2447940B0();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = sub_244793AD4();
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  return a1;
}

void **sub_244736B18(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  uint64_t v32;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (void **)((char *)a1 + v9);
  v11 = (char *)a2 + v9;
  *v10 = *(void **)((char *)a2 + v9);
  v10[1] = *(void **)((char *)a2 + v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = (int *)type metadata accessor for BatchIdentity(0);
  v13 = v12[5];
  v14 = (char *)v10 + v13;
  v15 = &v11[v13];
  v16 = sub_244793E64();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = v12[6];
  v18 = (char *)v10 + v17;
  v19 = &v11[v17];
  v20 = sub_244793EF4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = v12[7];
  v22 = (char *)v10 + v21;
  v23 = &v11[v21];
  v24 = sub_244793B28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  *((_BYTE *)v10 + v12[8]) = v11[v12[8]];
  v25 = v12[9];
  v26 = (char *)v10 + v25;
  v27 = &v11[v25];
  v28 = sub_2447940B0();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  LODWORD(v11) = v30(v26, 1, v28);
  v31 = v30(v27, 1, v28);
  if (!(_DWORD)v11)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 24))(v26, v27, v28);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
    goto LABEL_6;
  }
  if (v31)
  {
LABEL_6:
    v32 = sub_244793AD4();
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  return a1;
}

_QWORD *sub_244736CF8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_OWORD *)((char *)a1 + v4) = *(_OWORD *)((char *)a2 + v4);
  v7 = (int *)type metadata accessor for BatchIdentity(0);
  v8 = v7[5];
  v9 = &v5[v8];
  v10 = &v6[v8];
  v11 = sub_244793E64();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[6];
  v13 = &v5[v12];
  v14 = &v6[v12];
  v15 = sub_244793EF4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = v7[7];
  v17 = &v5[v16];
  v18 = &v6[v16];
  v19 = sub_244793B28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  v5[v7[8]] = v6[v7[8]];
  v20 = v7[9];
  v21 = &v5[v20];
  v22 = &v6[v20];
  v23 = sub_2447940B0();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = sub_244793AD4();
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  return a1;
}

void **sub_244736E60(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  uint64_t v31;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (void **)((char *)a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = *(uint64_t *)((char *)a2 + v7 + 8);
  *v8 = *(void **)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = (int *)type metadata accessor for BatchIdentity(0);
  v12 = v11[5];
  v13 = (char *)v8 + v12;
  v14 = &v9[v12];
  v15 = sub_244793E64();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = v11[6];
  v17 = (char *)v8 + v16;
  v18 = &v9[v16];
  v19 = sub_244793EF4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = v11[7];
  v21 = (char *)v8 + v20;
  v22 = &v9[v20];
  v23 = sub_244793B28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  *((_BYTE *)v8 + v11[8]) = v9[v11[8]];
  v24 = v11[9];
  v25 = (char *)v8 + v24;
  v26 = &v9[v24];
  v27 = sub_2447940B0();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v9) = v29(v25, 1, v27);
  v30 = v29(v26, 1, v27);
  if (!(_DWORD)v9)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v25, v26, v27);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_6;
  }
  if (v30)
  {
LABEL_6:
    v31 = sub_244793AD4();
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  return a1;
}

uint64_t sub_24473702C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244737038(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for BatchIdentity(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_2447370B4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2447370C0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for BatchIdentity(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_244737134()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BatchIdentity(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2447371B4()
{
  unint64_t result;

  result = qword_25737EEF0;
  if (!qword_25737EEF0)
  {
    result = MEMORY[0x249518824](&unk_244798190, &type metadata for JITXPCListener.ReceivedConnectionBeforeSetup);
    atomic_store(result, (unint64_t *)&qword_25737EEF0);
  }
  return result;
}

unint64_t sub_2447371FC()
{
  unint64_t result;

  result = qword_25737EEF8;
  if (!qword_25737EEF8)
  {
    result = MEMORY[0x249518824](&unk_244798168, &type metadata for JITXPCListener.ReceivedConnectionBeforeSetup);
    atomic_store(result, (unint64_t *)&qword_25737EEF8);
  }
  return result;
}

unint64_t sub_244737240(uint64_t a1)
{
  unint64_t result;

  result = sub_244737264();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244737264()
{
  unint64_t result;

  result = qword_25737EF00;
  if (!qword_25737EF00)
  {
    result = MEMORY[0x249518824](&unk_2447981D8, &type metadata for JITXPCListener.ReceivedConnectionBeforeSetup);
    atomic_store(result, (unint64_t *)&qword_25737EF00);
  }
  return result;
}

unint64_t sub_2447372B0()
{
  unint64_t result;

  result = qword_25737EF08;
  if (!qword_25737EF08)
  {
    result = MEMORY[0x249518824](&unk_2447982B4, &type metadata for PreviewsJITConfigurator.InvalidatedWhileSettingUpLinker);
    atomic_store(result, (unint64_t *)&qword_25737EF08);
  }
  return result;
}

unint64_t sub_2447372F8()
{
  unint64_t result;

  result = qword_25737EF10;
  if (!qword_25737EF10)
  {
    result = MEMORY[0x249518824](&unk_24479828C, &type metadata for PreviewsJITConfigurator.InvalidatedWhileSettingUpLinker);
    atomic_store(result, (unint64_t *)&qword_25737EF10);
  }
  return result;
}

unint64_t sub_24473733C(uint64_t a1)
{
  unint64_t result;

  result = sub_244737360();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244737360()
{
  unint64_t result;

  result = qword_25737EF18;
  if (!qword_25737EF18)
  {
    result = MEMORY[0x249518824](&unk_2447982FC, &type metadata for PreviewsJITConfigurator.InvalidatedWhileSettingUpLinker);
    atomic_store(result, (unint64_t *)&qword_25737EF18);
  }
  return result;
}

unint64_t sub_2447373AC()
{
  unint64_t result;

  result = qword_25737EF20;
  if (!qword_25737EF20)
  {
    result = MEMORY[0x249518824](&unk_2447983D8, &type metadata for PreviewsJITConfigurator.FinishedWhileSettingUpLinker);
    atomic_store(result, (unint64_t *)&qword_25737EF20);
  }
  return result;
}

unint64_t sub_2447373F4()
{
  unint64_t result;

  result = qword_25737EF28;
  if (!qword_25737EF28)
  {
    result = MEMORY[0x249518824](&unk_2447983B0, &type metadata for PreviewsJITConfigurator.FinishedWhileSettingUpLinker);
    atomic_store(result, (unint64_t *)&qword_25737EF28);
  }
  return result;
}

unint64_t sub_244737438(uint64_t a1)
{
  unint64_t result;

  result = sub_24473745C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24473745C()
{
  unint64_t result;

  result = qword_25737EF30;
  if (!qword_25737EF30)
  {
    result = MEMORY[0x249518824](&unk_244798420, &type metadata for PreviewsJITConfigurator.FinishedWhileSettingUpLinker);
    atomic_store(result, (unint64_t *)&qword_25737EF30);
  }
  return result;
}

unint64_t sub_2447374A8()
{
  unint64_t result;

  result = qword_25737EF38;
  if (!qword_25737EF38)
  {
    result = MEMORY[0x249518824](&unk_2447984FC, &type metadata for JITXPCListener.AskedToStartConnectionForJITXPCListenerNotInInitializedState);
    atomic_store(result, (unint64_t *)&qword_25737EF38);
  }
  return result;
}

unint64_t sub_2447374F0()
{
  unint64_t result;

  result = qword_25737EF40;
  if (!qword_25737EF40)
  {
    result = MEMORY[0x249518824](&unk_2447984D4, &type metadata for JITXPCListener.AskedToStartConnectionForJITXPCListenerNotInInitializedState);
    atomic_store(result, (unint64_t *)&qword_25737EF40);
  }
  return result;
}

unint64_t sub_244737534(uint64_t a1)
{
  unint64_t result;

  result = sub_244737558();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244737558()
{
  unint64_t result;

  result = qword_25737EF48;
  if (!qword_25737EF48)
  {
    result = MEMORY[0x249518824](&unk_244798544, &type metadata for JITXPCListener.AskedToStartConnectionForJITXPCListenerNotInInitializedState);
    atomic_store(result, (unint64_t *)&qword_25737EF48);
  }
  return result;
}

unint64_t sub_2447375A4()
{
  unint64_t result;

  result = qword_25737EF50;
  if (!qword_25737EF50)
  {
    result = MEMORY[0x249518824](&unk_244798620, &type metadata for PreviewsJITConfigurator.AskedToSetUpJITAfterConnectionInvalidated);
    atomic_store(result, (unint64_t *)&qword_25737EF50);
  }
  return result;
}

unint64_t sub_2447375EC()
{
  unint64_t result;

  result = qword_25737EF58;
  if (!qword_25737EF58)
  {
    result = MEMORY[0x249518824](&unk_2447985F8, &type metadata for PreviewsJITConfigurator.AskedToSetUpJITAfterConnectionInvalidated);
    atomic_store(result, (unint64_t *)&qword_25737EF58);
  }
  return result;
}

unint64_t sub_244737630(uint64_t a1)
{
  unint64_t result;

  result = sub_244737654();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244737654()
{
  unint64_t result;

  result = qword_25737EF60;
  if (!qword_25737EF60)
  {
    result = MEMORY[0x249518824](&unk_244798668, &type metadata for PreviewsJITConfigurator.AskedToSetUpJITAfterConnectionInvalidated);
    atomic_store(result, (unint64_t *)&qword_25737EF60);
  }
  return result;
}

unint64_t sub_2447376A0()
{
  unint64_t result;

  result = qword_25737EF68;
  if (!qword_25737EF68)
  {
    result = MEMORY[0x249518824](&unk_244798744, &type metadata for PreviewsJITConfigurator.AskedToSetUpJITAfterJITAlreadyConnected);
    atomic_store(result, (unint64_t *)&qword_25737EF68);
  }
  return result;
}

unint64_t sub_2447376E8()
{
  unint64_t result;

  result = qword_25737EF70;
  if (!qword_25737EF70)
  {
    result = MEMORY[0x249518824](&unk_24479871C, &type metadata for PreviewsJITConfigurator.AskedToSetUpJITAfterJITAlreadyConnected);
    atomic_store(result, (unint64_t *)&qword_25737EF70);
  }
  return result;
}

unint64_t sub_24473772C(uint64_t a1)
{
  unint64_t result;

  result = sub_244737750();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244737750()
{
  unint64_t result;

  result = qword_25737EF78;
  if (!qword_25737EF78)
  {
    result = MEMORY[0x249518824](&unk_24479878C, &type metadata for PreviewsJITConfigurator.AskedToSetUpJITAfterJITAlreadyConnected);
    atomic_store(result, (unint64_t *)&qword_25737EF78);
  }
  return result;
}

unint64_t sub_24473779C()
{
  unint64_t result;

  result = qword_25737EF80;
  if (!qword_25737EF80)
  {
    result = MEMORY[0x249518824](&unk_244798868, &type metadata for PreviewsJITConfigurator.AskedToSetUpJITAfterAlreadySettingUpJIT);
    atomic_store(result, (unint64_t *)&qword_25737EF80);
  }
  return result;
}

unint64_t sub_2447377E4()
{
  unint64_t result;

  result = qword_25737EF88;
  if (!qword_25737EF88)
  {
    result = MEMORY[0x249518824](&unk_244798840, &type metadata for PreviewsJITConfigurator.AskedToSetUpJITAfterAlreadySettingUpJIT);
    atomic_store(result, (unint64_t *)&qword_25737EF88);
  }
  return result;
}

unint64_t sub_244737828(uint64_t a1)
{
  unint64_t result;

  result = sub_24473784C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24473784C()
{
  unint64_t result;

  result = qword_25737EF90;
  if (!qword_25737EF90)
  {
    result = MEMORY[0x249518824](&unk_2447988B0, &type metadata for PreviewsJITConfigurator.AskedToSetUpJITAfterAlreadySettingUpJIT);
    atomic_store(result, (unint64_t *)&qword_25737EF90);
  }
  return result;
}

unint64_t sub_244737898()
{
  unint64_t result;

  result = qword_25737EF98;
  if (!qword_25737EF98)
  {
    result = MEMORY[0x249518824](&unk_24479898C, &type metadata for JITXPCListener.Invalidated);
    atomic_store(result, (unint64_t *)&qword_25737EF98);
  }
  return result;
}

unint64_t sub_2447378E0()
{
  unint64_t result;

  result = qword_25737EFA0;
  if (!qword_25737EFA0)
  {
    result = MEMORY[0x249518824](&unk_244798964, &type metadata for JITXPCListener.Invalidated);
    atomic_store(result, (unint64_t *)&qword_25737EFA0);
  }
  return result;
}

unint64_t sub_244737924(uint64_t a1)
{
  unint64_t result;

  result = sub_244737948();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244737948()
{
  unint64_t result;

  result = qword_25737EFA8;
  if (!qword_25737EFA8)
  {
    result = MEMORY[0x249518824](&unk_2447989D4, &type metadata for JITXPCListener.Invalidated);
    atomic_store(result, (unint64_t *)&qword_25737EFA8);
  }
  return result;
}

unint64_t sub_244737994()
{
  unint64_t result;

  result = qword_25737EFB0;
  if (!qword_25737EFB0)
  {
    result = MEMORY[0x249518824](&unk_244798AB0, &type metadata for AgentJITConfigurationAlreadyStarted);
    atomic_store(result, (unint64_t *)&qword_25737EFB0);
  }
  return result;
}

unint64_t sub_2447379DC()
{
  unint64_t result;

  result = qword_25737EFB8;
  if (!qword_25737EFB8)
  {
    result = MEMORY[0x249518824](&unk_244798A88, &type metadata for AgentJITConfigurationAlreadyStarted);
    atomic_store(result, (unint64_t *)&qword_25737EFB8);
  }
  return result;
}

unint64_t sub_244737A20(uint64_t a1)
{
  unint64_t result;

  result = sub_244737A44();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244737A44()
{
  unint64_t result;

  result = qword_25737EFC0;
  if (!qword_25737EFC0)
  {
    result = MEMORY[0x249518824](&unk_244798AF8, &type metadata for AgentJITConfigurationAlreadyStarted);
    atomic_store(result, (unint64_t *)&qword_25737EFC0);
  }
  return result;
}

unint64_t sub_244737A90()
{
  unint64_t result;

  result = qword_25737EFC8;
  if (!qword_25737EFC8)
  {
    result = MEMORY[0x249518824](&unk_244798BD4, &type metadata for PreviewsJITConfigurator.AgentInvalidatedWhileWaitingForJITConnection);
    atomic_store(result, (unint64_t *)&qword_25737EFC8);
  }
  return result;
}

unint64_t sub_244737AD8()
{
  unint64_t result;

  result = qword_25737EFD0;
  if (!qword_25737EFD0)
  {
    result = MEMORY[0x249518824](&unk_244798BAC, &type metadata for PreviewsJITConfigurator.AgentInvalidatedWhileWaitingForJITConnection);
    atomic_store(result, (unint64_t *)&qword_25737EFD0);
  }
  return result;
}

unint64_t sub_244737B1C(uint64_t a1)
{
  unint64_t result;

  result = sub_244737B40();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244737B40()
{
  unint64_t result;

  result = qword_25737EFD8;
  if (!qword_25737EFD8)
  {
    result = MEMORY[0x249518824](&unk_244798C1C, &type metadata for PreviewsJITConfigurator.AgentInvalidatedWhileWaitingForJITConnection);
    atomic_store(result, (unint64_t *)&qword_25737EFD8);
  }
  return result;
}

unint64_t sub_244737B8C()
{
  unint64_t result;

  result = qword_25737EFE0;
  if (!qword_25737EFE0)
  {
    result = MEMORY[0x249518824](&unk_244798CF8, &type metadata for PreviewsJITConfigurator.AgentInvalidatedWhileSettingUpJITConnection);
    atomic_store(result, (unint64_t *)&qword_25737EFE0);
  }
  return result;
}

unint64_t sub_244737BD4()
{
  unint64_t result;

  result = qword_25737EFE8;
  if (!qword_25737EFE8)
  {
    result = MEMORY[0x249518824](&unk_244798CD0, &type metadata for PreviewsJITConfigurator.AgentInvalidatedWhileSettingUpJITConnection);
    atomic_store(result, (unint64_t *)&qword_25737EFE8);
  }
  return result;
}

unint64_t sub_244737C18(uint64_t a1)
{
  unint64_t result;

  result = sub_244737C3C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244737C3C()
{
  unint64_t result;

  result = qword_25737EFF0;
  if (!qword_25737EFF0)
  {
    result = MEMORY[0x249518824](&unk_244798D40, &type metadata for PreviewsJITConfigurator.AgentInvalidatedWhileSettingUpJITConnection);
    atomic_store(result, (unint64_t *)&qword_25737EFF0);
  }
  return result;
}

uint64_t dispatch thunk of NonUIContentProvider.performUpdate(updatePayload:previewType:context:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of static NonUIContentProvider.create(for:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 24) + *(_QWORD *)(a5 + 24));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_244706734;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of NonUIContentProvider.stop()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of NonUIContentProvider.prepareForRelaunch()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of NonUIContentProviderBox.init(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of static NonUIContentProviderBox.variantGroups(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of static NonUIContentProviderBox.providerDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of NonUIContentProviderBox.performUpdate(using:updatePayload:previewType:agentContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t dispatch thunk of NonUIContentProviderBox.stop(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of NonUIContentProviderBox.prepareForRelaunch(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_244737D7C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_244737DD8(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_244737E14(a1);
  return v2;
}

_QWORD *sub_244737E14(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(*v1 + 88);
  sub_2447946F8();
  v1[4] = sub_2447946EC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737F098);
  v1[5] = sub_244794A70();
  v1[6] = 0;
  v6 = sub_244793E88();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v4;
  *(_QWORD *)(v9 + 24) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v9 + v8, a1, v6);
  v2[2] = &unk_25737F0D0;
  v2[3] = v9;
  return v2;
}

uint64_t sub_244737F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 24) + *(_QWORD *)(a5 + 24));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_244706734;
  return v13(a1, a3, a2, a4, a5);
}

uint64_t sub_244737FAC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 88) + 8) + 40))();
}

uint64_t sub_244737FD8()
{
  return sub_244795694();
}

uint64_t sub_244737FE4(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  _QWORD *v48;
  _DWORD *v49;
  int v50;
  char v51;
  uint64_t v52;

  v5 = v4;
  v36 = a4;
  v38 = a2;
  v7 = *v4;
  v40 = a3;
  v41 = v7;
  v8 = sub_24479450C();
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v42 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_2447942E4();
  v45 = *(_QWORD *)(v37 - 8);
  v39 = *(_QWORD *)(v45 + 64);
  MEMORY[0x24BDAC7A8](v37);
  v47 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_244793B10();
  v33 = *(_QWORD *)(v34 - 8);
  v11 = *(_QWORD *)(v33 + 64);
  MEMORY[0x24BDAC7A8](v34);
  v46 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_244794494();
  v32 = *(_QWORD *)(v12 - 8);
  v30 = v12;
  v13 = *(_QWORD *)(v32 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v31 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = v4[5];
  swift_getKeyPath();
  v50 = *a1;
  v14 = v50;
  v51 = 0;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737F088);
  sub_244739BB4();
  sub_244794860();
  swift_release();
  swift_release();
  swift_retain();
  v15 = v36;
  sub_24473B218();
  swift_release();
  LODWORD(v52) = v14;
  v48 = v4;
  v49 = a1;
  v35 = sub_2447946D4();
  v16 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))((char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v38, v12);
  v17 = v33;
  v18 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v46, v40, v34);
  v19 = v45;
  v20 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v47, v15, v37);
  v21 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v22 = (v13 + *(unsigned __int8 *)(v17 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v23 = (v11 + *(unsigned __int8 *)(v19 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v24 = (v39 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = swift_allocObject();
  v26 = v41;
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v41 + 80);
  *(_QWORD *)(v25 + 24) = *(_QWORD *)(v26 + 88);
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v25 + v21, v31, v30);
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v25 + v22, v46, v18);
  (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v25 + v23, v47, v20);
  *(_QWORD *)(v25 + v24) = v5;
  swift_retain();
  v27 = v42;
  sub_2447944E8();
  v28 = sub_244794974();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v44);
  return v28;
}

uint64_t sub_2447383B0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  char v16;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v23 = *v2;
  v24 = a1;
  v4 = *(_QWORD *)(v23 + 80);
  v22 = sub_24479540C();
  v20 = *(_QWORD *)(v22 - 8);
  v5 = MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v19 - v6;
  v8 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v21 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_244794290();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77EC0];
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794284();
  sub_24470665C(&qword_25737F0B0, v11, MEMORY[0x24BE77EE0]);
  sub_244795160();
  sub_244795160();
  if (v27 == v25 && v28 == v26)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v10);
LABEL_5:
    sub_244738DCC(v24);
    v16 = 1;
    return v16 & 1;
  }
  v19 = a2;
  v15 = sub_2447955D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v10);
  if ((v15 & 1) != 0)
    goto LABEL_5;
  sub_244738A8C((uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v22);
    v16 = 0;
  }
  else
  {
    v18 = v21;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v21, v7, v4);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v23 + 88) + 8) + 32))(v24, v19, v4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v18, v4);
  }
  return v16 & 1;
}

uint64_t sub_244738614(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v4 = *a1;
  v5 = type metadata accessor for PreviewAgentConnector();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v4 + 80);
  sub_2447949E0();
  v12 = sub_244795220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
  sub_244739E30(a2, (uint64_t)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v11;
  v14[3] = *(_QWORD *)(v4 + 88);
  v14[4] = a1;
  sub_244739F98((uint64_t)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v14 + v13);
  swift_retain();
  return sub_2447949BC();
}

uint64_t sub_2447387AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2447387C8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD, _QWORD);

  v3 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v0[3] + 16) + *(_QWORD *)(v0[3] + 16));
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = v1;
  *v1 = v0;
  v1[1] = sub_244726810;
  return v3(v0[2], v0[4]);
}

uint64_t sub_24473882C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[5];
  uint64_t v30;

  v26 = a3;
  v27 = a4;
  v24 = a5;
  v25 = a1;
  v6 = *a5;
  v23 = sub_24479450C();
  v7 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v6 + 80);
  v28 = *(_QWORD *)(v6 + 88);
  v11 = *(_QWORD *)(v28 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v15 = (char *)&v22 - v14;
  v16 = v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2, v10, v11);
  if (!v16)
  {
    v22 = v13;
    v30 = AssociatedTypeWitness;
    v29[3] = v6;
    v29[4] = &off_251574B50;
    v29[0] = v24;
    v17 = v28;
    v18 = *(void (**)(char *, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(v28 + 16);
    swift_retain();
    v18(v15, v26, v27, v29, v10, v17);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v30);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
    v20 = swift_allocObject();
    v21 = v28;
    *(_QWORD *)(v20 + 16) = v10;
    *(_QWORD *)(v20 + 24) = v21;
    sub_244794494();
    sub_2447944E8();
    AssociatedTypeWitness = sub_2447948B4();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v23);
  }
  return AssociatedTypeWitness;
}

uint64_t sub_244738A7C()
{
  return sub_244795694();
}

uint64_t sub_244738A8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737F088);
  sub_244739BB4();
  sub_244794884();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737F098);
  return sub_244738C34((void (*)(char *, char *))sub_244739C00, (uint64_t)v1, MEMORY[0x24BEE4078], *(_QWORD *)(v3 + 80), v4, a1);
}

uint64_t sub_244738B68@<X0>(int *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v10;
  uint64_t v11;

  v4 = *a2;
  v5 = *a1;
  v6 = sub_2447946E0();
  v10 = v5;
  v7 = *(_QWORD *)(v4 + 80);
  v8 = sub_2447949E0();
  MEMORY[0x249517B64](&v11, &v10, v6, MEMORY[0x24BEE3F88], v8, MEMORY[0x24BEE3F98]);
  swift_bridgeObjectRelease();
  if (!v11)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a3, 1, 1, v7);
  sub_2447948FC();
  return swift_release();
}

uint64_t sub_244738C34@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *);
  uint64_t v29;

  v26 = a5;
  v27 = a2;
  v28 = a1;
  v29 = a6;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v10);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) == 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(v29, 1, 1, a4);
  v25 = a3;
  v24 = v26;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
  v28(v18, v12);
  result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  if (v6)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v24, v12, v25);
  return result;
}

uint64_t sub_244738DCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD v16[3];
  uint64_t v17;

  v2 = v1;
  v4 = sub_244794AAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A94();
  swift_retain();
  v8 = sub_244794AA0();
  v9 = sub_244795370();
  if (os_log_type_enabled(v8, v9))
  {
    v16[1] = a1;
    v10 = swift_slowAlloc();
    v16[0] = v4;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v17 = v12;
    *(_DWORD *)v11 = 136315138;
    v13 = sub_244795694();
    v16[2] = sub_24470600C(v13, v14, &v17);
    sub_244795448();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2446FC000, v8, v9, "Received incoming remote events message stream for %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v12, -1, -1);
    MEMORY[0x2495188D8](v11, -1, -1);

    (*(void (**)(char *, _QWORD))(v5 + 8))(v7, v16[0]);
  }
  else
  {

    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_244793F9C();
  sub_24470665C(&qword_25737F0B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE77978], MEMORY[0x24BE77970]);
  *(_QWORD *)(v2 + 48) = sub_244793CB4();
  return swift_release();
}

uint64_t sub_244738FE4(int a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  int v16;
  char v17;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = sub_24479540C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v15 - v8;
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737F088);
  sub_244739BB4();
  sub_244794884();
  if ((v17 & 1) == 0 && v16 == a1)
  {
    sub_244738A8C((uint64_t)v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v4);
      v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 88) + 32))(v4);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v4);
      return v13;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  return sub_2447949D4();
}

uint64_t sub_2447391D4(int a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  int v16;
  char v17;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = sub_24479540C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v15 - v8;
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737F088);
  sub_244739BB4();
  sub_244794884();
  if ((v17 & 1) == 0 && v16 == a1)
  {
    sub_244738A8C((uint64_t)v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v4);
      v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 88) + 40))(v4);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v4);
      return v13;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  return sub_2447949D4();
}

uint64_t sub_2447393C4(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t result;
  _DWORD v12[4];

  v2 = v1;
  v4 = sub_244794AAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A94();
  v8 = sub_244794AA0();
  v9 = sub_244795370();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v10 = 67240192;
    v12[3] = a1;
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v8, v9, "Preview agent with pid %{public}d crashed", v10, 8u);
    MEMORY[0x2495188D8](v10, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (*(_QWORD *)(v2 + 48))
  {
    *(_DWORD *)(swift_allocObject() + 16) = a1;
    swift_retain();
    sub_2447948F0();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24473953C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  int v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;

  v32 = a2;
  v31 = a1;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F0C0);
  v2 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v28 = v3;
  v29 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_244793F9C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_244794AAC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v28 - v12;
  sub_244794A94();
  v14 = sub_244794AA0();
  v15 = sub_244795394();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v16 = 67240192;
    v33 = v32;
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v14, v15, "Notifying host that crash occurred for %{public}d", v16, 8u);
    MEMORY[0x2495188D8](v16, -1, -1);
  }

  v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v13, v7);
  *(_DWORD *)v6 = v32;
  v6[4] = 0;
  swift_storeEnumTagMultiPayload();
  v18 = v30;
  sub_244793CD8();
  sub_24473A084((uint64_t)v6);
  sub_244794A94();
  v19 = sub_244794AA0();
  v20 = sub_244795394();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v21 = 67240192;
    v34 = v32;
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v19, v20, "Gathering crash details for %{public}d", v21, 8u);
    MEMORY[0x2495188D8](v21, -1, -1);
  }

  v17(v11, v7);
  sub_244793978();
  v22 = (void *)sub_24479396C();
  v23 = v32;
  sub_244793954();

  v24 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v29, v31, v18);
  v25 = (*(unsigned __int8 *)(v2 + 80) + 20) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v26 = swift_allocObject();
  *(_DWORD *)(v26 + 16) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v26 + v25, v24, v18);
  sub_2447948F0();
  swift_release();
  return swift_release();
}

uint64_t sub_244739894(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  int v14;
  uint64_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  _DWORD v20[4];

  v4 = sub_244793F9C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_244794AAC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A94();
  v11 = sub_244794AA0();
  v12 = sub_244795394();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = a2;
    v15 = a1;
    v16 = v13;
    *(_DWORD *)v13 = 67240192;
    v20[3] = v14;
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v11, v12, "Sending host crash details for %{public}d", v16, 8u);
    v17 = v16;
    a1 = v15;
    MEMORY[0x2495188D8](v17, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v18 = sub_2447943EC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v6, a1, v18);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737F0C0);
  sub_244793CD8();
  return sub_24473A084((uint64_t)v6);
}

uint64_t sub_244739A5C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_244739A90()
{
  sub_244739A5C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NonUIBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NonUIBox);
}

uint64_t sub_244739ABC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_244737DD8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_244739AE8(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_244737FE4(a1, a2, a3, a4);
}

uint64_t sub_244739B08(int a1)
{
  return sub_244738FE4(a1);
}

uint64_t sub_244739B28(int a1)
{
  return sub_2447391D4(a1);
}

uint64_t sub_244739B48(int a1)
{
  return sub_2447393C4(a1);
}

uint64_t sub_244739B68()
{
  return sub_244738A7C();
}

uint64_t sub_244739B88(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x249518824](&unk_244799178);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_244739BB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25737F090;
  if (!qword_25737F090)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737F088);
    result = MEMORY[0x249518824](MEMORY[0x24BE76C78], v1);
    atomic_store(result, (unint64_t *)&qword_25737F090);
  }
  return result;
}

uint64_t sub_244739C00@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_244738B68(a1, v2, a2);
}

uint64_t sub_244739C1C()
{
  uint64_t v0;

  return sub_244738614(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_244739C34()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v12 = sub_244794494();
  v1 = *(_QWORD *)(v12 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v11 = sub_244793B10();
  v4 = *(_QWORD *)(v11 - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = sub_2447942E4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v5 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v2, v12);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v11);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244739D40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v3 = *(_QWORD *)(sub_244794494() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(sub_244793B10() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(sub_2447942E4() - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_24473882C(a1, v1 + v4, v1 + v7, v1 + v10, *(_QWORD **)(v1 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_244739DF4()
{
  return swift_deallocObject();
}

uint64_t sub_244739E04()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 8) + 56))();
}

uint64_t sub_244739E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PreviewAgentConnector();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_244739E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for PreviewAgentConnector();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 40) & ~v2;
  swift_release();
  v4 = v0 + v3 + *(int *)(v1 + 20);
  v5 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244739F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PreviewAgentConnector();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_244739FDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PreviewAgentConnector() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = v1 + ((v4 + 40) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_244707DE8;
  v7[3] = v5;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_24473A06C()
{
  return swift_deallocObject();
}

uint64_t sub_24473A07C(uint64_t a1)
{
  uint64_t v1;

  return sub_24473953C(a1, *(_DWORD *)(v1 + 16));
}

uint64_t sub_24473A084(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244793F9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24473A0C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F0C0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 20) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_24473A124(uint64_t a1)
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25737F0C0);
  return sub_244739894(a1, *(_DWORD *)(v1 + 16));
}

uint64_t sub_24473A168()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_244793E88();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_24473A1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_244793E88() - 8) + 80);
  v9 = v2 + ((v8 + 32) & ~v8);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_244707DE8;
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v7 + 24) + *(_QWORD *)(v7 + 24));
  v11 = (_QWORD *)swift_task_alloc();
  v10[2] = v11;
  *v11 = v10;
  v11[1] = sub_244706734;
  return v13(a1, v9, a2, v6, v7);
}

ValueMetadata *type metadata accessor for HostShellMessageStreamHub()
{
  return &type metadata for HostShellMessageStreamHub;
}

uint64_t sub_24473A2A0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_244793F60();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v4 = sub_244793D14();
  v2[7] = v4;
  v2[8] = *(_QWORD *)(v4 - 8);
  v2[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24473A328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 16))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 32));
  sub_244793CA8();
  sub_24473B5A4(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24473A3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[9] = a4;
  v6[10] = a6;
  v7 = sub_244794AAC();
  v6[11] = v7;
  v6[12] = *(_QWORD *)(v7 - 8);
  v6[13] = swift_task_alloc();
  v8 = sub_244794608();
  v6[14] = v8;
  v6[15] = *(_QWORD *)(v8 - 8);
  v6[16] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE38);
  v6[17] = v9;
  v6[18] = *(_QWORD *)(v9 - 8);
  v6[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24473A468()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E630);
  sub_244795244();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v1;
  *v1 = v0;
  v1[1] = sub_24473A4F0;
  return sub_24479528C();
}

uint64_t sub_24473A4F0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24473A544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 168) = v1;
  if (v1)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
    *(_QWORD *)(v0 + 176) = v2;
    *(_QWORD *)(v0 + 40) = v2;
    *(_QWORD *)(v0 + 48) = sub_24470130C((unint64_t *)&qword_25737E178, &qword_25737D370, MEMORY[0x24BE78120]);
    *(_QWORD *)(v0 + 16) = v1;
    swift_retain();
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v3;
    *v3 = v0;
    v3[1] = sub_24473A638;
    return sub_244793AF8();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_24473A638()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 192) = v0;
  swift_task_dealloc();
  if (!v0)
    __swift_destroy_boxed_opaque_existential_1Tm(v2 + 16);
  return swift_task_switch();
}

uint64_t sub_24473A6A4()
{
  uint64_t v0;
  _QWORD *v1;

  swift_release();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v1;
  *v1 = v0;
  v1[1] = sub_24473A4F0;
  return sub_24479528C();
}

uint64_t sub_24473A710()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v1 = (void *)v0[24];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  sub_244794A7C();
  v2 = v1;
  v3 = v1;
  v4 = sub_244794AA0();
  v5 = sub_24479537C();
  v6 = os_log_type_enabled(v4, v5);
  v7 = (void *)v0[24];
  if (v6)
  {
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v8 + 4) = v11;
    *v9 = v11;

    _os_log_impl(&dword_2446FC000, v4, v5, "Failed to attach host connection to host-shell message pipe: %@", (uint8_t *)v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v9, -1, -1);
    MEMORY[0x2495188D8](v8, -1, -1);
  }
  else
  {

  }
  v12 = (void *)v0[24];
  v13 = v0[21];
  v15 = v0[15];
  v14 = v0[16];
  v16 = v0[13];
  v21 = v0[14];
  v18 = v0[11];
  v17 = v0[12];

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  v0[8] = v13;
  sub_2447945FC();
  sub_24470130C(&qword_25737D378, &qword_25737D370, MEMORY[0x24BE78128]);
  sub_24479459C();

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v21);
  swift_release();
  v19 = (_QWORD *)swift_task_alloc();
  v0[20] = v19;
  *v19 = v0;
  v19[1] = sub_24473A4F0;
  return sub_24479528C();
}

uint64_t sub_24473A958()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25737F108);
  result = sub_244794A70();
  qword_25737F0D8 = result;
  return result;
}

uint64_t sub_24473A99C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t updated;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;

  v33 = a4;
  v36 = a2;
  v37 = a3;
  v5 = sub_244793F18();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v31 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F100);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v31 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v31 - v18;
  sub_2447942D8();
  v38 = a1;
  v20 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v21 = sub_24470F6F0((uint64_t)v10), (v22 & 1) != 0))
  {
    v23 = v21;
    v32 = *(_QWORD *)(v20 + 56);
    updated = type metadata accessor for UpdateRegistry.Update();
    v25 = *(_QWORD *)(updated - 8);
    sub_24473B560(v32 + *(_QWORD *)(v25 + 72) * v23, (uint64_t)v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v19, 0, 1, updated);
  }
  else
  {
    updated = type metadata accessor for UpdateRegistry.Update();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 56))(v19, 1, 1, updated);
  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v35);
  sub_2447942D8();
  sub_2447942CC();
  type metadata accessor for UpdateRegistry.Update();
  v26 = &v17[*(int *)(updated + 20)];
  v27 = v37;
  *(_QWORD *)v26 = v36;
  *((_QWORD *)v26 + 1) = v27;
  *(_QWORD *)&v17[*(int *)(updated + 24)] = MEMORY[0x24BEE4AF8];
  v28 = *(_QWORD *)(updated - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v17, 0, 1, updated);
  swift_retain();
  sub_244789170((uint64_t)v17, (uint64_t)v8);
  sub_24473B4DC((uint64_t)v19, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v14, 1, updated) == 1)
  {
    result = sub_244701444((uint64_t)v14, &qword_25737F100);
    v30 = 0;
  }
  else
  {
    v30 = *(_QWORD *)&v14[*(int *)(updated + 24)];
    swift_bridgeObjectRetain();
    result = sub_24473B524((uint64_t)v14);
  }
  *v33 = v30;
  return result;
}

uint64_t sub_24473AC20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t updated;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  char v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;

  v61 = a3;
  v73 = a4;
  v6 = sub_244793D14();
  v65 = *(_QWORD *)(v6 - 8);
  v66 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v64 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_244793DA4();
  v68 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v58 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F128);
  MEMORY[0x24BDAC7A8](v67);
  v69 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F130);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v63 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v56 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F100);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v62 = (uint64_t)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v56 - v18;
  v20 = sub_244793F18();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v60 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v56 - v24;
  updated = type metadata accessor for UpdateRegistry.Update();
  v27 = *(_QWORD *)(updated - 8);
  MEMORY[0x24BDAC7A8](updated);
  v71 = (uint64_t)&v56 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = a2;
  sub_244793EB8();
  v59 = a1;
  v29 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v30 = sub_24470F6F0((uint64_t)v25), (v31 & 1) != 0))
  {
    sub_24473B560(*(_QWORD *)(v29 + 56) + *(_QWORD *)(v27 + 72) * v30, (uint64_t)v19);
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
    v32(v19, 0, 1, updated);
  }
  else
  {
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
    v32(v19, 1, 1, updated);
  }
  (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v19, 1, updated) == 1)
  {
    result = sub_244701444((uint64_t)v19, &qword_25737F100);
LABEL_20:
    v55 = v73;
    *v73 = 0;
    v55[1] = 0;
    return result;
  }
  v56 = v32;
  v57 = updated;
  v34 = v71;
  sub_24473B8C8((uint64_t)v19, v71);
  sub_244793EAC();
  v35 = v68;
  v36 = v70;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v14, 0, 1, v70);
  v37 = v69;
  v38 = v69 + *(int *)(v67 + 48);
  sub_24473B90C(v34, v69);
  sub_24473B90C((uint64_t)v14, v38);
  v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  if (v39(v37, 1, v36) != 1)
  {
    v40 = v63;
    sub_24473B90C(v37, v63);
    if (v39(v38, 1, v36) != 1)
    {
      v41 = v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v58, v38, v36);
      sub_24470665C(qword_25737F138, (uint64_t (*)(uint64_t))MEMORY[0x24BE77398], MEMORY[0x24BE773A8]);
      v42 = sub_244795040();
      v43 = *(void (**)(char *, uint64_t))(v35 + 8);
      v43(v41, v36);
      sub_244701444((uint64_t)v14, &qword_25737F130);
      v43((char *)v40, v36);
      sub_244701444(v37, &qword_25737F130);
      if ((v42 & 1) != 0)
        goto LABEL_14;
LABEL_19:
      result = sub_24473B524(v34);
      goto LABEL_20;
    }
    sub_244701444((uint64_t)v14, &qword_25737F130);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v40, v36);
LABEL_12:
    sub_244701444(v37, &qword_25737F128);
    goto LABEL_19;
  }
  sub_244701444((uint64_t)v14, &qword_25737F130);
  if (v39(v38, 1, v36) != 1)
    goto LABEL_12;
  sub_244701444(v37, &qword_25737F130);
LABEL_14:
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, v61, v66);
  v44 = *(int *)(v57 + 24);
  v45 = *(_QWORD *)(v34 + v44);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v45 = sub_244746920(0, *(_QWORD *)(v45 + 16) + 1, 1, v45);
  v47 = *(_QWORD *)(v45 + 16);
  v46 = *(_QWORD *)(v45 + 24);
  if (v47 >= v46 >> 1)
    v45 = sub_244746920(v46 > 1, v47 + 1, 1, v45);
  *(_QWORD *)(v45 + 16) = v47 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v65 + 32))(v45+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(_QWORD *)(v65 + 72) * v47, v64, v66);
  *(_QWORD *)(v34 + v44) = v45;
  v48 = (uint64_t)v60;
  sub_244793EB8();
  v49 = v62;
  sub_24473B560(v34, v62);
  v50 = v57;
  v56((char *)v49, 0, 1, v57);
  sub_244789170(v49, v48);
  v51 = (uint64_t *)(v34 + *(int *)(v50 + 20));
  v53 = *v51;
  v52 = v51[1];
  swift_retain();
  sub_24473B524(v34);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v53;
  *(_QWORD *)(result + 24) = v52;
  v54 = v73;
  *v73 = sub_24473B954;
  v54[1] = result;
  return result;
}

uint64_t sub_24473B218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  char v11;
  uint64_t (*v12)@<X0>(uint64_t *@<X0>, _QWORD *@<X8>);
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;

  v0 = sub_244793D14();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_25737CCB8 != -1)
    swift_once();
  v17[2] = qword_25737F0D8;
  MEMORY[0x24BDAC7A8](qword_25737F0D8);
  swift_retain();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F0E0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F0E8);
  v16 = sub_24470130C(&qword_25737F0F0, &qword_25737F0E0, MEMORY[0x24BE76C78]);
  v13 = &v11;
  v14 = v4;
  v12 = sub_24473B484;
  v11 = 2;
  sub_244794878();
  result = swift_release();
  if (v18)
  {
    v6 = *(_QWORD *)(v18 + 16);
    if (v6)
    {
      v7 = v18 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
      v8 = *(_QWORD *)(v1 + 72);
      v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
      v17[0] = v18;
      swift_bridgeObjectRetain();
      do
      {
        v9(v3, v7, v0);
        v10 = sub_24470665C(&qword_25737F0F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE77240], MEMORY[0x24BE771D8]);
        v14 = v0;
        v15 = v10;
        LOBYTE(v13) = 2;
        sub_244794518();
        (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        v7 += v8;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24473B484@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_24473A99C(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t type metadata accessor for UpdateRegistry.Update()
{
  uint64_t result;

  result = qword_25737F198;
  if (!qword_25737F198)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24473B4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24473B524(uint64_t a1)
{
  uint64_t updated;

  updated = type metadata accessor for UpdateRegistry.Update();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 8))(a1, updated);
  return a1;
}

uint64_t sub_24473B560(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for UpdateRegistry.Update();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t sub_24473B5A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  void (*v7)(_BYTE *__return_ptr, uint64_t, _BYTE *);
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[17];
  void (*v21)(_BYTE *__return_ptr, uint64_t, _BYTE *);
  uint64_t v22;

  v2 = sub_244794290();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  if (qword_25737CCB8 != -1)
    swift_once();
  *(_QWORD *)&v20[9] = qword_25737F0D8;
  MEMORY[0x24BDAC7A8](qword_25737F0D8);
  swift_retain();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F0E0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F120);
  v18 = sub_24470130C(&qword_25737F0F0, &qword_25737F0E0, MEMORY[0x24BE76C78]);
  v15 = (uint64_t)&v15;
  v16 = v6;
  sub_244794878();
  swift_release();
  v7 = v21;
  if (v21)
  {
    v8 = v22;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v7;
    *(_QWORD *)(v9 + 24) = v8;
    sub_24473B8B8((uint64_t)v7);
    swift_retain();
    sub_244793EC4();
    v7(v20, a1, v5);
    swift_release();
    sub_244736004((uint64_t)v7);
    v10 = v20[0];
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    if (v10 == 1)
      return swift_release();
    v12 = sub_24473B888;
  }
  else
  {
    v12 = 0;
  }
  v13 = sub_244793D14();
  v14 = sub_24470665C(&qword_25737F0F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE77240], MEMORY[0x24BE771D8]);
  v16 = v13;
  v17 = v14;
  LOBYTE(v15) = 2;
  sub_244794518();
  return sub_244736004((uint64_t)v12);
}

uint64_t sub_24473B84C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_24473AC20(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_24473B864()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24473B888()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_24473B8B8(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_24473B8C8(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for UpdateRegistry.Update();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 32))(a2, a1, updated);
  return a2;
}

uint64_t sub_24473B90C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24473B954@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result & 1;
  return result;
}

ValueMetadata *type metadata accessor for UpdateRegistry()
{
  return &type metadata for UpdateRegistry;
}

uint64_t *sub_24473B990(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244793DA4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F130);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = *(int *)(a3 + 24);
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24473BA94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_244793DA4();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

char *sub_24473BB0C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v6 = sub_244793DA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F130);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = *(int *)(a3 + 24);
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_24473BBE4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = sub_244793DA4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F130);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_24473BD20(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_244793DA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F130);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  return a1;
}

char *sub_24473BDE4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_244793DA4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F130);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  swift_release();
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24473BF0C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24473BF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F130);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_24473BF98()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24473BFA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F130);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_24473C020()
{
  unint64_t v0;

  sub_24473C0A4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_24473C0A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25737F1A8[0])
  {
    sub_244793DA4();
    v0 = sub_24479540C();
    if (!v1)
      atomic_store(v0, qword_25737F1A8);
  }
}

uint64_t sub_24473C0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_244706734;
  return PreviewAgentLauncher.jitBootstrapMethod(forIdentifier:)((uint64_t)v6, a2, a3);
}

uint64_t PreviewAgentLauncher.jitBootstrapMethod(forIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[3] = a3;
  v4[4] = v3;
  v4[2] = a2;
  v5 = sub_244793E64();
  v4[5] = v5;
  v4[6] = *(_QWORD *)(v5 - 8);
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24473C1BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t DynamicType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, *(_QWORD *)(v0 + 16), v3);
  DynamicType = swift_getDynamicType();
  v5 = type metadata accessor for NoAgentJITBootstrapMethodProvided(0);
  sub_24470665C(&qword_25737F1E8, type metadata accessor for NoAgentJITBootstrapMethodProvided, (uint64_t)&unk_244799458);
  swift_allocError();
  v7 = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v6, v1, v3);
  *(_QWORD *)(v7 + *(int *)(v5 + 20)) = DynamicType;
  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for NoAgentJITBootstrapMethodProvided(uint64_t a1)
{
  return sub_244706AAC(a1, qword_25737F300);
}

uint64_t type metadata accessor for PreviewAgentLaunchConfiguration(uint64_t a1)
{
  return sub_244706AAC(a1, qword_25737F258);
}

uint64_t PreviewAgentLaunchConfiguration.role.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_244793EF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PreviewAgentLaunchConfiguration.role.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_244793EF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PreviewAgentLaunchConfiguration.role.modify())()
{
  return nullsub_1;
}

uint64_t PreviewAgentLaunchConfiguration.injectionLibrary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PreviewAgentLaunchConfiguration(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PreviewAgentLaunchConfiguration.injectionLibrary.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PreviewAgentLaunchConfiguration(0) + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PreviewAgentLaunchConfiguration.injectionLibrary.modify())()
{
  type metadata accessor for PreviewAgentLaunchConfiguration(0);
  return nullsub_1;
}

uint64_t PreviewAgentLaunchConfiguration.binaryType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PreviewAgentLaunchConfiguration(0) + 24);
  v4 = sub_244793AA4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PreviewAgentLaunchConfiguration.binaryType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PreviewAgentLaunchConfiguration(0) + 24);
  v4 = sub_244793AA4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PreviewAgentLaunchConfiguration.binaryType.modify())()
{
  type metadata accessor for PreviewAgentLaunchConfiguration(0);
  return nullsub_1;
}

uint64_t PreviewAgentLaunchConfiguration.environment.getter()
{
  type metadata accessor for PreviewAgentLaunchConfiguration(0);
  return swift_bridgeObjectRetain();
}

uint64_t PreviewAgentLaunchConfiguration.environment.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for PreviewAgentLaunchConfiguration(0) + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*PreviewAgentLaunchConfiguration.environment.modify())()
{
  type metadata accessor for PreviewAgentLaunchConfiguration(0);
  return nullsub_1;
}

uint64_t PreviewAgentLaunchConfiguration.arguments.getter()
{
  type metadata accessor for PreviewAgentLaunchConfiguration(0);
  return swift_bridgeObjectRetain();
}

uint64_t PreviewAgentLaunchConfiguration.arguments.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for PreviewAgentLaunchConfiguration(0) + 32);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*PreviewAgentLaunchConfiguration.arguments.modify())()
{
  type metadata accessor for PreviewAgentLaunchConfiguration(0);
  return nullsub_1;
}

uint64_t _s15PreviewShellKit0A24AgentLaunchConfigurationV10identifier19PreviewsMessagingOS0D10DescriptorV6BundleVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PreviewAgentLaunchConfiguration(0) + 36);
  v4 = sub_244793E64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PreviewAgentLaunchConfiguration.agentBundle.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PreviewAgentLaunchConfiguration(0) + 36);
  v4 = sub_244793E64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PreviewAgentLaunchConfiguration.agentBundle.modify())()
{
  type metadata accessor for PreviewAgentLaunchConfiguration(0);
  return nullsub_1;
}

uint64_t sub_24473C670@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(unsigned int *a1)@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for PreviewAgentLaunchConfiguration(0) + 40));
  v5 = *v3;
  v4 = v3[1];
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_24473FEEC;
  a2[1] = (uint64_t (*)(unsigned int *))v6;
  return swift_retain();
}

uint64_t sub_24473C6D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (**v6)(uint64_t);
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = (uint64_t (**)(uint64_t))(a2
                                        + *(int *)(type metadata accessor for PreviewAgentLaunchConfiguration(0) + 40));
  swift_retain();
  result = swift_release();
  *v6 = sub_24473FEA8;
  v6[1] = (uint64_t (*)(uint64_t))v5;
  return result;
}

uint64_t PreviewAgentLaunchConfiguration.pidCallback.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PreviewAgentLaunchConfiguration(0) + 40));
  swift_retain();
  return v1;
}

uint64_t PreviewAgentLaunchConfiguration.pidCallback.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PreviewAgentLaunchConfiguration(0) + 40));
  result = swift_release();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PreviewAgentLaunchConfiguration.pidCallback.modify())()
{
  type metadata accessor for PreviewAgentLaunchConfiguration(0);
  return nullsub_1;
}

uint64_t PreviewAgentLaunchConfiguration.init(bundle:role:injectionLibrary:binaryType:environment:arguments:pidCallback:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  _QWORD *v25;

  v17 = (int *)type metadata accessor for PreviewAgentLaunchConfiguration(0);
  v18 = a9 + v17[9];
  v19 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18, a1, v19);
  v20 = sub_244793EF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a9, a2, v20);
  v21 = (_QWORD *)(a9 + v17[5]);
  *v21 = a3;
  v21[1] = a4;
  v22 = a9 + v17[6];
  v23 = sub_244793AA4();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a5, v23);
  *(_QWORD *)(a9 + v17[7]) = a6;
  *(_QWORD *)(a9 + v17[8]) = a7;
  v25 = (_QWORD *)(a9 + v17[10]);
  *v25 = a8;
  v25[1] = a10;
  return result;
}

uint64_t dispatch thunk of PreviewAgentLauncher.killAgent(identifier:pid:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, unint64_t))(a4 + 8))(a1, a2 | ((HIDWORD(a2) & 1) << 32));
}

uint64_t dispatch thunk of PreviewAgentLauncher.launchAgent(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PreviewAgentLauncher.jitBootstrapMethod(forIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 24) + *(_QWORD *)(a4 + 24));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_244706734;
  return v11(a1, a2, a3, a4);
}

void **initializeBufferWithCopyOfBuffer for PreviewAgentJITBootstrapMethod(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for PreviewAgentJITBootstrapMethod(id *a1)
{

}

void **assignWithCopy for PreviewAgentJITBootstrapMethod(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for PreviewAgentJITBootstrapMethod(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewAgentJITBootstrapMethod(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PreviewAgentJITBootstrapMethod(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_24473CAFC(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_24473CB14(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for PreviewAgentJITBootstrapMethod()
{
  return &type metadata for PreviewAgentJITBootstrapMethod;
}

uint64_t *initializeBufferWithCopyOfBuffer for PreviewAgentLaunchConfiguration(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_244793EF4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v15 = sub_244793AA4();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    v17 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
    v18 = a3[9];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_244793E64();
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22(v19, v20, v21);
    v23 = a3[10];
    v24 = (uint64_t *)((char *)a1 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
  }
  swift_retain();
  return a1;
}

uint64_t destroy for PreviewAgentLaunchConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_244793EF4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_244793AA4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(a2 + 36);
  v8 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_release();
}

uint64_t initializeWithCopy for PreviewAgentLaunchConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v6 = sub_244793EF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  v14 = sub_244793AA4();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  v16 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[9];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_244793E64();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21(v18, v19, v20);
  v22 = a3[10];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PreviewAgentLaunchConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v6 = sub_244793EF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_244793AA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[9];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = a3[10];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for PreviewAgentLaunchConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_244793EF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244793AA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[9];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t assignWithTake for PreviewAgentLaunchConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_244793EF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_244793AA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  v16 = a3[9];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewAgentLaunchConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24473D18C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_244793EF4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_244793AA4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[6];
    }
    else
    {
      v8 = sub_244793E64();
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[9];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for PreviewAgentLaunchConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24473D268(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_244793EF4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = sub_244793AA4();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v10 = sub_244793E64();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[9];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_24473D334()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_244793EF4();
  if (v1 <= 0x3F)
  {
    result = sub_244793AA4();
    if (v2 <= 0x3F)
    {
      result = sub_244793E64();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_24473D3F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244793E64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_24473D480(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244793E64();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_24473D4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_24473D510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_24473D56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_24473D5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_24473D624()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24473D630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_244793E64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_24473D6AC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24473D6B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_244793E64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_24473D730()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244793E64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24473D7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F350);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Process(0);
  v10 = a1 + *(int *)(v9 + 20);
  sub_24470D480(a1, (uint64_t)v8, type metadata accessor for Process);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  v11 = sub_24473D888(v10, (uint64_t)v8, a2, a3);
  sub_244701444((uint64_t)v8, &qword_25737F350);
  return v11;
}

uint64_t *sub_24473D888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  BOOL v33;
  uint64_t (*v34)(uint64_t, unint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  char v56[36];
  char v57[44];

  v53 = a3;
  v54 = a4;
  v52 = a2;
  v5 = sub_244793E64();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F358);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F350);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v47 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v47 - v19;
  sub_2447945A8();
  sub_24473FF28();
  if ((sub_2447953A0() & 1) != 0)
  {
    v48 = v15;
    v49 = a1;
    v50 = v5;
    v51 = v6;
    v21 = v52;
    sub_244701400(v52, (uint64_t)v20, &qword_25737F350);
    v22 = type metadata accessor for Process(0);
    v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48);
    v24 = v23(v20, 1, v22);
    v47 = v7;
    if (v24 == 1)
    {
      sub_244701444((uint64_t)v20, &qword_25737F350);
    }
    else
    {
      sub_244740168((uint64_t)&v20[*(int *)(v22 + 24)], (uint64_t)v57);
      sub_2447942A8();
      sub_244707D44((uint64_t)v20, type metadata accessor for Process);
      sub_2447947C4();
      sub_2447947B8();
      sub_244794794();
      swift_release();
    }
    v29 = v21;
    sub_244701400(v21, (uint64_t)v18, &qword_25737F350);
    v30 = v23(v18, 1, v22);
    if (v30 == 1)
    {
      sub_244701444((uint64_t)v18, &qword_25737F350);
      v31 = 0;
    }
    else
    {
      sub_244740168((uint64_t)&v18[*(int *)(v22 + 24)], (uint64_t)v56);
      v32 = sub_2447942A8();
      sub_244707D44((uint64_t)v18, type metadata accessor for Process);
      v31 = v32;
      v29 = v21;
    }
    v33 = v30 == 1;
    v34 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v54 + 8);
    v55 = v30 == 1;
    v35 = v49;
    v36 = v53;
    v37 = (uint64_t *)v34(v49, v31 | ((unint64_t)v33 << 32), v53);
    v38 = (uint64_t)v48;
    sub_244701400(v29, (uint64_t)v48, &qword_25737F350);
    v39 = v23((char *)v38, 1, v22);
    v40 = v50;
    if (v39 == 1)
    {
      sub_244701444(v38, &qword_25737F350);
      v41 = sub_2447943D4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v11, 1, 1, v41);
    }
    else
    {
      v42 = sub_2447943D4();
      v43 = *(_QWORD *)(v42 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v11, v38, v42);
      sub_244707D44(v38, type metadata accessor for Process);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v11, 0, 1, v42);
    }
    v44 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v8, v35, v40);
    v45 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    v46 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v46 + v45, v8, v40);
    sub_24473FFAC(v37, (uint64_t)v11, (uint64_t)sub_24473EB8C, 0, (uint64_t)sub_24473FF70, v46, 0, v36, v54);
    swift_release();
    sub_244701444((uint64_t)v11, &qword_25737F358);
    return v37;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
    type metadata accessor for ProcessError();
    sub_24470665C(&qword_25737E0B0, (uint64_t (*)(uint64_t))type metadata accessor for ProcessError, (uint64_t)&protocol conformance descriptor for ProcessError);
    v25 = (void *)swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v26, a1, v5);
    swift_storeEnumTagMultiPayload();
    v27 = sub_24479495C();

    return (uint64_t *)v27;
  }
}

uint64_t sub_24473DD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v60[2];
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85[2];

  v78 = a4;
  v79 = a3;
  v77 = *(_QWORD *)(a3 - 8);
  v6 = *(_QWORD *)(v77 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v76 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24479450C();
  v81 = *(_QWORD *)(v7 - 8);
  v82 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v80 = (char *)v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_244793768();
  v65 = *(_QWORD *)(v9 - 8);
  v66 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for PreviewAgentLaunchConfiguration(0);
  v72 = *(_QWORD *)(v83 - 8);
  v12 = *(_QWORD *)(v72 + 64);
  v13 = MEMORY[0x24BDAC7A8](v83);
  v73 = (uint64_t)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v60 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v60 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v60 - v20;
  v22 = sub_244794AAC();
  v70 = *(_QWORD *)(v22 - 8);
  v71 = v22;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A7C();
  sub_24470D480(a1, (uint64_t)v21, type metadata accessor for PreviewAgentLaunchConfiguration);
  sub_24470D480(a1, (uint64_t)v19, type metadata accessor for PreviewAgentLaunchConfiguration);
  v75 = a1;
  v69 = v16;
  sub_24470D480(a1, (uint64_t)v16, type metadata accessor for PreviewAgentLaunchConfiguration);
  v68 = v24;
  v25 = sub_244794AA0();
  v26 = sub_244795370();
  v27 = v26;
  v67 = v25;
  if (os_log_type_enabled(v25, v26))
  {
    v28 = swift_slowAlloc();
    v63 = a2;
    v29 = v28;
    v62 = swift_slowAlloc();
    v85[0] = v62;
    *(_DWORD *)v29 = 136315650;
    v64 = v6;
    v61 = v27;
    sub_244793E64();
    sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
    v30 = sub_2447955B0();
    v84 = sub_24470600C(v30, v31, v85);
    v60[1] = v85;
    sub_244795448();
    swift_bridgeObjectRelease();
    sub_244707D44((uint64_t)v21, type metadata accessor for PreviewAgentLaunchConfiguration);
    *(_WORD *)(v29 + 12) = 2082;
    v60[0] = v29 + 14;
    swift_bridgeObjectRetain();
    sub_244794FEC();
    sub_24479375C();
    v32 = sub_2447950AC();
    v34 = v33;
    swift_bridgeObjectRelease();
    v35 = v66;
    v36 = *(void (**)(char *, uint64_t))(v65 + 8);
    v36(v11, v66);
    swift_bridgeObjectRelease();
    v84 = sub_24470600C(v32, v34, v85);
    sub_244795448();
    swift_bridgeObjectRelease();
    sub_244707D44((uint64_t)v19, type metadata accessor for PreviewAgentLaunchConfiguration);
    *(_WORD *)(v29 + 22) = 2082;
    v65 = v29 + 24;
    v37 = (uint64_t)v69;
    v38 = swift_bridgeObjectRetain();
    MEMORY[0x249517CE4](v38, MEMORY[0x24BEE0D00]);
    sub_24479375C();
    v39 = sub_2447950AC();
    v41 = v40;
    swift_bridgeObjectRelease();
    v36(v11, v35);
    swift_bridgeObjectRelease();
    v42 = v39;
    v6 = v64;
    v84 = sub_24470600C(v42, v41, v85);
    sub_244795448();
    swift_bridgeObjectRelease();
    sub_244707D44(v37, type metadata accessor for PreviewAgentLaunchConfiguration);
    v43 = v67;
    _os_log_impl(&dword_2446FC000, v67, (os_log_type_t)v61, "Relaunch of %s, env: %{public}s, args: %{public}s", (uint8_t *)v29, 0x20u);
    v44 = v62;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v44, -1, -1);
    v45 = v29;
    a2 = v63;
    MEMORY[0x2495188D8](v45, -1, -1);

  }
  else
  {
    sub_244707D44((uint64_t)v21, type metadata accessor for PreviewAgentLaunchConfiguration);
    sub_244707D44((uint64_t)v19, type metadata accessor for PreviewAgentLaunchConfiguration);
    sub_244707D44((uint64_t)v69, type metadata accessor for PreviewAgentLaunchConfiguration);

  }
  (*(void (**)(char *, uint64_t))(v70 + 8))(v68, v71);
  v46 = v74;
  v47 = v75;
  v49 = v78;
  v48 = v79;
  sub_24473D888(v75 + *(int *)(v83 + 36), a2, v79, v78);
  v50 = v80;
  sub_2447944F4();
  v51 = v76;
  v52 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v46, v48);
  v53 = v73;
  sub_24470D480(v47, v73, type metadata accessor for PreviewAgentLaunchConfiguration);
  v54 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  v55 = (v6 + *(unsigned __int8 *)(v72 + 80) + v54) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
  v56 = swift_allocObject();
  *(_QWORD *)(v56 + 16) = v48;
  *(_QWORD *)(v56 + 24) = v49;
  (*(void (**)(unint64_t, char *, uint64_t))(v52 + 32))(v56 + v54, v51, v48);
  sub_244740488(v53, v56 + v55);
  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = sub_2447404CC;
  *(_QWORD *)(v57 + 24) = v56;
  type metadata accessor for Process(0);
  v58 = sub_24479492C();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v50, v82);
  return v58;
}

uint64_t *sub_24473E478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;

  v68 = a3;
  v70 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F358);
  MEMORY[0x24BDAC7A8](v4);
  v61 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_24479450C();
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v59 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PreviewAgentLaunchConfiguration(0);
  v54 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v62 = v8;
  v63 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2447943D4();
  v65 = *(_QWORD *)(v9 - 8);
  v66 = v9;
  v10 = *(_QWORD *)(v65 + 64);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v53 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v64 = (char *)&v52 - v12;
  v13 = sub_244793768();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_2447944DC();
  v69 = *(_QWORD *)(v72 - 8);
  v17 = MEMORY[0x24BDAC7A8](v72);
  v56 = v18;
  v57 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v52 - v19;
  sub_2447945A8();
  v21 = *(int *)(v7 + 36);
  v67 = a1;
  v22 = a1 + v21;
  v23 = sub_244793E64();
  sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
  sub_2447955B0();
  sub_24479375C();
  sub_2447950AC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_2447944C4();
  v71 = v20;
  sub_2447944D0();
  sub_24473FF28();
  if ((sub_2447953A0() & 1) != 0)
  {
    v24 = v64;
    sub_2447943C8();
    v25 = v67;
    (*(void (**)(uint64_t, uint64_t))(v68 + 16))(v67, v70);
    v26 = v66;
    v52 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
    v27 = v65;
    v28 = v53;
    v52(v53, v24, v66);
    v29 = v63;
    sub_24470D480(v25, v63, type metadata accessor for PreviewAgentLaunchConfiguration);
    v30 = v27;
    v31 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    v32 = *(unsigned __int8 *)(v54 + 80);
    v55 = v32 | 7;
    v33 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v33 + v31, v28, v26);
    sub_244740488(v29, v33 + ((v10 + v32 + v31) & ~v32));
    v34 = v59;
    sub_2447944E8();
    v54 = type metadata accessor for Process(0);
    sub_2447948B4();
    swift_release();
    swift_release();
    v35 = *(void (**)(char *, uint64_t))(v58 + 8);
    v36 = v60;
    v35(v34, v60);
    v37 = v69;
    v38 = v57;
    v39 = v72;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v57, v71, v72);
    v40 = (*(unsigned __int8 *)(v37 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    v41 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v41 + v40, v38, v39);
    sub_2447944E8();
    v42 = (uint64_t *)sub_244794920();
    swift_release();
    swift_release();
    v35(v34, v36);
    v43 = (uint64_t)v61;
    v44 = v64;
    v45 = v66;
    v52(v61, v64, v66);
    v46 = v65;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56))(v43, 0, 1, v45);
    v47 = v63;
    sub_24470D480(v67, v63, type metadata accessor for PreviewAgentLaunchConfiguration);
    v48 = swift_allocObject();
    sub_244740488(v47, v48 + ((v32 + 16) & ~v32));
    sub_24473FFAC(v42, v43, (uint64_t)sub_24473ED10, 0, (uint64_t)sub_2447408BC, v48, 1, v70, v68);
    swift_release();
    sub_244701444(v43, &qword_25737F358);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v44, v45);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v71, v72);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737F370);
    type metadata accessor for ProcessError();
    sub_24470665C(&qword_25737E0B0, (uint64_t (*)(uint64_t))type metadata accessor for ProcessError, (uint64_t)&protocol conformance descriptor for ProcessError);
    v49 = (void *)swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v50, v22, v23);
    swift_storeEnumTagMultiPayload();
    v42 = (uint64_t *)sub_24479495C();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v72);

  }
  return v42;
}

uint64_t sub_24473EB8C()
{
  return 0x656761206C6C694BLL;
}

uint64_t sub_24473EBA8()
{
  sub_2447950E8();
  sub_244793E64();
  sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  return 0;
}

__n128 sub_24473EC4C@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  __n128 result;
  __n128 v16;

  v16 = *a1;
  v7 = a1[1].n128_u64[0];
  v8 = a1[1].n128_u64[1];
  v9 = sub_2447943D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a4, a2, v9);
  v10 = a3 + *(int *)(type metadata accessor for PreviewAgentLaunchConfiguration(0) + 36);
  v11 = type metadata accessor for Process(0);
  v12 = a4 + *(int *)(v11 + 20);
  v13 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, v10, v13);
  v14 = (__n128 *)(a4 + *(int *)(v11 + 24));
  result = v16;
  *v14 = v16;
  v14[1].n128_u64[0] = v7;
  v14[1].n128_u64[1] = v8;
  v14[2].n128_u8[0] = 0;
  return result;
}

uint64_t sub_24473ED10()
{
  return 0x612068636E75614CLL;
}

uint64_t sub_24473ED30()
{
  sub_2447950E8();
  type metadata accessor for PreviewAgentLaunchConfiguration(0);
  sub_244793E64();
  sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  return 0;
}

uint64_t sub_24473EDD8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE v13[16];
  _QWORD v14[2];

  v4 = sub_2447943D4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F358);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_244701400(a1, (uint64_t)v10, &qword_25737F358);
  v11 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
  if ((_DWORD)v11 == 1)
    return ((uint64_t (*)(uint64_t))a2)(v11);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 32))(v7, v10, v4);
  sub_24473EF24(a2, v14);
  v11 = (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  if (!v14[1])
    return ((uint64_t (*)(uint64_t))a2)(v11);
  else
    return v14[0];
}

uint64_t sub_24473EF24@<X0>(void (*a1)(uint64_t)@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  sub_2447943D4();
  sub_24470665C((unint64_t *)&qword_25737F368, (uint64_t (*)(uint64_t))MEMORY[0x24BE761F8], MEMORY[0x24BE76218]);
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  v4 = sub_2447950E8();
  a1(v4);
  swift_bridgeObjectRetain();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = 35;
  a2[1] = v6;
  return result;
}

uint64_t sub_24473F020(void (*a1)(void))
{
  uint64_t v1;

  a1();
  if (!v1)
    return 0;
  sub_2447950E8();
  swift_bridgeObjectRetain();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 10272;
}

uint64_t sub_24473F0AC(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, int a6, uint64_t a7, _BYTE *a8)
{
  _BYTE *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  void (*v33)(_BYTE *, uint64_t, uint64_t);
  int v34;
  void (*v35)(_BYTE *, _BYTE *, _BYTE *);
  _BYTE *v36;
  _BYTE *v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(_BYTE *, _BYTE *);
  uint64_t v51;
  _BYTE *v52;
  void **v53;
  void *v54;
  _BYTE *v55;
  id v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t (*v69)(_BYTE *, uint64_t);
  _BYTE *v70;
  _BYTE *v71;
  _BYTE *v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  NSObject *v87;
  os_log_type_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  _BYTE *v96;
  uint64_t result;
  uint64_t v98;
  _BYTE v99[4];
  int v100;
  uint64_t v101;
  _BYTE *v102;
  _BYTE *v103;
  _BYTE *v104;
  _BYTE *v105;
  uint64_t (*v106)(void);
  uint64_t (*v107)(uint64_t);
  _BYTE *v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  unint64_t v116;

  v8 = a8;
  LODWORD(v109) = a6;
  v110 = a3;
  v111 = a5;
  v106 = a2;
  v107 = a4;
  v10 = *((_QWORD *)a8 - 1);
  v11 = MEMORY[0x24BDAC7A8](a1);
  v102 = &v99[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x24BDAC7A8](v11);
  v104 = &v99[-v14];
  MEMORY[0x24BDAC7A8](v13);
  v108 = &v99[-v15];
  v16 = sub_244794AAC();
  v112 = *(_QWORD *)(v16 - 8);
  v113 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v105 = &v99[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = MEMORY[0x24BDAC7A8](v17);
  v103 = &v99[-v20];
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = &v99[-v22];
  MEMORY[0x24BDAC7A8](v21);
  v25 = &v99[-v24];
  v26 = sub_2447945F0();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = &v99[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v28);
  v32 = &v99[-v31];
  v33 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v27 + 16);
  v33(&v99[-v31], a1, v26);
  v34 = (*(uint64_t (**)(_BYTE *, uint64_t))(v27 + 88))(v32, v26);
  if (v34 == *MEMORY[0x24BE766E8])
  {
    (*(void (**)(_BYTE *, uint64_t))(v27 + 96))(v32, v26);
    v35 = *(void (**)(_BYTE *, _BYTE *, _BYTE *))(v10 + 16);
    v36 = v108;
    v35(v108, v32, v8);
    if ((v109 & 1) != 0)
    {
      v105 = (_BYTE *)v10;
      sub_244794A7C();
      v37 = v104;
      v35(v104, v36, v8);
      swift_retain_n();
      swift_retain_n();
      v38 = sub_244794AA0();
      v39 = sub_244795364();
      v40 = v39;
      if (os_log_type_enabled(v38, v39))
      {
        v41 = swift_slowAlloc();
        v103 = v23;
        v42 = v41;
        v101 = swift_slowAlloc();
        v115 = (_BYTE *)v101;
        *(_DWORD *)v42 = 136446722;
        v100 = v40;
        v43 = v106();
        v114 = sub_24470600C(v43, v44, (uint64_t *)&v115);
        v109 = v32;
        sub_244795448();
        swift_release_n();
        v45 = swift_bridgeObjectRelease();
        *(_WORD *)(v42 + 12) = 2080;
        v46 = v107(v45);
        v114 = sub_24470600C(v46, v47, (uint64_t *)&v115);
        sub_244795448();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v42 + 22) = 2082;
        v35(v102, v37, v8);
        v48 = sub_24479507C();
        v114 = sub_24470600C(v48, v49, (uint64_t *)&v115);
        v32 = v109;
        sub_244795448();
        swift_bridgeObjectRelease();
        v50 = (void (*)(_BYTE *, _BYTE *))*((_QWORD *)v105 + 1);
        v50(v37, v8);
        _os_log_impl(&dword_2446FC000, v38, (os_log_type_t)v100, "%{public}s%s succeeded with result: %{public}s)", (uint8_t *)v42, 0x20u);
        v51 = v101;
        swift_arrayDestroy();
        MEMORY[0x2495188D8](v51, -1, -1);
        MEMORY[0x2495188D8](v42, -1, -1);

        (*(void (**)(_BYTE *, uint64_t))(v112 + 8))(v103, v113);
        v52 = v108;
      }
      else
      {

        v50 = (void (*)(_BYTE *, _BYTE *))*((_QWORD *)v105 + 1);
        v50(v37, v8);
        swift_release_n();
        swift_release_n();
        (*(void (**)(_BYTE *, uint64_t))(v112 + 8))(v23, v113);
        v52 = v36;
      }
      v50(v52, v8);
      return ((uint64_t (*)(_BYTE *, _BYTE *))v50)(v32, v8);
    }
    else
    {
      v109 = v32;
      v71 = *(_BYTE **)(v10 + 8);
      ((void (*)(_BYTE *, _BYTE *))v71)(v36, v8);
      v72 = v103;
      sub_244794A7C();
      swift_retain_n();
      swift_retain_n();
      v73 = sub_244794AA0();
      v74 = sub_244795364();
      if (os_log_type_enabled(v73, v74))
      {
        v75 = swift_slowAlloc();
        v108 = v8;
        v76 = v75;
        v77 = swift_slowAlloc();
        v105 = v71;
        v78 = v77;
        v115 = (_BYTE *)v77;
        *(_DWORD *)v76 = 136446466;
        v79 = v106();
        v114 = sub_24470600C(v79, v80, (uint64_t *)&v115);
        sub_244795448();
        swift_release_n();
        v81 = swift_bridgeObjectRelease();
        *(_WORD *)(v76 + 12) = 2080;
        v82 = v107(v81);
        v114 = sub_24470600C(v82, v83, (uint64_t *)&v115);
        sub_244795448();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2446FC000, v73, v74, "%{public}s%s succeeded", (uint8_t *)v76, 0x16u);
        swift_arrayDestroy();
        v84 = v78;
        v71 = v105;
        MEMORY[0x2495188D8](v84, -1, -1);
        v85 = v76;
        v8 = v108;
        MEMORY[0x2495188D8](v85, -1, -1);

      }
      else
      {

        swift_release_n();
        swift_release_n();
      }
      (*(void (**)(_BYTE *, uint64_t))(v112 + 8))(v72, v113);
      return ((uint64_t (*)(_BYTE *, _BYTE *))v71)(v109, v8);
    }
  }
  else
  {
    v109 = v32;
    if (v34 == *MEMORY[0x24BE766D0])
    {
      v53 = (void **)v109;
      (*(void (**)(_BYTE *, uint64_t))(v27 + 96))(v109, v26);
      v54 = *v53;
      v55 = v105;
      sub_244794A7C();
      swift_retain();
      swift_retain();
      v56 = v54;
      swift_retain();
      swift_retain();
      v57 = v54;
      v58 = sub_244794AA0();
      v59 = sub_244795364();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = swift_slowAlloc();
        v61 = swift_slowAlloc();
        v115 = (_BYTE *)v61;
        *(_DWORD *)v60 = 136446722;
        v62 = v106();
        v114 = sub_24470600C(v62, v63, (uint64_t *)&v115);
        sub_244795448();
        swift_release_n();
        v64 = swift_bridgeObjectRelease();
        *(_WORD *)(v60 + 12) = 2080;
        v65 = v107(v64);
        v114 = sub_24470600C(v65, v66, (uint64_t *)&v115);
        sub_244795448();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v60 + 22) = 2082;
        swift_getErrorValue();
        v67 = sub_244795604();
        v114 = sub_24470600C(v67, v68, (uint64_t *)&v115);
        sub_244795448();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_2446FC000, v58, v59, "%{public}s%s failed with error: %{public}s", (uint8_t *)v60, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2495188D8](v61, -1, -1);
        MEMORY[0x2495188D8](v60, -1, -1);

        v69 = *(uint64_t (**)(_BYTE *, uint64_t))(v112 + 8);
        v70 = v105;
      }
      else
      {

        swift_release_n();
        swift_release_n();

        v69 = *(uint64_t (**)(_BYTE *, uint64_t))(v112 + 8);
        v70 = v55;
      }
      v98 = v113;
    }
    else
    {
      if (v34 != *MEMORY[0x24BE766E0])
      {
        v33(v30, a1, v26);
        v115 = 0;
        v116 = 0xE000000000000000;
        sub_2447954CC();
        swift_bridgeObjectRelease();
        v115 = (_BYTE *)0xD00000000000001BLL;
        v116 = 0x800000024479EA40;
        MEMORY[0x249518824](MEMORY[0x24BE76700], v26);
        sub_24473FF84();
        sub_2447950E8();
        swift_bridgeObjectRelease();
        result = sub_244795550();
        __break(1u);
        return result;
      }
      v86 = v25;
      sub_244794A7C();
      swift_retain_n();
      swift_retain_n();
      v87 = sub_244794AA0();
      v88 = sub_244795364();
      v89 = v88;
      if (os_log_type_enabled(v87, v88))
      {
        v90 = swift_slowAlloc();
        v108 = (_BYTE *)swift_slowAlloc();
        v115 = v108;
        *(_DWORD *)v90 = 136446466;
        LODWORD(v105) = v89;
        v91 = v106();
        v114 = sub_24470600C(v91, v92, (uint64_t *)&v115);
        sub_244795448();
        swift_release_n();
        v93 = swift_bridgeObjectRelease();
        *(_WORD *)(v90 + 12) = 2080;
        v94 = v107(v93);
        v114 = sub_24470600C(v94, v95, (uint64_t *)&v115);
        sub_244795448();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2446FC000, v87, (os_log_type_t)v105, "%{public}s%s canceled", (uint8_t *)v90, 0x16u);
        v96 = v108;
        swift_arrayDestroy();
        MEMORY[0x2495188D8](v96, -1, -1);
        MEMORY[0x2495188D8](v90, -1, -1);

      }
      else
      {

        swift_release_n();
        swift_release_n();
      }
      (*(void (**)(_BYTE *, uint64_t))(v112 + 8))(v86, v113);
      v70 = v109;
      v69 = *(uint64_t (**)(_BYTE *, uint64_t))(v27 + 8);
      v98 = v26;
    }
    return v69(v70, v98);
  }
}

uint64_t sub_24473FC58()
{
  _QWORD v1[2];

  sub_2447954CC();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "agentBundle: ");
  sub_244793E64();
  sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  type metadata accessor for NoAgentJITBootstrapMethodProvided(0);
  sub_244795694();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return v1[0];
}

unint64_t sub_24473FD60()
{
  return 0xD00000000000003ELL;
}

uint64_t sub_24473FD80()
{
  sub_24470665C(&qword_25737F348, type metadata accessor for NoAgentJITBootstrapMethodProvided, (uint64_t)&unk_2447993C0);
  return sub_244794668();
}

uint64_t sub_24473FDC0()
{
  sub_24470665C(&qword_25737F348, type metadata accessor for NoAgentJITBootstrapMethodProvided, (uint64_t)&unk_2447993C0);
  return sub_244794638();
}

uint64_t sub_24473FE00()
{
  return sub_24470665C(&qword_25737F1E8, type metadata accessor for NoAgentJITBootstrapMethodProvided, (uint64_t)&unk_244799458);
}

uint64_t sub_24473FE2C()
{
  return sub_24470665C(&qword_25737F338, type metadata accessor for NoAgentJITBootstrapMethodProvided, (uint64_t)&unk_244799378);
}

uint64_t sub_24473FE58()
{
  return sub_24470665C(&qword_25737F340, type metadata accessor for NoAgentJITBootstrapMethodProvided, (uint64_t)&unk_244799350);
}

uint64_t sub_24473FE84()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24473FEA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(int *);
  int v4;
  char v5;

  v2 = *(uint64_t (**)(int *))(v1 + 16);
  v4 = a1;
  v5 = BYTE4(a1) & 1;
  return v2(&v4);
}

uint64_t sub_24473FEEC(unsigned int *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(unint64_t))(v1 + 16))(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32));
}

unint64_t sub_24473FF28()
{
  unint64_t result;

  result = qword_25737F360;
  if (!qword_25737F360)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25737F360);
  }
  return result;
}

uint64_t sub_24473FF64()
{
  return objectdestroy_10Tm((uint64_t (*)(_QWORD))MEMORY[0x24BE77508]);
}

uint64_t sub_24473FF70()
{
  return sub_2447408D0((uint64_t (*)(_QWORD))MEMORY[0x24BE77508], (uint64_t (*)(uint64_t))sub_24473EBA8);
}

uint64_t sub_24473FF84()
{
  return sub_2447955B0();
}

uint64_t sub_24473FFAC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;

  v27 = a7;
  v25 = a9;
  v26 = a8;
  v24 = *a1;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F358);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  sub_244701400(a2, (uint64_t)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_25737F358);
  v17 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v18 = swift_allocObject();
  sub_24474025C((uint64_t)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  v19 = (_QWORD *)(v18 + ((v16 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v19 = a3;
  v19[1] = a4;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a5;
  *(_QWORD *)(v20 + 24) = a6;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v26;
  v22 = v25;
  *(_QWORD *)(v21 + 24) = *(_QWORD *)(v24 + *MEMORY[0x24BE76BA8]);
  *(_QWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v21 + 40) = sub_2447402A4;
  *(_QWORD *)(v21 + 48) = v18;
  *(_QWORD *)(v21 + 56) = sub_2447402EC;
  *(_QWORD *)(v21 + 64) = v20;
  *(_BYTE *)(v21 + 72) = v27;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2447948CC();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_244740168(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BE77F70] - 8) + 32))(a2, a1);
  return a2;
}

uint64_t sub_2447401A4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737F358) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = sub_2447943D4();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24474025C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2447402A4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737F358) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_24473EDD8(v0 + v2, *(void (**)(uint64_t))(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_2447402EC()
{
  uint64_t v0;

  return sub_24473F020(*(void (**)(void))(v0 + 16));
}

uint64_t sub_2447402F4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244740320(uint64_t a1)
{
  uint64_t v1;

  return sub_24473F0AC(a1, *(uint64_t (**)(void))(v1 + 40), *(_QWORD *)(v1 + 48), *(uint64_t (**)(uint64_t))(v1 + 56), *(_QWORD *)(v1 + 64), *(unsigned __int8 *)(v1 + 72), *(_QWORD *)(v1 + 16), *(_BYTE **)(v1 + 24));
}

uint64_t sub_244740354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for PreviewAgentLaunchConfiguration(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v3 + v4 + v6) & ~v6;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v8 = sub_244793EF4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v7, v8);
  swift_bridgeObjectRelease();
  v9 = v0 + v7 + *(int *)(v5 + 24);
  v10 = sub_244793AA4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v0 + v7 + *(int *)(v5 + 36);
  v12 = sub_244793E64();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244740488(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PreviewAgentLaunchConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_2447404CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PreviewAgentLaunchConfiguration(0) - 8) + 80);
  return sub_24473E478(v0 + ((v4 + v5 + v6) & ~v6), v1, v2);
}

uint64_t sub_244740540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = sub_2447943D4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for PreviewAgentLaunchConfiguration(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v3 + v4 + v6) & ~v6;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v8 = sub_244793EF4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v7, v8);
  swift_bridgeObjectRelease();
  v9 = v0 + v7 + *(int *)(v5 + 24);
  v10 = sub_244793AA4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v0 + v7 + *(int *)(v5 + 36);
  v12 = sub_244793E64();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_release();
  return swift_deallocObject();
}

double sub_24474067C@<D0>(__n128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v5 = *(_QWORD *)(sub_2447943D4() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PreviewAgentLaunchConfiguration(0) - 8) + 80);
  *(_QWORD *)&result = sub_24473EC4C(a1, v2 + v6, v2 + ((v6 + v7 + v8) & ~v8), a2).n128_u64[0];
  return result;
}

uint64_t sub_2447406F4()
{
  return objectdestroy_10Tm((uint64_t (*)(_QWORD))MEMORY[0x24BE76578]);
}

uint64_t objectdestroy_10Tm(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_244740764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2447944DC();
  sub_2447944B8();
  return sub_244701400(a1, a2, &qword_25737F378);
}

uint64_t sub_2447407C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for PreviewAgentLaunchConfiguration(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_244793EF4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  v5 = v3 + *(int *)(v1 + 24);
  v6 = sub_244793AA4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v3 + *(int *)(v1 + 36);
  v8 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2447408BC()
{
  return sub_2447408D0(type metadata accessor for PreviewAgentLaunchConfiguration, (uint64_t (*)(uint64_t))sub_24473ED30);
}

uint64_t sub_2447408D0(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

uint64_t sub_244740920@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *MEMORY[0x24BE78058];
  v3 = sub_244793888();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
  v4 = *MEMORY[0x24BE77FF0];
  v5 = sub_244793894();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a1, v4, v5);
}

uint64_t sub_244740990()
{
  return 0;
}

unint64_t sub_24474099C(uint64_t a1)
{
  unint64_t result;

  result = sub_2447409C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2447409C0()
{
  unint64_t result;

  result = qword_25737F380;
  if (!qword_25737F380)
  {
    result = MEMORY[0x249518824](MEMORY[0x24BE77610], MEMORY[0x24BE77620]);
    atomic_store(result, (unint64_t *)&qword_25737F380);
  }
  return result;
}

uint64_t sub_244740A04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BE77FF8];
  v3 = sub_244793894();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_244740A48()
{
  return 0;
}

unint64_t sub_244740A54(uint64_t a1)
{
  unint64_t result;

  result = sub_244740A78();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244740A78()
{
  unint64_t result;

  result = qword_25737F388[0];
  if (!qword_25737F388[0])
  {
    result = MEMORY[0x249518824](MEMORY[0x24BE78168], MEMORY[0x24BE78190]);
    atomic_store(result, qword_25737F388);
  }
  return result;
}

uint64_t sub_244740ABC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_244740AC4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for AgentPipeService(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AgentPipeService);
}

uint64_t sub_244740AD8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_244740AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);

  v5[5] = a4;
  v5[6] = a5;
  v5[4] = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DF08);
  v5[7] = v8;
  v5[8] = *(_QWORD *)(v8 - 8);
  v9 = swift_task_alloc();
  v11 = *(_QWORD *)(a3 + 32);
  v10 = *(_QWORD *)(a3 + 40);
  v5[9] = v9;
  v5[10] = v11;
  v5[11] = v10;
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_25737E780 + dword_25737E780);
  swift_retain();
  swift_retain();
  v12 = (_QWORD *)swift_task_alloc();
  v5[12] = v12;
  *v12 = v5;
  v12[1] = sub_244740BC4;
  return v14(a1, v11, v10);
}

uint64_t sub_244740BC4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;

  v3 = (_QWORD *)*v2;
  v3[13] = a1;
  v3[14] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  sub_244793990();
  v5 = (_QWORD *)swift_task_alloc();
  v3[15] = v5;
  sub_24472A31C();
  *v5 = v3;
  v5[1] = sub_244740C88;
  return sub_2447938DC();
}

uint64_t sub_244740C88()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_244740D08()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244740D4C()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  v1 = (*(uint64_t (**)(void))(v0[6] + 24))();
  v3 = v2;
  v0[2] = v1;
  v0[3] = v2;
  sub_24471FAB8();
  v0[17] = sub_2447939A8();
  sub_244741068(v1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[18] = v4;
  __swift_instantiateConcreteTypeFromMangledName(qword_25737D180);
  *v4 = v0;
  v4[1] = sub_244740E2C;
  return sub_2447952C8();
}

uint64_t sub_244740E2C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244740E98()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244740EE8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244740F30()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_244740F74()
{
  return 6.0;
}

id sub_244740F7C()
{
  void *v0;
  id v1;

  v0 = (void *)sub_244793918();
  v1 = objc_msgSend(v0, sel_pid);

  return v1;
}

uint64_t sub_244740FC8(uint64_t a1)
{
  return sub_244740AD8(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_244740FD4(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v9 = *a1;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  v11 = *(_QWORD *)(a5 + 16);
  v12 = *(_QWORD *)(a5 + 24);
  *v10 = v5;
  v10[1] = sub_244706734;
  return sub_244740AFC(v9, a3, a4, v11, v12);
}

id sub_244741040@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = sub_244740F7C();
  if (!v1)
    *a1 = (_DWORD)result;
  return result;
}

uint64_t sub_244741068(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_24474107C(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)(v2 + 24) = v1;
  *(_DWORD *)(v2 + 84) = a1;
  v4 = sub_244794A34();
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 48) = swift_task_alloc();
  *(_DWORD *)(v2 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_2447410E8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_DWORD *)(v0 + 84);
  sub_244794A28();
  v2 = swift_allocObject();
  *(_QWORD *)(v0 + 56) = v2;
  *(_DWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_2447411A4;
  return sub_244794428();
}

uint64_t sub_2447411A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244741238(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)(v2 + 24) = v1;
  *(_DWORD *)(v2 + 84) = a1;
  v4 = sub_244794A34();
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 48) = swift_task_alloc();
  *(_DWORD *)(v2 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_2447412A4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_DWORD *)(v0 + 84);
  sub_244794A28();
  v2 = swift_allocObject();
  *(_QWORD *)(v0 + 56) = v2;
  *(_DWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_2447411A4;
  return sub_244794428();
}

uint64_t sub_244741360(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)(v2 + 24) = v1;
  *(_DWORD *)(v2 + 84) = a1;
  v4 = sub_244794A34();
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 48) = swift_task_alloc();
  *(_DWORD *)(v2 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_2447413CC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_DWORD *)(v0 + 84);
  sub_244794A28();
  v2 = swift_allocObject();
  *(_QWORD *)(v0 + 56) = v2;
  *(_DWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_244741488;
  return sub_244794428();
}

uint64_t sub_244741488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24474151C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_244741558()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24474158C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v7 = sub_244794A34();
  v4[9] = v7;
  v4[10] = *(_QWORD *)(v7 - 8);
  v4[11] = swift_task_alloc();
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_244741604()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[5];
  v1 = v0[6];
  sub_244794A28();
  v3 = swift_allocObject();
  v0[12] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)swift_task_alloc();
  v0[13] = v4;
  *v4 = v0;
  v4[1] = sub_2447416E0;
  return sub_244794428();
}

uint64_t sub_2447416E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244741774()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_2447417B0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2447417E4(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;

  *(_QWORD *)(v4 + 56) = a3;
  *(_QWORD *)(v4 + 64) = v3;
  *(_QWORD *)(v4 + 48) = a2;
  *(_DWORD *)(v4 + 120) = a1;
  v8 = sub_244794A34();
  *(_QWORD *)(v4 + 72) = v8;
  *(_QWORD *)(v4 + 80) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 88) = swift_task_alloc();
  *(_DWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  return swift_task_switch();
}

uint64_t sub_244741868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_DWORD *)(v0 + 120);
  sub_244794A28();
  v4 = swift_allocObject();
  *(_QWORD *)(v0 + 96) = v4;
  *(_DWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  *(_QWORD *)(v4 + 32) = v1;
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v5;
  *v5 = v0;
  v5[1] = sub_244741940;
  return sub_244794428();
}

uint64_t sub_244741940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2447419D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_244741A10(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)(v2 + 24) = v1;
  *(_DWORD *)(v2 + 84) = a1;
  v4 = sub_244794A34();
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 48) = swift_task_alloc();
  *(_DWORD *)(v2 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_244741A7C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_DWORD *)(v0 + 84);
  sub_244794A28();
  v2 = swift_allocObject();
  *(_QWORD *)(v0 + 56) = v2;
  *(_DWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_2447411A4;
  return sub_244794428();
}

uint64_t SharedAgentServer<>.requestPreviewNonUIAgent(for:)(uint64_t a1, int a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(int, uint64_t, uint64_t);

  v3[36] = a1;
  v3[37] = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DD40);
  v5 = swift_task_alloc();
  v7 = *v2;
  v6 = v2[1];
  v3[38] = v5;
  v3[39] = v7;
  v10 = (uint64_t (*)(int, uint64_t, uint64_t))((char *)&dword_25737E7E8 + dword_25737E7E8);
  v8 = (_QWORD *)swift_task_alloc();
  v3[40] = v8;
  *v8 = v3;
  v8[1] = sub_244741BD8;
  return v10(a2, v7, v6);
}

uint64_t sub_244741BD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
  else
  {
    *(_QWORD *)(v4 + 328) = a1;
    return swift_task_switch();
  }
}

uint64_t sub_244741C5C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD **)(v0 + 304);
  v2 = (uint64_t *)(*(_QWORD *)(v0 + 312) + *(_QWORD *)(**(_QWORD **)(v0 + 312) + 96));
  v3 = *(int *)(*(_QWORD *)(v0 + 296) + 48);
  *(_DWORD *)(v0 + 376) = v3;
  v4 = (char *)v1 + v3;
  v5 = (char *)v2 + v3;
  v6 = *v2;
  *(_QWORD *)(v0 + 336) = *v2;
  *v1 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DD60);
  *(_QWORD *)(v0 + 344) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v0 + 352) = v8;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v4, v5, v7);
  swift_retain();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 360) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DF68);
  *v9 = v0;
  v9[1] = sub_244741D34;
  return sub_2447952EC();
}

uint64_t sub_244741D34()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244741D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 304) + *(int *)(v0 + 376);
  v4 = *(_OWORD *)(v0 + 232);
  v5 = *(_OWORD *)(v0 + 248);
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 280);
  v6 = *(_OWORD *)(v0 + 168);
  v7 = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v0 + 64) = v7;
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 96) = v4;
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 32) = v6;
  v8 = *(_OWORD *)(v0 + 264);
  *(_OWORD *)(v0 + 112) = v5;
  *(_OWORD *)(v0 + 128) = v8;
  sub_24471E2F0(v0 + 24);
  sub_24471EAD8((void **)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  v10 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 144);
  swift_retain();
  swift_retain();
  sub_24471F9BC(v0 + 24);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 368) = v11;
  *v11 = v0;
  v11[1] = sub_244741E8C;
  return sub_24474B638(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 328), v10, v9);
}

uint64_t sub_244741E8C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t static PreviewNonUIAgentService.shellService.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_244725B8C(MEMORY[0x24BE78008], a1);
}

uint64_t static PreviewNonUIAgentService.bootstrap(client:context:endpoint:using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_25737F478 + dword_25737F478);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_244706734;
  return v9(a1, a2, a3);
}

uint64_t sub_244741F5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F568);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_244793E40();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = 0;
  v11[1] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  sub_244793E10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DF08);
  sub_24471FAB8();
  sub_24479399C();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double static PreviewNonUIAgentService.bootstrapTimeout(for:)()
{
  return 6.0;
}

id static PreviewNonUIAgentService.identity(of:)()
{
  void *v0;
  id v1;

  v0 = (void *)sub_244793918();
  v1 = objc_msgSend(v0, sel_pid);

  return v1;
}

uint64_t sub_2447420FC@<X0>(uint64_t a1@<X8>)
{
  return sub_244725BD4(MEMORY[0x24BE78008], a1);
}

uint64_t sub_244742108(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v7 = *a1;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_25737F478 + dword_25737F478);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_244707DE8;
  return v10(v7, a3, a4);
}

uint64_t AsyncAgentServer<>.requestPreviewSceneAgentConnection(for:with:)(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 16) = a2;
  *(_DWORD *)(v4 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_2447421A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(int, uint64_t, uint64_t);

  v3 = (uint64_t (*)(int, uint64_t, uint64_t))((char *)&dword_25737F488 + dword_25737F488);
  swift_bridgeObjectRetain();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_244742214;
  return v3(*(_DWORD *)(v0 + 56), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_244742214(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_24474229C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PreviewSceneAgentService.ClientIdentity.description.getter()
{
  uint64_t v1;

  v1 = sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRetain();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t PreviewSceneAgentService.ClientIdentity.hash(into:)()
{
  sub_244795670();
  swift_bridgeObjectRetain();
  sub_2447950C4();
  return swift_bridgeObjectRelease();
}

uint64_t static PreviewSceneAgentService.ClientIdentity.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2)
    return 0;
  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
    return 1;
  else
    return sub_2447955D4();
}

uint64_t PreviewSceneAgentService.ClientIdentity.hashValue.getter()
{
  sub_24479564C();
  sub_244795670();
  swift_bridgeObjectRetain();
  sub_2447950C4();
  swift_bridgeObjectRelease();
  return sub_24479567C();
}

uint64_t sub_24474245C()
{
  sub_24479564C();
  sub_244795670();
  swift_bridgeObjectRetain();
  sub_2447950C4();
  swift_bridgeObjectRelease();
  return sub_24479567C();
}

uint64_t sub_2447424CC()
{
  sub_244795670();
  swift_bridgeObjectRetain();
  sub_2447950C4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24474251C()
{
  sub_24479564C();
  sub_244795670();
  swift_bridgeObjectRetain();
  sub_2447950C4();
  swift_bridgeObjectRelease();
  return sub_24479567C();
}

uint64_t sub_244742588()
{
  uint64_t v1;

  v1 = sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRetain();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_24474260C(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2)
    return 0;
  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
    return 1;
  else
    return sub_2447955D4();
}

uint64_t static PreviewSceneAgentService.shellService.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_244725B8C(MEMORY[0x24BE78010], a1);
}

uint64_t static PreviewSceneAgentService.bootstrap(client:context:endpoint:using:)(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(unsigned int *, uint64_t, uint64_t);

  v9 = (uint64_t (*)(unsigned int *, uint64_t, uint64_t))((char *)&dword_25737F498 + dword_25737F498);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_244707DE8;
  return v9(a1, a2, a3);
}

double static PreviewSceneAgentService.bootstrapTimeout(for:)()
{
  return 8.0;
}

uint64_t static PreviewSceneAgentService.identity(of:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  unsigned int v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = sub_244794494();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_2447943BC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)sub_244793918();
  v9 = objc_msgSend(v8, sel_pid);

  sub_24479390C();
  sub_24470665C(&qword_25737DD18, (uint64_t (*)(uint64_t))MEMORY[0x24BE78588], MEMORY[0x24BE78570]);
  result = sub_24479483C();
  if (!v1)
  {
    v11 = sub_2447943B0();
    v13 = v12;
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_DWORD *)a1 = v9;
    *(_QWORD *)(a1 + 8) = v11;
    *(_QWORD *)(a1 + 16) = v13;
  }
  return result;
}

uint64_t sub_244742824@<X0>(uint64_t a1@<X8>)
{
  return sub_244725BD4(MEMORY[0x24BE78010], a1);
}

uint64_t sub_244742830(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(unsigned int *, uint64_t, uint64_t);

  v10 = (uint64_t (*)(unsigned int *, uint64_t, uint64_t))((char *)&dword_25737F498 + dword_25737F498);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_244707DE8;
  return v10(a1, a3, a4);
}

double sub_2447428A8()
{
  return 8.0;
}

uint64_t sub_2447428B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  unsigned int v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = sub_244794494();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_2447943BC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)sub_244793918();
  v9 = objc_msgSend(v8, sel_pid);

  sub_24479390C();
  sub_24470665C(&qword_25737DD18, (uint64_t (*)(uint64_t))MEMORY[0x24BE78588], MEMORY[0x24BE78570]);
  result = sub_24479483C();
  if (!v1)
  {
    v11 = sub_2447943B0();
    v13 = v12;
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_DWORD *)a1 = v9;
    *(_QWORD *)(a1 + 8) = v11;
    *(_QWORD *)(a1 + 16) = v13;
  }
  return result;
}

uint64_t sub_2447429F4(int *a1, uint64_t *a2, unint64_t *a3, double a4)
{
  int v7;
  uint64_t result;
  uint64_t v9;

  v7 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_24474378C(a3, a2);
  result = swift_allocError();
  *(double *)v9 = a4;
  *(_DWORD *)(v9 + 8) = v7;
  return result;
}

uint64_t sub_244742A60(uint64_t *a1, double a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737F590);
  sub_24474378C(&qword_25737F598, &qword_25737F590);
  v5 = swift_allocError();
  *(_QWORD *)(v6 + 8) = v4;
  *(_QWORD *)(v6 + 16) = v3;
  *(double *)v6 = a2;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_244742AE0(int *a1, double a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v5 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737F558);
  sub_24474378C(&qword_25737F560, &qword_25737F558);
  v6 = swift_allocError();
  *(_DWORD *)(v7 + 8) = v3;
  *(_QWORD *)(v7 + 16) = v5;
  *(_QWORD *)(v7 + 24) = v4;
  *(double *)v7 = a2;
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t sub_244742B70(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);

  v3[4] = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DF08);
  v3[5] = v6;
  v3[6] = *(_QWORD *)(v6 - 8);
  v7 = swift_task_alloc();
  v8 = *a1;
  v9 = *((_QWORD *)a1 + 1);
  v10 = *((_QWORD *)a1 + 2);
  v3[7] = v7;
  v3[8] = v9;
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_25737E780 + dword_25737E780);
  v12 = *(_QWORD *)(a3 + 32);
  v11 = *(_QWORD *)(a3 + 40);
  v3[9] = v10;
  v3[10] = v12;
  v3[11] = v11;
  swift_retain();
  swift_retain();
  v13 = (_QWORD *)swift_task_alloc();
  v3[12] = v13;
  *v13 = v3;
  v13[1] = sub_244742C40;
  return v15(v8, v12, v11);
}

uint64_t sub_244742C40(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);
  _QWORD *v6;

  v3 = (_QWORD *)*v2;
  v3[13] = a1;
  v3[14] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  sub_244793990();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE78208];
  v6 = (_QWORD *)swift_task_alloc();
  v3[15] = v6;
  sub_24470665C((unint64_t *)&qword_25737DF10, v5, MEMORY[0x24BE78200]);
  *v6 = v3;
  v6[1] = sub_244742D2C;
  return sub_2447938DC();
}

uint64_t sub_244742D2C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_244742DAC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244742DF0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[9];
  v0[2] = v0[8];
  v0[3] = v1;
  sub_24471FAB8();
  swift_bridgeObjectRetain();
  v0[17] = sub_2447939A8();
  swift_bridgeObjectRelease();
  v2 = (_QWORD *)swift_task_alloc();
  v0[18] = v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_25737D180);
  *v2 = v0;
  v2[1] = sub_244742EC0;
  return sub_2447952C8();
}

uint64_t sub_244742EC0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244742F24()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244742F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244742FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24474302C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  v3[2] = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DF08);
  v3[3] = v6;
  v3[4] = *(_QWORD *)(v6 - 8);
  v7 = swift_task_alloc();
  v9 = *(_QWORD *)(a3 + 32);
  v8 = *(_QWORD *)(a3 + 40);
  v3[5] = v7;
  v3[6] = v9;
  v3[7] = v8;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_25737E780 + dword_25737E780);
  swift_retain();
  swift_retain();
  v10 = (_QWORD *)swift_task_alloc();
  v3[8] = v10;
  *v10 = v3;
  v10[1] = sub_2447430F0;
  return v12(a1, v9, v8);
}

uint64_t sub_2447430F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);
  _QWORD *v6;

  v3 = (_QWORD *)*v2;
  v3[9] = a1;
  v3[10] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  sub_244793990();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE78208];
  v6 = (_QWORD *)swift_task_alloc();
  v3[11] = v6;
  sub_24470665C((unint64_t *)&qword_25737DF10, v5, MEMORY[0x24BE78200]);
  *v6 = v3;
  v6[1] = sub_2447431DC;
  return sub_2447938DC();
}

uint64_t sub_2447431DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_24474325C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2447432A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[5];
  v2 = v0[2];
  v3 = swift_task_alloc();
  v0[13] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[14] = v4;
  *v4 = v0;
  v4[1] = sub_244743344;
  return sub_2447955E0();
}

uint64_t sub_244743344()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2447433B0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244743400()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 8))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 24));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244743448()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 8))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 24));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_244743490()
{
  unint64_t result;

  result = qword_25737F4F0;
  if (!qword_25737F4F0)
  {
    result = MEMORY[0x249518824](&protocol conformance descriptor for PreviewSceneAgentService.ClientIdentity, &type metadata for PreviewSceneAgentService.ClientIdentity);
    atomic_store(result, (unint64_t *)&qword_25737F4F0);
  }
  return result;
}

unint64_t sub_2447434D8()
{
  unint64_t result;

  result = qword_25737F4F8;
  if (!qword_25737F4F8)
  {
    result = MEMORY[0x249518824](&protocol conformance descriptor for PreviewSceneAgentService.ClientIdentity, &type metadata for PreviewSceneAgentService.ClientIdentity);
    atomic_store(result, (unint64_t *)&qword_25737F4F8);
  }
  return result;
}

unint64_t sub_244743520()
{
  unint64_t result;

  result = qword_25737F500;
  if (!qword_25737F500)
  {
    result = MEMORY[0x249518824](&protocol conformance descriptor for PreviewSceneAgentService.ClientIdentity, &type metadata for PreviewSceneAgentService.ClientIdentity);
    atomic_store(result, (unint64_t *)&qword_25737F500);
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewNonUIAgentService()
{
  return &type metadata for PreviewNonUIAgentService;
}

ValueMetadata *type metadata accessor for PreviewSceneAgentService()
{
  return &type metadata for PreviewSceneAgentService;
}

uint64_t sub_244743588(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PreviewSceneAgentService.ClientIdentity(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PreviewSceneAgentService.ClientIdentity(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PreviewSceneAgentService.ClientIdentity()
{
  return &type metadata for PreviewSceneAgentService.ClientIdentity;
}

uint64_t sub_24474364C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_244743670(double a1)
{
  uint64_t v1;

  return sub_244742AE0((int *)(v1 + 16), a1);
}

uint64_t sub_244743678(uint64_t a1)
{
  return sub_244741F5C(a1);
}

uint64_t sub_244743680()
{
  return swift_deallocObject();
}

uint64_t sub_244743690(double a1)
{
  uint64_t v1;

  return sub_2447429F4((int *)(v1 + 16), &qword_25737F578, &qword_25737F580, a1);
}

uint64_t sub_2447436B8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2447436DC(double a1)
{
  uint64_t v1;

  return sub_244742A60((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_2447436E4()
{
  return swift_deallocObject();
}

uint64_t sub_2447436F4(double a1)
{
  uint64_t v1;

  return sub_2447429F4((int *)(v1 + 16), &qword_25737F5A8, &qword_25737F5B0, a1);
}

uint64_t sub_24474371C()
{
  return swift_deallocObject();
}

uint64_t sub_24474372C(double a1)
{
  uint64_t v1;

  return sub_2447429F4((int *)(v1 + 16), &qword_25737F5C0, &qword_25737F5C8, a1);
}

uint64_t sub_244743754()
{
  return swift_deallocObject();
}

uint64_t sub_244743764(double a1)
{
  uint64_t v1;

  return sub_2447429F4((int *)(v1 + 16), &qword_25737F5D8, &qword_25737F5E0, a1);
}

uint64_t sub_24474378C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x249518824](&unk_244797E28, v4);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShellAgentMessageStreamHub()
{
  return &type metadata for ShellAgentMessageStreamHub;
}

uint64_t sub_2447437E4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = sub_244793924();
  *a1 = result;
  return result;
}

uint64_t sub_24474380C(uint64_t a1, unsigned int *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *a2;
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_25737F5B8 + dword_25737F5B8);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_244743878;
  return v6(v3);
}

uint64_t sub_244743878(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_2447438F4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD **)(v0 + 16);
  v2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
  v2[4] = sub_244743944();
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_244743944()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25737E178;
  if (!qword_25737E178)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737D370);
    result = MEMORY[0x249518824](MEMORY[0x24BE78120], v1);
    atomic_store(result, (unint64_t *)&qword_25737E178);
  }
  return result;
}

uint64_t sub_244743990(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 + 24) = a3;
  *(_QWORD *)(v5 + 32) = a5;
  *(_DWORD *)(v5 + 144) = a4;
  *(_QWORD *)(v5 + 16) = a1;
  v6 = sub_24479393C();
  *(_QWORD *)(v5 + 40) = v6;
  *(_QWORD *)(v5 + 48) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 56) = swift_task_alloc();
  v7 = sub_244793F60();
  *(_QWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 72) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 80) = swift_task_alloc();
  *(_QWORD *)(v5 + 88) = swift_task_alloc();
  v8 = sub_244793834();
  *(_QWORD *)(v5 + 96) = v8;
  *(_QWORD *)(v5 + 104) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 112) = swift_task_alloc();
  *(_QWORD *)(v5 + 120) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244743A68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[14];
  v2 = v0[15];
  v3 = v0[12];
  v4 = v0[13];
  sub_244793828();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  sub_244793930();
  v5 = (_QWORD *)swift_task_alloc();
  v0[16] = v5;
  *v5 = v0;
  v5[1] = sub_244743B10;
  return sub_244793AE0();
}

uint64_t sub_244743B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_244743B94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v6 + 16))(*(_QWORD *)(v0 + 80), v4, v5);
  sub_244793CA8();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244743C64()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244743CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;

  v17 = (int *)type metadata accessor for CanvasControl(0, a10, a3, a4);
  v18 = a9 + v17[10];
  v21 = type metadata accessor for ThumbnailHostFactory(0, a10, v19, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v18, 1, 1, v21);
  v22 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a9, a1, v22);
  v23 = (_QWORD *)(a9 + v17[7]);
  *v23 = a2;
  v23[1] = a3;
  v24 = (uint64_t *)(a9 + v17[8]);
  *v24 = a4;
  v24[1] = a5;
  v25 = (_QWORD *)(a9 + v17[9]);
  *v25 = a6;
  v25[1] = a7;
  v26 = sub_24479540C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v18, a8, v26);
}

uint64_t sub_244743DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t (**v32)();
  char *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v39 = a2;
  v40 = a3;
  v41 = a5;
  v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25737F5F8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F600);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v38 = (uint64_t)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v36 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_244794140();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_244794110();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_24479414C();
  v22 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v24 = (char *)&v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = a1;
  sub_2447495BC(a1, (uint64_t)v21);
  sub_244794134();
  v42 = a4;
  sub_244701400(a4, (uint64_t)v14, &qword_25737F600);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F708);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v14, 1, v25) == 1)
  {
    sub_244701444((uint64_t)v14, &qword_25737F600);
    v27 = sub_244793F54();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v17, 1, 1, v27);
  }
  else
  {
    sub_244701400((uint64_t)v14, (uint64_t)v17, qword_25737F680);
    sub_244701444((uint64_t)v14, &qword_25737F708);
  }
  sub_24479411C();
  v28 = v42;
  v29 = v38;
  sub_244701400(v42, v38, &qword_25737F600);
  v30 = (uint64_t)&v9[v7[10]];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v30, 1, 1, v25);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v9, v24, v37);
  v31 = &v9[v7[7]];
  *(_QWORD *)v31 = sub_2447492A4;
  *((_QWORD *)v31 + 1) = 0;
  v32 = (uint64_t (**)())&v9[v7[8]];
  *v32 = sub_2447492F0;
  v32[1] = 0;
  v33 = &v9[v7[9]];
  v34 = v40;
  *(_QWORD *)v33 = v39;
  *((_QWORD *)v33 + 1) = v34;
  sub_244727410(v29, v30, &qword_25737F600);
  sub_24470D4C4((uint64_t)v9, v41, &qword_25737F5F8);
  sub_244701444(v28, &qword_25737F600);
  return sub_244749600(v43);
}

uint64_t sub_244744148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t (**v32)();
  char *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v39 = a2;
  v40 = a3;
  v41 = a5;
  v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25737F608);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F610);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v38 = (uint64_t)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v36 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_244794140();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_244794110();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_24479414C();
  v22 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v24 = (char *)&v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = a1;
  sub_2447495BC(a1, (uint64_t)v21);
  sub_244794134();
  v42 = a4;
  sub_244701400(a4, (uint64_t)v14, &qword_25737F610);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F618);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v14, 1, v25) == 1)
  {
    sub_244701444((uint64_t)v14, &qword_25737F610);
    v27 = sub_244793F54();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v17, 1, 1, v27);
  }
  else
  {
    sub_244701400((uint64_t)v14, (uint64_t)v17, qword_25737F680);
    sub_244701444((uint64_t)v14, &qword_25737F618);
  }
  sub_24479411C();
  v28 = v42;
  v29 = v38;
  sub_244701400(v42, v38, &qword_25737F610);
  v30 = (uint64_t)&v9[v7[10]];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v30, 1, 1, v25);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v9, v24, v37);
  v31 = &v9[v7[7]];
  *(_QWORD *)v31 = sub_24474932C;
  *((_QWORD *)v31 + 1) = 0;
  v32 = (uint64_t (**)())&v9[v7[8]];
  *v32 = sub_244749378;
  v32[1] = 0;
  v33 = &v9[v7[9]];
  v34 = v40;
  *(_QWORD *)v33 = v39;
  *((_QWORD *)v33 + 1) = v34;
  sub_244727410(v29, v30, &qword_25737F610);
  sub_24470D4C4((uint64_t)v9, v41, &qword_25737F608);
  sub_244701444(v28, &qword_25737F610);
  return sub_244749600(v43);
}

uint64_t sub_24474449C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (**v31)();
  uint64_t (**v32)(uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v39 = a2;
  v40 = a3;
  v41 = a5;
  v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_25737F620);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F628);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v38 = (uint64_t)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v36 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_244794140();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_244794110();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_24479414C();
  v22 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v24 = (char *)&v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = a1;
  sub_2447495BC(a1, (uint64_t)v21);
  sub_244794134();
  v42 = a4;
  sub_244701400(a4, (uint64_t)v14, &qword_25737F628);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F630);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v14, 1, v25) == 1)
  {
    sub_244701444((uint64_t)v14, &qword_25737F628);
    v27 = sub_244793F54();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v17, 1, 1, v27);
  }
  else
  {
    sub_244701400((uint64_t)v14, (uint64_t)v17, qword_25737F680);
    sub_244701444((uint64_t)v14, &qword_25737F630);
  }
  sub_24479411C();
  v28 = v42;
  v29 = v38;
  sub_244701400(v42, v38, &qword_25737F628);
  v30 = (uint64_t)&v9[v7[10]];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v30, 1, 1, v25);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v9, v24, v37);
  v31 = (uint64_t (**)())&v9[v7[7]];
  *v31 = sub_244744AE4;
  v31[1] = 0;
  v32 = (uint64_t (**)(uint64_t))&v9[v7[8]];
  *v32 = sub_244744B4C;
  v32[1] = 0;
  v33 = &v9[v7[9]];
  v34 = v40;
  *(_QWORD *)v33 = v39;
  *((_QWORD *)v33 + 1) = v34;
  sub_244727410(v29, v30, &qword_25737F628);
  sub_24470D4C4((uint64_t)v9, v41, &qword_25737F620);
  sub_244701444(v28, &qword_25737F628);
  return sub_244749600(v43);
}

uint64_t sub_2447447F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v36 = a6;
  v37 = a7;
  v42 = a4;
  v39 = a2;
  v40 = a3;
  v38 = a5;
  v8 = type metadata accessor for ThumbnailHostFactory(255, a5, a3, a4);
  v9 = sub_24479540C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v35 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v35 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_244794140();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_244794110();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_24479414C();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = a1;
  sub_2447495BC(a1, (uint64_t)v21);
  sub_244794134();
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v25(v14, v42, v9);
  v26 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v14, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    v27 = sub_244793F54();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v17, 1, 1, v27);
  }
  else
  {
    sub_244701400((uint64_t)v14, (uint64_t)v17, qword_25737F680);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v8);
  }
  sub_24479411C();
  v28 = swift_allocObject();
  v29 = v38;
  v30 = v36;
  *(_QWORD *)(v28 + 16) = v38;
  *(_QWORD *)(v28 + 24) = v30;
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = v29;
  *(_QWORD *)(v31 + 24) = v30;
  v32 = (uint64_t)v35;
  v33 = v42;
  v25(v35, v42, v9);
  sub_244743CE4((uint64_t)v24, (uint64_t)sub_24474964C, v28, (uint64_t)sub_244749684, v31, v39, v40, v32, v37, v29);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v33, v9);
  return sub_244749600(v41);
}

uint64_t sub_244744AE4()
{
  sub_24479429C();
  sub_24470665C(&qword_25737F910, (uint64_t (*)(uint64_t))MEMORY[0x24BE77F48], MEMORY[0x24BE77F20]);
  return sub_244793D2C();
}

uint64_t sub_244744B4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F908);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24479429C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77F48];
  v7 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v4, a1, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v4, 0, 1, v5);
  sub_24470665C(&qword_25737F910, v6, MEMORY[0x24BE77F20]);
  return sub_244793D38();
}

uint64_t sub_244744C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = sub_24479540C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - v5;
  v7 = *(_QWORD *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v9 - v5, a1, a2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v6, 0, 1, a2);
  return sub_244793D38();
}

uint64_t sub_244744CD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  unsigned int v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  unint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  _QWORD *v62;
  void (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v70 = a4;
  v67 = a2;
  v75 = a5;
  v60 = type metadata accessor for ThumbnailHostFactory(255, a3, a3, a4);
  v7 = sub_24479540C();
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v59 = (char *)&v56 - v8;
  v74 = sub_24479540C();
  v72 = type metadata accessor for ThumbnailHostFactory(255, v74, v9, v10);
  v11 = sub_24479540C();
  MEMORY[0x24BDAC7A8](v11);
  v73 = (uint64_t)&v56 - v12;
  v64 = a3;
  v15 = type metadata accessor for CanvasControl(255, a3, v13, v14);
  v16 = sub_24479540C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v68 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v66 = (char *)&v56 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v56 - v22;
  v24 = sub_24479414C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v56 - v29;
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v71 = a1;
  v63 = v31;
  v31(v23, a1, v16);
  v32 = *(_QWORD *)(v15 - 8);
  v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  v76 = v15;
  v61 = v33;
  v34 = v33(v23, 1, v15);
  v69 = v30;
  v56 = v32;
  if (v34 == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v23, v16);
    sub_244794128();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v23, v24);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v76);
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v30, v28, v24);
  }
  v35 = (_QWORD *)swift_allocObject();
  v36 = v67;
  v37 = v64;
  v35[2] = v67;
  v35[3] = v37;
  v38 = v70;
  v65 = v35;
  v35[4] = v70;
  v39 = (_QWORD *)swift_allocObject();
  v39[2] = v36;
  v39[3] = v37;
  v62 = v39;
  v39[4] = v38;
  v40 = v66;
  v41 = v71;
  v42 = v63;
  v63(v66, v71, v16);
  v43 = (*(unsigned __int8 *)(v17 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v44 = (char *)swift_allocObject();
  *((_QWORD *)v44 + 2) = v36;
  *((_QWORD *)v44 + 3) = v37;
  *((_QWORD *)v44 + 4) = v38;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v44[v43], v40, v16);
  v45 = v68;
  v42(v68, v41, v16);
  v46 = v76;
  if (v61(v45, 1, v76) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v45, v16);
  }
  else
  {
    v48 = v57;
    v47 = v58;
    v49 = v59;
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v59, &v45[*(int *)(v46 + 40)], v58);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v45, v46);
    v50 = v60;
    v51 = *(_QWORD *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v60) != 1)
    {
      v53 = v73;
      sub_244784A54(v50, v73);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v50);
      v52 = 0;
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v47);
  }
  v52 = 1;
  v53 = v73;
LABEL_10:
  v54 = (uint64_t)v69;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v53, v52, 1);
  return sub_244743CE4(v54, (uint64_t)sub_244749070, (uint64_t)v65, (uint64_t)sub_2447490A8, (uint64_t)v62, (uint64_t)sub_24474920C, (uint64_t)v44, v53, v75, v74);
}

uint64_t sub_244745134(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_24479540C();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v3 + 16))((char *)&v6 - v4, a1);
  return sub_244793D38();
}

uint64_t sub_2447451CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *);
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;

  v23 = a2;
  v6 = type metadata accessor for CanvasControl(255, a4, a3, a4);
  v24 = sub_24479540C();
  v7 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v9 = (char *)&v23 - v8;
  v10 = sub_24479540C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v23 - v13;
  v15 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a4) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, a4);
  v19 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v23, v24);
  v20 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  }
  else
  {
    v21 = *(void (**)(char *))&v9[*(int *)(v6 + 36)];
    v22 = *(void (**)(char *, uint64_t))(v20 + 8);
    swift_retain();
    v22(v9, v6);
    v21(v17);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, a4);
  }
}

uint64_t static CanvasControl.custom<A>(configuration:thumbnailHostFactory:interactionHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v21 = a3;
  v22 = a6;
  type metadata accessor for ThumbnailHostFactory(255, a5, a3, a4);
  v12 = sub_24479540C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v21 - v14;
  v16 = sub_244794110();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_244794494();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v18, a1, v19);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  swift_retain();
  return sub_2447447F0((uint64_t)v18, v21, a4, (uint64_t)v15, a5, v22, a7);
}

uint64_t sub_2447454F0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t result;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;

  v83 = a2;
  v79 = a5;
  v69 = a3;
  v70 = a4;
  v77 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v7);
  v72 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a6 + 16);
  v12 = type metadata accessor for ThumbnailHostFactory(255, v9, v10, v11);
  v13 = sub_24479540C();
  v75 = *(_QWORD *)(v13 - 8);
  v76 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v74 = (char *)&v62 - v15;
  v82 = v12;
  v73 = *(_QWORD *)(v12 - 8);
  v16 = *(_QWORD *)(v73 + 64);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v71 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v81 = (char *)&v62 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F8D8);
  v68 = *(_QWORD *)(v19 - 8);
  v20 = *(_QWORD *)(v68 + 64);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v62 - v23;
  v80 = v9;
  v25 = *(_QWORD *)(v9 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  v27 = MEMORY[0x24BDAC7A8](v22);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v62 - v28;
  v78 = a6;
  v30 = v84;
  result = (*(uint64_t (**)(uint64_t))(v85 + *(int *)(a6 + 28)))(v83);
  if (!v30)
  {
    v64 = v26;
    v65 = v20;
    v66 = (char *)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    v63 = v16;
    v67 = (uint64_t)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    v33 = v81;
    v32 = v82;
    v34 = v73;
    v83 = v25;
    v84 = v29;
    if ((v77 & 1) != 0)
    {
      v38 = v75;
      v39 = v74;
      v40 = v76;
      (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v74, v85 + *(int *)(v78 + 40), v76);
      v41 = v32;
      v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v39, 1, v32);
      v43 = v79;
      if (v42 == 1)
      {
        (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
        v44 = v80;
        v47 = type metadata accessor for CanvasControl.NoThumbnailHost(0, v80, v45, v46);
        MEMORY[0x249518824](&unk_2447997D8, v47);
        swift_allocError();
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v84, v44);
      }
      else
      {
        v78 = *(_QWORD *)(v34 + 32);
        v48 = v33;
        ((void (*)(char *, char *, uint64_t))v78)(v33, v39, v32);
        v49 = sub_244795220();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v72, 1, 1, v49);
        v50 = v83;
        v51 = v80;
        (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v66, v84, v80);
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v71, v48, v41);
        sub_244701400(v43, v67, &qword_25737F8D8);
        sub_244795208();
        v85 = 0;
        v52 = v70;
        swift_retain();
        v53 = sub_2447951FC();
        v54 = (*(unsigned __int8 *)(v50 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
        v55 = (v64 + *(unsigned __int8 *)(v34 + 80) + v54) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
        v56 = (v63 + *(unsigned __int8 *)(v68 + 80) + v55) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
        v57 = (char *)swift_allocObject();
        v58 = MEMORY[0x24BEE6930];
        *((_QWORD *)v57 + 2) = v53;
        *((_QWORD *)v57 + 3) = v58;
        v59 = v69;
        *((_QWORD *)v57 + 4) = v51;
        *((_QWORD *)v57 + 5) = v59;
        *((_QWORD *)v57 + 6) = v52;
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v57[v54], v66, v51);
        v60 = &v57[v55];
        v61 = v82;
        ((void (*)(char *, char *, uint64_t))v78)(v60, v71, v82);
        sub_24470D4C4(v67, (uint64_t)&v57[v56], &qword_25737F8D8);
        sub_244713B34(v72, (uint64_t)&unk_25737F8E8, (uint64_t)v57);
        swift_release();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v81, v61);
        return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v84, v51);
      }
    }
    else
    {
      v35 = v84;
      (*(void (**)(char *))(v85 + *(int *)(v78 + 36)))(v84);
      sub_244701400(v79, (uint64_t)v24, &qword_25737F8D8);
      v36 = sub_244793D08();
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v24, 1, v36) == 1)
      {
        (*(void (**)(char *, uint64_t))(v83 + 8))(v35, v80);
        return sub_244701444((uint64_t)v24, &qword_25737F8D8);
      }
      else
      {
        sub_244793CFC();
        (*(void (**)(char *, uint64_t))(v83 + 8))(v35, v80);
        return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v24, v36);
      }
    }
  }
  return result;
}

uint64_t sub_244745A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v8[15] = a8;
  v8[16] = v12;
  v8[13] = a6;
  v8[14] = a7;
  v8[11] = a4;
  v8[12] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737F8D8);
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  v9 = sub_244793D68();
  v8[19] = v9;
  v8[20] = *(_QWORD *)(v9 - 8);
  v8[21] = swift_task_alloc();
  sub_244795208();
  v8[22] = sub_2447951FC();
  v8[23] = sub_2447951D8();
  v8[24] = v10;
  return swift_task_switch();
}

uint64_t sub_244745B0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  (*(void (**)(void))(v0 + 88))();
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
  v5 = (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v2 + 8)
                                                                                 + *(_QWORD *)(v2 + 8));
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v3;
  *v3 = v0;
  v3[1] = sub_244745C80;
  return v5(v0 + 56, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 128), v1, v2);
}

uint64_t sub_244745C80()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244745CE0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 168);
  swift_release();
  v3 = *(void **)(v0 + 56);
  PreviewSnapshot.makeRenderPayload()(v2);
  if (v1)
  {

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    v4 = *(_QWORD *)(v0 + 136);
    sub_244701400(*(_QWORD *)(v0 + 120), v4, &qword_25737F8D8);
    v5 = sub_244793D08();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
    v8 = *(_QWORD *)(v0 + 136);
    if (v7 == 1)
    {

      sub_244701444(v8, &qword_25737F8D8);
    }
    else
    {
      sub_244793CE4();

      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 144);
    sub_244701400(*(_QWORD *)(v0 + 120), v9, &qword_25737F8D8);
    v10 = sub_244793D08();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
    v14 = *(_QWORD *)(v0 + 160);
    v13 = *(_QWORD *)(v0 + 168);
    v15 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 152);
    if (v12 == 1)
    {
      (*(void (**)(_QWORD, _QWORD))(v14 + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));

      swift_bridgeObjectRelease();
      sub_244701444(v15, &qword_25737F8D8);
    }
    else
    {
      sub_24470665C(&qword_25737F8F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE772F8], MEMORY[0x24BE772E8]);
      sub_244793CF0();

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v16);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v10);
    }
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244745EEC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  v1 = *(void **)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 136);
  sub_244701400(*(_QWORD *)(v0 + 120), v2, &qword_25737F8D8);
  v3 = sub_244793D08();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  v6 = *(_QWORD *)(v0 + 136);
  if (v5 == 1)
  {

    sub_244701444(v6, &qword_25737F8D8);
  }
  else
  {
    sub_244793CE4();

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

PreviewShellKit::CanvasTimelineControl::TimelineStop __swiftcall CanvasTimelineControl.TimelineStop.init(name:sfSymbolName:)(Swift::String name, Swift::String_optional sfSymbolName)
{
  Swift::String_optional *v2;
  PreviewShellKit::CanvasTimelineControl::TimelineStop result;

  v2->value = name;
  v2[1] = sfSymbolName;
  result.sfSymbolName = sfSymbolName;
  result.name = name;
  return result;
}

uint64_t CanvasTimelineControl.control.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_244701400(v1, a1, &qword_25737F5F8);
}

uint64_t CanvasTimelineControl.init(stops:allowShuffle:thumbnailHostFactory:action:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  int v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;

  v41 = sub_2447940F8();
  v12 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F600);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_244794110();
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F5F8);
  MEMORY[0x24BDAC7A8](v19);
  v39 = (uint64_t)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(a1 + 16);
  if (v21)
  {
    v32 = a2;
    v33 = v17;
    v34 = a4;
    v35 = a5;
    v36 = a3;
    v37 = a6;
    v22 = 0;
    v31[1] = a1;
    v23 = a1 + 56;
    v24 = MEMORY[0x24BEE4AF8];
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2447940EC();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v24 = sub_244746934(0, *(_QWORD *)(v24 + 16) + 1, 1, v24, &qword_25737F918, (uint64_t (*)(_QWORD))MEMORY[0x24BE77BB8]);
      v26 = *(_QWORD *)(v24 + 16);
      v25 = *(_QWORD *)(v24 + 24);
      if (v26 >= v25 >> 1)
        v24 = sub_244746934(v25 > 1, v26 + 1, 1, v24, &qword_25737F918, (uint64_t (*)(_QWORD))MEMORY[0x24BE77BB8]);
      ++v22;
      v23 += 32;
      *(_QWORD *)(v24 + 16) = v26 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v24+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v26, v14, v41);
    }
    while (v21 != v22);
    swift_bridgeObjectRelease();
    a3 = v36;
    a6 = v37;
    a4 = v34;
    a5 = v35;
    v17 = v33;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v27 = (uint64_t)v40;
  sub_244794104();
  swift_storeEnumTagMultiPayload();
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = a4;
  *(_QWORD *)(v28 + 24) = a5;
  sub_244701400(a3, (uint64_t)v17, &qword_25737F600);
  v29 = v39;
  sub_244743DF4(v27, (uint64_t)sub_244746B64, v28, (uint64_t)v17, v39);
  sub_244701444(a3, &qword_25737F600);
  return sub_24470D4C4(v29, a6, &qword_25737F5F8);
}

uint64_t sub_244746324@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_244701400(v1, a1, &qword_25737F5F8);
}

uint64_t CanvasToggleControl.control.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_244701400(v1, a1, &qword_25737F608);
}

uint64_t CanvasToggleControl.init(sfSymbolName:title:action:)@<X0>(int8x16_t *a1@<X4>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  __int8 *v9;
  int32x2_t v10;
  int64x2_t v11;
  uint64_t v12;
  uint64_t v13;
  int8x16_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F610);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v15.i8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_244794110();
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v15.i8[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = vdup_n_s32(a1->i64[0] != 0);
  v11.i64[0] = v10.u32[0];
  v11.i64[1] = v10.u32[1];
  v15 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v11, 0x3FuLL)), *a1, (int8x16_t)(unint64_t)sub_2447464F8);
  sub_2447940E0();
  swift_storeEnumTagMultiPayload();
  v12 = swift_allocObject();
  *(int8x16_t *)(v12 + 16) = v15;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F618);
  (*(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  return sub_244744148((uint64_t)v9, (uint64_t)sub_244746B88, v12, (uint64_t)v6, a2);
}

uint64_t sub_2447464F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;

  v0 = sub_244794AAC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A94();
  v4 = sub_244794AA0();
  v5 = sub_24479537C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_2446FC000, v4, v5, "InteractionEvent not supported on this toggle control", v6, 2u);
    MEMORY[0x2495188D8](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_2447465E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_244701400(v1, a1, &qword_25737F608);
}

uint64_t CanvasGridControl.control.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_244701400(v1, a1, &qword_25737F620);
}

uint64_t CanvasGridControl.init(configuration:thumbnailHostFactory:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F628);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_244794110();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F620);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2447940D4();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v14, a1, v18);
  swift_storeEnumTagMultiPayload();
  sub_244701400(a2, (uint64_t)v11, &qword_25737F630);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F630);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 0, 1, v20);
  sub_24474449C((uint64_t)v14, a3, a4, (uint64_t)v11, (uint64_t)v17);
  sub_244701444(a2, &qword_25737F630);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a1, v18);
  return sub_24470D4C4((uint64_t)v17, v23, &qword_25737F620);
}

uint64_t sub_2447467DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_244701400(v1, a1, &qword_25737F620);
}

_QWORD *sub_244746800(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737E6F0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2447493B0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_244746920(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_244746934(a1, a2, a3, a4, qword_25737F920, (uint64_t (*)(_QWORD))MEMORY[0x24BE77240]);
}

uint64_t sub_244746934(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_244795544();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2447494A4(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_244746B40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244746B64(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_244746B88(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t dispatch thunk of CanvasControlProtocol.control.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_244746BB4(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  result = sub_24479414C();
  if (v5 <= 0x3F)
  {
    type metadata accessor for ThumbnailHostFactory(255, *(_QWORD *)(a1 + 16), v3, v4);
    result = sub_24479540C();
    if (v6 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_244746C58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, _QWORD, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24479414C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 28);
    v9 = *(int *)(a3 + 32);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = *(int *)(a3 + 36);
    v17 = *(int *)(a3 + 40);
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (char *)a1 + v17;
    v22 = (char *)a2 + v17;
    v25 = type metadata accessor for ThumbnailHostFactory(0, *(_QWORD *)(a3 + 16), v23, v24);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v27(v22, 1, v25))
    {
      v28 = sub_24479540C();
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v30 = sub_244793F54();
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v22, 1, v30))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v21, v22, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v21, 0, 1, v30);
      }
      v33 = *(int *)(v25 + 28);
      v34 = &v21[v33];
      v35 = &v22[v33];
      v36 = *((_QWORD *)v35 + 1);
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = v36;
      v37 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56);
      swift_retain();
      v37(v21, 0, 1, v25);
    }
  }
  return a1;
}

uint64_t sub_244746E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  swift_release();
  swift_release();
  v5 = a1 + *(int *)(a2 + 40);
  v8 = type metadata accessor for ThumbnailHostFactory(0, *(_QWORD *)(a2 + 16), v6, v7);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8);
  if (!(_DWORD)result)
  {
    v10 = sub_244793F54();
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v5, v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_244746F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, _QWORD, uint64_t, uint64_t);

  v6 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 28);
  v8 = *(int *)(a3 + 32);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = *(int *)(a3 + 36);
  v16 = *(int *)(a3 + 40);
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (char *)(a1 + v16);
  v21 = (char *)(a2 + v16);
  v24 = type metadata accessor for ThumbnailHostFactory(0, *(_QWORD *)(a3 + 16), v22, v23);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v26(v21, 1, v24))
  {
    v27 = sub_24479540C();
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v28 = sub_244793F54();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v21, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v20, v21, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v20, 0, 1, v28);
    }
    v31 = *(int *)(v24 + 28);
    v32 = &v20[v31];
    v33 = &v21[v31];
    v34 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v34;
    v35 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56);
    swift_retain();
    v35(v20, 0, 1, v24);
  }
  return a1;
}

uint64_t sub_2447470F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;

  v6 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 28);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  v11 = *(int *)(a3 + 32);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  v15 = *(int *)(a3 + 36);
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_release();
  v19 = *(int *)(a3 + 40);
  v20 = (char *)(a1 + v19);
  v21 = (char *)(a2 + v19);
  v24 = type metadata accessor for ThumbnailHostFactory(0, *(_QWORD *)(a3 + 16), v22, v23);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v20, 1, v24);
  v28 = v26(v21, 1, v24);
  if (!v27)
  {
    if (v28)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v24);
      goto LABEL_7;
    }
    v33 = sub_244793F54();
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
    v36 = v35(v20, 1, v33);
    v37 = v35(v21, 1, v33);
    if (v36)
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v20, v21, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v20, 0, 1, v33);
LABEL_16:
        v44 = *(int *)(v24 + 28);
        v45 = &v20[v44];
        v46 = &v21[v44];
        v47 = *((_QWORD *)v46 + 1);
        *(_QWORD *)v45 = *(_QWORD *)v46;
        *((_QWORD *)v45 + 1) = v47;
        swift_retain();
        swift_release();
        return a1;
      }
    }
    else
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v20, v21, v33);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v33);
    }
    v43 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_16;
  }
  if (v28)
  {
LABEL_7:
    v32 = sub_24479540C();
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    return a1;
  }
  v29 = sub_244793F54();
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v21, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v20, v21, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v20, 0, 1, v29);
  }
  v38 = *(int *)(v24 + 28);
  v39 = &v20[v38];
  v40 = &v21[v38];
  v41 = *((_QWORD *)v40 + 1);
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *((_QWORD *)v39 + 1) = v41;
  v42 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56);
  swift_retain();
  v42(v20, 0, 1, v24);
  return a1;
}

uint64_t sub_2447473D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 32);
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = *(int *)(a3 + 40);
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v13 = type metadata accessor for ThumbnailHostFactory(0, *(_QWORD *)(a3 + 16), v11, v12);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13))
  {
    v15 = sub_24479540C();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = sub_244793F54();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v10, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v9, v10, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v9, 0, 1, v16);
    }
    *(_OWORD *)&v9[*(int *)(v13 + 28)] = *(_OWORD *)&v10[*(int *)(v13 + 28)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  }
  return a1;
}

uint64_t sub_244747544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;

  v6 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  swift_release();
  *(_OWORD *)(a1 + *(int *)(a3 + 32)) = *(_OWORD *)(a2 + *(int *)(a3 + 32));
  swift_release();
  *(_OWORD *)(a1 + *(int *)(a3 + 36)) = *(_OWORD *)(a2 + *(int *)(a3 + 36));
  swift_release();
  v7 = *(int *)(a3 + 40);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v12 = type metadata accessor for ThumbnailHostFactory(0, *(_QWORD *)(a3 + 16), v10, v11);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v8, 1, v12);
  v16 = v14(v9, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
      goto LABEL_7;
    }
    v21 = sub_244793F54();
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
    v24 = v23(v8, 1, v21);
    v25 = v23(v9, 1, v21);
    if (v24)
    {
      if (!v25)
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v8, v9, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v8, 0, 1, v21);
LABEL_16:
        *(_OWORD *)&v8[*(int *)(v12 + 28)] = *(_OWORD *)&v9[*(int *)(v12 + 28)];
        swift_release();
        return a1;
      }
    }
    else
    {
      if (!v25)
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v8, v9, v21);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v21);
    }
    v26 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_16;
  }
  if (v16)
  {
LABEL_7:
    v20 = sub_24479540C();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  v17 = sub_244793F54();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v8, v9, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v8, 0, 1, v17);
  }
  *(_OWORD *)&v8[*(int *)(v12 + 28)] = *(_OWORD *)&v9[*(int *)(v12 + 28)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
  return a1;
}

uint64_t sub_2447477E8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2447477F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  unint64_t v13;

  v6 = sub_24479414C();
  v9 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
  {
    v10 = v6;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    v12 = a1;
    return v11(v12, a2, v10);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    type metadata accessor for ThumbnailHostFactory(255, *(_QWORD *)(a3 + 16), v7, v8);
    v10 = sub_24479540C();
    v12 = a1 + *(int *)(a3 + 40);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
    return v11(v12, a2, v10);
  }
  v13 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  return (v13 + 1);
}

uint64_t sub_2447478AC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2447478B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  result = sub_24479414C();
  v11 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    v12 = result;
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v14 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    type metadata accessor for ThumbnailHostFactory(255, *(_QWORD *)(a4 + 16), v9, v10);
    v12 = sub_24479540C();
    v14 = a1 + *(int *)(a4 + 40);
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  }
  return v13(v14, a2, a2, v12);
}

uint64_t type metadata accessor for CanvasControl(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CanvasControl);
}

uint64_t *initializeBufferWithCopyOfBuffer for CanvasTimelineControl(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_2447485B8(a1, a2, a3, &qword_25737F5F8, &qword_25737F708, &qword_25737F600);
}

uint64_t destroy for CanvasTimelineControl(uint64_t a1, uint64_t a2)
{
  return sub_2447487B4(a1, a2, &qword_25737F5F8, &qword_25737F708);
}

uint64_t initializeWithCopy for CanvasTimelineControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2447488D8(a1, a2, a3, &qword_25737F5F8, &qword_25737F708, &qword_25737F600);
}

uint64_t assignWithCopy for CanvasTimelineControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244747C84(a1, a2, a3, &qword_25737F5F8, &qword_25737F708, &qword_25737F600);
}

uint64_t initializeWithTake for CanvasTimelineControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244748AD0(a1, a2, a3, &qword_25737F5F8, &qword_25737F708, &qword_25737F600);
}

uint64_t assignWithTake for CanvasTimelineControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244747FAC(a1, a2, a3, &qword_25737F5F8, &qword_25737F708, &qword_25737F600);
}

uint64_t getEnumTagSinglePayload for CanvasTimelineControl()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244747A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_4Tm(a1, a2, a3, &qword_25737F5F8);
}

uint64_t storeEnumTagSinglePayload for CanvasTimelineControl()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244747A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_5Tm(a1, a2, a3, a4, &qword_25737F5F8);
}

uint64_t type metadata accessor for CanvasTimelineControl(uint64_t a1)
{
  return sub_244706AAC(a1, (uint64_t *)&unk_25737F768);
}

void sub_244747A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2447482B8(a1, a2, a3, qword_25737F778, MEMORY[0x24BEE1768]);
}

uint64_t destroy for CanvasTimelineControl.TimelineStop()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for CanvasTimelineControl.TimelineStop(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CanvasTimelineControl.TimelineStop(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for CanvasTimelineControl.TimelineStop(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CanvasTimelineControl.TimelineStop(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CanvasTimelineControl.TimelineStop(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasTimelineControl.TimelineStop()
{
  return &type metadata for CanvasTimelineControl.TimelineStop;
}

uint64_t *initializeBufferWithCopyOfBuffer for CanvasToggleControl(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_2447485B8(a1, a2, a3, &qword_25737F608, &qword_25737F618, &qword_25737F610);
}

uint64_t destroy for CanvasToggleControl(uint64_t a1, uint64_t a2)
{
  return sub_2447487B4(a1, a2, &qword_25737F608, &qword_25737F618);
}

uint64_t initializeWithCopy for CanvasToggleControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2447488D8(a1, a2, a3, &qword_25737F608, &qword_25737F618, &qword_25737F610);
}

uint64_t assignWithCopy for CanvasToggleControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244747C84(a1, a2, a3, &qword_25737F608, &qword_25737F618, &qword_25737F610);
}

uint64_t sub_244747C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;

  v11 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(a1, a2, v11);
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(a4);
  v13 = v12[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  v17 = v12[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  v21 = v12[9];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_retain();
  swift_release();
  v25 = v12[10];
  v26 = (char *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  v28 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (!v31)
  {
    if (v32)
    {
      sub_244701444((uint64_t)v26, a5);
      goto LABEL_7;
    }
    v37 = sub_244793F54();
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
    v40 = v39(v26, 1, v37);
    v41 = v39(v27, 1, v37);
    if (v40)
    {
      if (!v41)
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v26, v27, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v26, 0, 1, v37);
LABEL_16:
        v48 = *(int *)(v28 + 28);
        v49 = &v26[v48];
        v50 = &v27[v48];
        v51 = *((_QWORD *)v50 + 1);
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *((_QWORD *)v49 + 1) = v51;
        swift_retain();
        swift_release();
        return a1;
      }
    }
    else
    {
      if (!v41)
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 24))(v26, v27, v37);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v37);
    }
    v47 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_16;
  }
  if (v32)
  {
LABEL_7:
    v36 = __swift_instantiateConcreteTypeFromMangledName(a6);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    return a1;
  }
  v33 = sub_244793F54();
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v27, 1, v33))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v26, v27, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v26, 0, 1, v33);
  }
  v42 = *(int *)(v28 + 28);
  v43 = &v26[v42];
  v44 = &v27[v42];
  v45 = *((_QWORD *)v44 + 1);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *((_QWORD *)v43 + 1) = v45;
  v46 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56);
  swift_retain();
  v46(v26, 0, 1, v28);
  return a1;
}

uint64_t initializeWithTake for CanvasToggleControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244748AD0(a1, a2, a3, &qword_25737F608, &qword_25737F618, &qword_25737F610);
}

uint64_t assignWithTake for CanvasToggleControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244747FAC(a1, a2, a3, &qword_25737F608, &qword_25737F618, &qword_25737F610);
}

uint64_t sub_244747FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;

  v11 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(a1, a2, v11);
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(a4);
  *(_OWORD *)(a1 + v12[7]) = *(_OWORD *)(a2 + v12[7]);
  swift_release();
  *(_OWORD *)(a1 + v12[8]) = *(_OWORD *)(a2 + v12[8]);
  swift_release();
  *(_OWORD *)(a1 + v12[9]) = *(_OWORD *)(a2 + v12[9]);
  swift_release();
  v13 = v12[10];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (v20)
    {
      sub_244701444((uint64_t)v14, a5);
      goto LABEL_7;
    }
    v25 = sub_244793F54();
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    v28 = v27(v14, 1, v25);
    v29 = v27(v15, 1, v25);
    if (v28)
    {
      if (!v29)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v14, v15, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v14, 0, 1, v25);
LABEL_16:
        *(_OWORD *)&v14[*(int *)(v16 + 28)] = *(_OWORD *)&v15[*(int *)(v16 + 28)];
        swift_release();
        return a1;
      }
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v14, v15, v25);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v25);
    }
    v30 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_16;
  }
  if (v20)
  {
LABEL_7:
    v24 = __swift_instantiateConcreteTypeFromMangledName(a6);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  v21 = sub_244793F54();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v15, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v14, v15, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v14, 0, 1, v21);
  }
  *(_OWORD *)&v14[*(int *)(v16 + 28)] = *(_OWORD *)&v15[*(int *)(v16 + 28)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CanvasToggleControl()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24474826C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_4Tm(a1, a2, a3, &qword_25737F608);
}

uint64_t storeEnumTagSinglePayload for CanvasToggleControl()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244748284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_5Tm(a1, a2, a3, a4, &qword_25737F608);
}

uint64_t type metadata accessor for CanvasToggleControl(uint64_t a1)
{
  return sub_244706AAC(a1, (uint64_t *)&unk_25737F800);
}

void sub_2447482A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2447482B8(a1, a2, a3, qword_25737F810, MEMORY[0x24BEE1328]);
}

void sub_2447482B8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  unint64_t v5;

  sub_244748328(319, a4, a5, (uint64_t)a4);
  if (v5 <= 0x3F)
    swift_initStructMetadata();
}

void sub_244748328(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = type metadata accessor for CanvasControl(0, a3, a3, a4);
    if (!v6)
      atomic_store(v5, a2);
  }
}

_QWORD *destroy for CanvasToggleControl.Action(_QWORD *result)
{
  if (*result >= 0xFFFFFFFFuLL)
    return (_QWORD *)swift_release();
  return result;
}

uint64_t _s15PreviewShellKit19CanvasToggleControlV6ActionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_retain();
  }
  return a1;
}

unint64_t *assignWithCopy for CanvasToggleControl.Action(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for CanvasToggleControl.Action(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  if (*a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CanvasToggleControl.Action(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CanvasToggleControl.Action(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

_QWORD *sub_24474856C(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for CanvasToggleControl.Action()
{
  return &type metadata for CanvasToggleControl.Action;
}

uint64_t *initializeBufferWithCopyOfBuffer for CanvasGridControl(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_2447485B8(a1, a2, a3, &qword_25737F620, &qword_25737F630, &qword_25737F628);
}

uint64_t *sub_2447485B8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v10;
  int v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t, uint64_t);

  v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v11 = *(_DWORD *)(*(_QWORD *)(v10 - 8) + 80);
  if ((v11 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v11 + 16) & ~(unint64_t)v11));
    swift_retain();
  }
  else
  {
    v12 = (int *)v10;
    v13 = sub_24479414C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
    v14 = v12[7];
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = v12[8];
    v19 = (uint64_t *)((char *)a1 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = v12[9];
    v23 = (uint64_t *)((char *)a1 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = v12[10];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    swift_retain();
    swift_retain();
    swift_retain();
    v29 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(a6);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v33 = sub_244793F54();
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v28, 1, v33))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v27, v28, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v27, 0, 1, v33);
      }
      v36 = *(int *)(v29 + 28);
      v37 = &v27[v36];
      v38 = &v28[v36];
      v39 = *((_QWORD *)v38 + 1);
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *((_QWORD *)v37 + 1) = v39;
      v40 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56);
      swift_retain();
      v40(v27, 0, 1, v29);
    }
  }
  return a1;
}

uint64_t destroy for CanvasGridControl(uint64_t a1, uint64_t a2)
{
  return sub_2447487B4(a1, a2, &qword_25737F620, &qword_25737F630);
}

uint64_t sub_2447487B4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v7 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_release();
  swift_release();
  swift_release();
  v9 = a1 + *(int *)(v8 + 40);
  v10 = __swift_instantiateConcreteTypeFromMangledName(a4);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10);
  if (!(_DWORD)result)
  {
    v12 = sub_244793F54();
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v9, v12);
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for CanvasGridControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2447488D8(a1, a2, a3, &qword_25737F620, &qword_25737F630, &qword_25737F628);
}

uint64_t sub_2447488D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);

  v11 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(a4);
  v13 = v12[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  v18 = v12[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = v12[9];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = v12[10];
  v27 = (char *)(a1 + v26);
  v28 = (char *)(a2 + v26);
  swift_retain();
  swift_retain();
  swift_retain();
  v29 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(a6);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v32 = sub_244793F54();
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v28, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v27, v28, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v27, 0, 1, v32);
    }
    v35 = *(int *)(v29 + 28);
    v36 = &v27[v35];
    v37 = &v28[v35];
    v38 = *((_QWORD *)v37 + 1);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *((_QWORD *)v36 + 1) = v38;
    v39 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56);
    swift_retain();
    v39(v27, 0, 1, v29);
  }
  return a1;
}

uint64_t assignWithCopy for CanvasGridControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244747C84(a1, a2, a3, &qword_25737F620, &qword_25737F630, &qword_25737F628);
}

uint64_t initializeWithTake for CanvasGridControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244748AD0(a1, a2, a3, &qword_25737F620, &qword_25737F630, &qword_25737F628);
}

uint64_t sub_244748AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v11 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(a4);
  *(_OWORD *)(a1 + v12[7]) = *(_OWORD *)(a2 + v12[7]);
  *(_OWORD *)(a1 + v12[8]) = *(_OWORD *)(a2 + v12[8]);
  *(_OWORD *)(a1 + v12[9]) = *(_OWORD *)(a2 + v12[9]);
  v13 = v12[10];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(a6);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = sub_244793F54();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v14, v15, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v14, 0, 1, v19);
    }
    *(_OWORD *)&v14[*(int *)(v16 + 28)] = *(_OWORD *)&v15[*(int *)(v16 + 28)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

uint64_t assignWithTake for CanvasGridControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244747FAC(a1, a2, a3, &qword_25737F620, &qword_25737F630, &qword_25737F628);
}

uint64_t getEnumTagSinglePayload for CanvasGridControl()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244748C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_4Tm(a1, a2, a3, &qword_25737F620);
}

uint64_t __swift_get_extra_inhabitant_index_4Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for CanvasGridControl()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244748CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_5Tm(a1, a2, a3, a4, &qword_25737F620);
}

uint64_t __swift_store_extra_inhabitant_index_5Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, a2, a2, v7);
}

uint64_t type metadata accessor for CanvasGridControl(uint64_t a1)
{
  return sub_244706AAC(a1, (uint64_t *)&unk_25737F898);
}

void sub_244748D30()
{
  unint64_t v0;

  sub_244748D98(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_244748D98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_25737F8A8[0])
  {
    v2 = sub_24479429C();
    v5 = type metadata accessor for CanvasControl(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, qword_25737F8A8);
  }
}

uint64_t type metadata accessor for CanvasControl.NoThumbnailHost(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CanvasControl.NoThumbnailHost);
}

uint64_t sub_244748DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(v4 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(type metadata accessor for ThumbnailHostFactory(0, v5, a3, a4) - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737F8D8) - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4 + v7, v5);
  v14 = sub_244793F54();
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v15 + 48))(v4 + v10, 1, v14))
    (*(void (**)(unint64_t, uint64_t))(v15 + 8))(v4 + v10, v14);
  swift_release();
  v16 = sub_244793D08();
  v17 = *(_QWORD *)(v16 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))(v4 + v13, 1, v16))
    (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v4 + v13, v16);
  return swift_deallocObject();
}

uint64_t sub_244748F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v7 = *(_QWORD *)(v4[4] - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(type metadata accessor for ThumbnailHostFactory(0, v4[4], a3, a4) - 8);
  v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737F8D8) - 8) + 80);
  v14 = v11 + v12 + v13;
  v15 = v4[2];
  v16 = v4[3];
  v17 = v4[5];
  v18 = v4[6];
  v19 = (uint64_t)v4 + v8;
  v20 = (uint64_t)v4 + v11;
  v21 = (uint64_t)v4 + (v14 & ~v13);
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v22;
  *v22 = v5;
  v22[1] = sub_244706734;
  return sub_244745A34(a1, v15, v16, v17, v18, v19, v20, v21);
}

uint64_t sub_244749060()
{
  return swift_deallocObject();
}

uint64_t sub_244749070()
{
  return sub_244793D20();
}

uint64_t sub_244749098()
{
  return swift_deallocObject();
}

uint64_t sub_2447490A8(uint64_t a1)
{
  return sub_244745134(a1);
}

uint64_t sub_2447490B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(v4 + 24);
  v6 = type metadata accessor for CanvasControl(255, v5, a3, a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_24479540C() - 8) + 80);
  v8 = (v7 + 40) & ~v7;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4 + v8, 1, v6))
  {
    v9 = sub_24479414C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v4 + v8, v9);
    swift_release();
    swift_release();
    swift_release();
    v10 = v4 + v8 + *(int *)(v6 + 40);
    v13 = type metadata accessor for ThumbnailHostFactory(0, v5, v11, v12);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v10, 1, v13))
    {
      v14 = sub_244793F54();
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14))
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v10, v14);
      swift_release();
    }
  }
  return swift_deallocObject();
}

uint64_t sub_24474920C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  type metadata accessor for CanvasControl(255, v7, a3, a4);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_24479540C() - 8) + 80);
  return sub_2447451CC(a1, v4 + ((v8 + 40) & ~v8), v6, v7);
}

uint64_t sub_24474927C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_244746934(a1, a2, a3, a4, &qword_25737F900, (uint64_t (*)(_QWORD))MEMORY[0x24BEC6388]);
}

uint64_t sub_244749290(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_244746934(a1, a2, a3, a4, &qword_25737F8F8, (uint64_t (*)(_QWORD))MEMORY[0x24BEC6440]);
}

uint64_t sub_2447492A4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = sub_244793D2C();
  if (!v1)
    *a1 = v4;
  return result;
}

uint64_t sub_2447492F0()
{
  return sub_244793D38();
}

uint64_t sub_24474932C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char v4;

  result = sub_244793D2C();
  if (!v1)
    *a1 = v4;
  return result;
}

uint64_t sub_244749378()
{
  return sub_244793D38();
}

uint64_t sub_2447493B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_24479558C();
  __break(1u);
  return result;
}

uint64_t sub_2447494A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_24479558C();
  __break(1u);
  return result;
}

uint64_t sub_2447495BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244794110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_244749600(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244794110();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24474963C()
{
  return swift_deallocObject();
}

uint64_t sub_24474964C()
{
  return sub_244793D2C();
}

uint64_t sub_244749674()
{
  return swift_deallocObject();
}

uint64_t sub_244749684(uint64_t a1)
{
  uint64_t v1;

  return sub_244744C28(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_24474968C()
{
  return swift_allocateGenericValueMetadata();
}

id static UIColor.shellTintColor.getter()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)sub_24479504C();
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_colorNamed_, v0);

  if (v2)
    return v2;
  else
    return objc_msgSend(v1, sel_systemBlueColor);
}

void sub_244749734()
{
  sub_244749890();
}

uint64_t sub_244749760(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

id FullScreenHostingViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_24479504C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void FullScreenHostingViewController.init(nibName:bundle:)()
{
  sub_2447498E8();
}

void sub_244749808(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  sub_2447498E8();
}

id FullScreenHostingViewController.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for FullScreenHostingViewController(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

void sub_244749890()
{
  sub_244795550();
  __break(1u);
}

void sub_2447498E8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for FullScreenHostingViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FullScreenHostingViewController);
}

uint64_t sub_244749920()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for FullScreenHostingViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_244749960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = sub_244794AAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  sub_244794A88();
  swift_bridgeObjectRetain();
  v8 = sub_244794AA0();
  v9 = sub_244795370();
  if (os_log_type_enabled(v8, v9))
  {
    v16 = v3;
    v10 = swift_slowAlloc();
    v17 = v2;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v19 = v12;
    *(_DWORD *)v11 = 136315138;
    swift_bridgeObjectRetain();
    v18 = sub_24470600C(v6, v7, &v19);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2446FC000, v8, v9, "Releasing sandbox extension for %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v12, -1, -1);
    MEMORY[0x2495188D8](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sandbox_extension_release();
  swift_bridgeObjectRelease();
  v13 = v1 + OBJC_IVAR____TtC15PreviewShellKit36PreviewsJITSandboxContainerExtension_containerURL;
  v14 = sub_244793804();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  return v1;
}

uint64_t sub_244749B70()
{
  sub_244749960();
  return swift_deallocClassInstance();
}

uint64_t sub_244749B94()
{
  return type metadata accessor for PreviewsJITSandboxContainerExtension();
}

uint64_t type metadata accessor for PreviewsJITSandboxContainerExtension()
{
  uint64_t result;

  result = qword_25737FA58;
  if (!qword_25737FA58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_244749BD8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244793804();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PreviewsJITSandboxContainerExtension.ContainerClass(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_244749CB0 + 4 * byte_244799865[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_244749CE4 + 4 * asc_244799860[v4]))();
}

uint64_t sub_244749CE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244749CEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244749CF4);
  return result;
}

uint64_t sub_244749D00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244749D08);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_244749D0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244749D14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PreviewsJITSandboxContainerExtension.ContainerClass()
{
  return &type metadata for PreviewsJITSandboxContainerExtension.ContainerClass;
}

unint64_t sub_244749D34()
{
  unint64_t result;

  result = qword_25737FAF8;
  if (!qword_25737FAF8)
  {
    result = MEMORY[0x249518824](&unk_244799938, &type metadata for PreviewsJITSandboxContainerExtension.ContainerClass);
    atomic_store(result, (unint64_t *)&qword_25737FAF8);
  }
  return result;
}

uint64_t *sub_244749D78(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  BOOL v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  BOOL v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v46 = *v3;
  v7 = a3 & 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF80);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_244793804();
  v45 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[2] = a1;
  v3[3] = a2;
  *((_BYTE *)v3 + 32) = v7;
  swift_bridgeObjectRetain();
  if (!container_query_create())
  {
    v20 = a1;
    if (v7)
      v21 = 0x61446E6967756C70;
    else
      v21 = 0x61746144707061;
    if (v7)
      v22 = 0xEA00000000006174;
    else
      v22 = 0xE700000000000000;
    sub_24474A74C();
    swift_allocError();
    *v23 = v20;
    v23[1] = a2;
    v23[2] = v21;
    v23[3] = v22;
    v23[4] = 0;
    v23[5] = 0;
    swift_willThrow();
    goto LABEL_40;
  }
  v43 = v11;
  container_query_set_class();
  v44 = a1;
  v14 = sub_244795094();
  xpc_string_create((const char *)(v14 + 32));
  swift_release();
  container_query_set_identifiers();
  swift_unknownObjectRelease();
  container_query_operation_set_flags();
  container_query_set_persona_unique_string();
  if (!container_query_get_single_result())
  {
    container_query_get_last_error();
    v24 = (void *)container_error_copy_unlocalized_description();
    if (v24)
    {
      v25 = sub_2447950F4();
      v27 = v26;
    }
    else
    {
      v27 = 0x800000024479ED20;
      v25 = 0xD000000000000012;
    }
    v31 = v7 == 0;
    if (v7)
      v32 = 0x61446E6967756C70;
    else
      v32 = 0x61746144707061;
    if (v31)
      v33 = 0xE700000000000000;
    else
      v33 = 0xEA00000000006174;
    sub_24474A790();
    swift_allocError();
    *v34 = v44;
    v34[1] = a2;
    v34[2] = v32;
    v34[3] = v33;
    v34[4] = v25;
    v34[5] = v27;
    v34[6] = 0;
    v34[7] = 0;
    swift_willThrow();
    free(v24);
    goto LABEL_39;
  }
  if (!container_get_path())
  {
    if (v7)
      v28 = 0x61446E6967756C70;
    else
      v28 = 0x61746144707061;
    if (v7)
      v29 = 0xEA00000000006174;
    else
      v29 = 0xE700000000000000;
    sub_24474A7D4();
    goto LABEL_30;
  }
  v42 = container_copy_sandbox_token();
  if (!v42)
  {
    if (v7)
      v28 = 0x61446E6967756C70;
    else
      v28 = 0x61746144707061;
    if (v7)
      v29 = 0xEA00000000006174;
    else
      v29 = 0xE700000000000000;
    sub_24474A818();
LABEL_30:
    swift_allocError();
    *v30 = v44;
    v30[1] = a2;
    v30[2] = v28;
    v30[3] = v29;
    v30[4] = 0;
    v30[5] = 0;
    swift_willThrow();
LABEL_39:
    container_query_free();
LABEL_40:
    swift_bridgeObjectRelease();
LABEL_41:
    swift_deallocPartialClassInstance();
    return v3;
  }
  v41 = v4;
  v15 = v45;
  v16 = v43;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v10, 1, 1, v43);
  sub_2447937D4();
  sub_24474A85C((uint64_t)v10);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))((uint64_t)v3 + OBJC_IVAR____TtC15PreviewShellKit36PreviewsJITSandboxContainerExtension_containerURL, v13, v16);
  v17 = (void *)v42;
  v18 = sandbox_extension_consume();
  if (v18 == -1)
  {
    v36 = v7 == 0;
    if (v7)
      v37 = 0x61446E6967756C70;
    else
      v37 = 0x61746144707061;
    if (v36)
      v38 = 0xE700000000000000;
    else
      v38 = 0xEA00000000006174;
    v39 = MEMORY[0x2495177D4]();
    sub_24474A89C();
    swift_allocError();
    *(_QWORD *)v40 = v44;
    *(_QWORD *)(v40 + 8) = a2;
    *(_QWORD *)(v40 + 16) = v37;
    *(_QWORD *)(v40 + 24) = v38;
    *(_DWORD *)(v40 + 32) = v39;
    *(_QWORD *)(v40 + 40) = 0;
    *(_QWORD *)(v40 + 48) = 0;
    swift_willThrow();
    free(v17);
    container_query_free();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))((uint64_t)v3 + OBJC_IVAR____TtC15PreviewShellKit36PreviewsJITSandboxContainerExtension_containerURL, v43);
    goto LABEL_41;
  }
  v19 = v18;
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v3
             + OBJC_IVAR____TtC15PreviewShellKit36PreviewsJITSandboxContainerExtension_sandboxExtensionHandle) = v19;
  free(v17);
  container_query_free();
  return v3;
}

unint64_t sub_24474A274()
{
  return 0xD000000000000028;
}

uint64_t sub_24474A294()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24474A2C0()
{
  sub_24474B3B8();
  return sub_244794668();
}

uint64_t sub_24474A2E8()
{
  sub_24474B3B8();
  return sub_244794638();
}

uint64_t sub_24474A310()
{
  uint64_t *v0;
  uint64_t v1;

  sub_2447954CC();
  v1 = *v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  swift_bridgeObjectRetain();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  swift_bridgeObjectRetain();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_24474A3E8()
{
  return 0xD000000000000029;
}

uint64_t sub_24474A408()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24474A434()
{
  sub_24474B374();
  return sub_244794668();
}

uint64_t sub_24474A45C()
{
  sub_24474B374();
  return sub_244794638();
}

unint64_t sub_24474A484()
{
  return 0xD000000000000024;
}

uint64_t sub_24474A4A0()
{
  sub_24474B330();
  return sub_244794668();
}

uint64_t sub_24474A4C8()
{
  sub_24474B330();
  return sub_244794638();
}

unint64_t sub_24474A4F0()
{
  return 0xD000000000000035;
}

uint64_t sub_24474A50C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain();
  sub_2447950E8();
  swift_bridgeObjectRetain();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_24474A578()
{
  sub_24474B2EC();
  return sub_244794668();
}

uint64_t sub_24474A5A0()
{
  sub_24474B2EC();
  return sub_244794638();
}

uint64_t sub_24474A5C8()
{
  uint64_t *v0;
  uint64_t v1;

  sub_2447954CC();
  v1 = *v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  swift_bridgeObjectRetain();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_24474A6B0()
{
  return 0xD000000000000036;
}

uint64_t sub_24474A6D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24474A6FC()
{
  sub_24474B2A8();
  return sub_244794668();
}

uint64_t sub_24474A724()
{
  sub_24474B2A8();
  return sub_244794638();
}

unint64_t sub_24474A74C()
{
  unint64_t result;

  result = qword_25737FB00;
  if (!qword_25737FB00)
  {
    result = MEMORY[0x249518824](&unk_24479A028, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotCreateContainerQuery);
    atomic_store(result, (unint64_t *)&qword_25737FB00);
  }
  return result;
}

unint64_t sub_24474A790()
{
  unint64_t result;

  result = qword_25737FB08;
  if (!qword_25737FB08)
  {
    result = MEMORY[0x249518824](&unk_244799FE8, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotExecuteContainerQuery);
    atomic_store(result, (unint64_t *)&qword_25737FB08);
  }
  return result;
}

unint64_t sub_24474A7D4()
{
  unint64_t result;

  result = qword_25737FB10;
  if (!qword_25737FB10)
  {
    result = MEMORY[0x249518824](&unk_244799FA8, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotRetrieveContainerPath);
    atomic_store(result, (unint64_t *)&qword_25737FB10);
  }
  return result;
}

unint64_t sub_24474A818()
{
  unint64_t result;

  result = qword_25737FB18;
  if (!qword_25737FB18)
  {
    result = MEMORY[0x249518824](&unk_244799F68, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotObtainSandboxToken);
    atomic_store(result, (unint64_t *)&qword_25737FB18);
  }
  return result;
}

uint64_t sub_24474A85C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737CF80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24474A89C()
{
  unint64_t result;

  result = qword_25737FB20;
  if (!qword_25737FB20)
  {
    result = MEMORY[0x249518824](&unk_244799F28, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotConsumeSandboxExtension);
    atomic_store(result, (unint64_t *)&qword_25737FB20);
  }
  return result;
}

uint64_t destroy for PreviewsJITSandboxContainerExtension.CouldNotConsumeSandboxExtension()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PreviewsJITSandboxContainerExtension.CouldNotConsumeSandboxExtension(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PreviewsJITSandboxContainerExtension.CouldNotConsumeSandboxExtension(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PreviewsJITSandboxContainerExtension.CouldNotConsumeSandboxExtension(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewsJITSandboxContainerExtension.CouldNotConsumeSandboxExtension(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PreviewsJITSandboxContainerExtension.CouldNotConsumeSandboxExtension(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewsJITSandboxContainerExtension.CouldNotConsumeSandboxExtension()
{
  return &type metadata for PreviewsJITSandboxContainerExtension.CouldNotConsumeSandboxExtension;
}

ValueMetadata *type metadata accessor for PreviewsJITSandboxContainerExtension.CouldNotObtainSandboxToken()
{
  return &type metadata for PreviewsJITSandboxContainerExtension.CouldNotObtainSandboxToken;
}

ValueMetadata *type metadata accessor for PreviewsJITSandboxContainerExtension.CouldNotRetrieveContainerPath()
{
  return &type metadata for PreviewsJITSandboxContainerExtension.CouldNotRetrieveContainerPath;
}

uint64_t destroy for PreviewsJITSandboxContainerExtension.CouldNotExecuteContainerQuery()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PreviewsJITSandboxContainerExtension.CouldNotExecuteContainerQuery(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PreviewsJITSandboxContainerExtension.CouldNotExecuteContainerQuery(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for PreviewsJITSandboxContainerExtension.CouldNotExecuteContainerQuery(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewsJITSandboxContainerExtension.CouldNotExecuteContainerQuery(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PreviewsJITSandboxContainerExtension.CouldNotExecuteContainerQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewsJITSandboxContainerExtension.CouldNotExecuteContainerQuery()
{
  return &type metadata for PreviewsJITSandboxContainerExtension.CouldNotExecuteContainerQuery;
}

uint64_t _s15PreviewShellKit36PreviewsJITSandboxContainerExtensionC26CouldNotObtainSandboxTokenVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s15PreviewShellKit36PreviewsJITSandboxContainerExtensionC26CouldNotObtainSandboxTokenVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s15PreviewShellKit36PreviewsJITSandboxContainerExtensionC26CouldNotObtainSandboxTokenVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s15PreviewShellKit36PreviewsJITSandboxContainerExtensionC26CouldNotObtainSandboxTokenVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s15PreviewShellKit36PreviewsJITSandboxContainerExtensionC26CouldNotObtainSandboxTokenVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_24474AF68(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewsJITSandboxContainerExtension.CouldNotCreateContainerQuery()
{
  return &type metadata for PreviewsJITSandboxContainerExtension.CouldNotCreateContainerQuery;
}

unint64_t sub_24474AFCC()
{
  unint64_t result;

  result = qword_25737FB28;
  if (!qword_25737FB28)
  {
    result = MEMORY[0x249518824](&unk_244799A28, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotCreateContainerQuery);
    atomic_store(result, (unint64_t *)&qword_25737FB28);
  }
  return result;
}

unint64_t sub_24474B014()
{
  unint64_t result;

  result = qword_25737FB30;
  if (!qword_25737FB30)
  {
    result = MEMORY[0x249518824](&unk_244799A00, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotCreateContainerQuery);
    atomic_store(result, (unint64_t *)&qword_25737FB30);
  }
  return result;
}

unint64_t sub_24474B060()
{
  unint64_t result;

  result = qword_25737FB38;
  if (!qword_25737FB38)
  {
    result = MEMORY[0x249518824](&unk_244799B30, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotExecuteContainerQuery);
    atomic_store(result, (unint64_t *)&qword_25737FB38);
  }
  return result;
}

unint64_t sub_24474B0A8()
{
  unint64_t result;

  result = qword_25737FB40;
  if (!qword_25737FB40)
  {
    result = MEMORY[0x249518824](&unk_244799B08, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotExecuteContainerQuery);
    atomic_store(result, (unint64_t *)&qword_25737FB40);
  }
  return result;
}

unint64_t sub_24474B0F4()
{
  unint64_t result;

  result = qword_25737FB48;
  if (!qword_25737FB48)
  {
    result = MEMORY[0x249518824](&unk_244799C38, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotRetrieveContainerPath);
    atomic_store(result, (unint64_t *)&qword_25737FB48);
  }
  return result;
}

unint64_t sub_24474B13C()
{
  unint64_t result;

  result = qword_25737FB50;
  if (!qword_25737FB50)
  {
    result = MEMORY[0x249518824](&unk_244799C10, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotRetrieveContainerPath);
    atomic_store(result, (unint64_t *)&qword_25737FB50);
  }
  return result;
}

unint64_t sub_24474B188()
{
  unint64_t result;

  result = qword_25737FB58;
  if (!qword_25737FB58)
  {
    result = MEMORY[0x249518824](&unk_244799D40, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotObtainSandboxToken);
    atomic_store(result, (unint64_t *)&qword_25737FB58);
  }
  return result;
}

unint64_t sub_24474B1D0()
{
  unint64_t result;

  result = qword_25737FB60;
  if (!qword_25737FB60)
  {
    result = MEMORY[0x249518824](&unk_244799D18, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotObtainSandboxToken);
    atomic_store(result, (unint64_t *)&qword_25737FB60);
  }
  return result;
}

unint64_t sub_24474B21C()
{
  unint64_t result;

  result = qword_25737FB68;
  if (!qword_25737FB68)
  {
    result = MEMORY[0x249518824](&unk_244799E48, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotConsumeSandboxExtension);
    atomic_store(result, (unint64_t *)&qword_25737FB68);
  }
  return result;
}

unint64_t sub_24474B264()
{
  unint64_t result;

  result = qword_25737FB70;
  if (!qword_25737FB70)
  {
    result = MEMORY[0x249518824](&unk_244799E20, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotConsumeSandboxExtension);
    atomic_store(result, (unint64_t *)&qword_25737FB70);
  }
  return result;
}

unint64_t sub_24474B2A8()
{
  unint64_t result;

  result = qword_25737FB78;
  if (!qword_25737FB78)
  {
    result = MEMORY[0x249518824](&unk_244799E90, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotConsumeSandboxExtension);
    atomic_store(result, (unint64_t *)&qword_25737FB78);
  }
  return result;
}

unint64_t sub_24474B2EC()
{
  unint64_t result;

  result = qword_25737FB80;
  if (!qword_25737FB80)
  {
    result = MEMORY[0x249518824](&unk_244799D88, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotObtainSandboxToken);
    atomic_store(result, (unint64_t *)&qword_25737FB80);
  }
  return result;
}

unint64_t sub_24474B330()
{
  unint64_t result;

  result = qword_25737FB88;
  if (!qword_25737FB88)
  {
    result = MEMORY[0x249518824](&unk_244799C80, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotRetrieveContainerPath);
    atomic_store(result, (unint64_t *)&qword_25737FB88);
  }
  return result;
}

unint64_t sub_24474B374()
{
  unint64_t result;

  result = qword_25737FB90;
  if (!qword_25737FB90)
  {
    result = MEMORY[0x249518824](&unk_244799B78, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotExecuteContainerQuery);
    atomic_store(result, (unint64_t *)&qword_25737FB90);
  }
  return result;
}

unint64_t sub_24474B3B8()
{
  unint64_t result;

  result = qword_25737FB98;
  if (!qword_25737FB98)
  {
    result = MEMORY[0x249518824](&unk_244799A70, &type metadata for PreviewsJITSandboxContainerExtension.CouldNotCreateContainerQuery);
    atomic_store(result, &qword_25737FB98);
  }
  return result;
}

uint64_t PreviewNonUIAgentProxy.perform<A>(update:expecting:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = v4;
  v26 = a4;
  v24 = a1;
  v7 = sub_2447942F0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = type metadata accessor for PreviewNonUIAgentProxy();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_2447949E0();
  v17 = sub_244795220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_244711EB8(v5, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v7);
  v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v19 = (v12 + *(unsigned __int8 *)(v8 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v20 = swift_allocObject();
  v21 = v26;
  *(_QWORD *)(v20 + 16) = a3;
  *(_QWORD *)(v20 + 24) = v21;
  sub_24474C4DC((uint64_t)v13, v20 + v18);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v20 + v19, (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  return sub_2447949BC();
}

{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  _QWORD v19[2];

  v19[1] = a4;
  v19[0] = sub_244794308();
  v7 = *(_QWORD *)(v19[0] - 8);
  MEMORY[0x24BDAC7A8](v19[0]);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_244794368();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BE784F0];
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PreviewNonUIAgentProxy();
  v14 = sub_2447942F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, a1, v14);
  __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
  sub_24470130C(&qword_25737FBC0, qword_25737DA58, MEMORY[0x24BE78270]);
  sub_24470665C(&qword_25737FBC8, v11, MEMORY[0x24BE784E8]);
  v15 = sub_2447940C8();
  sub_244707D44((uint64_t)v13, v11);
  v16 = *(_DWORD *)(v4 + 8);
  sub_2447942C0();
  v17 = Task<>.enhancingPreviewAgentConnectionError(for:_:)(v16, (uint64_t)v9, v15, a3);
  swift_release();
  (*(void (**)(char *, _QWORD))(v7 + 8))(v9, v19[0]);
  return v17;
}

uint64_t type metadata accessor for PreviewNonUIAgentProxy()
{
  uint64_t result;

  result = qword_25737FC38;
  if (!qword_25737FC38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24474B638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  v5 = type metadata accessor for PreviewNonUIAgentProxy();
  v4[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[8] = v6;
  v4[9] = *(_QWORD *)(v6 + 64);
  v4[10] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FC98);
  v4[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[12] = v8;
  v4[13] = *(_QWORD *)(v8 + 64);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
  v4[16] = v9;
  v4[17] = *(_QWORD *)(v9 - 8);
  v4[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24474B70C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unsigned int v3;
  uint64_t (*v4)(uint64_t);
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 24);
  sub_2447948A8();
  swift_allocObject();
  LOBYTE(v7) = 2;
  *(_QWORD *)v1 = sub_24479489C();
  v2 = (void *)sub_244793918();
  v3 = objc_msgSend(v2, sel_pid, v7, 0, 0);

  *(_DWORD *)(v1 + 8) = v3;
  sub_244794380();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE78518];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v5;
  sub_24470665C(qword_25737FC50, v4, MEMORY[0x24BE784E0]);
  *v5 = v0;
  v5[1] = sub_24474B828;
  return sub_2447938DC();
}

uint64_t sub_24474B828()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24474B88C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  void (*v14)(char *, uint64_t);
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;

  v1 = *(uint64_t **)(v0 + 120);
  v2 = *(uint64_t **)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 88);
  v23 = *(_QWORD *)(v0 + 80);
  v24 = *(_QWORD *)(v0 + 96);
  v26 = *(_QWORD *)(v0 + 104);
  v25 = *(_QWORD *)(v0 + 64);
  v29 = *(int **)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v30 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 24);
  v28 = v6;
  (*(void (**)(uint64_t))(*(_QWORD *)(v0 + 136) + 32))(v6 + v29[6]);
  v7 = (_QWORD *)(v6 + v29[7]);
  v27 = (uint64_t)v1;
  *v7 = v5;
  v7[1] = v4;
  v8 = (char *)v1 + *(int *)(v3 + 48);
  swift_retain();
  swift_retain();
  v9 = sub_2447952A4();
  *v1 = v9;
  v10 = (char *)v2 + *(int *)(v3 + 48);
  *v2 = v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FCA0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v22 = v8;
  v13(v10, v8, v11);
  *(_QWORD *)(v28 + v29[8]) = v9;
  v14 = *(void (**)(char *, uint64_t))(v12 + 8);
  swift_retain_n();
  v14(v10, v11);
  *(_QWORD *)(v0 + 16) = v30;
  v15 = (char *)v2 + *(int *)(v3 + 48);
  *v2 = v9;
  v13(v15, v8, v11);
  sub_244711EB8(v28, v23);
  v16 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v17 = (v16 + v26 + *(unsigned __int8 *)(v25 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v18 = swift_allocObject();
  sub_24474D2E0((uint64_t)v2, v18 + v16);
  sub_24474C4DC(v23, v18 + v17);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D370);
  sub_24470130C(&qword_25737D380, &qword_25737D370, MEMORY[0x24BE78130]);
  sub_2447947E8();
  swift_release();
  sub_244711EB8(v28, v23);
  v19 = (char *)v2 + *(int *)(v3 + 48);
  *v2 = v9;
  v13(v19, v22, v11);
  v20 = swift_allocObject();
  sub_24474D2E0((uint64_t)v2, v20 + v16);
  sub_24470665C((unint64_t *)&qword_25737DAE0, (uint64_t (*)(uint64_t))type metadata accessor for PreviewNonUIAgentProxy, (uint64_t)&protocol conformance descriptor for PreviewNonUIAgentProxy);
  sub_2447947E8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_244707D44(v23, (uint64_t (*)(_QWORD))type metadata accessor for PreviewNonUIAgentProxy);
  sub_24474D468(v27);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24474BBE4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PreviewNonUIAgentProxy.invalidationHandle.getter()
{
  return swift_retain();
}

uint64_t PreviewNonUIAgentProxy.pid.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8);
}

uint64_t sub_24474BC88()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737FC98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737FCA0);
  sub_24470130C(&qword_25737FCA8, &qword_25737FCA0, MEMORY[0x24BE76D88]);
  sub_24479456C();
  type metadata accessor for PreviewNonUIAgentProxy();
  sub_24470665C(&qword_25737FBD8, (uint64_t (*)(uint64_t))type metadata accessor for PreviewNonUIAgentProxy, (uint64_t)&protocol conformance descriptor for PreviewNonUIAgentProxy);
  return sub_24479459C();
}

uint64_t sub_24474BD94()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737FC98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737FCA0);
  sub_24470130C(&qword_25737FCA8, &qword_25737FCA0, MEMORY[0x24BE76D88]);
  return sub_244794554();
}

uint64_t PreviewNonUIAgentProxy.onDisconnect(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v3 = v2;
  v6 = type metadata accessor for PreviewNonUIAgentProxy();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_244795220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_244711EB8(v3, (uint64_t)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  sub_24474C4DC((uint64_t)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  v15 = (_QWORD *)(v14 + ((v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v15 = a1;
  v15[1] = a2;
  swift_retain();
  sub_244704384((uint64_t)v11, (uint64_t)&unk_25737FBB8, v14);
  return swift_release();
}

uint64_t sub_24474BF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_24474BF94()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for PreviewNonUIAgentProxy();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_25737D180);
  *v1 = v0;
  v1[1] = sub_24474C01C;
  return sub_2447952C8();
}

uint64_t sub_24474C01C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24474C080()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 24))();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24474C0B4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24474C270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_24474C290(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  _QWORD *v3;

  v2[7] = PreviewNonUIAgentProxy.perform<A>(update:expecting:)(v2[4], a2, v2[5], v2[6]);
  v3 = (_QWORD *)swift_task_alloc();
  v2[8] = (uint64_t)v3;
  __swift_instantiateConcreteTypeFromMangledName(qword_25737D180);
  *v3 = v2;
  v3[1] = sub_24474C314;
  return sub_2447952C8();
}

uint64_t sub_24474C314()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24474C378()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24474C3AC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24474C3E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for PreviewNonUIAgentProxy();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_2447942F0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  v8 = v0 + v3 + *(int *)(v1 + 24);
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_24474C4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PreviewNonUIAgentProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24474C520(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v4 = *(_QWORD *)(type metadata accessor for PreviewNonUIAgentProxy() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_2447942F0() - 8) + 80);
  v8 = v1 + ((v5 + v6 + v7) & ~v7);
  v9 = swift_task_alloc();
  v10 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v9;
  *(_QWORD *)v9 = v2;
  *(_QWORD *)(v9 + 8) = sub_244707DE8;
  *(_OWORD *)(v9 + 40) = v10;
  *(_QWORD *)(v9 + 24) = v1 + v5;
  *(_QWORD *)(v9 + 32) = v8;
  *(_QWORD *)(v9 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_24474C5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for PreviewNonUIAgentProxy();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  swift_unknownObjectRelease();
  swift_release();
  v4 = v0 + v3 + *(int *)(v1 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24474C6B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v2 = *(_QWORD *)(type metadata accessor for PreviewNonUIAgentProxy() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v0 + v4);
  *(_QWORD *)(v1 + 16) = v6;
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = sub_244706734;
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 16) = v5;
  return swift_task_switch();
}

uint64_t PreviewNonUIAgentProxy.addMessageStream(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v3 = sub_244793F18();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PreviewNonUIAgentProxy() + 28));
  v11 = *v9;
  v10 = v9[1];
  v12 = *(_DWORD *)(v1 + 8);
  v17[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D100);
  v13 = sub_244795220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v14 = (*(unsigned __int8 *)(v4 + 80) + 36) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v11;
  *(_QWORD *)(v15 + 24) = v10;
  *(_DWORD *)(v15 + 32) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v15 + v14, (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  swift_retain();
  swift_retain();
  return sub_2447949BC();
}

uint64_t sub_24474C900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244793F18();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 36) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t PreviewNonUIAgentProxy.sendEndpoint(_:context:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v5 = sub_244793E40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_244794374();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BE78508];
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PreviewNonUIAgentProxy();
  v13 = &v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737D118) + 48)];
  v14 = sub_244793F18();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, a3, v14);
  v15 = sub_244794494();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, a2, v15);
  sub_244793E34();
  __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
  sub_24470665C(&qword_25737FBD0, v10, MEMORY[0x24BE78500]);
  sub_2447939B4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_244707D44((uint64_t)v12, v10);
}

uint64_t sub_24474CB00()
{
  return sub_24470665C(&qword_25737FBD8, (uint64_t (*)(uint64_t))type metadata accessor for PreviewNonUIAgentProxy, (uint64_t)&protocol conformance descriptor for PreviewNonUIAgentProxy);
}

uint64_t sub_24474CB2C()
{
  return swift_retain();
}

uint64_t sub_24474CB34()
{
  sub_24470665C((unint64_t *)&qword_25737DAE0, (uint64_t (*)(uint64_t))type metadata accessor for PreviewNonUIAgentProxy, (uint64_t)&protocol conformance descriptor for PreviewNonUIAgentProxy);
  return sub_2447947D0();
}

uint64_t initializeBufferWithCopyOfBuffer for PreviewNonUIAgentProxy(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    v7 = a1;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    v8 = a3[6];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    swift_retain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[7];
    v13 = a3[8];
    v14 = (_QWORD *)(v7 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    *(_QWORD *)(v7 + v13) = *(uint64_t *)((char *)a2 + v13);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t destroy for PreviewNonUIAgentProxy(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for PreviewNonUIAgentProxy(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  swift_retain();
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  v11 = a3[8];
  v12 = (_QWORD *)(a1 + v10);
  v13 = (_QWORD *)(a2 + v10);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PreviewNonUIAgentProxy(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  swift_retain();
  swift_release();
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for PreviewNonUIAgentProxy(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  return a1;
}

uint64_t assignWithTake for PreviewNonUIAgentProxy(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  swift_release();
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  swift_release();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewNonUIAgentProxy()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24474CFB8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PreviewNonUIAgentProxy()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_24474D044(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void sub_24474D0BC()
{
  unint64_t v0;

  sub_24474D14C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_24474D14C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25737FC48)
  {
    sub_244794380();
    sub_24470665C(qword_25737FC50, (uint64_t (*)(uint64_t))MEMORY[0x24BE78518], MEMORY[0x24BE784E0]);
    v0 = sub_2447939CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25737FC48);
  }
}

uint64_t sub_24474D1C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FC98);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for PreviewNonUIAgentProxy();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v3 + v4 + v6) & ~v6;
  swift_release();
  v8 = v0 + v3 + *(int *)(v1 + 48);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FCA0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  v10 = v0 + v7 + *(int *)(v5 + 24);
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DA58);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24474D2E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FC98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24474D328()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737FC98);
  type metadata accessor for PreviewNonUIAgentProxy();
  return sub_24474BC88();
}

uint64_t sub_24474D394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FC98);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  v4 = v3 + *(int *)(v1 + 48);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FCA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t sub_24474D428()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737FC98);
  return sub_24474BD94();
}

uint64_t sub_24474D468(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FC98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t LocalContentProvider.viewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t LocalContentProvider.stop()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  return sub_2447949D4();
}

uint64_t LocalContentProvider.prepareForRelaunch()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  return sub_2447949D4();
}

uint64_t LocalContentProvider.confirmReadyForDisplayAfterAsyncResize()()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  return sub_2447949D4();
}

CGImageRef __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> LocalContentProvider.makeSnapshotImage()()
{
  uint64_t v0;
  void *v1;
  id v2;
  CGImageRef result;
  id v4;
  id v5;
  _QWORD *v6;

  v1 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 8) + 8) + 8))();
  v2 = objc_msgSend(v1, sel_view);

  if (v2)
  {
    v4 = objc_msgSend(v2, sel_window);

    if (v4)
    {
      v5 = objc_msgSend(v4, sel_uv_createSnapshotImageFromIOSurface);
      if (v5)
      {
        v2 = v5;

        return (CGImageRef)v2;
      }
      sub_24474D79C();
      swift_allocError();
      *v6 = v4;
    }
    else
    {
      sub_244794440();
      sub_24474D754();
      swift_allocError();
      sub_24479444C();
    }
    swift_willThrow();
    return (CGImageRef)v2;
  }
  __break(1u);
  return result;
}

unint64_t sub_24474D754()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25737FCB0;
  if (!qword_25737FCB0)
  {
    v1 = sub_244794440();
    result = MEMORY[0x249518824](MEMORY[0x24BE763C0], v1);
    atomic_store(result, (unint64_t *)&qword_25737FCB0);
  }
  return result;
}

unint64_t sub_24474D79C()
{
  unint64_t result;

  result = qword_25737FCB8;
  if (!qword_25737FCB8)
  {
    result = MEMORY[0x249518824](&protocol conformance descriptor for LocalSnapshotError, &type metadata for LocalSnapshotError);
    atomic_store(result, (unint64_t *)&qword_25737FCB8);
  }
  return result;
}

void __swiftcall LocalSnapshotError.init(window:)(PreviewShellKit::LocalSnapshotError *__return_ptr retstr, UIWindow *window)
{
  retstr->window.super.super.super.isa = (Class)window;
}

unint64_t LocalSnapshotError.lowValueTitle.getter()
{
  return 0xD000000000000023;
}

uint64_t LocalSnapshotError.additionalInfo.getter()
{
  void **v0;
  void *v1;
  id v2;
  id v3;

  v1 = *v0;
  sub_2447954CC();
  sub_2447950E8();
  v2 = v1;
  v3 = objc_msgSend(v2, sel_description);
  sub_244795058();

  sub_2447950E8();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t LocalSnapshotError.additionalDiagnostics.getter()
{
  return 0;
}

uint64_t LocalSnapshotError.isPotentialCrash.getter()
{
  return 0;
}

unint64_t sub_24474D8D0()
{
  return 0xD000000000000023;
}

uint64_t sub_24474D8F0()
{
  sub_24474DF88();
  return sub_244794668();
}

uint64_t sub_24474D918()
{
  sub_24474DF88();
  return sub_244794638();
}

Swift::Void __swiftcall LocalContentViewController.display(viewController:)(UIViewController *viewController)
{
  char *v1;
  uint64_t v3;
  UIViewController *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  UIView *v11;
  UIView *v12;
  void *v13;
  UIViewController *v14;
  UIViewController *v15;

  v3 = OBJC_IVAR____TtC15PreviewShellKit26LocalContentViewController_contentViewController;
  v4 = *(UIViewController **)&v1[OBJC_IVAR____TtC15PreviewShellKit26LocalContentViewController_contentViewController];
  v15 = viewController;
  if (!v4)
    goto LABEL_7;
  if (v4 != viewController)
  {
    -[UIViewController willMoveToParentViewController:](v4, sel_willMoveToParentViewController_, 0);
    viewController = v15;
    v5 = *(void **)&v1[v3];
    if (v5)
    {
      v6 = objc_msgSend(v5, sel_view, v15);
      if (!v6)
      {
LABEL_13:
        __break(1u);
        return;
      }
      v7 = v6;
      objc_msgSend(v6, sel_removeFromSuperview);

      v8 = *(void **)&v1[v3];
      viewController = v15;
      if (v8)
      {
        objc_msgSend(v8, sel_removeFromParentViewController, v15);
        viewController = v15;
      }
    }
LABEL_7:
    objc_msgSend(v1, sel_addChildViewController_, viewController);
    v9 = objc_msgSend(v1, sel_view);
    if (v9)
    {
      v10 = v9;
      v11 = -[UIViewController view](v15, sel_view);
      if (v11)
      {
        v12 = v11;
        objc_msgSend(v10, sel_addSubview_, v11);

        -[UIViewController didMoveToParentViewController:](v15, sel_didMoveToParentViewController_, v1);
        v13 = *(void **)&v1[v3];
        *(_QWORD *)&v1[v3] = v15;

        v14 = v15;
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_13;
  }
}

Swift::Void __swiftcall LocalContentViewController.viewDidLayoutSubviews()()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  objc_super v14;

  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, sel_viewDidLayoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC15PreviewShellKit26LocalContentViewController_contentViewController];
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_view);
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v0, sel_view);
      if (v4)
      {
        v5 = v4;
        objc_msgSend(v4, sel_bounds);
        v7 = v6;
        v9 = v8;
        v11 = v10;
        v13 = v12;

        objc_msgSend(v3, sel_setFrame_, v7, v9, v11, v13);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id LocalContentViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_24479504C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id LocalContentViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  objc_class *ObjectType;
  void *v7;
  id v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtC15PreviewShellKit26LocalContentViewController_contentViewController] = 0;
  if (a2)
  {
    v7 = (void *)sub_24479504C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, v7, a3);

  return v8;
}

id LocalContentViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id LocalContentViewController.init(coder:)(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC15PreviewShellKit26LocalContentViewController_contentViewController] = 0;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

id LocalContentViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_24474DEB0()
{
  unint64_t result;

  result = qword_25737FCC8;
  if (!qword_25737FCC8)
  {
    result = MEMORY[0x249518824](&protocol conformance descriptor for LocalSnapshotError, &type metadata for LocalSnapshotError);
    atomic_store(result, (unint64_t *)&qword_25737FCC8);
  }
  return result;
}

unint64_t sub_24474DEF8()
{
  unint64_t result;

  result = qword_25737FCD0;
  if (!qword_25737FCD0)
  {
    result = MEMORY[0x249518824](&protocol conformance descriptor for LocalSnapshotError, &type metadata for LocalSnapshotError);
    atomic_store(result, (unint64_t *)&qword_25737FCD0);
  }
  return result;
}

uint64_t dispatch thunk of LocalContentProvider.localViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

ValueMetadata *type metadata accessor for LocalSnapshotError()
{
  return &type metadata for LocalSnapshotError;
}

uint64_t type metadata accessor for LocalContentViewController()
{
  return objc_opt_self();
}

unint64_t sub_24474DF88()
{
  unint64_t result;

  result = qword_25737FD00;
  if (!qword_25737FD00)
  {
    result = MEMORY[0x249518824](&protocol conformance descriptor for LocalSnapshotError, &type metadata for LocalSnapshotError);
    atomic_store(result, (unint64_t *)&qword_25737FD00);
  }
  return result;
}

uint64_t sub_24474DFCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v3 = sub_244794068();
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v40 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v33 - v6;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (!v7)
    return v8;
  v33 = v1;
  v43 = MEMORY[0x24BEE4AF8];
  sub_24470FFA8(0, v7, 0);
  result = sub_24470FFC8(a1);
  v11 = result;
  v12 = 0;
  v13 = a1 + 64;
  v34 = a1 + 80;
  v35 = v7;
  v37 = a1 + 64;
  v38 = a1;
  v36 = v10;
  while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(_BYTE *)(a1 + 32))
  {
    v16 = (unint64_t)v11 >> 6;
    if ((*(_QWORD *)(v13 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v10)
      goto LABEL_26;
    v17 = *(_QWORD *)(a1 + 56);
    v19 = v41;
    v18 = v42;
    v20 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v39, v17 + *(_QWORD *)(v41 + 72) * v11, v42);
    v21 = v40;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v40, v20, v18);
    v22 = sub_24479405C();
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v8 = v43;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_24470FFA8(0, *(_QWORD *)(v8 + 16) + 1, 1);
      v8 = v43;
    }
    v26 = *(_QWORD *)(v8 + 16);
    v25 = *(_QWORD *)(v8 + 24);
    if (v26 >= v25 >> 1)
    {
      result = sub_24470FFA8(v25 > 1, v26 + 1, 1);
      v8 = v43;
    }
    *(_QWORD *)(v8 + 16) = v26 + 1;
    v27 = v8 + 16 * v26;
    *(_QWORD *)(v27 + 32) = v22;
    *(_QWORD *)(v27 + 40) = v24;
    a1 = v38;
    v14 = 1 << *(_BYTE *)(v38 + 32);
    if (v11 >= v14)
      goto LABEL_27;
    v13 = v37;
    v28 = *(_QWORD *)(v37 + 8 * v16);
    if ((v28 & (1 << v11)) == 0)
      goto LABEL_28;
    LODWORD(v10) = v36;
    if (*(_DWORD *)(v38 + 36) != (_DWORD)v36)
      goto LABEL_29;
    v29 = v28 & (-2 << (v11 & 0x3F));
    if (v29)
    {
      v14 = __clz(__rbit64(v29)) | v11 & 0xFFFFFFFFFFFFFFC0;
      v15 = v35;
    }
    else
    {
      v30 = v16 + 1;
      v31 = (unint64_t)(v14 + 63) >> 6;
      v15 = v35;
      if (v16 + 1 < v31)
      {
        v32 = *(_QWORD *)(v37 + 8 * v30);
        if (v32)
        {
LABEL_22:
          v14 = __clz(__rbit64(v32)) + (v30 << 6);
        }
        else
        {
          while (v31 - 2 != v16)
          {
            v32 = *(_QWORD *)(v34 + 8 * v16++);
            if (v32)
            {
              v30 = v16 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v12;
    v11 = v14;
    if (v12 == v15)
      return v8;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t PreviewsJITLinker.pid.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16);
}

uint64_t PreviewsJITLinker.agent.getter()
{
  return swift_retain();
}

uint64_t PreviewsJITLinker.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  v2 = sub_244794AAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  v8 = sub_244794AA0();
  v9 = sub_244795370();
  v10 = os_log_type_enabled(v8, v9);
  v24 = v7;
  if (v10)
  {
    v11 = swift_slowAlloc();
    v23 = v2;
    v12 = (uint8_t *)v11;
    v13 = swift_slowAlloc();
    v22 = v3;
    v14 = v13;
    v27[0] = v13;
    *(_DWORD *)v12 = 136446210;
    swift_bridgeObjectRetain();
    v25 = sub_24470600C(v7, v6, v27);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2446FC000, v8, v9, "%{public}s: Deallocating Previews JIT linker", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v14, -1, -1);
    MEMORY[0x2495188D8](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v23);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v15 = *(_QWORD *)(v1 + 64);
  if (v15)
  {
    v17 = *(_QWORD *)(v1 + 96);
    v16 = *(_QWORD *)(v1 + 104);
    v19 = *(_QWORD *)(v1 + 80);
    v18 = *(_QWORD *)(v1 + 88);
    v23 = *(_QWORD *)(v1 + 72);
    v27[0] = *(_QWORD *)(v1 + 56);
    v20 = v27[0];
    v27[1] = v15;
    v28 = v23;
    v29 = v19;
    v30 = v18;
    v31 = v17;
    v32 = v16;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24474E64C();
    v25 = 0;
    v26 = 0xE000000000000000;
    sub_2447954CC();
    sub_2447950E8();
    sub_2447950E8();
    sub_2447950E8();
    sub_2447945B4();
    swift_bridgeObjectRelease();
    sub_24474E5F0(v20, v15);
  }
  swift_release();
  swift_bridgeObjectRelease();

  sub_24474E5F0(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_24474E5F0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24474E64C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = sub_244794AAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = v1[1];
  swift_bridgeObjectRetain();
  sub_244794A88();
  swift_bridgeObjectRetain();
  v8 = sub_244794AA0();
  v9 = sub_244795394();
  if (os_log_type_enabled(v8, v9))
  {
    v15 = v3;
    v10 = swift_slowAlloc();
    v16 = v2;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v18 = v12;
    *(_DWORD *)v11 = 136446210;
    swift_bridgeObjectRetain();
    v17 = sub_24470600C(v6, v7, &v18);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2446FC000, v8, v9, "%{public}s: Invalidating JIT linker", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v12, -1, -1);
    MEMORY[0x2495188D8](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v16);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_retain();
  sub_244794B00();
  return swift_release();
}

uint64_t PreviewsJITLinker.__deallocating_deinit()
{
  PreviewsJITLinker.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_24474E860(int a1, void (*a2)(_QWORD), int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_QWORD, _QWORD);
  uint8_t *v27;
  void (*v28)(char *, uint64_t, void (*)(_QWORD, _QWORD));
  char *v29;
  uint8_t *v30;
  uint64_t (*v31)(char *, _QWORD);
  void (*v32)(_QWORD, _QWORD);
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t *v39;
  uint64_t *v40;
  _QWORD *v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  id v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v61;
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  int v65;
  uint64_t v66;
  void (*v67)(char *);
  uint64_t *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  void (*v81)(char *);
  void (*v82)(char *);
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *);
  char *v91;
  NSObject *v92;
  os_log_type_t v93;
  _BOOL4 v94;
  void (*v95)(char *, uint64_t);
  uint8_t *v96;
  void (*v97)(char *);
  uint64_t v98;
  char *v99;
  int v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  void *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unsigned int v112;
  void (*v113)(char *);
  uint8_t *v114;
  void (*v115)(_QWORD, _QWORD);
  uint64_t v116;
  uint64_t v117;
  char *v118;
  void (*v119)(_QWORD);
  uint64_t v120;
  void (*v121)(char *);
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v117 = a6;
  v103 = a5;
  v116 = a4;
  v100 = a3;
  v119 = a2;
  v101 = a1;
  v6 = sub_244794A4C();
  v108 = *(_QWORD *)(v6 - 8);
  v109 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v107 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_244794AAC();
  v102 = *(_QWORD *)(v104 - 8);
  v8 = MEMORY[0x24BDAC7A8](v104);
  v99 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v105 = (char *)&v98 - v10;
  v11 = sub_244793B28();
  v114 = *(uint8_t **)(v11 - 8);
  v115 = (void (*)(_QWORD, _QWORD))v11;
  MEMORY[0x24BDAC7A8](v11);
  v118 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2447953B8();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v13);
  v15 = sub_244794FE0();
  MEMORY[0x24BDAC7A8](v15);
  v16 = sub_2447953C4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_24475E8D0();
  v112 = *MEMORY[0x24BEE5758];
  v113 = *(void (**)(char *))(v17 + 104);
  v113(v19);
  sub_244794FD4();
  v121 = (void (*)(char *))MEMORY[0x24BEE4AF8];
  v110 = sub_24470665C(&qword_257380038, v14, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380040);
  sub_24470130C(&qword_257380048, &qword_257380040, MEMORY[0x24BEE12C8]);
  sub_24479546C();
  v20 = sub_2447953DC();
  v21 = v120;
  *(_QWORD *)(v120 + 48) = v20;
  *(_OWORD *)(v21 + 56) = 0u;
  *(_OWORD *)(v21 + 72) = 0u;
  *(_OWORD *)(v21 + 88) = 0u;
  *(_QWORD *)(v21 + 104) = 0;
  ((void (*)(char *, _QWORD, uint64_t))v113)(v19, v112, v16);
  sub_244794FD4();
  v121 = (void (*)(char *))MEMORY[0x24BEE4AF8];
  sub_24479546C();
  *(_QWORD *)(v21 + 128) = sub_2447953DC();
  v121 = 0;
  v122 = 0xE000000000000000;
  sub_2447954CC();
  swift_bridgeObjectRelease();
  v121 = (void (*)(char *))0xD000000000000012;
  v122 = 0x800000024479F110;
  v22 = v119;
  swift_bridgeObjectRetain();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  v23 = v122;
  v113 = v121;
  v24 = (uint64_t)v22 + OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity;
  v25 = v24 + *(int *)(type metadata accessor for BatchIdentity(0) + 28);
  v27 = v114;
  v26 = v115;
  v28 = (void (*)(char *, uint64_t, void (*)(_QWORD, _QWORD)))*((_QWORD *)v114 + 2);
  v29 = v118;
  v28(v118, v25, v115);
  v30 = v27;
  v31 = (uint64_t (*)(char *, _QWORD))*((_QWORD *)v27 + 11);
  v32 = v26;
  v33 = v31(v29, v26);
  if (v33 != *MEMORY[0x24BE77018] && v33 != *MEMORY[0x24BE77020])
  {
    swift_bridgeObjectRelease();
    v34 = sub_244793E58();
    v36 = v35;
    v37 = type metadata accessor for PreviewsJITLinker.UnknownAgentProcessType(0);
    sub_24470665C(&qword_257380050, type metadata accessor for PreviewsJITLinker.UnknownAgentProcessType, (uint64_t)&unk_24479AF60);
    v38 = (void *)swift_allocError();
    v40 = v39;
    *v39 = v34;
    v39[1] = v36;
    v28((char *)v39 + *(int *)(v37 + 20), v25, v32);
    v41 = (uint64_t *)((char *)v40 + *(int *)(v37 + 24));
    *v41 = 0;
    v41[1] = 0;
    swift_willThrow();
    (*((void (**)(char *, _QWORD))v30 + 1))(v118, v32);
LABEL_6:
    v50 = v108;
    v49 = v109;
    v51 = v107;
    sub_244794A40();
    v52 = v38;
    sub_24470665C(&qword_25737FFE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE76C68], MEMORY[0x24BE76C60]);
    sub_24479465C();

    (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v49);
    v53 = v123;
    v54 = __swift_project_boxed_opaque_existential_1(&v121, v123);
    v55 = *(_QWORD *)(v53 - 8);
    MEMORY[0x24BDAC7A8](v54);
    v57 = (char *)&v98 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v55 + 16))(v57);
    if (sub_2447955BC())
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v53);
    }
    else
    {
      swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v58, v57, v53);
    }
    swift_willThrow();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v121);
    v59 = v120;

    sub_24474E5F0(*(_QWORD *)(v59 + 56), *(_QWORD *)(v59 + 64));
    type metadata accessor for PreviewsJITLinker();
    swift_deallocPartialClassInstance();
    return v120;
  }
  v42 = v23;
  v43 = v33 != *MEMORY[0x24BE77018];
  v44 = sub_244793E58();
  v46 = v45;
  type metadata accessor for PreviewsJITSandboxContainerExtension();
  swift_allocObject();
  v47 = v106;
  v48 = sub_244749D78(v44, v46, v43);
  v38 = v47;
  if (v47)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v61 = v48;
  *(_QWORD *)(v120 + 112) = v48;
  swift_retain();
  v62 = v105;
  sub_244794A88();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v63 = sub_244794AA0();
  v64 = sub_244795370();
  v65 = v64;
  if (os_log_type_enabled(v63, v64))
  {
    v66 = swift_slowAlloc();
    v67 = v113;
    v68 = v61;
    v69 = v66;
    v118 = (char *)swift_slowAlloc();
    v121 = (void (*)(char *))v118;
    *(_DWORD *)v69 = 136446722;
    LODWORD(v115) = v65;
    swift_bridgeObjectRetain();
    v125 = sub_24470600C((uint64_t)v67, v42, (uint64_t *)&v121);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v69 + 12) = 2080;
    v71 = v68[2];
    v70 = v68[3];
    swift_bridgeObjectRetain();
    v125 = sub_24470600C(v71, v70, (uint64_t *)&v121);
    sub_244795448();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 22) = 2080;
    v72 = sub_2447937E0();
    v125 = sub_24470600C(v72, v73, (uint64_t *)&v121);
    sub_244795448();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2446FC000, v63, (os_log_type_t)v115, "%{public}s: Received sandbox extension for %s, container path: %s", (uint8_t *)v69, 0x20u);
    v74 = v118;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v74, -1, -1);
    v75 = v69;
    v61 = v68;
    MEMORY[0x2495188D8](v75, -1, -1);

    v76 = *(void (**)(char *, uint64_t))(v102 + 8);
    v76(v105, v104);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    v67 = v113;
    v76 = *(void (**)(char *, uint64_t))(v102 + 8);
    v76(v62, v104);
  }
  v77 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380058);
  v78 = swift_allocObject();
  *(_DWORD *)(v78 + 24) = 0;
  *(_QWORD *)(v78 + 16) = v77;
  *(_QWORD *)(v120 + 120) = v78;
  sub_244794C74();
  v79 = (_QWORD *)swift_allocObject();
  v79[2] = v78;
  v79[3] = v67;
  v79[4] = v42;
  swift_unknownObjectRetain();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v80 = sub_244794B6C();
  v115 = (void (*)(_QWORD, _QWORD))v76;
  v118 = (char *)v61;
  v81 = v67;
  v82 = (void (*)(char *))v119;
  v83 = (_QWORD *)v120;
  *(_DWORD *)(v120 + 16) = v101;
  v83[3] = v82;
  v83[4] = v81;
  v83[5] = v42;
  sub_244794BE4();
  swift_allocObject();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain();
  v84 = sub_244794BF0();
  v86 = v83[7];
  v85 = v83[8];
  v83[7] = v81;
  v83[8] = v42;
  v87 = MEMORY[0x24BEE4B00];
  v83[9] = 0;
  v83[10] = v80;
  v83[11] = v84;
  v83[12] = v87;
  v83[13] = MEMORY[0x24BEE4B08];
  sub_24474E5F0(v86, v85);
  if ((v100 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v88 = type metadata accessor for XOJITAgentSymbolTableDataProvider();
    swift_allocObject();
    v89 = swift_retain();
    v90 = (void (*)(char *))sub_24475A2C0(v89, 0);
    sub_2447947C4();
    sub_2447947B8();
    v123 = v88;
    v124 = sub_24470665C(&qword_257380068, (uint64_t (*)(uint64_t))type metadata accessor for XOJITAgentSymbolTableDataProvider, (uint64_t)&unk_24479A3D8);
    v121 = v90;
    swift_retain();
    sub_244794788();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v121);
    v121 = v82;
    type metadata accessor for Agent(0);
    sub_24470665C((unint64_t *)&qword_257380060, type metadata accessor for Agent, (uint64_t)&protocol conformance descriptor for Agent);
    swift_retain();
    sub_244794530();
    swift_release();
    swift_release();
  }
  else
  {
    v91 = v99;
    sub_244794A88();
    swift_bridgeObjectRetain();
    v92 = sub_244794AA0();
    v93 = sub_244795370();
    v94 = os_log_type_enabled(v92, v93);
    v95 = (void (*)(char *, uint64_t))v115;
    if (v94)
    {
      v96 = (uint8_t *)swift_slowAlloc();
      v121 = (void (*)(char *))swift_slowAlloc();
      v97 = v121;
      *(_DWORD *)v96 = 136446210;
      v114 = v96 + 4;
      swift_bridgeObjectRetain();
      v125 = sub_24470600C((uint64_t)v113, v42, (uint64_t *)&v121);
      sub_244795448();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2446FC000, v92, v93, "%{public}s: Not listening to XOJIT symbol table stream", v96, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v97, -1, -1);
      MEMORY[0x2495188D8](v96, -1, -1);

      v115(v99, v104);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v95(v91, v104);
    }
    v82 = (void (*)(char *))v119;
  }
  v121 = v82;
  type metadata accessor for Agent(0);
  sub_24470665C((unint64_t *)&qword_257380060, type metadata accessor for Agent, (uint64_t)&protocol conformance descriptor for Agent);
  swift_retain();
  sub_244794530();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v120;
}

uint64_t sub_24474F674(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[2];

  v21 = a3;
  v22 = sub_244794AAC();
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_244794AC4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794AD0();
  if ((*(unsigned int (**)(char *, uint64_t))(v10 + 88))(v12, v9) != *MEMORY[0x24BEC62F0])
  {
    os_unfair_lock_lock((os_unfair_lock_t)(a2 + 24));
    sub_24474F934((_QWORD *)(a2 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(a2 + 24));
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v13 = sub_244794AA0();
  v14 = sub_24479537C();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v24[0] = v16;
    *(_DWORD *)v15 = 136446466;
    swift_bridgeObjectRetain();
    v23 = sub_24470600C(v21, a4, v24);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    v17 = sub_244794AB8();
    v23 = sub_24470600C(v17, v18, v24);
    sub_244795448();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2446FC000, v13, v14, "%{public}s: XOJIT Link Error: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v16, -1, -1);
    MEMORY[0x2495188D8](v15, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v22);
}

uint64_t sub_24474F934(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_retain();
  MEMORY[0x249517CC0](v2);
  if (*(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2447951A8();
  sub_2447951CC();
  return sub_24479519C();
}

uint64_t sub_24474F9AC()
{
  sub_2447947C4();
  sub_2447947B8();
  sub_2447947AC();
  return swift_release();
}

uint64_t sub_24474F9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = *(_QWORD *)(a2 - 8);
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 + 64);
  v4[8] = swift_task_alloc();
  v6 = sub_244793E64();
  v4[9] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[10] = v7;
  v4[11] = *(_QWORD *)(v7 + 64);
  v4[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24474FA70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  v17 = v4;
  v18 = *(_QWORD *)(v0 + 56);
  v19 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD **)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 16);
  v8 = v5[3];
  v20 = v5[4];
  v21 = v5[5];
  v9 = OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity;
  v10 = type metadata accessor for BatchIdentity(0);
  v22 = *(_OWORD *)(v0 + 24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v8 + *(int *)(v10 + 20) + v9, v3);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v6 + 16))(v4, v7, v22);
  v11 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v12 = (v19 + *(unsigned __int8 *)(v6 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v0 + 104) = v13;
  *(_OWORD *)(v13 + 16) = v22;
  *(_QWORD *)(v13 + 32) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v13 + v11, v1, v3);
  (*(void (**)(unint64_t, uint64_t, _QWORD))(v6 + 32))(v13 + v12, v17, v22);
  v14 = (_QWORD *)(v13 + ((v18 + v12 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v14 = v20;
  v14[1] = v21;
  swift_bridgeObjectRetain();
  swift_retain();
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v15;
  *v15 = v0;
  v15[1] = sub_24474FC18;
  return sub_2447953AC();
}

uint64_t sub_24474FC18()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24474FC84()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24474FCC4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24474FD04(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  void *v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  id v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66[3];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;

  v8 = v7;
  v64 = a5;
  v58 = a4;
  v14 = sub_244794AAC();
  v59 = *(_QWORD *)(v14 - 8);
  v60 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v65 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_244794A4C();
  v62 = *(_QWORD *)(v16 - 8);
  v63 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v61 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_244793E64();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[8];
  if (v22)
  {
    v23 = a1[12];
    v24 = a1[13];
    v26 = a1[10];
    v25 = a1[11];
    v27 = a1[9];
    v68 = a1[7];
    v69 = v22;
    v70 = v27;
    *(_QWORD *)&v71 = v26;
    *((_QWORD *)&v71 + 1) = v25;
    *(_QWORD *)&v72 = v23;
    *((_QWORD *)&v72 + 1) = v24;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24475032C(a3, a6, a7);
    if (v8)
    {
      v28 = v65;
      sub_244794A88();
      v29 = v64;
      swift_bridgeObjectRetain();
      v30 = v8;
      swift_bridgeObjectRetain();
      v31 = v8;
      v32 = sub_244794AA0();
      v33 = sub_24479537C();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = swift_slowAlloc();
        v56 = (_QWORD *)swift_slowAlloc();
        v57 = swift_slowAlloc();
        v66[0] = v57;
        *(_DWORD *)v34 = 136446466;
        swift_bridgeObjectRetain();
        v73 = sub_24470600C(v58, v29, v66);
        sub_244795448();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v34 + 12) = 2112;
        v35 = v8;
        v36 = _swift_stdlib_bridgeErrorToNSError();
        v73 = v36;
        sub_244795448();
        v37 = v56;
        *v56 = v36;

        _os_log_impl(&dword_2446FC000, v32, v33, "%{public}s: Failed loading target descriptions: %@", (uint8_t *)v34, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
        swift_arrayDestroy();
        MEMORY[0x2495188D8](v37, -1, -1);
        v38 = v57;
        swift_arrayDestroy();
        MEMORY[0x2495188D8](v38, -1, -1);
        MEMORY[0x2495188D8](v34, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();

      }
      (*(void (**)(char *, uint64_t))(v59 + 8))(v28, v60);
      v47 = v62;
      v46 = v63;
      v48 = v61;
      v73 = a1[15];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737FFD8);
      sub_24470130C(&qword_25737FFE0, &qword_25737FFD8, MEMORY[0x24BE76C78]);
      sub_244794884();
      sub_24476749C(v66[0]);
      swift_bridgeObjectRelease();
      sub_244794A40();
      v49 = v8;
      sub_24470665C(&qword_25737FFE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE76C68], MEMORY[0x24BE76C60]);
      sub_24479465C();

      (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v46);
      v50 = v67;
      v51 = __swift_project_boxed_opaque_existential_1(v66, v67);
      v52 = *(_QWORD *)(v50 - 8);
      MEMORY[0x24BDAC7A8](v51);
      v54 = (char *)&v56 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v52 + 16))(v54);
      if (sub_2447955BC())
      {
        (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v50);
      }
      else
      {
        swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v55, v54, v50);
      }
      swift_willThrow();

      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v66);
    }
    else
    {
      v41 = v69;
      v42 = v70;
      v43 = a1[7];
      v44 = a1[8];
      a1[7] = v68;
      a1[8] = v41;
      a1[9] = v42;
      v45 = v72;
      *((_OWORD *)a1 + 5) = v71;
      *((_OWORD *)a1 + 6) = v45;
      return sub_24474E5F0(v43, v44);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a2, v18);
    type metadata accessor for PreviewsJITLinker.InvalidatedError(0);
    sub_24470665C(&qword_25737FFF0, type metadata accessor for PreviewsJITLinker.InvalidatedError, (uint64_t)&unk_24479B160);
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v39, v21, v18);
    return swift_willThrow();
  }
}

uint64_t sub_24475032C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, uint64_t, uint64_t);
  NSObject *v44;
  os_log_type_t v45;
  int v46;
  _BOOL4 v47;
  uint64_t v48;
  NSObject *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t AssociatedConformanceWitness;
  char *v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  int v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int isUniquelyReferenced_nonNull_native;
  char v80;
  unint64_t v81;
  uint64_t v82;
  _BOOL8 v83;
  uint64_t v84;
  char v85;
  unint64_t v86;
  char v87;
  _QWORD *v88;
  uint64_t *v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t *v98;
  char *v99;
  void (*v100)(char *, char *, uint64_t);
  uint64_t v101;
  char *v102;
  void (*v103)(char *, char *, uint64_t);
  char *v104;
  char *v105;
  uint64_t v106;
  char **v107;
  char **v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t);
  uint64_t result;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t AssociatedTypeWitness;
  uint64_t v147;
  char *v148;
  _QWORD *v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;

  v135 = a1;
  v6 = sub_244794C68();
  v136 = *(_QWORD *)(v6 - 8);
  v137 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = a3;
  v9 = *(_QWORD *)(a3 + 8);
  v122 = sub_2447954E4();
  v121 = *(_QWORD *)(v122 - 8);
  MEMORY[0x24BDAC7A8](v122);
  v120 = (char *)&v112 - v10;
  v119 = sub_24479552C();
  MEMORY[0x24BDAC7A8](v119);
  v118 = (char *)&v112 - v11;
  v143 = sub_244795520();
  v123 = *(_QWORD *)(v143 - 8);
  MEMORY[0x24BDAC7A8](v143);
  v142 = (char *)&v112 - v12;
  v13 = sub_244794068();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v148 = (char *)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v115 = (char *)&v112 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v113 = (char *)&v112 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v114 = (char *)&v112 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v144 = (char *)&v112 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF70);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v139 = (char *)&v112 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v141 = (char *)&v112 - v27;
  v133 = v9;
  v134 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v128 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v28 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v145 = (char *)&v112 - v29;
  v147 = *(_QWORD *)(a2 - 8);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v138 = (char *)&v112 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v112 - v32;
  v132 = sub_244794AAC();
  v131 = *(_QWORD *)(v132 - 8);
  MEMORY[0x24BDAC7A8](v132);
  v35 = (char *)&v112 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_2447944DC();
  v126 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127);
  v37 = (char *)&v112 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = *v3;
  v38 = v3[1];
  v124 = v3;
  swift_bridgeObjectRetain_n();
  v116 = v39;
  sub_2447944C4();
  v129 = v37;
  v40 = v134;
  sub_2447944D0();
  sub_244794A88();
  v41 = v33;
  v42 = v33;
  v43 = *(void (**)(char *, uint64_t, uint64_t))(v147 + 16);
  v43(v42, v135, v40);
  swift_bridgeObjectRetain();
  v130 = v35;
  v44 = sub_244794AA0();
  v45 = sub_244795370();
  v46 = v45;
  v47 = os_log_type_enabled(v44, v45);
  v140 = v8;
  if (v47)
  {
    v48 = swift_slowAlloc();
    v112 = swift_slowAlloc();
    v149 = (_QWORD *)v112;
    *(_DWORD *)v48 = 136446466;
    swift_bridgeObjectRetain();
    v152 = sub_24470600C(v116, v38, (uint64_t *)&v149);
    LODWORD(v116) = v46;
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v48 + 12) = 2082;
    v49 = v44;
    v50 = sub_244795334();
    v152 = sub_24470600C(v50, v51, (uint64_t *)&v149);
    v40 = v134;
    sub_244795448();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v147 + 8))(v41, v40);
    _os_log_impl(&dword_2446FC000, v44, (os_log_type_t)v116, "%{public}s: Loading %{public}s", (uint8_t *)v48, 0x16u);
    v52 = v112;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v52, -1, -1);
    v53 = v48;
    v8 = v140;
    MEMORY[0x2495188D8](v53, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v147 + 8))(v41, v40);

  }
  (*(void (**)(char *, uint64_t))(v131 + 8))(v130, v132);
  v152 = sub_244727014(MEMORY[0x24BEE4AF8]);
  v43(v138, v135, v40);
  sub_24479513C();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v55 = v141;
  v138 = (char *)AssociatedConformanceWitness;
  sub_24479543C();
  v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v57 = v56(v55, 1, v13);
  v58 = v144;
  if (v57 == 1)
  {
LABEL_5:
    (*(void (**)(char *, uint64_t))(v128 + 8))(v145, AssociatedTypeWitness);
    v151 = MEMORY[0x24BEE4AF8];
    v59 = v120;
    sub_244795148();
    v60 = v122;
    MEMORY[0x249518824](MEMORY[0x24BEE25B0], v122);
    sub_244795598();
    (*(void (**)(char *, uint64_t))(v121 + 8))(v59, v60);
    sub_244795508();
    sub_244795514();
    v61 = v150;
    if (v150)
    {
      v62 = (uint64_t)v149;
      v63 = v125;
      v64 = v129;
      while (1)
      {
        sub_244756800(v62, v61, (void (*)(uint64_t, uint64_t, uint64_t))&v152, &v151, (uint64_t)v8);
        if (v63)
          break;
        (*(void (**)(char *, uint64_t))(v136 + 8))(v8, v137);
        swift_bridgeObjectRelease();
        sub_244795514();
        v62 = (uint64_t)v149;
        v61 = v150;
        if (!v150)
          goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v123 + 8))(v142, v143);
    }
    else
    {
      v63 = v125;
      v64 = v129;
LABEL_29:
      (*(void (**)(char *, uint64_t))(v123 + 8))(v142, v143);
      v93 = swift_bridgeObjectRetain();
      v94 = sub_2447673A0(v93);
      swift_bridgeObjectRelease_n();
      sub_244757BC0(v94);
      if (!v63)
      {
        swift_bridgeObjectRelease();
        v95 = v152;
        v96 = v127;
        v97 = v126;
        if (*(_QWORD *)(v152 + 16))
        {
          sub_24475E540();
          swift_allocError();
          *v98 = v95;
          swift_bridgeObjectRetain();
          swift_willThrow();
        }
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v96 = v127;
    v97 = v126;
LABEL_36:
    sub_2447944B8();
    return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v64, v96);
  }
  v147 = *(_QWORD *)(v14 + 32);
  ((void (*)(char *, char *, uint64_t))v147)(v144, v55, v13);
  while (1)
  {
    v67 = sub_244794008();
    v69 = v152;
    if (*(_QWORD *)(v152 + 16) && (v70 = sub_24470F788(v67, v68), (v71 & 1) != 0))
    {
      v72 = *(_QWORD *)(v69 + 56) + *(_QWORD *)(v14 + 72) * v70;
      v73 = (uint64_t)v139;
      (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v139, v72, v13);
      v74 = 0;
    }
    else
    {
      v74 = 1;
      v73 = (uint64_t)v139;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v73, v74, 1, v13);
    swift_bridgeObjectRelease();
    if (v56((char *)v73, 1, v13) != 1)
    {
      v99 = v114;
      v100 = (void (*)(char *, char *, uint64_t))v147;
      ((void (*)(char *, uint64_t, uint64_t))v147)(v114, v73, v13);
      v148 = (char *)sub_244794008();
      v143 = v101;
      v102 = v58;
      v103 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      v104 = v113;
      v103(v113, v99, v13);
      v105 = v115;
      v103(v115, v102, v13);
      v106 = type metadata accessor for PreviewsJITLinkerState.TargetDescriptionWithDuplicateInstallNameEncountered(0);
      sub_24470665C((unint64_t *)&unk_25737FFB8, type metadata accessor for PreviewsJITLinkerState.TargetDescriptionWithDuplicateInstallNameEncountered, (uint64_t)&unk_24479B0E0);
      swift_allocError();
      v108 = v107;
      v109 = v143;
      *v107 = v148;
      v107[1] = (char *)v109;
      v100((char *)v107 + *(int *)(v106 + 20), v104, v13);
      v100((char *)v108 + *(int *)(v106 + 24), v105, v13);
      swift_willThrow();
      v110 = *(void (**)(char *, uint64_t))(v14 + 8);
      v110(v99, v13);
      v110(v144, v13);
      (*(void (**)(char *, uint64_t))(v128 + 8))(v145, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      v96 = v127;
      v97 = v126;
      v64 = v129;
      goto LABEL_36;
    }
    sub_244701444(v73, &qword_25737FF70);
    v75 = sub_244794008();
    v77 = v76;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v148, v58, v13);
    v78 = v152;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v149 = (_QWORD *)v78;
    v152 = 0x8000000000000000;
    v81 = sub_24470F788(v75, v77);
    v82 = *(_QWORD *)(v78 + 16);
    v83 = (v80 & 1) == 0;
    v84 = v82 + v83;
    if (__OFADD__(v82, v83))
      break;
    v85 = v80;
    if (*(_QWORD *)(v78 + 24) >= v84)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_24478E4B0();
    }
    else
    {
      sub_24478AB5C(v84, isUniquelyReferenced_nonNull_native);
      v86 = sub_24470F788(v75, v77);
      if ((v85 & 1) != (v87 & 1))
        goto LABEL_40;
      v81 = v86;
    }
    v58 = v144;
    v88 = v149;
    if ((v85 & 1) != 0)
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v14 + 40))(v149[7] + *(_QWORD *)(v14 + 72) * v81, v148, v13);
    }
    else
    {
      v149[(v81 >> 6) + 8] |= 1 << v81;
      v89 = (uint64_t *)(v88[6] + 16 * v81);
      *v89 = v75;
      v89[1] = v77;
      ((void (*)(unint64_t, char *, uint64_t))v147)(v88[7] + *(_QWORD *)(v14 + 72) * v81, v148, v13);
      v90 = v88[2];
      v91 = __OFADD__(v90, 1);
      v92 = v90 + 1;
      if (v91)
        goto LABEL_39;
      v88[2] = v92;
      swift_bridgeObjectRetain();
    }
    v152 = (unint64_t)v149;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v58, v13);
    v65 = v141;
    sub_24479543C();
    v66 = v56(v65, 1, v13);
    v8 = v140;
    if (v66 == 1)
      goto LABEL_5;
    ((void (*)(char *, char *, uint64_t))v147)(v58, v65, v13);
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  result = sub_2447955F8();
  __break(1u);
  return result;
}

uint64_t sub_244751038(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_244793E64();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = *(_QWORD *)(v4 + 64);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24475109C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[4];
  v4 = v0[5];
  v5 = (_QWORD *)v0[3];
  v17 = v5[5];
  v6 = v5[3];
  v15 = v0[2];
  v16 = v5[4];
  v7 = OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity;
  v8 = v6 + *(int *)(type metadata accessor for BatchIdentity(0) + 20) + v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v8, v3);
  v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v10 = (v2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = swift_allocObject();
  v0[8] = v11;
  *(_QWORD *)(v11 + 16) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v9, v1, v3);
  *(_QWORD *)(v11 + v10) = v15;
  v12 = (_QWORD *)(v11 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v12 = v16;
  v12[1] = v17;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v13 = (_QWORD *)swift_task_alloc();
  v0[9] = v13;
  *v13 = v0;
  v13[1] = sub_2447511F4;
  return sub_2447953AC();
}

uint64_t sub_2447511F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244751260()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 88);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_24475129C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_2447512D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  void *v6;
  void *v7;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t result;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  id v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[3];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;

  v7 = v6;
  v56 = a4;
  v57 = a6;
  v12 = sub_244794AAC();
  v58 = *(_QWORD *)(v12 - 8);
  v59 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_244794A4C();
  v61 = *(_QWORD *)(v15 - 8);
  v62 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v60 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_244793E64();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[8];
  if (v21)
  {
    v22 = a1[12];
    v23 = a1[13];
    v25 = a1[10];
    v24 = a1[11];
    v26 = a1[9];
    v65 = a1[7];
    v66 = v21;
    v67 = v26;
    *(_QWORD *)&v68 = v25;
    *((_QWORD *)&v68 + 1) = v24;
    *(_QWORD *)&v69 = v22;
    *((_QWORD *)&v69 + 1) = v23;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = sub_2447518E0(a3);
    if (v7)
    {
      sub_244794A88();
      swift_bridgeObjectRetain();
      v28 = v7;
      swift_bridgeObjectRetain();
      v29 = v7;
      v30 = sub_244794AA0();
      v31 = sub_24479537C();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = swift_slowAlloc();
        v55 = (_QWORD *)swift_slowAlloc();
        v57 = (_BYTE *)swift_slowAlloc();
        v63[0] = (uint64_t)v57;
        *(_DWORD *)v32 = 136446466;
        swift_bridgeObjectRetain();
        v70 = sub_24470600C(v56, a5, v63);
        sub_244795448();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v32 + 12) = 2112;
        v33 = v7;
        v34 = _swift_stdlib_bridgeErrorToNSError();
        v70 = v34;
        sub_244795448();
        v35 = v55;
        *v55 = v34;

        _os_log_impl(&dword_2446FC000, v30, v31, "%{public}s: Failed updating target descriptions: %@", (uint8_t *)v32, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
        swift_arrayDestroy();
        MEMORY[0x2495188D8](v35, -1, -1);
        v36 = v57;
        swift_arrayDestroy();
        MEMORY[0x2495188D8](v36, -1, -1);
        MEMORY[0x2495188D8](v32, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();

      }
      (*(void (**)(char *, uint64_t))(v58 + 8))(v14, v59);
      v46 = v61;
      v45 = v62;
      v47 = v60;
      v70 = a1[15];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737FFD8);
      sub_24470130C(&qword_25737FFE0, &qword_25737FFD8, MEMORY[0x24BE76C78]);
      sub_244794884();
      sub_24476749C(v63[0]);
      swift_bridgeObjectRelease();
      sub_244794A40();
      v48 = v7;
      sub_24470665C(&qword_25737FFE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE76C68], MEMORY[0x24BE76C60]);
      sub_24479465C();

      (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v45);
      v49 = v64;
      v50 = __swift_project_boxed_opaque_existential_1(v63, v64);
      v51 = *(_QWORD *)(v49 - 8);
      MEMORY[0x24BDAC7A8](v50);
      v53 = (char *)&v55 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v51 + 16))(v53);
      if (sub_2447955BC())
      {
        (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v49);
      }
      else
      {
        swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v54, v53, v49);
      }
      swift_willThrow();

      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v63);
    }
    else
    {
      v39 = v27;
      v40 = v66;
      v41 = v67;
      v42 = a1[7];
      v43 = a1[8];
      a1[7] = v65;
      a1[8] = v40;
      a1[9] = v41;
      v44 = v69;
      *((_OWORD *)a1 + 5) = v68;
      *((_OWORD *)a1 + 6) = v44;
      result = sub_24474E5F0(v42, v43);
      *v57 = v39 & 1;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a2, v17);
    type metadata accessor for PreviewsJITLinker.InvalidatedError(0);
    sub_24470665C(&qword_25737FFF0, type metadata accessor for PreviewsJITLinker.InvalidatedError, (uint64_t)&unk_24479B160);
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v37, v20, v17);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_2447518E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(uint64_t, char *, uint64_t);
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char *v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  uint64_t *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  char *v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t result;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  void (*v130)(char *, uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132[2];
  uint64_t v133;
  uint64_t v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;

  v3 = v2;
  v115 = sub_244794C68();
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115);
  v116 = (uint64_t)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_244794AAC();
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109);
  v112 = (char *)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_2447944DC();
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v8 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF70);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v117 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v118 = (char *)&v103 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v103 - v14;
  v16 = sub_244794068();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v120 = (char *)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v128 = (char *)&v103 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v105 = (char *)&v103 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v103 - v24;
  v27 = *v1;
  v26 = v1[1];
  v139 = MEMORY[0x24BEE4B08];
  v113 = v26;
  swift_bridgeObjectRetain();
  v28 = sub_244727014(MEMORY[0x24BEE4AF8]);
  v134 = v28;
  v29 = *(_QWORD *)(a1 + 16);
  v127 = v17;
  v125 = v29;
  v119 = v1;
  v111 = v8;
  if (v29)
  {
    v104 = v2;
    v124 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    v129 = *(_QWORD *)(v17 + 72);
    v130 = v30;
    v123 = v1 + 6;
    v110 = a1;
    swift_bridgeObjectRetain();
    v31 = 0;
    v32 = v17;
    v122 = v27;
    v121 = v15;
    do
    {
      v130(v25, v124 + v129 * v31, v16);
      v42 = sub_244794008();
      v44 = v134;
      if (*(_QWORD *)(v134 + 16) && (v45 = sub_24470F788(v42, v43), (v46 & 1) != 0))
      {
        v130(v15, *(_QWORD *)(v44 + 56) + v45 * v129, v16);
        v47 = 0;
      }
      else
      {
        v47 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v15, v47, 1, v16);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v15, 1, v16) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v55 = v15;
        v56 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
        v57 = v105;
        v56(v105, v55, v16);
        v129 = sub_244794008();
        v127 = v58;
        v59 = (uint64_t)v128;
        v60 = (void (*)(char *, char *, uint64_t))v130;
        v130(v128, (uint64_t)v57, v16);
        v60(v120, v25, v16);
        v61 = type metadata accessor for PreviewsJITLinkerState.TargetDescriptionWithDuplicateInstallNameEncountered(0);
        sub_24470665C((unint64_t *)&unk_25737FFB8, type metadata accessor for PreviewsJITLinkerState.TargetDescriptionWithDuplicateInstallNameEncountered, (uint64_t)&unk_24479B0E0);
        swift_allocError();
        v63 = v62;
        v64 = v127;
        *v62 = v129;
        v62[1] = v64;
        v56((char *)v62 + *(int *)(v61 + 20), (char *)v59, v16);
        v56((char *)v63 + *(int *)(v61 + 24), v120, v16);
        swift_willThrow();
        v65 = *(_QWORD *)(v32 + 8);
        ((void (*)(char *, uint64_t))v65)(v57, v16);
        ((void (*)(char *, uint64_t))v65)(v25, v16);
        swift_bridgeObjectRelease();
        v66 = v139;
        goto LABEL_29;
      }
      v126 = v31;
      sub_244701444((uint64_t)v15, &qword_25737FF70);
      v48 = *v123;
      if (*(_QWORD *)(*v123 + 16)
        && (sub_24470665C(&qword_257380008, (uint64_t (*)(uint64_t))MEMORY[0x24BE77AE8], MEMORY[0x24BE77AF8]),
            v49 = sub_24479501C(),
            v50 = -1 << *(_BYTE *)(v48 + 32),
            v51 = v49 & ~v50,
            ((*(_QWORD *)(v48 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) != 0))
      {
        v52 = ~v50;
        while (1)
        {
          v53 = (uint64_t)v128;
          v130(v128, *(_QWORD *)(v48 + 48) + v51 * v129, v16);
          sub_24470665C(&qword_257380010, (uint64_t (*)(uint64_t))MEMORY[0x24BE77AE8], MEMORY[0x24BE77B00]);
          v54 = sub_244795040();
          v36 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
          v36(v53, v16);
          if ((v54 & 1) != 0)
            break;
          v51 = (v51 + 1) & v52;
          v32 = v127;
          if (((*(_QWORD *)(v48 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) == 0)
            goto LABEL_3;
        }
      }
      else
      {
LABEL_3:
        v33 = v120;
        v34 = (void (*)(uint64_t, char *, uint64_t))v130;
        v130(v120, (uint64_t)v25, v16);
        v35 = (uint64_t)v128;
        sub_24475C714((uint64_t)v128, v33);
        v36 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
        v36(v35, v16);
        v37 = sub_244794008();
        v39 = v38;
        v34(v35, v25, v16);
        v40 = v134;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v132[0] = v40;
        v134 = 0x8000000000000000;
        sub_24478CFD4(v35, v37, v39, isUniquelyReferenced_nonNull_native);
        v134 = v132[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v31 = v126 + 1;
      v36((uint64_t)v25, v16);
      v32 = v127;
      v27 = v122;
      v15 = v121;
    }
    while (v31 != v125);
    a1 = v110;
    swift_bridgeObjectRelease();
    v28 = v134;
    v3 = v104;
  }
  v67 = v112;
  v68 = v113;
  if (!*(_QWORD *)(v28 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v65) = 0;
LABEL_32:
    sub_24475B6E8(v139);
    return v65 & 1;
  }
  swift_bridgeObjectRetain();
  sub_2447944C4();
  sub_2447944D0();
  sub_244794A88();
  swift_bridgeObjectRetain();
  v69 = v67;
  v70 = sub_244794AA0();
  v71 = sub_244795370();
  if (os_log_type_enabled(v70, v71))
  {
    v72 = swift_slowAlloc();
    v73 = swift_slowAlloc();
    v110 = a1;
    v74 = v27;
    v75 = v73;
    v132[0] = v73;
    *(_DWORD *)v72 = 136446466;
    swift_bridgeObjectRetain();
    v131 = sub_24470600C(v74, v68, v132);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v72 + 12) = 2082;
    v130 = (void (*)(char *, uint64_t, uint64_t))(v72 + 14);
    swift_beginAccess();
    v133 = v134;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257380018);
    sub_24470130C(&qword_257380020, &qword_257380018, MEMORY[0x24BEE04E8]);
    v76 = sub_244795334();
    v78 = v77;
    swift_bridgeObjectRelease();
    v133 = sub_24470600C(v76, v78, v132);
    sub_244795448();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2446FC000, v70, v71, "%{public}s: Updating %{public}s", (uint8_t *)v72, 0x16u);
    swift_arrayDestroy();
    a1 = v110;
    MEMORY[0x2495188D8](v75, -1, -1);
    MEMORY[0x2495188D8](v72, -1, -1);

    (*(void (**)(char *, uint64_t))(v108 + 8))(v112, v109);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v69, v109);
  }
  v79 = (uint64_t)v117;
  v80 = v125;
  v133 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v81 = (uint64_t)v118;
  v82 = a1;
  if (v80)
  {
    v83 = a1 + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
    v84 = v127;
    (*(void (**)(char *, uint64_t, uint64_t))(v127 + 16))(v118, v83, v16);
    v85 = 0;
    v80 = 1;
  }
  else
  {
    v85 = 1;
    v84 = v127;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v81, v85, 1, v16);
  sub_24475E888(v81, v79);
  v86 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v79, 1, v16);
  LODWORD(v130) = v86 != 1;
  if (v86 == 1)
  {
    swift_bridgeObjectRelease();
    v91 = v111;
LABEL_31:
    swift_bridgeObjectRelease();
    sub_2447944B8();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v91, v107);
    swift_bridgeObjectRelease();
    LOBYTE(v65) = (_BYTE)v130;
    goto LABEL_32;
  }
  LODWORD(v129) = v86;
  v65 = (uint64_t)v128;
  (*(void (**)(char *, uint64_t, uint64_t))(v84 + 32))(v128, v79, v16);
  v87 = sub_244794008();
  v89 = v88;
  (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v65, v16);
  swift_beginAccess();
  sub_244756800(v87, v89, (void (*)(uint64_t, uint64_t, uint64_t))&v134, (unint64_t *)&v133, v116);
  if (!v3)
  {
    swift_endAccess();
    v93 = v116;
    while (1)
    {
      swift_bridgeObjectRelease();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v114 + 8))(v93, v115);
      if (v80 == v125)
      {
        v94 = 1;
        v80 = v125;
        v95 = (uint64_t)v118;
      }
      else
      {
        v95 = (uint64_t)v118;
        if (v80 >= v125)
        {
          __break(1u);
          return result;
        }
        (*(void (**)(char *, unint64_t, uint64_t))(v84 + 16))(v118, v82+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(_QWORD *)(v84 + 72) * v80, v16);
        v94 = 0;
        ++v80;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v95, v94, 1, v16);
      sub_24475E888(v95, v79);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v79, 1, v16) == 1)
        break;
      v96 = (uint64_t)v128;
      (*(void (**)(char *, uint64_t, uint64_t))(v84 + 32))(v128, v79, v16);
      v97 = sub_244794008();
      v99 = v98;
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v96, v16);
      swift_beginAccess();
      sub_244756800(v97, v99, (void (*)(uint64_t, uint64_t, uint64_t))&v134, (unint64_t *)&v133, v93);
      swift_endAccess();
      v79 = (uint64_t)v117;
    }
    swift_bridgeObjectRelease();
    v91 = v111;
    if ((_DWORD)v129 != 1)
    {
      v100 = *((_OWORD *)v119 + 1);
      v135 = *(_OWORD *)v119;
      v136 = v100;
      v137 = *((_OWORD *)v119 + 2);
      v138 = v119[6];
      v101 = v133;
      v102 = swift_bridgeObjectRetain();
      sub_2447583F4(v102);
      swift_bridgeObjectRelease();
      sub_244758D24(v101);
    }
    goto LABEL_31;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v90 = v111;
  sub_2447944B8();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v90, v107);
  swift_bridgeObjectRelease();
  v66 = v139;
LABEL_29:
  sub_24475B6E8(v66);
  return v65 & 1;
}

uint64_t sub_24475268C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v1);
  v45 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_244794AAC();
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_244793E64();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v36 - v12;
  v14 = v0[3];
  v15 = OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity;
  v16 = v14 + *(int *)(type metadata accessor for BatchIdentity(0) + 20) + v15;
  v48 = v6;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v17(v13, v16, v5);
  v18 = v0[5];
  v40 = v0[4];
  v46 = v0;
  v42 = v18;
  swift_bridgeObjectRetain();
  sub_244794A88();
  v49 = v13;
  v47 = v5;
  v39 = (void (*)(char *, char *, uint64_t))v17;
  v17(v11, (uint64_t)v13, v5);
  v19 = sub_244794AA0();
  v20 = sub_244795370();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v51 = v37;
    *(_DWORD *)v21 = 136315138;
    v38 = (void (*)(char *, uint64_t))(v21 + 4);
    sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
    v22 = v47;
    v23 = sub_2447955B0();
    v50 = sub_24470600C(v23, v24, &v51);
    sub_244795448();
    swift_bridgeObjectRelease();
    v38 = *(void (**)(char *, uint64_t))(v48 + 8);
    v38(v11, v22);
    v25 = v37;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v25, -1, -1);
    MEMORY[0x2495188D8](v21, -1, -1);
  }
  else
  {
    v38 = *(void (**)(char *, uint64_t))(v48 + 8);
    v38(v11, v47);
  }

  (*(void (**)(char *, uint64_t))(v41 + 8))(v4, v43);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  v26 = sub_244795220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v45, 1, 1, v26);
  v27 = v44;
  v28 = v47;
  v39(v44, v49, v47);
  v29 = v48;
  v30 = (*(unsigned __int8 *)(v48 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v31 = (char *)swift_allocObject();
  v32 = v40;
  *((_QWORD *)v31 + 2) = v46;
  *((_QWORD *)v31 + 3) = v32;
  *((_QWORD *)v31 + 4) = v42;
  *((_QWORD *)v31 + 5) = 0xD000000000000028;
  *((_QWORD *)v31 + 6) = 0x800000024479F1E0;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v31[v30], v27, v28);
  v33 = &v31[(v7 + v30 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(_QWORD *)v33 = 0xD00000000000004FLL;
  *((_QWORD *)v33 + 1) = 0x800000024479CB70;
  swift_retain();
  v34 = sub_2447949BC();
  v38(v49, v28);
  return v34;
}

uint64_t sub_244752AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v8[9] = a8;
  v8[10] = v12;
  v8[7] = a6;
  v8[8] = a7;
  v8[5] = a4;
  v8[6] = a5;
  v8[3] = a2;
  v8[4] = a3;
  v9 = sub_244793E64();
  v8[11] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[12] = v10;
  v8[13] = *(_QWORD *)(v10 + 64);
  v8[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244752B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  int v10;
  unint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  _QWORD *v14;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 40);
  v16 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 120) = v9;
  v9(v1, v4, v2);
  v10 = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 192) = v10;
  v11 = (v10 + 56) & ~(unint64_t)v10;
  v12 = (char *)swift_allocObject();
  *(_QWORD *)(v0 + 128) = v12;
  *((_QWORD *)v12 + 2) = v8;
  *((_QWORD *)v12 + 3) = v7;
  *((_QWORD *)v12 + 4) = v6;
  *((_QWORD *)v12 + 5) = v16;
  *((_QWORD *)v12 + 6) = v5;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 32);
  *(_QWORD *)(v0 + 136) = v13;
  v13(&v12[v11], v1, v2);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v14;
  sub_244794C74();
  *v14 = v0;
  v14[1] = sub_244752CA0;
  return sub_2447953AC();
}

uint64_t sub_244752CA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_244752D0C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);

  v1 = *(unsigned __int8 *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 112);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 120);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD *)(v0 + 56);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 136);
  v7 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 24);
  v13 = *(_QWORD *)(v0 + 32);
  v9 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 160) = v9;
  v2(v3, v6, v5);
  v10 = (char *)swift_allocObject();
  *(_QWORD *)(v0 + 168) = v10;
  *((_QWORD *)v10 + 2) = v8;
  *((_QWORD *)v10 + 3) = v9;
  *((_QWORD *)v10 + 4) = v14;
  *((_QWORD *)v10 + 5) = v4;
  *((_QWORD *)v10 + 6) = v13;
  *((_QWORD *)v10 + 7) = v7;
  *((_QWORD *)v10 + 8) = v15;
  *((_QWORD *)v10 + 9) = v16;
  v17(&v10[(v1 + 80) & ~v1], v3, v5);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v11;
  *v11 = v0;
  v11[1] = sub_244752E60;
  return sub_2447953AC();
}

uint64_t sub_244752E60()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_244752ECC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244752F0C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244752F48()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244752F8C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, NSObject *a4@<X3>, unint64_t a5@<X4>, void (*a6)(_QWORD, _QWORD, _QWORD)@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  void (*v27)(_BYTE *, _QWORD, uint64_t);
  uint64_t v28;
  _BYTE *v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  os_log_t v47;
  _BYTE *v48;
  void (*v49)(_BYTE *, _QWORD, uint64_t);
  _BYTE *v50;
  _BYTE *v51;
  void (*v52)(_QWORD, _QWORD, _QWORD);
  uint64_t v53;
  unint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  int v69;
  unint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  os_log_t v76;
  _BYTE *v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  os_log_t v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  _BYTE v88[12];
  int v89;
  uint64_t v90;
  _BYTE *v91;
  void (*v92)(_BYTE *, _QWORD, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  os_log_t v98;
  _BYTE *v99;
  _BYTE *v100;
  void (*v101)(_QWORD, _QWORD, _QWORD);
  uint64_t v102;
  os_log_t v103;
  uint64_t v104;
  _QWORD *v105;
  _BYTE *v106;
  uint64_t v107;
  _BYTE *v108;

  v102 = a2;
  v103 = a4;
  v105 = a7;
  v11 = sub_244793E64();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v100 = &v88[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v13);
  v106 = &v88[-v16];
  v17 = MEMORY[0x24BDAC7A8](v15);
  v99 = &v88[-v18];
  MEMORY[0x24BDAC7A8](v17);
  v20 = &v88[-v19];
  v21 = sub_244794AAC();
  v22 = MEMORY[0x24BDAC7A8](v21);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v29 = &v88[-v28];
  v30 = a1[8];
  if (v30)
  {
    v101 = a6;
    v31 = a1[7];
    v32 = a1[9];
    v33 = a1[10];
    v34 = a1[11];
    v35 = a1[12];
    v36 = (_BYTE *)a1[13];
    if ((_BYTE)v32)
    {
      if (a1[9] == 1)
      {
        a1[9] = 2;
        v37 = (uint64_t)v30;
        v38 = v31;
        sub_24475E804(v31, (uint64_t)v30);
        swift_retain();
        result = sub_24474E5F0(v38, v37);
        *v105 = v33;
        return result;
      }
      v94 = a1[7];
      v95 = v32;
      v104 = v25;
      v105 = (_QWORD *)v24;
      v98 = v30;
      v64 = v26;
      swift_bridgeObjectRetain();
      swift_retain();
      v96 = v34;
      swift_retain();
      v97 = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_244794A88();
      v65 = v100;
      v66 = v11;
      v92 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v12 + 16);
      v93 = v12;
      v92(v100, v101, v11);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v99 = v64;
      v67 = sub_244794AA0();
      v68 = sub_24479537C();
      v69 = v68;
      if (os_log_type_enabled(v67, v68))
      {
        v70 = a3;
        v71 = swift_slowAlloc();
        v91 = (_BYTE *)swift_slowAlloc();
        v108 = v91;
        *(_DWORD *)v71 = 136446722;
        LODWORD(v90) = v69;
        swift_bridgeObjectRetain();
        v107 = sub_24470600C(v102, v70, (uint64_t *)&v108);
        sub_244795448();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v71 + 12) = 2082;
        swift_bridgeObjectRetain();
        v107 = sub_24470600C((uint64_t)v103, a5, (uint64_t *)&v108);
        sub_244795448();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v71 + 22) = 2080;
        sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
        v103 = v67;
        v72 = v100;
        v73 = sub_2447955B0();
        v107 = sub_24470600C(v73, v74, (uint64_t *)&v108);
        v66 = v11;
        sub_244795448();
        swift_bridgeObjectRelease();
        v75 = v93;
        (*(void (**)(_BYTE *, uint64_t))(v93 + 8))(v72, v11);
        v76 = v103;
        v77 = v91;
        swift_arrayDestroy();
        MEMORY[0x2495188D8](v77, -1, -1);
        MEMORY[0x2495188D8](v71, -1, -1);

        (*(void (**)(_BYTE *, _QWORD *))(v104 + 8))(v99, v105);
        v78 = v75;
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v85 = v93;
        (*(void (**)(_BYTE *, uint64_t))(v93 + 8))(v65, v11);

        (*(void (**)(_BYTE *, _QWORD *))(v104 + 8))(v99, v105);
        v78 = v85;
      }
      v86 = v106;
      v92(v106, v101, v66);
      type metadata accessor for PreviewsJITLinker.MainAlreadyInvokedError(0);
      sub_24470665C(&qword_25737FFF8, type metadata accessor for PreviewsJITLinker.MainAlreadyInvokedError, (uint64_t)&unk_24479AFE0);
      swift_allocError();
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v78 + 32))(v87, v86, v66);
      swift_willThrow();
      v83 = v94;
      v84 = v98;
    }
    else
    {
      v94 = a1[7];
      v95 = v32;
      v104 = v25;
      v105 = (_QWORD *)v24;
      v98 = v30;
      v49 = v27;
      swift_bridgeObjectRetain();
      swift_retain();
      v96 = v34;
      swift_retain();
      v97 = v35;
      swift_bridgeObjectRetain();
      v100 = v36;
      swift_bridgeObjectRetain();
      sub_244794A88();
      v93 = v12;
      v50 = *(_BYTE **)(v12 + 16);
      v51 = v99;
      v52 = v101;
      v53 = v11;
      v91 = v50;
      ((void (*)(_BYTE *, _QWORD, uint64_t))v50)(v99, v101, v11);
      swift_bridgeObjectRetain_n();
      v54 = a5;
      swift_bridgeObjectRetain_n();
      v92 = v49;
      v55 = sub_244794AA0();
      v56 = sub_24479537C();
      v57 = v56;
      if (os_log_type_enabled(v55, v56))
      {
        v58 = swift_slowAlloc();
        v90 = swift_slowAlloc();
        v108 = (_BYTE *)v90;
        *(_DWORD *)v58 = 136446722;
        v89 = v57;
        swift_bridgeObjectRetain();
        v107 = sub_24470600C(v102, a3, (uint64_t *)&v108);
        sub_244795448();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v58 + 12) = 2082;
        swift_bridgeObjectRetain();
        v107 = sub_24470600C((uint64_t)v103, v54, (uint64_t *)&v108);
        sub_244795448();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v58 + 22) = 2080;
        sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
        v59 = sub_2447955B0();
        v107 = sub_24470600C(v59, v60, (uint64_t *)&v108);
        v53 = v11;
        sub_244795448();
        swift_bridgeObjectRelease();
        v61 = v93;
        (*(void (**)(_BYTE *, uint64_t))(v93 + 8))(v51, v11);
        v62 = v90;
        swift_arrayDestroy();
        MEMORY[0x2495188D8](v62, -1, -1);
        v63 = v58;
        v52 = v101;
        MEMORY[0x2495188D8](v63, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v61 = v93;
        (*(void (**)(_BYTE *, uint64_t))(v93 + 8))(v51, v11);
      }

      (*(void (**)(void (*)(_BYTE *, _QWORD, uint64_t), _QWORD *))(v104 + 8))(v92, v105);
      v81 = v106;
      ((void (*)(_BYTE *, _QWORD, uint64_t))v91)(v106, v52, v53);
      type metadata accessor for PreviewsJITLinker.InitialLinkNotInvokedError(0);
      sub_24470665C(&qword_257380000, type metadata accessor for PreviewsJITLinker.InitialLinkNotInvokedError, (uint64_t)&unk_24479AFA0);
      swift_allocError();
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v61 + 32))(v82, v81, v53);
      swift_willThrow();
      v83 = v94;
      v84 = v98;
    }
    return sub_24474E5F0(v83, (uint64_t)v84);
  }
  else
  {
    v104 = v25;
    v105 = (_QWORD *)v24;
    sub_244794A88();
    v101 = *(void (**)(_QWORD, _QWORD, _QWORD))(v12 + 16);
    v101(v20, a6, v11);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v40 = sub_244794AA0();
    v41 = sub_24479537C();
    LODWORD(v100) = v41;
    v42 = v11;
    if (os_log_type_enabled(v40, v41))
    {
      v43 = a5;
      v44 = swift_slowAlloc();
      v99 = (_BYTE *)swift_slowAlloc();
      v108 = v99;
      *(_DWORD *)v44 = 136446722;
      v98 = v40;
      swift_bridgeObjectRetain();
      v107 = sub_24470600C(v102, a3, (uint64_t *)&v108);
      v102 = v42;
      sub_244795448();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 12) = 2082;
      swift_bridgeObjectRetain();
      v107 = sub_24470600C((uint64_t)v103, v43, (uint64_t *)&v108);
      sub_244795448();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 22) = 2080;
      sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
      v45 = sub_2447955B0();
      v107 = sub_24470600C(v45, v46, (uint64_t *)&v108);
      v42 = v102;
      sub_244795448();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v20, v42);
      v47 = v98;
      v48 = v99;
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v48, -1, -1);
      MEMORY[0x2495188D8](v44, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v20, v11);

    }
    (*(void (**)(_BYTE *, _QWORD *))(v104 + 8))(v29, v105);
    v79 = v106;
    v101(v106, a6, v42);
    type metadata accessor for PreviewsJITLinker.InvalidatedError(0);
    sub_24470665C(&qword_25737FFF0, type metadata accessor for PreviewsJITLinker.InvalidatedError, (uint64_t)&unk_24479B160);
    swift_allocError();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v12 + 32))(v80, v79, v42);
    return swift_willThrow();
  }
}

uint64_t sub_244753ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  void (*v33)(char *, uint64_t, uint64_t);
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  _BOOL4 v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  NSObject *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  os_log_t v46;
  uint64_t v47;
  char *v48;
  NSObject *v49;
  char *v50;
  int v51;
  char *v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  os_log_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v80;
  char *v81;
  NSObject *v82;
  os_log_type_t v83;
  int v84;
  _BOOL4 v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  os_log_t v92;
  int v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  NSObject *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  uint64_t v117[3];
  uint64_t v118;
  uint64_t v119;

  v116 = a8;
  v106 = a7;
  v103 = a5;
  v14 = a9;
  v15 = sub_244794A4C();
  v108 = *(_QWORD *)(v15 - 8);
  v109 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v107 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_244793E64();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v115 = (char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v102 = (char *)&v92 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v104 = ((char *)&v92 - v23);
  v24 = sub_244794AAC();
  v113 = *(_QWORD *)(v24 - 8);
  v114 = v24;
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v92 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v25);
  v101 = (char *)&v92 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v105 = (char *)&v92 - v30;
  v112 = a4;
  v110 = a1;
  v31 = v111;
  sub_244754A50(a2, a3, a4);
  v32 = v31;
  if (v31)
    goto LABEL_6;
  v96 = 0;
  v97 = a2;
  v111 = v27;
  sub_244794A88();
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v98 = a9;
  v95 = v33;
  v33((char *)v104, a9, v17);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v34 = sub_244794AA0();
  v35 = sub_244795364();
  v36 = v35;
  v37 = os_log_type_enabled(v34, v35);
  v100 = v18;
  v99 = a6;
  if (v37)
  {
    v38 = swift_slowAlloc();
    v94 = swift_slowAlloc();
    v117[0] = v94;
    *(_DWORD *)v38 = 136446978;
    v92 = v34;
    v93 = v36;
    swift_bridgeObjectRetain();
    v119 = sub_24470600C(v103, a6, v117);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v38 + 12) = 2082;
    v39 = v116;
    swift_bridgeObjectRetain();
    v119 = sub_24470600C(v106, v39, v117);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v38 + 22) = 2082;
    v40 = v17;
    v41 = v112;
    swift_bridgeObjectRetain();
    v119 = sub_24470600C(a3, v41, v117);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v38 + 32) = 2080;
    sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
    v42 = v104;
    v43 = sub_2447955B0();
    v119 = sub_24470600C(v43, v44, v117);
    sub_244795448();
    swift_bridgeObjectRelease();
    v45 = v40;
    v104 = *(NSObject **)(v18 + 8);
    ((void (*)(NSObject *, uint64_t))v104)(v42, v40);
    v46 = v92;
    v47 = v94;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v47, -1, -1);
    MEMORY[0x2495188D8](v38, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v49 = v104;
    v45 = v17;
    v104 = *(NSObject **)(v18 + 8);
    ((void (*)(NSObject *, uint64_t))v104)(v49, v17);

  }
  v48 = v105;
  v105 = *(char **)(v113 + 8);
  ((void (*)(char *, uint64_t))v105)(v48, v114);
  v50 = v96;
  v51 = sub_244794C38();
  v32 = v50;
  v17 = v45;
  v27 = v111;
  v18 = v100;
  a6 = v99;
  v14 = v98;
  if (v50)
  {
LABEL_6:
    sub_244794A88();
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v115, v14, v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v52 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v53 = v32;
    v54 = sub_244794AA0();
    v55 = sub_24479537C();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = swift_slowAlloc();
      v102 = (char *)v17;
      v111 = v27;
      v57 = v56;
      v105 = (char *)swift_slowAlloc();
      v112 = swift_slowAlloc();
      v117[0] = v112;
      *(_DWORD *)v57 = 136446978;
      v104 = v54;
      swift_bridgeObjectRetain();
      v119 = sub_24470600C(v103, a6, v117);
      v58 = v18;
      sub_244795448();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v57 + 12) = 2082;
      v59 = v116;
      swift_bridgeObjectRetain();
      v119 = sub_24470600C(v106, v59, v117);
      sub_244795448();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v57 + 22) = 2080;
      sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
      v60 = v115;
      v61 = v102;
      v62 = sub_2447955B0();
      v119 = sub_24470600C(v62, v63, v117);
      sub_244795448();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v58 + 8))(v60, v61);
      *(_WORD *)(v57 + 32) = 2114;
      v64 = v32;
      v65 = _swift_stdlib_bridgeErrorToNSError();
      v119 = v65;
      sub_244795448();
      v66 = v105;
      *(_QWORD *)v105 = v65;

      v67 = v104;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v66, -1, -1);
      v68 = v112;
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v68, -1, -1);
      MEMORY[0x2495188D8](v57, -1, -1);

      (*(void (**)(char *, uint64_t))(v113 + 8))(v111, v114);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v115, v17);

      (*(void (**)(char *, uint64_t))(v113 + 8))(v27, v114);
    }
    v69 = v109;
    v71 = v107;
    v70 = v108;
    v119 = *(_QWORD *)(v110 + 120);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737FFD8);
    sub_24470130C(&qword_25737FFE0, &qword_25737FFD8, MEMORY[0x24BE76C78]);
    sub_244794884();
    sub_24476749C(v117[0]);
    swift_bridgeObjectRelease();
    sub_244794A40();
    v72 = v32;
    sub_24470665C(&qword_25737FFE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE76C68], MEMORY[0x24BE76C60]);
    sub_24479465C();

    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v69);
    v73 = v118;
    v74 = __swift_project_boxed_opaque_existential_1(v117, v118);
    v75 = *(_QWORD *)(v73 - 8);
    MEMORY[0x24BDAC7A8](v74);
    v77 = (char *)&v92 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v75 + 16))(v77);
    if (sub_2447955BC())
    {
      (*(void (**)(char *, uint64_t))(v75 + 8))(v77, v73);
    }
    else
    {
      swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v75 + 32))(v78, v77, v73);
    }
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v117);
  }
  else
  {
    LODWORD(v116) = v51;
    v80 = v101;
    sub_244794A88();
    v81 = v102;
    v95(v102, v14, v45);
    swift_bridgeObjectRetain_n();
    v82 = sub_244794AA0();
    v83 = sub_244795370();
    v84 = v83;
    v85 = os_log_type_enabled(v82, v83);
    v86 = v105;
    if (v85)
    {
      v87 = swift_slowAlloc();
      v113 = swift_slowAlloc();
      v117[0] = v113;
      v105 = v86;
      *(_DWORD *)v87 = 136446722;
      LODWORD(v115) = v84;
      swift_bridgeObjectRetain();
      v119 = sub_24470600C(v103, a6, v117);
      sub_244795448();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v87 + 12) = 2080;
      sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
      v88 = v102;
      v89 = sub_2447955B0();
      v119 = sub_24470600C(v89, v90, v117);
      sub_244795448();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v104)(v88, v45);
      *(_WORD *)(v87 + 22) = 1026;
      LODWORD(v119) = v116;
      sub_244795448();
      _os_log_impl(&dword_2446FC000, v82, (os_log_type_t)v115, "%{public}s: runProgramOnMainThread returned normally for %s, returned: %{public}d", (uint8_t *)v87, 0x1Cu);
      v91 = v113;
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v91, -1, -1);
      MEMORY[0x2495188D8](v87, -1, -1);

      ((void (*)(char *, uint64_t))v105)(v80, v114);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      ((void (*)(char *, uint64_t))v104)(v81, v45);

      ((void (*)(char *, uint64_t))v86)(v80, v114);
    }
    return sub_244754754();
  }
}

uint64_t sub_244754754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_244794FBC();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_244794FE0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(_QWORD *)(v1 + 48);
  aBlock[4] = sub_24475BCF4;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244754A24;
  aBlock[3] = &block_descriptor_5;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_244794FD4();
  v13[1] = MEMORY[0x24BEE4AF8];
  sub_24470665C(&qword_25737FD38, v3, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737FD40);
  sub_24470130C(&qword_25737FD48, &qword_25737FD40, MEMORY[0x24BEE12C8]);
  sub_24479546C();
  MEMORY[0x249517F24](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_244754928(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(result + 64);
  if (v1)
  {
    v2 = *(_QWORD *)(result + 56);
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_QWORD *)(result + 104) = 0;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24474E5F0(v2, v1);
    sub_24474E64C();
    return sub_24474E5F0(v2, v1);
  }
  return result;
}

uint64_t sub_244754A24(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_244754A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD v45[2];
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v51 = a2;
  v52 = a3;
  v53 = a1;
  v4 = sub_244794824();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_244794AAC();
  v8 = *(_QWORD *)(v55 - 8);
  v9 = MEMORY[0x24BDAC7A8](v55);
  v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v50 = (char *)v45 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v45 - v14;
  v16 = *(_QWORD *)(v3 + 40);
  v54 = *(_QWORD *)(v3 + 32);
  sub_2447947C4();
  swift_bridgeObjectRetain();
  sub_2447947B8();
  v17 = sub_2447947A0();
  swift_release();
  if (!v17)
  {
LABEL_6:
    sub_244794A88();
    swift_bridgeObjectRetain();
    v26 = sub_244794AA0();
    v27 = sub_244795370();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v58 = v29;
      *(_DWORD *)v28 = 136446210;
      swift_bridgeObjectRetain();
      v57 = sub_24470600C(v54, v16, &v58);
      sub_244795448();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2446FC000, v26, v27, "%{public}s: No swift entry symbol found", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v29, -1, -1);
      MEMORY[0x2495188D8](v28, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v55);
  }
  v18 = sub_244794590();
  if ((v19 & 1) != 0)
  {
    swift_release();
    goto LABEL_6;
  }
  v48 = v17;
  v49 = v4;
  v20 = v18;
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  v21 = sub_244794AA0();
  v22 = sub_244795370();
  v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v24 = swift_slowAlloc();
    v47 = swift_slowAlloc();
    v58 = v47;
    *(_DWORD *)v24 = 136446466;
    v45[1] = v24 + 4;
    swift_bridgeObjectRetain();
    v57 = sub_24470600C(v54, v16, &v58);
    v46 = v23;
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2050;
    v57 = v20;
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v21, (os_log_type_t)v46, "%{public}s: Symbol table with entry section pointer %{public}llx is present. Sending to agent.", (uint8_t *)v24, 0x16u);
    v25 = v47;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v25, -1, -1);
    MEMORY[0x2495188D8](v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v31 = *(void (**)(char *, uint64_t))(v8 + 8);
  v31(v15, v55);
  v32 = v56;
  sub_244794818();
  v33 = sub_24479480C();
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v49);
LABEL_13:
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v35 = v33;
  v36 = v34;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v49);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF60);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_244797370;
  *(_QWORD *)(v37 + 32) = v35;
  *(_QWORD *)(v37 + 40) = v36;
  v38 = sub_244794C20();
  swift_bridgeObjectRelease();
  if (!v38)
    goto LABEL_13;
  v56 = 0;
  v39 = v50;
  sub_244794A88();
  swift_bridgeObjectRetain();
  v40 = sub_244794AA0();
  v41 = sub_24479537C();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc();
    v43 = swift_slowAlloc();
    v58 = v43;
    *(_DWORD *)v42 = 136446466;
    swift_bridgeObjectRetain();
    v57 = sub_24470600C(v54, v16, &v58);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v42 + 12) = 1026;
    LODWORD(v57) = v38;
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v40, v41, "%{public}s: __previews_injection_register_swift_extension_entry_section call returned %{public}d", (uint8_t *)v42, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v43, -1, -1);
    MEMORY[0x2495188D8](v42, -1, -1);

    swift_release();
    v44 = v50;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release();
    v44 = v39;
  }
  return ((uint64_t (*)(char *, uint64_t))v31)(v44, v55);
}

unint64_t sub_244755094()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_2447550B4()
{
  sub_24470665C(&qword_257380468, type metadata accessor for PreviewsJITLinker.InvalidatedError, (uint64_t)&unk_24479A688);
  return sub_244794668();
}

uint64_t sub_2447550F4()
{
  sub_24470665C(&qword_257380468, type metadata accessor for PreviewsJITLinker.InvalidatedError, (uint64_t)&unk_24479A688);
  return sub_244794638();
}

unint64_t sub_244755134()
{
  return 0xD000000000000018;
}

uint64_t sub_244755150()
{
  sub_24470665C(&qword_257380410, type metadata accessor for PreviewsJITLinker.InitialLinkNotInvokedError, (uint64_t)&unk_24479ADC0);
  return sub_244794668();
}

uint64_t sub_244755190()
{
  sub_24470665C(&qword_257380410, type metadata accessor for PreviewsJITLinker.InitialLinkNotInvokedError, (uint64_t)&unk_24479ADC0);
  return sub_244794638();
}

unint64_t sub_2447551D0()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_2447551EC()
{
  sub_24475FC50();
  return sub_244794668();
}

uint64_t sub_244755214()
{
  sub_24475FC50();
  return sub_244794638();
}

unint64_t sub_24475523C()
{
  return 0xD000000000000017;
}

uint64_t sub_244755258()
{
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return 0x203A65646F63;
}

uint64_t sub_2447552C4()
{
  sub_24475FC94();
  return sub_244794668();
}

uint64_t sub_2447552EC()
{
  sub_24475FC94();
  return sub_244794638();
}

unint64_t sub_244755314()
{
  return 0xD000000000000019;
}

uint64_t sub_244755330()
{
  _QWORD v1[2];

  sub_2447954CC();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "Agent bundle: ");
  sub_244793E64();
  sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_2447553EC()
{
  sub_24470665C(&qword_257380418, type metadata accessor for PreviewsJITLinker.MainAlreadyInvokedError, (uint64_t)&unk_24479ACB8);
  return sub_244794668();
}

uint64_t sub_24475542C()
{
  sub_24470665C(&qword_257380418, type metadata accessor for PreviewsJITLinker.MainAlreadyInvokedError, (uint64_t)&unk_24479ACB8);
  return sub_244794638();
}

uint64_t sub_24475546C()
{
  sub_2447954CC();
  sub_2447950E8();
  sub_244793B28();
  sub_244795538();
  return 0;
}

uint64_t sub_24475550C(uint64_t a1, uint64_t a2)
{
  return sub_244759F90(a1, a2, 0x4449656C646E7562);
}

uint64_t sub_244755528(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_24475555C()
{
  sub_24470665C(&qword_257380408, type metadata accessor for PreviewsJITLinker.UnknownAgentProcessType, (uint64_t)&unk_24479AEC8);
  return sub_244794668();
}

uint64_t sub_24475559C()
{
  sub_24470665C(&qword_257380408, type metadata accessor for PreviewsJITLinker.UnknownAgentProcessType, (uint64_t)&unk_24479AEC8);
  return sub_244794638();
}

unint64_t sub_2447555DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  char v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  unint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  os_log_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t result;
  char v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  char v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  char v70;
  unint64_t v71;
  char *v72;
  char v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  unint64_t v84;
  char *v85;
  uint64_t v86;
  unint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char v101;
  char *v102;
  void (*v103)(char *);
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  os_log_t v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t);
  void (*v116)(char *, uint64_t, uint64_t);
  void (*v117)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;

  v134 = a2;
  v4 = sub_244794C14();
  v126 = *(_QWORD *)(v4 - 8);
  v127 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v125 = (char *)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FFA0);
  MEMORY[0x24BDAC7A8](v6);
  v131 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FFA8);
  MEMORY[0x24BDAC7A8](v8);
  v132 = (uint64_t)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_244794C68();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v124 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v136 = (char *)&v112 - v14;
  v138 = sub_244794068();
  v130 = *(_QWORD *)(v138 - 8);
  v15 = MEMORY[0x24BDAC7A8](v138);
  v121 = (char *)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v112 - v17;
  v133 = sub_244794AAC();
  v129 = *(_QWORD *)(v133 - 8);
  v19 = MEMORY[0x24BDAC7A8](v133);
  v122 = (char *)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v112 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF68);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v123 = (char *)&v112 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v112 - v26;
  v28 = v2[1];
  v137 = *v2;
  v140 = v28;
  swift_bridgeObjectRetain();
  v29 = sub_244794008();
  v135 = v2;
  v32 = v2 + 5;
  v31 = v2[5];
  if (*(_QWORD *)(v31 + 16) && (v33 = sub_24470F788(v29, v30), (v34 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v27, *(_QWORD *)(v31 + 56) + *(_QWORD *)(v11 + 72) * v33, v10);
    v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v35(v27, 0, 1, v10);
  }
  else
  {
    v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v35(v27, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v27, 1, v10) != 1)
  {
    swift_bridgeObjectRelease();
    v51 = v27;
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(v134, v51, v10);
  }
  v117 = v35;
  v119 = v11;
  v120 = v10;
  sub_244701444((uint64_t)v27, &qword_25737FF68);
  sub_244794A88();
  v36 = v130;
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v130 + 16);
  v128 = a1;
  v38 = v138;
  v37(v18, a1, v138);
  v39 = v140;
  swift_bridgeObjectRetain_n();
  v40 = sub_244794AA0();
  v41 = sub_244795370();
  v42 = os_log_type_enabled(v40, v41);
  v118 = v32;
  v116 = v37;
  if (v42)
  {
    v43 = swift_slowAlloc();
    v114 = swift_slowAlloc();
    v141 = v114;
    *(_DWORD *)v43 = 136446466;
    v113 = v40;
    swift_bridgeObjectRetain();
    v143 = sub_24470600C(v137, v39, &v141);
    v44 = v39;
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v43 + 12) = 2080;
    v45 = sub_244794008();
    v143 = sub_24470600C(v45, v46, &v141);
    sub_244795448();
    swift_bridgeObjectRelease();
    v115 = *(void (**)(char *, uint64_t))(v36 + 8);
    v115(v18, v138);
    v47 = v113;
    _os_log_impl(&dword_2446FC000, v113, v41, "%{public}s: Creating JIT Dylib for %s", (uint8_t *)v43, 0x16u);
    v48 = v114;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v48, -1, -1);
    v49 = v43;
    v50 = v137;
    MEMORY[0x2495188D8](v49, -1, -1);

    v130 = *(_QWORD *)(v129 + 8);
    ((void (*)(char *, uint64_t))v130)(v22, v133);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    v44 = v39;
    v115 = *(void (**)(char *, uint64_t))(v36 + 8);
    v115(v18, v38);

    v130 = *(_QWORD *)(v129 + 8);
    ((void (*)(char *, uint64_t))v130)(v22, v133);
    v50 = v137;
  }
  v52 = sub_24479402C();
  swift_bridgeObjectRetain();
  v53 = v139;
  sub_24475E2C4(v52, v50, v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_244794008();
  sub_244794008();
  v54 = v131;
  sub_244794B78();
  v55 = sub_244794B84();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v54, 0, 1, v55);
  sub_244794050();
  v56 = v132;
  sub_244794B90();
  v57 = sub_244794B9C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v56, 0, 1, v57);
  sub_244794B48();
  if (v53)
  {
    sub_244701444(v56, &qword_25737FFA8);
LABEL_12:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  sub_244701444(v56, &qword_25737FFA8);
  swift_bridgeObjectRelease();
  if ((sub_244794020() & 1) == 0)
    goto LABEL_27;
  sub_244794008();
  v59 = sub_24479510C();
  swift_bridgeObjectRelease();
  if ((v59 & 1) == 0
    || (v60 = sub_244794008(),
        v62 = sub_2447566A0(47, 0xE100000000000000, v60, v61),
        v64 = v63,
        swift_bridgeObjectRelease(),
        (v64 & 1) != 0)
    || (sub_244794008(), v65 = sub_244795118(), swift_bridgeObjectRelease(), (v65 & 1) == 0))
  {
LABEL_27:
    v99 = v126;
    v98 = v127;
    v100 = v125;
LABEL_28:
    swift_bridgeObjectRelease();
    v101 = sub_244794020();
    v139 = 0;
    if ((v101 & 1) != 0)
    {
      v102 = v124;
      sub_244794B54();
      v103 = *(void (**)(char *))(v99 + 104);
      LODWORD(v140) = *MEMORY[0x24BEC6400];
      v103(v100);
      v104 = v136;
      sub_244794C50();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v98);
      v105 = v119;
      v10 = v120;
      (*(void (**)(char *, uint64_t))(v119 + 8))(v102, v120);
    }
    else
    {
      LODWORD(v140) = *MEMORY[0x24BEC6400];
      v10 = v120;
      v105 = v119;
      v104 = v136;
      v102 = v124;
    }
    sub_244794B60();
    (*(void (**)(char *, _QWORD, uint64_t))(v99 + 104))(v100, v140, v98);
    sub_244794C50();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v98);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v102, v10);
    v106 = sub_244794008();
    v108 = v107;
    v109 = (uint64_t)v123;
    (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v123, v104, v10);
    v117((char *)v109, 0, 1, v10);
    sub_2447892F0(v109, v106, v108);
    v11 = v105;
    v51 = v104;
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(v134, v51, v10);
  }
  v139 = 0;
  v66 = sub_244794008();
  sub_24475678C(v62, v66, v67);
  v69 = v68;
  swift_bridgeObjectRelease();
  result = sub_244795424();
  if ((v70 & 1) != 0)
    result = v69;
  if (v69 >> 14 < result >> 14)
  {
    __break(1u);
    goto LABEL_38;
  }
  v71 = sub_244795430();
  swift_bridgeObjectRelease();
  result = sub_2447950D0();
  v72 = v122;
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  result = sub_244795424();
  if ((v73 & 1) != 0)
    v74 = v71;
  else
    v74 = result;
  if (v74 >> 14 >= v71 >> 14)
  {
    v75 = sub_244795430();
    v77 = v76;
    v79 = v78;
    v81 = v80;
    swift_bridgeObjectRelease();
    sub_244795418();
    v141 = 0;
    v142 = 0xE000000000000000;
    sub_2447954CC();
    sub_2447950E8();
    sub_2447950E8();
    swift_bridgeObjectRelease();
    sub_2447950E8();
    v83 = (void (*)(char *, uint64_t, uint64_t))v141;
    v82 = v142;
    v141 = 3092772;
    v142 = 0xE300000000000000;
    MEMORY[0x249517BF4](v75, v77, v79, v81);
    sub_2447950E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v84 = v142;
    v132 = v141;
    sub_244794A88();
    v85 = v121;
    v86 = v138;
    v116(v121, v128, v138);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v87 = v140;
    swift_bridgeObjectRetain();
    v88 = sub_244794AA0();
    v89 = sub_244795364();
    v90 = v89;
    if (os_log_type_enabled(v88, v89))
    {
      v91 = swift_slowAlloc();
      v116 = v83;
      v92 = v91;
      v131 = (char *)swift_slowAlloc();
      v141 = (uint64_t)v131;
      *(_DWORD *)v92 = 136446978;
      LODWORD(v129) = v90;
      swift_bridgeObjectRetain();
      v143 = sub_24470600C(v137, v87, &v141);
      sub_244795448();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v92 + 12) = 2080;
      v93 = sub_244794008();
      v143 = sub_24470600C(v93, v94, &v141);
      sub_244795448();
      swift_bridgeObjectRelease();
      v115(v85, v138);
      *(_WORD *)(v92 + 22) = 2080;
      swift_bridgeObjectRetain();
      v143 = sub_24470600C((uint64_t)v116, v82, &v141);
      sub_244795448();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v92 + 32) = 2080;
      swift_bridgeObjectRetain();
      v143 = sub_24470600C(v132, v84, &v141);
      sub_244795448();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2446FC000, v88, (os_log_type_t)v129, "%{public}s: setting loadable at path via regex for “%s”, regex: “%s”, replacement: “%s”", (uint8_t *)v92, 0x2Au);
      v95 = v131;
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v95, -1, -1);
      MEMORY[0x2495188D8](v92, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      v115(v85, v86);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    ((void (*)(char *, uint64_t))v130)(v72, v133);
    v96 = v139;
    v97 = v136;
    sub_244794C44();
    v110 = v127;
    v100 = v125;
    v111 = v126;
    if (v96)
    {
      (*(void (**)(char *, uint64_t))(v119 + 8))(v97, v120);
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    v98 = v110;
    v99 = v111;
    goto LABEL_28;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_2447563FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v20 = a2;
  v8 = sub_244794AAC();
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[1];
  v21 = *a1;
  swift_bridgeObjectRetain();
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v12 = sub_244794AA0();
  v13 = sub_244795370();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v19[0] = v8;
    v15 = v14;
    v16 = swift_slowAlloc();
    v24 = v16;
    *(_DWORD *)v15 = 136446466;
    v19[1] = v4;
    swift_bridgeObjectRetain();
    v23 = sub_24470600C(v20, a3, &v24);
    v20 = a4;
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    v23 = sub_24470600C(v21, v11, &v24);
    a4 = v20;
    sub_244795448();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2446FC000, v12, v13, "%{public}s:  load dylib command for %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v16, -1, -1);
    MEMORY[0x2495188D8](v15, -1, -1);

    (*(void (**)(char *, _QWORD))(v22 + 8))(v10, v19[0]);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v8);
  }
  sub_244794B78();
  v17 = sub_244794B84();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a4, 0, 1, v17);
}

unint64_t sub_2447566A0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;

  v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v4 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  v7 = 4 * v4;
  v8 = 15;
  while (sub_244795124() != a1 || v9 != a2)
  {
    v10 = sub_2447955D4();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      return v8;
    v8 = sub_2447950DC();
    if (v7 == v8 >> 14)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_24475678C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_244795130();
  __break(1u);
  return result;
}

uint64_t sub_2447567D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_244794008();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_244756800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, unint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  _BYTE *v61;
  unint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  _BYTE *v75;
  os_log_t v76;
  _BYTE *v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v85;
  _BYTE *v86;
  _BYTE *v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t, uint64_t);
  unint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  _BOOL4 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  void (*v100)(_BYTE *, uint64_t);
  _BYTE *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  uint64_t *v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  _BYTE *v110;
  uint64_t *v111;
  unint64_t *v112;
  unint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t, uint64_t);
  unint64_t v124;
  _BYTE *v125;
  NSObject *v126;
  os_log_type_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  _BYTE *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  _BYTE *v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  __int128 v142;
  unsigned __int8 *v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  _BYTE *v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  void (*v155)(unint64_t, _BYTE *, uint64_t);
  _BYTE v156[4];
  int v157;
  os_log_t v158;
  _BYTE *v159;
  _BYTE *v160;
  _BYTE *v161;
  _BYTE *v162;
  unint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  _BYTE *v166;
  void (*v167)(uint64_t, uint64_t, uint64_t);
  _BYTE *v168;
  __int128 v169;
  _BYTE *v170;
  _BYTE *v171;
  _BYTE *v172;
  uint64_t v173;
  uint64_t v174;
  _BYTE *v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t *v179;
  uint64_t v180;
  _BYTE *v181;
  _BYTE *v182;
  uint64_t v183;
  uint64_t v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  uint64_t v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  uint64_t v192;
  _BYTE *v193;

  v163 = a4;
  v164 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF68);
  MEMORY[0x24BDAC7A8](v9);
  v166 = &v156[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v176 = sub_244794C68();
  v173 = *(_QWORD *)(v176 - 8);
  v11 = MEMORY[0x24BDAC7A8](v176);
  v162 = &v156[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v182 = &v156[-v13];
  v180 = sub_244794AAC();
  v174 = *(_QWORD *)(v180 - 8);
  v14 = MEMORY[0x24BDAC7A8](v180);
  v172 = &v156[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v14);
  v159 = &v156[-v17];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v161 = &v156[-v19];
  MEMORY[0x24BDAC7A8](v18);
  v181 = &v156[-v20];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF70);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = &v156[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v22);
  v26 = &v156[-v25];
  v27 = sub_244794068();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v171 = &v156[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = MEMORY[0x24BDAC7A8](v29);
  v170 = &v156[-v32];
  v33 = MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)&v169 = &v156[-v34];
  v35 = MEMORY[0x24BDAC7A8](v33);
  v160 = &v156[-v36];
  v37 = MEMORY[0x24BDAC7A8](v35);
  v168 = &v156[-v38];
  v39 = MEMORY[0x24BDAC7A8](v37);
  v41 = &v156[-v40];
  MEMORY[0x24BDAC7A8](v39);
  v175 = &v156[-v42];
  v43 = v5[1];
  v165 = *v5;
  v179 = v5;
  v167 = a3;
  v44 = *(_QWORD *)a3;
  v45 = *(_QWORD *)(*(_QWORD *)a3 + 16);
  v177 = v27;
  v178 = v43;
  if (v45)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46 = a1;
    v47 = sub_24470F788(a1, a2);
    v27 = v177;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(_BYTE *, unint64_t, uint64_t))(v28 + 16))(v26, *(_QWORD *)(v44 + 56) + *(_QWORD *)(v28 + 72) * v47, v177);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v26, 0, 1, v27);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v26, 1, 1, v177);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v46 = a1;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v26, 1, 1, v27);
    swift_bridgeObjectRetain();
  }
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) != 1)
  {
    v57 = (uint64_t)v175;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v28 + 32))(v175, v26, v27);
    v58 = v27;
    sub_244789DFC(v46, a2, (uint64_t)v24);
    sub_244701444((uint64_t)v24, &qword_25737FF70);
    v59 = v181;
    sub_244794A88();
    v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
    v60((uint64_t)v41, v57, v58);
    v61 = v168;
    v167 = v60;
    v60((uint64_t)v168, v57, v58);
    v62 = v178;
    swift_bridgeObjectRetain_n();
    v63 = sub_244794AA0();
    v64 = sub_244795370();
    v65 = v64;
    if (os_log_type_enabled(v63, v64))
    {
      v66 = swift_slowAlloc();
      v158 = v63;
      v67 = v66;
      v166 = (_BYTE *)swift_slowAlloc();
      v193 = v166;
      *(_DWORD *)v67 = 136446722;
      swift_bridgeObjectRetain();
      v184 = sub_24470600C(v165, v62, (uint64_t *)&v193);
      v157 = v65;
      sub_244795448();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v67 + 12) = 2080;
      v68 = sub_244794008();
      v184 = sub_24470600C(v68, v69, (uint64_t *)&v193);
      v57 = (uint64_t)v175;
      sub_244795448();
      swift_bridgeObjectRelease();
      v70 = *(_BYTE **)(v28 + 8);
      ((void (*)(_BYTE *, uint64_t))v70)(v41, v58);
      *(_WORD *)(v67 + 22) = 2080;
      v71 = v183;
      v72 = sub_244794038();
      if (v73)
      {
        v74 = v73;
      }
      else
      {
        v72 = 0x6E776F6E6B6E753CLL;
        v74 = 0xE90000000000003ELL;
      }
      v184 = sub_24470600C(v72, v74, (uint64_t *)&v193);
      v75 = v70;
      sub_244795448();
      swift_bridgeObjectRelease();
      ((void (*)(_BYTE *, uint64_t))v70)(v61, v58);
      v76 = v158;
      _os_log_impl(&dword_2446FC000, v158, (os_log_type_t)v157, "%{public}s: Loading JIT symbols from targetDescription %s, buildable: %s", (uint8_t *)v67, 0x20u);
      v77 = v166;
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v77, -1, -1);
      MEMORY[0x2495188D8](v67, -1, -1);

      v174 = *(_QWORD *)(v174 + 8);
      ((void (*)(_BYTE *, uint64_t))v174)(v181, v180);
      v78 = v182;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      v75 = *(_BYTE **)(v28 + 8);
      ((void (*)(_BYTE *, uint64_t))v75)(v41, v58);
      ((void (*)(_BYTE *, uint64_t))v75)(v61, v58);

      v174 = *(_QWORD *)(v174 + 8);
      ((void (*)(_BYTE *, uint64_t))v174)(v59, v180);
      v78 = v182;
      v71 = v183;
    }
    v79 = v170;
    sub_2447555DC(v57, (uint64_t)v78);
    v80 = v176;
    v81 = v172;
    v82 = v171;
    v83 = v169;
    if (v71)
    {
      ((void (*)(uint64_t, uint64_t))v75)(v57, v177);
      return swift_bridgeObjectRelease();
    }
    v183 = 0;
    v85 = *(_QWORD *)(sub_244794044() + 16);
    swift_bridgeObjectRelease();
    v166 = v75;
    if (v85)
    {
      v86 = v161;
      sub_244794A88();
      v87 = v160;
      v88 = v177;
      v89 = v167;
      v167((uint64_t)v160, v57, v177);
      v89(v83, v57, v88);
      v90 = v178;
      swift_bridgeObjectRetain_n();
      v91 = sub_244794AA0();
      v92 = sub_244795370();
      LODWORD(v181) = v92;
      v93 = os_log_type_enabled(v91, v92);
      v94 = MEMORY[0x24BEE4AD8];
      if (v93)
      {
        v95 = swift_slowAlloc();
        v96 = swift_slowAlloc();
        v193 = (_BYTE *)v96;
        *(_DWORD *)v95 = 136446722;
        swift_bridgeObjectRetain();
        v184 = sub_24470600C(v165, v90, (uint64_t *)&v193);
        sub_244795448();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v95 + 12) = 2082;
        v184 = sub_244794044();
        __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF90);
        sub_24470130C(&qword_25737FF98, &qword_25737FF90, MEMORY[0x24BEE12E0]);
        v97 = sub_244795334();
        v99 = v98;
        swift_bridgeObjectRelease();
        v184 = sub_24470600C(v97, v99, (uint64_t *)&v193);
        sub_244795448();
        v100 = (void (*)(_BYTE *, uint64_t))v166;
        swift_bridgeObjectRelease();
        v100(v87, v88);
        *(_WORD *)(v95 + 22) = 2080;
        v101 = (_BYTE *)v169;
        v102 = sub_244794008();
        v184 = sub_24470600C(v102, v103, (uint64_t *)&v193);
        sub_244795448();
        swift_bridgeObjectRelease();
        v100(v101, v88);
        _os_log_impl(&dword_2446FC000, v91, (os_log_type_t)v181, "%{public}s: Loading %{public}s for %s", (uint8_t *)v95, 0x20u);
        v104 = MEMORY[0x24BEE4AD8];
        swift_arrayDestroy();
        MEMORY[0x2495188D8](v96, -1, -1);
        MEMORY[0x2495188D8](v95, -1, -1);

        ((void (*)(_BYTE *, uint64_t))v174)(v161, v180);
        v105 = v159;
      }
      else
      {
        swift_bridgeObjectRelease_n();
        ((void (*)(_BYTE *, uint64_t))v75)(v87, v88);
        ((void (*)(uint64_t, uint64_t))v75)(v83, v88);

        ((void (*)(_BYTE *, uint64_t))v174)(v86, v180);
        v105 = v159;
        v104 = v94;
      }
      v107 = sub_244794044();
      v109 = *(_QWORD *)(v107 + 16);
      v110 = v182;
      v111 = v179;
      v161 = (_BYTE *)v107;
      if (v109)
      {
        v112 = (unint64_t *)(v107 + 56);
        *(_QWORD *)&v108 = 136315138;
        v169 = v108;
        v168 = (_BYTE *)(v104 + 8);
        while (1)
        {
          v113 = *v112;
          v181 = (_BYTE *)*(v112 - 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_244794A88();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          v114 = sub_244794AA0();
          v115 = sub_244795370();
          if (os_log_type_enabled(v114, v115))
          {
            v116 = swift_slowAlloc();
            v117 = swift_slowAlloc();
            v193 = (_BYTE *)v117;
            *(_DWORD *)v116 = v169;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v116 + 4) = sub_24470600C((uint64_t)v181, v113, (uint64_t *)&v193);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_2446FC000, v114, v115, "Loading static archive %s into XOJIT", (uint8_t *)v116, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2495188D8](v117, -1, -1);
            v118 = v116;
            v111 = v179;
            v110 = v182;
            MEMORY[0x2495188D8](v118, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }
          ((void (*)(_BYTE *, uint64_t))v174)(v105, v180);
          v119 = *((_OWORD *)v111 + 1);
          v189 = *(_OWORD *)v111;
          v190 = v119;
          v191 = *((_OWORD *)v111 + 2);
          v192 = v111[6];
          v120 = v183;
          sub_2447595EC((uint64_t)v181, v113, (uint64_t)v181, v113, (uint64_t)v110);
          v183 = v120;
          if (v120)
            break;
          v112 += 4;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!--v109)
            goto LABEL_35;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(_BYTE *, uint64_t))(v173 + 8))(v110, v176);
        return ((uint64_t (*)(_BYTE *, uint64_t))v166)(v175, v177);
      }
LABEL_35:
      swift_bridgeObjectRelease();
      v80 = v176;
      v57 = (uint64_t)v175;
      v81 = v172;
      v75 = v166;
      v82 = v171;
      v79 = v170;
    }
    v121 = *(_QWORD *)(sub_244794014() + 16);
    swift_bridgeObjectRelease();
    if (!v121)
      goto LABEL_49;
    sub_244794A88();
    v122 = v177;
    v123 = v167;
    v167((uint64_t)v79, v57, v177);
    v123((uint64_t)v82, v57, v122);
    v124 = v178;
    swift_bridgeObjectRetain();
    v125 = v82;
    v126 = sub_244794AA0();
    v127 = sub_244795370();
    LODWORD(v181) = v127;
    if (os_log_type_enabled(v126, v127))
    {
      v128 = swift_slowAlloc();
      v129 = swift_slowAlloc();
      v193 = (_BYTE *)v129;
      *(_DWORD *)v128 = 136446722;
      swift_bridgeObjectRetain();
      v184 = sub_24470600C(v165, v124, (uint64_t *)&v193);
      sub_244795448();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v128 + 12) = 2082;
      v184 = sub_244794014();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF80);
      sub_24470130C(&qword_25737FF88, &qword_25737FF80, MEMORY[0x24BEE12E0]);
      v130 = sub_244795334();
      v132 = v131;
      swift_bridgeObjectRelease();
      v184 = sub_24470600C(v130, v132, (uint64_t *)&v193);
      sub_244795448();
      v75 = v166;
      swift_bridgeObjectRelease();
      v133 = v177;
      ((void (*)(_BYTE *, uint64_t))v75)(v79, v177);
      *(_WORD *)(v128 + 22) = 2080;
      v134 = v171;
      v135 = sub_244794008();
      v184 = sub_24470600C(v135, v136, (uint64_t *)&v193);
      v57 = (uint64_t)v175;
      sub_244795448();
      swift_bridgeObjectRelease();
      ((void (*)(_BYTE *, uint64_t))v75)(v134, v133);
      _os_log_impl(&dword_2446FC000, v126, (os_log_type_t)v181, "%{public}s: Loading %{public}s for %s", (uint8_t *)v128, 0x20u);
      swift_arrayDestroy();
      v137 = v129;
      v80 = v176;
      MEMORY[0x2495188D8](v137, -1, -1);
      MEMORY[0x2495188D8](v128, -1, -1);

      v138 = v172;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      ((void (*)(_BYTE *, uint64_t))v75)(v79, v122);
      ((void (*)(_BYTE *, uint64_t))v75)(v125, v122);

      v138 = v81;
    }
    ((void (*)(_BYTE *, uint64_t))v174)(v138, v180);
    v139 = v179;
    v140 = sub_244794014();
    v141 = *(_QWORD *)(v140 + 16);
    if (!v141)
    {
LABEL_49:
      swift_bridgeObjectRelease();
LABEL_50:
      v150 = v182;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v173 + 16))(v162, v182, v80);
      v151 = *v163;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v151 = sub_244749290(0, *(_QWORD *)(v151 + 16) + 1, 1, v151);
      v153 = *(_QWORD *)(v151 + 16);
      v152 = *(_QWORD *)(v151 + 24);
      if (v153 >= v152 >> 1)
        v151 = sub_244749290(v152 > 1, v153 + 1, 1, v151);
      *(_QWORD *)(v151 + 16) = v153 + 1;
      v154 = v151
           + ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80))
           + *(_QWORD *)(v173 + 72) * v153;
      v155 = *(void (**)(unint64_t, _BYTE *, uint64_t))(v173 + 32);
      v155(v154, v162, v80);
      *v163 = v151;
      ((void (*)(uint64_t, uint64_t))v75)(v57, v177);
      return ((uint64_t (*)(uint64_t, _BYTE *, uint64_t))v155)(v164, v150, v80);
    }
    v142 = *((_OWORD *)v139 + 1);
    v185 = *(_OWORD *)v139;
    v186 = v142;
    v187 = *((_OWORD *)v139 + 2);
    v188 = v139[6];
    v180 = v140;
    v143 = (unsigned __int8 *)(v140 + 72);
    while (1)
    {
      v145 = *((_QWORD *)v143 - 4);
      v144 = *((_QWORD *)v143 - 3);
      v146 = *((_QWORD *)v143 - 2);
      LODWORD(v181) = *v143;
      if (v145)
      {
        v147 = *((_QWORD *)v143 - 5);
        v148 = v145;
      }
      else
      {
        swift_bridgeObjectRetain();
        v147 = v144;
        v148 = v146;
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v149 = v183;
      sub_244759930(v144, v146, v147, v148, (int)v181, (uint64_t)v182);
      v183 = v149;
      if (v149)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v143 += 48;
      if (!--v141)
      {
        swift_bridgeObjectRelease();
        v80 = v176;
        v57 = (uint64_t)v175;
        v75 = v166;
        goto LABEL_50;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v173 + 8))(v182, v176);
    return ((uint64_t (*)(_BYTE *, uint64_t))v166)(v175, v177);
  }
  swift_bridgeObjectRelease();
  sub_244701444((uint64_t)v26, &qword_25737FF70);
  v49 = v179[5];
  if (!*(_QWORD *)(v49 + 16))
  {
    v55 = (uint64_t)v166;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v173 + 56))(v166, 1, 1, v176);
LABEL_25:
    sub_244701444(v55, &qword_25737FF68);
    sub_24475E280();
    swift_allocError();
    *v106 = v46;
    v106[1] = a2;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  swift_bridgeObjectRetain();
  v50 = sub_24470F788(v46, a2);
  v51 = v176;
  v52 = v173;
  if ((v53 & 1) != 0)
  {
    v54 = *(_QWORD *)(v49 + 56) + *(_QWORD *)(v173 + 72) * v50;
    v55 = (uint64_t)v166;
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v173 + 16))(v166, v54, v176);
    v56 = 0;
  }
  else
  {
    v56 = 1;
    v55 = (uint64_t)v166;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v55, v56, 1, v51);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v55, 1, v51) == 1)
    goto LABEL_25;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v164, v55, v51);
}

uint64_t sub_244757BC0(NSObject *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  uint8_t *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint8_t *v29;
  uint64_t v30;
  uint8_t *v32;
  void *v33;
  int v34;
  void *v35;
  int v36;
  _DWORD *v37;
  char *v38;
  id v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  id v47;
  uint64_t v48;
  os_log_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  os_log_t v68;
  uint64_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v68 = a1;
  v2 = v1;
  v3 = sub_2447944DC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_244794AAC();
  v7 = MEMORY[0x24BDAC7A8](v71);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v61 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v61 - v15;
  v18 = *(_QWORD *)v2;
  v17 = *(_QWORD *)(v2 + 8);
  v19 = *(unsigned __int8 *)(v2 + 16) - 1;
  v20 = *(_BYTE *)(v2 + 16) != 1;
  v70 = v21;
  if (v19 == 1 || !v20)
  {
    swift_bridgeObjectRetain();
    sub_244794A88();
    swift_bridgeObjectRetain();
    v22 = sub_244794AA0();
    v23 = sub_24479537C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v73 = v25;
      *(_DWORD *)v24 = 136446210;
      swift_bridgeObjectRetain();
      v72 = sub_24470600C(v18, v17, &v73);
      sub_244795448();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2446FC000, v22, v23, "%{public}s: Initial jit link already invoked", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v25, -1, -1);
      MEMORY[0x2495188D8](v24, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*((void (**)(char *, uint64_t))v70 + 1))(v16, v71);
    sub_24475E5DC();
    swift_allocError();
    return swift_willThrow();
  }
  v62 = v14;
  v65 = v3;
  *(_BYTE *)(v2 + 16) = 1;
  swift_bridgeObjectRetain_n();
  sub_2447944C4();
  sub_2447944D0();
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  v26 = sub_244794AA0();
  v27 = sub_244795370();
  v28 = os_log_type_enabled(v26, v27);
  v66 = v6;
  v67 = v4;
  v63 = v18;
  v64 = v9;
  if (v28)
  {
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    v73 = v30;
    *(_DWORD *)v29 = 136446210;
    v61 = v29 + 4;
    swift_bridgeObjectRetain();
    v72 = sub_24470600C(v18, v17, &v73);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2446FC000, v26, v27, "%{public}s: Performing initial jit link", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v30, -1, -1);
    MEMORY[0x2495188D8](v29, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v32 = (uint8_t *)*((_QWORD *)v70 + 1);
  ((void (*)(char *, uint64_t))v32)(v13, v71);
  v33 = (void *)v69;
  v34 = sub_244794C20();
  v35 = v33;
  if (v33)
    goto LABEL_12;
  v36 = v34;
  if (v34)
  {
    sub_24475E598();
    v35 = (void *)swift_allocError();
    *v37 = v36;
    swift_willThrow();
LABEL_12:
    v38 = v64;
    sub_244794A88();
    v39 = v35;
    swift_bridgeObjectRetain();
    v40 = v35;
    v41 = sub_244794AA0();
    v42 = sub_24479537C();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      v68 = v41;
      v44 = v43;
      v45 = swift_slowAlloc();
      v70 = v32;
      v46 = (_QWORD *)v45;
      v69 = swift_slowAlloc();
      v73 = v69;
      *(_DWORD *)v44 = 136446722;
      swift_bridgeObjectRetain();
      v72 = sub_24470600C(v63, v17, &v73);
      sub_244795448();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 12) = 2082;
      v72 = sub_24470600C(0xD00000000000002BLL, 0x800000024479F540, &v73);
      sub_244795448();
      *(_WORD *)(v44 + 22) = 2114;
      v47 = v35;
      v48 = _swift_stdlib_bridgeErrorToNSError();
      v72 = v48;
      sub_244795448();
      *v46 = v48;

      v49 = v68;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v46, -1, -1);
      v50 = v69;
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v50, -1, -1);
      MEMORY[0x2495188D8](v44, -1, -1);

      ((void (*)(char *, uint64_t))v70)(v38, v71);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      ((void (*)(char *, uint64_t))v32)(v38, v71);
    }
    v51 = v65;
    v52 = v66;
    v53 = v67;
    swift_willThrow();
    sub_2447944B8();
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v52, v51);
  }
  v54 = v62;
  sub_244794A88();
  swift_bridgeObjectRetain();
  v55 = sub_244794AA0();
  v56 = sub_244795370();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = (uint8_t *)swift_slowAlloc();
    v58 = swift_slowAlloc();
    v73 = v58;
    *(_DWORD *)v57 = 136446210;
    v70 = v57 + 4;
    swift_bridgeObjectRetain();
    v72 = sub_24470600C(v63, v17, &v73);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2446FC000, v55, v56, "%{public}s: link succeeded", v57, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v58, -1, -1);
    MEMORY[0x2495188D8](v57, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  ((void (*)(uint64_t, uint64_t))v32)(v54, v71);
  v60 = v66;
  v59 = v67;
  sub_2447944B8();
  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v60, v65);
}

uint64_t sub_2447583F4(uint64_t a1)
{
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint8_t *v33;
  uint64_t v34;
  void (*v35)(_QWORD, _QWORD);
  uint64_t v36;
  uint64_t v37;
  os_log_t v38;
  uint64_t v39;
  __int128 v40;
  char *v41;
  char *v42;
  void (*isa)(char *, uint8_t *, uint64_t);
  uint64_t v44;
  char *v45;
  NSObject *v46;
  unint64_t v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void *v57;
  char *v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  id v66;
  id v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  id v73;
  char *v74;
  uint64_t v75;
  os_log_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  char *v89;
  uint64_t v90;
  char *v91;
  void *v92;
  uint8_t *v93;
  uint64_t *v94;
  char *v95;
  uint64_t v96;
  void (*v97)(_QWORD, _QWORD);
  os_log_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(_QWORD, _QWORD);

  v3 = v2;
  v4 = v1;
  v101 = sub_244794C68();
  v98 = *(os_log_t *)(v101 - 8);
  v6 = MEMORY[0x24BDAC7A8](v101);
  v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v80 - v9;
  v11 = sub_244794AAC();
  v12 = *(_QWORD *)(v11 - 8);
  v99 = v11;
  v100 = v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v80 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v91 = (char *)&v80 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v80 - v21;
  v23 = sub_2447944DC();
  result = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = a1;
  v96 = *(_QWORD *)(a1 + 16);
  if (v96)
  {
    v95 = v8;
    v82 = v18;
    v84 = v25;
    v85 = result;
    v28 = *v4;
    v29 = v4[1];
    swift_bridgeObjectRetain();
    sub_2447944C4();
    v83 = v27;
    sub_2447944D0();
    swift_bridgeObjectRetain();
    sub_244794A88();
    swift_bridgeObjectRetain_n();
    v30 = sub_244794AA0();
    v31 = sub_244795370();
    v32 = os_log_type_enabled(v30, v31);
    v81 = v15;
    v90 = v28;
    if (v32)
    {
      v94 = v4;
      v33 = (uint8_t *)swift_slowAlloc();
      v97 = (void (*)(_QWORD, _QWORD))swift_slowAlloc();
      v103 = v97;
      *(_DWORD *)v33 = 136446210;
      v4 = v94;
      v93 = v33 + 4;
      swift_bridgeObjectRetain();
      v102 = sub_24470600C(v28, v29, (uint64_t *)&v103);
      sub_244795448();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2446FC000, v30, v31, "%{public}s: Applying pending updates.", v33, 0xCu);
      v34 = MEMORY[0x24BEE4AD8];
      v35 = v97;
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v35, -1, -1);
      MEMORY[0x2495188D8](v33, -1, -1);

      v97 = *(void (**)(_QWORD, _QWORD))(v100 + 8);
      v97(v22, v99);
      v36 = v34;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v97 = *(void (**)(_QWORD, _QWORD))(v100 + 8);
      v97(v22, v99);
      v36 = MEMORY[0x24BEE4AD8];
    }
    v37 = v4[4];
    v38 = v98;
    v93 = (uint8_t *)(v86 + ((LOBYTE(v98[10].isa) + 32) & ~(unint64_t)LOBYTE(v98[10].isa)));
    v94 = (uint64_t *)v37;
    result = swift_bridgeObjectRetain();
    v39 = 0;
    *(_QWORD *)&v40 = 136446466;
    v88 = v40;
    v87 = v36 + 8;
    v41 = v91;
    v89 = v10;
    v42 = v95;
    while (!__OFADD__(v39, 1))
    {
      v100 = v39 + 1;
      isa = (void (*)(char *, uint8_t *, uint64_t))v38[2].isa;
      v44 = v101;
      isa(v10, &v93[(uint64_t)v38[9].isa * v39], v101);
      sub_244794A88();
      isa(v42, (uint8_t *)v10, v44);
      swift_bridgeObjectRetain_n();
      v45 = v41;
      v46 = sub_244794AA0();
      v47 = v29;
      v48 = sub_244795370();
      if (os_log_type_enabled(v46, v48))
      {
        v49 = swift_slowAlloc();
        v92 = v3;
        v50 = v49;
        v51 = swift_slowAlloc();
        v103 = (void (*)(_QWORD, _QWORD))v51;
        *(_DWORD *)v50 = v88;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v50 + 4) = sub_24470600C(v90, v47, (uint64_t *)&v103);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v50 + 12) = 2080;
        v52 = sub_244794C5C();
        *(_QWORD *)(v50 + 14) = sub_24470600C(v52, v53, (uint64_t *)&v103);
        swift_bridgeObjectRelease();
        v54 = (void (*)(char *, uint64_t))v38[1].isa;
        v54(v42, v101);
        _os_log_impl(&dword_2446FC000, v46, v48, "%{public}s: Applying for %s", (uint8_t *)v50, 0x16u);
        swift_arrayDestroy();
        v55 = v51;
        v10 = v89;
        MEMORY[0x2495188D8](v55, -1, -1);
        v56 = v50;
        v3 = v92;
        MEMORY[0x2495188D8](v56, -1, -1);

        v41 = v91;
        v97(v91, v99);
        v29 = v47;
      }
      else
      {
        swift_bridgeObjectRelease_n();
        v54 = (void (*)(char *, uint64_t))v38[1].isa;
        v54(v42, v101);

        v97(v45, v99);
        v29 = v47;
        v41 = v45;
      }
      v57 = v3;
      sub_244794BD8();
      if (v3)
      {
        swift_bridgeObjectRelease();
        v65 = v81;
        sub_244794A88();
        v66 = v3;
        swift_bridgeObjectRetain();
        v67 = v3;
        v68 = sub_244794AA0();
        v69 = sub_24479537C();
        if (os_log_type_enabled(v68, v69))
        {
          v70 = swift_slowAlloc();
          v71 = swift_slowAlloc();
          v98 = v68;
          v72 = (_QWORD *)v71;
          v100 = swift_slowAlloc();
          v103 = (void (*)(_QWORD, _QWORD))v100;
          *(_DWORD *)v70 = v88;
          swift_bridgeObjectRetain();
          v102 = sub_24470600C(v90, v29, (uint64_t *)&v103);
          sub_244795448();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v70 + 12) = 2112;
          v73 = v57;
          v74 = v65;
          v75 = _swift_stdlib_bridgeErrorToNSError();
          v102 = v75;
          v10 = v89;
          sub_244795448();
          *v72 = v75;

          v76 = v98;
          _os_log_impl(&dword_2446FC000, v98, v69, "%{public}s: Failed applying pending updates: %@", (uint8_t *)v70, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
          swift_arrayDestroy();
          MEMORY[0x2495188D8](v72, -1, -1);
          v77 = v100;
          swift_arrayDestroy();
          MEMORY[0x2495188D8](v77, -1, -1);
          MEMORY[0x2495188D8](v70, -1, -1);

          v78 = v74;
        }
        else
        {
          swift_bridgeObjectRelease_n();

          v78 = v65;
        }
        v97(v78, v99);
        swift_willThrow();
        v54(v10, v101);
        goto LABEL_20;
      }
      result = ((uint64_t (*)(char *, uint64_t))v54)(v10, v101);
      ++v39;
      v38 = v98;
      if (v100 == v96)
      {
        swift_bridgeObjectRelease();
        v58 = v82;
        sub_244794A88();
        swift_bridgeObjectRetain();
        v59 = sub_244794AA0();
        v60 = sub_244795370();
        if (os_log_type_enabled(v59, v60))
        {
          v61 = (uint8_t *)swift_slowAlloc();
          v62 = v29;
          v63 = swift_slowAlloc();
          v103 = (void (*)(_QWORD, _QWORD))v63;
          *(_DWORD *)v61 = 136446210;
          swift_bridgeObjectRetain();
          v102 = sub_24470600C(v90, v62, (uint64_t *)&v103);
          sub_244795448();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_2446FC000, v59, v60, "%{public}s: Finished applying pending updates", v61, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2495188D8](v63, -1, -1);
          MEMORY[0x2495188D8](v61, -1, -1);

          v64 = v82;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          v64 = v58;
        }
        v97(v64, v99);
LABEL_20:
        v79 = v83;
        sub_2447944B8();
        return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v79, v85);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_244758D24(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  __int128 v34;
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint8_t *, uint64_t);
  uint64_t v39;
  NSObject *v40;
  unint64_t v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  id v51;
  char *v52;
  NSObject *v53;
  os_log_type_t v54;
  unint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  char *v58;
  id v59;
  id v60;
  id v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  id v65;
  id v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  id v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  char *v84;
  uint8_t *v85;
  char *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v94 = sub_244794C68();
  v91 = *(_QWORD *)(v94 - 8);
  v3 = MEMORY[0x24BDAC7A8](v94);
  v5 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v84 = (char *)&v74 - v6;
  v90 = sub_244794AAC();
  v7 = *(_QWORD *)(v90 - 8);
  v8 = MEMORY[0x24BDAC7A8](v90);
  v10 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v74 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v74 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v74 - v17;
  v19 = sub_2447944DC();
  result = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = a1;
  v88 = *(_QWORD *)(a1 + 16);
  if (v88)
  {
    v89 = v7;
    v92 = (uint64_t)v16;
    v86 = v5;
    v75 = v13;
    v78 = v21;
    v79 = result;
    v24 = *v1;
    v25 = v1[1];
    v87 = v1;
    swift_bridgeObjectRetain();
    sub_2447944C4();
    v77 = v23;
    sub_2447944D0();
    swift_bridgeObjectRetain();
    sub_244794A88();
    swift_bridgeObjectRetain_n();
    v26 = sub_244794AA0();
    v27 = sub_244795370();
    v28 = os_log_type_enabled(v26, v27);
    v29 = MEMORY[0x24BEE4AD8];
    v76 = v10;
    v83 = v24;
    if (v28)
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v96 = v31;
      *(_DWORD *)v30 = 136446210;
      v29 = MEMORY[0x24BEE4AD8];
      v85 = v30 + 4;
      swift_bridgeObjectRetain();
      v95 = sub_24470600C(v24, v25, &v96);
      sub_244795448();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2446FC000, v26, v27, "%{public}s: Running new initializers.", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v31, -1, -1);
      MEMORY[0x2495188D8](v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v89 = *(_QWORD *)(v89 + 8);
    ((void (*)(char *, uint64_t))v89)(v18, v90);
    v32 = (_QWORD *)v91;
    v85 = (uint8_t *)(v80 + ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80)));
    result = swift_bridgeObjectRetain();
    v33 = 0;
    *(_QWORD *)&v34 = 136446466;
    v82 = v34;
    v81 = v29 + 8;
    v35 = v84;
    v36 = v92;
    v37 = v86;
    while (!__OFADD__(v33, 1))
    {
      v92 = v33 + 1;
      v38 = (void (*)(char *, uint8_t *, uint64_t))v32[2];
      v39 = v94;
      v38(v35, &v85[v32[9] * v33], v94);
      sub_244794A88();
      v38(v37, (uint8_t *)v35, v39);
      swift_bridgeObjectRetain_n();
      v40 = sub_244794AA0();
      v41 = v25;
      v42 = sub_244795370();
      if (os_log_type_enabled(v40, v42))
      {
        v43 = swift_slowAlloc();
        v44 = swift_slowAlloc();
        v96 = v44;
        *(_DWORD *)v43 = v82;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v43 + 4) = sub_24470600C(v83, v41, &v96);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v43 + 12) = 2080;
        v45 = sub_244794C5C();
        *(_QWORD *)(v43 + 14) = sub_24470600C(v45, v46, &v96);
        swift_bridgeObjectRelease();
        v47 = *(void (**)(char *, uint64_t))(v91 + 8);
        v47(v37, v94);
        _os_log_impl(&dword_2446FC000, v40, v42, "%{public}s: Running for %s", (uint8_t *)v43, 0x16u);
        swift_arrayDestroy();
        v48 = v44;
        v49 = v47;
        MEMORY[0x2495188D8](v48, -1, -1);
        v50 = v43;
        v35 = v84;
        MEMORY[0x2495188D8](v50, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        v49 = (void (*)(char *, uint64_t))v32[1];
        v49(v37, v94);
      }

      ((void (*)(uint64_t, uint64_t))v89)(v36, v90);
      v25 = v41;
      v51 = v93;
      sub_244794C08();
      v93 = v51;
      if (v51)
      {
        swift_bridgeObjectRelease();
        v58 = v76;
        sub_244794A88();
        v59 = v93;
        v60 = v93;
        swift_bridgeObjectRetain();
        v61 = v59;
        v62 = sub_244794AA0();
        v63 = sub_24479537C();
        if (os_log_type_enabled(v62, v63))
        {
          v64 = swift_slowAlloc();
          v91 = swift_slowAlloc();
          v92 = swift_slowAlloc();
          v96 = v92;
          *(_DWORD *)v64 = v82;
          v65 = v93;
          swift_bridgeObjectRetain();
          v95 = sub_24470600C(v83, v41, &v96);
          sub_244795448();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v64 + 12) = 2112;
          v66 = v65;
          v67 = v58;
          v68 = _swift_stdlib_bridgeErrorToNSError();
          v95 = v68;
          v35 = v84;
          sub_244795448();
          v69 = v91;
          *(_QWORD *)v91 = v68;

          _os_log_impl(&dword_2446FC000, v62, v63, "%{public}s: Failed running new initializers: %@", (uint8_t *)v64, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
          swift_arrayDestroy();
          MEMORY[0x2495188D8](v69, -1, -1);
          v70 = v92;
          swift_arrayDestroy();
          MEMORY[0x2495188D8](v70, -1, -1);
          MEMORY[0x2495188D8](v64, -1, -1);

          v71 = v67;
        }
        else
        {
          swift_bridgeObjectRelease_n();
          v72 = v93;

          v71 = v58;
        }
        ((void (*)(char *, uint64_t))v89)(v71, v90);
        v73 = v77;
        swift_willThrow();
        v49(v35, v94);
        goto LABEL_20;
      }
      result = ((uint64_t (*)(char *, uint64_t))v49)(v35, v94);
      ++v33;
      v32 = (_QWORD *)v91;
      if (v92 == v88)
      {
        swift_bridgeObjectRelease();
        v52 = v75;
        sub_244794A88();
        swift_bridgeObjectRetain();
        v53 = sub_244794AA0();
        v54 = sub_244795370();
        if (os_log_type_enabled(v53, v54))
        {
          v55 = v25;
          v56 = (uint8_t *)swift_slowAlloc();
          v57 = swift_slowAlloc();
          v96 = v57;
          *(_DWORD *)v56 = 136446210;
          swift_bridgeObjectRetain();
          v95 = sub_24470600C(v83, v55, &v96);
          sub_244795448();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_2446FC000, v53, v54, "%{public}s: Finished running new initializers", v56, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2495188D8](v57, -1, -1);
          MEMORY[0x2495188D8](v56, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        ((void (*)(char *, uint64_t))v89)(v52, v90);
        v73 = v77;
LABEL_20:
        sub_2447944B8();
        return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v73, v79);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2447595EC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a1;
  v30 = a5;
  v31 = a3;
  v8 = sub_244794BC0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_244794AAC();
  v32 = *(_QWORD *)(v11 - 8);
  v33 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v5;
  v14 = v5[1];
  v28 = v5;
  swift_bridgeObjectRetain();
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v16 = sub_244794AA0();
  v17 = sub_244795370();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v26 = v9;
    v19 = v18;
    v25 = swift_slowAlloc();
    v37 = v25;
    *(_DWORD *)v19 = 136446722;
    v27 = v8;
    swift_bridgeObjectRetain();
    v36 = sub_24470600C(v15, v14, &v37);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2080;
    swift_bridgeObjectRetain();
    v36 = sub_24470600C(v35, a2, &v37);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 22) = 2080;
    swift_bridgeObjectRetain();
    v36 = sub_24470600C(v31, a4, &v37);
    v8 = v27;
    sub_244795448();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2446FC000, v16, v17, "%{public}s: Loading static archive %s with identifier %s", (uint8_t *)v19, 0x20u);
    v20 = v25;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v20, -1, -1);
    v21 = v19;
    v9 = v26;
    MEMORY[0x2495188D8](v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v33);
  sub_244794AF4();
  swift_bridgeObjectRetain();
  v22 = v34;
  result = sub_244794AE8();
  if (!v22)
  {
    v24 = v29;
    sub_244794BFC();
    sub_244794BA8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v24, v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_244759930(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, int a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  char *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v35 = a6;
  v39 = a5;
  v38 = a3;
  v10 = sub_244794BC0();
  v33 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v32 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_244794AAC();
  v36 = *(_QWORD *)(v12 - 8);
  v37 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v6;
  v16 = v6[1];
  v34 = v6;
  swift_bridgeObjectRetain();
  sub_244794A88();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v17 = sub_244794AA0();
  v18 = sub_244795370();
  v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v20 = swift_slowAlloc();
    v31 = v10;
    v21 = v20;
    v30 = swift_slowAlloc();
    v42 = v30;
    *(_DWORD *)v21 = 136446978;
    v28 = a1;
    v29 = v19;
    swift_bridgeObjectRetain();
    v41 = sub_24470600C(v15, v16, &v42);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2080;
    swift_bridgeObjectRetain();
    v41 = sub_24470600C(a1, a2, &v42);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 22) = 2080;
    swift_bridgeObjectRetain();
    v41 = sub_24470600C(v38, a4, &v42);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 32) = 1024;
    v22 = v39;
    LODWORD(v41) = v39 & 1;
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v17, (os_log_type_t)v29, "%{public}s: Loading %s, identifier %s, forReplacement: %{BOOL}d", (uint8_t *)v21, 0x26u);
    v23 = v30;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v23, -1, -1);
    v24 = v21;
    v10 = v31;
    MEMORY[0x2495188D8](v24, -1, -1);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v37);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v37);
    v22 = v39;
  }
  v25 = v40;
  sub_244794AF4();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_244794ADC();
  if (!v25)
  {
    if ((v22 & 1) != 0)
    {
      sub_244794BCC();
    }
    else
    {
      v27 = v32;
      sub_244794BFC();
      sub_244794BB4();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v27, v10);
    }
    return swift_release();
  }
  return result;
}

unint64_t sub_244759D24()
{
  return 0xD000000000000027;
}

uint64_t sub_244759D40()
{
  _QWORD v1[2];

  strcpy((char *)v1, "installName: ");
  swift_bridgeObjectRetain();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_244759DB4()
{
  sub_24475FCD8();
  return sub_244794668();
}

uint64_t sub_244759DDC()
{
  sub_24475FCD8();
  return sub_244794638();
}

unint64_t sub_244759E04()
{
  sub_2447954CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return 0xD00000000000002FLL;
}

uint64_t sub_244759E90()
{
  sub_2447954CC();
  swift_bridgeObjectRelease();
  type metadata accessor for PreviewsJITLinkerState.TargetDescriptionWithDuplicateInstallNameEncountered(0);
  sub_24479405C();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  sub_24479405C();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return 0x3A31746567726174;
}

uint64_t sub_244759F6C(uint64_t a1, uint64_t a2)
{
  return sub_244759F90(a1, a2, 0x4E6C6C6174736E69);
}

uint64_t sub_244759F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return a3;
}

uint64_t sub_244759FE8()
{
  sub_24470665C(&qword_257380438, type metadata accessor for PreviewsJITLinkerState.TargetDescriptionWithDuplicateInstallNameEncountered, (uint64_t)&unk_24479A898);
  return sub_244794668();
}

uint64_t sub_24475A028()
{
  sub_24470665C(&qword_257380438, type metadata accessor for PreviewsJITLinkerState.TargetDescriptionWithDuplicateInstallNameEncountered, (uint64_t)&unk_24479A898);
  return sub_244794638();
}

unint64_t sub_24475A068()
{
  sub_2447954CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380450);
  sub_24470130C(&qword_257380458, &qword_257380450, MEMORY[0x24BEE2B40]);
  sub_2447013BC();
  sub_244795154();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return 0xD000000000000016;
}

uint64_t sub_24475A160@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

unint64_t sub_24475A16C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_24474DFCC(v0);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380440);
  sub_24470130C(&qword_257380448, &qword_257380440, MEMORY[0x24BEE12B0]);
  sub_244795034();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  return 0xD000000000000013;
}

unint64_t sub_24475A244()
{
  return 0xD000000000000047;
}

unint64_t sub_24475A260()
{
  return sub_24475A068();
}

unint64_t sub_24475A268()
{
  return sub_24475A16C();
}

uint64_t sub_24475A270()
{
  sub_24475FD1C();
  return sub_244794668();
}

uint64_t sub_24475A298()
{
  sub_24475FD1C();
  return sub_244794638();
}

uint64_t sub_24475A2C0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];

  v3 = v2;
  v6 = sub_244795070();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257380070);
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 44) = 0;
  v11 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v11;
  *(_QWORD *)(v10 + 32) = 0;
  *(_BYTE *)(v10 + 40) = 1;
  *(_QWORD *)(v2 + 16) = v10;
  v16[0] = 0xD00000000000001DLL;
  v16[1] = 0x800000024479F650;
  swift_retain();
  sub_244795064();
  sub_2447013BC();
  v12 = sub_244795460();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  result = swift_bridgeObjectRelease();
  if (v12)
  {
    v14 = swift_allocObject();
    swift_weakInit();
    v15 = swift_allocObject();
    *(_BYTE *)(v15 + 16) = a2 & 1;
    *(_QWORD *)(v15 + 24) = v14;
    *(_QWORD *)(v15 + 32) = v12;
    swift_retain();
    sub_244794C2C();
    swift_release();
    swift_release();
    swift_release();
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24475A460(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  os_log_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD v30[4];
  uint64_t v31;
  os_log_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[3];

  v36 = a5;
  v37 = a2;
  v7 = sub_244794B3C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_244794AAC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    sub_244794A88();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
    v15 = sub_244794AA0();
    v16 = sub_244795370();
    v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      v18 = swift_slowAlloc();
      v35 = a1;
      v19 = v18;
      v34 = swift_slowAlloc();
      v39[0] = v34;
      *(_DWORD *)v19 = 136315394;
      v31 = v19 + 4;
      v33 = v17;
      v20 = sub_244794B18();
      v38 = sub_24470600C(v20, v21, v39);
      v32 = v15;
      sub_244795448();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      *(_WORD *)(v19 + 12) = 2048;
      v38 = v37;
      sub_244795448();
      v22 = v32;
      _os_log_impl(&dword_2446FC000, v32, (os_log_type_t)v33, "+ new symbol: %s -> %llx", (uint8_t *)v19, 0x16u);
      v23 = v34;
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v23, -1, -1);
      MEMORY[0x2495188D8](v19, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v25 = *(_QWORD *)(result + 16);
    swift_retain();
    swift_release();
    v26 = sub_244794B24();
    v38 = v25;
    MEMORY[0x24BDAC7A8](v26);
    v27 = v37;
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF18);
    v30[3] = sub_24470130C(&qword_25737FF28, &qword_25737FF18, MEMORY[0x24BE76C78]);
    v30[1] = v28;
    v30[2] = MEMORY[0x24BEE4AE0] + 8;
    v30[0] = v30;
    sub_244794878();
    v29 = (_QWORD *)swift_allocObject();
    v29[2] = v36;
    v29[3] = v25;
    v29[4] = v27;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_244794B0C();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24475A810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257380080);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_244794B3C();
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a3, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  return sub_244789484((uint64_t)v7, a2);
}

uint64_t sub_24475A8DC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    result = memcmp((const void *)result, (const void *)(a3 + 32), *(_QWORD *)(a3 + 16));
    if (!(_DWORD)result)
    {
      MEMORY[0x24BDAC7A8](result);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF18);
      sub_24470130C(&qword_25737FF28, &qword_25737FF18, MEMORY[0x24BE76C78]);
      return sub_244794878();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24475A9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t result;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD v18[2];

  v4 = sub_244794AAC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v18 - v9;
  if (*(_BYTE *)(a1 + 24) == 1)
  {
    sub_244794A88();
    v11 = sub_244794AA0();
    v12 = sub_244795370();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v13 = 134349056;
      v18[1] = a2;
      sub_244795448();
      _os_log_impl(&dword_2446FC000, v11, v12, "Swift entry section pointer symbol found %{public}llx.", v13, 0xCu);
      MEMORY[0x2495188D8](v13, -1, -1);
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    *(_QWORD *)(a1 + 16) = a2;
    *(_BYTE *)(a1 + 24) = 0;
  }
  else
  {
    sub_244794A88();
    v15 = sub_244794AA0();
    v16 = sub_24479537C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_2446FC000, v15, v16, "Swift entry section pointer symbol encountered more than once. Ignoring.", v17, 2u);
      MEMORY[0x2495188D8](v17, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

uint64_t sub_24475ABD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF38);
  v2 = MEMORY[0x24BDAC7A8](v31);
  v4 = (uint64_t *)((char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v2);
  v30 = (char *)&v27 - v5;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(v6 + 64);
  v28 = v6 + 64;
  v8 = 1 << *(_BYTE *)(v6 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v29 = (unint64_t)(v8 + 63) >> 6;
  v32 = v6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  v13 = v30;
  while (1)
  {
    if (v10)
    {
      v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_5;
    }
    v24 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v24 >= v29)
      return swift_release();
    v25 = *(_QWORD *)(v28 + 8 * v24);
    ++v12;
    if (!v25)
    {
      v12 = v24 + 1;
      if (v24 + 1 >= v29)
        return swift_release();
      v25 = *(_QWORD *)(v28 + 8 * v12);
      if (!v25)
      {
        v12 = v24 + 2;
        if (v24 + 2 >= v29)
          return swift_release();
        v25 = *(_QWORD *)(v28 + 8 * v12);
        if (!v25)
          break;
      }
    }
LABEL_20:
    v10 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v12 << 6);
LABEL_5:
    v16 = *(_QWORD *)(v32 + 56);
    v17 = *(_QWORD *)(*(_QWORD *)(v32 + 48) + 8 * v15);
    *v13 = v17;
    v18 = sub_244794B3C();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = v16 + *(_QWORD *)(v19 + 72) * v15;
    v21 = v31;
    v22 = (char *)v13 + *(int *)(v31 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v20, v18);
    v23 = (char *)v4 + *(int *)(v21 + 48);
    *v4 = v17;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v23, v22, v18);
    sub_244794B30();
    result = sub_244701444((uint64_t)v4, &qword_25737FF38);
  }
  v26 = v24 + 3;
  if (v26 >= v29)
    return swift_release();
  v25 = *(_QWORD *)(v28 + 8 * v26);
  if (v25)
  {
    v12 = v26;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v12 >= v29)
      return swift_release();
    v25 = *(_QWORD *)(v28 + 8 * v12);
    ++v26;
    if (v25)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_24475AE2C()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF18);
  sub_24470130C(&qword_25737FF28, &qword_25737FF18, MEMORY[0x24BE76C78]);
  sub_244794878();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_24475AF14@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)(result + 8) + 16);
  return result;
}

uint64_t sub_24475AF24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  _QWORD *v7;

  v4 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRetain_n();
  v5 = sub_24475D494(v4);
  swift_bridgeObjectRelease();
  v7 = v5;
  sub_24475D42C((uint64_t *)&v7);
  if (v2)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *a2 = v7;
  }
  return result;
}

unint64_t sub_24475AFB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_244794B3C();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(v11 + 16) && (result = sub_24470F7EC(a2), (v12 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v10, *(_QWORD *)(v11 + 56) + *(_QWORD *)(v7 + 72) * result, v6);
    v13 = sub_244794B18();
    v15 = v14;
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    *a3 = v13;
    a3[1] = v15;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
  return result;
}

uint64_t sub_24475B090@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF30);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (_QWORD *)((char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF38);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (_QWORD *)((char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a1 + 8);
  v12 = swift_bridgeObjectRetain();
  sub_24475B208(v12, v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    result = sub_244701444((uint64_t)v6, &qword_25737FF30);
    v14 = 0;
LABEL_5:
    *a2 = v14;
    return result;
  }
  v15 = *(int *)(v7 + 48);
  v16 = (char *)v10 + v15;
  v17 = (char *)v6 + v15;
  *v10 = *v6;
  v18 = sub_244794B3C();
  v19 = *(_QWORD *)(v18 - 8);
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
  v20 = *(_QWORD *)(v19 + 64);
  v21 = v20 + 8;
  if (__OFADD__(v20, 8))
  {
    __break(1u);
  }
  else
  {
    v22 = *(_QWORD *)(v11 + 16);
    result = sub_244701444((uint64_t)v10, &qword_25737FF38);
    v14 = v22 * v21;
    if ((unsigned __int128)(v22 * (__int128)v21) >> 64 == (v22 * v21) >> 63)
      goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_24475B208@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t result;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF38);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = sub_24470FFC4(a1);
  if ((v10 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v9)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  v11 = (uint64_t)v7 + *(int *)(v4 + 48);
  v12 = sub_24475E020(v11, result, v9, 0, a1);
  *v7 = v12;
  *a2 = v12;
  v13 = (char *)a2 + *(int *)(v4 + 48);
  v14 = sub_244794B3C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, v11, v14);
  sub_244701444((uint64_t)v7, &qword_25737FF38);
  return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_24475B358@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(result + 24);
  *(_QWORD *)a2 = *(_QWORD *)(result + 16);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_24475B36C()
{
  return sub_24475B544();
}

uint64_t sub_24475B384()
{
  uint64_t v1;

  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF48);
  sub_24470130C(&qword_25737FF28, &qword_25737FF18, MEMORY[0x24BE76C78]);
  sub_24479486C();
  swift_release();
  return v1;
}

uint64_t sub_24475B454()
{
  uint64_t v1;

  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF40);
  sub_24470130C(&qword_25737FF28, &qword_25737FF18, MEMORY[0x24BE76C78]);
  sub_24479486C();
  swift_release();
  return v1;
}

uint64_t sub_24475B52C()
{
  return sub_24475B544();
}

uint64_t sub_24475B544()
{
  uint64_t v1;

  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF18);
  sub_24470130C(&qword_25737FF28, &qword_25737FF18, MEMORY[0x24BE76C78]);
  sub_24479486C();
  swift_release();
  return v1;
}

uint64_t sub_24475B614()
{
  uint64_t v1;

  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF20);
  sub_24470130C(&qword_25737FF28, &qword_25737FF18, MEMORY[0x24BE76C78]);
  sub_24479486C();
  swift_release();
  return v1;
}

uint64_t sub_24475B6E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_244794068();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v24 - v8;
  result = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v24 - v11;
  v13 = 0;
  v14 = *(_QWORD *)(a1 + 56);
  v25 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18)
      return swift_release();
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v18)
        return swift_release();
      v22 = *(_QWORD *)(v25 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v18)
          return swift_release();
        v22 = *(_QWORD *)(v25 + 8 * v13);
        if (!v22)
        {
          v13 = v21 + 3;
          if (v21 + 3 >= v18)
            return swift_release();
          v22 = *(_QWORD *)(v25 + 8 * v13);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v17 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * v20, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v12, v2);
    sub_24475C714((uint64_t)v9, v6);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  v23 = v21 + 4;
  if (v23 >= v18)
    return swift_release();
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v18)
      return swift_release();
    v22 = *(_QWORD *)(v25 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24475B90C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_244793E64();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24475B9D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(sub_244793E64() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24474FD04(*(_QWORD **)(v0 + 32), v0 + v4, v0 + v6, *(_QWORD *)(v0 + v7), *(_QWORD *)(v0 + v7 + 8), v1, v2);
}

uint64_t sub_24475BA6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244793E64();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24475BB10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_244793E64() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_2447512D4(*(_QWORD **)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), a1);
}

uint64_t sub_24475BB80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244793E64();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24475BC24(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(sub_244793E64() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = v1[6];
  v11 = (uint64_t)v1 + v5;
  v12 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_244707DE8;
  return sub_244752AF8(a1, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_24475BCF4()
{
  uint64_t v0;

  return sub_244754928(v0);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t type metadata accessor for PreviewsJITLinker()
{
  return objc_opt_self();
}

uint64_t method lookup function for PreviewsJITLinker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PreviewsJITLinker.loadTargetDescriptions<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 176)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 176));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_244706734;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of PreviewsJITLinker.updateTargetDescriptions(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 184) + *(_QWORD *)(*(_QWORD *)v1 + 184));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24475BE20;
  return v6(a1);
}

uint64_t sub_24475BE20(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of PreviewsJITLinker.runMain()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of PreviewsJITLinker.invalidate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t type metadata accessor for XOJITAgentSymbolTableDataProvider()
{
  return objc_opt_self();
}

uint64_t destroy for XOJITAgentSymbolTableDataProvider.State()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for XOJITAgentSymbolTableDataProvider.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for XOJITAgentSymbolTableDataProvider.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for XOJITAgentSymbolTableDataProvider.State(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for XOJITAgentSymbolTableDataProvider.State(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XOJITAgentSymbolTableDataProvider.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for XOJITAgentSymbolTableDataProvider.State()
{
  return &type metadata for XOJITAgentSymbolTableDataProvider.State;
}

uint64_t destroy for PreviewsJITLinkerState()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PreviewsJITLinkerState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PreviewsJITLinkerState(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PreviewsJITLinkerState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PreviewsJITLinkerState()
{
  return &type metadata for PreviewsJITLinkerState;
}

uint64_t sub_24475C270(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_257380088);
  v10 = *(_QWORD *)(sub_244793E88() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_244793E88() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_24479558C();
  __break(1u);
  return result;
}

uint64_t sub_24475C450(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF60);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24479558C();
  __break(1u);
  return result;
}

uint64_t sub_24475C5B8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF50);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_24479558C();
  __break(1u);
  return result;
}

uint64_t sub_24475C714(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_244794068();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_24470665C(&qword_257380008, v11, MEMORY[0x24BE77AF8]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_24479501C();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_24470665C(&qword_257380010, (uint64_t (*)(uint64_t))MEMORY[0x24BE77AE8], MEMORY[0x24BE77B00]);
      v21 = sub_244795040();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_24475CCDC((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_24475C970()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_244794068();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380028);
  v6 = sub_2447954B4();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v22 + v23 * v17, v2);
      sub_24470665C(&qword_257380008, (uint64_t (*)(uint64_t))MEMORY[0x24BE77AE8], MEMORY[0x24BE77AF8]);
      result = sub_24479501C();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v23, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_24475CCDC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_244794068();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_24475C970();
  }
  else
  {
    if (v11 > v10)
    {
      sub_24475CEE0();
      goto LABEL_12;
    }
    sub_24475D104();
  }
  v12 = *v3;
  sub_24470665C(&qword_257380008, (uint64_t (*)(uint64_t))MEMORY[0x24BE77AE8], MEMORY[0x24BE77AF8]);
  v13 = sub_24479501C();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_24470665C(&qword_257380010, (uint64_t (*)(uint64_t))MEMORY[0x24BE77AE8], MEMORY[0x24BE77B00]);
      v18 = sub_244795040();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_2447955EC();
  __break(1u);
  return result;
}

void *sub_24475CEE0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_244794068();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380028);
  v6 = *v0;
  v7 = sub_2447954A8();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_24475D104()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_244794068();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380028);
  v7 = sub_2447954B4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_24470665C(&qword_257380008, (uint64_t (*)(uint64_t))MEMORY[0x24BE77AE8], MEMORY[0x24BE77AF8]);
    result = sub_24479501C();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24475D42C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_24475E26C(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_24475D578(v5);
  *a1 = v2;
  return result;
}

_QWORD *sub_24475D494(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF50);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_24475E0D8(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_2447075C8();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_24475D578(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_2447955A4();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(_QWORD *)(v79 + 8 * i);
        v82 = v78;
        do
        {
          v83 = *(_QWORD *)(v79 + v82);
          if (v81 >= v83)
            break;
          if (!v79)
            goto LABEL_141;
          *(_QWORD *)(v79 + v82 + 8) = v83;
          *(_QWORD *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v95 = result;
  v96 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v94 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_24475DC00((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(_QWORD *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_24475E00C((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v94 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_2447951C0();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v96;
    v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v92 = v2;
  v93 = *v2 - 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v97 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(_QWORD *)(v10 + 8 * v9);
      v15 = *(_QWORD *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(_QWORD *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_QWORD *)(v10 + 8 * v19);
              *(_QWORD *)(v10 + 8 * v19) = *(_QWORD *)(v10 + 8 * v18);
              *(_QWORD *)(v10 + 8 * v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v95)
      goto LABEL_47;
    v21 = v13 + v95;
    if (__OFADD__(v13, v95))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (unint64_t *)(v93 + 8 * v9);
      do
      {
        v23 = *(_QWORD *)(v10 + 8 * v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *v25;
          if (v23 >= *v25)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_24475DE6C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v97;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_24475DE6C((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v97;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_24475DC00((char *)(v10 + 8 * *(_QWORD *)v71), (char *)(v10 + 8 * *(_QWORD *)v74), v10 + 8 * v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v97;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v96;
    if (v9 >= v96)
    {
      v8 = v94;
      v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_244795544();
  __break(1u);
  return result;
}

uint64_t sub_24475DC00(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  unint64_t *v17;
  char *v18;
  char *v19;
  unint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (unint64_t *)(a3 - 8);
        while (1)
        {
          v18 = (char *)(v17 + 1);
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*((_QWORD *)v16 - 1) >= v20)
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= (unint64_t *)v16 || v18 != v16)
              *v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= (unint64_t *)v6)
              *v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          --v17;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_24475DF64((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_24479558C();
  __break(1u);
  return result;
}

char *sub_24475DE6C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF58);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24475DF64(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_24479558C();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_24475E00C(uint64_t a1)
{
  return sub_24475DE6C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24475E020(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v6 = result;
    v7 = *(_QWORD *)(a5 + 56);
    v8 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 8 * a2);
    v9 = sub_244794B3C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a2, v9);
    return v8;
  }
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_24475E0C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_24475AFB0(a1, *(_QWORD *)(v2 + 16), a2);
}

_QWORD *sub_24475E0D8(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_24475E26C(uint64_t a1)
{
  return sub_24475C5B8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_24475E280()
{
  unint64_t result;

  result = qword_25737FF78;
  if (!qword_25737FF78)
  {
    result = MEMORY[0x249518824](&unk_24479B0A0, &type metadata for PreviewsJITLinkerState.JITDylibNotFoundError);
    atomic_store(result, (unint64_t *)&qword_25737FF78);
  }
  return result;
}

unint64_t sub_24475E2C4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30[2];
  char v31;
  uint64_t v32;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FFA0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_244794B84();
  v32 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v29 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v28 = (char *)&v25 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v25 = a1;
  v15 = (_BYTE *)(a1 + 48);
  v16 = MEMORY[0x24BEE4AF8];
  v26 = a2;
  v27 = a3;
  do
  {
    v17 = *v15;
    v18 = *((_QWORD *)v15 - 1);
    v30[0] = *((_QWORD *)v15 - 2);
    v30[1] = v18;
    v31 = v17;
    swift_bridgeObjectRetain();
    sub_2447563FC(v30, a2, a3, (uint64_t)v9);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    swift_bridgeObjectRelease();
    v19 = v32;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v9, 1, v10) == 1)
    {
      sub_244701444((uint64_t)v9, &qword_25737FFA0);
    }
    else
    {
      v20 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
      v21 = v28;
      v20(v28, v9, v10);
      v20(v29, v21, v10);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_24474927C(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v23 = *(_QWORD *)(v16 + 16);
      v22 = *(_QWORD *)(v16 + 24);
      if (v23 >= v22 >> 1)
        v16 = sub_24474927C(v22 > 1, v23 + 1, 1, v16);
      *(_QWORD *)(v16 + 16) = v23 + 1;
      v20((char *)(v16+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v23), v29, v10);
      a2 = v26;
      a3 = v27;
    }
    v15 += 24;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t sub_24475E540()
{
  unint64_t result;

  result = qword_25737FFB0;
  if (!qword_25737FFB0)
  {
    result = MEMORY[0x249518824](&unk_24479B120, &type metadata for PreviewsJITLinkerState.TargetsNotFullyDrainedAfterProcessing);
    atomic_store(result, (unint64_t *)&qword_25737FFB0);
  }
  return result;
}

uint64_t type metadata accessor for PreviewsJITLinkerState.TargetDescriptionWithDuplicateInstallNameEncountered(uint64_t a1)
{
  return sub_244706AAC(a1, qword_2573802A0);
}

unint64_t sub_24475E598()
{
  unint64_t result;

  result = qword_25737FFC8;
  if (!qword_25737FFC8)
  {
    result = MEMORY[0x249518824](&unk_24479B060, &type metadata for PreviewsJITLinker.InitialJITLinkFailed);
    atomic_store(result, (unint64_t *)&qword_25737FFC8);
  }
  return result;
}

unint64_t sub_24475E5DC()
{
  unint64_t result;

  result = qword_25737FFD0;
  if (!qword_25737FFD0)
  {
    result = MEMORY[0x249518824](&unk_24479B020, &type metadata for PreviewsJITLinker.InitialLinkAlreadyInvokedError);
    atomic_store(result, (unint64_t *)&qword_25737FFD0);
  }
  return result;
}

uint64_t sub_24475E620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244793E64();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24475E6A4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_244793E64() - 8) + 80);
  return sub_244752F8C(*(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(NSObject **)(v1 + 40), *(_QWORD *)(v1 + 48), (void (*)(_QWORD, _QWORD, _QWORD))(v1 + ((v3 + 56) & ~v3)), a1);
}

uint64_t sub_24475E6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244793E64();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24475E78C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_244793E64() - 8) + 80);
  return sub_244753ADC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v0 + ((v1 + 80) & ~v1));
}

uint64_t type metadata accessor for PreviewsJITLinker.InvalidatedError(uint64_t a1)
{
  return sub_244706AAC(a1, qword_257380338);
}

uint64_t sub_24475E804(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t type metadata accessor for PreviewsJITLinker.MainAlreadyInvokedError(uint64_t a1)
{
  return sub_244706AAC(a1, qword_257380210);
}

uint64_t type metadata accessor for PreviewsJITLinker.InitialLinkNotInvokedError(uint64_t a1)
{
  return sub_244706AAC(a1, qword_257380180);
}

uint64_t sub_24475E888(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24475E8D0()
{
  unint64_t result;

  result = qword_257380030;
  if (!qword_257380030)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257380030);
  }
  return result;
}

uint64_t type metadata accessor for PreviewsJITLinker.UnknownAgentProcessType(uint64_t a1)
{
  return sub_244706AAC(a1, qword_2573800E8);
}

uint64_t sub_24475E920()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24475E94C(uint64_t a1)
{
  uint64_t v1;

  return sub_24474F674(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_24475E95C()
{
  return sub_24474F9AC();
}

uint64_t sub_24475E964()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24475E988()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24475E9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_24475A460(a1, a2, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_24475E9C0(uint64_t a1)
{
  uint64_t v1;

  return sub_24475A810(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_24475E9D8()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24475EA04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_24475A8DC(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_24475EA10(uint64_t a1)
{
  uint64_t v1;

  return sub_24475A9E8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t *sub_24475EA28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_244793B28();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (uint64_t *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_24475EAEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_244793B28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_24475EB4C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_244793B28();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_24475EBE4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244793B28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_24475EC94(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244793B28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_24475ED0C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_244793B28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24475ED9C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24475EDA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77038]);
}

uint64_t sub_24475EDB4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24475EDC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE77038]);
}

uint64_t sub_24475EDCC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244793B28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24475EE60()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24475EE70()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24475EE84()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24475EE94()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

ValueMetadata *type metadata accessor for PreviewsJITLinker.InitialLinkAlreadyInvokedError()
{
  return &type metadata for PreviewsJITLinker.InitialLinkAlreadyInvokedError;
}

ValueMetadata *type metadata accessor for PreviewsJITLinker.InitialJITLinkFailed()
{
  return &type metadata for PreviewsJITLinker.InitialJITLinkFailed;
}

ValueMetadata *type metadata accessor for PreviewsJITLinkerState.JITDylibNotFoundError()
{
  return &type metadata for PreviewsJITLinkerState.JITDylibNotFoundError;
}

char *sub_24475EED4(char *a1, char *a2, uint64_t a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_244794068();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12(&v4[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v11);
  }
  return v4;
}

uint64_t sub_24475EF94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_244794068();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 24), v5);
}

char *sub_24475F00C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = *(int *)(a3 + 20);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_244794068();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v10);
  return a1;
}

char *sub_24475F0A0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_244794068();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

char *sub_24475F144(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_244794068();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

char *sub_24475F1D0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_244794068();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v10);
  return a1;
}

uint64_t sub_24475F264()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24475F270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77AE8]);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v5;
  uint64_t v9;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v5 = *(_QWORD *)(a1 + 8);
    if (v5 >= 0xFFFFFFFF)
      LODWORD(v5) = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = a4(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t sub_24475F2F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24475F304(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE77AE8]);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v6;
  uint64_t v8;

  v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = a5(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6 + *(int *)(a4 + 20), a2, a2, v8);
  }
  return result;
}

uint64_t sub_24475F384()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244794068();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewsJITLinkerState.TargetsNotFullyDrainedAfterProcessing()
{
  return &type metadata for PreviewsJITLinkerState.TargetsNotFullyDrainedAfterProcessing;
}

uint64_t sub_24475F408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244793E64();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_24475F444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_24475F488(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_24475F4CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_24475F510(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_24475F554()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_35Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244793E64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_24475F5A0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_36Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244793E64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_24475F5F0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244793E64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PreviewsJITLinkerState.LinkState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24475F6A4 + 4 * byte_24479A2F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24475F6D8 + 4 * byte_24479A2F0[v4]))();
}

uint64_t sub_24475F6D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24475F6E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24475F6E8);
  return result;
}

uint64_t sub_24475F6F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24475F6FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24475F700(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24475F708(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PreviewsJITLinkerState.LinkState()
{
  return &type metadata for PreviewsJITLinkerState.LinkState;
}

unint64_t sub_24475F728()
{
  unint64_t result;

  result = qword_257380370;
  if (!qword_257380370)
  {
    result = MEMORY[0x249518824](&unk_24479A5F0, &type metadata for PreviewsJITLinkerState.LinkState);
    atomic_store(result, (unint64_t *)&qword_257380370);
  }
  return result;
}

uint64_t sub_24475F76C()
{
  return sub_24470665C(&qword_25737FFF0, type metadata accessor for PreviewsJITLinker.InvalidatedError, (uint64_t)&unk_24479B160);
}

uint64_t sub_24475F798()
{
  return sub_24470665C(&qword_257380378, type metadata accessor for PreviewsJITLinker.InvalidatedError, (uint64_t)&unk_24479A640);
}

uint64_t sub_24475F7C4()
{
  return sub_24470665C(&qword_257380380, type metadata accessor for PreviewsJITLinker.InvalidatedError, (uint64_t)&unk_24479A618);
}

unint64_t sub_24475F7F8()
{
  unint64_t result;

  result = qword_257380388;
  if (!qword_257380388)
  {
    result = MEMORY[0x249518824](&unk_24479A748, &type metadata for PreviewsJITLinkerState.TargetsNotFullyDrainedAfterProcessing);
    atomic_store(result, (unint64_t *)&qword_257380388);
  }
  return result;
}

unint64_t sub_24475F840()
{
  unint64_t result;

  result = qword_257380390;
  if (!qword_257380390)
  {
    result = MEMORY[0x249518824](&unk_24479A720, &type metadata for PreviewsJITLinkerState.TargetsNotFullyDrainedAfterProcessing);
    atomic_store(result, (unint64_t *)&qword_257380390);
  }
  return result;
}

uint64_t sub_24475F884()
{
  return sub_24470665C((unint64_t *)&unk_25737FFB8, type metadata accessor for PreviewsJITLinkerState.TargetDescriptionWithDuplicateInstallNameEncountered, (uint64_t)&unk_24479B0E0);
}

uint64_t sub_24475F8B0()
{
  return sub_24470665C(&qword_257380398, type metadata accessor for PreviewsJITLinkerState.TargetDescriptionWithDuplicateInstallNameEncountered, (uint64_t)&unk_24479A850);
}

uint64_t sub_24475F8DC()
{
  return sub_24470665C(&qword_2573803A0, type metadata accessor for PreviewsJITLinkerState.TargetDescriptionWithDuplicateInstallNameEncountered, (uint64_t)&unk_24479A828);
}

unint64_t sub_24475F910()
{
  unint64_t result;

  result = qword_2573803A8;
  if (!qword_2573803A8)
  {
    result = MEMORY[0x249518824](&unk_24479A958, &type metadata for PreviewsJITLinkerState.JITDylibNotFoundError);
    atomic_store(result, (unint64_t *)&qword_2573803A8);
  }
  return result;
}

unint64_t sub_24475F958()
{
  unint64_t result;

  result = qword_2573803B0;
  if (!qword_2573803B0)
  {
    result = MEMORY[0x249518824](&unk_24479A930, &type metadata for PreviewsJITLinkerState.JITDylibNotFoundError);
    atomic_store(result, (unint64_t *)&qword_2573803B0);
  }
  return result;
}

unint64_t sub_24475F9A4()
{
  unint64_t result;

  result = qword_2573803B8;
  if (!qword_2573803B8)
  {
    result = MEMORY[0x249518824](&unk_24479AA60, &type metadata for PreviewsJITLinker.InitialJITLinkFailed);
    atomic_store(result, (unint64_t *)&qword_2573803B8);
  }
  return result;
}

unint64_t sub_24475F9EC()
{
  unint64_t result;

  result = qword_2573803C0;
  if (!qword_2573803C0)
  {
    result = MEMORY[0x249518824](&unk_24479AA38, &type metadata for PreviewsJITLinker.InitialJITLinkFailed);
    atomic_store(result, (unint64_t *)&qword_2573803C0);
  }
  return result;
}

unint64_t sub_24475FA38()
{
  unint64_t result;

  result = qword_2573803C8;
  if (!qword_2573803C8)
  {
    result = MEMORY[0x249518824](&unk_24479AB68, &type metadata for PreviewsJITLinker.InitialLinkAlreadyInvokedError);
    atomic_store(result, (unint64_t *)&qword_2573803C8);
  }
  return result;
}

unint64_t sub_24475FA80()
{
  unint64_t result;

  result = qword_2573803D0;
  if (!qword_2573803D0)
  {
    result = MEMORY[0x249518824](&unk_24479AB40, &type metadata for PreviewsJITLinker.InitialLinkAlreadyInvokedError);
    atomic_store(result, (unint64_t *)&qword_2573803D0);
  }
  return result;
}

uint64_t sub_24475FAC4()
{
  return sub_24470665C(&qword_25737FFF8, type metadata accessor for PreviewsJITLinker.MainAlreadyInvokedError, (uint64_t)&unk_24479AFE0);
}

uint64_t sub_24475FAF0()
{
  return sub_24470665C(&qword_2573803D8, type metadata accessor for PreviewsJITLinker.MainAlreadyInvokedError, (uint64_t)&unk_24479AC70);
}

uint64_t sub_24475FB1C()
{
  return sub_24470665C(&qword_2573803E0, type metadata accessor for PreviewsJITLinker.MainAlreadyInvokedError, (uint64_t)&unk_24479AC48);
}

uint64_t sub_24475FB48()
{
  return sub_24470665C(&qword_257380000, type metadata accessor for PreviewsJITLinker.InitialLinkNotInvokedError, (uint64_t)&unk_24479AFA0);
}

uint64_t sub_24475FB74()
{
  return sub_24470665C(&qword_2573803E8, type metadata accessor for PreviewsJITLinker.InitialLinkNotInvokedError, (uint64_t)&unk_24479AD78);
}

uint64_t sub_24475FBA0()
{
  return sub_24470665C(&qword_2573803F0, type metadata accessor for PreviewsJITLinker.InitialLinkNotInvokedError, (uint64_t)&unk_24479AD50);
}

uint64_t sub_24475FBCC()
{
  return sub_24470665C(&qword_257380050, type metadata accessor for PreviewsJITLinker.UnknownAgentProcessType, (uint64_t)&unk_24479AF60);
}

uint64_t sub_24475FBF8()
{
  return sub_24470665C(&qword_2573803F8, type metadata accessor for PreviewsJITLinker.UnknownAgentProcessType, (uint64_t)&unk_24479AE80);
}

uint64_t sub_24475FC24()
{
  return sub_24470665C(&qword_257380400, type metadata accessor for PreviewsJITLinker.UnknownAgentProcessType, (uint64_t)&unk_24479AE58);
}

unint64_t sub_24475FC50()
{
  unint64_t result;

  result = qword_257380420;
  if (!qword_257380420)
  {
    result = MEMORY[0x249518824](&unk_24479ABB0, &type metadata for PreviewsJITLinker.InitialLinkAlreadyInvokedError);
    atomic_store(result, (unint64_t *)&qword_257380420);
  }
  return result;
}

unint64_t sub_24475FC94()
{
  unint64_t result;

  result = qword_257380428;
  if (!qword_257380428)
  {
    result = MEMORY[0x249518824](&unk_24479AAA8, &type metadata for PreviewsJITLinker.InitialJITLinkFailed);
    atomic_store(result, (unint64_t *)&qword_257380428);
  }
  return result;
}

unint64_t sub_24475FCD8()
{
  unint64_t result;

  result = qword_257380430;
  if (!qword_257380430)
  {
    result = MEMORY[0x249518824](&unk_24479A9A0, &type metadata for PreviewsJITLinkerState.JITDylibNotFoundError);
    atomic_store(result, (unint64_t *)&qword_257380430);
  }
  return result;
}

unint64_t sub_24475FD1C()
{
  unint64_t result;

  result = qword_257380460;
  if (!qword_257380460)
  {
    result = MEMORY[0x249518824](&unk_24479A790, &type metadata for PreviewsJITLinkerState.TargetsNotFullyDrainedAfterProcessing);
    atomic_store(result, (unint64_t *)&qword_257380460);
  }
  return result;
}

uint64_t static CanvasContentProvider<>.encode(hostedOutput:)()
{
  swift_getAssociatedTypeWitness();
  return sub_244794830();
}

uint64_t CanvasUpdateResult.hostedOutput.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t CanvasUpdateResult.staticChromeType.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 44);
  v5 = sub_244793AB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t CanvasUpdateResult.makeStaticOutput.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 48));
  swift_retain();
  return v2;
}

uint64_t CanvasUpdateResult.controlConfiguration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = v2 + *(int *)(a1 + 52);
  v4 = *(_QWORD *)(v3 + 48);
  v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(v3 + 32);
  *(_QWORD *)(a2 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t CanvasUpdateResult.controlStates.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 56));
}

uint64_t CanvasUpdateResult.init(hostedOutput:staticChromeType:makeStaticOutput:controlConfiguration:controlStates:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __int128 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v18;
  int *updated;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v18 = *((_QWORD *)a5 + 6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(a9, a1, a7);
  updated = (int *)type metadata accessor for CanvasUpdateResult(0, a7, a8, a10);
  v20 = a9 + updated[11];
  v21 = sub_244793AB0();
  v26 = a5[1];
  v27 = *a5;
  v25 = a5[2];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
  v22 = (_QWORD *)(a9 + updated[12]);
  *v22 = a3;
  v22[1] = a4;
  v23 = a9 + updated[13];
  *(_OWORD *)v23 = v27;
  *(_OWORD *)(v23 + 16) = v26;
  *(_OWORD *)(v23 + 32) = v25;
  *(_QWORD *)(v23 + 48) = v18;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a10 - 8) + 32))(a9 + updated[14], a6, a10);
}

uint64_t type metadata accessor for CanvasUpdateResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CanvasUpdateResult);
}

uint64_t CanvasUpdateResult.init<>(hostedOutput:staticChromeType:makeStaticOutput:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t (*v27)();
  uint64_t v28;
  uint64_t (*v29)();
  uint64_t v30;

  v23 = a4;
  v24 = a6;
  v12 = sub_244793AB0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v16, a2, v12);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, a5);
  *(_QWORD *)&v25 = MEMORY[0x24BEE4AF8];
  *((_QWORD *)&v25 + 1) = nullsub_1;
  v26 = 0;
  v27 = sub_24477A2EC;
  v28 = 0;
  v29 = sub_24477A2F8;
  v30 = 0;
  return CanvasUpdateResult.init(hostedOutput:staticChromeType:makeStaticOutput:controlConfiguration:controlStates:)((uint64_t)v19, (uint64_t)v16, a3, v23, &v25, v20, a5, v24, a7, MEMORY[0x24BEE4AE0] + 8);
}

uint64_t CanvasUpdateResult.init<>(hostedOutput:staticChromeType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t (*v21)();
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t v24;

  v8 = sub_244793AB0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v12, a2, v8);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, a3);
  *(_QWORD *)&v19 = MEMORY[0x24BEE4AF8];
  *((_QWORD *)&v19 + 1) = nullsub_1;
  v20 = 0;
  v21 = sub_24477A2EC;
  v22 = 0;
  v23 = sub_24477A2F8;
  v24 = 0;
  return CanvasUpdateResult.init(hostedOutput:staticChromeType:makeStaticOutput:controlConfiguration:controlStates:)((uint64_t)v15, (uint64_t)v12, (uint64_t)sub_2447602A8, 0, &v19, v16, a3, MEMORY[0x24BEE4AE0] + 8, a4, MEMORY[0x24BEE4AE0] + 8);
}

uint64_t sub_2447602A8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  return sub_2447949D4();
}

uint64_t CanvasUpdateResult.init<>(staticChromeType:makeStaticOutput:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t (*v20)();
  uint64_t v21;
  uint64_t (*v22)();
  uint64_t v23;

  v10 = sub_244793AB0();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v13 + 32))(v12, a1);
  *(_QWORD *)&v18 = MEMORY[0x24BEE4AF8];
  *((_QWORD *)&v18 + 1) = nullsub_1;
  v19 = 0;
  v20 = sub_24477A2EC;
  v21 = 0;
  v22 = sub_24477A2F8;
  v23 = 0;
  return CanvasUpdateResult.init(hostedOutput:staticChromeType:makeStaticOutput:controlConfiguration:controlStates:)(v14, (uint64_t)v12, a2, a3, &v18, v15, MEMORY[0x24BEE4AE0] + 8, a4, a5, MEMORY[0x24BEE4AE0] + 8);
}

uint64_t CanvasUpdateResult.init<>(staticChromeType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t (**v6)();
  _QWORD *v7;

  v4 = sub_244793AB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_257380470);
  v6 = (uint64_t (**)())(a2 + *(int *)(result + 48));
  *v6 = sub_24476049C;
  v6[1] = 0;
  v7 = (_QWORD *)(a2 + *(int *)(result + 52));
  *v7 = MEMORY[0x24BEE4AF8];
  v7[1] = nullsub_1;
  v7[2] = 0;
  v7[3] = sub_24477A2EC;
  v7[4] = 0;
  v7[5] = sub_24477A2F8;
  v7[6] = 0;
  return result;
}

uint64_t sub_24476049C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  return sub_2447949D4();
}

uint64_t CanvasUpdateResult.init<>(hostedOutput:staticChromeType:controlConfiguration:controlStates:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  __int128 v8;
  __int128 v10[3];
  uint64_t v11;

  v7 = *(_QWORD *)(a3 + 48);
  v8 = *(_OWORD *)(a3 + 16);
  v10[0] = *(_OWORD *)a3;
  v10[1] = v8;
  v10[2] = *(_OWORD *)(a3 + 32);
  v11 = v7;
  return CanvasUpdateResult.init(hostedOutput:staticChromeType:makeStaticOutput:controlConfiguration:controlStates:)(a1, a2, (uint64_t)sub_24476056C, 0, v10, a4, a5, MEMORY[0x24BEE4AE0] + 8, a7, a6);
}

uint64_t sub_24476056C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  return sub_2447949D4();
}

uint64_t CanvasUpdateResult.init<>(staticChromeType:makeStaticOutput:controlConfiguration:controlStates:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  __int128 v9;
  __int128 v11[3];
  uint64_t v12;

  v8 = *(_QWORD *)(a4 + 48);
  v9 = *(_OWORD *)(a4 + 16);
  v11[0] = *(_OWORD *)a4;
  v11[1] = v9;
  v11[2] = *(_OWORD *)(a4 + 32);
  v12 = v8;
  return CanvasUpdateResult.init(hostedOutput:staticChromeType:makeStaticOutput:controlConfiguration:controlStates:)(a1, a1, a2, a3, v11, a5, MEMORY[0x24BEE4AE0] + 8, a6, a8, a7);
}

uint64_t CanvasUpdateResult.init<>(staticChromeType:controlConfiguration:controlStates:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  __int128 v6;
  __int128 v8[3];
  uint64_t v9;

  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v6;
  v8[2] = *(_OWORD *)(a2 + 32);
  v9 = v5;
  return CanvasUpdateResult.init(hostedOutput:staticChromeType:makeStaticOutput:controlConfiguration:controlStates:)(a1, a1, (uint64_t)sub_24476069C, 0, v8, a3, MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0] + 8, a5, a4);
}

uint64_t sub_24476069C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  return sub_2447949D4();
}

uint64_t CanvasUpdateOutput.hostedOutput.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_244794494();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CanvasUpdateOutput.staticChromeType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CanvasUpdateOutput() + 20);
  v4 = sub_244793AB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t CanvasUpdateOutput.makeStaticOutput.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for CanvasUpdateOutput() + 24));
  swift_retain();
  return v1;
}

uint64_t CanvasUpdateOutput.controlDescriptions.getter()
{
  type metadata accessor for CanvasUpdateOutput();
  return swift_bridgeObjectRetain();
}

uint64_t CanvasUpdateOutput.controlStates.getter()
{
  type metadata accessor for CanvasUpdateOutput();
  return swift_bridgeObjectRetain();
}

uint64_t sub_244760808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  sub_24476085C(a1, a2, a3);
  return v6;
}

_QWORD *sub_24476085C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v4 = (_QWORD *)v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v8 = *(_QWORD *)(*(_QWORD *)v3 + 88);
  sub_2447946F8();
  *(_QWORD *)(v3 + 64) = sub_2447946EC();
  *(_OWORD *)(v3 + 72) = 0u;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_OWORD *)(v3 + 116) = 0u;
  *(_BYTE *)(v3 + 132) = 1;
  *(_QWORD *)(v3 + 136) = 0;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  v9 = sub_244793E88();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = (*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v7;
  *(_QWORD *)(v13 + 24) = v8;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 32))(v13 + v11, a3, v9);
  v14 = (_QWORD *)(v13 + v12);
  *v14 = a1;
  v14[1] = a2;
  v4[4] = &unk_257380690;
  v4[5] = v13;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  v4[6] = sub_24476731C;
  v4[7] = v15;
  swift_unknownObjectRetain_n();
  return v4;
}

uint64_t sub_2447609B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v7[2] = sub_244795208();
  v7[3] = sub_2447951FC();
  v15 = *(_QWORD *)(a5 + 8);
  v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 56)
                                                                                              + *(_QWORD *)(a7 + 56));
  v16 = (_QWORD *)swift_task_alloc();
  v7[4] = v16;
  *v16 = v7;
  v16[1] = sub_244760A80;
  return v18(a1, a3, a4, v15, a2, a6, a7);
}

uint64_t sub_244760A80()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_244760B08()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244760B3C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244760B70()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 88) + 16) + 40))();
}

uint64_t sub_244760B9C(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  void (*v56)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t AssociatedTypeWitness;
  void (*v60)(char *, uint64_t);
  uint64_t *v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t *v81;
  _DWORD *v82;
  __int128 v83;
  uint64_t v84;

  v72 = a8;
  v75 = a7;
  v74 = a6;
  v73 = a4;
  v70 = a3;
  AssociatedTypeWitness = a2;
  v11 = *v8;
  v69 = sub_244794494();
  v80 = *(_QWORD *)(v69 - 8);
  v71 = *(_QWORD *)(v80 + 64);
  MEMORY[0x24BDAC7A8](v69);
  v68 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_24479450C();
  v60 = *(void (**)(char *, uint64_t))(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v76 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2447942E4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v65 = v16;
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_DWORD *)v8 + 32) = *a1;
  *((_BYTE *)v8 + 132) = 0;
  v62 = *(void (**)(char *, uint64_t))(v15 + 16);
  v78 = v18;
  v79 = v17;
  v19 = v18;
  v62(v17, a5);
  v64 = *(unsigned __int8 *)(v15 + 80);
  v20 = (v64 + 40) & ~v64;
  v63 = v64 | 7;
  v21 = (char *)swift_allocObject();
  v22 = *(_QWORD *)(v11 + 80);
  *((_QWORD *)v21 + 2) = v22;
  v23 = v22;
  v24 = *(_QWORD *)(v11 + 88);
  *((_QWORD *)v21 + 3) = v24;
  *((_QWORD *)v21 + 4) = v8;
  v67 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v67(&v21[v20], v17, v19);
  swift_retain();
  v25 = a5;
  sub_24473B218();
  swift_release();
  LODWORD(v84) = *a1;
  v81 = v8;
  v82 = a1;
  v26 = v8;
  v61 = v8;
  v66 = sub_2447946D4();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v23;
  *(_QWORD *)(v27 + 24) = v24;
  v58 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380620);
  v28 = v76;
  sub_244738A78();
  sub_2447948B4();
  swift_release();
  v29 = (void (*)(char *, uint64_t))*((_QWORD *)v60 + 1);
  v30 = v77;
  v29(v28, v77);
  v60 = v29;
  sub_2447944E8();
  sub_2447949F8();
  swift_release();
  v29(v28, v30);
  v31 = v23;
  v55 = v23;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for CanvasControlConfiguration(255, AssociatedTypeWitness, v32, v33);
  v57 = sub_24479540C();
  v56 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v57 - 8) + 32);
  v56(&v84, v26 + 9, v57);
  sub_244766860(&v84, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2447665E0);
  sub_2447944F4();
  v34 = v80;
  v35 = v68;
  v36 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v68, v70, v69);
  ((void (*)(char *, uint64_t, uint64_t))v62)(v79, v25, v78);
  sub_244705F80(v72, (uint64_t)&v83);
  v37 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v38 = (v71 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v64 + v39 + 56) & ~v64;
  v41 = (v65 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v31;
  v43 = v58;
  *(_QWORD *)(v42 + 24) = v58;
  (*(void (**)(unint64_t, char *, uint64_t))(v80 + 32))(v42 + v37, v35, v36);
  *(_QWORD *)(v42 + v38) = v73;
  v56((uint64_t *)(v42 + v39), &v84, v57);
  v67((char *)(v42 + v40), v79, v78);
  v44 = (_QWORD *)(v42 + v41);
  v45 = v75;
  *v44 = v74;
  v44[1] = v45;
  sub_244707B68(&v83, v42 + ((v41 + 23) & 0xFFFFFFFFFFFFFFF8));
  sub_244766860(&v84, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2447665E0);
  v46 = v55;
  v47 = swift_getAssociatedTypeWitness();
  v48 = swift_getAssociatedTypeWitness();
  type metadata accessor for CanvasUpdateResult(0, v47, v48, AssociatedTypeWitness);
  swift_bridgeObjectRetain();
  swift_retain();
  v49 = v76;
  sub_244794974();
  swift_release();
  v50 = v77;
  v51 = v60;
  v60(v49, v77);
  swift_retain();
  sub_2447948F0();
  swift_release();
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = v46;
  *(_QWORD *)(v52 + 24) = v43;
  type metadata accessor for CanvasUpdateOutput();
  sub_2447944E8();
  v53 = sub_2447948D8();
  swift_release();
  swift_release();
  swift_release();
  sub_244766860(&v84, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_244766898);
  v51(v49, v50);
  return v53;
}

uint64_t sub_2447612C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F130);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2447942CC();
  v7 = sub_244761370(a1, a2, (uint64_t)v6);
  sub_244701444((uint64_t)v6, &qword_25737F130);
  return v7 & 1;
}

uint64_t sub_244761370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  char v30;
  char v32;
  char *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;

  v55 = a3;
  v58 = a1;
  v47 = *v3;
  v5 = *(_QWORD *)(v47 + 80);
  v46 = sub_24479540C();
  v44 = *(_QWORD *)(v46 - 8);
  v6 = MEMORY[0x24BDAC7A8](v46);
  v48 = (uint64_t)&v43 - v7;
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  MEMORY[0x24BDAC7A8](v6);
  v45 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_244793D14();
  v52 = *(_QWORD *)(v9 - 8);
  v53 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_244793DA4();
  v56 = *(_QWORD *)(v12 - 8);
  v57 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v51 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F130);
  MEMORY[0x24BDAC7A8](v14);
  v54 = (uint64_t)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_244794290();
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77EC0];
  v18 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v43 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v43 - v25;
  sub_244794278();
  sub_24470665C(&qword_25737F0B0, v17, MEMORY[0x24BE77EE0]);
  v27 = a2;
  sub_244795160();
  sub_244795160();
  if (v61 == v59 && v62 == v60)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v26, v16);
LABEL_5:
    sub_244762EC4(v58);
LABEL_6:
    v30 = 1;
    return v30 & 1;
  }
  v43 = v11;
  v28 = sub_2447955D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = *(void (**)(char *, uint64_t))(v18 + 8);
  v29(v26, v16);
  if ((v28 & 1) != 0)
    goto LABEL_5;
  sub_244794284();
  sub_244795160();
  sub_244795160();
  if (v61 == v59 && v62 == v60)
  {
    swift_bridgeObjectRelease_n();
    v29(v24, v16);
LABEL_12:
    sub_2447631A4(v58);
    goto LABEL_6;
  }
  v32 = sub_2447955D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29(v24, v16);
  if ((v32 & 1) != 0)
    goto LABEL_12;
  sub_24479426C();
  sub_244795160();
  sub_244795160();
  if (v61 == v59 && v62 == v60)
  {
    swift_bridgeObjectRelease_n();
    v29(v21, v16);
    v33 = v43;
LABEL_17:
    v35 = v54;
    sub_244701400(v55, v54, &qword_25737F130);
    v37 = v56;
    v36 = v57;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v35, 1, v57) != 1)
    {
      v38 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v51, v35, v36);
      v61 = 0x2D6C6C656873;
      v62 = 0xE600000000000000;
      sub_24470665C(&qword_257380640, (uint64_t (*)(uint64_t))MEMORY[0x24BE77398], MEMORY[0x24BE773B0]);
      sub_2447955B0();
      sub_2447950E8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v36);
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v33, v58, v53);
    sub_244793F48();
    swift_allocObject();
    sub_244793F3C();
    swift_release();
    goto LABEL_6;
  }
  v34 = sub_2447955D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29(v21, v16);
  v33 = v43;
  if ((v34 & 1) != 0)
    goto LABEL_17;
  v39 = v48;
  sub_244762D74(v48);
  v41 = v49;
  v40 = v50;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v39, 1, v50) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v39, v46);
    v30 = 0;
  }
  else
  {
    v42 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v45, v39, v40);
    v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v47 + 88) + 16) + 32))(v58, v27, v40);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v40);
  }
  return v30 & 1;
}

uint64_t sub_244761934(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v4 = *a1;
  v5 = type metadata accessor for PreviewAgentConnector();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v4 + 80);
  sub_2447949E0();
  v12 = sub_244795220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
  sub_24470D480(a2, (uint64_t)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for PreviewAgentConnector);
  v13 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v11;
  v14[3] = *(_QWORD *)(v4 + 88);
  v14[4] = a1;
  sub_2447299F8((uint64_t)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v14 + v13, (uint64_t (*)(_QWORD))type metadata accessor for PreviewAgentConnector);
  swift_retain();
  return sub_2447949BC();
}

uint64_t sub_244761ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_244761AF8()
{
  uint64_t v0;

  sub_244795208();
  *(_QWORD *)(v0 + 40) = sub_2447951FC();
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_244761B60()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD);

  v1 = v0[3];
  swift_release();
  v4 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v1 + 32) + *(_QWORD *)(v1 + 32));
  v2 = (_QWORD *)swift_task_alloc();
  v0[6] = v2;
  *v2 = v0;
  v2[1] = sub_244761BCC;
  return v4(v0[2], v0[4]);
}

uint64_t sub_244761BCC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_244761C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *boxed_opaque_existential_1;
  char *v33;
  char *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t *);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[5];
  char v54[64];
  uint64_t v55;

  v55 = a8;
  v49 = a7;
  v50 = a6;
  v52 = a5;
  v41 = a3;
  v51 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for CanvasControlConfiguration(255, AssociatedTypeWitness, v14, v15);
  v16 = sub_24479540C();
  v17 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v42 = a4;
  v17(v54, a4, v16);
  v48 = sub_244794320();
  v18 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v47 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = AssociatedTypeWitness;
  v20 = sub_24479540C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v45 = (uint64_t)&v36 - v22;
  v46 = a10;
  v23 = *(_QWORD *)(a10 + 16);
  v24 = swift_getAssociatedTypeWitness();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  v44 = (char *)&v36 - v27;
  v28 = v26(a2, a9, v23);
  if (!v10)
  {
    v36 = v25;
    v37 = v24;
    v38 = v21;
    v39 = v18;
    v40 = v20;
    v53[0] = v41;
    MEMORY[0x24BDAC7A8](v28);
    v29 = v46;
    *(&v36 - 4) = a9;
    *(&v36 - 3) = v29;
    *(&v36 - 2) = v42;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257380628);
    v30 = v45;
    sub_244738C34((void (*)(char *, char *))sub_244766B5C, (uint64_t)(&v36 - 6), MEMORY[0x24BEE4078], v43, v31, v45);
    v53[3] = a9;
    v53[4] = v29;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v53);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a9 - 8) + 16))(boxed_opaque_existential_1, v51, a9);
    v33 = v47;
    v50(v53);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
    v34 = v44;
    v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t))(v29 + 48))(v44, v30, v52, v33, v55, a9, v29);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v33, v48);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v30, v40);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v37);
  }
  return v23;
}

uint64_t sub_244761FB0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *, _QWORD *, uint64_t);
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  os_log_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  int v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[7];
  _QWORD v46[7];
  _QWORD v47[2];
  uint64_t v48;

  v4 = v3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for CanvasControlConfiguration(255, AssociatedTypeWitness, v9, v10);
  v11 = sub_24479540C();
  v12 = *(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v46, a2, v11);
  v39 = v46[0];
  v40 = v46[2];
  v41 = v46[4];
  v42 = v46[6];
  v44 = sub_244794AAC();
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v12(v47, a2, v11);
  if (v47[0])
  {
    ((void (*)(uint64_t))v47[1])(v15);
    if (v3)
    {
      v38 = AssociatedTypeWitness;
      sub_244794A94();
      swift_bridgeObjectRetain();
      sub_244766860(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2447665E0);
      swift_bridgeObjectRetain();
      sub_244766860(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2447665E0);
      v16 = sub_244794AA0();
      v17 = sub_24479537C();
      v18 = v17;
      if (os_log_type_enabled(v16, v17))
      {
        v19 = swift_slowAlloc();
        v35 = v16;
        v20 = v19;
        v36 = swift_slowAlloc();
        v48 = v36;
        *(_DWORD *)v20 = 136315394;
        v33 = v20 + 4;
        v21 = sub_244793D44();
        v22 = swift_bridgeObjectRetain();
        v23 = MEMORY[0x249517CE4](v22, v21);
        v34 = v18;
        v24 = v23;
        v37 = a3;
        v26 = v25;
        swift_bridgeObjectRelease();
        v45[0] = sub_24470600C(v24, v26, &v48);
        sub_244795448();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2080;
        v12(v45, a2, v11);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        v27 = sub_24479507C();
        v45[0] = sub_24470600C(v27, v28, &v48);
        sub_244795448();
        a3 = v37;
        swift_bridgeObjectRelease();
        sub_244766860(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_244766898);
        sub_244766860(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_244766898);
        v29 = v35;
        _os_log_impl(&dword_2446FC000, v35, (os_log_type_t)v34, "Failed to decode state: %s, for configuration: %s", (uint8_t *)v20, 0x16u);
        v30 = v36;
        swift_arrayDestroy();
        MEMORY[0x2495188D8](v30, -1, -1);
        MEMORY[0x2495188D8](v20, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        sub_244766860(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_244766898);
        sub_244766860(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_244766898);

      }
      (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v44);
      v31 = 1;
      AssociatedTypeWitness = v38;
    }
    else
    {
      v31 = 0;
    }
  }
  else
  {
    v31 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a3, v31, 1, AssociatedTypeWitness);
}

uint64_t sub_2447623F0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = swift_getAssociatedTypeWitness();
  v6 = swift_getAssociatedTypeWitness();
  v7 = a1 + *(int *)(type metadata accessor for CanvasUpdateResult(0, AssociatedTypeWitness, v5, v6) + 52);
  v8 = *(_QWORD *)(v7 + 48);
  v9 = *(_QWORD *)(a2 + 72);
  v10 = *(_OWORD *)(v7 + 16);
  *(_OWORD *)(a2 + 72) = *(_OWORD *)v7;
  *(_OWORD *)(a2 + 88) = v10;
  *(_OWORD *)(a2 + 104) = *(_OWORD *)(v7 + 32);
  *(_QWORD *)(a2 + 120) = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return sub_244766898(v9);
}

uint64_t sub_24476253C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  int *updated;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t result;
  uint64_t (**v31)();
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v38 = a1;
  v39 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = swift_getAssociatedTypeWitness();
  v8 = swift_getAssociatedTypeWitness();
  updated = (int *)type metadata accessor for CanvasUpdateResult(0, AssociatedTypeWitness, v7, v8);
  v10 = *((_QWORD *)updated - 1);
  MEMORY[0x24BDAC7A8](updated);
  v32 = (char *)&v32 - v11;
  v12 = sub_244793AB0();
  v34 = *(_QWORD *)(v12 - 8);
  v13 = v34;
  v35 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_244794494();
  v36 = *(_QWORD *)(v16 - 8);
  v37 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v33 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 40))(v38, a2, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v18 + updated[11], v12);
  v19 = v32;
  (*(void (**)(char *, uint64_t, int *))(v10 + 16))(v32, v18, updated);
  v20 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a2;
  *(_QWORD *)(v21 + 24) = a3;
  (*(void (**)(unint64_t, char *, int *))(v10 + 32))(v21 + v20, v19, updated);
  v22 = v18;
  v23 = (uint64_t *)(v18 + updated[13]);
  v24 = *v23;
  v25 = (uint64_t (*)(uint64_t))v23[3];
  v26 = v22 + updated[14];
  swift_bridgeObjectRetain();
  v27 = v25(v26);
  v28 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v39, v33, v37);
  v29 = (int *)type metadata accessor for CanvasUpdateOutput();
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v28 + v29[5], v15, v35);
  v31 = (uint64_t (**)())(v28 + v29[6]);
  *v31 = sub_244766A50;
  v31[1] = (uint64_t (*)())v21;
  *(_QWORD *)(v28 + v29[7]) = v24;
  *(_QWORD *)(v28 + v29[8]) = v27;
  return result;
}

uint64_t sub_2447627C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t updated;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v17 = sub_24479450C();
  v7 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = swift_getAssociatedTypeWitness();
  v12 = swift_getAssociatedTypeWitness();
  updated = type metadata accessor for CanvasUpdateResult(0, AssociatedTypeWitness, v11, v12);
  (*(void (**)(void))(a1 + *(int *)(updated + 48)))();
  if (!v3)
  {
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a2;
    *(_QWORD *)(v14 + 24) = a3;
    sub_244794494();
    sub_244738A78();
    a3 = sub_2447948B4();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v17);
  }
  return a3;
}

uint64_t sub_2447629A0(uint64_t result)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 136))
  {
    *(_DWORD *)(swift_allocObject() + 16) = result;
    swift_retain();
    sub_2447948F0();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_244762A1C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void *v22;
  int v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;

  v32 = a2;
  v31 = a1;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F0C0);
  v2 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v28 = v3;
  v29 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_244793F9C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_244794AAC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v28 - v12;
  sub_244794A94();
  v14 = sub_244794AA0();
  v15 = sub_244795394();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v16 = 67240192;
    v33 = v32;
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v14, v15, "Notifying host that crash occurred for %{public}d", v16, 8u);
    MEMORY[0x2495188D8](v16, -1, -1);
  }

  v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v13, v7);
  *(_DWORD *)v6 = v32;
  v6[4] = 0;
  swift_storeEnumTagMultiPayload();
  v18 = v30;
  sub_244793CD8();
  sub_24473A084((uint64_t)v6);
  sub_244794A94();
  v19 = sub_244794AA0();
  v20 = sub_244795394();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v21 = 67240192;
    v34 = v32;
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v19, v20, "Gathering crash details for %{public}d", v21, 8u);
    MEMORY[0x2495188D8](v21, -1, -1);
  }

  v17(v11, v7);
  sub_244793978();
  v22 = (void *)sub_24479396C();
  v23 = v32;
  sub_244793954();

  v24 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v29, v31, v18);
  v25 = (*(unsigned __int8 *)(v2 + 80) + 20) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v26 = swift_allocObject();
  *(_DWORD *)(v26 + 16) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v26 + v25, v24, v18);
  sub_2447948F0();
  swift_release();
  return swift_release();
}

uint64_t sub_244762D74@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t)v1;
  v4 = *v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737F098);
  return sub_244738C34((void (*)(char *, char *))sub_2447671AC, v2, MEMORY[0x24BEE4078], *(_QWORD *)(v4 + 80), v5, a1);
}

uint64_t sub_244762DF8@<X0>(int *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v10;
  uint64_t v11;

  v4 = *a2;
  v5 = *a1;
  v6 = sub_2447946E0();
  v10 = v5;
  v7 = *(_QWORD *)(v4 + 80);
  v8 = sub_2447949E0();
  MEMORY[0x249517B64](&v11, &v10, v6, MEMORY[0x24BEE3F88], v8, MEMORY[0x24BEE3F98]);
  swift_bridgeObjectRelease();
  if (!v11)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a3, 1, 1, v7);
  sub_2447948FC();
  return swift_release();
}

uint64_t sub_244762EC4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(uint64_t);
  char *v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = v1;
  v32 = *v1;
  v4 = sub_244793D14();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v31 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_244794AAC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A94();
  swift_retain();
  v11 = sub_244794AA0();
  v12 = sub_244795370();
  if (os_log_type_enabled(v11, v12))
  {
    v27 = v8;
    v13 = swift_slowAlloc();
    v28 = v6;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v26 = v7;
    v16 = v15;
    v34 = v15;
    v29 = v4;
    v30 = a1;
    *(_DWORD *)v14 = 136315138;
    v17 = sub_244795694();
    v33 = sub_24470600C(v17, v18, &v34);
    v4 = v29;
    a1 = v30;
    sub_244795448();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2446FC000, v11, v12, "Received incoming control events message stream for %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v16, -1, -1);
    MEMORY[0x2495188D8](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v26);
  }
  else
  {

    swift_release();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_244793F90();
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x24BE778C0];
  v20 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v31, a1, v4);
  v21 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v22 = (char *)swift_allocObject();
  v23 = v32;
  *((_QWORD *)v22 + 2) = *(_QWORD *)(v32 + 80);
  *((_QWORD *)v22 + 3) = *(_QWORD *)(v23 + 88);
  *((_QWORD *)v22 + 4) = v2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v22[v21], v20, v4);
  sub_24470665C(&qword_257380648, v19, MEMORY[0x24BE778A0]);
  swift_retain();
  sub_244793CCC();
  return swift_release();
}

uint64_t sub_2447631A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  _QWORD v19[3];
  uint64_t v20;

  v2 = v1;
  v4 = sub_244794AAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A94();
  swift_retain();
  v8 = sub_244794AA0();
  v9 = sub_244795394();
  if (os_log_type_enabled(v8, v9))
  {
    v19[0] = v4;
    v10 = swift_slowAlloc();
    v19[1] = a1;
    v11 = (uint8_t *)v10;
    v12 = swift_slowAlloc();
    v20 = v12;
    *(_DWORD *)v11 = 136315138;
    v13 = sub_244795694();
    v19[2] = sub_24470600C(v13, v14, &v20);
    sub_244795448();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2446FC000, v8, v9, "Received incoming remote events message stream for %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v12, -1, -1);
    MEMORY[0x2495188D8](v11, -1, -1);

    (*(void (**)(char *, _QWORD))(v5 + 8))(v7, v19[0]);
  }
  else
  {

    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_244793F9C();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77978];
  sub_244794188();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BE77C78];
  sub_24470665C(&qword_25737F0B8, v15, MEMORY[0x24BE77970]);
  sub_24470665C(&qword_257380668, v16, MEMORY[0x24BE77C70]);
  swift_retain();
  v17 = sub_244793CC0();
  swift_release();
  *(_QWORD *)(v2 + 136) = v17;
  return swift_release();
}

uint64_t sub_24476341C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = a2;
  v24 = a1;
  v25 = *a3;
  v4 = sub_244794188();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F8D8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_24479450C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2447944F4();
  sub_244701400(v23, (uint64_t)v11, &qword_25737F8D8);
  sub_24470D480(v24, (uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x24BE77C78]);
  v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v17 = (v10 + *(unsigned __int8 *)(v5 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v18 = (v6 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject();
  v20 = v25;
  *(_QWORD *)(v19 + 16) = *(_QWORD *)(v25 + 80);
  *(_QWORD *)(v19 + 24) = *(_QWORD *)(v20 + 88);
  sub_244766EE0((uint64_t)v11, v19 + v16);
  sub_2447299F8((uint64_t)v7, v19 + v17, (uint64_t (*)(_QWORD))MEMORY[0x24BE77C78]);
  *(_QWORD *)(v19 + v18) = a3;
  swift_retain();
  sub_244794500();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_2447635F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  const __CFData *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  const __CFData *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  const __CFData *v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void (*v57)(const __CFData *, uint64_t);
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  char *v65;
  uint8_t *v66;
  int v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t ObjectType;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  int v76;
  CGImage *v77;
  CGDataProvider *v78;
  CGDataProvider *v79;
  CFDataRef v80;
  const __CFData *v81;
  char *v82;
  CGColorSpace *v83;
  CGColorSpace *v84;
  __CFString *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  char *v92;
  const __CFData *v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  char *v97;
  NSObject *v98;
  os_log_type_t v99;
  uint8_t *v100;
  uint64_t v101;
  unint64_t v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  const __CFData *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *Width;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  const __CFData *v126;
  __int128 v127;
  uint64_t v128[3];

  v121 = a3;
  v122 = a2;
  v125 = (char *)a1;
  v123 = sub_2447943EC();
  v126 = *(const __CFData **)(v123 - 8);
  v3 = MEMORY[0x24BDAC7A8](v123);
  v115 = (char *)&v107 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v120 = (char *)&v107 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v117 = (char *)&v107 - v8;
  MEMORY[0x24BDAC7A8](v7);
  Width = (char *)&v107 - v9;
  v10 = sub_244793F0C();
  v11 = *(_QWORD *)(v10 - 8);
  v112 = v10;
  v113 = v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v110 = (char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v111 = (char *)&v107 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v114 = (char *)&v107 - v16;
  v124 = sub_244794AAC();
  v118 = *(_QWORD *)(v124 - 8);
  v17 = MEMORY[0x24BDAC7A8](v124);
  v116 = (char *)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v107 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v107 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (const __CFData *)((char *)&v107 - v25);
  v27 = sub_244794188();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v107 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F8D8);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v107 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_244793D08();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)&v107 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244795208();
  sub_2447951FC();
  sub_2447951F0();
  v37 = v34;
  swift_release();
  sub_244701400((uint64_t)v125, (uint64_t)v32, &qword_25737F8D8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) == 1)
    return sub_244701444((uint64_t)v32, &qword_25737F8D8);
  v109 = v21;
  v39 = v26;
  v41 = v120;
  v40 = v121;
  v108 = v24;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v36, v32, v33);
  sub_24470D480(v122, (uint64_t)v29, (uint64_t (*)(_QWORD))MEMORY[0x24BE77C78]);
  v42 = v123;
  v43 = (uint64_t)v36;
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v126 + 6))(v29, 1, v123) != 1)
  {
    v125 = v36;
    v122 = v37;
    v58 = Width;
    (*((void (**)(char *, char *, uint64_t))v126 + 4))(Width, v29, v42);
    sub_2447947C4();
    sub_2447947B8();
    sub_2447943E0();
    v59 = sub_2447947A0();
    swift_release();
    if (v59)
    {
      v60 = v117;
      sub_244794584();
      sub_2447947B8();
      sub_2447943E0();
      sub_244794794();
      swift_release();
      v61 = v116;
      sub_244794A94();
      v62 = v115;
      (*((void (**)(char *, char *, uint64_t))v126 + 2))(v115, v58, v42);
      v63 = sub_244794AA0();
      v64 = sub_244795394();
      if (os_log_type_enabled(v63, v64))
      {
        v65 = v62;
        v66 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v66 = 67109120;
        v121 = v33;
        v67 = sub_2447943E0();
        v68 = (void (*)(char *, uint64_t))*((_QWORD *)v126 + 1);
        v68(v65, v42);
        LODWORD(v127) = v67;
        v33 = v121;
        v61 = v116;
        v60 = v117;
        sub_244795448();
        _os_log_impl(&dword_2446FC000, v63, v64, "Responding to symbolication request with an augmented crash for pid: %d", v66, 8u);
        MEMORY[0x2495188D8](v66, -1, -1);
      }
      else
      {
        v68 = (void (*)(char *, uint64_t))*((_QWORD *)v126 + 1);
        v68(v62, v42);
      }
      v86 = v122;
      v87 = v124;
      v88 = v118;

      swift_release();
    }
    else
    {
      v71 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v126 + 2);
      v71(v117, v58, v42);
      v72 = v109;
      sub_244794A94();
      v71(v41, v58, v42);
      v73 = sub_244794AA0();
      v74 = sub_244795394();
      if (os_log_type_enabled(v73, v74))
      {
        v75 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v75 = 67109120;
        v76 = sub_2447943E0();
        v68 = (void (*)(char *, uint64_t))*((_QWORD *)v126 + 1);
        v68(v41, v42);
        LODWORD(v127) = v76;
        v72 = v109;
        sub_244795448();
        _os_log_impl(&dword_2446FC000, v73, v74, "Responding to symbolication request with an unaugmented crash for pid: %d. No matching symbol table found", v75, 8u);
        MEMORY[0x2495188D8](v75, -1, -1);
      }
      else
      {
        v68 = (void (*)(char *, uint64_t))*((_QWORD *)v126 + 1);
        v68(v41, v42);
      }
      v86 = v122;
      v87 = v124;
      v88 = v118;

      v61 = v72;
      v60 = v117;
    }
    (*(void (**)(char *, uint64_t))(v88 + 8))(v61, v87);
    sub_24470665C(&qword_257380670, (uint64_t (*)(uint64_t))MEMORY[0x24BE76340], MEMORY[0x24BE77FA0]);
    v91 = (uint64_t)v125;
    sub_244793CF0();
    v68(v60, v42);
    v68(Width, v42);
    v89 = *(uint64_t (**)(uint64_t, uint64_t))(v86 + 8);
    v90 = v91;
    return v89(v90, v33);
  }
  v44 = v39;
  sub_244794A7C();
  v45 = v40;
  swift_retain_n();
  v46 = sub_244794AA0();
  v47 = sub_244795394();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = swift_slowAlloc();
    v49 = swift_slowAlloc();
    v125 = (char *)v43;
    v50 = v37;
    v51 = v49;
    v128[0] = v49;
    *(_DWORD *)v48 = 136315394;
    v126 = v44;
    v52 = sub_244795694();
    *(_QWORD *)&v127 = sub_24470600C(v52, v53, v128);
    sub_244795448();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2080;
    v127 = *(_OWORD *)(v45 + 16);
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257380680);
    v54 = sub_24479507C();
    *(_QWORD *)&v127 = sub_24470600C(v54, v55, v128);
    sub_244795448();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2446FC000, v46, v47, "Received screenshot request %s, scene: %s", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy();
    v56 = v51;
    v37 = v50;
    v43 = (uint64_t)v125;
    MEMORY[0x2495188D8](v56, -1, -1);
    MEMORY[0x2495188D8](v48, -1, -1);

    v57 = *(void (**)(const __CFData *, uint64_t))(v118 + 8);
    v57(v126, v124);
  }
  else
  {

    swift_release_n();
    v57 = *(void (**)(const __CFData *, uint64_t))(v118 + 8);
    v57(v39, v124);
  }
  v69 = *(_QWORD *)(v45 + 24);
  ObjectType = swift_getObjectType();
  v77 = (CGImage *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v69 + 8) + 88))(ObjectType);
  v78 = CGImageGetDataProvider(v77);
  if (!v78 || (v79 = v78, v80 = CGDataProviderCopyData(v78), v79, !v80))
  {

    v89 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8);
    v90 = v43;
    return v89(v90, v33);
  }
  v125 = (char *)v43;
  v121 = v33;
  v122 = v37;
  v81 = v80;
  v123 = MEMORY[0x249516364]();
  v120 = v82;
  v126 = v81;

  Width = (char *)CGImageGetWidth(v77);
  CGImageGetHeight(v77);
  CGImageGetBytesPerRow(v77);
  CGImageGetBitmapInfo(v77);
  CGImageGetBitsPerComponent(v77);
  CGImageGetBitsPerPixel(v77);
  v83 = CGImageGetColorSpace(v77);
  if (v83 && (v84 = v83, v85 = (__CFString *)CGColorSpaceCopyName(v83), v84, v85))
  {
    sub_244795058();

  }
  else
  {
    sub_244795058();
  }
  v92 = v114;
  sub_244793F00();
  v93 = v108;
  sub_244794A7C();
  v95 = v112;
  v94 = v113;
  v96 = *(void (**)(char *, char *, uint64_t))(v113 + 16);
  v97 = v111;
  v96(v111, v92, v112);
  v98 = sub_244794AA0();
  v99 = sub_244795394();
  if (os_log_type_enabled(v98, v99))
  {
    v100 = (uint8_t *)swift_slowAlloc();
    v123 = swift_slowAlloc();
    *(_QWORD *)&v127 = v123;
    *(_DWORD *)v100 = 136315138;
    v120 = (char *)(v100 + 4);
    v96(v110, v97, v95);
    v101 = sub_24479507C();
    v128[0] = sub_24470600C(v101, v102, (uint64_t *)&v127);
    sub_244795448();
    swift_bridgeObjectRelease();
    v103 = *(void (**)(char *, uint64_t))(v113 + 8);
    v103(v97, v95);
    _os_log_impl(&dword_2446FC000, v98, v99, "Responding to screenshot request with %s", v100, 0xCu);
    v104 = v123;
    swift_arrayDestroy();
    v92 = v114;
    MEMORY[0x2495188D8](v104, -1, -1);
    MEMORY[0x2495188D8](v100, -1, -1);

    v105 = (const __CFData *)v108;
  }
  else
  {
    v103 = *(void (**)(char *, uint64_t))(v94 + 8);
    v103(v97, v95);

    v105 = (const __CFData *)v93;
  }
  v57(v105, v124);
  v106 = (uint64_t)v125;
  sub_24470665C(&qword_257380678, (uint64_t (*)(uint64_t))MEMORY[0x24BE777E0], MEMORY[0x24BE777D0]);
  sub_244793CF0();

  v103(v92, v95);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v122 + 8))(v106, v121);
}

uint64_t sub_2447641FC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  void (*v21)(_BYTE *, uint64_t, uint64_t);
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v44[12];
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_BYTE *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v58 = *a3;
  v59 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F8D8);
  v54 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v55 = v8;
  v57 = &v44[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v9);
  v56 = &v44[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_244793F90();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v53 = &v44[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v51 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = &v44[-v15];
  v17 = sub_244794AAC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = &v44[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_244794A94();
  v21 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16);
  v52 = a1;
  v50 = v21;
  v21(v16, a1, v11);
  swift_retain_n();
  v22 = sub_244794AA0();
  v23 = sub_244795370();
  v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    v25 = swift_slowAlloc();
    v48 = v17;
    v26 = v25;
    v46 = swift_slowAlloc();
    v61 = v46;
    *(_DWORD *)v26 = 136315394;
    v47 = v18;
    sub_24470665C(&qword_257380660, (uint64_t (*)(uint64_t))MEMORY[0x24BE778C0], MEMORY[0x24BE778D0]);
    v45 = v24;
    v27 = sub_2447955B0();
    v60 = sub_24470600C(v27, v28, &v61);
    v49 = a2;
    sub_244795448();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v16, v11);
    *(_WORD *)(v26 + 12) = 2080;
    v29 = sub_244795694();
    v31 = v30;
    swift_release();
    v60 = sub_24470600C(v29, v31, &v61);
    a2 = v49;
    sub_244795448();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2446FC000, v22, (os_log_type_t)v45, "Received '%s' via control events message stream for %s", (uint8_t *)v26, 0x16u);
    v32 = v46;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v32, -1, -1);
    MEMORY[0x2495188D8](v26, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v20, v48);
  }
  else
  {
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v16, v11);

    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v20, v17);
  }
  v33 = sub_244795220();
  v34 = (uint64_t)v56;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v56, 1, 1, v33);
  v35 = v53;
  v50(v53, v52, v11);
  v36 = v57;
  sub_244701400(a2, (uint64_t)v57, &qword_25737F8D8);
  sub_244795208();
  swift_retain();
  v37 = sub_2447951FC();
  v38 = (*(unsigned __int8 *)(v12 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v39 = (v51 + *(unsigned __int8 *)(v54 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  v40 = (char *)swift_allocObject();
  v41 = MEMORY[0x24BEE6930];
  *((_QWORD *)v40 + 2) = v37;
  *((_QWORD *)v40 + 3) = v41;
  v42 = v58;
  *((_QWORD *)v40 + 4) = *(_QWORD *)(v58 + 80);
  *((_QWORD *)v40 + 5) = *(_QWORD *)(v42 + 88);
  *((_QWORD *)v40 + 6) = a3;
  (*(void (**)(char *, _BYTE *, uint64_t))(v12 + 32))(&v40[v38], v35, v11);
  sub_244766EE0((uint64_t)v36, (uint64_t)&v40[v39]);
  sub_244713B34(v34, (uint64_t)&unk_257380658, (uint64_t)v40);
  sub_244793D14();
  sub_24470665C(&qword_25737F0F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE77240], MEMORY[0x24BE771D8]);
  swift_retain();
  sub_244794530();
  return swift_release_n();
}

uint64_t sub_2447646E4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  v6[8] = *a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737F8D8);
  v6[9] = swift_task_alloc();
  v7 = sub_244793F90();
  v6[10] = v7;
  v6[11] = *(_QWORD *)(v7 - 8);
  v6[12] = swift_task_alloc();
  v8 = sub_244794AAC();
  v6[13] = v8;
  v6[14] = *(_QWORD *)(v8 - 8);
  v6[15] = swift_task_alloc();
  sub_244795208();
  v6[16] = sub_2447951FC();
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_2447647D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  _QWORD *v40;
  uint64_t v41;
  NSObject *log;
  uint64_t v43;
  uint64_t v44;
  os_log_type_t type;
  uint64_t v46[2];

  v1 = *(_QWORD *)(v0 + 40);
  swift_release();
  v3 = *(_QWORD *)(v1 + 72);
  if (v3)
  {
    v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 112);
    v6 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 56);
    v7 = *(_QWORD *)(v0 + 40);
    v9 = *(_QWORD *)(v7 + 48);
    v8 = *(_QWORD *)(v7 + 56);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    v4(v6, v5, v9, v8);
    sub_244766898(v3);
  }
  else
  {
    v10 = type metadata accessor for CanvasBox.UnknownControlConfiguration(0, *(_QWORD *)(*(_QWORD *)(v0 + 64) + 80), *(_QWORD *)(*(_QWORD *)(v0 + 64) + 88), v2);
    MEMORY[0x249518824](&unk_24479B548, v10);
    v11 = (void *)swift_allocError();
    swift_willThrow();
    v13 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 96);
    v14 = *(_QWORD *)(v0 + 80);
    v15 = *(_QWORD *)(v0 + 48);
    sub_244794A94();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v15, v14);
    swift_retain();
    v16 = v11;
    swift_retain();
    v17 = v11;
    v18 = sub_244794AA0();
    type = sub_24479537C();
    v19 = os_log_type_enabled(v18, type);
    v21 = *(_QWORD *)(v0 + 112);
    v20 = *(_QWORD *)(v0 + 120);
    v22 = *(_QWORD *)(v0 + 96);
    v23 = *(_QWORD *)(v0 + 104);
    v25 = *(_QWORD *)(v0 + 80);
    v24 = *(_QWORD *)(v0 + 88);
    if (v19)
    {
      log = v18;
      v44 = *(_QWORD *)(v0 + 104);
      v26 = swift_slowAlloc();
      v40 = (_QWORD *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      v46[0] = v41;
      *(_DWORD *)v26 = 136446722;
      v43 = v20;
      sub_24470665C(&qword_257380660, (uint64_t (*)(uint64_t))MEMORY[0x24BE778C0], MEMORY[0x24BE778D0]);
      v27 = sub_2447955B0();
      *(_QWORD *)(v0 + 16) = sub_24470600C(v27, v28, v46);
      sub_244795448();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v25);
      *(_WORD *)(v26 + 12) = 2082;
      v29 = sub_244795694();
      v31 = v30;
      swift_release();
      *(_QWORD *)(v0 + 24) = sub_24470600C(v29, v31, v46);
      sub_244795448();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v26 + 22) = 2112;
      v32 = v11;
      v33 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 32) = v33;
      sub_244795448();
      *v40 = v33;

      _os_log_impl(&dword_2446FC000, log, type, "Error handling control event '%{public}s' for %{public}s: %@", (uint8_t *)v26, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v40, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v41, -1, -1);
      MEMORY[0x2495188D8](v26, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v43, v44);
    }
    else
    {
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v25);
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v23);
    }
    v34 = *(_QWORD *)(v0 + 72);
    sub_244701400(*(_QWORD *)(v0 + 56), v34, &qword_25737F8D8);
    v35 = sub_244793D08();
    v36 = *(_QWORD *)(v35 - 8);
    v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35);
    v38 = *(_QWORD *)(v0 + 72);
    if (v37 == 1)
    {

      sub_244701444(v38, &qword_25737F8D8);
    }
    else
    {
      sub_244793CE4();

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v38, v35);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244764C8C()
{
  return sub_2447946C8();
}

unint64_t sub_244764CAC()
{
  return 0xD000000000000040;
}

uint64_t sub_244764CC8(uint64_t a1)
{
  MEMORY[0x249518824](&unk_24479B4B0, a1);
  return sub_244794668();
}

uint64_t sub_244764CFC(uint64_t a1)
{
  MEMORY[0x249518824](&unk_24479B4B0, a1);
  return sub_244794638();
}

uint64_t sub_244764D30()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_244766898(*(_QWORD *)(v0 + 72));
  swift_release();
  return v0;
}

uint64_t sub_244764D80()
{
  sub_244764D30();
  return swift_deallocClassInstance();
}

uint64_t sub_244764DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;

  result = sub_244760808(a1, a2, a3);
  *a4 = result;
  return result;
}

uint64_t sub_244764DC8(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_244760B9C(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_244764DE8(uint64_t a1)
{
  return sub_2447629A0(a1);
}

uint64_t sub_244764E08()
{
  return sub_244764C8C();
}

uint64_t type metadata accessor for CanvasUpdateOutput()
{
  uint64_t result;

  result = qword_257380558;
  if (!qword_257380558)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t dispatch thunk of CanvasContentHost.viewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CanvasContentHost.stop()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CanvasContentHost.prepareForRelaunch()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CanvasContentHost.confirmReadyForDisplayAfterAsyncResize()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CanvasContentHost.didActivate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CanvasContentHost.didDeactivate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of static CanvasContentProvider.encode(hostedOutput:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of CanvasContentProvider.performUpdate(updatePayload:controlStates:agentContext:sceneContext:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 48))();
}

uint64_t dispatch thunk of static CanvasContentProvider.create(for:in:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 56)
                                                                                              + *(_QWORD *)(a7 + 56));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_244706734;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_244764F60()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_244764F68()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_244793AB0();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_244765028(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *, uint64_t *, uint64_t);
  uint64_t *v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  void (*v36)(unint64_t, unint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_244793AB0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v7 + v10;
  v12 = *(_QWORD *)(v9 + 64) + 7;
  v13 = *(_QWORD *)(a3 + 32);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = v15 + 56;
  v17 = v15 | *(_DWORD *)(v6 + 80) & 0xF8 | v10;
  if (v17 > 7
    || ((*(_DWORD *)(v14 + 80) | *(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000) != 0
    || ((v15 + 56 + ((((v12 + (v11 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v15)
     + *(_QWORD *)(v14 + 64) > 0x18)
  {
    v20 = *a2;
    *a1 = *a2;
    v24 = (uint64_t *)(v20 + (((v17 | 7) + 16) & ~(unint64_t)(v17 | 7)));
    swift_retain();
  }
  else
  {
    v21 = v8;
    v22 = ~v10;
    v38 = ~v15;
    v39 = v13;
    v23 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v24 = a1;
    v23(a1, a2, v5);
    v25 = ((unint64_t)a2 + v11) & v22;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v22, v25, v21);
    v26 = (_QWORD *)((v12 + (((unint64_t)a1 + v11) & v22)) & 0xFFFFFFFFFFFFFFF8);
    v27 = (_QWORD *)((v12 + v25) & 0xFFFFFFFFFFFFFFF8);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
    v30 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v29 = *v30;
    v31 = v30[2];
    v29[1] = v30[1];
    v29[2] = v31;
    v32 = v30[4];
    v29[3] = v30[3];
    v29[4] = v32;
    v33 = v30[6];
    v29[5] = v30[5];
    v29[6] = v33;
    v34 = ((unint64_t)v29 + v16) & v38;
    v35 = ((unint64_t)v30 + v16) & v38;
    v36 = *(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    v36(v34, v35, v39);
  }
  return v24;
}

uint64_t sub_24476520C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64);
  v6 = sub_244793AB0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v5 + a1 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v8, v6);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 8))((((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 80));
}

uint64_t sub_2447652D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_244793AB0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (v7 + v10 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, v13, v8);
  v14 = *(_QWORD *)(v9 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = v19[2];
  v18[1] = v19[1];
  v18[2] = v20;
  v21 = v19[4];
  v18[3] = v19[3];
  v18[4] = v21;
  v22 = v19[6];
  v18[5] = v19[5];
  v18[6] = v22;
  v23 = *(_QWORD *)(a3 + 32);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = ((unint64_t)v18 + v25 + 56) & ~v25;
  v27 = ((unint64_t)v19 + v25 + 56) & ~v25;
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  v28(v26, v27, v23);
  return a1;
}

uint64_t sub_24476540C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_244793AB0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (v7 + v10 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v12, v13, v8);
  v14 = *(_QWORD *)(v9 + 64) + 7;
  v15 = (_QWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v19[2];
  v18[1] = v19[1];
  v18[2] = v20;
  swift_retain();
  swift_release();
  v21 = v19[4];
  v18[3] = v19[3];
  v18[4] = v21;
  swift_retain();
  swift_release();
  v22 = v19[6];
  v18[5] = v19[5];
  v18[6] = v22;
  swift_retain();
  swift_release();
  v23 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v23 + 24))(((unint64_t)v18 + *(unsigned __int8 *)(v23 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), ((unint64_t)v19 + *(unsigned __int8 *)(v23 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
  return a1;
}

uint64_t sub_244765558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_244793AB0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (v7 + v10 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v12, v13, v8);
  v14 = *(_QWORD *)(v9 + 64) + 7;
  v15 = (_OWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_OWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = ((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v18 = ((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(_QWORD *)(v18 + 48);
  v21 = *(_OWORD *)(v18 + 16);
  v20 = *(_OWORD *)(v18 + 32);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v21;
  *(_OWORD *)(v17 + 32) = v20;
  *(_QWORD *)(v17 + 48) = v19;
  v22 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v22 + 32))((*(unsigned __int8 *)(v22 + 80) + 56 + v17) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80), (*(unsigned __int8 *)(v22 + 80) + 56 + v18) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  return a1;
}

uint64_t sub_244765644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_244793AB0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (v7 + v10 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 40))(v12, v13, v8);
  v14 = *(_QWORD *)(v9 + 64) + 7;
  v15 = (_OWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v14 + v13;
  v17 = (v16 & 0xFFFFFFFFFFFFFFF8) + 23;
  *v15 = *(_OWORD *)(v16 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v18 = ((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v17 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v18 = *(_QWORD *)v17;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v18 + 8) = *(_OWORD *)(v17 + 8);
  swift_release();
  *(_OWORD *)(v18 + 24) = *(_OWORD *)(v17 + 24);
  swift_release();
  *(_OWORD *)(v18 + 40) = *(_OWORD *)(v17 + 40);
  swift_release();
  v19 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v19 + 40))((*(unsigned __int8 *)(v19 + 80) + 56 + v18) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80), (*(unsigned __int8 *)(v19 + 80) + 56 + v17) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  return a1;
}

uint64_t sub_244765764(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v26;
  unsigned int v28;
  int v29;
  int v30;
  uint64_t v31;
  unint64_t *v32;
  unint64_t v33;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = sub_244793AB0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= v8)
    v12 = v8;
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = *(_QWORD *)(a3 + 32);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int *)(v14 + 84);
  if (v12 <= v15)
    v16 = *(_DWORD *)(v14 + 84);
  else
    v16 = v12;
  if (v16 <= 0x7FFFFFFF)
    v17 = 0x7FFFFFFF;
  else
    v17 = v16;
  if (!a2)
    return 0;
  v18 = v9;
  v19 = *(unsigned __int8 *)(v10 + 80);
  v20 = *(_QWORD *)(v7 + 64) + v19;
  v21 = *(_QWORD *)(v10 + 64) + 7;
  v22 = *(unsigned __int8 *)(v14 + 80);
  v23 = v22 + 56;
  if (a2 <= v17)
    goto LABEL_30;
  v24 = ((v23 + ((((v21 + (v20 & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v22)
      + *(_QWORD *)(v14 + 64);
  v25 = 8 * v24;
  if (v24 <= 3)
  {
    v28 = ((a2 - v17 + ~(-1 << v25)) >> v25) + 1;
    if (HIWORD(v28))
    {
      v26 = *(_DWORD *)(a1 + v24);
      if (!v26)
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v28 > 0xFF)
    {
      v26 = *(unsigned __int16 *)(a1 + v24);
      if (!*(_WORD *)(a1 + v24))
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v28 < 2)
    {
LABEL_30:
      if ((_DWORD)v8 == v17)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, v8, v6);
      v31 = (v20 + a1) & ~v19;
      if (v11 == v17)
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v10 + 48))(v31, *(unsigned int *)(v10 + 84), v18);
      v32 = (unint64_t *)((v21 + v31) & 0xFFFFFFFFFFFFFFF8);
      if ((v16 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))((v23 + (((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v22, v15, v13);
      v33 = *v32;
      if (v33 >= 0xFFFFFFFF)
        LODWORD(v33) = -1;
      return (v33 + 1);
    }
  }
  v26 = *(unsigned __int8 *)(a1 + v24);
  if (!*(_BYTE *)(a1 + v24))
    goto LABEL_30;
LABEL_21:
  v29 = (v26 - 1) << v25;
  if (v24 > 3)
    v29 = 0;
  if ((_DWORD)v24)
  {
    if (v24 <= 3)
      v30 = ((v23 + ((((v21 + (v20 & ~(_DWORD)v19)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)) & ~(_DWORD)v22)
          + *(_DWORD *)(v14 + 64);
    else
      v30 = 4;
    __asm { BR              X12 }
  }
  return v17 + v29 + 1;
}

void sub_244765994(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;

  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(sub_244793AB0() - 8);
  if (*(_DWORD *)(v10 + 84) <= v9)
    v11 = v9;
  else
    v11 = *(_DWORD *)(v10 + 84);
  v12 = *(_QWORD *)(*(_QWORD *)(a4 + 32) - 8);
  if (v11 <= *(_DWORD *)(v12 + 84))
    v11 = *(_DWORD *)(v12 + 84);
  if (v11 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v11;
  v14 = ((*(unsigned __int8 *)(v12 + 80)
        + 56
        + ((((*(_QWORD *)(v10 + 64)
            + 7
            + ((*(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
      + *(_QWORD *)(v12 + 64);
  if (a3 <= v13)
  {
    v15 = 0;
  }
  else if (v14 <= 3)
  {
    v17 = ((a3 - v13 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v17))
    {
      v15 = 4u;
    }
    else if (v17 >= 0x100)
    {
      v15 = 2;
    }
    else
    {
      v15 = v17 > 1;
    }
  }
  else
  {
    v15 = 1u;
  }
  if (v13 < a2)
  {
    v16 = ~v13 + a2;
    if (v14 < 4)
    {
      if ((_DWORD)v14)
      {
        v18 = v16 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if ((_DWORD)v14 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if ((_DWORD)v14 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X5 }
}

uint64_t dispatch thunk of CanvasContentProviderBox.init(in:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of static CanvasContentProviderBox.variantGroups(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of static CanvasContentProviderBox.providerDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CanvasContentProviderBox.performUpdate(using:providerPromise:updatePayload:controlStates:agentContext:makeSceneContext:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 40))();
}

uint64_t dispatch thunk of CanvasContentProviderBox.notePreviewCrashed(pid:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of CanvasContentProviderBox.invalidateProviders()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t *initializeBufferWithCopyOfBuffer for CanvasUpdateOutput(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244794494();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_244793AB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (uint64_t *)((char *)a1 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for CanvasUpdateOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_244794494();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_244793AB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CanvasUpdateOutput(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = sub_244794494();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244793AB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CanvasUpdateOutput(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_244794494();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244793AB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for CanvasUpdateOutput(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_244794494();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244793AB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for CanvasUpdateOutput(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_244794494();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244793AB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  swift_release();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CanvasUpdateOutput()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244766118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_244794494();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_244793AB0();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for CanvasUpdateOutput()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2447661CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_244794494();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_244793AB0();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_244766270()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_244794494();
  if (v1 <= 0x3F)
  {
    result = sub_244793AB0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_244766310()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CanvasBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CanvasBox);
}

uint64_t sub_244766398(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x249518824](&unk_24479B3C8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2447663C4()
{
  return swift_deallocObject();
}

uint64_t sub_2447663D4(uint64_t a1)
{
  uint64_t v1;

  return sub_244762A1C(a1, *(_DWORD *)(v1 + 16));
}

uint64_t sub_2447663DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F0C0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 20) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_244766440(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

void sub_244766460(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_244795448();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_244766510()
{
  return objectdestroy_6Tm((uint64_t (*)(_QWORD))MEMORY[0x24BE78330]);
}

uint64_t sub_24476651C(uint64_t a1, uint64_t a2)
{
  sub_2447942E4();
  return sub_2447612C8(a1, a2);
}

uint64_t sub_24476656C()
{
  uint64_t v0;

  return sub_244761934(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_244766584()
{
  return swift_deallocObject();
}

uint64_t sub_244766594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *boxed_opaque_existential_1;
  __int128 v6;

  v6 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(a2 + 24) = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_1, a1);
}

uint64_t sub_2447665E0(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_24476662C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v1 = sub_244794494();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_2447942E4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v11 = *(_QWORD *)(v6 + 64);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v4))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  v8 = (v7 + v4 + 56) & ~v7;
  v9 = (((v11 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + v9);
  return swift_deallocObject();
}

uint64_t sub_24476675C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(sub_244794494() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(sub_2447942E4() - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + v8 + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_244761C14(a1, v1 + v6, *(_QWORD *)(v1 + v7), v1 + v8, v1 + v10, *(void (**)(uint64_t *))(v1 + v11), *(_QWORD *)(v1 + v11 + 8), v1 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8), v3, v4);
}

uint64_t sub_244766830(uint64_t a1)
{
  uint64_t v1;

  return sub_2447623F0(a1, v1);
}

uint64_t sub_244766838()
{
  return swift_deallocObject();
}

uint64_t sub_244766848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_24476253C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

_QWORD *sub_244766860(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  return a1;
}

uint64_t sub_244766898(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2447668E4()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t updated;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = swift_getAssociatedTypeWitness();
  v3 = swift_getAssociatedTypeWitness();
  updated = type metadata accessor for CanvasUpdateResult(0, AssociatedTypeWitness, v2, v3);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(updated - 8) + 80);
  v6 = v0 + ((v5 + 32) & ~v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v6, AssociatedTypeWitness);
  v7 = v6 + *(int *)(updated + 44);
  v8 = sub_244793AB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v6 + *(int *)(updated + 56), v3);
  return swift_deallocObject();
}

uint64_t sub_244766A50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = swift_getAssociatedTypeWitness();
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CanvasUpdateResult(0, AssociatedTypeWitness, v4, v5)- 8)+ 80);
  return sub_2447627C8(v0 + ((v6 + 32) & ~v6), v1, v2);
}

uint64_t sub_244766B20()
{
  return swift_deallocObject();
}

uint64_t sub_244766B30()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16) + 56))();
}

uint64_t sub_244766B5C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_244761FB0(a1, *(_QWORD **)(v2 + 32), a2);
}

uint64_t sub_244766B7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for PreviewAgentConnector();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 40) & ~v2;
  swift_release();
  v4 = v0 + v3 + *(int *)(v1 + 20);
  v5 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244766CA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PreviewAgentConnector() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = v1 + ((v4 + 40) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_244707DE8;
  v7[3] = v5;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_244766D2C()
{
  return objectdestroy_6Tm((uint64_t (*)(_QWORD))MEMORY[0x24BE77240]);
}

uint64_t objectdestroy_6Tm(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_244766DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_244793D14() - 8) + 80);
  return sub_2447641FC(a1, a2, *(uint64_t **)(v2 + 32), v2 + ((v5 + 40) & ~v5));
}

uint64_t sub_244766E00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = sub_244793F90();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737F8D8) - 8) + 80);
  v6 = (v4 + v5) & ~v5;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v7 = sub_244793D08();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v6, 1, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v6, v7);
  return swift_deallocObject();
}

uint64_t sub_244766EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F8D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_244766F28(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(sub_244793F90() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737F8D8) - 8) + 80);
  v8 = (v6 + v7) & ~v7;
  v9 = v1[2];
  v10 = v1[3];
  v11 = (_QWORD *)v1[6];
  v12 = (uint64_t)v1 + v5;
  v13 = (uint64_t)v1 + v8;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_244706734;
  return sub_2447646E4(a1, v9, v10, v11, v12, v13);
}

uint64_t sub_244766FE8()
{
  return sub_2447952D4();
}

uint64_t type metadata accessor for CanvasBox.UnknownControlConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CanvasBox.UnknownControlConfiguration);
}

uint64_t sub_244767018(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_24476341C(a1, a2, v2);
}

uint64_t sub_244767020()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737F8D8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_244794188() - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v0 + v2;
  v7 = sub_244793D08();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = sub_2447943EC();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v0 + v5, 1, v9))
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v0 + v5, v9);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244767134()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25737F8D8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_244794188() - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return sub_2447635F0(v0 + v2, v0 + v5, *(_QWORD *)(v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_2447671AC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_244762DF8(a1, v2, a2);
}

uint64_t sub_2447671C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_244793E88();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24476723C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(sub_244793E88() - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v2 + v9;
  v11 = (uint64_t *)(v2 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v14;
  *v14 = v3;
  v14[1] = sub_244707DE8;
  return sub_2447609B4(a1, a2, v10, v12, v13, v6, v7);
}

uint64_t sub_2447672F8()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24476731C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
}

void sub_244767370()
{
  JUMPOUT(0x249518824);
}

void sub_244767380()
{
  JUMPOUT(0x249518824);
}

void sub_244767390()
{
  JUMPOUT(0x249518824);
}

uint64_t sub_2447673A0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_24470FFA8(0, v1, 0);
    v2 = v14;
    v4 = *(_QWORD *)(sub_244794C68() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_244794C5C();
      v9 = v8;
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_24470FFA8(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24476749C(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x24BEE4AF8];
    if (!v2)
      return v3;
    v14 = MEMORY[0x24BEE4AF8];
    result = sub_24470FFA8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v14;
    v13 = v1 & 0xC000000000000001;
    v6 = v1;
    while (v2 != v5)
    {
      if (v13)
        MEMORY[0x249518044](v5, v1);
      else
        swift_retain();
      v7 = sub_244794AB8();
      v9 = v8;
      swift_release();
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_24470FFA8(v10 > 1, v11 + 1, 1);
      ++v5;
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      v1 = v6;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_24479555C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_24476760C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v8 + 80) = a7;
  *(_QWORD *)(v8 + 88) = v7;
  *(_BYTE *)(v8 + 26) = a5;
  *(_BYTE *)(v8 + 25) = a4;
  *(_QWORD *)(v8 + 64) = a3;
  *(_QWORD *)(v8 + 72) = a6;
  *(_QWORD *)(v8 + 48) = a1;
  *(_QWORD *)(v8 + 56) = a2;
  v9 = sub_244794AAC();
  *(_QWORD *)(v8 + 96) = v9;
  *(_QWORD *)(v8 + 104) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 112) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24476767C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v0 + 120) = sub_24472F2A0(*(_QWORD *)(v0 + 56));
  sub_244794A88();
  swift_retain();
  v1 = sub_244794AA0();
  v2 = sub_244795394();
  v3 = os_log_type_enabled(v1, v2);
  v5 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 56);
  if (v3)
  {
    v16 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 112);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17 = v9;
    *(_DWORD *)v8 = 136315138;
    v11 = *(_QWORD *)(v7 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier);
    v10 = *(_QWORD *)(v7 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier + 8);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 40) = sub_24470600C(v11, v10, &v17);
    sub_244795448();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_2446FC000, v1, v2, "JITManager: Initializing for %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v9, -1, -1);
    MEMORY[0x2495188D8](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v16);
  }
  else
  {
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  v12 = *(_BYTE *)(v0 + 25);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 64);
  *(_BYTE *)(v0 + 24) = v12 & 1;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v13;
  *v13 = v0;
  v13[1] = sub_2447678C0;
  return sub_24472F52C((uint64_t *)(v0 + 16), *(_BYTE *)(v0 + 26));
}

uint64_t sub_2447678C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v7)(_QWORD, uint64_t);

  v4 = *v2;
  *(_QWORD *)(v4 + 136) = a1;
  *(_QWORD *)(v4 + 144) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  v7 = (uint64_t (*)(_QWORD, uint64_t))(**(int **)(v4 + 72) + *(_QWORD *)(v4 + 72));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 152) = v6;
  *v6 = v4;
  v6[1] = sub_244767978;
  return v7(*(_QWORD *)(v4 + 48), a1);
}

uint64_t sub_244767978()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2447679DC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);
  *(_QWORD *)(v0 + 32) = v1;
  type metadata accessor for PreviewsJITConfigurator();
  sub_24470665C(&qword_25737EB98, (uint64_t (*)(uint64_t))type metadata accessor for PreviewsJITConfigurator, (uint64_t)&unk_244797F78);
  sub_244794518();
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244767AA0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);
  swift_release();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244767AE4()
{
  uint64_t v0;
  void *v1;

  swift_release();
  v1 = *(void **)(v0 + 120);
  *(_QWORD *)(v0 + 32) = v1;
  type metadata accessor for PreviewsJITConfigurator();
  sub_24470665C(&qword_25737EB98, (uint64_t (*)(uint64_t))type metadata accessor for PreviewsJITConfigurator, (uint64_t)&unk_244797F78);
  sub_244794518();
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Agent.agentBundle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity;
  v4 = v3 + *(int *)(type metadata accessor for BatchIdentity(0) + 20);
  v5 = sub_244793E64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t type metadata accessor for BatchIdentity(uint64_t a1)
{
  return sub_244706AAC(a1, qword_257380808);
}

uint64_t sub_244767C18(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_244793E64();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = *(_QWORD *)(v4 + 64);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244767C7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[4];
  v4 = v0[5];
  v5 = (_QWORD *)v0[3];
  v17 = v5[5];
  v6 = v5[3];
  v15 = v0[2];
  v16 = v5[4];
  v7 = OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity;
  v8 = v6 + v7 + *(int *)(type metadata accessor for BatchIdentity(0) + 20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v8, v3);
  v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v10 = (v2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = swift_allocObject();
  v0[8] = v11;
  *(_QWORD *)(v11 + 16) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v9, v1, v3);
  *(_QWORD *)(v11 + v10) = v15;
  v12 = (_QWORD *)(v11 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v12 = v16;
  v12[1] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v13 = (_QWORD *)swift_task_alloc();
  v0[9] = v13;
  *v13 = v0;
  v13[1] = sub_244767DC8;
  return sub_2447953AC();
}

uint64_t sub_244767DC8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244767E34()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244767E68()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244767E9C(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  void *v5;
  void *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  id v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[3];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;

  v6 = v5;
  v54 = a4;
  v11 = sub_244794A4C();
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_244794AAC();
  v55 = *(_QWORD *)(v13 - 8);
  v56 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_244793E64();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[8];
  if (v20)
  {
    v21 = a1[12];
    v22 = a1[13];
    v24 = a1[10];
    v23 = a1[11];
    v25 = a1[9];
    v62 = a1[7];
    v63 = v20;
    v64 = v25;
    *(_QWORD *)&v65 = v24;
    *((_QWORD *)&v65 + 1) = v23;
    *(_QWORD *)&v66 = v21;
    *((_QWORD *)&v66 + 1) = v22;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_244768494(a3);
    if (v6)
    {
      sub_244794A88();
      swift_bridgeObjectRetain();
      v26 = v6;
      swift_bridgeObjectRetain();
      v27 = v6;
      v28 = sub_244794AA0();
      v29 = sub_24479537C();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc();
        v52 = (_QWORD *)swift_slowAlloc();
        v53 = swift_slowAlloc();
        v60[0] = v53;
        *(_DWORD *)v30 = 136446466;
        swift_bridgeObjectRetain();
        v67 = sub_24470600C(v54, a5, v60);
        sub_244795448();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v30 + 12) = 2112;
        v31 = v6;
        v32 = _swift_stdlib_bridgeErrorToNSError();
        v67 = v32;
        sub_244795448();
        v33 = v52;
        *v52 = v32;

        _os_log_impl(&dword_2446FC000, v28, v29, "%{public}s: Failed loading target descriptions: %@", (uint8_t *)v30, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
        swift_arrayDestroy();
        MEMORY[0x2495188D8](v33, -1, -1);
        v34 = v53;
        swift_arrayDestroy();
        MEMORY[0x2495188D8](v34, -1, -1);
        MEMORY[0x2495188D8](v30, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();

      }
      (*(void (**)(char *, uint64_t))(v55 + 8))(v15, v56);
      v43 = v58;
      v42 = v59;
      v44 = v57;
      v67 = a1[15];
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737FFD8);
      sub_24470130C(&qword_25737FFE0, &qword_25737FFD8, MEMORY[0x24BE76C78]);
      sub_244794884();
      sub_24476749C(v60[0]);
      swift_bridgeObjectRelease();
      sub_244794A40();
      v45 = v6;
      sub_24470665C(&qword_25737FFE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE76C68], MEMORY[0x24BE76C60]);
      sub_24479465C();

      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v42);
      v46 = v61;
      v47 = __swift_project_boxed_opaque_existential_1(v60, v61);
      v48 = *(_QWORD *)(v46 - 8);
      MEMORY[0x24BDAC7A8](v47);
      v50 = (char *)&v52 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v48 + 16))(v50);
      if (sub_2447955BC())
      {
        (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v46);
      }
      else
      {
        swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v51, v50, v46);
      }
      swift_willThrow();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v60);
    }
    else
    {
      v37 = v63;
      v38 = v64;
      v39 = a1[7];
      v40 = a1[8];
      a1[7] = v62;
      a1[8] = v37;
      a1[9] = v38;
      v41 = v66;
      *((_OWORD *)a1 + 5) = v65;
      *((_OWORD *)a1 + 6) = v41;
      return sub_24474E5F0(v39, v40);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a2, v16);
    type metadata accessor for PreviewsJITLinker.InvalidatedError(0);
    sub_24470665C(&qword_25737FFF0, type metadata accessor for PreviewsJITLinker.InvalidatedError, (uint64_t)&unk_24479B160);
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v35, v19, v16);
    return swift_willThrow();
  }
}

uint64_t sub_244768494(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  unint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  unint64_t v44;
  _BYTE *v45;
  unint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int isUniquelyReferenced_nonNull_native;
  char v60;
  unint64_t v61;
  uint64_t v62;
  _BOOL8 v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  char v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  void (*v73)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v74;
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  void (*v78)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  _BYTE *v83;
  void (*v84)(_BYTE *, uint64_t);
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t *v98;
  _BYTE *v99;
  uint64_t result;
  _BYTE *v101;
  _BYTE v102[4];
  int v103;
  uint64_t v104;
  _BYTE *v105;
  _BYTE *v106;
  _BYTE *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  _BYTE *v115;
  uint64_t v116;
  _BYTE *v117;
  uint64_t *v118;
  _BYTE *v119;
  _BYTE *v120;
  _BYTE *v121;
  _BYTE *v122;
  _BYTE *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126[2];
  unint64_t v127;

  v3 = v2;
  v5 = sub_244794C68();
  v112 = *(_QWORD *)(v5 - 8);
  v113 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v115 = &v102[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF70);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v120 = &v102[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x24BDAC7A8](v8);
  v119 = &v102[-v11];
  MEMORY[0x24BDAC7A8](v10);
  v111 = &v102[-v12];
  v13 = sub_244794068();
  v116 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v123 = &v102[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v14);
  v106 = &v102[-v17];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v117 = &v102[-v19];
  v20 = MEMORY[0x24BDAC7A8](v18);
  v105 = &v102[-v21];
  MEMORY[0x24BDAC7A8](v20);
  v121 = &v102[-v22];
  v124 = (_QWORD *)sub_244794AAC();
  v114 = *(v124 - 1);
  MEMORY[0x24BDAC7A8](v124);
  v24 = &v102[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v109 = sub_2447944DC();
  v25 = *(_QWORD *)(v109 - 8);
  MEMORY[0x24BDAC7A8](v109);
  v27 = &v102[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v28 = *v1;
  v29 = v1[1];
  v118 = v1;
  swift_bridgeObjectRetain_n();
  sub_2447944C4();
  v107 = v27;
  sub_2447944D0();
  sub_244794A88();
  v127 = a1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v122 = v24;
  v30 = sub_244794AA0();
  v31 = sub_244795370();
  v32 = v31;
  v33 = os_log_type_enabled(v30, v31);
  v108 = v25;
  v110 = a1;
  if (v33)
  {
    v34 = swift_slowAlloc();
    v104 = swift_slowAlloc();
    v126[0] = v104;
    *(_DWORD *)v34 = 136446466;
    v103 = v32;
    swift_bridgeObjectRetain();
    v125 = sub_24470600C(v28, v29, v126);
    sub_244795448();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v34 + 12) = 2082;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257380AF0);
    sub_24470130C(&qword_257380AF8, &qword_257380AF0, MEMORY[0x24BEE12E0]);
    v35 = sub_244795334();
    v125 = sub_24470600C(v35, v36, v126);
    sub_244795448();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2446FC000, v30, (os_log_type_t)v103, "%{public}s: Loading %{public}s", (uint8_t *)v34, 0x16u);
    v37 = v104;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v37, -1, -1);
    v38 = v34;
    a1 = v110;
    MEMORY[0x2495188D8](v38, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(_BYTE *, _QWORD *))(v114 + 8))(v122, v124);
  v39 = MEMORY[0x24BEE4AF8];
  v127 = sub_244727014(MEMORY[0x24BEE4AF8]);
  v40 = *(_QWORD *)(a1 + 16);
  v41 = (uint64_t)v115;
  v42 = v116;
  v43 = v121;
  v114 = v40;
  if (!v40)
  {
LABEL_26:
    v126[0] = v39;
    swift_bridgeObjectRetain();
    v85 = 0;
    while (1)
    {
      v87 = (uint64_t)v119;
      v86 = (uint64_t)v120;
      if (v85 == v40)
      {
        v88 = 1;
        v85 = v40;
      }
      else
      {
        if (v85 >= v40)
          goto LABEL_44;
        (*(void (**)(_BYTE *, unint64_t, uint64_t))(v42 + 16))(v119, a1+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(_QWORD *)(v42 + 72) * v85, v13);
        v88 = 0;
        ++v85;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v87, v88, 1, v13);
      sub_24475E888(v87, v86);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v86, 1, v13) == 1)
        break;
      v89 = v117;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v42 + 32))(v117, v86, v13);
      v90 = sub_244794008();
      v92 = v91;
      (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v89, v13);
      sub_244756800(v90, v92, (void (*)(uint64_t, uint64_t, uint64_t))&v127, (unint64_t *)v126, v41);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v41, v113);
      swift_bridgeObjectRelease();
      v40 = v114;
    }
    swift_bridgeObjectRelease();
    v93 = swift_bridgeObjectRetain();
    v94 = sub_2447673A0(v93);
    swift_bridgeObjectRelease_n();
    sub_244757BC0(v94);
    v95 = v108;
    if (v3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v97 = v127;
      if (!*(_QWORD *)(v127 + 16))
      {
        swift_bridgeObjectRelease();
        v101 = v107;
        sub_2447944B8();
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v95 + 8))(v101, v109);
      }
      sub_24475E540();
      swift_allocError();
      *v98 = v97;
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
    swift_bridgeObjectRelease();
    v96 = v109;
    goto LABEL_41;
  }
  v104 = v3;
  v44 = a1 + ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80));
  v45 = *(_BYTE **)(v116 + 72);
  v124 = *(_QWORD **)(v116 + 16);
  swift_bridgeObjectRetain();
  v46 = v40;
  v122 = v45;
  while (1)
  {
    ((void (*)(_BYTE *, unint64_t, uint64_t))v124)(v43, v44, v13);
    v48 = sub_244794008();
    v50 = v127;
    if (*(_QWORD *)(v127 + 16) && (v51 = sub_24470F788(v48, v49), (v52 & 1) != 0))
    {
      v53 = (uint64_t)v111;
      ((void (*)(_BYTE *, unint64_t, uint64_t))v124)(v111, *(_QWORD *)(v50 + 56) + v51 * (_QWORD)v122, v13);
      v54 = 0;
    }
    else
    {
      v54 = 1;
      v53 = (uint64_t)v111;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v53, v54, 1, v13);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v53, 1, v13) != 1)
      break;
    sub_244701444(v53, &qword_25737FF70);
    v55 = sub_244794008();
    v57 = v56;
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v124)(v123, v43, v13);
    v58 = v127;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v126[0] = v58;
    v127 = 0x8000000000000000;
    v61 = sub_24470F788(v55, v57);
    v62 = *(_QWORD *)(v58 + 16);
    v63 = (v60 & 1) == 0;
    v64 = v62 + v63;
    if (__OFADD__(v62, v63))
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      result = sub_2447955F8();
      __break(1u);
      return result;
    }
    v65 = v60;
    if (*(_QWORD *)(v58 + 24) >= v64)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v68 = (_QWORD *)v126[0];
        if ((v60 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_24478E4B0();
        v68 = (_QWORD *)v126[0];
        if ((v65 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_24478AB5C(v64, isUniquelyReferenced_nonNull_native);
      v66 = sub_24470F788(v55, v57);
      if ((v65 & 1) != (v67 & 1))
        goto LABEL_46;
      v61 = v66;
      v68 = (_QWORD *)v126[0];
      if ((v65 & 1) != 0)
      {
LABEL_6:
        v47 = v122;
        v42 = v116;
        (*(void (**)(unint64_t, _BYTE *, uint64_t))(v116 + 40))(v68[7] + v61 * (_QWORD)v122, v123, v13);
        goto LABEL_7;
      }
    }
    v68[(v61 >> 6) + 8] |= 1 << v61;
    v69 = (uint64_t *)(v68[6] + 16 * v61);
    *v69 = v55;
    v69[1] = v57;
    v47 = v122;
    v42 = v116;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v116 + 32))(v68[7] + v61 * (_QWORD)v122, v123, v13);
    v70 = v68[2];
    v71 = __OFADD__(v70, 1);
    v72 = v70 + 1;
    if (v71)
      goto LABEL_45;
    v68[2] = v72;
    swift_bridgeObjectRetain();
LABEL_7:
    v127 = v126[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v43 = v121;
    (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v121, v13);
    v44 += (unint64_t)v47;
    --v46;
    v41 = (uint64_t)v115;
    if (!v46)
    {
      a1 = v110;
      swift_bridgeObjectRelease();
      v3 = v104;
      v40 = v114;
      v39 = MEMORY[0x24BEE4AF8];
      goto LABEL_26;
    }
  }
  v73 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v42 + 32);
  v74 = v105;
  v73(v105, v53, v13);
  v75 = sub_244794008();
  v122 = v76;
  v123 = (_BYTE *)v75;
  v77 = v117;
  v78 = (void (*)(_BYTE *, _BYTE *, uint64_t))v124;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v124)(v117, v74, v13);
  v79 = v106;
  v78(v106, v43, v13);
  v80 = type metadata accessor for PreviewsJITLinkerState.TargetDescriptionWithDuplicateInstallNameEncountered(0);
  sub_24470665C((unint64_t *)&unk_25737FFB8, type metadata accessor for PreviewsJITLinkerState.TargetDescriptionWithDuplicateInstallNameEncountered, (uint64_t)&unk_24479B0E0);
  swift_allocError();
  v82 = v81;
  v83 = v122;
  *v81 = v123;
  v81[1] = v83;
  v73((_BYTE *)v81 + *(int *)(v80 + 20), (uint64_t)v77, v13);
  v73((_BYTE *)v82 + *(int *)(v80 + 24), (uint64_t)v79, v13);
  swift_willThrow();
  v84 = *(void (**)(_BYTE *, uint64_t))(v42 + 8);
  v84(v74, v13);
  v84(v121, v13);
LABEL_37:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v95 = v108;
  v96 = v109;
LABEL_41:
  v99 = v107;
  sub_2447944B8();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v95 + 8))(v99, v96);
}

uint64_t sub_244768F2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2447943D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t BatchIdentity.workspaceID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BatchIdentity.workspaceID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*BatchIdentity.workspaceID.modify())()
{
  return nullsub_1;
}

uint64_t BatchIdentity.agentBundle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BatchIdentity(0) + 20);
  v4 = sub_244793E64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BatchIdentity.agentBundle.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BatchIdentity(0) + 20);
  v4 = sub_244793E64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BatchIdentity.agentBundle.modify())()
{
  type metadata accessor for BatchIdentity(0);
  return nullsub_1;
}

uint64_t BatchIdentity.agentRole.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BatchIdentity(0) + 24);
  v4 = sub_244793EF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BatchIdentity.agentRole.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BatchIdentity(0) + 24);
  v4 = sub_244793EF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BatchIdentity.agentRole.modify())()
{
  type metadata accessor for BatchIdentity(0);
  return nullsub_1;
}

uint64_t BatchIdentity.agentProcessType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BatchIdentity(0) + 28);
  v4 = sub_244793B28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BatchIdentity.agentProcessType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for BatchIdentity(0) + 28);
  v4 = sub_244793B28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*BatchIdentity.agentProcessType.modify())()
{
  type metadata accessor for BatchIdentity(0);
  return nullsub_1;
}

uint64_t BatchIdentity.agentBootstrapMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BatchIdentity(0) + 32));
}

uint64_t BatchIdentity.agentBootstrapMode.setter(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = a1 & 1;
  result = type metadata accessor for BatchIdentity(0);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

uint64_t (*BatchIdentity.agentBootstrapMode.modify())()
{
  type metadata accessor for BatchIdentity(0);
  return nullsub_1;
}

uint64_t BatchIdentity.deviceType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for BatchIdentity(0);
  return sub_24470D480(v1 + *(int *)(v3 + 36), a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE76F88]);
}

uint64_t BatchIdentity.deviceType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for BatchIdentity(0) + 36);
  return sub_2447692DC(a1, v3);
}

uint64_t sub_2447692DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_244793AD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*BatchIdentity.deviceType.modify())()
{
  type metadata accessor for BatchIdentity(0);
  return nullsub_1;
}

uint64_t BatchIdentity.init(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int *v15;
  char v16;
  uint64_t v17;
  uint64_t v19;

  v6 = sub_244793E64();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_244793E7C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a3 = sub_244793C54();
  a3[1] = v14;
  sub_244793C60();
  sub_244793E70();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v15 = (int *)type metadata accessor for BatchIdentity(0);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)a3 + v15[5], v9, v6);
  sub_244793C84();
  sub_244793C48();
  v16 = sub_244793C6C() & 1;
  v17 = sub_244793C9C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
  *((_BYTE *)a3 + v15[8]) = v16;
  return sub_2447299F8(a2, (uint64_t)a3 + v15[9], (uint64_t (*)(_QWORD))MEMORY[0x24BE76F88]);
}

uint64_t BatchIdentity.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_2447950C4();
  swift_bridgeObjectRelease();
  type metadata accessor for BatchIdentity(0);
  sub_244793E64();
  sub_24470665C(&qword_257380718, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77518]);
  sub_244795028();
  sub_244793EF4();
  sub_24470665C(&qword_257380720, (uint64_t (*)(uint64_t))MEMORY[0x24BE77788], MEMORY[0x24BE77798]);
  sub_244795028();
  sub_244793B28();
  sub_24470665C(&qword_25737D9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77038], MEMORY[0x24BE77048]);
  sub_244795028();
  sub_24479417C();
  sub_2447950C4();
  swift_bridgeObjectRelease();
  return sub_244793AC8();
}

uint64_t BatchIdentity.hashValue.getter()
{
  sub_24479564C();
  swift_bridgeObjectRetain();
  sub_2447950C4();
  swift_bridgeObjectRelease();
  type metadata accessor for BatchIdentity(0);
  sub_244793E64();
  sub_24470665C(&qword_257380718, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77518]);
  sub_244795028();
  sub_244793EF4();
  sub_24470665C(&qword_257380720, (uint64_t (*)(uint64_t))MEMORY[0x24BE77788], MEMORY[0x24BE77798]);
  sub_244795028();
  sub_244793B28();
  sub_24470665C(&qword_25737D9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77038], MEMORY[0x24BE77048]);
  sub_244795028();
  sub_24479417C();
  sub_2447950C4();
  swift_bridgeObjectRelease();
  sub_244793AC8();
  return sub_24479567C();
}

uint64_t sub_24476978C()
{
  swift_bridgeObjectRetain();
  sub_2447950C4();
  swift_bridgeObjectRelease();
  sub_244793E64();
  sub_24470665C(&qword_257380718, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77518]);
  sub_244795028();
  sub_244793EF4();
  sub_24470665C(&qword_257380720, (uint64_t (*)(uint64_t))MEMORY[0x24BE77788], MEMORY[0x24BE77798]);
  sub_244795028();
  sub_244793B28();
  sub_24470665C(&qword_25737D9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77038], MEMORY[0x24BE77048]);
  sub_244795028();
  sub_24479417C();
  sub_2447950C4();
  swift_bridgeObjectRelease();
  return sub_244793AC8();
}

uint64_t sub_2447698E4()
{
  sub_24479564C();
  swift_bridgeObjectRetain();
  sub_2447950C4();
  swift_bridgeObjectRelease();
  sub_244793E64();
  sub_24470665C(&qword_257380718, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77518]);
  sub_244795028();
  sub_244793EF4();
  sub_24470665C(&qword_257380720, (uint64_t (*)(uint64_t))MEMORY[0x24BE77788], MEMORY[0x24BE77798]);
  sub_244795028();
  sub_244793B28();
  sub_24470665C(&qword_25737D9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77038], MEMORY[0x24BE77048]);
  sub_244795028();
  sub_24479417C();
  sub_2447950C4();
  swift_bridgeObjectRelease();
  sub_244793AC8();
  return sub_24479567C();
}

uint64_t Agent.invalidationHandle.getter()
{
  return swift_retain();
}

uint64_t Agent.batchIdentity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24470D480(v1 + OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity, a1, type metadata accessor for BatchIdentity);
}

uint64_t Agent.jitBootstrapConnectionIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier + 8);
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Agent.jitBootstrapAgentServer.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapAgentServer + 8);
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapAgentServer);
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

uint64_t Agent.jitBootstrapTimeout.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapTimeout);
}

unint64_t Agent.pid.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  _BYTE v9[36];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F350);
  MEMORY[0x24BDAC7A8](v0);
  v2 = &v9[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 4];
  sub_2447948FC();
  v3 = type metadata accessor for Process(0);
  v4 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3);
  if (v4 == 1)
  {
    sub_244701444((uint64_t)v2, &qword_25737F350);
    v5 = 0;
  }
  else
  {
    sub_244740168((uint64_t)&v2[*(int *)(v3 + 24)], (uint64_t)v9);
    v6 = sub_2447942A8();
    sub_244707D44((uint64_t)v2, type metadata accessor for Process);
    v5 = v6;
  }
  return v5 | ((unint64_t)(v4 == 1) << 32);
}

uint64_t Agent.deviceType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity;
  v4 = type metadata accessor for BatchIdentity(0);
  return sub_24470D480(v3 + *(int *)(v4 + 36), a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE76F88]);
}

uint64_t Agent.__allocating_init(launcher:batchIdentity:jitBootstrapAgentServer:jitBootstrapTimeout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v9;
  uint64_t v10;

  v9 = a5 & 1;
  v10 = swift_allocObject();
  Agent.init(launcher:batchIdentity:jitBootstrapAgentServer:jitBootstrapTimeout:)(a1, a2, a3, a4, v9);
  return v10;
}

_QWORD *Agent.init(launcher:batchIdentity:jitBootstrapAgentServer:jitBootstrapTimeout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  v6 = v5;
  v29 = a5;
  v27 = a2;
  v28 = a4;
  *(_QWORD *)&v25 = a3;
  v26 = a1;
  v31 = *v5;
  v32 = sub_24479450C();
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_244793834();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794710();
  swift_allocObject();
  v5[2] = sub_244794704();
  sub_2447943C8();
  v13 = (_QWORD *)((char *)v5 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier);
  sub_244793828();
  v14 = sub_24479381C();
  v16 = v15;
  v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v25 = *(_OWORD *)v25;
  v17(v12, v9);
  *v13 = v14;
  v13[1] = v16;
  v18 = OBJC_IVAR____TtC15PreviewShellKit5Agent_processFuture;
  v19 = OBJC_IVAR____TtC15PreviewShellKit5Agent_processPromise;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737F370);
  *(_QWORD *)((char *)v6 + v18) = sub_244794950();
  *(_QWORD *)((char *)v6 + v19) = v20;
  *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC15PreviewShellKit5Agent_updateFutures) = MEMORY[0x24BEE4B00];
  v21 = v26;
  sub_244705F80(v26, (uint64_t)v6 + OBJC_IVAR____TtC15PreviewShellKit5Agent_launcher);
  v22 = v27;
  sub_24470D480(v27, (uint64_t)v6 + OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity, type metadata accessor for BatchIdentity);
  *(_OWORD *)((char *)v6 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapAgentServer) = v25;
  v23 = (char *)v6 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapTimeout;
  *(_QWORD *)v23 = v28;
  v23[8] = v29 & 1;
  v33 = v6;
  sub_2447944F4();
  sub_24470665C((unint64_t *)&qword_257380060, type metadata accessor for Agent, (uint64_t)&protocol conformance descriptor for Agent);
  swift_retain();
  sub_244794524();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v32);
  swift_retain();
  sub_2447948F0();
  swift_release();
  sub_244707D44(v22, type metadata accessor for BatchIdentity);
  __swift_destroy_boxed_opaque_existential_1Tm(v21);
  return v6;
}

uint64_t sub_244769FAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t result;
  int64_t v29;
  int64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257380B10);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_244794AAC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A7C();
  swift_retain_n();
  v10 = sub_244794AA0();
  v11 = sub_244795394();
  v12 = v11;
  if (os_log_type_enabled(v10, v11))
  {
    v13 = swift_slowAlloc();
    v38 = v7;
    v14 = v13;
    v36 = swift_slowAlloc();
    v40[0] = v36;
    *(_DWORD *)v14 = 136315394;
    v34 = v3;
    v35 = v12;
    type metadata accessor for BatchIdentity(0);
    sub_244793E64();
    v37 = v6;
    sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
    v15 = sub_2447955B0();
    v39 = sub_24470600C(v15, v16, v40);
    sub_244795448();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    sub_244794914();
    sub_24470130C(&qword_257380B18, &qword_257380B10, MEMORY[0x24BE76368]);
    v17 = sub_2447955B0();
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v2);
    v39 = sub_24470600C(v17, v19, v40);
    sub_244795448();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2446FC000, v10, (os_log_type_t)v35, "agent (%s invalidated with current process future state %s", (uint8_t *)v14, 0x16u);
    v20 = v36;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v20, -1, -1);
    MEMORY[0x2495188D8](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v37);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_244794944();
  v21 = (uint64_t *)(a1 + OBJC_IVAR____TtC15PreviewShellKit5Agent_updateFutures);
  swift_beginAccess();
  v22 = *v21;
  v23 = v22 + 64;
  v24 = 1 << *(_BYTE *)(v22 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & *(_QWORD *)(v22 + 64);
  v27 = (unint64_t)(v24 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v29 = 0;
  while (1)
  {
    if (v26)
    {
      v26 &= v26 - 1;
      goto LABEL_8;
    }
    v30 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v30 >= v27)
      goto LABEL_28;
    v31 = *(_QWORD *)(v23 + 8 * v30);
    ++v29;
    if (!v31)
    {
      v29 = v30 + 1;
      if (v30 + 1 >= v27)
        goto LABEL_28;
      v31 = *(_QWORD *)(v23 + 8 * v29);
      if (!v31)
      {
        v29 = v30 + 2;
        if (v30 + 2 >= v27)
          goto LABEL_28;
        v31 = *(_QWORD *)(v23 + 8 * v29);
        if (!v31)
        {
          v29 = v30 + 3;
          if (v30 + 3 >= v27)
            goto LABEL_28;
          v31 = *(_QWORD *)(v23 + 8 * v29);
          if (!v31)
          {
            v29 = v30 + 4;
            if (v30 + 4 >= v27)
              goto LABEL_28;
            v31 = *(_QWORD *)(v23 + 8 * v29);
            if (!v31)
              break;
          }
        }
      }
    }
LABEL_27:
    v26 = (v31 - 1) & v31;
LABEL_8:
    result = sub_244794944();
  }
  v32 = v30 + 5;
  if (v32 >= v27)
  {
LABEL_28:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v31 = *(_QWORD *)(v23 + 8 * v32);
  if (v31)
  {
    v29 = v32;
    goto LABEL_27;
  }
  while (1)
  {
    v29 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v29 >= v27)
      goto LABEL_28;
    v31 = *(_QWORD *)(v23 + 8 * v29);
    ++v32;
    if (v31)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24476A484(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  int v35;
  uint8_t *v36;
  _QWORD v38[2];
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49[5];
  int v50[9];
  int v51[9];
  uint64_t v52[6];

  v42 = (uint64_t)a2;
  v41 = *a2;
  v46 = sub_2447945D8();
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for Process(0);
  v5 = MEMORY[0x24BDAC7A8](v47);
  v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v38 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v38 - v11;
  v13 = sub_244794AAC();
  v14 = *(void (**)(char *, uint64_t))(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v48 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v38 - v17;
  sub_244794A7C();
  sub_24470D480(a1, (uint64_t)v12, type metadata accessor for Process);
  v43 = a1;
  sub_24470D480(a1, (uint64_t)v10, type metadata accessor for Process);
  v19 = sub_244794AA0();
  v20 = sub_244795394();
  v21 = os_log_type_enabled(v19, v20);
  v44 = v4;
  if (v21)
  {
    v22 = swift_slowAlloc();
    v40 = v14;
    v23 = v22;
    v39 = swift_slowAlloc();
    v49[0] = v39;
    *(_DWORD *)v23 = 136446466;
    v38[1] = v23 + 4;
    sub_2447943D4();
    sub_24470665C((unint64_t *)&qword_25737F368, (uint64_t (*)(uint64_t))MEMORY[0x24BE761F8], MEMORY[0x24BE76218]);
    v24 = sub_2447955B0();
    v52[0] = sub_24470600C(v24, v25, v49);
    sub_244795448();
    swift_bridgeObjectRelease();
    sub_244707D44((uint64_t)v12, type metadata accessor for Process);
    *(_WORD *)(v23 + 12) = 1026;
    sub_244740168((uint64_t)&v10[*(int *)(v47 + 24)], (uint64_t)v52);
    v26 = sub_2447942A8();
    v4 = v44;
    sub_244707D44((uint64_t)v10, type metadata accessor for Process);
    v51[0] = v26;
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v19, v20, "Taking active preview assertion for %{public}s with pid %{public}d", (uint8_t *)v23, 0x12u);
    v27 = v39;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v27, -1, -1);
    MEMORY[0x2495188D8](v23, -1, -1);

    v28 = (void (*)(char *, uint64_t))*((_QWORD *)v40 + 1);
  }
  else
  {
    sub_244707D44((uint64_t)v10, type metadata accessor for Process);
    sub_244707D44((uint64_t)v12, type metadata accessor for Process);

    v28 = (void (*)(char *, uint64_t))*((_QWORD *)v14 + 1);
  }
  v40 = v28;
  v28(v18, v13);
  sub_244793A14();
  sub_244793A08();
  v29 = v47;
  v30 = v43;
  v31 = v43 + *(int *)(v47 + 24);
  sub_244740168(v31, (uint64_t)v51);
  sub_2447942A8();
  sub_2447939F0();
  swift_release();
  v49[3] = v41;
  v49[4] = sub_24470665C((unint64_t *)&qword_257380060, type metadata accessor for Agent, (uint64_t)&protocol conformance descriptor for Agent);
  v49[0] = v42;
  swift_retain();
  sub_2447945C0();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
  sub_244794A7C();
  sub_24470D480(v30, (uint64_t)v7, type metadata accessor for Process);
  v32 = sub_244794AA0();
  v33 = sub_244795370();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v34 = 67240192;
    sub_244740168((uint64_t)&v7[*(int *)(v29 + 24)], (uint64_t)v49);
    v35 = sub_2447942A8();
    sub_244707D44((uint64_t)v7, type metadata accessor for Process);
    v50[0] = v35;
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v32, v33, "Taking subordinate process assertion for pid %{public}d", v34, 8u);
    v36 = v34;
    v4 = v44;
    MEMORY[0x2495188D8](v36, -1, -1);
  }
  else
  {
    sub_244707D44((uint64_t)v7, type metadata accessor for Process);
  }

  v40(v48, v13);
  sub_244793A08();
  sub_244740168(v31, (uint64_t)v50);
  sub_2447942A8();
  sub_2447939FC();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v4, v46);
}

uint64_t Agent.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  int v4;
  _DWORD v6[2];
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F350);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = 0xE000000000000000;
  sub_2447954CC();
  v7 = v9;
  v8 = v10;
  sub_2447950E8();
  sub_2447943D4();
  sub_24470665C((unint64_t *)&qword_25737F368, (uint64_t (*)(uint64_t))MEMORY[0x24BE761F8], MEMORY[0x24BE76218]);
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  sub_2447948FC();
  v3 = type metadata accessor for Process(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3) == 1)
  {
    sub_244701444((uint64_t)v2, &qword_25737F350);
    v4 = -1;
  }
  else
  {
    sub_244740168((uint64_t)&v2[*(int *)(v3 + 24)], (uint64_t)&v9);
    v4 = sub_2447942A8();
    sub_244707D44((uint64_t)v2, type metadata accessor for Process);
  }
  v6[1] = v4;
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  type metadata accessor for BatchIdentity(0);
  sub_244793E64();
  sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  sub_244793AD4();
  sub_244795538();
  sub_2447950E8();
  return v7;
}

uint64_t Agent.launch(with:killing:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, _BYTE *, uint64_t);
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_BYTE *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  _BYTE v52[4];
  int v53;
  uint64_t v54;
  void (*v55)(_BYTE *, uint64_t, uint64_t);
  void (*v56)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[2];

  v62 = a2;
  v66 = a1;
  v3 = sub_24479450C();
  v63 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v52[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v60 = sub_244793C9C();
  v67 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v68 = v6;
  v59 = &v52[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v7);
  v61 = &v52[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_244794AAC();
  v57 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v52[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for BatchIdentity(0);
  sub_244794A7C();
  swift_retain_n();
  v12 = sub_244794AA0();
  v13 = sub_244795394();
  v14 = os_log_type_enabled(v12, v13);
  v64 = v5;
  v65 = v3;
  v69 = v2;
  if (v14)
  {
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v71[0] = v16;
    *(_DWORD *)v15 = 136446466;
    v17 = sub_244794170();
    v70 = sub_24470600C(v17, v18, v71);
    sub_244795448();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    sub_244793E64();
    sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
    v19 = sub_2447955B0();
    v70 = sub_24470600C(v19, v20, v71);
    sub_244795448();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2446FC000, v12, v13, "Preparing to launch agent in %{public}s mode: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v16, -1, -1);
    MEMORY[0x2495188D8](v15, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(_BYTE *, uint64_t))(v57 + 8))(v11, v58);
  v21 = v66;
  v22 = sub_244793C3C();
  if (*(_QWORD *)(v22 + 16) && (v23 = sub_24470F788(0xD000000000000019, 0x800000024479FB80), (v24 & 1) != 0))
  {
    v25 = (uint64_t *)(*(_QWORD *)(v22 + 56) + 16 * v23);
    v27 = *v25;
    v26 = v25[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = 0;
    v26 = 0;
  }
  swift_bridgeObjectRelease();
  if (v26
    && (v27 == 5457241 && v26 == 0xE300000000000000
     || (sub_2447955D4() & 1) != 0
     || v27 == 49 && v26 == 0xE100000000000000
     || (sub_2447955D4() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    v53 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF40);
    swift_arrayDestroy();
    v53 = 1;
  }
  if (*(_QWORD *)(sub_244793C3C() + 16))
  {
    sub_24470F788(0xD00000000000002BLL, 0x800000024479FBA0);
    if ((v28 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_244794728();
    }
  }
  swift_bridgeObjectRelease();
  type metadata accessor for LegacyPidPromiseFuture();
  v29 = swift_allocObject();
  v71[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380748);
  *(_QWORD *)(v29 + 16) = sub_244794A70();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380750);
  swift_retain();
  v30 = sub_244794980();
  swift_release();
  *(_QWORD *)(v29 + 24) = v30;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_257380758);
  v31 = sub_244795220();
  v56 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v32 = (uint64_t)v61;
  v56(v61, 1, 1, v31);
  v33 = v67;
  v55 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v67 + 16);
  v34 = v59;
  v35 = v60;
  v55(v59, v21, v60);
  v36 = *(unsigned __int8 *)(v33 + 80);
  v54 = v36 | 7;
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v69;
  *(_QWORD *)(v37 + 24) = v29;
  v38 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v33 + 32);
  v38(v37 + ((v36 + 32) & ~v36), v34, v35);
  swift_retain();
  swift_retain();
  v67 = sub_2447949BC();
  v56((_BYTE *)v32, 1, 1, v31);
  v55(v34, v66, v35);
  v39 = (v36 + 24) & ~v36;
  v40 = (v68 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  v41 = swift_allocObject();
  v58 = v29;
  *(_QWORD *)(v41 + 16) = v29;
  v38(v41 + v39, v34, v35);
  v42 = v41 + v40;
  v43 = v69;
  *(_QWORD *)v42 = v69;
  *(_BYTE *)(v42 + 8) = v53;
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = &unk_257380778;
  *(_QWORD *)(v44 + 24) = v41;
  swift_retain();
  swift_retain();
  sub_244794938();
  swift_release();
  sub_244701444(v32, &qword_25737D0D0);
  v45 = v64;
  sub_2447944F4();
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = v43;
  *(_QWORD *)(v46 + 24) = v62;
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = sub_24476F9E8;
  *(_QWORD *)(v47 + 24) = v46;
  type metadata accessor for Process(0);
  swift_retain();
  swift_retain();
  v68 = sub_24479492C();
  swift_release();
  v48 = *(void (**)(_BYTE *, uint64_t))(v63 + 8);
  v49 = v65;
  v48(v45, v65);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  sub_2447949C8();
  sub_2447944E8();
  sub_2447948B4();
  swift_release();
  v48(v45, v49);
  sub_2447944E8();
  sub_2447949F8();
  v48(v45, v49);
  swift_retain();
  sub_2447948CC();
  swift_release();
  sub_2447944E8();
  v50 = sub_2447948B4();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v48(v45, v49);
  return v50;
}

uint64_t sub_24476B768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257380AB8) + 48);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_244707DE8;
  return sub_24476B7F8(a1, v8, a3, a4);
}

uint64_t sub_24476B7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[15] = a4;
  v5[16] = v4;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  v6 = sub_244794AAC();
  v5[17] = v6;
  v5[18] = *(_QWORD *)(v6 - 8);
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  v7 = sub_244793E64();
  v5[22] = v7;
  v5[23] = *(_QWORD *)(v7 - 8);
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24476B8B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t DynamicType;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t (**v40)(uint64_t);
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  os_log_type_t type;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v55;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = sub_244793C3C();
  v3 = OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity;
  *(_QWORD *)(v0 + 208) = OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity;
  v4 = v1 + v3;
  v5 = type metadata accessor for BatchIdentity(0);
  v6 = v5;
  *(_QWORD *)(v0 + 216) = v5;
  v8 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 184);
  v51 = *(_QWORD *)(v0 + 192);
  if (*(_BYTE *)(v4 + *(int *)(v5 + 32)) == 1)
  {
    v50 = *(_QWORD *)(v0 + 128);
    v10 = *(_QWORD *)(v50 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier);
    v9 = *(_QWORD *)(v50 + OBJC_IVAR____TtC15PreviewShellKit5Agent_jitBootstrapConnectionIdentifier + 8);
    v11 = *(_QWORD *)(v0 + 200);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v55 = v2;
    sub_24478D270(v10, v9, 0xD000000000000029, 0x800000024479FE20, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v0 + 224) = v2;
    swift_bridgeObjectRelease();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v13(v11, v4 + *(int *)(v6 + 20), v8);
    sub_244794A88();
    v13(v51, v11, v8);
    swift_retain_n();
    v14 = sub_244794AA0();
    v15 = sub_244795370();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 192);
    v53 = *(_QWORD *)(v0 + 184);
    v18 = *(_QWORD *)(v0 + 168);
    v19 = *(_QWORD *)(v0 + 176);
    v20 = *(_QWORD *)(v0 + 136);
    v21 = *(_QWORD *)(v0 + 144);
    v22 = *(_QWORD *)(v0 + 128);
    if (v16)
    {
      v46 = *(_QWORD *)(v0 + 192);
      v52 = *(_QWORD *)(v0 + 144);
      v23 = swift_slowAlloc();
      v49 = swift_slowAlloc();
      v55 = v49;
      *(_DWORD *)v23 = 136446466;
      sub_244705F80(v22 + OBJC_IVAR____TtC15PreviewShellKit5Agent_launcher, v0 + 16);
      type = v15;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
      DynamicType = swift_getDynamicType();
      v25 = *(_QWORD *)(v0 + 48);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      *(_QWORD *)(v0 + 56) = DynamicType;
      *(_QWORD *)(v0 + 64) = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257380B08);
      v26 = sub_24479507C();
      *(_QWORD *)(v0 + 80) = sub_24470600C(v26, v27, &v55);
      sub_244795448();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v23 + 12) = 2080;
      sub_24470665C(&qword_25737FD30, (uint64_t (*)(uint64_t))MEMORY[0x24BE77508], MEMORY[0x24BE77520]);
      v28 = sub_2447955B0();
      *(_QWORD *)(v0 + 88) = sub_24470600C(v28, v29, &v55);
      sub_244795448();
      swift_bridgeObjectRelease();
      v30 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
      v30(v46, v19);
      _os_log_impl(&dword_2446FC000, v14, type, "Asking for launcher %{public}s for bootstrap method of: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v49, -1, -1);
      MEMORY[0x2495188D8](v23, -1, -1);

      v31 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
    }
    else
    {
      swift_release_n();
      v30 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
      v30(v17, v19);

      v31 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    }
    v31(v18, v20);
    *(_QWORD *)(v0 + 232) = v31;
    *(_QWORD *)(v0 + 240) = v30;
    v42 = (_QWORD *)(*(_QWORD *)(v0 + 128) + OBJC_IVAR____TtC15PreviewShellKit5Agent_launcher);
    v43 = v42[3];
    v44 = v42[4];
    __swift_project_boxed_opaque_existential_1(v42, v43);
    v54 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(**(int **)(v44 + 24) + *(_QWORD *)(v44 + 24));
    v45 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v45;
    *v45 = v0;
    v45[1] = sub_24476BDD4;
    return v54(v0 + 72, *(_QWORD *)(v0 + 200), v43, v44);
  }
  else
  {
    v32 = *(_QWORD *)(v0 + 96);
    v48 = *(_QWORD **)(v0 + 104);
    v33 = *(_QWORD *)(v0 + 128) + v3;
    v34 = v33 + *(int *)(v5 + 20);
    v35 = (int *)type metadata accessor for PreviewAgentLaunchConfiguration(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v32 + v35[9], v34, v8);
    v36 = v33 + *(int *)(v6 + 24);
    v37 = sub_244793EF4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v32, v36, v37);
    sub_244793C24();
    v38 = sub_244793C90();
    v39 = (_QWORD *)(v32 + v35[5]);
    *v39 = 0xD00000000000004FLL;
    v39[1] = 0x800000024479CB70;
    *(_QWORD *)(v32 + v35[7]) = v2;
    *(_QWORD *)(v32 + v35[8]) = v38;
    v40 = (uint64_t (**)(uint64_t))(v32 + v35[10]);
    *v40 = sub_24476D374;
    v40[1] = 0;
    *v48 = 1;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_24476BDD4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_24476BE40()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void (*v6)(uint64_t, uint64_t);
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void (*v16)(uint64_t, uint64_t);
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;

  v1 = *(void **)(v0 + 72);
  v39 = v1;
  if (v1)
  {
    v2 = v1;
    sub_244794A88();
    v3 = sub_244794AA0();
    v4 = sub_244795370();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_2446FC000, v3, v4, "Bootstrap method is running board identity", v5, 2u);
      MEMORY[0x2495188D8](v5, -1, -1);
    }
    v7 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    v6 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
    v8 = *(_QWORD *)(v0 + 200);
    v9 = *(_QWORD *)(v0 + 176);
    v10 = *(_QWORD *)(v0 + 160);
    v11 = *(_QWORD *)(v0 + 136);

    v7(v10, v11);
    v6(v8, v9);
    v37 = 0;
    v12 = sub_24476D388;
  }
  else
  {
    sub_244794A88();
    v13 = sub_244794AA0();
    v14 = sub_244795370();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_2446FC000, v13, v14, "Bootstrap method is legacy pid", v15, 2u);
      MEMORY[0x2495188D8](v15, -1, -1);
    }
    v17 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    v16 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
    v18 = *(_QWORD *)(v0 + 200);
    v19 = *(_QWORD *)(v0 + 176);
    v20 = *(_QWORD *)(v0 + 152);
    v21 = *(_QWORD *)(v0 + 136);

    v17(v20, v21);
    v16(v18, v19);
    swift_retain();
    v37 = *(_QWORD *)(v0 + 112);
    v12 = sub_244771100;
  }
  v36 = v12;
  v22 = *(_QWORD *)(v0 + 216);
  v38 = *(_QWORD *)(v0 + 224);
  v23 = *(_QWORD *)(v0 + 184);
  v24 = *(_QWORD *)(v0 + 176);
  v26 = *(_QWORD *)(v0 + 96);
  v25 = *(_QWORD **)(v0 + 104);
  v27 = *(_QWORD *)(v0 + 128) + *(_QWORD *)(v0 + 208);
  v28 = v27 + *(int *)(v22 + 20);
  v29 = (int *)type metadata accessor for PreviewAgentLaunchConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v26 + v29[9], v28, v24);
  v30 = v27 + *(int *)(v22 + 24);
  v31 = sub_244793EF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v26, v30, v31);
  sub_244793C24();
  v32 = sub_244793C90();
  v33 = (_QWORD *)(v26 + v29[5]);
  *v33 = 0xD00000000000004FLL;
  v33[1] = 0x800000024479CB70;
  *(_QWORD *)(v26 + v29[7]) = v38;
  *(_QWORD *)(v26 + v29[8]) = v32;
  v34 = (_QWORD *)(v26 + v29[10]);
  *v34 = v36;
  v34[1] = v37;
  *v25 = v39;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24476C12C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 240))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24476C1A8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v6 + 189) = a6;
  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 48) = a5;
  *(_QWORD *)(v6 + 32) = a3;
  v8 = sub_244793C9C();
  *(_QWORD *)(v6 + 56) = v8;
  *(_QWORD *)(v6 + 64) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 72) = swift_task_alloc();
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  v9 = sub_244794AAC();
  *(_QWORD *)(v6 + 88) = v9;
  *(_QWORD *)(v6 + 96) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 104) = swift_task_alloc();
  *(_QWORD *)(v6 + 112) = swift_task_alloc();
  v10 = swift_task_alloc();
  v11 = *a2;
  *(_QWORD *)(v6 + 120) = v10;
  *(_QWORD *)(v6 + 128) = v11;
  return swift_task_switch();
}

uint64_t sub_24476C26C()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  NSObject *v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_log_type_t type;
  uint64_t (*typea)(uint64_t, uint64_t, uint64_t, char, char, uint64_t, uint64_t);
  uint64_t v46;

  v1 = *(void **)(v0 + 128);
  if (v1 == (void *)1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  if (!v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v2;
    *v2 = v0;
    v2[1] = sub_24476C758;
    return sub_2447949B0();
  }
  *(_QWORD *)(v0 + 152) = v1;
  v5 = v1;
  v6 = *(_QWORD *)(sub_244793C78() + 16);
  swift_bridgeObjectRelease();
  if (!v6)
  {
    sub_244794A88();
    v28 = sub_244794AA0();
    v29 = sub_24479537C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_2446FC000, v28, v29, "No target descriptions provided in launch payload.", v30, 2u);
      MEMORY[0x2495188D8](v30, -1, -1);
    }
    v31 = *(void **)(v0 + 128);
    v33 = *(_QWORD *)(v0 + 96);
    v32 = *(_QWORD *)(v0 + 104);
    v34 = *(_QWORD *)(v0 + 88);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    sub_244770FA4();
    swift_allocError();
    *v35 = 0u;
    v35[1] = 0u;
    swift_willThrow();
    sub_24472C198(v1, v31 == 0);
    sub_244770F30(v31);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  v8 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 80);
  v9 = *(_QWORD *)(v0 + 56);
  v10 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 40);
  sub_244794A88();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  v12(v7, v11, v9);
  v12(v8, v11, v9);
  v13 = sub_244794AA0();
  type = sub_244795394();
  v14 = os_log_type_enabled(v13, type);
  v15 = *(_QWORD *)(v0 + 112);
  v16 = *(_QWORD *)(v0 + 88);
  v17 = *(_QWORD *)(v0 + 96);
  v19 = *(_QWORD *)(v0 + 72);
  v18 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 56);
  v20 = *(_QWORD *)(v0 + 64);
  if (v14)
  {
    v43 = *(_QWORD *)(v0 + 96);
    v22 = swift_slowAlloc();
    v41 = swift_slowAlloc();
    v46 = v41;
    *(_DWORD *)v22 = 134349314;
    v42 = v16;
    v23 = *(_QWORD *)(sub_244793C78() + 16);
    swift_bridgeObjectRelease();
    v24 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v24(v18, v21);
    *(_QWORD *)(v0 + 16) = v23;
    sub_244795448();
    *(_WORD *)(v22 + 12) = 2080;
    v25 = *(_QWORD *)(sub_244793C78() + 16);
    swift_bridgeObjectRelease();
    if (v25 == 1)
      v26 = 0;
    else
      v26 = 115;
    if (v25 == 1)
      v27 = 0xE000000000000000;
    else
      v27 = 0xE100000000000000;
    *(_QWORD *)(v0 + 24) = sub_24470600C(v26, v27, &v46);
    sub_244795448();
    swift_bridgeObjectRelease();
    v24(v19, v21);
    _os_log_impl(&dword_2446FC000, v13, type, "Loading JIT symbols from %{public}ld target descriptions%s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v41, -1, -1);
    MEMORY[0x2495188D8](v22, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v15, v42);
  }
  else
  {
    v36 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v36(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56));
    v36(v19, v21);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  if (qword_25737CCB0 != -1)
    swift_once();
  v37 = *(_QWORD *)(v0 + 40);
  v38 = *(_QWORD *)(v0 + 128) == 0;
  v39 = swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v39;
  *(_QWORD *)(v39 + 16) = v37;
  sub_24472AFEC(v1, v38);
  typea = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, char, uint64_t, uint64_t))((char *)&dword_257380AD8
                                                                                          + dword_257380AD8);
  v40 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v40;
  *v40 = v0;
  v40[1] = sub_24476CD54;
  return typea((uint64_t)typea, *(_QWORD *)(v0 + 48), (uint64_t)v1, v38, *(_BYTE *)(v0 + 189), (uint64_t)&unk_257380AD0, v39);
}

uint64_t sub_24476C758()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24476C7BC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  char v43;
  uint64_t v44;
  _QWORD *v45;
  os_log_type_t type;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t, char, char, uint64_t, uint64_t);
  uint64_t v52;

  if (*(_BYTE *)(v0 + 188) == 1)
  {
    sub_244794A88();
    v1 = sub_244794AA0();
    v2 = sub_24479537C();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v3 = 0;
      _os_log_impl(&dword_2446FC000, v1, v2, "No pid provided when expected for JIT bootstrap method.", v3, 2u);
      MEMORY[0x2495188D8](v3, -1, -1);
    }
    v4 = *(_QWORD *)(v0 + 120);
    v5 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 96);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    sub_244770EEC();
    swift_allocError();
    *v7 = 0;
    v7[1] = 0;
    swift_willThrow();
    v8 = 0;
LABEL_17:
    sub_244770F30(v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v9 = *(unsigned int *)(v0 + 184);
  *(_QWORD *)(v0 + 152) = v9;
  v10 = *(id *)(v0 + 128);
  v11 = *(_QWORD *)(sub_244793C78() + 16);
  swift_bridgeObjectRelease();
  if (!v11)
  {
    sub_244794A88();
    v33 = sub_244794AA0();
    v34 = sub_24479537C();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_2446FC000, v33, v34, "No target descriptions provided in launch payload.", v35, 2u);
      MEMORY[0x2495188D8](v35, -1, -1);
    }
    v8 = *(void **)(v0 + 128);
    v37 = *(_QWORD *)(v0 + 96);
    v36 = *(_QWORD *)(v0 + 104);
    v38 = *(_QWORD *)(v0 + 88);

    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
    sub_244770FA4();
    swift_allocError();
    *v39 = 0u;
    v39[1] = 0u;
    swift_willThrow();
    sub_24472C198((id)v9, v8 == 0);
    goto LABEL_17;
  }
  v13 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 80);
  v15 = *(_QWORD *)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 64);
  v16 = *(_QWORD *)(v0 + 40);
  sub_244794A88();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v17(v12, v16, v15);
  v17(v13, v16, v15);
  v18 = sub_244794AA0();
  v19 = sub_244795394();
  v20 = os_log_type_enabled(v18, v19);
  v21 = *(_QWORD *)(v0 + 112);
  v22 = *(_QWORD *)(v0 + 80);
  v49 = *(_QWORD *)(v0 + 96);
  v50 = *(_QWORD *)(v0 + 88);
  v23 = *(_QWORD *)(v0 + 64);
  v24 = *(_QWORD *)(v0 + 72);
  v25 = *(_QWORD *)(v0 + 56);
  if (v20)
  {
    v48 = v9;
    v26 = swift_slowAlloc();
    v47 = swift_slowAlloc();
    v52 = v47;
    *(_DWORD *)v26 = 134349314;
    type = v19;
    v27 = *(_QWORD *)(sub_244793C78() + 16);
    swift_bridgeObjectRelease();
    v28 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v28(v22, v25);
    *(_QWORD *)(v0 + 16) = v27;
    sub_244795448();
    *(_WORD *)(v26 + 12) = 2080;
    v29 = *(_QWORD *)(sub_244793C78() + 16);
    swift_bridgeObjectRelease();
    if (v29 == 1)
      v30 = 0;
    else
      v30 = 115;
    if (v29 == 1)
      v31 = 0xE000000000000000;
    else
      v31 = 0xE100000000000000;
    *(_QWORD *)(v0 + 24) = sub_24470600C(v30, v31, &v52);
    sub_244795448();
    swift_bridgeObjectRelease();
    v28(v24, v25);
    _os_log_impl(&dword_2446FC000, v18, type, "Loading JIT symbols from %{public}ld target descriptions%s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v47, -1, -1);
    v32 = v26;
    v9 = v48;
    MEMORY[0x2495188D8](v32, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v21, v50);
  }
  else
  {
    v41 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v41(v22, *(_QWORD *)(v0 + 56));
    v41(v24, v25);

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v21, v50);
  }
  if (qword_25737CCB0 != -1)
    swift_once();
  v42 = *(_QWORD *)(v0 + 40);
  v43 = *(_QWORD *)(v0 + 128) == 0;
  v44 = swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v44;
  *(_QWORD *)(v44 + 16) = v42;
  sub_24472AFEC((id)v9, v43);
  v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, char, uint64_t, uint64_t))((char *)&dword_257380AD8
                                                                                        + dword_257380AD8);
  v45 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v45;
  *v45 = v0;
  v45[1] = sub_24476CD54;
  return v51((uint64_t)v51, *(_QWORD *)(v0 + 48), v9, v43, *(_BYTE *)(v0 + 189), (uint64_t)&unk_257380AD0, v44);
}

uint64_t sub_24476CCE8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24476CD54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc();
  sub_24472C198(*(id *)(v2 + 152), *(_QWORD *)(v2 + 128) == 0);
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24476CDDC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  sub_24472C198(*(id *)(v0 + 152), v1 == 0);
  sub_244770F30(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24476CE5C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 128);
  sub_24472C198(*(id *)(v0 + 152), v1 == 0);
  sub_244770F30(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24476CEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  return swift_task_switch();
}

uint64_t sub_24476CEFC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = sub_244793C78();
  *(_QWORD *)(v0 + 32) = v1;
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_257380AE8 + dword_257380AE8);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_24476CF70;
  return v4(v1);
}

uint64_t sub_24476CF70()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_24476CFE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_24475268C();
  if (!v1)
    swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24476D038(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257380AB8) + 48);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_244706734;
  return v9(a2, v6);
}

uint64_t sub_24476D0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F350);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244705F80(a3 + OBJC_IVAR____TtC15PreviewShellKit5Agent_launcher, (uint64_t)v16);
  v10 = v17;
  v11 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  if (a4)
  {
    sub_2447948FC();
  }
  else
  {
    v12 = type metadata accessor for Process(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
  }
  v13 = sub_24473DD98(a1, (uint64_t)v9, v10, v11);
  sub_244701444((uint64_t)v9, &qword_25737F350);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  return v13;
}

uint64_t sub_24476D1D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257380AB0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24470D480(a1, (uint64_t)v6, type metadata accessor for Process);
  return sub_2447299F8((uint64_t)v6, a2, type metadata accessor for Process);
}

uint64_t sub_24476D25C()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380AA0);
  sub_24470130C(&qword_257380AA8, &qword_257380AA0, MEMORY[0x24BE76C78]);
  sub_244794878();
  return swift_release();
}

__n128 sub_24476D334@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  __n128 result;
  __int128 v6;

  v3 = a1 + *(int *)(type metadata accessor for Process(0) + 24);
  v4 = *(_BYTE *)(v3 + 32);
  result = *(__n128 *)v3;
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 32) = v4;
  return result;
}

uint64_t sub_24476D374(uint64_t a1)
{
  return sub_24476D39C(a1, MEMORY[0x24BEE7908], "pid_t callback used in full binary mode");
}

uint64_t sub_24476D388(uint64_t a1)
{
  return sub_24476D39C(a1, MEMORY[0x24BEE7910], "pid_t callback used when running board identity was expected");
}

uint64_t sub_24476D39C(uint64_t a1, uint64_t (*a2)(void), const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;

  v5 = sub_244794AAC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A88();
  v9 = sub_244794AA0();
  v10 = a2();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_2446FC000, v9, v10, a3, v11, 2u);
    MEMORY[0x2495188D8](v11, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24476D490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v17[4];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = sub_244794AAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A88();
  v8 = sub_244794AA0();
  v9 = sub_244795370();
  if (os_log_type_enabled(v8, v9))
  {
    v18 = a2;
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v20 = v11;
    *(_DWORD *)v10 = 136446210;
    if ((a1 & 0x100000000) != 0)
    {
      v12 = 0xE500000000000000;
      v13 = 0x3E6C696E3CLL;
    }
    else
    {
      LODWORD(v19) = a1;
      v13 = sub_2447955B0();
      v12 = v14;
    }
    v19 = sub_24470600C(v13, v12, &v20);
    sub_244795448();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2446FC000, v8, v9, "pid_t callback used: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v11, -1, -1);
    MEMORY[0x2495188D8](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    a2 = v18;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v20 = *(_QWORD *)(a2 + 16);
  MEMORY[0x24BDAC7A8](v20);
  swift_retain();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257380AA0);
  v17[3] = sub_24470130C(&qword_257380AA8, &qword_257380AA0, MEMORY[0x24BE76C78]);
  v17[1] = v15;
  v17[2] = MEMORY[0x24BEE4AE0] + 8;
  v17[0] = v17;
  sub_244794878();
  return swift_release();
}

uint64_t Agent.applyUpdateFor(payload:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD v49[2];
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v2 = v1;
  v4 = sub_244793FD8();
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  v5 = *(_QWORD *)(v52 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_244794AAC();
  v55 = *(_QWORD *)(v10 - 8);
  v56 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v49 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v49 - v17;
  v54 = sub_244793FCC();
  v19 = v1 + OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity;
  if ((*(_BYTE *)(v19 + *(int *)(type metadata accessor for BatchIdentity(0) + 32)) & 1) == 0)
  {
    sub_244794A88();
    v31 = sub_244794AA0();
    v32 = sub_244795370();
    v33 = os_log_type_enabled(v31, v32);
    v34 = v56;
    if (v33)
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v35 = 67240192;
      LODWORD(v57) = v54;
      sub_244795448();
      _os_log_impl(&dword_2446FC000, v31, v32, "Full binary mode. Not looking for JIT products for pid: %{public}d", v35, 8u);
      MEMORY[0x2495188D8](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v55 + 8))(v18, v34);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257380790);
    LOBYTE(v57) = 0;
    return sub_244794998();
  }
  v49[1] = v5;
  v50 = v9;
  v20 = v2;
  v51 = v6;
  v21 = sub_244793FA8();
  if (!*(_QWORD *)(v21 + 16))
  {
    v36 = v56;
    swift_bridgeObjectRelease();
    sub_244794A88();
    v37 = sub_244794AA0();
    v38 = sub_244795370();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v39 = 67240192;
      LODWORD(v57) = v54;
      sub_244795448();
      _os_log_impl(&dword_2446FC000, v37, v38, "Found no XOJIT loadable products, pid: %{public}d", v39, 8u);
      MEMORY[0x2495188D8](v39, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v55 + 8))(v13, v36);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257380790);
    LOBYTE(v57) = 0;
    return sub_244794998();
  }
  v22 = v16;
  sub_244794A88();
  swift_bridgeObjectRetain();
  v23 = sub_244794AA0();
  v24 = sub_244795370();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    *(_DWORD *)v25 = 134218240;
    v57 = *(_QWORD *)(v21 + 16);
    sub_244795448();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 1026;
    v26 = v54;
    LODWORD(v57) = v54;
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v23, v24, "Found %ld XOJIT loadable products, pid: %{public}d", (uint8_t *)v25, 0x12u);
    v27 = v25;
    v28 = v56;
    MEMORY[0x2495188D8](v27, -1, -1);

    v29 = v20;
    v30 = v50;
  }
  else
  {

    swift_bridgeObjectRelease();
    v26 = v54;
    v29 = v20;
    v30 = v50;
    v28 = v56;
  }
  (*(void (**)(char *, uint64_t))(v55 + 8))(v22, v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380790);
  v41 = sub_244795220();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v30, 1, 1, v41);
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v29;
  *(_DWORD *)(v42 + 24) = v26;
  *(_QWORD *)(v42 + 32) = v21;
  swift_retain();
  v40 = sub_2447949BC();
  v44 = v51;
  v43 = v52;
  v45 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, a1, v53);
  v46 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v47 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v47 + v46, v44, v45);
  sub_244794908();
  swift_release();
  return v40;
}

uint64_t sub_24476DD2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 32) = a2;
  *(_QWORD *)(v4 + 40) = a4;
  *(_DWORD *)(v4 + 236) = a3;
  *(_QWORD *)(v4 + 24) = a1;
  v5 = sub_244793E64();
  *(_QWORD *)(v4 + 48) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 56) = v6;
  *(_QWORD *)(v4 + 64) = *(_QWORD *)(v6 + 64);
  *(_QWORD *)(v4 + 72) = swift_task_alloc();
  v7 = sub_244794AAC();
  *(_QWORD *)(v4 + 80) = v7;
  *(_QWORD *)(v4 + 88) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 96) = swift_task_alloc();
  *(_QWORD *)(v4 + 104) = swift_task_alloc();
  *(_QWORD *)(v4 + 112) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24476DDDC()
{
  uint64_t *v0;
  char *v1;
  _QWORD *v2;

  if (qword_25737CCB0 != -1)
    swift_once();
  v1 = (char *)sub_24472F2A0(v0[4]);
  v0[15] = *(_QWORD *)&v1[OBJC_IVAR____TtC15PreviewShellKitP33_1C89A0595A9F44E3FEB21A13643147FF23PreviewsJITConfigurator_future];
  swift_retain();

  v2 = (_QWORD *)swift_task_alloc();
  v0[16] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_24476DEEC;
  return sub_2447949B0();
}

uint64_t sub_24476DEEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24476DF58()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24476DFB4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  int v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint8_t *v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;

  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 16);
  sub_244794A88();
  v1 = sub_244794AA0();
  v2 = sub_244795370();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_DWORD *)(v0 + 236);
    v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v4 = 67240192;
    *(_DWORD *)(v0 + 232) = v3;
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v1, v2, "Loading products from shell update payload for pid: %{public}d", v4, 8u);
    MEMORY[0x2495188D8](v4, -1, -1);
  }
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 40);

  v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  *(_QWORD *)(v0 + 152) = v9;
  v9(v5, v6);
  v10 = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v0 + 160) = v10;
  if (v10)
  {
    v12 = *(_QWORD *)(v0 + 56);
    v11 = *(_QWORD *)(v0 + 64);
    v13 = *(_QWORD *)(sub_2447941B8() - 8);
    *(_QWORD *)(v0 + 168) = v13;
    *(_DWORD *)(v0 + 240) = *(_DWORD *)(v13 + 80);
    *(_BYTE *)(v0 + 245) = 0;
    *(_QWORD *)(v0 + 216) = v10;
    *(_QWORD *)(v0 + 176) = 0;
    v14 = *(_QWORD **)(v0 + 144);
    v15 = *(_QWORD *)(v0 + 72);
    v16 = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRetain();
    v17 = sub_2447941AC();
    *(_QWORD *)(v0 + 184) = v17;
    v18 = v14[3];
    v36 = v14[4];
    v37 = v14[5];
    v19 = OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity;
    v20 = v18 + v19 + *(int *)(type metadata accessor for BatchIdentity(0) + 20);
    v21 = v15;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v15, v20, v16);
    v22 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v23 = (v11 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v24 = swift_allocObject();
    *(_QWORD *)(v0 + 192) = v24;
    *(_QWORD *)(v24 + 16) = v14;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32))(v24 + v22, v21, v16);
    *(_QWORD *)(v24 + v23) = v17;
    v25 = (_QWORD *)(v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8));
    *v25 = v36;
    v25[1] = v37;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v26 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v26;
    *v26 = v0;
    v26[1] = sub_24476E358;
    return sub_2447953AC();
  }
  else
  {
    sub_244794A88();
    v28 = sub_244794AA0();
    v29 = sub_244795370();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = *(_DWORD *)(v0 + 236);
      v31 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v31 = 67240192;
      *(_DWORD *)(v0 + 224) = v30;
      sub_244795448();
      v32 = *(_QWORD *)(v0 + 96);
      _os_log_impl(&dword_2446FC000, v28, v29, "No products loaded from shell update payload for pid: %{public}d", v31, 8u);
      MEMORY[0x2495188D8](v31, -1, -1);
    }
    else
    {
      v32 = *(_QWORD *)(v0 + 96);
    }
    v33 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
    v34 = *(_QWORD *)(v0 + 80);
    v35 = *(_BYTE **)(v0 + 24);
    swift_release();

    v33(v32, v34);
    *v35 = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_24476E358()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24476E3C4()
{
  uint64_t v0;
  uint64_t result;
  unint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t *v5;
  NSObject *v6;
  os_log_type_t v7;
  int v8;
  uint8_t *v9;
  char v10;
  const char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  result = swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 176) + 1;
  if ((*(_BYTE *)(v0 + 244) & 1) != 0)
  {
    if (v3 == v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    *(_BYTE *)(v0 + 245) = 1;
    if (v3 > v2)
      v2 = v3;
    *(_QWORD *)(v0 + 216) = v2;
  }
  else
  {
    if (v3 == v2)
    {
      v4 = *(_BYTE *)(v0 + 245);
      swift_bridgeObjectRelease();
      if ((v4 & 1) == 0)
      {
        v5 = (uint64_t *)(v0 + 96);
        sub_244794A88();
        v6 = sub_244794AA0();
        v7 = sub_244795370();
        if (!os_log_type_enabled(v6, v7))
        {
          v10 = 0;
          v33 = *v5;
          goto LABEL_19;
        }
        v27 = *(_DWORD *)(v0 + 236);
        v9 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v9 = 67240192;
        *(_DWORD *)(v0 + 224) = v27;
        sub_244795448();
        v10 = 0;
        v11 = "No products loaded from shell update payload for pid: %{public}d";
        goto LABEL_17;
      }
LABEL_6:
      v5 = (uint64_t *)(v0 + 104);
      sub_244794A88();
      v6 = sub_244794AA0();
      v7 = sub_244795370();
      if (!os_log_type_enabled(v6, v7))
      {
        v33 = *v5;
        v10 = 1;
LABEL_19:
        v28 = *(void (**)(uint64_t, uint64_t))(v0 + 152);
        v29 = *(_QWORD *)(v0 + 80);
        v30 = *(char **)(v0 + 24);
        swift_release();

        v28(v33, v29);
        *v30 = v10;
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      v8 = *(_DWORD *)(v0 + 236);
      v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v9 = 67240192;
      *(_DWORD *)(v0 + 228) = v8;
      sub_244795448();
      v10 = 1;
      v11 = "Finished loading products from shell update payload for pid: %{public}d";
LABEL_17:
      v33 = *v5;
      _os_log_impl(&dword_2446FC000, v6, v7, v11, v9, 8u);
      MEMORY[0x2495188D8](v9, -1, -1);
      goto LABEL_19;
    }
    v2 = *(_QWORD *)(v0 + 216);
  }
  *(_QWORD *)(v0 + 176) = v3;
  if (v3 == v2)
  {
    __break(1u);
  }
  else
  {
    v12 = *(_QWORD **)(v0 + 144);
    v14 = *(_QWORD *)(v0 + 64);
    v13 = *(_QWORD *)(v0 + 72);
    v15 = *(_QWORD *)(v0 + 48);
    v16 = *(_QWORD *)(v0 + 56);
    v17 = sub_2447941AC();
    *(_QWORD *)(v0 + 184) = v17;
    v18 = v12[3];
    v31 = v12[4];
    v32 = v12[5];
    v19 = OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity;
    v20 = v18 + v19 + *(int *)(type metadata accessor for BatchIdentity(0) + 20);
    v21 = v13;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v13, v20, v15);
    v22 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v23 = (v14 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v24 = swift_allocObject();
    *(_QWORD *)(v0 + 192) = v24;
    *(_QWORD *)(v24 + 16) = v12;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v16 + 32))(v24 + v22, v21, v15);
    *(_QWORD *)(v24 + v23) = v17;
    v25 = (_QWORD *)(v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8));
    *v25 = v31;
    v25[1] = v32;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v26 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v26;
    *v26 = v0;
    v26[1] = sub_24476E358;
    return sub_2447953AC();
  }
  return result;
}

uint64_t sub_24476E77C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24476E7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  Class isa;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  int v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  os_log_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  int v33;
  _QWORD *v35;
  os_log_t v36;
  objc_class *v37;
  uint64_t v38;

  v4 = sub_244793FD8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v35 - v9;
  v11 = sub_244794AAC();
  isa = v11[-1].isa;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v35 - v16;
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    v37 = isa;
    v18 = *(id *)a1;
    v19 = *(id *)a1;
    sub_244794A88();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
    v20 = v18;
    v21 = v18;
    v22 = sub_244794AA0();
    v23 = sub_24479537C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v35 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v24 = 67240450;
      v36 = v22;
      v25 = sub_244793FCC();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      LODWORD(v38) = v25;
      sub_244795448();
      *(_WORD *)(v24 + 8) = 2114;
      v26 = v18;
      v27 = _swift_stdlib_bridgeErrorToNSError();
      v38 = v27;
      sub_244795448();
      v28 = v35;
      *v35 = v27;
      sub_244707D38(v18, 1);
      sub_244707D38(v18, 1);
      v29 = v36;
      _os_log_impl(&dword_2446FC000, v36, v23, "JIT (pid: %{public}d) for shell update failed: %{public}@", (uint8_t *)v24, 0x12u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v28, -1, -1);
      MEMORY[0x2495188D8](v24, -1, -1);

      sub_244707D38(v18, 1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      sub_244707D38(v18, 1);
      sub_244707D38(v18, 1);

    }
    v17 = v15;
    isa = v37;
  }
  else
  {
    sub_244794A88();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a2, v4);
    v30 = sub_244794AA0();
    v31 = sub_244795370();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v36 = v11;
      v37 = isa;
      *(_DWORD *)v32 = 67240192;
      v33 = sub_244793FCC();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      LODWORD(v38) = v33;
      v11 = v36;
      isa = v37;
      sub_244795448();
      _os_log_impl(&dword_2446FC000, v30, v31, "JIT (pid: %{public}d) for shell update succeeded", v32, 8u);
      MEMORY[0x2495188D8](v32, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }

  }
  return (*((uint64_t (**)(char *, NSObject *))isa + 1))(v17, v11);
}

uint64_t Agent.kill()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_24479450C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2447944F4();
  swift_retain();
  v4 = sub_24479492C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_24476ECDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = sub_24479450C();
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_244793F18();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v22 = v2;
  v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC15PreviewShellKit5Agent_updateFutures);
  swift_beginAccess();
  v12 = *v11;
  if (*(_QWORD *)(*v11 + 16) && (v13 = sub_24470F6F0(a2), (v14 & 1) != 0))
  {
    v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
    swift_endAccess();
    if (v15 != a1)
    {
      swift_retain();
      sub_244794944();
      swift_release();
    }
  }
  else
  {
    swift_endAccess();
  }
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v11;
  *v11 = 0x8000000000000000;
  sub_24478D3E4(a1, (uint64_t)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), isUniquelyReferenced_nonNull_native);
  *v11 = v25;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_endAccess();
  sub_2447944F4();
  v16((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  v18 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v18, (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(_QWORD *)(v19 + ((v10 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  swift_retain();
  swift_retain();
  sub_2447948C0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v7, v24);
}

uint64_t sub_24476EF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t result;

  v6 = (uint64_t *)(a2 + OBJC_IVAR____TtC15PreviewShellKit5Agent_updateFutures);
  swift_beginAccess();
  v7 = *v6;
  if (!*(_QWORD *)(*v6 + 16))
    return swift_endAccess();
  v8 = sub_24470F6F0(a3);
  if ((v9 & 1) == 0)
    return swift_endAccess();
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
  result = swift_endAccess();
  if (v10 == a4)
  {
    swift_beginAccess();
    sub_244789F54(a3);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t Agent.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC15PreviewShellKit5Agent_identifier;
  v2 = sub_2447943D4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + OBJC_IVAR____TtC15PreviewShellKit5Agent_launcher);
  sub_244707D44(v0 + OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity, type metadata accessor for BatchIdentity);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Agent.__deallocating_deinit()
{
  Agent.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_24476F124()
{
  return Agent.description.getter();
}

unint64_t sub_24476F144()
{
  return 0xD000000000000020;
}

uint64_t sub_24476F160()
{
  sub_244771378();
  return sub_244794668();
}

uint64_t sub_24476F188()
{
  sub_244771378();
  return sub_244794638();
}

unint64_t sub_24476F1B0()
{
  return 0xD000000000000019;
}

uint64_t sub_24476F1CC()
{
  sub_2447713BC();
  return sub_244794668();
}

uint64_t sub_24476F1F4()
{
  sub_2447713BC();
  return sub_244794638();
}

uint64_t sub_24476F21C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380AA0);
  sub_24470130C(&qword_257380AA8, &qword_257380AA0, MEMORY[0x24BE76C78]);
  return sub_244794878();
}

_QWORD *sub_24476F2D8(_QWORD *result)
{
  _QWORD *v1;

  v1 = result;
  if (*result)
  {
    sub_244794A04();
    result = (_QWORD *)swift_release();
  }
  *v1 = 0;
  return result;
}

uint64_t sub_24476F334()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

void *sub_24476F360(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_24479558C();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_24476F3F4@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t _s15PreviewShellKit13BatchIdentityV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_2447955D4(), v6 = 0, (v5 & 1) != 0))
  {
    v7 = type metadata accessor for BatchIdentity(0);
    if ((MEMORY[0x2495169A0]((char *)a1 + *(int *)(v7 + 20), (char *)a2 + *(int *)(v7 + 20)) & 1) != 0)
    {
      sub_244793EF4();
      sub_24470665C(&qword_257380B20, (uint64_t (*)(uint64_t))MEMORY[0x24BE77788], MEMORY[0x24BE777A0]);
      sub_244795160();
      sub_244795160();
      if (v18 == v16 && v19 == v17)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v8 = sub_2447955D4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v6 = 0;
        if ((v8 & 1) == 0)
          return v6 & 1;
      }
      sub_244793B28();
      sub_24470665C(&qword_257380B28, (uint64_t (*)(uint64_t))MEMORY[0x24BE77038], MEMORY[0x24BE77058]);
      sub_244795160();
      sub_244795160();
      if (v18 == v16 && v19 == v17)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v9 = sub_2447955D4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v6 = 0;
        if ((v9 & 1) == 0)
          return v6 & 1;
      }
      v10 = sub_24479417C();
      v12 = v11;
      if (v10 == sub_24479417C() && v12 == v13)
      {
        swift_bridgeObjectRelease_n();
LABEL_20:
        v6 = sub_244793ABC();
        return v6 & 1;
      }
      v14 = sub_2447955D4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = 0;
      if ((v14 & 1) != 0)
        goto LABEL_20;
    }
    else
    {
      v6 = 0;
    }
  }
  return v6 & 1;
}

uint64_t type metadata accessor for Process(uint64_t a1)
{
  return sub_244706AAC(a1, qword_257380A60);
}

uint64_t sub_24476F6B0()
{
  uint64_t v0;

  return sub_244769FAC(v0);
}

uint64_t type metadata accessor for Agent(uint64_t a1)
{
  return sub_244706AAC(a1, qword_257380878);
}

uint64_t sub_24476F6CC(uint64_t a1)
{
  uint64_t *v1;

  return sub_24476A484(a1, v1);
}

uint64_t type metadata accessor for LegacyPidPromiseFuture()
{
  return objc_opt_self();
}

uint64_t sub_24476F6F4()
{
  return sub_24476F21C();
}

uint64_t sub_24476F6FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244793C9C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24476F778(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_244793C9C() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_244707DE8;
  return sub_24476B768(a1, v5, v6, v7);
}

uint64_t sub_24476F7FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244793C9C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24476F88C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;

  v6 = *(_QWORD *)(sub_244793C9C() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v2 + 16);
  v9 = v2 + v7;
  v10 = v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  v11 = *(_QWORD *)v10;
  v12 = *(_BYTE *)(v10 + 8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v13;
  *v13 = v3;
  v13[1] = sub_244707DE8;
  return sub_24476C1A8(a1, a2, v8, v9, v11, v12);
}

uint64_t sub_24476F93C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_244706734;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_257380780 + dword_257380780))(a1, a2, v6);
}

uint64_t sub_24476F9BC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24476F9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_24476D0BC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_24476F9F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24476FA14(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257380AB8);
  return v3(a1, a1 + *(int *)(v4 + 48));
}

uint64_t sub_24476FA58()
{
  return sub_24476D25C();
}

uint64_t sub_24476FA60()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24476FA8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_DWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_244707DE8;
  return sub_24476DD2C(a1, v4, v5, v6);
}

uint64_t sub_24476FAFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_244793FD8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_24476FB5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_244793FD8() - 8) + 80);
  return sub_24476E7F8(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t *sub_24476FB98(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC15PreviewShellKit5Agent_launcher);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC15PreviewShellKit5Agent_launcher + 24);
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  return sub_24473D7A0(a1, v4, v5);
}

uint64_t sub_24476FBEC()
{
  return sub_24470665C(&qword_2573807A8, type metadata accessor for BatchIdentity, (uint64_t)&protocol conformance descriptor for BatchIdentity);
}

_QWORD *initializeBufferWithCopyOfBuffer for BatchIdentity(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_244793E64();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_244793EF4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[7];
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_244793B28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = a3[9];
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v22 = (char *)v4 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_2447940B0();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = sub_244793AD4();
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
  }
  return v4;
}

uint64_t destroy for BatchIdentity(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_244793EF4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[7];
  v9 = sub_244793B28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + a2[9];
  v11 = sub_2447940B0();
  v12 = *(_QWORD *)(v11 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  return result;
}

_QWORD *initializeWithCopy for BatchIdentity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_244793E64();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_244793EF4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_244793B28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2447940B0();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = sub_244793AD4();
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  return a1;
}

_QWORD *assignWithCopy for BatchIdentity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  uint64_t v25;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244793E64();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_244793EF4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_244793B28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v18 = a3[9];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_2447940B0();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  LODWORD(v16) = v23(v19, 1, v21);
  v24 = v23(v20, 1, v21);
  if (!(_DWORD)v16)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v19, v20, v21);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    v25 = sub_244793AD4();
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

_OWORD *initializeWithTake for BatchIdentity(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244793E64();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_244793EF4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_244793B28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_2447940B0();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = sub_244793AD4();
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

_QWORD *assignWithTake for BatchIdentity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_244793E64();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_244793EF4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_244793B28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2447940B0();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  LODWORD(v17) = v24(v20, 1, v22);
  v25 = v24(v21, 1, v22);
  if (!(_DWORD)v17)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v20, v21, v22);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    v26 = sub_244793AD4();
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchIdentity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244770498(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_244793E64();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_244793EF4();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v13 = sub_244793B28();
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[7];
        }
        else
        {
          v10 = sub_244793AD4();
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[9];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for BatchIdentity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24477058C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_244793E64();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_244793EF4();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v13 = sub_244793B28();
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[7];
        }
        else
        {
          v10 = sub_244793AD4();
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[9];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_244770670()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = sub_244793E64();
  if (v1 <= 0x3F)
  {
    result = sub_244793EF4();
    if (v2 <= 0x3F)
    {
      result = sub_244793B28();
      if (v3 <= 0x3F)
      {
        result = sub_244793AD4();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_244770740()
{
  return type metadata accessor for Agent(0);
}

uint64_t sub_244770748()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2447943D4();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for BatchIdentity(319);
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for Agent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Agent.__allocating_init(launcher:batchIdentity:jitBootstrapAgentServer:jitBootstrapTimeout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v5 + 160))(a1, a2, a3, a4, a5 & 1);
}

uint64_t *sub_244770828(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2447943D4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_244793E64();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    v13[32] = v14[32];
  }
  return a1;
}

uint64_t sub_2447708F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_2447943D4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_244793E64();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_244770950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v6 = sub_2447943D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  return a1;
}

uint64_t sub_2447709F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;

  v6 = sub_2447943D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = (__int128 *)(a2 + v11);
  v14 = *v13;
  v15 = v13[1];
  *(_BYTE *)(v12 + 32) = *((_BYTE *)v13 + 32);
  *(_OWORD *)v12 = v14;
  *(_OWORD *)(v12 + 16) = v15;
  return a1;
}

uint64_t sub_244770A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v6 = sub_2447943D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  return a1;
}

uint64_t sub_244770B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v6 = sub_2447943D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_BYTE *)(v12 + 32) = *(_BYTE *)(v13 + 32);
  return a1;
}

uint64_t sub_244770BD0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244770BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = sub_2447943D4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_244793E64();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 32);
  if (v14 > 1)
    return (v14 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_244770C84()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244770C90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_2447943D4();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_244793E64();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24) + 32) = -(char)a2;
  return result;
}

uint64_t sub_244770D38()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2447943D4();
  if (v1 <= 0x3F)
  {
    result = sub_244793E64();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_244770DC4()
{
  return sub_24470665C(&qword_25737D9D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE761F8], MEMORY[0x24BE76208]);
}

uint64_t sub_244770DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244793F18();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244770E80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_244793F18() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_24476EF6C(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

_QWORD *sub_244770ED8(_QWORD *a1)
{
  return sub_24477111C(a1);
}

unint64_t sub_244770EEC()
{
  unint64_t result;

  result = qword_257380AC0;
  if (!qword_257380AC0)
  {
    result = MEMORY[0x249518824](&unk_24479BA2C, &type metadata for NoPidProvided);
    atomic_store(result, &qword_257380AC0);
  }
  return result;
}

void sub_244770F30(id a1)
{
  if (a1 != (id)1)

}

uint64_t sub_244770F40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_244707DE8;
  v6[2] = a2;
  v6[3] = v5;
  return swift_task_switch();
}

unint64_t sub_244770FA4()
{
  unint64_t result;

  result = qword_257380AE0;
  if (!qword_257380AE0)
  {
    result = MEMORY[0x249518824](&unk_24479B9EC, &type metadata for NoObjectFilesProvidedForJIT);
    atomic_store(result, (unint64_t *)&qword_257380AE0);
  }
  return result;
}

uint64_t objectdestroy_30Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244793E64();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_244771090()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_244793E64() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_244767E9C(*(_QWORD **)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_244771100(unint64_t a1)
{
  uint64_t v1;

  return sub_24476D490(a1 | ((HIDWORD(a1) & 1) << 32), v1);
}

_QWORD *sub_24477111C(_QWORD *a1)
{
  return sub_24476F2D8(a1);
}

uint64_t sub_24477114C(_QWORD *a1)
{
  uint64_t v1;

  swift_release();
  *a1 = v1;
  return swift_retain();
}

ValueMetadata *type metadata accessor for NoObjectFilesProvidedForJIT()
{
  return &type metadata for NoObjectFilesProvidedForJIT;
}

uint64_t getEnumTagSinglePayload for NoPidProvided(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NoPidProvided(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NoPidProvided()
{
  return &type metadata for NoPidProvided;
}

unint64_t sub_244771258()
{
  unint64_t result;

  result = qword_257380B30;
  if (!qword_257380B30)
  {
    result = MEMORY[0x249518824](&unk_24479B804, &type metadata for NoPidProvided);
    atomic_store(result, (unint64_t *)&qword_257380B30);
  }
  return result;
}

unint64_t sub_2447712A0()
{
  unint64_t result;

  result = qword_257380B38;
  if (!qword_257380B38)
  {
    result = MEMORY[0x249518824](&unk_24479B7DC, &type metadata for NoPidProvided);
    atomic_store(result, (unint64_t *)&qword_257380B38);
  }
  return result;
}

unint64_t sub_2447712EC()
{
  unint64_t result;

  result = qword_257380B40;
  if (!qword_257380B40)
  {
    result = MEMORY[0x249518824](&unk_24479B90C, &type metadata for NoObjectFilesProvidedForJIT);
    atomic_store(result, (unint64_t *)&qword_257380B40);
  }
  return result;
}

unint64_t sub_244771334()
{
  unint64_t result;

  result = qword_257380B48;
  if (!qword_257380B48)
  {
    result = MEMORY[0x249518824](&unk_24479B8E4, &type metadata for NoObjectFilesProvidedForJIT);
    atomic_store(result, (unint64_t *)&qword_257380B48);
  }
  return result;
}

unint64_t sub_244771378()
{
  unint64_t result;

  result = qword_257380B50;
  if (!qword_257380B50)
  {
    result = MEMORY[0x249518824](&unk_24479B954, &type metadata for NoObjectFilesProvidedForJIT);
    atomic_store(result, (unint64_t *)&qword_257380B50);
  }
  return result;
}

unint64_t sub_2447713BC()
{
  unint64_t result;

  result = qword_257380B58;
  if (!qword_257380B58)
  {
    result = MEMORY[0x249518824](&unk_24479B84C, &type metadata for NoPidProvided);
    atomic_store(result, (unint64_t *)&qword_257380B58);
  }
  return result;
}

uint64_t sub_244771404()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShellTransactionManager()
{
  return objc_opt_self();
}

uint64_t sub_244771434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ContentProvider.handleHostMessageStream(_:instance:)(a1, a2, a3);
  return 0;
}

uint64_t ContentProvider.handleHostMessageStream(_:instance:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = v3;
  v6 = *(_QWORD *)(a3 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - v10;
  v12 = sub_244794AAC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A7C();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v16(v11, v4, a3);
  v17 = sub_244794AA0();
  v18 = sub_24479537C();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v28 = v12;
    v20 = (uint8_t *)v19;
    v26 = swift_slowAlloc();
    v30 = v26;
    v27 = v13;
    *(_DWORD *)v20 = 136446210;
    v25 = v20 + 4;
    v16(v9, (uint64_t)v11, a3);
    v21 = sub_24479507C();
    v29 = sub_24470600C(v21, v22, &v30);
    sub_244795448();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, a3);
    _os_log_impl(&dword_2446FC000, v17, v18, "Content provider received a host message stream but does not handle them: %{public}s", v20, 0xCu);
    v23 = v26;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v23, -1, -1);
    MEMORY[0x2495188D8](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v28);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, a3);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return 0;
}

uint64_t sub_244771690()
{
  static ContentProvider.supportedVariantGroups(for:)();
  return MEMORY[0x24BEE4AF8];
}

uint64_t static ContentProvider.supportedVariantGroups(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = sub_244794AAC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A7C();
  v6 = sub_244794AA0();
  v7 = sub_24479537C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v15 = v2;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    v16 = v1;
    v17 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_getMetatypeMetadata();
    v11 = sub_24479507C();
    v16 = sub_24470600C(v11, v12, &v17);
    sub_244795448();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v10, -1, -1);
    MEMORY[0x2495188D8](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v15);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_244771868(uint64_t a1)
{
  return static ContentProvider<>.decode(updatePayload:)(a1);
}

uint64_t static ContentProvider<>.decode(updatePayload:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_244794494();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  return sub_24479483C();
}

uint64_t sub_244771960()
{
  return static ContentProvider<>.encode(staticOutput:)();
}

uint64_t static ContentProvider<>.encode(staticOutput:)()
{
  swift_getAssociatedTypeWitness();
  return sub_244794830();
}

uint64_t dispatch thunk of ContentProvider.handleHostMessageStream(_:instance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of static ContentProvider.supportedVariantGroups(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of static ContentProvider.decode(updatePayload:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of static ContentProvider.encode(staticOutput:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_244771A0C()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  _QWORD v23[4];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = 16 * v6;
    v8 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v9 = *v8;
    v10 = v8[1];
    v11 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v7);
    v12 = *v11;
    v13 = v11[1];
    v0[3] = v4;
    v0[4] = v5;
    v14 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v23[0] = v9;
    v23[1] = v10;
    v23[2] = v12;
    v23[3] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(&v22, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v22;
  }
  v16 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v17 = (unint64_t)(v0[2] + 64) >> 6;
    if (v16 < v17)
    {
      v18 = v0[1];
      v19 = *(_QWORD *)(v18 + 8 * v16);
      if (v19)
      {
LABEL_7:
        v5 = (v19 - 1) & v19;
        v6 = __clz(__rbit64(v19)) + (v16 << 6);
        v4 = v16;
        goto LABEL_3;
      }
      v20 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v17)
      {
        v19 = *(_QWORD *)(v18 + 8 * v20);
        if (v19)
        {
LABEL_10:
          v16 = v20;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v17)
        {
          v19 = *(_QWORD *)(v18 + 8 * (v3 + 3));
          if (v19)
          {
            v16 = v3 + 3;
            goto LABEL_7;
          }
          v20 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v17)
          {
            v19 = *(_QWORD *)(v18 + 8 * v20);
            if (v19)
              goto LABEL_10;
            v16 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v17)
            {
              v19 = *(_QWORD *)(v18 + 8 * v16);
              if (v19)
                goto LABEL_7;
              v4 = v17 - 1;
              v21 = v3 + 6;
              while (v17 != v21)
              {
                v19 = *(_QWORD *)(v18 + 8 * v21++);
                if (v19)
                {
                  v16 = v21 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

Swift::Void __swiftcall PreviewShellServiceProtocol.activateServers()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(_OWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  _QWORD v34[2];
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _OWORD v53[8];

  v3 = v1;
  v4 = v0;
  v5 = *(_QWORD *)(*(_QWORD *)(v0 - 8) + 64);
  v40 = *(_QWORD *)(v0 - 8);
  v41 = v5;
  ((void (*)())MEMORY[0x24BDAC7A8])();
  v39 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0D0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v9;
  v10 = type metadata accessor for ServerFarm.HostMessages();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v34 - v14;
  v43 = v3;
  v16 = *(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v3 + 16);
  v36 = v2;
  v16(v53, v4, v3);
  v49 = v53[4];
  v50 = v53[5];
  v51 = v53[6];
  v52 = v53[7];
  v45 = v53[0];
  v46 = v53[1];
  v47 = v53[2];
  v48 = v53[3];
  v44 = v15;
  ServerFarm.activate()(v15);
  sub_24471F9BC((uint64_t)v53);
  v17 = sub_244795220();
  v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v38 = v17;
  v37(v9, 1, 1, v17);
  v18 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24470D480((uint64_t)v15, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ServerFarm.HostMessages);
  v19 = v39;
  v20 = v40;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  v35(v39, v2, v4);
  sub_244795208();
  v21 = sub_2447951FC();
  v22 = *(unsigned __int8 *)(v11 + 80);
  v23 = (v22 + 48) & ~v22;
  v24 = *(unsigned __int8 *)(v20 + 80);
  v25 = (v12 + v24 + v23) & ~v24;
  v41 += v25;
  v34[1] = v22 | v24 | 7;
  v26 = (_QWORD *)swift_allocObject();
  v27 = MEMORY[0x24BEE6930];
  v26[2] = v21;
  v26[3] = v27;
  v28 = v43;
  v26[4] = v4;
  v26[5] = v28;
  v29 = (uint64_t)v18;
  sub_2447299F8((uint64_t)v18, (uint64_t)v26 + v23, (uint64_t (*)(_QWORD))type metadata accessor for ServerFarm.HostMessages);
  v40 = *(_QWORD *)(v20 + 32);
  ((void (*)(char *, char *, uint64_t))v40)((char *)v26 + v25, v19, v4);
  v30 = (uint64_t)v42;
  sub_244713B34((uint64_t)v42, (uint64_t)&unk_257380C00, (uint64_t)v26);
  swift_release();
  v37((char *)v30, 1, 1, v38);
  sub_24470D480((uint64_t)v44, v29, (uint64_t (*)(_QWORD))type metadata accessor for ServerFarm.HostMessages);
  v35(v19, v36, v4);
  v31 = sub_2447951FC();
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = v31;
  v32[3] = MEMORY[0x24BEE6930];
  v32[4] = v4;
  v32[5] = v43;
  sub_2447299F8(v29, (uint64_t)v32 + v23, (uint64_t (*)(_QWORD))type metadata accessor for ServerFarm.HostMessages);
  ((void (*)(char *, char *, uint64_t))v40)((char *)v32 + v25, v19, v4);
  sub_244713B34((uint64_t)v42, (uint64_t)&unk_257380C10, (uint64_t)v32);
  swift_release();
  sub_244793978();
  v33 = (void *)sub_24479396C();
  sub_244793960();

  sub_244707D44((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for ServerFarm.HostMessages);
}

uint64_t sub_244771F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v8 = sub_244793EE8();
  v7[6] = v8;
  v7[7] = *(_QWORD *)(v8 - 8);
  v7[8] = swift_task_alloc();
  v9 = sub_2447941DC();
  v7[9] = v9;
  v7[10] = *(_QWORD *)(v9 - 8);
  v7[11] = swift_task_alloc();
  v10 = sub_244793D8C();
  v7[12] = v10;
  v7[13] = *(_QWORD *)(v10 - 8);
  v7[14] = swift_task_alloc();
  v11 = sub_244793E40();
  v7[15] = v11;
  v7[16] = *(_QWORD *)(v11 - 8);
  v7[17] = swift_task_alloc();
  v12 = sub_244793E04();
  v7[18] = v12;
  v7[19] = *(_QWORD *)(v12 - 8);
  v7[20] = swift_task_alloc();
  v7[21] = sub_2447938A0();
  v7[22] = swift_task_alloc();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DC00);
  v7[23] = v13;
  v7[24] = *(_QWORD *)(v13 - 8);
  v7[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DED0);
  v7[26] = swift_task_alloc();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DED8);
  v7[27] = v14;
  v7[28] = *(_QWORD *)(v14 - 8);
  v7[29] = swift_task_alloc();
  v7[30] = sub_244795208();
  v7[31] = sub_2447951FC();
  v7[32] = sub_2447951D8();
  v7[33] = v15;
  return swift_task_switch();
}

uint64_t sub_2447720E4()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB70);
  sub_244795244();
  *(_QWORD *)(v0 + 272) = sub_2447951FC();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v1;
  *v1 = v0;
  v1[1] = sub_244772170;
  return sub_24479528C();
}

uint64_t sub_244772170()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_2447721C4()
{
  uint64_t v0;
  uint64_t v1;
  char *v3;

  v1 = *(_QWORD *)(v0 + 208);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 48))(v1, 1, *(_QWORD *)(v0 + 184)) != 1)
  {
    sub_24470D4C4(v1, *(_QWORD *)(v0 + 200), &qword_25737DC00);
    sub_2447939E4();
    v3 = (char *)sub_24477230C + 4 * byte_24479BAE0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24477230C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;

  v2 = v0[19];
  v1 = v0[20];
  v4 = v0[17];
  v3 = v0[18];
  v9 = v0[16];
  v10 = v0[15];
  v6 = v0[4];
  v5 = v0[5];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 32))(v1, v0[22], v3);
  sub_2447939D8();
  sub_244772824(v1, v4, v6, v5);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v10);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_244701444(v0[25], &qword_25737DC00);
  v0[34] = sub_2447951FC();
  v7 = (_QWORD *)swift_task_alloc();
  v0[35] = v7;
  *v7 = v0;
  v7[1] = sub_244772170;
  return sub_24479528C();
}

uint64_t sub_2447724EC()
{
  uint64_t *v0;
  _QWORD *v1;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[13] + 32))(v0[14], v0[22], v0[12]);
  sub_2447939D8();
  v1 = (_QWORD *)swift_task_alloc();
  v0[36] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_244772568;
  return sub_2447733A4(v0[14], v0[17], v0[4], v0[5]);
}

uint64_t sub_244772568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 120);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_2447725D4()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD))(v0[13] + 8))(v0[14], v0[12]);
  sub_244701444(v0[25], &qword_25737DC00);
  v0[34] = sub_2447951FC();
  v1 = (_QWORD *)swift_task_alloc();
  v0[35] = v1;
  *v1 = v0;
  v1[1] = sub_244772170;
  return sub_24479528C();
}

uint64_t sub_244772664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 120);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_2447726D0()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD))(v0[10] + 8))(v0[11], v0[9]);
  sub_244701444(v0[25], &qword_25737DC00);
  v0[34] = sub_2447951FC();
  v1 = (_QWORD *)swift_task_alloc();
  v0[35] = v1;
  *v1 = v0;
  v1[1] = sub_244772170;
  return sub_24479528C();
}

uint64_t sub_244772764(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = v1[4];
  v5 = v1[5];
  v6 = *(_QWORD *)(type metadata accessor for ServerFarm.HostMessages() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v9 = v1[2];
  v10 = v1[3];
  v11 = (uint64_t)v1 + v7;
  v12 = (uint64_t)v1 + ((v7 + *(_QWORD *)(v6 + 64) + v8) & ~v8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_244707DE8;
  return sub_244771F08(a1, v9, v10, v11, v12, v4, v5);
}

void sub_244772824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  void (*v29)(_QWORD, _QWORD, _QWORD);
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  _QWORD v39[10];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(_QWORD, _QWORD, _QWORD);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;

  v54 = a4;
  v53 = a3;
  v70 = a2;
  v5 = sub_244793E40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v71 = v7;
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24479423C();
  v65 = *(_QWORD *)(v9 - 8);
  v66 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v64 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_244794260();
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v63 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_244793B40();
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v62 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_244793FD8();
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v61 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_244793D98();
  v42 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v60 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_244794494();
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v41 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_244794164();
  v39[9] = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v39[8] = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_244793AD4();
  MEMORY[0x24BDAC7A8](v17);
  v39[7] = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_244793C9C();
  v39[6] = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v39[5] = (char *)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_244793DEC();
  MEMORY[0x24BDAC7A8](v59);
  v72 = (char *)v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_244793E04();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v67 = v24;
  v68 = (char *)v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)v39 - v25;
  v58 = sub_244794AAC();
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v28 = (char *)v39 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2447945A8();
  sub_244794A7C();
  v29 = *(void (**)(_QWORD, _QWORD, _QWORD))(v22 + 16);
  v69 = a1;
  v56 = v29;
  v29(v26, a1, v21);
  v30 = sub_244794AA0();
  v31 = sub_244795394();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc();
    v39[4] = v5;
    v33 = (uint8_t *)v32;
    v34 = swift_slowAlloc();
    v39[3] = v6;
    v35 = v34;
    v74 = v34;
    v39[2] = v8;
    *(_DWORD *)v33 = 136446210;
    v39[1] = v33 + 4;
    sub_24470665C(&qword_257380E58, (uint64_t (*)(uint64_t))MEMORY[0x24BE77460], MEMORY[0x24BE77470]);
    v36 = sub_2447955B0();
    v73 = sub_24470600C(v36, v37, &v74);
    sub_244795448();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v21);
    _os_log_impl(&dword_2446FC000, v30, v31, "PreviewShellService received %{public}s", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v35, -1, -1);
    MEMORY[0x2495188D8](v33, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v21);
  }

  (*(void (**)(char *, uint64_t))(v57 + 8))(v28, v58);
  v55 = v22;
  sub_244793DF8();
  v38 = (char *)sub_244772E34 + 4 * word_24479BAE4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_244772E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(v5 - 152) + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257380E50) + 48);
  v7 = *(_QWORD *)(v5 - 448);
  v8 = *(_QWORD *)(v5 - 456);
  (*(void (**)(uint64_t))(v7 + 32))(v8);
  v9 = v6;
  v10 = *(_QWORD *)(v5 - 440);
  sub_2447299F8(v9, v10, (uint64_t (*)(_QWORD))MEMORY[0x24BE76F88]);
  sub_244774A30(v8, v10, *(_QWORD *)(v5 - 304), *(_QWORD *)(v5 - 296));
  sub_244707D44(v10, (uint64_t (*)(_QWORD))MEMORY[0x24BE76F88]);
  (*(void (**)(uint64_t, _QWORD))(v7 + 8))(v8, *(_QWORD *)(v5 - 320));
  v11 = *(_QWORD *)(v5 - 288);
  v12 = *(_QWORD *)(v5 - 184);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 - 280))(v12, v2, v0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v4, *(_QWORD *)(v5 - 168), v1);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = v0;
  v15 = (*(_QWORD *)(v5 - 192) + *(unsigned __int8 *)(v3 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v16 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32))(v16 + v13, v12, v14);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v16 + v15, v4, v1);
  sub_2447948CC();
  swift_release();
  return swift_release();
}

uint64_t sub_2447733A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[21] = a4;
  v5[22] = v4;
  v5[19] = a2;
  v5[20] = a3;
  v5[18] = a1;
  v5[23] = sub_244793984();
  v5[24] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DF08);
  v5[25] = v6;
  v5[26] = *(_QWORD *)(v6 - 8);
  v5[27] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737F350);
  v5[28] = swift_task_alloc();
  v7 = sub_244793E7C();
  v5[29] = v7;
  v5[30] = *(_QWORD *)(v7 - 8);
  v5[31] = swift_task_alloc();
  sub_244795208();
  v5[32] = sub_2447951FC();
  v5[33] = sub_2447951D8();
  v5[34] = v8;
  return swift_task_switch();
}

uint64_t sub_2447734B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v16)(int, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = sub_2447945A8();
  MEMORY[0x2495168C8](v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 104))(v1, v3, v2);
  v5 = *(_QWORD *)(v0 + 224);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
  sub_2447948FC();
  v6 = type metadata accessor for Process(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) == 1)
  {
    sub_244701444(*(_QWORD *)(v0 + 224), &qword_25737F350);
    swift_release();
    swift_release();
    type metadata accessor for AgentLocatingError(0);
    sub_24470665C(&qword_257380C30, type metadata accessor for AgentLocatingError, (uint64_t)&protocol conformance descriptor for AgentLocatingError);
    v7 = (void *)swift_allocError();
    MEMORY[0x2495168C8]();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_244793E1C();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 224);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 160);
    sub_244740168(v9 + *(int *)(v6 + 24), v0 + 344);
    v12 = sub_2447942A8();
    sub_244707D44(v9, type metadata accessor for Process);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v11, v10);
    v14 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(v0 + 280) = v14;
    *(_QWORD *)(v0 + 288) = v13;
    swift_retain();
    swift_retain();
    sub_24471F9BC(v0 + 16);
    v16 = (uint64_t (*)(int, uint64_t, uint64_t))((char *)&dword_25737E780 + dword_25737E780);
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v15;
    *v15 = v0;
    v15[1] = sub_2447737A8;
    return v16(v12, v14, v13);
  }
}

uint64_t sub_2447737A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);
  _QWORD *v6;

  v3 = (_QWORD *)*v2;
  v3[38] = a1;
  v3[39] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  sub_244793990();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE78208];
  v6 = (_QWORD *)swift_task_alloc();
  v3[40] = v6;
  sub_24470665C((unint64_t *)&qword_25737DF10, v5, MEMORY[0x24BE78200]);
  *v6 = v3;
  v6[1] = sub_244773894;
  return sub_2447938DC();
}

uint64_t sub_244773894()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_244773920()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 336) = *(_QWORD *)(v0 + 312);
  swift_release();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244773968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v2 = *(_QWORD *)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  swift_release();
  sub_244793D80();
  swift_storeEnumTagMultiPayload();
  sub_244779AC8();
  v5 = MEMORY[0x24BE781D8];
  sub_24470665C(&qword_257380EB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE781D8], MEMORY[0x24BE781D0]);
  sub_2447940BC();
  sub_244707D44(v4, (uint64_t (*)(_QWORD))v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244773A60()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 336) = *(_QWORD *)(v0 + 328);
  swift_release();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244773AB4()
{
  uint64_t v0;
  void *v1;

  swift_release();
  v1 = *(void **)(v0 + 336);
  sub_244793E1C();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244773B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[21] = a4;
  v5[22] = v4;
  v5[19] = a2;
  v5[20] = a3;
  v5[18] = a1;
  v5[23] = sub_244793984();
  v5[24] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DF08);
  v5[25] = v6;
  v5[26] = *(_QWORD *)(v6 - 8);
  v5[27] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737F350);
  v5[28] = swift_task_alloc();
  v7 = sub_244793E7C();
  v5[29] = v7;
  v5[30] = *(_QWORD *)(v7 - 8);
  v5[31] = swift_task_alloc();
  sub_244795208();
  v5[32] = sub_2447951FC();
  v5[33] = sub_2447951D8();
  v5[34] = v8;
  return swift_task_switch();
}

uint64_t sub_244773C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v16)(int, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = sub_2447945A8();
  MEMORY[0x249516D18](v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 104))(v1, v3, v2);
  v5 = *(_QWORD *)(v0 + 224);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
  sub_2447948FC();
  v6 = type metadata accessor for Process(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) == 1)
  {
    sub_244701444(*(_QWORD *)(v0 + 224), &qword_25737F350);
    swift_release();
    swift_release();
    type metadata accessor for AgentLocatingError(0);
    sub_24470665C(&qword_257380C30, type metadata accessor for AgentLocatingError, (uint64_t)&protocol conformance descriptor for AgentLocatingError);
    v7 = (void *)swift_allocError();
    MEMORY[0x249516D18]();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_244793E1C();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 224);
    v10 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 160);
    sub_244740168(v9 + *(int *)(v6 + 24), v0 + 344);
    v12 = sub_2447942A8();
    sub_244707D44(v9, type metadata accessor for Process);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v11, v10);
    v14 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(v0 + 280) = v14;
    *(_QWORD *)(v0 + 288) = v13;
    swift_retain();
    swift_retain();
    sub_24471F9BC(v0 + 16);
    v16 = (uint64_t (*)(int, uint64_t, uint64_t))((char *)&dword_25737E780 + dword_25737E780);
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v15;
    *v15 = v0;
    v15[1] = sub_244773F5C;
    return v16(v12, v14, v13);
  }
}

uint64_t sub_244773F5C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);
  _QWORD *v6;

  v3 = (_QWORD *)*v2;
  v3[38] = a1;
  v3[39] = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  sub_244793990();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE78208];
  v6 = (_QWORD *)swift_task_alloc();
  v3[40] = v6;
  sub_24470665C((unint64_t *)&qword_25737DF10, v5, MEMORY[0x24BE78200]);
  *v6 = v3;
  v6[1] = sub_244774048;
  return sub_2447938DC();
}

uint64_t sub_244774048()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_2447740D4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 336) = *(_QWORD *)(v0 + 312);
  swift_release();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24477411C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v2 = *(_QWORD *)(v0 + 208);
  v1 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  swift_release();
  sub_244793D80();
  swift_storeEnumTagMultiPayload();
  sub_244779AC8();
  v5 = MEMORY[0x24BE781D8];
  sub_24470665C(&qword_257380EB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE781D8], MEMORY[0x24BE781D0]);
  sub_2447940BC();
  sub_244707D44(v4, (uint64_t (*)(_QWORD))v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244774214()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 336) = *(_QWORD *)(v0 + 328);
  swift_release();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244774268()
{
  uint64_t v0;
  void *v1;

  swift_release();
  v1 = *(void **)(v0 + 336);
  sub_244793E1C();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24477430C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v8 = sub_244793E40();
  v7[6] = v8;
  v7[7] = *(_QWORD *)(v8 - 8);
  v7[8] = swift_task_alloc();
  v9 = sub_244793E04();
  v7[9] = v9;
  v7[10] = *(_QWORD *)(v9 - 8);
  v7[11] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_25737DC10);
  v7[12] = v10;
  v7[13] = *(_QWORD *)(v10 - 8);
  v7[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE68);
  v7[15] = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DE70);
  v7[16] = v11;
  v7[17] = *(_QWORD *)(v11 - 8);
  v7[18] = swift_task_alloc();
  v7[19] = sub_244795208();
  v7[20] = sub_2447951FC();
  v7[21] = sub_2447951D8();
  v7[22] = v12;
  return swift_task_switch();
}

uint64_t sub_24477444C()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for ServerFarm.HostMessages();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB78);
  sub_244795244();
  *(_QWORD *)(v0 + 184) = sub_2447951FC();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v1;
  *v1 = v0;
  v1[1] = sub_2447744E8;
  return sub_24479528C();
}

uint64_t sub_2447744E8()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24477453C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 48))(v1, 1, *(_QWORD *)(v0 + 96)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 64);
    v11 = *(_QWORD *)(v0 + 80);
    v12 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 56);
    v10 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 32);
    v7 = *(_QWORD *)(v0 + 40);
    sub_24470D4C4(v1, v3, qword_25737DC10);
    sub_2447939E4();
    sub_2447939D8();
    sub_244772824(v4, v5, v8, v7);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v10);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v12);
    sub_244701444(v3, qword_25737DC10);
    *(_QWORD *)(v0 + 184) = sub_2447951FC();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v9;
    *v9 = v0;
    v9[1] = sub_2447744E8;
    return sub_24479528C();
  }
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = type metadata accessor for ServerFarm.HostMessages();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_unknownObjectRelease();
  v7 = v0 + v4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v7 + *(int *)(v2 + 20);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737DB78);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v1);
  return swift_deallocObject();
}

uint64_t sub_2447747EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = v1[4];
  v5 = v1[5];
  v6 = *(_QWORD *)(type metadata accessor for ServerFarm.HostMessages() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v9 = v1[2];
  v10 = v1[3];
  v11 = (uint64_t)v1 + v7;
  v12 = (uint64_t)v1 + ((v7 + *(_QWORD *)(v6 + 64) + v8) & ~v8);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_244706734;
  return sub_24477430C(a1, v9, v10, v11, v12, v4, v5);
}

uint64_t sub_2447748AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v14 = sub_244794494();
  v4 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_244793DB0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380E48);
  (*(void (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  sub_24470665C(&qword_257380E68, (uint64_t (*)(uint64_t))MEMORY[0x24BE773C0], MEMORY[0x24BE773B8]);
  sub_244794830();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v11 = sub_244794998();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v14);
  return v11;
}

uint64_t sub_244774A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t);
  NSObject *v32;
  os_log_type_t v33;
  int v34;
  _BOOL4 v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(void);
  uint64_t v43;
  unint64_t v44;
  os_log_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t *, _QWORD);
  uint64_t *v60;
  uint64_t *v61;
  char isUniquelyReferenced_nonNull_native;
  char *v63;
  void (*v64)(uint64_t *, _QWORD);
  uint64_t *v65;
  uint64_t *v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t *, _QWORD);
  uint64_t *v73;
  uint64_t *v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t *, _QWORD);
  uint64_t *v87;
  uint64_t *v88;
  char v89;
  char *v90;
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t);
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t result;
  uint64_t v99;
  os_log_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(char *, uint64_t, uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;

  v120 = a4;
  v119 = a3;
  v6 = sub_24479450C();
  v122 = *(_QWORD *)(v6 - 8);
  v123 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v121 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_244793840();
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x24BDAC7A8](v111);
  v109 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_24479387C();
  v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108);
  v106 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2447940B0();
  v124 = *(_QWORD *)(v10 - 8);
  v125 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = (_QWORD *)sub_244793E7C();
  v103 = *(v116 - 1);
  MEMORY[0x24BDAC7A8](v116);
  v14 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_244793AD4();
  v15 = MEMORY[0x24BDAC7A8](v105);
  v115 = (uint64_t)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v104 = (uint64_t)&v99 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v99 - v19;
  v21 = sub_244793C9C();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v117 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v130 = (char *)&v99 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v99 - v27;
  v113 = sub_244794AAC();
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113);
  v30 = (char *)&v99 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A7C();
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v114 = a1;
  v126 = v31;
  v127 = v21;
  v31(v28, a1, v21);
  v128 = a2;
  sub_24470D480(a2, (uint64_t)v20, (uint64_t (*)(_QWORD))MEMORY[0x24BE76F88]);
  v32 = sub_244794AA0();
  v33 = sub_244795394();
  v34 = v33;
  v35 = os_log_type_enabled(v32, v33);
  v118 = v12;
  if (v35)
  {
    v36 = swift_slowAlloc();
    v102 = swift_slowAlloc();
    v131 = v102;
    *(_DWORD *)v36 = 136315394;
    v99 = v36 + 4;
    v101 = v34;
    sub_244793C60();
    sub_24470665C(&qword_257380C18, (uint64_t (*)(uint64_t))MEMORY[0x24BE77530], MEMORY[0x24BE77540]);
    v37 = v116;
    v38 = sub_2447955B0();
    v100 = v32;
    v40 = v39;
    (*(void (**)(char *, _QWORD *))(v103 + 8))(v14, v37);
    v133 = sub_24470600C(v38, v40, &v131);
    sub_244795448();
    swift_bridgeObjectRelease();
    v41 = v127;
    v116 = *(_QWORD **)(v22 + 8);
    ((void (*)(char *, uint64_t))v116)(v28, v127);
    *(_WORD *)(v36 + 12) = 2082;
    v42 = MEMORY[0x24BE76F88];
    sub_24470D480((uint64_t)v20, v104, (uint64_t (*)(_QWORD))MEMORY[0x24BE76F88]);
    v43 = sub_24479507C();
    v133 = sub_24470600C(v43, v44, &v131);
    sub_244795448();
    swift_bridgeObjectRelease();
    sub_244707D44((uint64_t)v20, (uint64_t (*)(_QWORD))v42);
    v45 = v100;
    _os_log_impl(&dword_2446FC000, v100, (os_log_type_t)v101, "Preparing to launch %s, device: %{public}s", (uint8_t *)v36, 0x16u);
    v46 = v102;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v46, -1, -1);
    MEMORY[0x2495188D8](v36, -1, -1);

    (*(void (**)(char *, uint64_t))(v112 + 8))(v30, v113);
    v47 = v41;
  }
  else
  {
    v48 = v127;
    v116 = *(_QWORD **)(v22 + 8);
    ((void (*)(char *, uint64_t))v116)(v28, v127);
    sub_244707D44((uint64_t)v20, (uint64_t (*)(_QWORD))MEMORY[0x24BE76F88]);

    (*(void (**)(char *, uint64_t))(v112 + 8))(v30, v113);
    v47 = v48;
  }
  v126(v130, v114, v47);
  v49 = sub_244793C3C();
  if (*(_QWORD *)(v49 + 16) && (v50 = sub_24470F788(0xD000000000000015, 0x80000002447A01E0), (v51 & 1) != 0))
  {
    v52 = (uint64_t *)(*(_QWORD *)(v49 + 56) + 16 * v50);
    v54 = *v52;
    v53 = v52[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v131 = v54;
    v132 = v53;
    swift_bridgeObjectRetain();
    sub_2447950E8();
    swift_bridgeObjectRelease();
    v55 = v131;
    v56 = v132;
  }
  else
  {
    swift_bridgeObjectRelease();
    v55 = 0;
    v56 = 0xE000000000000000;
  }
  v131 = v55;
  v132 = v56;
  swift_bridgeObjectRetain();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  v57 = v131;
  v58 = v132;
  v59 = (void (*)(uint64_t *, _QWORD))sub_244793C30();
  v61 = v60;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v133 = *v61;
  *v61 = 0x8000000000000000;
  sub_24478D270(v57, v58, 0xD000000000000015, 0x80000002447A01E0, isUniquelyReferenced_nonNull_native);
  *v61 = v133;
  v63 = v130;
  swift_bridgeObjectRelease();
  v59(&v131, 0);
  if ((sub_244793C6C() & 1) != 0)
  {
    v64 = (void (*)(uint64_t *, _QWORD))sub_244793C30();
    v66 = v65;
    v67 = swift_isUniquelyReferenced_nonNull_native();
    v133 = *v66;
    *v66 = 0x8000000000000000;
    sub_24478D270(49, 0xE100000000000000, 0xD000000000000013, 0x80000002447A0200, v67);
    *v66 = v133;
    swift_bridgeObjectRelease();
    v64(&v131, 0);
  }
  v68 = v115;
  sub_24470D480(v128, v115, (uint64_t (*)(_QWORD))MEMORY[0x24BE76F88]);
  v69 = v124;
  v70 = v125;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v124 + 48))(v68, 1, v125) == 1)
  {
    sub_244707D44(v68, (uint64_t (*)(_QWORD))MEMORY[0x24BE76F88]);
LABEL_14:
    v90 = v117;
    v92 = (void (*)(char *, char *, uint64_t))v126;
    v91 = v127;
    v126(v117, (uint64_t)v63, v127);
    v93 = v120;
    v94 = v119;
    (*(void (**)(char *, uint64_t, uint64_t))(v120 + 88))(v90, v119, v120);
    v95 = (void (*)(char *, uint64_t))v116;
    ((void (*)(char *, uint64_t))v116)(v90, v91);
    v92(v90, v63, v91);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 24))(v90, v128, v94, v93);
    v95(v90, v91);
    v96 = v121;
    sub_2447944E8();
    sub_244794494();
    v97 = sub_2447948B4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v122 + 8))(v96, v123);
    v95(v63, v91);
    return v97;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v118, v68, v70);
  v71 = sub_2447940A4();
  v72 = (void (*)(uint64_t *, _QWORD))sub_244793C30();
  v74 = v73;
  v75 = swift_isUniquelyReferenced_nonNull_native();
  v133 = *v74;
  *v74 = 0x8000000000000000;
  v76 = v129;
  sub_2447790B4(v71, (uint64_t)sub_244779400, 0, v75, &v133);
  v129 = v76;
  if (!v76)
  {
    *v74 = v133;
    swift_bridgeObjectRelease();
    v72(&v131, 0);
    v77 = v107;
    v78 = v106;
    v79 = v108;
    (*(void (**)(char *, _QWORD, uint64_t))(v107 + 104))(v106, *MEMORY[0x24BE78038], v108);
    v80 = v110;
    v81 = v109;
    v82 = v111;
    (*(void (**)(char *, _QWORD, uint64_t))(v110 + 104))(v109, *MEMORY[0x24BE78630], v111);
    v83 = sub_244793870();
    v85 = v84;
    (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v82);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v79);
    v86 = (void (*)(uint64_t *, _QWORD))sub_244793C30();
    v88 = v87;
    v89 = swift_isUniquelyReferenced_nonNull_native();
    v133 = *v88;
    *v88 = 0x8000000000000000;
    sub_24478D270(v83, v85, 0xD000000000000025, 0x80000002447A0240, v89);
    *v88 = v133;
    v63 = v130;
    swift_bridgeObjectRelease();
    v86(&v131, 0);
    (*(void (**)(char *, uint64_t))(v124 + 8))(v118, v125);
    goto LABEL_14;
  }
  *v74 = v133;
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_2447754C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD v30[2];
  uint8_t *v31;
  int v32;
  uint64_t v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v41 = a3;
  v40 = a2;
  v4 = sub_24479450C();
  v43 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_244793E7C();
  v36 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_244794164();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_244794AAC();
  v37 = *(_QWORD *)(v13 - 8);
  v38 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A7C();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v39 = a1;
  v16(v12, a1, v9);
  v17 = sub_244794AA0();
  v18 = sub_244795364();
  v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v34 = v17;
    v20 = swift_slowAlloc();
    v32 = v19;
    v21 = (uint8_t *)v20;
    v33 = swift_slowAlloc();
    v45 = v33;
    v35 = v4;
    *(_DWORD *)v21 = 136315138;
    v30[1] = v21 + 4;
    v31 = v21;
    sub_244794158();
    sub_24470665C(&qword_257380C18, (uint64_t (*)(uint64_t))MEMORY[0x24BE77530], MEMORY[0x24BE77540]);
    v22 = sub_2447955B0();
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v6);
    v44 = sub_24470600C(v22, v24, &v45);
    v4 = v35;
    sub_244795448();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v17 = v34;
    v25 = v31;
    _os_log_impl(&dword_2446FC000, v34, (os_log_type_t)v32, "Preparing to relaunch %s", v31, 0xCu);
    v26 = v33;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v26, -1, -1);
    MEMORY[0x2495188D8](v25, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
  (*(void (**)(uint64_t, uint64_t))(v41 + 32))(v39, v40);
  v27 = v42;
  sub_2447944E8();
  sub_244794494();
  v28 = sub_2447948B4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v4);
  return v28;
}

uint64_t sub_24477585C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v7 = sub_24479450C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 56))(a1, a2, a3);
  if (!v3)
  {
    sub_2447944E8();
    sub_244794494();
    a3 = sub_2447948B4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return a3;
}

uint64_t sub_244775984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint8_t *v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;

  v23 = a2;
  v25 = a1;
  v4 = sub_24479450C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_244794AAC();
  v8 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A7C();
  v11 = sub_244794AA0();
  v12 = sub_244795364();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v21 = v4;
    v14 = v13;
    v19 = a3;
    v20 = v5;
    *(_DWORD *)v13 = 67240192;
    v26 = sub_2447942A8();
    a3 = v19;
    v5 = v20;
    sub_244795448();
    _os_log_impl(&dword_2446FC000, v11, v12, "Preparing to stop %{public}d", v14, 8u);
    v15 = v14;
    v4 = v21;
    MEMORY[0x2495188D8](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
  v16 = sub_2447942A8();
  v17 = v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 48))(v16, v23, a3);
  if (!v17)
  {
    sub_2447944E8();
    sub_244794494();
    v8 = sub_2447948B4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v8;
}

char *sub_244775BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  os_log_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v4 = v3;
  v89 = a2;
  v90 = a3;
  v76 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v75 = v6;
  v81 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24479450C();
  v77 = *(_QWORD *)(v7 - 8);
  v78 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v82 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_244793F18();
  v72 = *(_QWORD *)(v9 - 8);
  v73 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v70 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_244793E88();
  v83 = *(_QWORD *)(v11 - 8);
  v84 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_244793FD8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v79 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v63 - v19;
  v71 = v21;
  MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v63 - v22;
  v24 = sub_244794AAC();
  v85 = *(_QWORD *)(v24 - 8);
  v86 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A7C();
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v27(v23, a1, v14);
  v88 = a1;
  v69 = v27;
  v27(v20, a1, v14);
  v28 = sub_244794AA0();
  v29 = sub_244795364();
  v30 = v29;
  v31 = os_log_type_enabled(v28, v29);
  v80 = v14;
  v74 = v15;
  if (v31)
  {
    v32 = swift_slowAlloc();
    v68 = v3;
    v33 = v32;
    v67 = swift_slowAlloc();
    v92 = v67;
    *(_DWORD *)v33 = 67240450;
    v66 = v30;
    v65 = v28;
    v34 = sub_244793FCC();
    v64 = *(void (**)(char *, uint64_t))(v15 + 8);
    v64(v23, v14);
    LODWORD(v91) = v34;
    sub_244795448();
    *(_WORD *)(v33 + 8) = 2082;
    sub_244793FB4();
    sub_24470665C(&qword_25737D868, (uint64_t (*)(uint64_t))MEMORY[0x24BE77570], MEMORY[0x24BE77598]);
    v35 = v84;
    v36 = sub_2447955B0();
    v38 = v37;
    (*(void (**)(char *, uint64_t))(v83 + 8))(v13, v35);
    v91 = sub_24470600C(v36, v38, &v92);
    sub_244795448();
    swift_bridgeObjectRelease();
    v64(v20, v14);
    v39 = v65;
    _os_log_impl(&dword_2446FC000, v65, (os_log_type_t)v66, "Handling update: pid=%{public}d, category=%{public}s", (uint8_t *)v33, 0x12u);
    v40 = v67;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v40, -1, -1);
    v41 = v33;
    v4 = v68;
    MEMORY[0x2495188D8](v41, -1, -1);

  }
  else
  {
    v42 = *(void (**)(char *, uint64_t))(v15 + 8);
    v42(v23, v14);
    v42(v20, v14);

  }
  (*(void (**)(char *, uint64_t))(v85 + 8))(v26, v86);
  v43 = v88;
  v44 = sub_244793FCC();
  v45 = v89;
  v46 = v90;
  v47 = v87;
  v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v90 + 112))(v44, v89, v90);
  if (!v4)
  {
    v49 = v48;
    v26 = (char *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 40))(v43, v45, v46);
    v51 = (uint64_t)v70;
    sub_244793FC0();
    sub_24476ECDC((uint64_t)v26, v51);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v51, v73);
    sub_2447944F4();
    v52 = v47;
    v53 = v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v81, v52, v45);
    v69(v79, v43, v80);
    v54 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    v55 = v74;
    v56 = (v75 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
    v57 = (*(unsigned __int8 *)(v74 + 80) + v56 + 8) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
    v58 = swift_allocObject();
    v59 = v45;
    v60 = v58;
    v61 = v90;
    *(_QWORD *)(v58 + 16) = v59;
    *(_QWORD *)(v58 + 24) = v61;
    (*(void (**)(unint64_t, char *))(v53 + 32))(v58 + v54, v81);
    *(_QWORD *)(v60 + v56) = v49;
    (*(void (**)(unint64_t, char *, uint64_t))(v55 + 32))(v60 + v57, v79, v80);
    swift_retain();
    v62 = v82;
    sub_2447948E4();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v62, v78);
  }
  return v26;
}

uint64_t sub_2447761A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v33 = a3;
  v32 = a2;
  v5 = sub_244794494();
  v35 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v34 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_244793B40();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_244794AAC();
  v29 = *(_QWORD *)(v11 - 8);
  v30 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A7C();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v31 = a1;
  v14(v10, a1, v7);
  v15 = sub_244794AA0();
  v16 = sub_244795364();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v28 = v3;
    v18 = (uint8_t *)v17;
    v26 = swift_slowAlloc();
    v37 = v26;
    v27 = v5;
    *(_DWORD *)v18 = 136446210;
    v25[1] = v18 + 4;
    v19 = sub_244793B34();
    v36 = sub_24470600C(v19, v20, &v37);
    v5 = v27;
    sub_244795448();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    _os_log_impl(&dword_2446FC000, v15, v16, "Purging %{public}s", v18, 0xCu);
    v21 = v26;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v21, -1, -1);
    MEMORY[0x2495188D8](v18, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v30);
  (*(void (**)(uint64_t, uint64_t))(v33 + 64))(v31, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380E48);
  v22 = v34;
  _s15PreviewShellKit21CanvasContentProviderPAAyt12HostedOutputRtzrlE6encode06hostedH020PreviewsFoundationOS12PropertyListVyt_tFZ_0();
  v23 = sub_244794998();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v5);
  return v23;
}

uint64_t sub_244776498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  os_log_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[2];
  uint8_t *v38;
  int v39;
  uint64_t v40;
  os_log_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v49 = a3;
  v48 = a2;
  v4 = sub_244794494();
  v55 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v54 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_244794098();
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for ContentKey();
  MEMORY[0x24BDAC7A8](v46);
  v53 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_244793E88();
  v43 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_244794260();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_244794AAC();
  v44 = *(_QWORD *)(v16 - 8);
  v45 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A7C();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v47 = a1;
  v19(v15, a1, v12);
  v20 = sub_244794AA0();
  v21 = sub_244795364();
  v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    v41 = v20;
    v23 = swift_slowAlloc();
    v39 = v22;
    v24 = (uint8_t *)v23;
    v40 = swift_slowAlloc();
    v57 = v40;
    v42 = v4;
    v38 = v24;
    *(_DWORD *)v24 = 136446210;
    v37[1] = v24 + 4;
    sub_244794248();
    sub_24470665C(&qword_25737D868, (uint64_t (*)(uint64_t))MEMORY[0x24BE77570], MEMORY[0x24BE77598]);
    v25 = sub_2447955B0();
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v9);
    v56 = sub_24470600C(v25, v27, &v57);
    v4 = v42;
    sub_244795448();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v28 = v41;
    v29 = v38;
    _os_log_impl(&dword_2446FC000, v41, (os_log_type_t)v39, "Providing variants for content category %{public}s", v38, 0xCu);
    v30 = v40;
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v30, -1, -1);
    MEMORY[0x2495188D8](v29, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

  }
  (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v45);
  v31 = (uint64_t)v53;
  sub_244794248();
  sub_244794254();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v49 + 8))(&v57, v48);
  v56 = v57;
  ContentProviderRegistry.variantGroups(for:)(v31);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380E48);
  v32 = v50;
  sub_24479408C();
  sub_24470665C(&qword_257380E78, (uint64_t (*)(uint64_t))MEMORY[0x24BE77B30], MEMORY[0x24BE77B20]);
  v33 = v54;
  v34 = v52;
  sub_244794830();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v34);
  v35 = sub_244794998();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v33, v4);
  sub_244707D44(v31, (uint64_t (*)(_QWORD))type metadata accessor for ContentKey);
  return v35;
}

uint64_t sub_24477695C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  _BOOL4 v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void (*v46)(char *, unint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t, uint64_t);
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v64[2];
  int v65;
  os_log_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;

  v78 = a2;
  v86 = a3;
  v84 = type metadata accessor for ContentKey();
  MEMORY[0x24BDAC7A8](v84);
  v69 = (char *)v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_244793E94();
  v6 = *(_QWORD *)(v5 - 8);
  v89 = v5;
  v90 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v85 = (char *)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_244794494();
  v8 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v71 = (char *)v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_244794080();
  v82 = *(_QWORD *)(v10 - 8);
  v83 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v81 = (char *)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v80 = (uint64_t)v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v64 - v15;
  v17 = sub_244793E88();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v91 = (char *)v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v68 = (char *)v64 - v21;
  v22 = sub_24479423C();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_244794AAC();
  v77 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v27 = (char *)v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A7C();
  v75 = v23;
  v76 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v25, a1, v22);
  v74 = v27;
  v28 = sub_244794AA0();
  v29 = sub_244795364();
  v30 = v29;
  v31 = os_log_type_enabled(v28, v29);
  v72 = v8;
  v70 = v16;
  v87 = v18;
  if (v31)
  {
    v66 = v28;
    v32 = swift_slowAlloc();
    v65 = v30;
    v33 = (uint8_t *)v32;
    v34 = swift_slowAlloc();
    v93 = v34;
    v67 = a1;
    *(_DWORD *)v33 = 136446210;
    v64[1] = v33 + 4;
    v35 = v68;
    sub_244794224();
    sub_24470665C(&qword_25737D868, (uint64_t (*)(uint64_t))MEMORY[0x24BE77570], MEMORY[0x24BE77598]);
    v36 = sub_2447955B0();
    v38 = v37;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v35, v17);
    v92 = sub_24470600C(v36, v38, &v93);
    sub_244795448();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v25, v76);
    v39 = v66;
    _os_log_impl(&dword_2446FC000, v66, (os_log_type_t)v65, "Providing content override for %{public}s)", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495188D8](v34, -1, -1);
    MEMORY[0x2495188D8](v33, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v25, v76);

  }
  (*(void (**)(char *, uint64_t))(v77 + 8))(v74, v88);
  v88 = v17;
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v86 + 8))(&v93, v78);
  v86 = v93;
  sub_244794224();
  v40 = sub_244794230();
  v41 = *(_QWORD *)(v40 + 16);
  v79 = v40;
  if (v41)
  {
    v43 = v89;
    v42 = v90;
    v44 = v40 + ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80));
    v45 = *(_QWORD *)(v90 + 72);
    v46 = *(void (**)(char *, unint64_t, uint64_t))(v90 + 16);
    v47 = (uint64_t)v69;
    v48 = v85;
    v46(v85, v44, v89);
    while (1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v87 + 16))(v47, v91, v88);
      v49 = v42;
      v50 = v47 + *(int *)(v84 + 20);
      v46((char *)v50, (unint64_t)v48, v43);
      v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56);
      v51(v50, 0, 1, v43);
      if (*(_QWORD *)(v86 + 16))
      {
        sub_24470F394(v47);
        if ((v52 & 1) != 0)
          break;
      }
      sub_244707D44(v47, (uint64_t (*)(_QWORD))type metadata accessor for ContentKey);
      v43 = v89;
      v42 = v90;
      v48 = v85;
      (*(void (**)(char *, uint64_t))(v90 + 8))(v85, v89);
      v44 += v45;
      if (!--v41)
        goto LABEL_12;
      v46(v48, v44, v43);
    }
    sub_244707D44(v47, (uint64_t (*)(_QWORD))type metadata accessor for ContentKey);
    v53 = v89;
    v54 = (uint64_t)v70;
    (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v70, v85, v89);
    v51(v54, 0, 1, v53);
    v55 = v73;
    v56 = v72;
    v57 = v71;
    v59 = v87;
    v58 = v88;
  }
  else
  {
    v43 = v89;
    v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56);
LABEL_12:
    v54 = (uint64_t)v70;
    v51((uint64_t)v70, 1, 1, v43);
    v55 = v73;
    v56 = v72;
    v57 = v71;
    v59 = v87;
    v58 = v88;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v91, v58);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380E48);
  sub_244701400(v54, v80, &qword_25737D860);
  v60 = v81;
  sub_244794074();
  sub_24470665C(&qword_257380E90, (uint64_t (*)(uint64_t))MEMORY[0x24BE77B18], MEMORY[0x24BE77B10]);
  v61 = v83;
  sub_244794830();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v60, v61);
  v62 = sub_244794998();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v55);
  sub_244701444(v54, &qword_25737D860);
  return v62;
}

uint64_t sub_244777084(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, char *);
  uint64_t v29;
  char *v30;
  char *v31;
  int v32;
  char *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint8_t *v42;
  char *v43;
  uint64_t v44;
  void **v45;
  void *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  id v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v80 = a2;
  v81 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257380E80);
  MEMORY[0x24BDAC7A8](v4);
  v77 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_244793E04();
  v82 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v73 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v73 - v13;
  v15 = sub_244794AAC();
  v74 = *(_QWORD *)(v15 - 8);
  v75 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v73 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v73 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257380E88);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(void (**)(char *, uint64_t, char *))(v25 + 16);
  v76 = a1;
  v29 = a1;
  v31 = v30;
  v28(v27, v29, v30);
  v78 = v25;
  v79 = (uint64_t)v27;
  v32 = (*(uint64_t (**)(char *, char *))(v25 + 88))(v27, v31);
  if (v32 == *MEMORY[0x24BE766E8])
  {
    v33 = v23;
    sub_244794A7C();
    v34 = v82;
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v14, v80, v6);
    v35 = sub_244794AA0();
    v36 = sub_244795394();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v80 = v31;
      v38 = (uint8_t *)v37;
      v39 = swift_slowAlloc();
      v84 = v39;
      *(_DWORD *)v38 = 136446210;
      v73 = v38 + 4;
      sub_24470665C(&qword_257380E58, (uint64_t (*)(uint64_t))MEMORY[0x24BE77460], MEMORY[0x24BE77470]);
      v40 = sub_2447955B0();
      v83 = sub_24470600C(v40, v41, &v84);
      sub_244795448();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v6);
      _os_log_impl(&dword_2446FC000, v35, v36, "PreviewShellService sending reply for %{public}s: Success", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v39, -1, -1);
      v42 = v38;
      v31 = v80;
      MEMORY[0x2495188D8](v42, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v6);
    }

    (*(void (**)(char *, uint64_t))(v74 + 8))(v33, v75);
    v61 = (uint64_t)v77;
    (*(void (**)(uint64_t, char *))(v78 + 8))(v79, v31);
  }
  else
  {
    v43 = v80;
    v44 = v82;
    if (v32 == *MEMORY[0x24BE766D0])
    {
      v45 = (void **)v79;
      (*(void (**)(uint64_t, char *))(v78 + 96))(v79, v31);
      v46 = *v45;
      sub_244794A7C();
      v47 = v44;
      v48 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
      v49 = v6;
      v48(v12, v43, v6);
      v50 = v46;
      v51 = v46;
      v52 = sub_244794AA0();
      v53 = sub_244795394();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = swift_slowAlloc();
        v78 = swift_slowAlloc();
        v79 = swift_slowAlloc();
        v84 = v79;
        *(_DWORD *)v54 = 136446466;
        v80 = v21;
        sub_24470665C(&qword_257380E58, (uint64_t (*)(uint64_t))MEMORY[0x24BE77460], MEMORY[0x24BE77470]);
        v55 = sub_2447955B0();
        v83 = sub_24470600C(v55, v56, &v84);
        sub_244795448();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v12, v49);
        *(_WORD *)(v54 + 12) = 2114;
        v57 = v46;
        v58 = _swift_stdlib_bridgeErrorToNSError();
        v83 = v58;
        sub_244795448();
        v59 = v78;
        *(_QWORD *)v78 = v58;

        _os_log_impl(&dword_2446FC000, v52, v53, "PreviewShellService sending reply for %{public}s: Failure - %{public}@", (uint8_t *)v54, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_25737ED60);
        swift_arrayDestroy();
        MEMORY[0x2495188D8](v59, -1, -1);
        v60 = v79;
        swift_arrayDestroy();
        MEMORY[0x2495188D8](v60, -1, -1);
        MEMORY[0x2495188D8](v54, -1, -1);

        (*(void (**)(char *, uint64_t))(v74 + 8))(v80, v75);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v49);
        (*(void (**)(char *, uint64_t))(v74 + 8))(v21, v75);
      }
    }
    else
    {
      if (v32 == *MEMORY[0x24BE766E0])
      {
        v62 = v18;
        sub_244794A7C();
        v63 = v44;
        v64 = v9;
        (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v9, v43, v6);
        v65 = sub_244794AA0();
        v66 = sub_244795394();
        if (os_log_type_enabled(v65, v66))
        {
          v67 = v63;
          v68 = (uint8_t *)swift_slowAlloc();
          v69 = swift_slowAlloc();
          v84 = v69;
          v80 = v31;
          *(_DWORD *)v68 = 136446210;
          v73 = v68 + 4;
          sub_24470665C(&qword_257380E58, (uint64_t (*)(uint64_t))MEMORY[0x24BE77460], MEMORY[0x24BE77470]);
          v70 = sub_2447955B0();
          v83 = sub_24470600C(v70, v71, &v84);
          v31 = v80;
          sub_244795448();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v67 + 8))(v64, v6);
          _os_log_impl(&dword_2446FC000, v65, v66, "PreviewShellService sending reply for %{public}s: Cancelled", v68, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2495188D8](v69, -1, -1);
          MEMORY[0x2495188D8](v68, -1, -1);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v63 + 8))(v9, v6);
        }

        (*(void (**)(char *, uint64_t))(v74 + 8))(v62, v75);
      }
      (*(void (**)(uint64_t, char *))(v78 + 8))(v79, v31);
    }
    v61 = (uint64_t)v77;
  }
  sub_2447945E4();
  sub_244794494();
  sub_244793E28();
  return sub_244701444(v61, &qword_257380E80);
}

uint64_t sub_2447778B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[2];

  v19[1] = a2;
  v2 = sub_2447943EC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v19 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257380EB8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (_QWORD *)((char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v19 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257380EC0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (_QWORD *)((char *)v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_257380EC8);
  sub_2447945E4();
  sub_244701400((uint64_t)v14, (uint64_t)v12, &qword_257380EB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v17 = *v12;
  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v3 + 32))(v8, v12, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    sub_244793F24();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  swift_storeEnumTagMultiPayload();
  sub_244701444((uint64_t)v14, &qword_257380EB8);
  sub_244793F30();
  sub_24470665C(&qword_257380ED0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77828], MEMORY[0x24BE77818]);
  sub_244793E28();
  return sub_244701444((uint64_t)v17, &qword_257380EC0);
}

uint64_t sub_244777B0C()
{
  sub_244779774();
  return sub_244794830();
}

unint64_t AgentLocatingError.lowValueTitle.getter()
{
  return 0xD000000000000016;
}

void AgentLocatingError.additionalInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = sub_244793E7C();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for AgentLocatingError(0);
  MEMORY[0x24BDAC7A8](v2);
  sub_24470D480(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_244777C44 + 4 * byte_24479BAFC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_244777C44()
{
  int *v0;
  uint64_t v1;
  int v2;

  v2 = *v0;
  *(_QWORD *)(v1 - 64) = 0;
  *(_QWORD *)(v1 - 56) = 0xE000000000000000;
  sub_2447954CC();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 - 64) = 0xD000000000000014;
  *(_QWORD *)(v1 - 56) = 0x800000024479FFE0;
  *(_DWORD *)(v1 - 68) = v2;
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  return *(_QWORD *)(v1 - 64);
}

uint64_t type metadata accessor for AgentLocatingError(uint64_t a1)
{
  return sub_244706AAC(a1, qword_257380CD8);
}

uint64_t AgentLocatingError.additionalDiagnostics.getter()
{
  return 0;
}

uint64_t AgentLocatingError.isPotentialCrash.getter()
{
  return 1;
}

unint64_t sub_244777E8C()
{
  return 0xD000000000000016;
}

uint64_t sub_244777EAC()
{
  sub_24470665C(&qword_257380E40, type metadata accessor for AgentLocatingError, (uint64_t)&protocol conformance descriptor for AgentLocatingError);
  return sub_244794668();
}

uint64_t sub_244777EEC()
{
  sub_24470665C(&qword_257380E40, type metadata accessor for AgentLocatingError, (uint64_t)&protocol conformance descriptor for AgentLocatingError);
  return sub_244794638();
}

uint64_t UnknownContentCategory.init(category:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2447780D8(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE77570], a2);
}

unint64_t UnknownContentCategory.lowValueTitle.getter()
{
  return 0xD000000000000018;
}

unint64_t UnknownContentCategory.additionalInfo.getter()
{
  sub_2447954CC();
  swift_bridgeObjectRelease();
  sub_244793E88();
  sub_24470665C(&qword_25737D868, (uint64_t (*)(uint64_t))MEMORY[0x24BE77570], MEMORY[0x24BE77598]);
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  sub_2447950E8();
  return 0xD00000000000001ALL;
}

uint64_t UnknownContentCategory.additionalDiagnostics.getter()
{
  return 0;
}

uint64_t UnknownContentCategory.isPotentialCrash.getter()
{
  return 0;
}

unint64_t sub_24477802C()
{
  return 0xD000000000000018;
}

uint64_t sub_24477804C()
{
  sub_24470665C(&qword_257380E38, type metadata accessor for UnknownContentCategory, (uint64_t)&protocol conformance descriptor for UnknownContentCategory);
  return sub_244794668();
}

uint64_t sub_24477808C()
{
  sub_24470665C(&qword_257380E38, type metadata accessor for UnknownContentCategory, (uint64_t)&protocol conformance descriptor for UnknownContentCategory);
  return sub_244794638();
}

uint64_t UnknownProcessType.init(processType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2447780D8(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE77038], a2);
}

uint64_t sub_2447780D8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  v5 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a3, a1, v5);
}

unint64_t UnknownProcessType.highValueTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = v0;
  v2 = sub_244793B28();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == *MEMORY[0x24BE77020])
    return 0xD000000000000032;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0;
}

unint64_t UnknownProcessType.lowValueTitle.getter()
{
  return 0xD000000000000016;
}

uint64_t UnknownProcessType.additionalInfo.getter()
{
  sub_2447954CC();
  sub_2447950E8();
  sub_244793B28();
  sub_244795538();
  sub_2447950E8();
  return 0;
}

uint64_t UnknownProcessType.additionalDiagnostics.getter()
{
  return 0;
}

uint64_t UnknownProcessType.isPotentialCrash.getter()
{
  return 0;
}

uint64_t sub_2447782AC()
{
  return sub_24470665C(&qword_257380C20, type metadata accessor for AgentLocatingError, (uint64_t)&protocol conformance descriptor for AgentLocatingError);
}

uint64_t sub_2447782D8()
{
  return sub_24470665C(&qword_257380C28, type metadata accessor for AgentLocatingError, (uint64_t)&protocol conformance descriptor for AgentLocatingError);
}

uint64_t sub_244778304()
{
  return sub_24470665C(&qword_257380C30, type metadata accessor for AgentLocatingError, (uint64_t)&protocol conformance descriptor for AgentLocatingError);
}

uint64_t sub_244778330()
{
  return sub_24470665C(&qword_257380C38, type metadata accessor for UnknownContentCategory, (uint64_t)&protocol conformance descriptor for UnknownContentCategory);
}

uint64_t type metadata accessor for UnknownContentCategory(uint64_t a1)
{
  return sub_244706AAC(a1, qword_257380D68);
}

uint64_t sub_244778370()
{
  return sub_24470665C(&qword_257380C40, type metadata accessor for UnknownContentCategory, (uint64_t)&protocol conformance descriptor for UnknownContentCategory);
}

uint64_t sub_24477839C()
{
  return sub_24470665C(&qword_257380C48, type metadata accessor for UnknownContentCategory, (uint64_t)&protocol conformance descriptor for UnknownContentCategory);
}

uint64_t sub_2447783C8()
{
  return sub_24470665C(&qword_257380C50, type metadata accessor for UnknownProcessType, (uint64_t)&protocol conformance descriptor for UnknownProcessType);
}

uint64_t type metadata accessor for UnknownProcessType(uint64_t a1)
{
  return sub_244706AAC(a1, qword_257380DF8);
}

uint64_t sub_244778408()
{
  return sub_24470665C(&qword_257380C58, type metadata accessor for UnknownProcessType, (uint64_t)&protocol conformance descriptor for UnknownProcessType);
}

unint64_t sub_244778434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = v0;
  v2 = sub_244793B28();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == *MEMORY[0x24BE77020])
    return 0xD000000000000032;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0;
}

unint64_t sub_244778500()
{
  return 0xD000000000000016;
}

uint64_t sub_244778520()
{
  return sub_24470665C(&qword_257380C60, type metadata accessor for UnknownProcessType, (uint64_t)&protocol conformance descriptor for UnknownProcessType);
}

uint64_t sub_24477854C()
{
  sub_24470665C(&qword_257380E30, type metadata accessor for UnknownProcessType, (uint64_t)&protocol conformance descriptor for UnknownProcessType);
  return sub_244794668();
}

uint64_t sub_24477858C()
{
  sub_24470665C(&qword_257380E30, type metadata accessor for UnknownProcessType, (uint64_t)&protocol conformance descriptor for UnknownProcessType);
  return sub_244794638();
}

uint64_t dispatch thunk of PreviewShellServiceProtocol.providerRegistry.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PreviewShellServiceProtocol.serverFarm.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PreviewShellServiceProtocol.relaunch(with:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of PreviewShellServiceProtocol.prepareToRelaunch(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PreviewShellServiceProtocol.performUpdate(payload:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PreviewShellServiceProtocol.tellProvidersToStop(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PreviewShellServiceProtocol.performKill(payload:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t (*v4)(_OWORD *);
  __int128 v5;
  _OWORD v7[2];
  char v8;

  v3 = *(_BYTE *)(a1 + 32);
  v4 = *(uint64_t (**)(_OWORD *))(a3 + 56);
  v5 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v5;
  v8 = v3;
  return v4(v7);
}

uint64_t dispatch thunk of PreviewShellServiceProtocol.purge(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of PreviewShellServiceProtocol.getCapabilities()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of PreviewShellServiceProtocol.updateComplete(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of PreviewShellServiceProtocol.cacheLaunch(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of PreviewShellServiceProtocol.cacheSuccessfulUpdate(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of PreviewShellServiceProtocol.agent(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t *initializeBufferWithCopyOfBuffer for AgentLocatingError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 3)
    {
      if (EnumCaseMultiPayload == 2)
      {
        v10 = sub_244793E7C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
    }
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for AgentLocatingError(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 3)
    return swift_bridgeObjectRelease();
  if ((_DWORD)result != 2)
  {
    if ((_DWORD)result != 1)
      return result;
    return swift_bridgeObjectRelease();
  }
  v3 = sub_244793E7C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

_QWORD *initializeWithCopy for AgentLocatingError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 3)
  {
    if (EnumCaseMultiPayload == 2)
    {
      v8 = sub_244793E7C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
  }
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for AgentLocatingError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_244707D44((uint64_t)a1, type metadata accessor for AgentLocatingError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 3)
    {
      if (EnumCaseMultiPayload == 2)
      {
        v7 = sub_244793E7C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
    }
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for AgentLocatingError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = sub_244793E7C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for AgentLocatingError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_244707D44((uint64_t)a1, type metadata accessor for AgentLocatingError);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = sub_244793E7C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_244778B28()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244793E7C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for UnknownContentCategory(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244778C34(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77570]);
}

uint64_t destroy for UnknownContentCategory(uint64_t a1, uint64_t a2)
{
  return sub_244778C7C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE77570]);
}

uint64_t initializeWithCopy for UnknownContentCategory(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244778CBC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77570]);
}

uint64_t assignWithCopy for UnknownContentCategory(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244778D0C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77570]);
}

uint64_t initializeWithTake for UnknownContentCategory(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244778D5C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77570]);
}

uint64_t assignWithTake for UnknownContentCategory(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244778DAC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77570]);
}

uint64_t getEnumTagSinglePayload for UnknownContentCategory()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244778BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77570]);
}

uint64_t storeEnumTagSinglePayload for UnknownContentCategory()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244778C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE77570]);
}

uint64_t sub_244778C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244778EA8(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE77570]);
}

uint64_t initializeBufferWithCopyOfBuffer for UnknownProcessType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244778C34(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77038]);
}

uint64_t sub_244778C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1, a2, v6);
}

uint64_t destroy for UnknownProcessType(uint64_t a1, uint64_t a2)
{
  return sub_244778C7C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE77038]);
}

uint64_t sub_244778C7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v4;

  v4 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t initializeWithCopy for UnknownProcessType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244778CBC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77038]);
}

uint64_t sub_244778CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  return a1;
}

uint64_t assignWithCopy for UnknownProcessType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244778D0C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77038]);
}

uint64_t sub_244778D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  return a1;
}

uint64_t initializeWithTake for UnknownProcessType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244778D5C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77038]);
}

uint64_t sub_244778D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  return a1;
}

uint64_t assignWithTake for UnknownProcessType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244778DAC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77038]);
}

uint64_t sub_244778DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnknownProcessType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244778DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE77038]);
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for UnknownProcessType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244778E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE77038]);
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v7;

  v7 = a5(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, a2, a2, v7);
}

uint64_t sub_244778E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244778EA8(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE77038]);
}

uint64_t sub_244778EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_244778F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_244793E04();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_244793E40();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_244778FC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_244793E04() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_244793E40() - 8) + 80);
  return sub_244777084(a1, (char *)(v1 + v4), v1 + ((v4 + v5 + v6) & ~v6));
}

unint64_t sub_24477902C()
{
  return 0xD00000000000003ALL;
}

unint64_t sub_244779048()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_244779064()
{
  sub_244779C64();
  return sub_244794668();
}

uint64_t sub_24477908C()
{
  sub_244779C64();
  return sub_244794638();
}

uint64_t sub_2447790B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t v54;
  char v55;
  char v56;
  _QWORD *v57;
  uint64_t *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t v63;

  swift_bridgeObjectRetain();
  swift_retain();
  v7 = sub_244771A0C();
  if (!v8)
    goto LABEL_23;
  v11 = v7;
  v12 = v8;
  v13 = v10;
  v63 = v9;
  v14 = (_QWORD *)*a5;
  v16 = sub_24470F788(v7, v8);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v20 = v15;
  if (v14[3] >= v19)
  {
    if ((a4 & 1) != 0)
    {
      v23 = (_QWORD *)*a5;
      if ((v15 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_24478E940();
      v23 = (_QWORD *)*a5;
      if ((v20 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v23[(v16 >> 6) + 8] |= 1 << v16;
    v28 = (uint64_t *)(v23[6] + 16 * v16);
    *v28 = v11;
    v28[1] = v12;
    v29 = (_QWORD *)(v23[7] + 16 * v16);
    *v29 = v63;
    v29[1] = v13;
    v30 = v23[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v23[2] = v32;
LABEL_13:
    v33 = sub_244771A0C();
    if (v34)
    {
      v37 = v33;
      v38 = v34;
      v39 = v35;
      v40 = v36;
      do
      {
        v49 = (_QWORD *)*a5;
        v50 = sub_24470F788(v37, v38);
        v52 = v49[2];
        v53 = (v51 & 1) == 0;
        v31 = __OFADD__(v52, v53);
        v54 = v52 + v53;
        if (v31)
          goto LABEL_24;
        v55 = v51;
        if (v49[3] < v54)
        {
          sub_24478B204(v54, 1);
          v50 = sub_24470F788(v37, v38);
          if ((v55 & 1) != (v56 & 1))
            goto LABEL_26;
        }
        v57 = (_QWORD *)*a5;
        if ((v55 & 1) != 0)
        {
          v41 = 16 * v50;
          v42 = (uint64_t *)(v57[7] + 16 * v50);
          v44 = *v42;
          v43 = v42[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v45 = (_QWORD *)(v57[7] + v41);
          swift_bridgeObjectRelease();
          *v45 = v44;
          v45[1] = v43;
        }
        else
        {
          v57[(v50 >> 6) + 8] |= 1 << v50;
          v58 = (uint64_t *)(v57[6] + 16 * v50);
          *v58 = v37;
          v58[1] = v38;
          v59 = (_QWORD *)(v57[7] + 16 * v50);
          *v59 = v39;
          v59[1] = v40;
          v60 = v57[2];
          v31 = __OFADD__(v60, 1);
          v61 = v60 + 1;
          if (v31)
            goto LABEL_25;
          v57[2] = v61;
        }
        v37 = sub_244771A0C();
        v38 = v46;
        v39 = v47;
        v40 = v48;
      }
      while (v46);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    sub_2447075C8();
    return swift_release();
  }
  sub_24478B204(v19, a4 & 1);
  v21 = sub_24470F788(v11, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    v16 = v21;
    v23 = (_QWORD *)*a5;
    if ((v20 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    v24 = (uint64_t *)(v23[7] + 16 * v16);
    v26 = *v24;
    v25 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = (_QWORD *)(v23[7] + 16 * v16);
    swift_bridgeObjectRelease();
    *v27 = v26;
    v27[1] = v25;
    goto LABEL_13;
  }
LABEL_26:
  result = sub_2447955F8();
  __break(1u);
  return result;
}

uint64_t sub_244779400@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_244779434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint8_t *v11;
  id v12;
  unsigned int v13;
  uint64_t v14;
  _QWORD v16[5];
  char v17;
  uint64_t v18;

  v0 = sub_244794494();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_244794AAC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A7C();
  v8 = sub_244794AA0();
  v9 = sub_244795364();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v18 = v1;
    v11 = v10;
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_2446FC000, v8, v9, "Received 'ping' message", v10, 2u);
    v1 = v18;
    MEMORY[0x2495188D8](v11, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v12 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v13 = objc_msgSend(v12, sel_processIdentifier);

  __swift_instantiateConcreteTypeFromMangledName(&qword_257380E48);
  v16[1] = v13;
  memset(&v16[2], 0, 24);
  v17 = 1;
  sub_244779774();
  sub_244794830();
  v14 = sub_244794998();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v14;
}

uint64_t sub_244779660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;

  v0 = sub_244794AAC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244794A7C();
  v4 = sub_244794AA0();
  v5 = sub_24479537C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_2446FC000, v4, v5, "Received unsupported 'ForwardPayload' style message from host.", v6, 2u);
    MEMORY[0x2495188D8](v6, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_2447797B8();
  swift_allocError();
  return swift_willThrow();
}

unint64_t sub_244779774()
{
  unint64_t result;

  result = qword_257380E60;
  if (!qword_257380E60)
  {
    result = MEMORY[0x249518824](MEMORY[0x24BE77F58], MEMORY[0x24BE77F70]);
    atomic_store(result, (unint64_t *)&qword_257380E60);
  }
  return result;
}

unint64_t sub_2447797B8()
{
  unint64_t result;

  result = qword_257380E70;
  if (!qword_257380E70)
  {
    result = MEMORY[0x249518824](&unk_24479C088, &type metadata for HostTooOld);
    atomic_store(result, (unint64_t *)&qword_257380E70);
  }
  return result;
}

uint64_t sub_2447797FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_244793FD8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_2447798BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = (*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64)
      + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_244793FD8() - 8) + 80);
  v5 = *(_QWORD *)(v0 + v3);
  v6 = v0 + ((v3 + v4 + 8) & ~v4);
  v7 = OBJC_IVAR____TtC15PreviewShellKit5Agent_batchIdentity;
  v8 = v5 + v7 + *(int *)(type metadata accessor for BatchIdentity(0) + 20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 80))(v8, v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 96))(v6, v8, v1, v2);
}

uint64_t sub_244779980(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v15 = a2;
  v2 = sub_244793E40();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  sub_244793978();
  v5 = (void *)sub_24479396C();
  v6 = sub_244793ED0();
  v8 = v7;
  v10 = v9 & 1;
  sub_244793EDC();
  sub_244793954();
  sub_244779B14(v6, v8, v10);

  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v15, v2);
  v11 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v12 + v11, (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_2447948CC();
  swift_release();
  return swift_release();
}

unint64_t sub_244779AC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257380EA8;
  if (!qword_257380EA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25737DF08);
    result = MEMORY[0x249518824](MEMORY[0x24BE78270], v1);
    atomic_store(result, (unint64_t *)&qword_257380EA8);
  }
  return result;
}

uint64_t sub_244779B14(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_244779B24()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_244793E40();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_244779B84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_244793E40() - 8) + 80);
  return sub_2447778B0(a1, v1 + ((v3 + 16) & ~v3));
}

ValueMetadata *type metadata accessor for HostTooOld()
{
  return &type metadata for HostTooOld;
}

unint64_t sub_244779BD8()
{
  unint64_t result;

  result = qword_257380ED8;
  if (!qword_257380ED8)
  {
    result = MEMORY[0x249518824](&unk_24479BFA8, &type metadata for HostTooOld);
    atomic_store(result, (unint64_t *)&qword_257380ED8);
  }
  return result;
}

unint64_t sub_244779C20()
{
  unint64_t result;

  result = qword_257380EE0;
  if (!qword_257380EE0)
  {
    result = MEMORY[0x249518824](&unk_24479BF80, &type metadata for HostTooOld);
    atomic_store(result, (unint64_t *)&qword_257380EE0);
  }
  return result;
}

unint64_t sub_244779C64()
{
  unint64_t result;

  result = qword_257380EE8;
  if (!qword_257380EE8)
  {
    result = MEMORY[0x249518824](&unk_24479BFF0, &type metadata for HostTooOld);
    atomic_store(result, (unint64_t *)&qword_257380EE8);
  }
  return result;
}

uint64_t PreviewSnapshot.makeRenderPayload()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  CGImage *v9;
  CGDataProvider *v10;
  CGDataProvider *v11;
  CFDataRef v12;
  CGImageAlphaInfo AlphaInfo;
  CGImageAlphaInfo v14;
  const __CFData *v16;
  uint64_t v17;
  uint64_t v18;
  CGColorSpace *v19;
  CGColorSpace *v20;
  __CFString *v21;
  uint64_t v22;
  _QWORD v23[7];
  unsigned __int32 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a1;
  v2 = sub_244793F0C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v23 - v7;
  v9 = *(CGImage **)v1;
  v26 = *(_QWORD *)(v1 + 8);
  v10 = CGImageGetDataProvider(v9);
  if (v10 && (v11 = v10, v12 = CGDataProviderCopyData(v10), v11, v12))
  {
    AlphaInfo = CGImageGetAlphaInfo(v9);
    v25 = v2;
    if (AlphaInfo == kCGImageAlphaNoneSkipFirst)
      v14 = kCGImageAlphaPremultipliedFirst;
    else
      v14 = CGImageGetAlphaInfo(v9);
    v24 = CGImageGetByteOrderInfo(v9) | v14;
    v16 = v12;
    v17 = MEMORY[0x249516364]();
    v23[5] = v18;
    v23[6] = v17;

    v23[4] = CGImageGetWidth(v9);
    v23[3] = CGImageGetHeight(v9);
    v23[2] = CGImageGetBytesPerRow(v9);
    v23[1] = CGImageGetBitsPerComponent(v9);
    CGImageGetBitsPerPixel(v9);
    v19 = CGImageGetColorSpace(v9);
    if (v19 && (v20 = v19, v21 = (__CFString *)CGColorSpaceCopyName(v19), v20, v21))
    {
      sub_244795058();

    }
    else
    {
      sub_244795058();
    }
    sub_244793F00();
    v22 = v25;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v25);
    swift_bridgeObjectRetain();
    sub_244793D5C();

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v22);
  }
  else
  {
    sub_244779F04();
    swift_allocError();
    return swift_willThrow();
  }
}

unint64_t sub_244779F04()
{
  unint64_t result;

  result = qword_257380EF0;
  if (!qword_257380EF0)
  {
    result = MEMORY[0x249518824](&unk_24479C220, &type metadata for PreviewSnapshot.InvalidSnapshotError);
    atomic_store(result, (unint64_t *)&qword_257380EF0);
  }
  return result;
}

id PreviewSnapshot.image.getter()
{
  id *v0;

  return *v0;
}

uint64_t PreviewSnapshot.selectableRegions.getter()
{
  return swift_bridgeObjectRetain();
}

double PreviewSnapshot.cornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double PreviewSnapshot.scaleFactor.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t PreviewSnapshot.init(image:selectableRegions:cornerRadius:scaleFactor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  *(double *)(a3 + 24) = a5;
  return result;
}

unint64_t sub_244779F74()
{
  return 0xD000000000000033;
}

uint64_t sub_244779F90()
{
  sub_24477A22C();
  return sub_244794668();
}

uint64_t sub_244779FB8()
{
  sub_24477A22C();
  return sub_244794638();
}

uint64_t destroy for PreviewSnapshot(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PreviewSnapshot(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PreviewSnapshot(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for PreviewSnapshot(uint64_t a1, _OWORD *a2)
{

  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewSnapshot(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PreviewSnapshot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewSnapshot()
{
  return &type metadata for PreviewSnapshot;
}

ValueMetadata *type metadata accessor for PreviewSnapshot.InvalidSnapshotError()
{
  return &type metadata for PreviewSnapshot.InvalidSnapshotError;
}

unint64_t sub_24477A1A0()
{
  unint64_t result;

  result = qword_257380EF8;
  if (!qword_257380EF8)
  {
    result = MEMORY[0x249518824](&unk_24479C140, &type metadata for PreviewSnapshot.InvalidSnapshotError);
    atomic_store(result, (unint64_t *)&qword_257380EF8);
  }
  return result;
}

unint64_t sub_24477A1E8()
{
  unint64_t result;

  result = qword_257380F00;
  if (!qword_257380F00)
  {
    result = MEMORY[0x249518824](&unk_24479C118, &type metadata for PreviewSnapshot.InvalidSnapshotError);
    atomic_store(result, (unint64_t *)&qword_257380F00);
  }
  return result;
}

unint64_t sub_24477A22C()
{
  unint64_t result;

  result = qword_257380F08;
  if (!qword_257380F08)
  {
    result = MEMORY[0x249518824](&unk_24479C188, &type metadata for PreviewSnapshot.InvalidSnapshotError);
    atomic_store(result, (unint64_t *)&qword_257380F08);
  }
  return result;
}

void static CanvasControlConfiguration<A>.empty.getter(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = nullsub_1;
  a1[2] = 0;
  a1[3] = sub_24477A2EC;
  a1[4] = 0;
  a1[5] = sub_24477A2F8;
  a1[6] = 0;
}

double CanvasControlConfiguration.init(build:)@<D0>(void (*a1)(_OWORD *__return_ptr)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[3];
  uint64_t v8;

  a1(v7);
  v3 = v8;
  result = *(double *)v7;
  v5 = v7[1];
  v6 = v7[2];
  *(_OWORD *)a2 = v7[0];
  *(_OWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 48) = v3;
  return result;
}

uint64_t sub_24477A2EC()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_24477A2F8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_257381350);
  sub_244784A00();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_24477A348@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(unint64_t, char *, uint64_t);
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t *v36;

  v34 = a2;
  v36 = a5;
  v6 = type metadata accessor for CanvasControl(0, a2, a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v35 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v32 = (char *)&v29 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v29 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257381340);
  v14 = sub_24479414C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = swift_allocObject();
  v33 = v17;
  *(_OWORD *)(v17 + 16) = xmmword_244797370;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 16))(v17 + v16, a1, v14);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v30 = a1;
  v18(v13, (uint64_t)a1, v6);
  v19 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v20 = swift_allocObject();
  v31 = v20;
  v21 = v34;
  *(_QWORD *)(v20 + 16) = v34;
  v22 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  v22(v20 + v19, v13, v6);
  v23 = v32;
  v18(v32, (uint64_t)a1, v6);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v21;
  v22(v24 + v19, v23, v6);
  v25 = v35;
  v22((unint64_t)v35, v30, v6);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v21;
  result = ((uint64_t (*)(unint64_t, char *, uint64_t))v22)(v26 + v19, v25, v6);
  v28 = v36;
  *v36 = v33;
  v28[1] = (uint64_t)sub_244784798;
  v28[2] = v31;
  v28[3] = (uint64_t)sub_244784800;
  v28[4] = v24;
  v28[5] = (uint64_t)sub_244784984;
  v28[6] = v26;
  return result;
}

uint64_t sub_24477A584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v8;

  if (*(_QWORD *)(a1 + 16) == 1)
  {
    v5 = *(uint64_t (**)(uint64_t))(a2
                                           + *(int *)(type metadata accessor for CanvasControl(0, a3, a3, a4) + 28));
    v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_244793D44() - 8) + 80);
    return v5(a1 + ((v6 + 32) & ~v6));
  }
  else
  {
    v8 = type metadata accessor for CanvasControlConfiguration.IndexOutOfBounds(0, a3, a3, a4);
    MEMORY[0x249518824](&unk_24479C4F8, v8);
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_24477A654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257381348);
  sub_244793D44();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_244797370;
  v9 = type metadata accessor for CanvasControl(0, a3, v7, v8);
  (*(void (**)(uint64_t))(a2 + *(int *)(v9 + 32)))(a1);
  return v6;
}

uint64_t sub_24477A700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[4];

  v24[3] = a5;
  v11 = sub_244793D44();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_244793F6C())
  {
    v17 = type metadata accessor for CanvasControlConfiguration.IndexOutOfBounds(0, a6, v15, v16);
    MEMORY[0x249518824](&unk_24479C4F8, v17);
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    v19 = sub_244793F78();
    v24[1] = v6;
    v20 = v19 & 1;
    sub_244793F84();
    v23 = type metadata accessor for CanvasControl(0, a6, v21, v22);
    sub_2447454F0(v20, (uint64_t)v14, a3, a4, a2, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_24477A83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(unint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t, uint64_t);
  char *v45;
  char *v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t result;
  uint64_t *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v68 = a3;
  v69 = a4;
  v67 = a2;
  v62 = a5;
  v7 = type metadata accessor for CanvasControl(0, a4, a3, a4);
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  v8 = *(_QWORD *)(v59 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v58 = (char *)&v52 - v9;
  v57 = type metadata accessor for CanvasControl(0, a3, v10, v11);
  v12 = *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64);
  v13 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v15 = (char *)&v52 - v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257381340);
  v16 = sub_24479414C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 72);
  v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v20 = swift_allocObject();
  v61 = v20;
  *(_OWORD *)(v20 + 16) = xmmword_244796B50;
  v22 = *(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 16);
  v21 = v20 + v19;
  v23 = a1;
  v63 = a1;
  v22(v21, a1, v16);
  v24 = v67;
  v22(v21 + v18, v67, v16);
  v53 = v13;
  v56 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v25 = v57;
  v56(v15, v23, v57);
  v27 = v58;
  v26 = v59;
  v55 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
  v28 = v60;
  v55(v58, v24, v60);
  v29 = *(unsigned __int8 *)(v13 + 80);
  v30 = (v29 + 32) & ~v29;
  v31 = *(unsigned __int8 *)(v26 + 80);
  v54 = v30;
  v32 = (v12 + v31 + v30) & ~v31;
  v64 = v32;
  v65 = v29 | v31 | 7;
  v66 = v32 + v8;
  v33 = swift_allocObject();
  v35 = v68;
  v34 = v69;
  *(_QWORD *)(v33 + 16) = v68;
  *(_QWORD *)(v33 + 24) = v34;
  v53 = *(_QWORD *)(v53 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v53)(v33 + v30, v15, v25);
  v59 = *(_QWORD *)(v26 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v59)(v33 + v32, v27, v28);
  v36 = v15;
  v56(v15, v63, v25);
  v37 = v27;
  v38 = v67;
  v39 = v28;
  v55(v27, v67, v28);
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v35;
  *(_QWORD *)(v40 + 24) = v34;
  v41 = v54;
  v42 = v36;
  v52 = v36;
  v43 = v36;
  v44 = (void (*)(char *, uint64_t, uint64_t))v53;
  ((void (*)(uint64_t, char *, uint64_t))v53)(v40 + v54, v43, v25);
  v45 = v37;
  v46 = v37;
  v47 = (void (*)(char *, uint64_t, uint64_t))v59;
  ((void (*)(uint64_t, char *, uint64_t))v59)(v40 + v64, v46, v39);
  v44(v42, v63, v25);
  v47(v45, v38, v39);
  v48 = swift_allocObject();
  v49 = v69;
  *(_QWORD *)(v48 + 16) = v68;
  *(_QWORD *)(v48 + 24) = v49;
  v44((char *)(v48 + v41), (uint64_t)v52, v25);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v47)(v48 + v64, v45, v39);
  v51 = v62;
  *v62 = v61;
  v51[1] = (uint64_t)sub_244784370;
  v51[2] = v33;
  v51[3] = (uint64_t)sub_244784414;
  v51[4] = v40;
  v51[5] = (uint64_t)sub_2447846DC;
  v51[6] = v48;
  return result;
}

uint64_t sub_24477AB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (*(_QWORD *)(a1 + 16) == 2)
  {
    v8 = *(uint64_t (**)(uint64_t))(a2
                                           + *(int *)(type metadata accessor for CanvasControl(0, a4, a3, a4) + 28));
    v9 = *(_QWORD *)(sub_244793D44() - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    result = v8(v10);
    if (!v5)
    {
      v14 = *(uint64_t (**)(uint64_t))(a3
                                              + *(int *)(type metadata accessor for CanvasControl(0, a5, v12, v13) + 28));
      swift_getTupleTypeMetadata2();
      return v14(v10 + *(_QWORD *)(v9 + 72));
    }
  }
  else
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    v18 = type metadata accessor for CanvasControlConfiguration.IndexOutOfBounds(0, TupleTypeMetadata2, v16, v17);
    MEMORY[0x249518824](&unk_24479C4F8, v18);
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24477ACE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t TupleTypeMetadata2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257381348);
  sub_244793D44();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_244796B50;
  v13 = type metadata accessor for CanvasControl(0, a4, v11, v12);
  (*(void (**)(uint64_t))(a2 + *(int *)(v13 + 32)))(a1);
  v16 = *(void (**)(uint64_t))(a3 + *(int *)(type metadata accessor for CanvasControl(0, a5, v14, v15) + 32));
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v16(a1 + *(int *)(TupleTypeMetadata2 + 48));
  return v10;
}

uint64_t sub_24477ADE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t TupleTypeMetadata2;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v33[1] = a5;
  v34 = a4;
  v35 = a2;
  v11 = sub_244793D44();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v33 - v16;
  v18 = sub_244793F6C();
  if (v18 == 1)
  {
    v25 = sub_244793F78() & 1;
    sub_244793F84();
    v28 = type metadata accessor for CanvasControl(0, a8, v26, v27);
    sub_2447454F0(v25, (uint64_t)v15, a3, v34, v35, v28);
  }
  else
  {
    if (v18)
    {
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      v32 = type metadata accessor for CanvasControlConfiguration.IndexOutOfBounds(0, TupleTypeMetadata2, v30, v31);
      MEMORY[0x249518824](&unk_24479C4F8, v32);
      swift_allocError();
      return swift_willThrow();
    }
    v19 = sub_244793F78() & 1;
    sub_244793F84();
    v22 = type metadata accessor for CanvasControl(0, a7, v20, v21);
    v23 = v36;
    sub_2447454F0(v19, (uint64_t)v17, a3, v34, v35, v22);
    if (v23)
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    v15 = v17;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

uint64_t sub_24477AFB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(unint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  void (*v58)(char *, uint64_t, uint64_t);
  char *v59;
  char *v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t result;
  uint64_t *v68;
  _QWORD *v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  void (*v73)(char *, uint64_t, uint64_t);
  void (*v74)(char *, uint64_t, uint64_t);
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;

  v91 = a2;
  v92 = a6;
  v87 = a5;
  v85 = a4;
  v90 = a3;
  v78 = a7;
  v88 = type metadata accessor for CanvasControl(0, a6, a3, a4);
  v10 = *(_QWORD *)(v88 - 8);
  v83 = *(_QWORD *)(v10 + 64);
  v84 = v10;
  MEMORY[0x24BDAC7A8](v88);
  v93 = (char *)&v69 - v11;
  v76 = type metadata accessor for CanvasControl(0, a5, v12, v13);
  v80 = *(_QWORD *)(v76 - 8);
  v89 = *(_QWORD *)(v80 + 64);
  MEMORY[0x24BDAC7A8](v76);
  v75 = (char *)&v69 - v14;
  v71 = type metadata accessor for CanvasControl(0, a4, v15, v16);
  v17 = *(_QWORD *)(v71 - 8);
  v82 = *(_QWORD *)(v17 + 64);
  MEMORY[0x24BDAC7A8](v71);
  v19 = (char *)&v69 - v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257381340);
  v20 = sub_24479414C();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 72);
  v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v24 = swift_allocObject();
  v77 = v24;
  *(_OWORD *)(v24 + 16) = xmmword_244796B60;
  v26 = *(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 16);
  v25 = v24 + v23;
  v27 = a1;
  v86 = a1;
  v26(v25, a1, v20);
  v28 = v91;
  v26(v25 + v22, v91, v20);
  v29 = v90;
  v26(v25 + 2 * v22, v90, v20);
  v30 = v17;
  v74 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v31 = v19;
  v32 = v71;
  v74(v19, v27, v71);
  v33 = v80;
  v73 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 16);
  v34 = v75;
  v35 = v76;
  v73(v75, v28, v76);
  v36 = v84;
  v72 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 16);
  v72(v93, v29, v88);
  v37 = *(unsigned __int8 *)(v30 + 80);
  v38 = v30;
  v39 = *(unsigned __int8 *)(v33 + 80);
  v40 = (v37 + 40) & ~v37;
  v79 = v40;
  v41 = (v82 + v39 + v40) & ~v39;
  v42 = *(unsigned __int8 *)(v36 + 80);
  v89 = (v89 + v42 + v41) & ~v42;
  v83 += v89;
  v81 = v41;
  v82 = v37 | v39 | v42 | 7;
  v43 = (_QWORD *)swift_allocObject();
  v44 = v85;
  v45 = v87;
  v43[2] = v85;
  v43[3] = v45;
  v43[4] = v92;
  v46 = (char *)v43 + v40;
  v47 = v43;
  v69 = v43;
  v70 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
  v48 = v31;
  v49 = v32;
  v70(v46, v31, v32);
  v50 = (char *)v47 + v41;
  v80 = *(_QWORD *)(v80 + 32);
  v51 = v34;
  ((void (*)(char *, char *, uint64_t))v80)(v50, v34, v35);
  v52 = v88;
  v84 = *(_QWORD *)(v84 + 32);
  v53 = v93;
  ((void (*)(char *, char *, uint64_t))v84)((char *)v47 + v89, v93, v88);
  v54 = v48;
  v74(v48, v86, v32);
  v55 = v35;
  v73(v51, v91, v35);
  v56 = v53;
  v72(v53, v90, v52);
  v57 = (char *)swift_allocObject();
  *((_QWORD *)v57 + 2) = v44;
  *((_QWORD *)v57 + 3) = v45;
  *((_QWORD *)v57 + 4) = v92;
  v58 = (void (*)(char *, uint64_t, uint64_t))v70;
  v70(&v57[v79], v54, v32);
  v59 = v51;
  v60 = v51;
  v61 = (void (*)(char *, uint64_t, uint64_t))v80;
  ((void (*)(char *, char *, uint64_t))v80)(&v57[v81], v60, v55);
  v62 = v52;
  v63 = v52;
  v64 = (void (*)(char *, uint64_t, uint64_t))v84;
  ((void (*)(char *, char *, uint64_t))v84)(&v57[v89], v56, v62);
  v58(v54, v86, v49);
  v61(v59, v91, v55);
  v64(v56, v90, v63);
  v65 = (char *)swift_allocObject();
  v66 = v87;
  *((_QWORD *)v65 + 2) = v85;
  *((_QWORD *)v65 + 3) = v66;
  *((_QWORD *)v65 + 4) = v92;
  v58(&v65[v79], (uint64_t)v54, v49);
  v61(&v65[v81], (uint64_t)v59, v55);
  result = ((uint64_t (*)(char *, char *, uint64_t))v64)(&v65[v89], v93, v63);
  v68 = v78;
  *v78 = v77;
  v68[1] = (uint64_t)sub_244783D98;
  v68[2] = (uint64_t)v69;
  v68[3] = (uint64_t)sub_244783E74;
  v68[4] = (uint64_t)v57;
  v68[5] = (uint64_t)sub_244784290;
  v68[6] = (uint64_t)v65;
  return result;
}

uint64_t sub_24477B460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata3;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (*(_QWORD *)(a1 + 16) == 3)
  {
    v10 = *(uint64_t (**)(uint64_t))(a2
                                            + *(int *)(type metadata accessor for CanvasControl(0, a5, a3, a4) + 28));
    v11 = *(_QWORD *)(sub_244793D44() - 8);
    v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    result = v10(v12);
    if (!v7)
    {
      swift_getTupleTypeMetadata3();
      v16 = type metadata accessor for CanvasControl(0, a6, v14, v15);
      v17 = *(_QWORD *)(v11 + 72);
      (*(void (**)(uint64_t))(a3 + *(int *)(v16 + 28)))(v12 + v17);
      v24 = type metadata accessor for CanvasControl(0, a7, v22, v23);
      return (*(uint64_t (**)(uint64_t))(a4 + *(int *)(v24 + 28)))(v12 + 2 * v17);
    }
  }
  else
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    v21 = type metadata accessor for CanvasControlConfiguration.IndexOutOfBounds(0, TupleTypeMetadata3, v19, v20);
    MEMORY[0x249518824](&unk_24479C4F8, v21);
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24477B664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t TupleTypeMetadata3;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257381348);
  sub_244793D44();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_244796B60;
  v16 = type metadata accessor for CanvasControl(0, a5, v14, v15);
  (*(void (**)(uint64_t))(a2 + *(int *)(v16 + 32)))(a1);
  v19 = *(void (**)(uint64_t))(a3 + *(int *)(type metadata accessor for CanvasControl(0, a6, v17, v18) + 32));
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v19(a1 + *(int *)(TupleTypeMetadata3 + 48));
  v23 = type metadata accessor for CanvasControl(0, a7, v21, v22);
  (*(void (**)(uint64_t))(a4 + *(int *)(v23 + 32)))(a1 + *(int *)(TupleTypeMetadata3 + 64));
  return v13;
}

uint64_t sub_24477B7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t TupleTypeMetadata3;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v41[1] = a6;
  v41[2] = a5;
  v42 = a3;
  v43 = a4;
  v44 = a2;
  v11 = sub_244793D44();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v41 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v41 - v19;
  v21 = sub_244793F6C();
  if (v21 == 2)
  {
    v28 = sub_244793F78() & 1;
    sub_244793F84();
    v31 = type metadata accessor for CanvasControl(0, a10, v29, v30);
    sub_2447454F0(v28, (uint64_t)v15, v42, v43, v44, v31);
  }
  else if (v21 == 1)
  {
    v32 = sub_244793F78() & 1;
    sub_244793F84();
    v35 = type metadata accessor for CanvasControl(0, a9, v33, v34);
    v36 = v45;
    sub_2447454F0(v32, (uint64_t)v18, v42, v43, v44, v35);
    if (v36)
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    v15 = v18;
  }
  else
  {
    if (v21)
    {
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      v40 = type metadata accessor for CanvasControlConfiguration.IndexOutOfBounds(0, TupleTypeMetadata3, v38, v39);
      MEMORY[0x249518824](&unk_24479C4F8, v40);
      swift_allocError();
      return swift_willThrow();
    }
    v22 = sub_244793F78() & 1;
    sub_244793F84();
    v25 = type metadata accessor for CanvasControl(0, a8, v23, v24);
    v26 = v45;
    sub_2447454F0(v22, (uint64_t)v20, v42, v43, v44, v25);
    if (v26)
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v20, v11);
    v15 = v20;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

uint64_t sub_24477BA0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(unint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  char *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t (*v80)(char *, char *, uint64_t);
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t result;
  uint64_t *v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t);
  void (*v91)(char *, uint64_t, uint64_t);
  void (*v92)(char *, uint64_t, uint64_t);
  void (*v93)(char *, uint64_t, uint64_t);
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;

  v117 = a8;
  v114 = a4;
  v115 = a7;
  v108 = a6;
  v113 = a5;
  v97 = a9;
  v121 = type metadata accessor for CanvasControl(0, a8, a3, a4);
  v95 = *(_QWORD *)(v121 - 8);
  v107 = *(_QWORD *)(v95 + 64);
  MEMORY[0x24BDAC7A8](v121);
  v118 = (char *)&v87 - v15;
  v120 = type metadata accessor for CanvasControl(0, a7, v16, v17);
  v102 = *(_QWORD *)(v120 - 8);
  v106 = *(_QWORD *)(v102 + 64);
  MEMORY[0x24BDAC7A8](v120);
  v116 = (char *)&v87 - v18;
  v101 = type metadata accessor for CanvasControl(0, a6, v19, v20);
  v100 = *(_QWORD *)(v101 - 8);
  v104 = *(_QWORD *)(v100 + 64);
  MEMORY[0x24BDAC7A8](v101);
  v119 = (char *)&v87 - v21;
  v24 = type metadata accessor for CanvasControl(0, a5, v22, v23);
  v99 = *(_QWORD *)(v24 - 8);
  v89 = v24;
  v105 = *(_QWORD *)(v99 + 64);
  MEMORY[0x24BDAC7A8](v24);
  v112 = (char *)&v87 - v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257381340);
  v26 = sub_24479414C();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(_QWORD *)(v27 + 72);
  v29 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v30 = swift_allocObject();
  v96 = v30;
  *(_OWORD *)(v30 + 16) = xmmword_24479C260;
  v31 = v30 + v29;
  v32 = *(void (**)(unint64_t, uint64_t, uint64_t))(v27 + 16);
  v33 = a1;
  v111 = a1;
  v32(v31, a1, v26);
  v34 = a2;
  v110 = a2;
  v32(v31 + v28, a2, v26);
  v35 = a3;
  v109 = a3;
  v32(v31 + 2 * v28, a3, v26);
  v36 = v114;
  v32(v31 + 3 * v28, v114, v26);
  v37 = v99;
  v93 = *(void (**)(char *, uint64_t, uint64_t))(v99 + 16);
  v38 = v112;
  v93(v112, v33, v24);
  v39 = v100;
  v92 = *(void (**)(char *, uint64_t, uint64_t))(v100 + 16);
  v40 = v101;
  v92(v119, v34, v101);
  v41 = v102;
  v91 = *(void (**)(char *, uint64_t, uint64_t))(v102 + 16);
  v91(v116, v35, v120);
  v42 = v95;
  v90 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 16);
  v90(v118, v36, v121);
  v43 = *(unsigned __int8 *)(v37 + 80);
  v44 = (v43 + 48) & ~v43;
  v45 = *(unsigned __int8 *)(v39 + 80);
  v47 = *(unsigned __int8 *)(v41 + 80);
  v105 = (v105 + v45 + v44) & ~v45;
  v46 = v105;
  v49 = *(unsigned __int8 *)(v42 + 80);
  v50 = v42;
  v103 = v44;
  v104 = (v104 + v47 + v105) & ~v47;
  v48 = v104;
  v51 = (v106 + v49 + v104) & ~v49;
  v107 += v51;
  v98 = v51;
  v106 = v43 | v45 | v47 | v49 | 7;
  v52 = (_QWORD *)swift_allocObject();
  v53 = v108;
  v52[2] = v113;
  v52[3] = v53;
  v54 = v117;
  v52[4] = v115;
  v52[5] = v54;
  v55 = v52;
  v99 = *(_QWORD *)(v99 + 32);
  v56 = v89;
  ((void (*)(char *, char *, uint64_t))v99)((char *)v52 + v44, v38, v89);
  v94 = v55;
  v100 = *(_QWORD *)(v100 + 32);
  v57 = v119;
  ((void (*)(char *, char *, uint64_t))v100)((char *)v55 + v46, v119, v40);
  v58 = (char *)v55 + v48;
  v88 = *(void (**)(char *, char *, uint64_t))(v102 + 32);
  v59 = v116;
  v60 = v120;
  v88(v58, v116, v120);
  v102 = *(_QWORD *)(v50 + 32);
  v61 = v118;
  v62 = v121;
  ((void (*)(char *, char *, uint64_t))v102)((char *)v55 + v51, v118, v121);
  v63 = v112;
  v93(v112, v111, v56);
  v64 = v101;
  v92(v57, v110, v101);
  v65 = v59;
  v91(v59, v109, v60);
  v90(v61, v114, v62);
  v66 = (char *)swift_allocObject();
  *((_QWORD *)v66 + 2) = v113;
  *((_QWORD *)v66 + 3) = v53;
  v67 = v117;
  *((_QWORD *)v66 + 4) = v115;
  *((_QWORD *)v66 + 5) = v67;
  v68 = v63;
  v69 = v56;
  v70 = (void (*)(char *, uint64_t, uint64_t))v99;
  ((void (*)(char *, char *, uint64_t))v99)(&v66[v103], v63, v56);
  v71 = v119;
  v72 = v64;
  v73 = (void (*)(char *, uint64_t, uint64_t))v100;
  ((void (*)(char *, char *, uint64_t))v100)(&v66[v105], v119, v64);
  v74 = v65;
  v75 = v120;
  v76 = (void (*)(char *, uint64_t, uint64_t))v88;
  v88(&v66[v104], v74, v120);
  v77 = v118;
  ((void (*)(char *, char *, uint64_t))v102)(&v66[v98], v118, v121);
  v70(v68, v111, v69);
  v73(v71, v110, v72);
  v78 = v116;
  v76(v116, v109, v75);
  v79 = v121;
  v80 = (uint64_t (*)(char *, char *, uint64_t))v102;
  ((void (*)(char *, uint64_t, uint64_t))v102)(v77, v114, v121);
  v81 = (char *)swift_allocObject();
  v82 = v112;
  v83 = v108;
  *((_QWORD *)v81 + 2) = v113;
  *((_QWORD *)v81 + 3) = v83;
  v84 = v117;
  *((_QWORD *)v81 + 4) = v115;
  *((_QWORD *)v81 + 5) = v84;
  v70(&v81[v103], (uint64_t)v82, v69);
  v73(&v81[v105], (uint64_t)v119, v72);
  v76(&v81[v104], (uint64_t)v78, v120);
  result = v80(&v81[v98], v118, v79);
  v86 = v97;
  *v97 = v96;
  v86[1] = (uint64_t)sub_244783628;
  v86[2] = (uint64_t)v94;
  v86[3] = (uint64_t)sub_244783728;
  v86[4] = (uint64_t)v66;
  v86[5] = (uint64_t)sub_244783C8C;
  v86[6] = (uint64_t)v81;
  return result;
}

uint64_t sub_24477C058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  void (**v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t TupleTypeMetadata;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v32;

  if (*(_QWORD *)(a1 + 16) == 4)
  {
    v13 = *(uint64_t (**)(void))(a2 + *(int *)(type metadata accessor for CanvasControl(0, a6, a3, a4) + 28));
    v14 = *(_QWORD *)(sub_244793D44() - 8);
    v32 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    result = v13();
    if (!v9)
    {
      swift_getTupleTypeMetadata();
      v18 = (void (**)(uint64_t))(a3
                                          + *(int *)(type metadata accessor for CanvasControl(0, a7, v16, v17) + 28));
      v19 = *(_QWORD *)(v14 + 72);
      (*v18)(v32 + v19);
      v22 = type metadata accessor for CanvasControl(0, a8, v20, v21);
      (*(void (**)(uint64_t))(a4 + *(int *)(v22 + 28)))(v32 + 2 * v19);
      v25 = type metadata accessor for CanvasControl(0, a9, v23, v24);
      return (*(uint64_t (**)(uint64_t))(a5 + *(int *)(v25 + 28)))(v32 + 3 * v19);
    }
  }
  else
  {
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    v29 = type metadata accessor for CanvasControlConfiguration.IndexOutOfBounds(0, TupleTypeMetadata, v27, v28);
    MEMORY[0x249518824](&unk_24479C4F8, v29);
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24477C2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  int *TupleTypeMetadata;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257381348);
  sub_244793D44();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24479C260;
  v17 = type metadata accessor for CanvasControl(0, a6, v15, v16);
  (*(void (**)(uint64_t))(a2 + *(int *)(v17 + 32)))(a1);
  v20 = *(void (**)(uint64_t))(a3 + *(int *)(type metadata accessor for CanvasControl(0, a7, v18, v19) + 32));
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v20(a1 + TupleTypeMetadata[12]);
  v24 = type metadata accessor for CanvasControl(0, a8, v22, v23);
  (*(void (**)(uint64_t))(a4 + *(int *)(v24 + 32)))(a1 + TupleTypeMetadata[16]);
  v27 = type metadata accessor for CanvasControl(0, a9, v25, v26);
  (*(void (**)(uint64_t))(a5 + *(int *)(v27 + 32)))(a1 + TupleTypeMetadata[20]);
  return v14;
}

uint64_t sub_24477C454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t TupleTypeMetadata;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[5];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v50 = a2;
  v47[3] = a7;
  v47[4] = a8;
  v47[1] = a5;
  v47[2] = a6;
  v48 = a3;
  v49 = a4;
  v57 = sub_244793D44();
  v52 = *(_QWORD *)(v57 - 8);
  v12 = MEMORY[0x24BDAC7A8](v57);
  v14 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v47 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)v47 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)v47 - v21;
  switch(sub_244793F6C())
  {
    case 0:
      v23 = sub_244793F78() & 1;
      sub_244793F84();
      v26 = type metadata accessor for CanvasControl(0, a9, v24, v25);
      v27 = v51;
      sub_2447454F0(v23, (uint64_t)v22, v48, v49, v50, v26);
      if (!v27)
      {
        v14 = v22;
        goto LABEL_13;
      }
      result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v22, v57);
      break;
    case 1:
      v33 = sub_244793F78() & 1;
      sub_244793F84();
      v36 = type metadata accessor for CanvasControl(0, a10, v34, v35);
      v37 = v51;
      sub_2447454F0(v33, (uint64_t)v20, v48, v49, v50, v36);
      if (!v37)
      {
        v14 = v20;
        goto LABEL_13;
      }
      result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v20, v57);
      break;
    case 2:
      v38 = sub_244793F78() & 1;
      sub_244793F84();
      v41 = type metadata accessor for CanvasControl(0, a11, v39, v40);
      v42 = v51;
      sub_2447454F0(v38, (uint64_t)v17, v48, v49, v50, v41);
      if (!v42)
      {
        v14 = v17;
        goto LABEL_13;
      }
      result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v17, v57);
      break;
    case 3:
      v43 = sub_244793F78() & 1;
      sub_244793F84();
      v46 = type metadata accessor for CanvasControl(0, a12, v44, v45);
      sub_2447454F0(v43, (uint64_t)v14, v48, v49, v50, v46);
LABEL_13:
      result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v14, v57);
      break;
    default:
      v53 = a9;
      v54 = a10;
      v55 = a11;
      v56 = a12;
      TupleTypeMetadata = swift_getTupleTypeMetadata();
      v32 = type metadata accessor for CanvasControlConfiguration.IndexOutOfBounds(0, TupleTypeMetadata, v30, v31);
      MEMORY[0x249518824](&unk_24479C4F8, v32);
      swift_allocError();
      result = swift_willThrow();
      break;
  }
  return result;
}

uint64_t CanvasControlConfigurationBuilder.One.control.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;

  v6 = type metadata accessor for CanvasControl(0, *(_QWORD *)(a1 + 16), a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a4, v4, v6);
}

uint64_t CanvasControlConfigurationBuilder.One.optional.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v7 = *(_QWORD *)(a1 + 16);
  v8 = type metadata accessor for CanvasControl(255, v7, a2, a3);
  v9 = sub_24479540C();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - v10;
  v12 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v14 - v10, v4, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v8);
  return sub_24477C828((uint64_t)v11, v7, *(_QWORD *)(a1 + 24), a4);
}

uint64_t sub_24477C828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v8 = sub_24479540C();
  v11 = type metadata accessor for CanvasControl(0, v8, v9, v10);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v19 - v13;
  sub_244744CD8(a1, v8, a2, a3, (uint64_t)&v19 - v13);
  type metadata accessor for CanvasControl(255, a2, v15, v16);
  v17 = sub_24479540C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a4, v14, v11);
}

uint64_t CanvasControlConfigurationBuilder.One.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = *(_QWORD *)(a1 + 16);
  v7 = type metadata accessor for CanvasControl(0, v6, a2, a3);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v14 - v8, v4);
  return sub_24477A348(v9, v6, v11, v12, a4);
}

uint64_t CanvasControlConfigurationBuilder.One.Optional.control.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = sub_24479540C();
  v6 = type metadata accessor for CanvasControl(0, v3, v4, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, v1, v6);
}

uint64_t CanvasControlConfigurationBuilder.One.Optional.optional.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2);
}

uint64_t _s15PreviewShellKit33CanvasControlConfigurationBuilderV3OneV4noneAE8OptionalVy_x_GvgZ_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v8 = type metadata accessor for CanvasControl(255, a1, a3, a4);
  v9 = sub_24479540C();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))((char *)&v13 - v10, 1, 1, v8);
  return sub_24477C828((uint64_t)v11, a1, a2, a5);
}

uint64_t CanvasControlConfigurationBuilder.One.Optional.configuration.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_24479540C();
  v6 = type metadata accessor for CanvasControl(0, v3, v4, v5);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - v7;
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)&v13 - v7, v1);
  return sub_24477A348(v8, v3, v10, v11, a1);
}

uint64_t sub_24477CB30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;

  v7 = type metadata accessor for CanvasControl(0, a2, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a5, a1, v7);
}

uint64_t sub_24477CB74(uint64_t a1)
{
  return static CanvasControlConfigurationBuilder.One.none.getter(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

void sub_24477CB90(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for CanvasControlConfigurationBuilder.Two();
}

uint64_t sub_24477CBE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void CanvasControlConfigurationBuilder.Two.optional.getter(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v17 = a2;
  v16 = a1[5];
  v3 = *(_QWORD *)(v16 + 8);
  v4 = a1[3];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14[1] = (char *)v14 - v6;
  v7 = *(_QWORD *)(a1[4] + 8);
  v8 = a1[2];
  v9 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v14 - v10;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v8, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 24))(v4, v3);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v13 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v17, v11, v9);
  v19 = v9;
  v20 = AssociatedTypeWitness;
  v21 = AssociatedConformanceWitness;
  v22 = v13;
  type metadata accessor for CanvasControlConfigurationBuilder.Two();
}

uint64_t sub_24477CDA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 120) + 32))(v2 + *(int *)(a1 + 52), v3, v1);
}

void static CanvasControlConfigurationBuilder.Two.none.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  _QWORD v18[4];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v18[3] = a4;
  v19 = a5;
  v18[1] = a3;
  v8 = *(_QWORD *)(a4 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v18[2] = (char *)v18 - v10;
  v11 = *(_QWORD *)(a3 + 8);
  v12 = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v18 - v14;
  (*(void (**)(uint64_t, uint64_t))(v11 + 32))(a1, v11);
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(a2, v8);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v17 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v19, v15, v12);
  v21 = v12;
  v22 = AssociatedTypeWitness;
  v23 = AssociatedConformanceWitness;
  v24 = v17;
  type metadata accessor for CanvasControlConfigurationBuilder.Two();
}

uint64_t sub_24477CF5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 120) + 32))(v1 + *(int *)(a1 + 52), *(_QWORD *)(v3 - 144), v2);
}

uint64_t CanvasControlConfigurationBuilder.Two.configuration.getter@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  uint64_t *v21;

  v21 = a2;
  v3 = a1[5];
  v4 = a1[3];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = type metadata accessor for CanvasControl(0, AssociatedTypeWitness, v6, v7);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - v9;
  v11 = a1[4];
  v12 = a1[2];
  v13 = swift_getAssociatedTypeWitness();
  v16 = type metadata accessor for CanvasControl(0, v13, v14, v15);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v20 - v17;
  (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v12, v11);
  (*(void (**)(uint64_t, uint64_t))(v3 + 24))(v4, v3);
  return sub_24477A83C((uint64_t)v18, (uint64_t)v10, v13, AssociatedTypeWitness, v21);
}

void sub_24477D0E8(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  static CanvasControlConfigurationBuilder.Two.none.getter(a1[2], a1[3], a1[4], a1[5], a2);
}

void sub_24477D0FC(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for CanvasControlConfigurationBuilder.Three();
}

uint64_t sub_24477D170(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v5 + *(int *)(a1 + 68), v4, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v5 + *(int *)(a1 + 72), v3, v1);
}

void CanvasControlConfigurationBuilder.Three.optional.getter(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;

  v18 = a2;
  v17 = a1[7];
  v13 = *(_QWORD *)(v17 + 8);
  v15 = a1[4];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11[1] = (char *)v11 - v3;
  v14 = a1[6];
  v4 = *(_QWORD *)(v14 + 8);
  v5 = a1[3];
  v12 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v12);
  v6 = *(_QWORD *)(a1[5] + 8);
  v7 = a1[2];
  v8 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v11 - v9;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v7, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v5, v4);
  (*(void (**)(uint64_t))(v13 + 24))(v15);
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  sub_24477D0FC((uint64_t)v10, v8, v18);
}

void static CanvasControlConfigurationBuilder.Three.none.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedTypeWitness;
  uint64_t v23;
  uint64_t v24;

  v23 = a6;
  v24 = a7;
  v21 = a5;
  v19[1] = a4;
  v12 = *(_QWORD *)(a6 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v19[2] = (char *)v19 - v13;
  v14 = *(_QWORD *)(a5 + 8);
  v20 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v20);
  v15 = *(_QWORD *)(a4 + 8);
  v16 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v19 - v17;
  (*(void (**)(uint64_t, uint64_t))(v15 + 32))(a1, v15);
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(a2, v14);
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(a3, v12);
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  sub_24477D0FC((uint64_t)v18, v16, v24);
}

uint64_t CanvasControlConfigurationBuilder.Three.configuration.getter@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t AssociatedTypeWitness;
  uint64_t v27;
  uint64_t *v28;

  v28 = a2;
  v27 = a1[7];
  v25 = a1[4];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = type metadata accessor for CanvasControl(0, AssociatedTypeWitness, v3, v4);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - v6;
  v8 = a1[6];
  v9 = a1[3];
  v24 = swift_getAssociatedTypeWitness();
  v12 = type metadata accessor for CanvasControl(0, v24, v10, v11);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v24 - v13;
  v15 = a1[5];
  v16 = a1[2];
  v17 = swift_getAssociatedTypeWitness();
  v20 = type metadata accessor for CanvasControl(0, v17, v18, v19);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v24 - v21;
  (*(void (**)(uint64_t, uint64_t))(v15 + 24))(v16, v15);
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v9, v8);
  (*(void (**)(uint64_t))(v27 + 24))(v25);
  return sub_24477AFB4((uint64_t)v22, (uint64_t)v14, (uint64_t)v7, v17, v24, AssociatedTypeWitness, v28);
}

void sub_24477D804(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  static CanvasControlConfigurationBuilder.Three.none.getter(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a2);
}

void sub_24477D81C(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for CanvasControlConfigurationBuilder.Four();
}

uint64_t sub_24477D8A0(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v7 + a1[21], v6, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v7 + a1[22], v5, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v7 + a1[23], v4, v1);
}

void CanvasControlConfigurationBuilder.Four.optional.getter(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedTypeWitness;
  uint64_t v23;
  uint64_t v24;
  char *v25;

  v24 = a2;
  v23 = a1[9];
  AssociatedConformanceWitness = *(_QWORD *)(v23 + 8);
  v20 = a1[5];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v17 = (char *)v12 - v3;
  v21 = a1[8];
  v4 = *(_QWORD *)(v21 + 8);
  v15 = a1[4];
  v19 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v19);
  v25 = (char *)v12 - v5;
  v16 = a1[7];
  v6 = *(_QWORD *)(v16 + 8);
  v12[0] = a1[3];
  v14 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v14);
  v12[1] = (char *)v12 - v7;
  v8 = *(_QWORD *)(a1[6] + 8);
  v9 = a1[2];
  v10 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t)v12 - v11;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v9, v8);
  (*(void (**)(_QWORD, uint64_t))(v6 + 24))(v12[0], v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v15, v4);
  (*(void (**)(uint64_t))(AssociatedConformanceWitness + 24))(v20);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  sub_24477D81C(v13, v10, v24);
}

void static CanvasControlConfigurationBuilder.Four.none.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t AssociatedConformanceWitness;
  uint64_t v33;
  uint64_t v34;
  uint64_t AssociatedTypeWitness;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a8;
  v37 = a9;
  v34 = a7;
  v30 = a6;
  v25 = a5;
  v38 = a4;
  v28 = a3;
  AssociatedConformanceWitness = *(_QWORD *)(a8 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v31 = (char *)&v23 - v14;
  v15 = *(_QWORD *)(a7 + 8);
  v33 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v33);
  v26 = (char *)&v23 - v16;
  v17 = *(_QWORD *)(a6 + 8);
  v29 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v29);
  v27 = (char *)&v23 - v18;
  v19 = *(_QWORD *)(a5 + 8);
  v24 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v24);
  v21 = (char *)&v23 - v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 32))(a1, v19);
  (*(void (**)(uint64_t, uint64_t))(v17 + 32))(a2, v17);
  (*(void (**)(uint64_t, uint64_t))(v15 + 32))(v28, v15);
  (*(void (**)(void))(AssociatedConformanceWitness + 32))();
  v22 = v24;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  sub_24477D81C((uint64_t)v21, v22, v37);
}

uint64_t CanvasControlConfigurationBuilder.Four.configuration.getter@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t AssociatedTypeWitness;
  uint64_t v37;
  uint64_t *v38;

  v38 = a2;
  v37 = a1[9];
  v35 = a1[5];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = type metadata accessor for CanvasControl(0, AssociatedTypeWitness, v3, v4);
  MEMORY[0x24BDAC7A8](v5);
  v34 = (char *)&v30 - v6;
  v7 = a1[8];
  v31 = a1[4];
  v32 = v7;
  v33 = swift_getAssociatedTypeWitness();
  v10 = type metadata accessor for CanvasControl(0, v33, v8, v9);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - v11;
  v13 = a1[7];
  v14 = a1[3];
  v30 = swift_getAssociatedTypeWitness();
  v17 = type metadata accessor for CanvasControl(0, v30, v15, v16);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v30 - v18;
  v20 = a1[6];
  v21 = a1[2];
  v22 = swift_getAssociatedTypeWitness();
  v25 = type metadata accessor for CanvasControl(0, v22, v23, v24);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v30 - v26;
  (*(void (**)(uint64_t, uint64_t))(v20 + 24))(v21, v20);
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v14, v13);
  (*(void (**)(uint64_t))(v32 + 24))(v31);
  v28 = (uint64_t)v34;
  (*(void (**)(uint64_t))(v37 + 24))(v35);
  return sub_24477BA0C((uint64_t)v27, (uint64_t)v19, (uint64_t)v12, v28, v22, v30, v33, AssociatedTypeWitness, v38);
}

void sub_24477E120(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  static CanvasControlConfigurationBuilder.Four.none.getter(a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a2);
}

uint64_t static CanvasControlConfigurationBuilder.buildExpression<A>(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = type metadata accessor for CanvasControl(0, AssociatedTypeWitness, v7, v8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - v11;
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v12, v9);
}

uint64_t static CanvasControlConfigurationBuilder.buildBlock<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

void static CanvasControlConfigurationBuilder.buildBlock<A, B>(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD v21[4];

  v13 = *(_QWORD *)(a4 - 8);
  v14 = MEMORY[0x24BDAC7A8](a1);
  v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v20 = (char *)v21 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a2, a4);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(a7, v20, a3);
  v21[0] = a3;
  v21[1] = a4;
  v21[2] = a5;
  v21[3] = a6;
  type metadata accessor for CanvasControlConfigurationBuilder.Two();
}

uint64_t sub_24477E2F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2 + *(int *)(a1 + 52), v3, v1);
}

void static CanvasControlConfigurationBuilder.buildBlock<A, B, C>(_:_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a7;
  v30 = a8;
  v28 = a9;
  v27 = a10;
  v15 = *(_QWORD *)(a6 - 8);
  v16 = MEMORY[0x24BDAC7A8](a1);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v16);
  v23 = (char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v26 + 16))(v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, a2, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a3, a6);
  sub_24477D0FC((uint64_t)v25, a4, v28);
}

void static CanvasControlConfigurationBuilder.buildBlock<A, B, C>(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v21 = a6;
  v22 = a8;
  v23 = a5;
  v12 = MEMORY[0x24BDAC7A8](a1);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  (*(void (**)(char *))(v19 + 16))((char *)&v20 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a2, a3);
  v24 = a3;
  v25 = a4;
  v26 = v21;
  v27 = a7;
  type metadata accessor for CanvasControlConfigurationBuilder.Two();
}

void sub_24477E57C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v6 + *(int *)(a1 + 52), v2);
  sub_24477D0FC(v1, v3, *(_QWORD *)(v7 - 128));
}

void type metadata accessor for CanvasControlConfigurationBuilder.Two()
{
  JUMPOUT(0x24951877CLL);
}

void static CanvasControlConfigurationBuilder.buildBlock<A, B, C>(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[8];

  v18[2] = a9;
  v18[3] = a8;
  v18[0] = *(_QWORD *)(a5 - 8);
  v18[1] = a2;
  v14 = MEMORY[0x24BDAC7A8](a1);
  v15 = MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v15);
  (*(void (**)(char *, uint64_t))(v17 + 16))((char *)v18 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v18[4] = a3;
  v18[5] = a4;
  v18[6] = a6;
  v18[7] = a7;
  type metadata accessor for CanvasControlConfigurationBuilder.Two();
}

void sub_24477E6D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v5, v8 + *(int *)(a1 + 52), v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 - 144) + 16))(v7, *(_QWORD *)(v9 - 136), v2);
  sub_24477D0FC(v6, v4, *(_QWORD *)(v9 - 128));
}

void static CanvasControlConfigurationBuilder.buildBlock<A, B, C, D>(_:_:_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;

  v33 = a8;
  v34 = a3;
  v32 = a2;
  v39 = a9;
  v38 = a10;
  v36 = a4;
  v37 = a11;
  v35 = a12;
  v15 = *(_QWORD *)(a8 - 8);
  v16 = MEMORY[0x24BDAC7A8](a1);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v16);
  v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v21);
  v28 = (char *)&v32 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v31 + 16))(v30);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v28, v32, a6);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, v34, a7);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v36, v33);
  sub_24477D81C((uint64_t)v30, a5, v39);
}

void static CanvasControlConfigurationBuilder.buildBlock<A, B, C, D>(_:_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v34 = a8;
  v35 = a7;
  v28 = a2;
  v29 = a3;
  v30 = a10;
  v31 = a11;
  v32 = *(_QWORD *)(a6 - 8);
  v33 = a9;
  v14 = MEMORY[0x24BDAC7A8](a1);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v20 - 8);
  v27[1] = v20;
  v22 = MEMORY[0x24BDAC7A8](v17);
  v24 = (char *)v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  (*(void (**)(char *))(v26 + 16))((char *)v27 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v24, v28, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v29, a5);
  v36 = a5;
  v37 = a6;
  v38 = v30;
  v39 = v31;
  type metadata accessor for CanvasControlConfigurationBuilder.Two();
}

{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v31 = a8;
  v32 = a7;
  v28 = a6;
  v29 = a3;
  v30 = a11;
  v14 = *(_QWORD *)(a6 - 8);
  v26 = a10;
  v27 = v14;
  v15 = MEMORY[0x24BDAC7A8](a1);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v22;
  MEMORY[0x24BDAC7A8](v19);
  (*(void (**)(char *))(v24 + 16))((char *)&v25 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a2, a4);
  v33 = a4;
  v34 = a5;
  v35 = a9;
  v36 = v26;
  type metadata accessor for CanvasControlConfigurationBuilder.Two();
}

void sub_24477EA68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 144) + 16))(v5, v2 + *(int *)(a1 + 52), v1);
  sub_24477D81C(v4, v3, *(_QWORD *)(v6 - 128));
}

void sub_24477EC2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v6, v1 + *(int *)(a1 + 52), v2);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v7 - 160) + 16))(v5, *(_QWORD *)(v7 - 144), *(_QWORD *)(v7 - 152));
  sub_24477D81C(v3, *(_QWORD *)(v7 - 176), *(_QWORD *)(v7 - 128));
}

void static CanvasControlConfigurationBuilder.buildBlock<A, B, C, D>(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v31 = a8;
  v32 = a6;
  v28 = a10;
  v27[0] = a9;
  v30 = *(_QWORD *)(a5 - 8);
  v15 = MEMORY[0x24BDAC7A8](a1);
  v29 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[2] = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[1] = v24;
  MEMORY[0x24BDAC7A8](v21);
  (*(void (**)(char *))(v26 + 16))((char *)v27 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, a2, a3);
  v33 = a3;
  v34 = a4;
  v35 = a5;
  v36 = a7;
  v37 = a9;
  v38 = v28;
  type metadata accessor for CanvasControlConfigurationBuilder.Three();
}

void sub_24477EE08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 176) + 16))(v5, v4 + *(int *)(a1 + 68), v2);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 152) + 16))(*(_QWORD *)(v6 - 160), v4 + *(int *)(a1 + 72), v1);
  sub_24477D81C(v3, *(_QWORD *)(v6 - 184), *(_QWORD *)(v6 - 144));
}

void type metadata accessor for CanvasControlConfigurationBuilder.Three()
{
  JUMPOUT(0x24951877CLL);
}

void static CanvasControlConfigurationBuilder.buildBlock<A, B, C, D>(_:_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[14];

  v24[5] = a7;
  v24[6] = a3;
  v24[4] = a2;
  v24[9] = a9;
  v24[7] = a12;
  v24[8] = a11;
  v16 = *(_QWORD *)(a7 - 8);
  v24[2] = a6;
  v24[3] = v16;
  v17 = MEMORY[0x24BDAC7A8](a1);
  v24[1] = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v20 = MEMORY[0x24BDAC7A8](v19);
  MEMORY[0x24BDAC7A8](v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))((char *)v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v23);
  v24[10] = a4;
  v24[11] = a5;
  v24[12] = a8;
  v24[13] = a10;
  type metadata accessor for CanvasControlConfigurationBuilder.Two();
}

void sub_24477EFDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v5, v4 + *(int *)(a1 + 52), v2);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v9 - 184) + 16))(v8, *(_QWORD *)(v9 - 160), *(_QWORD *)(v9 - 176));
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v9 - 168) + 16))(v6, *(_QWORD *)(v9 - 144), *(_QWORD *)(v9 - 152));
  sub_24477D81C(v7, v3, *(_QWORD *)(v9 - 120));
}

void static CanvasControlConfigurationBuilder.buildBlock<A, B, C, D>(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[14];

  v23[2] = a6;
  v23[3] = a2;
  v23[8] = a9;
  v23[9] = a5;
  v23[4] = a10;
  v23[5] = a11;
  v23[7] = *(_QWORD *)(a6 - 8);
  v16 = MEMORY[0x24BDAC7A8](a1);
  v23[6] = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v23[1] = (char *)v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  MEMORY[0x24BDAC7A8](v20);
  (*(void (**)(char *, uint64_t))(v22 + 16))((char *)v23 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v23[10] = a3;
  v23[11] = a4;
  v23[12] = a7;
  v23[13] = a8;
  type metadata accessor for CanvasControlConfigurationBuilder.Two();
}

void sub_24477F1B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1 + *(int *)(a1 + 52), v6);
  v8 = *(_QWORD *)(v7 - 120);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 16))(v2, *(_QWORD *)(v7 - 168), v8);
  v9 = *(_QWORD *)(v7 - 176);
  *(_QWORD *)(v7 - 112) = v8;
  *(_QWORD *)(v7 - 104) = v9;
  v10 = *(_QWORD *)(v7 - 152);
  *(_QWORD *)(v7 - 96) = *(_QWORD *)(v7 - 160);
  *(_QWORD *)(v7 - 88) = v10;
  type metadata accessor for CanvasControlConfigurationBuilder.Two();
}

void sub_24477F200(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 136) + 16))(*(_QWORD *)(v5 - 144), v1 + *(int *)(a1 + 52), v4);
  sub_24477D81C(v3, v2, *(_QWORD *)(v5 - 128));
}

void static CanvasControlConfigurationBuilder.buildBlock<A, B, C, D>(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v24 = a7;
  v23[0] = a6;
  v27 = a5;
  v28 = a2;
  v30 = a8;
  v29 = a10;
  v26 = *(_QWORD *)(a5 - 8);
  v14 = MEMORY[0x24BDAC7A8](a1);
  v25 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[2] = *(_QWORD *)(v16 - 8);
  v17 = v16;
  v18 = MEMORY[0x24BDAC7A8](v14);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v23[1] = v20;
  MEMORY[0x24BDAC7A8](v19);
  (*(void (**)(char *, uint64_t))(v22 + 16))((char *)v23 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v31 = a3;
  v32 = a4;
  v33 = v17;
  v34 = a6;
  v35 = v24;
  v36 = a9;
  type metadata accessor for CanvasControlConfigurationBuilder.Three();
}

void sub_24477F3AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v6, v5 + *(int *)(a1 + 68), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 192) + 16))(v7, v5 + *(int *)(a1 + 72), v2);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v8 - 168) + 16))(*(_QWORD *)(v8 - 176), *(_QWORD *)(v8 - 152), *(_QWORD *)(v8 - 160));
  sub_24477D81C(v4, *(_QWORD *)(v8 - 200), *(_QWORD *)(v8 - 136));
}

uint64_t static CanvasControlConfigurationBuilder.buildOptional<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a5;
  v8 = type metadata accessor for CanvasControlConfigurationBuilder.One(255, a2, a3, a4);
  v9 = sub_24479540C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22 - v11;
  v14 = type metadata accessor for CanvasControlConfigurationBuilder.One.Optional(0, a2, a3, v13);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v22 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v18 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return static CanvasControlConfigurationBuilder.One.none.getter(a2, a3);
  }
  else
  {
    CanvasControlConfigurationBuilder.One.optional.getter(v8, v19, v20, (uint64_t)v17);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v8);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v23, v17, v14);
  }
}

uint64_t type metadata accessor for CanvasControlConfigurationBuilder.One(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CanvasControlConfigurationBuilder.One);
}

uint64_t type metadata accessor for CanvasControlConfigurationBuilder.One.Optional(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CanvasControlConfigurationBuilder.One.Optional);
}

void static CanvasControlConfigurationBuilder.buildOptional<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = type metadata accessor for CanvasControlConfigurationBuilder.One(255, a2, a4, a4);
  v9 = type metadata accessor for CanvasControlConfigurationBuilder.One(255, a3, a5, v7);
  MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>, v8);
  MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>, v9);
  type metadata accessor for CanvasControlConfigurationBuilder.Two();
}

void sub_24477F668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = sub_24479540C();
  MEMORY[0x24BDAC7A8](v5);
  v7 = type metadata accessor for CanvasControlConfigurationBuilder.One.Optional(255, v1, v2, v6);
  v9 = type metadata accessor for CanvasControlConfigurationBuilder.One.Optional(255, v0, v3, v8);
  v10 = MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>.Optional, v7);
  v11 = MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>.Optional, v9);
  *(_QWORD *)(v4 - 112) = v7;
  *(_QWORD *)(v4 - 104) = v9;
  *(_QWORD *)(v4 - 96) = v10;
  *(_QWORD *)(v4 - 88) = v11;
  type metadata accessor for CanvasControlConfigurationBuilder.Two();
}

void sub_24477F704(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v10 - v8;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v7 - 128), v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(*(v4 - 1) + 48))(v5, 1, v4) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v6);
    static CanvasControlConfigurationBuilder.Two.none.getter(v1, v2, *(_QWORD *)(v7 - 136), *(_QWORD *)(v7 - 144), *(_QWORD *)(v7 - 120));
  }
  CanvasControlConfigurationBuilder.Two.optional.getter(v4, (uint64_t)v9);
}

void sub_24477F79C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v3);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v6 - 120), v1, v0);
  JUMPOUT(0x24477F7C0);
}

void static CanvasControlConfigurationBuilder.buildOptional<A, B, C>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = type metadata accessor for CanvasControlConfigurationBuilder.One(255, a2, a5, a4);
  v14 = type metadata accessor for CanvasControlConfigurationBuilder.One(255, a3, a6, v11);
  v15 = type metadata accessor for CanvasControlConfigurationBuilder.One(255, a4, a7, v12);
  MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>, v13);
  MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>, v14);
  MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>, v15);
  type metadata accessor for CanvasControlConfigurationBuilder.Three();
}

void sub_24477F8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = sub_24479540C();
  MEMORY[0x24BDAC7A8](v5);
  v7 = type metadata accessor for CanvasControlConfigurationBuilder.One.Optional(255, v1, v0, v6);
  v9 = type metadata accessor for CanvasControlConfigurationBuilder.One.Optional(255, v3, v2, v8);
  v11 = type metadata accessor for CanvasControlConfigurationBuilder.One.Optional(255, *(_QWORD *)(v4 - 160), *(_QWORD *)(v4 - 152), v10);
  v12 = MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>.Optional, v7);
  v13 = MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>.Optional, v9);
  v14 = MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>.Optional, v11);
  *(_QWORD *)(v4 - 128) = v7;
  *(_QWORD *)(v4 - 120) = v9;
  *(_QWORD *)(v4 - 112) = v11;
  *(_QWORD *)(v4 - 104) = v12;
  *(_QWORD *)(v4 - 96) = v13;
  *(_QWORD *)(v4 - 88) = v14;
  type metadata accessor for CanvasControlConfigurationBuilder.Three();
}

void sub_24477F970(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v8 - v6;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 - 144), v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(*(v3 - 1) + 48))(v4, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v1);
    static CanvasControlConfigurationBuilder.Three.none.getter(*(_QWORD *)(v5 - 168), *(_QWORD *)(v5 - 176), *(_QWORD *)(v5 - 184), *(_QWORD *)(v5 - 192), *(_QWORD *)(v5 - 200), *(_QWORD *)(v5 - 208), *(_QWORD *)(v5 - 136));
  }
  CanvasControlConfigurationBuilder.Three.optional.getter(v3, (uint64_t)v7);
}

void sub_24477FA08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v6 - 136), v1, v0);
  JUMPOUT(0x24477FA2CLL);
}

void static CanvasControlConfigurationBuilder.buildOptional<A, B, C, D>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = type metadata accessor for CanvasControlConfigurationBuilder.One(255, a2, a6, a4);
  v19 = type metadata accessor for CanvasControlConfigurationBuilder.One(255, a3, a7, v14);
  v20 = type metadata accessor for CanvasControlConfigurationBuilder.One(255, a4, a8, v15);
  v17 = type metadata accessor for CanvasControlConfigurationBuilder.One(255, a5, a9, v16);
  MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>, v18);
  MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>, v19);
  MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>, v20);
  MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>, v17);
  type metadata accessor for CanvasControlConfigurationBuilder.Four();
}

void sub_24477FB7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v3 - 224) = a1;
  v4 = sub_24479540C();
  *(_QWORD *)(v3 - 232) = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = type metadata accessor for CanvasControlConfigurationBuilder.One.Optional(255, v2, v1, v5);
  v8 = type metadata accessor for CanvasControlConfigurationBuilder.One.Optional(255, *(_QWORD *)(v3 - 216), *(_QWORD *)(v3 - 208), v7);
  v10 = type metadata accessor for CanvasControlConfigurationBuilder.One.Optional(255, *(_QWORD *)(v3 - 200), *(_QWORD *)(v3 - 184), v9);
  v12 = type metadata accessor for CanvasControlConfigurationBuilder.One.Optional(255, *(_QWORD *)(v3 - 176), *(_QWORD *)(v3 - 192), v11);
  v13 = MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>.Optional, v6);
  v14 = MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>.Optional, v8);
  v15 = MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>.Optional, v10);
  v16 = MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>.Optional, v12);
  *(_QWORD *)(v3 - 152) = v6;
  *(_QWORD *)(v3 - 144) = v8;
  *(_QWORD *)(v3 - 136) = v10;
  *(_QWORD *)(v3 - 128) = v12;
  *(_QWORD *)(v3 - 120) = v13;
  *(_QWORD *)(v3 - 112) = v14;
  *(_QWORD *)(v3 - 104) = v15;
  *(_QWORD *)(v3 - 96) = v16;
  type metadata accessor for CanvasControlConfigurationBuilder.Four();
}

void sub_24477FC6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v8 - v6;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 16))(v2, *(_QWORD *)(v5 - 168), v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(*(v3 - 1) + 48))(v2, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v1);
    static CanvasControlConfigurationBuilder.Four.none.getter(*(_QWORD *)(v5 - 240), *(_QWORD *)(v5 - 248), *(_QWORD *)(v5 - 256), *(_QWORD *)(v5 - 264), *(_QWORD *)(v5 - 272), *(_QWORD *)(v5 - 280), *(_QWORD *)(v5 - 288), *(_QWORD *)(v5 - 296), *(_QWORD *)(v5 - 160));
  }
  CanvasControlConfigurationBuilder.Four.optional.getter(v3, (uint64_t)v7);
}

void sub_24477FD24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v5);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v6 - 160), v2, v1);
  JUMPOUT(0x24477FD48);
}

void type metadata accessor for CanvasControlConfigurationBuilder.Four()
{
  JUMPOUT(0x24951877CLL);
}

uint64_t static CanvasControlConfigurationBuilder.buildFinalResult<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
}

void sub_24477FDA0()
{
  JUMPOUT(0x249518824);
}

uint64_t sub_24477FDB0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>.Optional);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24477FDDC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x249518824](&protocol conformance descriptor for CanvasControlConfigurationBuilder.One<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24477FE08()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24477FE40(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_24477FEB0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_retain();
  swift_release();
  v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24477FF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  v4 = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v4;
  swift_release();
  return a1;
}

uint64_t sub_24477FFA0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_24477FFE8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for CanvasControlConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CanvasControlConfiguration);
}

uint64_t dispatch thunk of CanvasControlTuple.optional.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static CanvasControlTuple.none.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CanvasControlTuple.configuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

ValueMetadata *type metadata accessor for CanvasControlConfigurationBuilder()
{
  return &type metadata for CanvasControlConfigurationBuilder;
}

uint64_t sub_244780068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for CanvasControl(319, *(_QWORD *)(a1 + 16), a3, a4);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2447800D4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a3 + 16);
  v7 = type metadata accessor for CanvasControl(0, v6, a3, a4);
  v8 = *(_DWORD *)(*(_QWORD *)(v7 - 8) + 80);
  if ((v8 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v8 + 16) & ~(unint64_t)v8));
    swift_retain();
  }
  else
  {
    v9 = (int *)v7;
    v10 = sub_24479414C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    v11 = v9[7];
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = v9[8];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v9[9];
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v9[10];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v28 = type metadata accessor for ThumbnailHostFactory(0, v6, v26, v27);
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v30(v25, 1, v28))
    {
      v31 = sub_24479540C();
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v33 = sub_244793F54();
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v25, 1, v33))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v24, v25, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v24, 0, 1, v33);
      }
      v36 = *(int *)(v28 + 28);
      v37 = &v24[v36];
      v38 = &v25[v36];
      v39 = *((_QWORD *)v38 + 1);
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *((_QWORD *)v37 + 1) = v39;
      v40 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56);
      swift_retain();
      v40(v24, 0, 1, v28);
    }
  }
  return a1;
}

uint64_t sub_2447802D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = *(_QWORD *)(a2 + 16);
  v8 = type metadata accessor for CanvasControl(0, v5, v6, v7);
  swift_release();
  swift_release();
  swift_release();
  v9 = a1 + *(int *)(v8 + 40);
  v12 = type metadata accessor for ThumbnailHostFactory(0, v5, v10, v11);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v9, 1, v12);
  if (!(_DWORD)result)
  {
    v14 = sub_244793F54();
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v9, v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_2447803E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);

  v6 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(_QWORD *)(a3 + 16);
  v10 = (int *)type metadata accessor for CanvasControl(0, v7, v8, v9);
  v11 = v10[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = v10[8];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = v10[9];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = v10[10];
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v28 = type metadata accessor for ThumbnailHostFactory(0, v7, v26, v27);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v30(v25, 1, v28))
  {
    v31 = sub_24479540C();
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v32 = sub_244793F54();
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v25, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v24, v25, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v24, 0, 1, v32);
    }
    v35 = *(int *)(v28 + 28);
    v36 = &v24[v35];
    v37 = &v25[v35];
    v38 = *((_QWORD *)v37 + 1);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *((_QWORD *)v36 + 1) = v38;
    v39 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56);
    swift_retain();
    v39(v24, 0, 1, v28);
  }
  return a1;
}

uint64_t sub_2447805B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;

  v6 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(_QWORD *)(a3 + 16);
  v10 = (int *)type metadata accessor for CanvasControl(0, v7, v8, v9);
  v11 = v10[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  v15 = v10[8];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_release();
  v19 = v10[9];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_retain();
  swift_release();
  v23 = v10[10];
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v28 = type metadata accessor for ThumbnailHostFactory(0, v7, v26, v27);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v24, 1, v28);
  v32 = v30(v25, 1, v28);
  if (!v31)
  {
    if (v32)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v28);
      goto LABEL_7;
    }
    v37 = sub_244793F54();
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
    v40 = v39(v24, 1, v37);
    v41 = v39(v25, 1, v37);
    if (v40)
    {
      if (!v41)
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v24, v25, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v24, 0, 1, v37);
LABEL_16:
        v48 = *(int *)(v28 + 28);
        v49 = &v24[v48];
        v50 = &v25[v48];
        v51 = *((_QWORD *)v50 + 1);
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *((_QWORD *)v49 + 1) = v51;
        swift_retain();
        swift_release();
        return a1;
      }
    }
    else
    {
      if (!v41)
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 24))(v24, v25, v37);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v24, v37);
    }
    v47 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_16;
  }
  if (v32)
  {
LABEL_7:
    v36 = sub_24479540C();
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    return a1;
  }
  v33 = sub_244793F54();
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v25, 1, v33))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v24, v25, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v24, 0, 1, v33);
  }
  v42 = *(int *)(v28 + 28);
  v43 = &v24[v42];
  v44 = &v25[v42];
  v45 = *((_QWORD *)v44 + 1);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *((_QWORD *)v43 + 1) = v45;
  v46 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56);
  swift_retain();
  v46(v24, 0, 1, v28);
  return a1;
}

uint64_t sub_2447808A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(_QWORD *)(a3 + 16);
  v10 = (int *)type metadata accessor for CanvasControl(0, v7, v8, v9);
  *(_OWORD *)(a1 + v10[7]) = *(_OWORD *)(a2 + v10[7]);
  *(_OWORD *)(a1 + v10[8]) = *(_OWORD *)(a2 + v10[8]);
  *(_OWORD *)(a1 + v10[9]) = *(_OWORD *)(a2 + v10[9]);
  v11 = v10[10];
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v16 = type metadata accessor for ThumbnailHostFactory(0, v7, v14, v15);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16))
  {
    v18 = sub_24479540C();
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = sub_244793F54();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v12, v13, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v19);
    }
    *(_OWORD *)&v12[*(int *)(v16 + 28)] = *(_OWORD *)&v13[*(int *)(v16 + 28)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
  }
  return a1;
}

uint64_t sub_244780A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;

  v6 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(_QWORD *)(a3 + 16);
  v10 = (int *)type metadata accessor for CanvasControl(0, v7, v8, v9);
  *(_OWORD *)(a1 + v10[7]) = *(_OWORD *)(a2 + v10[7]);
  swift_release();
  *(_OWORD *)(a1 + v10[8]) = *(_OWORD *)(a2 + v10[8]);
  swift_release();
  *(_OWORD *)(a1 + v10[9]) = *(_OWORD *)(a2 + v10[9]);
  swift_release();
  v11 = v10[10];
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  v16 = type metadata accessor for ThumbnailHostFactory(0, v7, v14, v15);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v12, 1, v16);
  v20 = v18(v13, 1, v16);
  if (!v19)
  {
    if (v20)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v16);
      goto LABEL_7;
    }
    v25 = sub_244793F54();
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    v28 = v27(v12, 1, v25);
    v29 = v27(v13, 1, v25);
    if (v28)
    {
      if (!v29)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v12, v13, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v12, 0, 1, v25);
LABEL_16:
        *(_OWORD *)&v12[*(int *)(v16 + 28)] = *(_OWORD *)&v13[*(int *)(v16 + 28)];
        swift_release();
        return a1;
      }
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v12, v13, v25);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v25);
    }
    v30 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_16;
  }
  if (v20)
  {
LABEL_7:
    v24 = sub_24479540C();
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  v21 = sub_244793F54();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v13, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v12, v13, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v12, 0, 1, v21);
  }
  *(_OWORD *)&v12[*(int *)(v16 + 28)] = *(_OWORD *)&v13[*(int *)(v16 + 28)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
  return a1;
}

uint64_t sub_244780CE8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244780CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  v6 = type metadata accessor for CanvasControl(0, *(_QWORD *)(a3 + 16), a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t sub_244780D34()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244780D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  v6 = type metadata accessor for CanvasControl(0, *(_QWORD *)(a4 + 16), a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a2, v6);
}

uint64_t sub_244780D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  unint64_t v4;

  v0 = sub_24479540C();
  result = type metadata accessor for CanvasControl(319, v0, v1, v2);
  if (v4 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_244780DFC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t, uint64_t);

  v4 = sub_24479540C();
  v7 = type metadata accessor for CanvasControl(0, v4, v5, v6);
  v8 = *(_DWORD *)(*(_QWORD *)(v7 - 8) + 80);
  if ((v8 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v8 + 16) & ~(unint64_t)v8));
    swift_retain();
  }
  else
  {
    v9 = (int *)v7;
    v10 = sub_24479414C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    v11 = v9[7];
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = v9[8];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = v9[9];
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v9[10];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v28 = type metadata accessor for ThumbnailHostFactory(0, v4, v26, v27);
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v30(v25, 1, v28))
    {
      v31 = sub_24479540C();
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v33 = sub_244793F54();
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v25, 1, v33))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v24, v25, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v24, 0, 1, v33);
      }
      v36 = *(int *)(v28 + 28);
      v37 = &v24[v36];
      v38 = &v25[v36];
      v39 = *((_QWORD *)v38 + 1);
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *((_QWORD *)v37 + 1) = v39;
      v40 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56);
      swift_retain();
      v40(v24, 0, 1, v28);
    }
  }
  return a1;
}

uint64_t sub_244781004(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  v3 = sub_24479540C();
  v6 = type metadata accessor for CanvasControl(0, v3, v4, v5);
  swift_release();
  swift_release();
  swift_release();
  v7 = a1 + *(int *)(v6 + 40);
  v10 = type metadata accessor for ThumbnailHostFactory(0, v3, v8, v9);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10);
  if (!(_DWORD)result)
  {
    v12 = sub_244793F54();
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v7, v12);
    return swift_release();
  }
  return result;
}

uint64_t sub_244781120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, _QWORD, uint64_t, uint64_t);

  v4 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = sub_24479540C();
  v8 = (int *)type metadata accessor for CanvasControl(0, v5, v6, v7);
  v9 = v8[7];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = v8[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = v8[9];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = v8[10];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  v26 = type metadata accessor for ThumbnailHostFactory(0, v5, v24, v25);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v28(v23, 1, v26))
  {
    v29 = sub_24479540C();
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v30 = sub_244793F54();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v23, 1, v30))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v22, v23, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v22, 0, 1, v30);
    }
    v33 = *(int *)(v26 + 28);
    v34 = &v22[v33];
    v35 = &v23[v33];
    v36 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v36;
    v37 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
    swift_retain();
    v37(v22, 0, 1, v26);
  }
  return a1;
}

uint64_t sub_2447812FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;

  v4 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = sub_24479540C();
  v8 = (int *)type metadata accessor for CanvasControl(0, v5, v6, v7);
  v9 = v8[7];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  swift_retain();
  swift_release();
  v13 = v8[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  v17 = v8[9];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  v21 = v8[10];
  v22 = (char *)(a1 + v21);
  v23 = (char *)(a2 + v21);
  v26 = type metadata accessor for ThumbnailHostFactory(0, v5, v24, v25);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v22, 1, v26);
  v30 = v28(v23, 1, v26);
  if (!v29)
  {
    if (v30)
    {
      (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v26);
      goto LABEL_7;
    }
    v35 = sub_244793F54();
    v36 = *(_QWORD *)(v35 - 8);
    v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
    v38 = v37(v22, 1, v35);
    v39 = v37(v23, 1, v35);
    if (v38)
    {
      if (!v39)
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v22, v23, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v22, 0, 1, v35);
LABEL_16:
        v46 = *(int *)(v26 + 28);
        v47 = &v22[v46];
        v48 = &v23[v46];
        v49 = *((_QWORD *)v48 + 1);
        *(_QWORD *)v47 = *(_QWORD *)v48;
        *((_QWORD *)v47 + 1) = v49;
        swift_retain();
        swift_release();
        return a1;
      }
    }
    else
    {
      if (!v39)
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 24))(v22, v23, v35);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v35);
    }
    v45 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_16;
  }
  if (v30)
  {
LABEL_7:
    v34 = sub_24479540C();
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    return a1;
  }
  v31 = sub_244793F54();
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v23, 1, v31))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v22, v23, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v22, 0, 1, v31);
  }
  v40 = *(int *)(v26 + 28);
  v41 = &v22[v40];
  v42 = &v23[v40];
  v43 = *((_QWORD *)v42 + 1);
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *((_QWORD *)v41 + 1) = v43;
  v44 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
  swift_retain();
  v44(v22, 0, 1, v26);
  return a1;
}

uint64_t sub_2447815FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = sub_24479540C();
  v8 = (int *)type metadata accessor for CanvasControl(0, v5, v6, v7);
  *(_OWORD *)(a1 + v8[7]) = *(_OWORD *)(a2 + v8[7]);
  *(_OWORD *)(a1 + v8[8]) = *(_OWORD *)(a2 + v8[8]);
  *(_OWORD *)(a1 + v8[9]) = *(_OWORD *)(a2 + v8[9]);
  v9 = v8[10];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v14 = type metadata accessor for ThumbnailHostFactory(0, v5, v12, v13);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14))
  {
    v16 = sub_24479540C();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = sub_244793F54();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v10, v11, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v10, 0, 1, v17);
    }
    *(_OWORD *)&v10[*(int *)(v14 + 28)] = *(_OWORD *)&v11[*(int *)(v14 + 28)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_244781794(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;

  v4 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = sub_24479540C();
  v8 = (int *)type metadata accessor for CanvasControl(0, v5, v6, v7);
  *(_OWORD *)(a1 + v8[7]) = *(_OWORD *)(a2 + v8[7]);
  swift_release();
  *(_OWORD *)(a1 + v8[8]) = *(_OWORD *)(a2 + v8[8]);
  swift_release();
  *(_OWORD *)(a1 + v8[9]) = *(_OWORD *)(a2 + v8[9]);
  swift_release();
  v9 = v8[10];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v14 = type metadata accessor for ThumbnailHostFactory(0, v5, v12, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v10, 1, v14);
  v18 = v16(v11, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
      goto LABEL_7;
    }
    v23 = sub_244793F54();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
    v26 = v25(v10, 1, v23);
    v27 = v25(v11, 1, v23);
    if (v26)
    {
      if (!v27)
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v11, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v10, 0, 1, v23);
LABEL_16:
        *(_OWORD *)&v10[*(int *)(v14 + 28)] = *(_OWORD *)&v11[*(int *)(v14 + 28)];
        swift_release();
        return a1;
      }
    }
    else
    {
      if (!v27)
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v10, v11, v23);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v23);
    }
    v28 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_16;
  }
  if (v18)
  {
LABEL_7:
    v22 = sub_24479540C();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  v19 = sub_244793F54();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v10, v11, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v10, 0, 1, v19);
  }
  *(_OWORD *)&v10[*(int *)(v14 + 28)] = *(_OWORD *)&v11[*(int *)(v14 + 28)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  return a1;
}

uint64_t sub_244781A58()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244781A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_24479540C();
  v7 = type metadata accessor for CanvasControl(0, v4, v5, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a1, a2, v7);
}

uint64_t sub_244781AB0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244781ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_24479540C();
  v7 = type metadata accessor for CanvasControl(0, v4, v5, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, a2, a2, v7);
}

uint64_t sub_244781B0C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_244781B14()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_244781BA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v7 + 80));
  if (v10 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (v9 & (unint64_t)~v8) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, ((unint64_t)a2 + v9) & v14, v5);
  }
  return v4;
}

uint64_t sub_244781C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_244781CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_244781D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_244781DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_244781E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_244781E78(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_244781F54 + 4 * byte_24479C274[v17 - 1]))();
}

void sub_244781FD0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

uint64_t sub_2447821D0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2447821D8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_244782284(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v4 = a1;
  v5 = a3[3];
  v6 = *(_QWORD *)(a3[2] - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(a3[4] - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = *(_QWORD *)(v7 + 64) + v11;
  v13 = (*(_BYTE *)(v7 + 80) | *(_BYTE *)(v6 + 80) | v11);
  if (v13 <= 7
    && ((v12 + (v9 & ~v8)) & ~(unint64_t)v11) + *(_QWORD *)(v10 + 64) <= 0x18
    && ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v6 + 80) | v11) & 0x100000) == 0)
  {
    v17 = ~v8;
    v18 = ~(unint64_t)v11;
    v21 = a3[4];
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v19 = ((unint64_t)a2 + v9) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v17, v19, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((((unint64_t)v4 + v9) & v17) + v12) & v18, (v19 + v12) & v18, v21);
  }
  else
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v13 + 16) & ~v13));
    swift_retain();
  }
  return v4;
}

uint64_t sub_2447823B8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *(_QWORD *)(a2[2] - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2[3] - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(a2[4] - 8) + 8))((v7
                                                                                       + *(_QWORD *)(v6 + 64)
                                                                                       + *(unsigned __int8 *)(*(_QWORD *)(a2[4] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[4] - 8) + 80));
}

uint64_t sub_244782438(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  v12 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 16))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_2447824E0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 24))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_244782588(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  v12 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 32))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_244782630(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  v12 = *(_QWORD *)(a3[4] - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 40))((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_2447826D8(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  uint64_t v22;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = a3[4];
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) > v8)
    v8 = *(_DWORD *)(v10 + 84);
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = *(_QWORD *)(v4 + 64) + v11;
  v13 = *(_QWORD *)(v6 + 64);
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_25;
  v16 = ((v13 + v14 + (v12 & ~v11)) & ~v14) + *(_QWORD *)(v10 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_25;
      goto LABEL_16;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_25;
      goto LABEL_16;
    }
    if (v19 < 2)
    {
LABEL_25:
      if (v8)
      {
        if (v5 == v8)
          return (*(uint64_t (**)(void))(v4 + 48))();
        v22 = (v12 + a1) & ~v11;
        if (v7 == v8)
          return (*(uint64_t (**)(uint64_t))(v6 + 48))(v22);
        else
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v10 + 48))((v22 + v13 + v14) & ~v14, *(unsigned int *)(v10 + 84), v9);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_25;
LABEL_16:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if ((_DWORD)v16)
  {
    if (v16 <= 3)
      v21 = ((v13 + v14 + (v12 & ~(_DWORD)v11)) & ~(_DWORD)v14) + *(_DWORD *)(v10 + 64);
    else
      v21 = 4;
    __asm { BR              X11 }
  }
  return v8 + v20 + 1;
}

void sub_244782894(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(a4[2] - 8);
  v6 = *(_QWORD *)(a4[3] - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(a4[4] - 8);
  if (*(_DWORD *)(v8 + 84) > v7)
    v7 = *(_DWORD *)(v8 + 84);
  v9 = ((*(_QWORD *)(v6 + 64)
       + *(unsigned __int8 *)(v8 + 80)
       + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
     + *(_QWORD *)(v8 + 64);
  if (a3 > v7)
  {
    if (v9 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v13 = v11 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X21 }
}

uint64_t sub_244782AE0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_244782AE8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_244782BB4(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_QWORD *)(a3[3] - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v4 + 64) + v6;
  v8 = *(_QWORD *)(a3[4] - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v5 + 64) + v9;
  v11 = *(_QWORD *)(a3[5] - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_QWORD *)(v8 + 64) + v12;
  v14 = *(_DWORD *)(v4 + 80);
  v15 = (*(_BYTE *)(v5 + 80) | v14 | *(_BYTE *)(v8 + 80) | v12);
  if (v15 <= 7
    && ((v13 + ((v10 + (v7 & ~v6)) & ~v9)) & ~(unint64_t)v12) + *(_QWORD *)(v11 + 64) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | v14 | *(_DWORD *)(v8 + 80) | v12) & 0x100000) == 0)
  {
    v20 = ~v6;
    v21 = ~v9;
    v30 = a3[4];
    v31 = ~(unint64_t)v12;
    v32 = a3[5];
    v29 = a3[3];
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    v33 = a1;
    v23 = ((unint64_t)a1 + v7) & v20;
    v24 = ((unint64_t)a2 + v7) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v23, v24, v29);
    v25 = v23 + v10;
    v19 = v33;
    v26 = v25 & v21;
    v27 = (v24 + v10) & v21;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v25 & v21, v27, v30);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((v26 + v13) & v31, (v27 + v13) & v31, v32);
  }
  else
  {
    v18 = *a2;
    *a1 = *a2;
    v19 = (uint64_t *)(v18 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  return v19;
}

uint64_t sub_244782D40(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v4 = *(_QWORD *)(a2[2] - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2[3] - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(a2[4] - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t))(v9 + 8))(v10);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(a2[5] - 8) + 8))((v10
                                                                                       + *(_QWORD *)(v9 + 64)
                                                                                       + *(unsigned __int8 *)(*(_QWORD *)(a2[5] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[5] - 8) + 80));
}

uint64_t sub_244782DE8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v16, v17);
  v18 = *(_QWORD *)(a3[5] - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 16))((*(_QWORD *)(v13 + 64) + *(unsigned __int8 *)(v18 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), (*(_QWORD *)(v13 + 64) + *(unsigned __int8 *)(v18 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

uint64_t sub_244782EC4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v16, v17);
  v18 = *(_QWORD *)(a3[5] - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 24))((*(_QWORD *)(v13 + 64) + *(unsigned __int8 *)(v18 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), (*(_QWORD *)(v13 + 64) + *(unsigned __int8 *)(v18 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

uint64_t sub_244782FA0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v16, v17);
  v18 = *(_QWORD *)(a3[5] - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 32))((*(_QWORD *)(v13 + 64) + *(unsigned __int8 *)(v18 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), (*(_QWORD *)(v13 + 64) + *(unsigned __int8 *)(v18 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

uint64_t sub_24478307C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v16, v17);
  v18 = *(_QWORD *)(a3[5] - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 40))((*(_QWORD *)(v13 + 64) + *(unsigned __int8 *)(v18 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), (*(_QWORD *)(v13 + 64) + *(unsigned __int8 *)(v18 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

uint64_t sub_244783158(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  char v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;

  v6 = a3[2];
  v5 = a3[3];
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  v12 = a3[4];
  v13 = a3[5];
  v14 = *(_QWORD *)(v12 - 8);
  v15 = *(unsigned int *)(v14 + 84);
  if (v15 > v11)
    v11 = *(_DWORD *)(v14 + 84);
  v16 = *(_QWORD *)(v13 - 8);
  v17 = *(unsigned int *)(v16 + 84);
  if (v17 > v11)
    v11 = *(_DWORD *)(v16 + 84);
  if (!a2)
    return 0;
  v18 = *(unsigned __int8 *)(v9 + 80);
  v19 = *(_QWORD *)(v7 + 64) + v18;
  v20 = *(_QWORD *)(v9 + 64);
  v21 = *(unsigned __int8 *)(v14 + 80);
  v22 = *(_QWORD *)(v14 + 64);
  v23 = *(unsigned __int8 *)(v16 + 80);
  v24 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_27;
  v25 = ((v22 + v23 + ((v20 + v21 + (v19 & ~v18)) & ~v21)) & ~v23) + *(_QWORD *)(v16 + 64);
  v26 = 8 * v25;
  if (v25 <= 3)
  {
    v28 = ((v24 + ~(-1 << v26)) >> v26) + 1;
    if (HIWORD(v28))
    {
      v27 = *(_DWORD *)(a1 + v25);
      if (!v27)
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v28 > 0xFF)
    {
      v27 = *(unsigned __int16 *)(a1 + v25);
      if (!*(_WORD *)(a1 + v25))
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v28 < 2)
    {
LABEL_27:
      if (v11)
      {
        if (v8 == v11)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 48))(a1, *(unsigned int *)(v7 + 84), v6);
        v31 = (v19 + a1) & ~v18;
        if (v10 == v11)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v9 + 48))(v31, *(unsigned int *)(v9 + 84), v5);
        v32 = (v31 + v20 + v21) & ~v21;
        if ((_DWORD)v15 == v11)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v32, v15, v12);
        else
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))((v32 + v22 + v23) & ~v23, v17, v13);
      }
      return 0;
    }
  }
  v27 = *(unsigned __int8 *)(a1 + v25);
  if (!*(_BYTE *)(a1 + v25))
    goto LABEL_27;
LABEL_18:
  v29 = (v27 - 1) << v26;
  if (v25 > 3)
    v29 = 0;
  if ((_DWORD)v25)
  {
    if (v25 <= 3)
      v30 = ((v22 + v23 + ((v20 + v21 + (v19 & ~(_DWORD)v18)) & ~(_DWORD)v21)) & ~(_DWORD)v23) + *(_DWORD *)(v16 + 64);
    else
      v30 = 4;
    __asm { BR              X11 }
  }
  return v11 + v29 + 1;
}

void sub_244783370(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  size_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v5 = *(_QWORD *)(a4[2] - 8);
  v6 = *(_QWORD *)(a4[3] - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(a4[4] - 8);
  if (*(_DWORD *)(v8 + 84) <= v7)
    v9 = v7;
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(a4[5] - 8);
  if (*(_DWORD *)(v10 + 84) > v9)
    v9 = *(_DWORD *)(v10 + 84);
  v11 = ((*(_QWORD *)(v8 + 64)
        + *(unsigned __int8 *)(v10 + 80)
        + ((*(_QWORD *)(v6 + 64)
          + *(unsigned __int8 *)(v8 + 80)
          + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
      + *(_QWORD *)(v10 + 64);
  if (a3 > v9)
  {
    if (v11 <= 3)
    {
      v14 = ((a3 - v9 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else
      {
        v12 = v14 > 1;
        if (v14 >= 0x100)
          v12 = 2;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v9 < a2)
  {
    v13 = ~v9 + a2;
    if (v11 < 4)
    {
      if ((_DWORD)v11)
      {
        v15 = v13 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if ((_DWORD)v11 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v11 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X27 }
}

uint64_t sub_244783628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = v4[2];
  v5 = v4[3];
  v7 = v4[4];
  v8 = v4[5];
  v9 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v6, a3, a4) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v14 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v5, v12, v13) - 8);
  v15 = (v10 + v11 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v14 + 64);
  v19 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v7, v17, v18) - 8);
  v20 = (v15 + v16 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = *(_QWORD *)(v19 + 64);
  v24 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CanvasControl(0, v8, v22, v23) - 8) + 80);
  return sub_24477C058(a1, (uint64_t)v4 + v10, (uint64_t)v4 + v15, (uint64_t)v4 + v20, (uint64_t)v4 + ((v20 + v21 + v24) & ~v24), v6, v5, v7, v8);
}

uint64_t sub_244783728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = v4[2];
  v7 = v4[3];
  v8 = v4[4];
  v9 = v4[5];
  v10 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v6, a3, a4) - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v15 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v7, v13, v14) - 8);
  v16 = (v11 + v12 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 64);
  v20 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v8, v18, v19) - 8);
  v21 = (v16 + v17 + *(unsigned __int8 *)(v20 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v22 = *(_QWORD *)(v20 + 64);
  v25 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CanvasControl(0, v9, v23, v24) - 8) + 80);
  return sub_24477C2BC(a1, (uint64_t)v4 + v11, (uint64_t)v4 + v16, (uint64_t)v4 + v21, (uint64_t)v4 + ((v21 + v22 + v25) & ~v25), v6, v7, v8, v9);
}

uint64_t objectdestroyTm_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;

  v6 = *((_QWORD *)v4 + 2);
  v5 = *((_QWORD *)v4 + 3);
  v7 = *((_QWORD *)v4 + 4);
  v8 = *((_QWORD *)v4 + 5);
  v9 = type metadata accessor for CanvasControl(0, v6, a3, a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v15 = type metadata accessor for CanvasControl(0, v5, v13, v14);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (v11 + v12 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = *(_QWORD *)(v16 + 64);
  v63 = v7;
  v61 = type metadata accessor for CanvasControl(0, v7, v19, v20);
  v21 = *(_QWORD *)(v61 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  v64 = v8;
  v23 = v8;
  v24 = v5;
  v25 = (v17 + v18 + *(unsigned __int8 *)(v21 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v26 = v4;
  v62 = type metadata accessor for CanvasControl(0, v23, v27, v28);
  v29 = *(_QWORD *)(v62 - 8);
  v30 = v22 + *(unsigned __int8 *)(v29 + 80);
  v65 = *(unsigned __int8 *)(v29 + 80);
  v66 = v26;
  v31 = &v26[v11];
  v32 = sub_24479414C();
  v33 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v32 - 8) + 8);
  v33(v31, v32);
  swift_release();
  swift_release();
  swift_release();
  v34 = &v31[*(int *)(v9 + 40)];
  v37 = type metadata accessor for ThumbnailHostFactory(0, v6, v35, v36);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v34, 1, v37))
  {
    v60 = v24;
    v38 = sub_244793F54();
    v39 = *(_QWORD *)(v38 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v34, 1, v38))
      (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v38);
    swift_release();
    v24 = v60;
  }
  v33(&v66[v17], v32);
  swift_release();
  swift_release();
  swift_release();
  v40 = (unint64_t)&v66[v17 + *(int *)(v15 + 40)];
  v43 = type metadata accessor for ThumbnailHostFactory(0, v24, v41, v42);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v40, 1, v43))
  {
    v44 = sub_244793F54();
    v45 = *(_QWORD *)(v44 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v45 + 48))(v40, 1, v44))
      (*(void (**)(unint64_t, uint64_t))(v45 + 8))(v40, v44);
    swift_release();
  }
  v46 = (v25 + v30) & ~v65;
  v33(&v66[v25], v32);
  swift_release();
  swift_release();
  swift_release();
  v47 = (unint64_t)&v66[v25 + *(int *)(v61 + 40)];
  v50 = type metadata accessor for ThumbnailHostFactory(0, v63, v48, v49);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v47, 1, v50))
  {
    v51 = sub_244793F54();
    v52 = *(_QWORD *)(v51 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v52 + 48))(v47, 1, v51))
      (*(void (**)(unint64_t, uint64_t))(v52 + 8))(v47, v51);
    swift_release();
  }
  v33(&v66[v46], v32);
  swift_release();
  swift_release();
  swift_release();
  v53 = (unint64_t)&v66[v46 + *(int *)(v62 + 40)];
  v56 = type metadata accessor for ThumbnailHostFactory(0, v64, v54, v55);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v53, 1, v56))
  {
    v57 = sub_244793F54();
    v58 = *(_QWORD *)(v57 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v58 + 48))(v53, 1, v57))
      (*(void (**)(unint64_t, uint64_t))(v58 + 8))(v53, v57);
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_244783C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = v4[2];
  v6 = v4[3];
  v8 = v4[4];
  v7 = v4[5];
  v9 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v5, a3, a4) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v14 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v6, v12, v13) - 8);
  v15 = (v10 + v11 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v14 + 64);
  v19 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v8, v17, v18) - 8);
  v20 = (v15 + v16 + *(unsigned __int8 *)(v19 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = *(_QWORD *)(v19 + 64);
  v24 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CanvasControl(0, v7, v22, v23) - 8) + 80);
  return sub_24477C454(a1, a2, a3, a4, (uint64_t)v4 + v10, (uint64_t)v4 + v15, (uint64_t)v4 + v20, (uint64_t)v4 + ((v20 + v21 + v24) & ~v24), v5, v6, v8, v7);
}

uint64_t type metadata accessor for CanvasControlConfiguration.IndexOutOfBounds(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CanvasControlConfiguration.IndexOutOfBounds);
}

uint64_t sub_244783D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = v4[2];
  v7 = v4[3];
  v8 = v4[4];
  v9 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v6, a3, a4) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v14 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v7, v12, v13) - 8);
  v15 = (v10 + v11 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v14 + 64);
  v19 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CanvasControl(0, v8, v17, v18) - 8) + 80);
  return sub_24477B460(a1, (uint64_t)v4 + v10, (uint64_t)v4 + v15, (uint64_t)v4 + ((v15 + v16 + v19) & ~v19), v6, v7, v8);
}

uint64_t sub_244783E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = v4[2];
  v7 = v4[3];
  v8 = v4[4];
  v9 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v6, a3, a4) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v14 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v7, v12, v13) - 8);
  v15 = (v10 + v11 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v14 + 64);
  v19 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CanvasControl(0, v8, v17, v18) - 8) + 80);
  return sub_24477B664(a1, (uint64_t)v4 + v10, (uint64_t)v4 + v15, (uint64_t)v4 + ((v15 + v16 + v19) & ~v19), v6, v7, v8);
}

uint64_t objectdestroy_10Tm_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v5 = *((_QWORD *)v4 + 3);
  v45 = *((_QWORD *)v4 + 2);
  v6 = *((_QWORD *)v4 + 4);
  v7 = type metadata accessor for CanvasControl(0, v45, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v13 = type metadata accessor for CanvasControl(0, v5, v11, v12);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (v9 + v10 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v14 + 64);
  v47 = v6;
  v46 = type metadata accessor for CanvasControl(0, v6, v17, v18);
  v19 = *(unsigned __int8 *)(*(_QWORD *)(v46 - 8) + 80);
  v20 = v15 + v16 + v19;
  v21 = &v4[v9];
  v22 = sub_24479414C();
  v23 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8);
  v23(v21, v22);
  swift_release();
  swift_release();
  swift_release();
  v24 = &v21[*(int *)(v7 + 40)];
  v25 = v5;
  v28 = type metadata accessor for ThumbnailHostFactory(0, v45, v26, v27);
  v48 = v19;
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v24, 1, v28))
  {
    v29 = sub_244793F54();
    v30 = *(_QWORD *)(v29 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v24, 1, v29))
      (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v29);
    swift_release();
    v19 = v48;
    v25 = v5;
  }
  v31 = v20 & ~v19;
  v23(&v4[v15], v22);
  swift_release();
  swift_release();
  swift_release();
  v32 = &v4[v15 + *(int *)(v13 + 40)];
  v35 = type metadata accessor for ThumbnailHostFactory(0, v25, v33, v34);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v32, 1, v35))
  {
    v36 = sub_244793F54();
    v37 = *(_QWORD *)(v36 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v32, 1, v36))
      (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v36);
    swift_release();
  }
  v23(&v4[v31], v22);
  swift_release();
  swift_release();
  swift_release();
  v38 = &v4[v31 + *(int *)(v46 + 40)];
  v41 = type metadata accessor for ThumbnailHostFactory(0, v47, v39, v40);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v38, 1, v41))
  {
    v42 = sub_244793F54();
    v43 = *(_QWORD *)(v42 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v38, 1, v42))
      (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v42);
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_244784290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v7 = v4[2];
  v8 = v4[3];
  v9 = v4[4];
  v10 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v7, a3, a4) - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v15 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v8, v13, v14) - 8);
  v16 = (v11 + v12 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 64);
  v20 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CanvasControl(0, v9, v18, v19) - 8) + 80);
  return sub_24477B7BC(a1, a2, a3, a4, (uint64_t)v4 + v11, (uint64_t)v4 + v16, (uint64_t)v4 + ((v16 + v17 + v20) & ~v20), v7, v8, v9);
}

uint64_t sub_244784370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v6, a3, a4) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CanvasControl(0, v7, v11, v12) - 8) + 80);
  return sub_24477AB74(a1, v4 + v9, v4 + ((v9 + v10 + v13) & ~v13), v6, v7);
}

uint64_t sub_244784414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v6, a3, a4) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CanvasControl(0, v7, v11, v12) - 8) + 80);
  return sub_24477ACE8(a1, v4 + v9, v4 + ((v9 + v10 + v13) & ~v13), v6, v7);
}

uint64_t objectdestroy_19Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, uint64_t);
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = type metadata accessor for CanvasControl(0, v5, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v13 = type metadata accessor for CanvasControl(0, v6, v11, v12);
  v14 = (v9 + v10 + *(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80);
  v15 = sub_24479414C();
  v16 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
  v16(v4 + v9, v15);
  swift_release();
  swift_release();
  swift_release();
  v17 = v4 + v9 + *(int *)(v7 + 40);
  v20 = type metadata accessor for ThumbnailHostFactory(0, v5, v18, v19);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v17, 1, v20))
  {
    v21 = sub_244793F54();
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21))
      (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v17, v21);
    swift_release();
  }
  v16(v4 + v14, v15);
  swift_release();
  swift_release();
  swift_release();
  v23 = v4 + v14 + *(int *)(v13 + 40);
  v26 = type metadata accessor for ThumbnailHostFactory(0, v6, v24, v25);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v23, 1, v26))
  {
    v27 = sub_244793F54();
    v28 = *(_QWORD *)(v27 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v28 + 48))(v23, 1, v27))
      (*(void (**)(unint64_t, uint64_t))(v28 + 8))(v23, v27);
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_2447846DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v9 = *(_QWORD *)(v4 + 16);
  v10 = *(_QWORD *)(v4 + 24);
  v11 = *(_QWORD *)(type metadata accessor for CanvasControl(0, v9, a3, a4) - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v16 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CanvasControl(0, v10, v14, v15) - 8) + 80);
  return sub_24477ADE8(a1, a2, a3, a4, v4 + v12, v4 + ((v12 + v13 + v16) & ~v16), v9, v10);
}

uint64_t sub_244784798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CanvasControl(0, v6, a3, a4) - 8) + 80);
  return sub_24477A584(a1, v4 + ((v7 + 24) & ~v7), v6, v8);
}

uint64_t sub_244784800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CanvasControl(0, v6, a3, a4) - 8) + 80);
  return sub_24477A654(a1, v4 + ((v7 + 24) & ~v7), v6);
}

uint64_t objectdestroy_28Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for CanvasControl(0, v5, a3, a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 24) & ~v7);
  v9 = sub_24479414C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  swift_release();
  swift_release();
  v10 = v8 + *(int *)(v6 + 40);
  v13 = type metadata accessor for ThumbnailHostFactory(0, v5, v11, v12);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v10, 1, v13))
  {
    v14 = sub_244793F54();
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v10, v14);
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_244784984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;

  v9 = *(_QWORD *)(v4 + 16);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CanvasControl(0, v9, a3, a4) - 8) + 80);
  return sub_24477A700(a1, a2, a3, a4, v4 + ((v10 + 24) & ~v10), v9);
}

unint64_t sub_244784A00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257381358[0];
  if (!qword_257381358[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257381350);
    result = MEMORY[0x249518824](&unk_24479C4F8, v1);
    atomic_store(result, qword_257381358);
  }
  return result;
}

uint64_t sub_244784A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = v2;
  v6 = *(_QWORD *)(a1 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2447876A4(v3, (uint64_t)v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v3, a1);
  v11 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(a1 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v12 + v11, (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v13 = sub_24479540C();
  return sub_244784E3C((uint64_t)v10, (uint64_t)&unk_257381520, v12, v13, a2);
}

uint64_t sub_244784B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = *(_QWORD *)(a3 + a2 - 8);
  v7 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ThumbnailHostFactory(0, v6, a3, a4) + 28));
  v9 = *v7;
  v8 = v7[1];
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v6;
  v10[3] = v9;
  v10[4] = v8;
  *a5 = &unk_2573814F8;
  a5[1] = v10;
  return swift_retain();
}

uint64_t sub_244784BF4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v5 = *a2;
  v6 = a2[1];
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a3 + *a3);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_244706734;
  return v9(a1, v5, v6);
}

uint64_t sub_244784C6C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;

  v5 = *(_QWORD *)(a4 + a3 - 8);
  v7 = *a1;
  v6 = a1[1];
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v5;
  v8[3] = v7;
  v8[4] = v6;
  v11 = (_QWORD *)(a2 + *(int *)(type metadata accessor for ThumbnailHostFactory(0, v5, v9, v10) + 28));
  swift_retain();
  result = swift_release();
  *v11 = &unk_2573814E8;
  v11[1] = v8;
  return result;
}

uint64_t sub_244784CF8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  int *v8;

  v4[2] = a2;
  v4[3] = a3;
  v8 = (int *)((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  v4[4] = v6;
  *v6 = v4;
  v6[1] = sub_244784D70;
  return ((uint64_t (*)(uint64_t, _QWORD *))v8)(a1, v4 + 2);
}

uint64_t sub_244784D70()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t ThumbnailHostFactory.makeHost.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 28));
  swift_retain();
  return v2;
}

uint64_t ThumbnailHostFactory.makeHost.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3 + 28));
  result = swift_release();
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*ThumbnailHostFactory.makeHost.modify())()
{
  return nullsub_1;
}

uint64_t sub_244784E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;

  v10 = sub_244793F54();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a5, 1, 1, v10);
  sub_2447887D0(a1, a5);
  result = type metadata accessor for ThumbnailHostFactory(0, a4, v11, v12);
  v14 = (_QWORD *)(a5 + *(int *)(result + 28));
  *v14 = a2;
  v14[1] = a3;
  return result;
}

uint64_t sub_244784EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  sub_244795208();
  v5[12] = sub_2447951FC();
  v5[13] = sub_2447951D8();
  v5[14] = v6;
  return swift_task_switch();
}

uint64_t sub_244784F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD *, _QWORD, _QWORD);

  v5 = v4[10];
  v6 = (_QWORD *)(v5 + *(int *)(type metadata accessor for ThumbnailHostFactory(0, v4[11], a3, a4) + 28));
  v9 = (uint64_t (*)(_QWORD *, _QWORD, _QWORD))(*(int *)*v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  v4[15] = v7;
  *v7 = v4;
  v7[1] = sub_244784FB0;
  return v9(v4 + 2, v4[8], v4[9]);
}

uint64_t sub_244784FB0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244785010()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(uint64_t **)(v0 + 56);
  swift_release();
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v2);
  sub_2447850B8(v2, v3, v1);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244785084()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2447850B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v14 = a1;
  v15 = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = type metadata accessor for OptionalStateWrapper(0, AssociatedTypeWitness, v8, v9);
  a3[3] = v10;
  a3[4] = MEMORY[0x249518824](&unk_24479C740, v10);
  v11 = swift_allocObject();
  *a3 = v11;
  return sub_244707B68(&v13, v11 + 16);
}

uint64_t static ThumbnailHostFactory.localHostFactory(expectedGeometry:makeViewController:displayThumbnail:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  _QWORD *v15;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a6;
  v15[3] = a4;
  v15[4] = a5;
  swift_retain();
  swift_retain();
  static ThumbnailHostFactory.localHostFactory<A>(expectedGeometry:context:makeViewController:displayThumbnail:)(a1, (uint64_t)sub_244785270, v14, (uint64_t)&unk_2573813E8, (uint64_t)v15, a6, MEMORY[0x24BEE4AE0] + 8, a7);
  swift_release();
  return swift_release();
}

uint64_t sub_24478524C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244785270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(a2, a3);
}

uint64_t sub_244785298(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  _QWORD *v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t);

  v4[2] = sub_244795208();
  v4[3] = sub_2447951FC();
  v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v8 = (_QWORD *)swift_task_alloc();
  v4[4] = v8;
  *v8 = v4;
  v8[1] = sub_244785330;
  return v10(a1, a3);
}

uint64_t sub_244785330(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 40) = v1;
  swift_task_dealloc();
  if (!v1)
    *(double *)(v4 + 48) = a1;
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_2447853D4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(double))(v0 + 8))(*(double *)(v0 + 48));
}

uint64_t sub_24478540C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244785430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;

  v8 = *(int **)(v3 + 24);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_244788FEC;
  return sub_244785298(a1, a2, a3, v8);
}

uint64_t static ThumbnailHostFactory.localHostFactory<A>(expectedGeometry:context:makeViewController:displayThumbnail:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v21 = a4;
  v22 = a8;
  v14 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  sub_244787668();
  swift_getTupleTypeMetadata2();
  swift_getTupleTypeMetadata2();
  sub_2447951B4();
  *(_QWORD *)(v17 + 16) = sub_244794FF8();
  sub_2447876A4(a1, (uint64_t)v16);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a6;
  v18[3] = a7;
  v18[4] = v17;
  v18[5] = a2;
  v19 = v21;
  v18[6] = a3;
  v18[7] = v19;
  v18[8] = a5;
  swift_retain();
  swift_retain();
  return sub_244784E3C((uint64_t)v16, (uint64_t)&unk_257381400, (uint64_t)v18, a6, v22);
}

uint64_t sub_24478562C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_244785650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v8[15] = v11;
  v8[16] = v12;
  v8[13] = a7;
  v8[14] = a8;
  v8[11] = a5;
  v8[12] = a6;
  v8[9] = a3;
  v8[10] = a4;
  v8[7] = a1;
  v8[8] = a2;
  sub_244787668();
  v8[17] = swift_getTupleTypeMetadata2();
  v8[18] = swift_task_alloc();
  v9 = *(_QWORD *)(v12 - 8);
  v8[19] = v9;
  v8[20] = *(_QWORD *)(v9 + 64);
  v8[21] = swift_task_alloc();
  v8[22] = swift_task_alloc();
  sub_244795208();
  v8[23] = sub_2447951FC();
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_244785740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  __int128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v21 = *(char **)(v0 + 176);
  v22 = *(_QWORD *)(v0 + 168);
  v1 = *(_QWORD *)(v0 + 136);
  v25 = *(_QWORD *)(v0 + 144);
  v26 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v24 = *(_QWORD *)(v0 + 112);
  v23 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD **)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v19 = *(_OWORD *)(v0 + 88);
  swift_release();
  ObjectType = swift_getObjectType();
  *(_QWORD *)(v0 + 40) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 8) + 16))(ObjectType);
  *(_QWORD *)(v0 + 48) = v8;
  v9 = swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v3;
  *(_QWORD *)(v9 + 24) = v2;
  *(_OWORD *)(v9 + 32) = v19;
  *(_QWORD *)(v9 + 48) = v6;
  *(_QWORD *)(v9 + 56) = v4;
  swift_beginAccess();
  v10 = sub_244795004();
  MEMORY[0x249518824](MEMORY[0x24BE76CA0], v10);
  sub_244794404();
  swift_endAccess();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v25 + *(int *)(v1 + 48));
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 32);
  v11(v21, v25, v2);
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 16))(v22, v21, v2);
  v12 = (*(unsigned __int8 *)(v26 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = v3;
  *((_QWORD *)v13 + 3) = v2;
  *((_QWORD *)v13 + 4) = v23;
  *((_QWORD *)v13 + 5) = v24;
  v11(&v13[v12], v22, v2);
  v16 = type metadata accessor for ThumbnailHostFactory.LocalThumbnailHost(0, v3, v14, v15);
  v5[3] = v16;
  v5[4] = MEMORY[0x249518824](&unk_24479C75C, v16);
  *v5 = v20;
  v5[1] = &unk_257381510;
  v5[2] = v13;
  v17 = *(void (**)(char *, uint64_t))(v26 + 8);
  swift_retain();
  v17(v21, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244785998(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  v5[2] = sub_244795208();
  v5[3] = sub_2447951FC();
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a3 + *a3);
  v10 = (_QWORD *)swift_task_alloc();
  v5[4] = v10;
  *v10 = v5;
  v10[1] = sub_244785A3C;
  return v12(a1, a5, a2);
}

uint64_t sub_244785A3C(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 40) = v1;
  swift_task_dealloc();
  if (!v1)
    *(double *)(v4 + 48) = a1;
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_244785AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t);

  v5[2] = a2;
  v5[3] = a3;
  sub_244793A68();
  v5[4] = swift_task_alloc();
  v8 = sub_24479435C();
  v5[5] = v8;
  v5[6] = *(_QWORD *)(v8 - 8);
  v5[7] = swift_task_alloc();
  v9 = sub_244793A74();
  v5[8] = v9;
  v5[9] = *(_QWORD *)(v9 - 8);
  v5[10] = swift_task_alloc();
  v10 = swift_task_alloc();
  v5[11] = v10;
  v5[12] = sub_244795208();
  v5[13] = sub_2447951FC();
  v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)a5 + *a5);
  v11 = (_QWORD *)swift_task_alloc();
  v5[14] = v11;
  *v11 = v5;
  v11[1] = sub_244785BFC;
  return v13(v10, a1);
}

uint64_t sub_244785BFC(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 120) = v1;
  swift_task_dealloc();
  if (!v1)
    *(double *)(v4 + 128) = a1;
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_244785CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 56);
  v10 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD **)(v0 + 24);
  swift_release();
  v8 = v6[3];
  v7 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  sub_244794314();
  sub_244794350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v8, v7);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v5, v11);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(double))(v0 + 8))(*(double *)(v0 + 128));
}

uint64_t sub_244785DC4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244785E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v8;
  int *v9;
  _QWORD *v10;

  v8 = *v3;
  v9 = (int *)v3[1];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_244788FDC;
  return sub_244785AE0(a1, a2, a3, v8, v9);
}

id sub_244785EBC()
{
  id *v0;

  return *v0;
}

uint64_t sub_244785EC4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  return sub_2447949D4();
}

uint64_t sub_244785F2C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  return sub_2447949D4();
}

uint64_t sub_244785F94()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737D3B8);
  return sub_2447949D4();
}

uint64_t static ThumbnailHostFactory.remoteHostFactory(expectedGeometry:previewAgentConnector:makeUpdate:validateReply:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;

  v26 = a5;
  v27 = a8;
  v14 = type metadata accessor for PreviewAgentConnector();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v17 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2447876A4(a1, (uint64_t)v19);
  sub_244739E30(a2, (uint64_t)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v21 = (v16 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a7;
  sub_244739F98((uint64_t)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v20);
  v23 = (_QWORD *)(v22 + v21);
  *v23 = a3;
  v23[1] = a4;
  v24 = (_QWORD *)(v22 + ((v21 + 23) & 0xFFFFFFFFFFFFFFF8));
  *v24 = v26;
  v24[1] = a6;
  swift_retain();
  swift_retain();
  return sub_244784E3C((uint64_t)v19, (uint64_t)&unk_257381410, v22, a7, v27);
}

uint64_t sub_244786164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  v8[16] = a8;
  v8[17] = v11;
  v8[14] = a6;
  v8[15] = a7;
  v8[12] = a4;
  v8[13] = a5;
  v8[10] = a2;
  v8[11] = a3;
  v8[9] = a1;
  sub_244795208();
  v8[18] = sub_2447951FC();
  v8[19] = sub_2447951D8();
  v8[20] = v9;
  return swift_task_switch();
}

uint64_t sub_2447861E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 88);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1);
  return swift_task_switch();
}

uint64_t sub_244786248()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, void *, uint64_t);

  v1 = *(_DWORD **)(v0 + 96);
  *(_DWORD *)(v0 + 208) = *v1;
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v2;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0 + 16;
  v5 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t))((int)*MEMORY[0x24BE76A38] + MEMORY[0x24BE76A38]);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v3;
  *v3 = v0;
  v3[1] = sub_2447862FC;
  return v5(v0 + 56, v0 + 208, &unk_257381500, v2);
}

uint64_t sub_2447862FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244786368()
{
  uint64_t v0;

  sub_244788744(v0 + 16);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 56);
  return swift_task_switch();
}

uint64_t sub_2447863A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int8x16_t v10;
  __int128 v11;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(uint64_t **)(v0 + 72);
  v10 = vextq_s8(*(int8x16_t *)(v0 + 192), *(int8x16_t *)(v0 + 192), 8uLL);
  v11 = *(_OWORD *)(v0 + 112);
  swift_release();
  v7 = type metadata accessor for ThumbnailHostFactory.RemoteThumbnailHost(0, v1, v5, v6);
  v4[3] = v7;
  v4[4] = MEMORY[0x249518824](&unk_24479C778, v7);
  v8 = swift_allocObject();
  *v4 = v8;
  *(int8x16_t *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = v3;
  *(_OWORD *)(v8 + 40) = v11;
  *(_QWORD *)(v8 + 56) = v2;
  swift_retain();
  swift_retain();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244786470()
{
  uint64_t v0;

  sub_244788744(v0 + 16);
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2447864B4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ThumbnailSceneCache.sceneAgent(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  *(_QWORD *)(v2 + 72) = a1;
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v1 + 32);
  return swift_task_switch();
}

uint64_t sub_244786510()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, void *, uint64_t);

  v1 = *(_DWORD **)(v0 + 72);
  *(_DWORD *)(v0 + 104) = *v1;
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0 + 16;
  v5 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t))((int)*MEMORY[0x24BE76A38] + MEMORY[0x24BE76A38]);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v3;
  *v3 = v0;
  v3[1] = sub_2447865C4;
  return v5(v0 + 56, v0 + 104, &unk_257381428, v2);
}

uint64_t sub_2447865C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244786630()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t sub_244786640()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244786674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_244794494();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v6 = sub_2447942F0();
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 - 8);
  v4[11] = swift_task_alloc();
  sub_244795208();
  v4[12] = sub_2447951FC();
  v4[13] = sub_2447951D8();
  v4[14] = v7;
  return swift_task_switch();
}

uint64_t sub_244786734()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  (*(void (**)(_QWORD))(v0[5] + 16))(v0[2]);
  v2 = v0[10];
  v1 = v0[11];
  v3 = v0[9];
  v0[15] = sub_2447031FC(v1, v0[3], v0[4]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[16] = v4;
  __swift_instantiateConcreteTypeFromMangledName(qword_25737D180);
  *v4 = v0;
  v4[1] = sub_244786840;
  return sub_2447952C8();
}

uint64_t sub_244786840()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = v2[5];
    v2[18] = *(_QWORD *)(v3 + 32);
    v2[19] = *(_QWORD *)(v3 + 40);
  }
  return swift_task_switch();
}

uint64_t sub_2447868B8()
{
  uint64_t v0;
  double (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  __n128 v8;

  v1 = *(double (**)(uint64_t, uint64_t))(v0 + 144);
  v2 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 16);
  swift_release();
  v7 = v1(v3, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  if (!v2)
    v8.n128_f64[0] = v7;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
}

uint64_t sub_244786970()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2447869C4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[16];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0E8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = &v6[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_244795208();
  sub_2447951FC();
  sub_2447951E4();
  swift_release();
  v6[15] = 0;
  v3 = sub_244794FB0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = sub_244793A2C();
  sub_244788F90((uint64_t)v2);
  return v4;
}

uint64_t sub_244786AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v3;
  uint64_t v4;
  __int128 v8;
  _QWORD *v9;

  v8 = v3[1];
  *(_OWORD *)(v4 + 16) = *v3;
  *(_OWORD *)(v4 + 32) = v8;
  *(_OWORD *)(v4 + 48) = v3[2];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 64) = v9;
  *v9 = v4;
  v9[1] = sub_244786B4C;
  return sub_244786674(a1, a2, a3);
}

uint64_t sub_244786B4C(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  __n128 v5;

  v4 = *v2;
  swift_task_dealloc();
  if (!v1)
    v5.n128_f64[0] = a1;
  return (*(uint64_t (**)(__n128))(v4 + 8))(v5);
}

uint64_t sub_244786BA0()
{
  return sub_2447869C4();
}

uint64_t sub_244786BD8()
{
  sub_244788598();
  return sub_2447947D0();
}

uint64_t ThumbnailSceneCache.init(in:makeHostingViewController:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(qword_257381430);
  result = sub_244794890();
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  a5[4] = result;
  return result;
}

uint64_t sub_244786C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  v4 = sub_2447943D4();
  v3[11] = v4;
  v3[12] = *(_QWORD *)(v4 - 8);
  v3[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244786CD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v2 = v0[12];
  v1 = v0[13];
  v3 = (uint64_t *)v0[10];
  v4 = v0[11];
  v5 = *v3;
  v0[14] = *v3;
  v6 = v3[1];
  v7 = objc_msgSend((id)objc_opt_self(), sel_previewSceneSpecification);
  v0[15] = v7;
  swift_unknownObjectRetain();
  sub_2447954CC();
  ObjectType = swift_getObjectType();
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(ObjectType, v6);
  v11 = v10;
  swift_bridgeObjectRelease();
  sub_2447950E8();
  sub_2447943C8();
  sub_2447886FC();
  sub_2447955B0();
  sub_2447950E8();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  v0[16] = v11;
  v0[17] = sub_244795208();
  v0[18] = sub_2447951FC();
  v0[2] = v5;
  v0[3] = v6;
  v0[4] = v9;
  v0[5] = v11;
  v0[6] = v7;
  v0[7] = 0;
  v12 = (_QWORD *)swift_task_alloc();
  v0[19] = v12;
  *v12 = v0;
  v12[1] = sub_244786E74;
  return PreviewAgentConnector.injectScene(configuration:settingsPolicy:)((uint64_t)(v0 + 2), v0 + 7);
}

uint64_t sub_244786E74(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 160) = a1;
  *(_QWORD *)(v3 + 168) = v1;
  swift_task_dealloc();
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_244786F10()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_task_switch();
}

uint64_t sub_244786F70()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[10];
  v0[22] = *(_QWORD *)(v1 + 16);
  v0[23] = *(_QWORD *)(v1 + 24);
  v0[24] = sub_2447951FC();
  sub_2447951D8();
  return swift_task_switch();
}

uint64_t sub_244786FE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v1 = v0[21];
  v2 = (uint64_t (*)(uint64_t))v0[22];
  v3 = v0[20];
  swift_release();
  v0[25] = v2(v3);
  v0[26] = v1;
  return swift_task_switch();
}

uint64_t sub_244787054()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2447870B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD **)(v0 + 64);
  *v2 = *(_QWORD *)(v0 + 160);
  v2[1] = v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2447870F8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244787134()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 8))(v2);
}

uint64_t sub_244787170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[4] = a3;
  v5[5] = v4;
  v5[2] = a1;
  v5[3] = a2;
  v6 = *(_QWORD *)(a4 + 16);
  v5[6] = v6;
  v7 = sub_24479540C();
  v5[7] = v7;
  v5[8] = *(_QWORD *)(v7 - 8);
  v5[9] = swift_task_alloc();
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  sub_244795208();
  v5[12] = sub_2447951FC();
  v5[13] = sub_2447951D8();
  v5[14] = v8;
  return swift_task_switch();
}

uint64_t sub_244787230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v16)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 16))(v1, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v5 = *(_QWORD *)(v0 + 64);
    v4 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 56);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    v10 = type metadata accessor for OptionalStateWrapper.NilState(0, v7, v8, v9);
    MEMORY[0x249518824](&unk_24479C7B0, v10);
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = *(_QWORD **)(v0 + 40);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 32))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
    v13 = v12[3];
    v14 = v12[4];
    __swift_project_boxed_opaque_existential_1(v12, v13);
    v16 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v14 + 24) + *(_QWORD *)(v14 + 24));
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v15;
    *v15 = v0;
    v15[1] = sub_244787398;
    return v16(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v13, v14);
  }
}

uint64_t sub_244787398(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (!v1)
    *(double *)(v4 + 136) = a1;
  return swift_task_switch();
}

uint64_t sub_24478740C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 48);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(double))(v0 + 8))(*(double *)(v0 + 136));
}

uint64_t sub_244787474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 48);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2447874DC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 16))(v2);
}

uint64_t sub_244787518()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 24))(v2);
}

uint64_t sub_244787554()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 32))(v2);
}

uint64_t sub_244787590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_244787604;
  return sub_244787170(a1, a2, a3, a4);
}

uint64_t sub_244787604(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  __n128 v5;

  v4 = *v2;
  swift_task_dealloc();
  if (!v1)
    v5.n128_f64[0] = a1;
  return (*(uint64_t (**)(__n128))(v4 + 8))(v5);
}

unint64_t sub_244787668()
{
  unint64_t result;

  result = qword_2573813F0;
  if (!qword_2573813F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_2573813F0);
  }
  return result;
}

uint64_t sub_2447876A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2447876EC()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244787720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v7 = v3[4];
  v8 = v3[5];
  v9 = v3[6];
  v10 = v3[7];
  v11 = v3[8];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v12;
  *v12 = v4;
  v12[1] = sub_244707DE8;
  return sub_244785650(a1, a2, a3, v7, v8, v9, v10, v11);
}

uint64_t sub_2447877C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for PreviewAgentConnector();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 24) & ~v2) + *(int *)(v1 + 20);
  v4 = sub_244793E64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244787918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v8 = *(_QWORD *)(type metadata accessor for PreviewAgentConnector() - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  v12 = v3 + v9;
  v13 = (uint64_t *)(v3 + v10);
  v14 = *v13;
  v15 = v13[1];
  v16 = v3 + v11;
  v17 = *(_QWORD *)(v3 + v11);
  v18 = *(_QWORD *)(v16 + 8);
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v19;
  *v19 = v4;
  v19[1] = sub_244707DE8;
  return sub_244786164(a1, a2, a3, v12, v14, v15, v17, v18);
}

uint64_t sub_2447879F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_244707DE8;
  return sub_244786C74(a1, v5, v4);
}

uint64_t sub_244787A64()
{
  return 8;
}

_QWORD *sub_244787A70(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_244787A7C()
{
  unint64_t v0;

  sub_244788124();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_244787AF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_244793F54();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 28);
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
  }
  swift_retain();
  return a1;
}

uint64_t sub_244787BE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_244793F54();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return swift_release();
}

char *sub_244787C4C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_244793F54();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 28);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  swift_retain();
  return a1;
}

char *sub_244787D14(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = sub_244793F54();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 28);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_244787E34(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_244793F54();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 28)] = *(_OWORD *)&a2[*(int *)(a3 + 28)];
  return a1;
}

char *sub_244787EF0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_244793F54();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(_OWORD *)&a1[*(int *)(a3 + 28)] = *(_OWORD *)&a2[*(int *)(a3 + 28)];
  swift_release();
  return a1;
}

uint64_t sub_244788004()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244788010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_244788090()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24478809C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ThumbnailHostFactory(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ThumbnailHostFactory);
}

void sub_244788124()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2573814B8)
  {
    sub_244793F54();
    v0 = sub_24479540C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2573814B8);
  }
}

uint64_t destroy for ThumbnailSceneCache()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ThumbnailSceneCache(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ThumbnailSceneCache(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ThumbnailSceneCache(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  swift_unknownObjectRelease();
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ThumbnailSceneCache()
{
  return &type metadata for ThumbnailSceneCache;
}

uint64_t dispatch thunk of ThumbnailHost.displayThumbnailAndPerformHandshake(for:context:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 24) + *(_QWORD *)(a5 + 24));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_244788364;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_244788364(double a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(double))(v4 + 8))(a1);
}

uint64_t dispatch thunk of ThumbnailFactory.generateThumbnail<A>(for:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 8)
                                                                                     + *(_QWORD *)(a6 + 8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_244707DE8;
  return v15(a1, a2, a3, a4, a5, a6);
}

_QWORD *initializeBufferWithCopyOfBuffer for ThumbnailSceneCache.HostedAgent(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  v4 = v3;
  return a1;
}

void destroy for ThumbnailSceneCache.HostedAgent(uint64_t a1)
{
  swift_release();

}

_QWORD *assignWithCopy for ThumbnailSceneCache.HostedAgent(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for ThumbnailSceneCache.HostedAgent(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_release();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for ThumbnailSceneCache.HostedAgent()
{
  return &type metadata for ThumbnailSceneCache.HostedAgent;
}

unint64_t sub_244788554()
{
  unint64_t result;

  result = qword_2573814D0;
  if (!qword_2573814D0)
  {
    result = MEMORY[0x249518824](&unk_24479C600, &type metadata for ThumbnailSceneCache.HostedAgent);
    atomic_store(result, (unint64_t *)&qword_2573814D0);
  }
  return result;
}

unint64_t sub_244788598()
{
  unint64_t result;

  result = qword_2573814D8;
  if (!qword_2573814D8)
  {
    result = MEMORY[0x249518824](&unk_24479C628, &type metadata for ThumbnailSceneCache.HostedAgent);
    atomic_store(result, (unint64_t *)&qword_2573814D8);
  }
  return result;
}

uint64_t sub_2447885DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;

  v8 = *(int **)(v3 + 24);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_244707DE8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_2573814E0 + dword_2573814E0))(a1, a2, a3, v8);
}

uint64_t sub_244788674(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 24);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_244706734;
  return ((uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_2573814F0 + dword_2573814F0))(a1, a2, v6);
}

unint64_t sub_2447886FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25737F368;
  if (!qword_25737F368)
  {
    v1 = sub_2447943D4();
    result = MEMORY[0x249518824](MEMORY[0x24BE76218], v1);
    atomic_store(result, (unint64_t *)&qword_25737F368);
  }
  return result;
}

uint64_t sub_244788744(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t type metadata accessor for ThumbnailHostFactory.RemoteThumbnailHost(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ThumbnailHostFactory.RemoteThumbnailHost);
}

uint64_t sub_244788794()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2447887D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_25737F680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_244788818@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, _QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = (uint64_t (*)(uint64_t, uint64_t, _QWORD))v1[4];
  v4 = v1[6];
  v5 = v1[7];
  sub_244787668();
  v6 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  result = v3(a1, v4, *(_QWORD *)(v5 + 8));
  *(_QWORD *)(a1 + v6) = result;
  return result;
}

uint64_t sub_24478889C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_244788908(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(v2[3] - 8) + 80);
  v7 = (int *)v2[4];
  v8 = v2[5];
  v9 = (uint64_t)v2 + ((v6 + 48) & ~v6);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_244788FEC;
  return sub_244785998(a1, a2, v7, v8, v9);
}

uint64_t type metadata accessor for ThumbnailHostFactory.LocalThumbnailHost(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ThumbnailHostFactory.LocalThumbnailHost);
}

uint64_t sub_2447889B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThumbnailHostFactory(0, *(_QWORD *)(v4 + 16), a3, a4)- 8)+ 80);
  v6 = (v5 + 24) & ~v5;
  v7 = sub_244793F54();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4 + v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4 + v6, v7);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244788A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v9 = *(_QWORD *)(v4 + 16);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThumbnailHostFactory(0, v9, a3, a4) - 8) + 80);
  v11 = v4 + ((v10 + 24) & ~v10);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v12;
  *v12 = v5;
  v12[1] = sub_244707DE8;
  return sub_244784EC0(a1, a2, a3, v11, v9);
}

uint64_t type metadata accessor for OptionalStateWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionalStateWrapper);
}

uint64_t sub_244788B10()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_244788B38(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *sub_244788B70(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t sub_244788B94(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t sub_244788BCC(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_244788C14(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_244788C5C(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  __int128 v4;
  id v5;

  v3 = *((_QWORD *)a2 + 2);
  v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = v3;
  v5 = (id)v4;
  swift_retain();
  return a1;
}

uint64_t sub_244788C9C(id *a1)
{

  return swift_release();
}

uint64_t sub_244788CC4(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_244788D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t sub_244788D60(id *a1)
{

  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_244788D98(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_244788E0C(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_244788E94(uint64_t a1, _OWORD *a2)
{

  *(_OWORD *)a1 = *a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release();
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release();
  return a1;
}

uint64_t sub_244788EF0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_244788F38(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for OptionalStateWrapper.NilState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionalStateWrapper.NilState);
}

uint64_t sub_244788F90(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D0E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of static ServiceConnection.service.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ServiceConnection.init(serviceConnection:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ServiceConnection.onInvalidation(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_244789008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737EE30);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for JITManager.Storage.Record();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_244701444(a1, &qword_25737EE30);
    sub_244789B90(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_244701444((uint64_t)v10, &qword_25737EE30);
  }
  else
  {
    sub_2447299F8(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for JITManager.Storage.Record);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_24478CD24((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_244789170(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t updated;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737F100);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for UpdateRegistry.Update();
  MEMORY[0x24BDAC7A8](updated);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_244701444(a1, &qword_25737F100);
    sub_244789CC0(a2, (uint64_t)v8);
    v13 = sub_244793F18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_244701444((uint64_t)v8, &qword_25737F100);
  }
  else
  {
    sub_2447299F8(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for UpdateRegistry.Update);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_24478CE64((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_244793F18();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_2447892F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737FF68);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_244794C68();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_244701444(a1, &qword_25737FF68);
    sub_244789E10(a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEC6440], &qword_2573817E0, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_244701444((uint64_t)v10, &qword_25737FF68);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_24478CFE8((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native, (uint64_t (*)(_QWORD))MEMORY[0x24BEC6440], &qword_2573817E0);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_244789484(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257380080);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_244794B3C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_244701444(a1, &qword_257380080);
    v13 = sub_24470F7EC(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_24478E720();
        v17 = v22;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, v9);
      sub_24478C334(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_244701444((uint64_t)v8, &qword_257380080);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_24478D14C((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24478965C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_244707B68((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_24478D578(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_244793B28();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_244701444(a1, &qword_2573817B8);
    sub_24478A060(a2, (uint64_t)v9);
    v7 = sub_244793B28();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_244701444((uint64_t)v9, &qword_2573817B8);
  }
}

void PreviewAgentLauncherRegistry.init()(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4B00];
}

uint64_t PreviewAgentLauncherRegistry.registerLauncher(_:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  uint64_t v30;

  v5 = sub_244794AAC();
  v27 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_244793B28();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v25 - v13;
  v15 = *v2;
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_24470F81C(a2), (v17 & 1) != 0))
  {
    sub_244705F80(*(_QWORD *)(v15 + 56) + 40 * v16, (uint64_t)v29);
    sub_244701444((uint64_t)v29, &qword_2573817B8);
    sub_244794A7C();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
    v18 = sub_244794AA0();
    v19 = sub_244795388();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      *(_QWORD *)&v29[0] = v21;
      v26 = v5;
      *(_DWORD *)v20 = 136446210;
      v25 = v20 + 4;
      v22 = sub_244793B1C();
      v28 = sub_24470600C(v22, v23, (uint64_t *)v29);
      sub_244795448();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      _os_log_impl(&dword_2446FC000, v18, v19, "Skipping duplicate preview agent launcher for %{public}s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495188D8](v21, -1, -1);
      MEMORY[0x2495188D8](v20, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v7, v26);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);

      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v7, v5);
    }
  }
  else
  {
    v30 = 0;
    memset(v29, 0, sizeof(v29));
    sub_244701444((uint64_t)v29, &qword_2573817B8);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, a2, v8);
    sub_244705F80(a1, (uint64_t)v29);
    return sub_24478965C((uint64_t)v29, (uint64_t)v14);
  }
}

double PreviewAgentLauncherRegistry.subscript.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  double result;

  v4 = *v2;
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_24470F81C(a1), (v6 & 1) != 0))
  {
    sub_244705F80(*(_QWORD *)(v4 + 56) + 40 * v5, a2);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewAgentLauncherRegistry()
{
  return &type metadata for PreviewAgentLauncherRegistry;
}

uint64_t sub_244789A84(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v13;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_24470F5E4(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v13 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_24478EAF8((uint64_t (*)(_QWORD))MEMORY[0x24BE761F8], &qword_2573817F0);
    v7 = v13;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_2447943D4();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BE761F8];
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v11 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_24478C4F0(v4, v7, v10, &qword_25737D9D0, MEMORY[0x24BE76208]);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_244789B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_24470F67C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24478DFA4();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = type metadata accessor for JITManager.Storage.Record();
    v14 = *(_QWORD *)(v13 - 8);
    sub_2447299F8(v12 + *(_QWORD *)(v14 + 72) * v8, a3, (uint64_t (*)(_QWORD))type metadata accessor for JITManager.Storage.Record);
    sub_24478BC5C(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for JITManager.Storage.Record();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

uint64_t sub_244789CC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t updated;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_24470F6F0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24478E1E8();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_244793F18();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    updated = type metadata accessor for UpdateRegistry.Update();
    v14 = *(_QWORD *)(updated - 8);
    sub_2447299F8(v12 + *(_QWORD *)(v14 + 72) * v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for UpdateRegistry.Update);
    sub_24478BE58(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, updated);
  }
  else
  {
    v16 = type metadata accessor for UpdateRegistry.Update();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_244789DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_244789E10(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE77AE8], &qword_25737E728, a3);
}

uint64_t sub_244789E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v8;
  unint64_t v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v8 = v5;
  swift_bridgeObjectRetain();
  v12 = sub_24470F788(a1, a2);
  LOBYTE(a2) = v13;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v8;
    v21 = *v8;
    *v8 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24478E4C4(a3, a4);
      v15 = v21;
    }
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v15 + 56);
    v17 = a3(0);
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 32))(a5, v16 + *(_QWORD *)(v18 + 72) * v12, v17);
    sub_24478C12C(v12, v15, a3);
    *v8 = v15;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a5, 0, 1, v17);
  }
  else
  {
    v20 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a5, 1, 1, v20);
  }
}

uint64_t sub_244789F54(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v13;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_24470F6F0(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v13 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_24478EAF8((uint64_t (*)(_QWORD))MEMORY[0x24BE777F0], &qword_2573817D8);
    v7 = v13;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_244793F18();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0];
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v11 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_24478C4F0(v4, v7, v10, &qword_25737D9B0, MEMORY[0x24BE77800]);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v11;
}

double sub_24478A060@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_24470F81C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24478ED28();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_244793B28();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_244707B68((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v6), a2);
    sub_24478C788(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_24478A164(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v3 = v2;
  v5 = type metadata accessor for ContentKey();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E748);
  v10 = (_QWORD *)sub_244795574();
  if (*(_QWORD *)(v9 + 16))
  {
    v26 = v3;
    v11 = 1 << *(_BYTE *)(v9 + 32);
    v12 = (_QWORD *)(v9 + 64);
    v13 = -1;
    if (v11 < 64)
      v13 = ~(-1 << v11);
    v14 = v13 & *(_QWORD *)(v9 + 64);
    v15 = (unint64_t)(v11 + 63) >> 6;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v18 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v19 = v18 | (v17 << 6);
      }
      else
      {
        v20 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v20 >= v15)
          goto LABEL_23;
        v21 = v12[v20];
        ++v17;
        if (!v21)
        {
          v17 = v20 + 1;
          if (v20 + 1 >= v15)
            goto LABEL_23;
          v21 = v12[v17];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v26;
                goto LABEL_30;
              }
              v24 = 1 << *(_BYTE *)(v9 + 32);
              if (v24 >= 64)
                bzero((void *)(v9 + 64), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v12 = -1 << v24;
              v3 = v26;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v21 = v12[v22];
            if (!v21)
            {
              while (1)
              {
                v17 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_32;
                if (v17 >= v15)
                  goto LABEL_23;
                v21 = v12[v17];
                ++v22;
                if (v21)
                  goto LABEL_20;
              }
            }
            v17 = v22;
          }
        }
LABEL_20:
        v14 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v17 << 6);
      }
      v23 = *(_QWORD *)(v9 + 48) + *(_QWORD *)(v6 + 72) * v19;
      if ((a2 & 1) != 0)
        sub_2447299F8(v23, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ContentKey);
      else
        sub_24470D480(v23, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ContentKey);
      result = sub_24478D6F8((uint64_t)v8, *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v19), *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v19 + 8), v10);
    }
  }
  result = swift_release();
LABEL_30:
  *v3 = v10;
  return result;
}

uint64_t sub_24478A3B0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  v5 = type metadata accessor for JITManager.Storage.Record();
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E738);
  v43 = a2;
  v9 = sub_244795574();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v39 = v2;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40)
      break;
    v23 = v41;
    v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v40)
              goto LABEL_34;
            v24 = v41[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v42 + 72);
    v30 = *(_QWORD *)(v8 + 56) + v29 * v21;
    if ((v43 & 1) != 0)
    {
      sub_2447299F8(v30, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for JITManager.Storage.Record);
    }
    else
    {
      sub_24470D480(v30, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for JITManager.Storage.Record);
      swift_bridgeObjectRetain();
    }
    sub_24479564C();
    swift_bridgeObjectRetain();
    sub_2447950C4();
    swift_bridgeObjectRelease();
    result = sub_24479567C();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    result = sub_2447299F8((uint64_t)v7, *(_QWORD *)(v10 + 56) + v29 * v18, (uint64_t (*)(_QWORD))type metadata accessor for JITManager.Storage.Record);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v39;
  v23 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v8 + 32);
  if (v38 >= 64)
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v38;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_24478A740(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t updated;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t i;
  int v48;
  uint64_t v49;

  v3 = v2;
  updated = type metadata accessor for UpdateRegistry.Update();
  v46 = *(_QWORD *)(updated - 8);
  MEMORY[0x24BDAC7A8](updated);
  v49 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_244793F18();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573817C0);
  v48 = a2;
  v12 = sub_244795574();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_42;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v45 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v43 = v2;
  v44 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  v21 = v11;
  for (i = v11; ; v21 = i)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v20;
    if (!v27)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_35;
      v27 = v45[v20];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_35:
          swift_release();
          v3 = v43;
          if ((v48 & 1) == 0)
            goto LABEL_42;
          goto LABEL_36;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_44;
            if (v20 >= v44)
              goto LABEL_35;
            v27 = v45[v20];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v20 = v28;
      }
    }
LABEL_21:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v8 + 72);
    v30 = *(_QWORD *)(v21 + 48) + v29 * v24;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v30, v7);
      v31 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_2447299F8(v31 + v32 * v24, v49, (uint64_t (*)(_QWORD))type metadata accessor for UpdateRegistry.Update);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v30, v7);
      v33 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_24470D480(v33 + v32 * v24, v49, (uint64_t (*)(_QWORD))type metadata accessor for UpdateRegistry.Update);
    }
    sub_24470665C(&qword_25737D9B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0], MEMORY[0x24BE77800]);
    result = sub_24479501C();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v29 * v22, v10, v7);
    result = sub_2447299F8(v49, *(_QWORD *)(v13 + 56) + v32 * v22, (uint64_t (*)(_QWORD))type metadata accessor for UpdateRegistry.Update);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v3 = v43;
  v26 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_42;
LABEL_36:
  v41 = 1 << *(_BYTE *)(i + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(i + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_24478AB5C(uint64_t a1, int a2)
{
  return sub_24478AB70(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE77AE8], &qword_25737E728);
}

uint64_t sub_24478AB70(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  int v46;
  char *v47;
  uint64_t v48;

  v6 = v4;
  v48 = a3(0);
  v8 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v47 = (char *)&v42 - v9;
  v10 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v46 = a2;
  v11 = sub_244795574();
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v43 = v4;
    v13 = 1 << *(_BYTE *)(v10 + 32);
    v14 = *(_QWORD *)(v10 + 64);
    v45 = (_QWORD *)(v10 + 64);
    if (v13 < 64)
      v15 = ~(-1 << v13);
    else
      v15 = -1;
    v16 = v15 & v14;
    v44 = (unint64_t)(v13 + 63) >> 6;
    v17 = v11 + 64;
    result = swift_retain();
    v19 = 0;
    while (1)
    {
      if (v16)
      {
        v22 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v23 = v22 | (v19 << 6);
      }
      else
      {
        v24 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v24 >= v44)
          goto LABEL_34;
        v25 = v45[v24];
        ++v19;
        if (!v25)
        {
          v19 = v24 + 1;
          if (v24 + 1 >= v44)
            goto LABEL_34;
          v25 = v45[v19];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v44)
            {
LABEL_34:
              swift_release();
              v6 = v43;
              if ((v46 & 1) != 0)
              {
                v41 = 1 << *(_BYTE *)(v10 + 32);
                if (v41 >= 64)
                  bzero(v45, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v45 = -1 << v41;
                *(_QWORD *)(v10 + 16) = 0;
              }
              break;
            }
            v25 = v45[v26];
            if (!v25)
            {
              while (1)
              {
                v19 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_41;
                if (v19 >= v44)
                  goto LABEL_34;
                v25 = v45[v19];
                ++v26;
                if (v25)
                  goto LABEL_21;
              }
            }
            v19 = v26;
          }
        }
LABEL_21:
        v16 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v19 << 6);
      }
      v27 = *(_QWORD *)(v10 + 56);
      v28 = v10;
      v29 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * v23);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v8 + 72);
      v33 = v27 + v32 * v23;
      if ((v46 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v47, v33, v48);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v47, v33, v48);
        swift_bridgeObjectRetain();
      }
      sub_24479564C();
      sub_2447950C4();
      result = sub_24479567C();
      v34 = -1 << *(_BYTE *)(v12 + 32);
      v35 = result & ~v34;
      v36 = v35 >> 6;
      if (((-1 << v35) & ~*(_QWORD *)(v17 + 8 * (v35 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v17 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v37 = 0;
        v38 = (unint64_t)(63 - v34) >> 6;
        do
        {
          if (++v36 == v38 && (v37 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v39 = v36 == v38;
          if (v36 == v38)
            v36 = 0;
          v37 |= v39;
          v40 = *(_QWORD *)(v17 + 8 * v36);
        }
        while (v40 == -1);
        v20 = __clz(__rbit64(~v40)) + (v36 << 6);
      }
      *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = (_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v20);
      *v21 = v31;
      v21[1] = v30;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v12 + 56) + v32 * v20, v47, v48);
      ++*(_QWORD *)(v12 + 16);
      v10 = v28;
    }
  }
  result = swift_release();
  *v6 = v12;
  return result;
}

uint64_t sub_24478AED4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v3 = v2;
  v5 = sub_244794B3C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573817E8);
  result = sub_244795574();
  v11 = result;
  if (*(_QWORD *)(v9 + 16))
  {
    v36 = v3;
    v12 = 0;
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    v14 = 1 << *(_BYTE *)(v9 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & v13;
    v38 = (unint64_t)(v14 + 63) >> 6;
    v17 = result + 64;
    v37 = a2;
    v18 = 16;
    if ((a2 & 1) != 0)
      v18 = 32;
    v40 = v18;
    while (1)
    {
      if (v16)
      {
        v20 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v21 = v20 | (v12 << 6);
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v22 >= v38)
          goto LABEL_33;
        v23 = v39[v22];
        ++v12;
        if (!v23)
        {
          v12 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_33;
          v23 = v39[v12];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v36;
                goto LABEL_40;
              }
              v34 = 1 << *(_BYTE *)(v9 + 32);
              if (v34 >= 64)
                bzero(v39, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v34;
              v3 = v36;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v12 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v12 >= v38)
                  goto LABEL_33;
                v23 = v39[v12];
                ++v24;
                if (v23)
                  goto LABEL_23;
              }
            }
            v12 = v24;
          }
        }
LABEL_23:
        v16 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v12 << 6);
      }
      v25 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v21);
      v26 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + v40))(v8, *(_QWORD *)(v9 + 56) + v26 * v21, v5);
      result = sub_244795640();
      v27 = -1 << *(_BYTE *)(v11 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        v19 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v19) = v25;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 56) + v26 * v19, v8, v5);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v11;
  return result;
}

uint64_t sub_24478B204(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573817D0);
  v42 = a2;
  v6 = sub_244795574();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_24479564C();
    sub_2447950C4();
    result = sub_24479567C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_24478B528(uint64_t a1, int a2, uint64_t (*a3)(uint64_t), uint64_t *a4, unint64_t *a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t i;
  uint64_t (*v46)(uint64_t);
  unint64_t *v47;
  uint64_t v48;
  int v49;

  v47 = a5;
  v48 = a6;
  v8 = v6;
  v46 = a3;
  v10 = a3(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v42 - v12;
  v14 = *v6;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v49 = a2;
  v15 = sub_244795574();
  v16 = v15;
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_41;
  v17 = 1 << *(_BYTE *)(v14 + 32);
  v18 = *(_QWORD *)(v14 + 64);
  v44 = (_QWORD *)(v14 + 64);
  if (v17 < 64)
    v19 = ~(-1 << v17);
  else
    v19 = -1;
  v20 = v19 & v18;
  v42 = v6;
  v43 = (unint64_t)(v17 + 63) >> 6;
  v21 = v15 + 64;
  result = swift_retain();
  v23 = 0;
  for (i = v14; ; v14 = i)
  {
    if (v20)
    {
      v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v26 = v25 | (v23 << 6);
      goto LABEL_22;
    }
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v43)
      break;
    v28 = v44;
    v29 = v44[v27];
    ++v23;
    if (!v29)
    {
      v23 = v27 + 1;
      if (v27 + 1 >= v43)
        goto LABEL_34;
      v29 = v44[v23];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v43)
        {
LABEL_34:
          swift_release();
          v8 = v42;
          if ((v49 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v29 = v44[v30];
        if (!v29)
        {
          while (1)
          {
            v23 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_43;
            if (v23 >= v43)
              goto LABEL_34;
            v29 = v44[v23];
            ++v30;
            if (v29)
              goto LABEL_21;
          }
        }
        v23 = v30;
      }
    }
LABEL_21:
    v20 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_22:
    v31 = *(_QWORD *)(v11 + 72);
    v32 = *(_QWORD *)(v14 + 48) + v31 * v26;
    if ((v49 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 32))(v13, v32, v10);
      v33 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v26);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, v32, v10);
      v33 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v26);
      swift_retain();
    }
    sub_24470665C(v47, v46, v48);
    result = sub_24479501C();
    v34 = -1 << *(_BYTE *)(v16 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v21 + 8 * (v35 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v21 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v21 + 8 * v36);
      }
      while (v40 == -1);
      v24 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 32))(*(_QWORD *)(v16 + 48) + v31 * v24, v13, v10);
    *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v24) = v33;
    ++*(_QWORD *)(v16 + 16);
  }
  swift_release();
  v8 = v42;
  v28 = v44;
  if ((v49 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v14 + 32);
  if (v41 >= 64)
    bzero(v28, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v41;
  *(_QWORD *)(v14 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v8 = v16;
  return result;
}

uint64_t sub_24478B8B4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  int v40;
  __int128 v41[2];

  v3 = v2;
  v5 = sub_244793B28();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573817C8);
  v40 = a2;
  v10 = sub_244795574();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v37 = v2;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = v39;
    v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_34;
      v24 = v39[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v38)
              goto LABEL_34;
            v24 = v39[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v40 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_244707B68((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v21), (uint64_t)v41);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_244705F80(*(_QWORD *)(v9 + 56) + 40 * v21, (uint64_t)v41);
    }
    sub_24470665C(&qword_25737D9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77038], MEMORY[0x24BE77048]);
    result = sub_24479501C();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = sub_244707B68(v41, *(_QWORD *)(v11 + 56) + 40 * v19);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = v39;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

unint64_t sub_24478BC5C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_244795478();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_24479564C();
        swift_bridgeObjectRetain();
        sub_2447950C4();
        v9 = sub_24479567C();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for JITManager.Storage.Record() - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24478BE58(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = sub_244793F18();
  v37 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_244795478();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v36 = (result + 1) & v11;
      v12 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v35(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_24470665C(&qword_25737D9B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0], MEMORY[0x24BE77800]);
        v18 = sub_24479501C();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v8 = v14;
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for UpdateRegistry.Update() - 8) + 72);
            v24 = v23 * a1;
            result = v22 + v23 * a1;
            v25 = v23 * v10;
            v26 = v22 + v23 * v10 + v23;
            if (v24 < v25 || result >= v26)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v24 != v25)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24478C12C(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_244795478();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        sub_24479564C();
        swift_bridgeObjectRetain();
        sub_2447950C4();
        v11 = sub_24479567C();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_OWORD *)(v13 + 16 * v4);
        v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v18 = v17 * v4;
        result = v16 + v17 * v4;
        v19 = v17 * v7;
        v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v23 = *v22;
    v24 = (-1 << v4) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24478C334(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_244795478();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_244795640();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(sub_244794B3C() - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24478C4F0(int64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v7;
  unint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  unint64_t v37;
  uint64_t (*v38)(uint64_t);
  unint64_t *v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a4;
  v40 = a5;
  v38 = a3;
  v7 = a3(0);
  v41 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v36 - v9;
  v11 = a2 + 64;
  v12 = -1 << *(_BYTE *)(a2 + 32);
  v13 = (a1 + 1) & ~v12;
  if (((1 << v13) & *(_QWORD *)(a2 + 64 + 8 * (v13 >> 6))) != 0)
  {
    v14 = ~v12;
    result = sub_244795478();
    if ((*(_QWORD *)(v11 + 8 * (v13 >> 6)) & (1 << v13)) != 0)
    {
      v37 = (result + 1) & v14;
      v15 = *(_QWORD *)(v41 + 72);
      v36 = *(void (**)(char *, unint64_t, uint64_t))(v41 + 16);
      v16 = v14;
      do
      {
        v17 = v11;
        v18 = v15;
        v19 = v15 * v13;
        v20 = v16;
        v36(v10, *(_QWORD *)(a2 + 48) + v15 * v13, v7);
        sub_24470665C(v39, v38, v40);
        v21 = sub_24479501C();
        result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v10, v7);
        v16 = v20;
        v22 = v21 & v20;
        if (a1 >= (uint64_t)v37)
        {
          if (v22 >= v37 && a1 >= (uint64_t)v22)
          {
LABEL_16:
            v25 = *(_QWORD *)(a2 + 48);
            v15 = v18;
            result = v25 + v18 * a1;
            if (v18 * a1 < v19 || result >= v25 + v19 + v18)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              v16 = v20;
              v11 = v17;
            }
            else
            {
              v26 = v18 * a1 == v19;
              v11 = v17;
              if (!v26)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v16 = v20;
              }
            }
            v27 = *(_QWORD *)(a2 + 56);
            v28 = (_QWORD *)(v27 + 8 * a1);
            v29 = (_QWORD *)(v27 + 8 * v13);
            if (a1 != v13 || (a1 = v13, v28 >= v29 + 1))
            {
              *v28 = *v29;
              a1 = v13;
            }
            goto LABEL_5;
          }
        }
        else if (v22 >= v37 || a1 >= (uint64_t)v22)
        {
          goto LABEL_16;
        }
        v11 = v17;
        v15 = v18;
LABEL_5:
        v13 = (v13 + 1) & v16;
      }
      while (((*(_QWORD *)(v11 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
    }
    v30 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v30;
    v32 = (-1 << a1) - 1;
  }
  else
  {
    v30 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v32 = *v30;
    v31 = (-1 << a1) - 1;
  }
  *v30 = v32 & v31;
  v33 = *(_QWORD *)(a2 + 16);
  v34 = __OFSUB__(v33, 1);
  v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24478C788(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = sub_244793B28();
  v37 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_244795478();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v36 = (result + 1) & v11;
      v12 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v35(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_24470665C(&qword_25737D9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE77038], MEMORY[0x24BE77048]);
        v18 = sub_24479501C();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = v23 + 40 * a1;
            v25 = (__int128 *)(v23 + 40 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= (unint64_t)v25 + 40))
            {
              v26 = *v25;
              v27 = v25[1];
              *(_QWORD *)(v24 + 32) = *((_QWORD *)v25 + 4);
              *(_OWORD *)v24 = v26;
              *(_OWORD *)(v24 + 16) = v27;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24478CA34(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t result;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  char v23;
  uint64_t v24;

  v5 = (_QWORD **)v4;
  v10 = type metadata accessor for ContentKey();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_24470F394(a3);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  result = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= result && (a4 & 1) != 0)
  {
LABEL_7:
    v21 = *v5;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = (uint64_t *)(v21[7] + 16 * v15);
      *v22 = a1;
      v22[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_24478DD74();
    goto LABEL_7;
  }
  sub_24478A164(result, a4 & 1);
  result = sub_24470F394(a3);
  if ((v19 & 1) != (v23 & 1))
  {
LABEL_14:
    result = sub_2447955F8();
    __break(1u);
    return result;
  }
  v15 = result;
  v21 = *v5;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_24470D480(a3, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ContentKey);
  return sub_24478D928(v15, (uint64_t)v12, a1, a2, v21);
}

uint64_t sub_24478CB90(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_2447943D4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_24470F5E4(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_24478EAF8((uint64_t (*)(_QWORD))MEMORY[0x24BE761F8], &qword_2573817F0);
    goto LABEL_7;
  }
  sub_24478B528(v17, a3 & 1, (uint64_t (*)(uint64_t))MEMORY[0x24BE761F8], &qword_2573817F0, &qword_25737D9D0, MEMORY[0x24BE76208]);
  v23 = sub_24470F5E4(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_2447955F8();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_24478DC38(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(_QWORD))MEMORY[0x24BE761F8]);
}

uint64_t sub_24478CD24(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_24470F67C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = type metadata accessor for JITManager.Storage.Record();
        return sub_24478EF68(a1, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, (uint64_t (*)(_QWORD))type metadata accessor for JITManager.Storage.Record);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_24478DFA4();
      goto LABEL_7;
    }
    sub_24478A3B0(v15, a4 & 1);
    v22 = sub_24470F67C(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_24478D9C8(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_2447955F8();
  __break(1u);
  return result;
}

uint64_t sub_24478CE64(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t updated;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_244793F18();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_24470F6F0(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      updated = type metadata accessor for UpdateRegistry.Update();
      return sub_24478EF68(a1, v21 + *(_QWORD *)(*(_QWORD *)(updated - 8) + 72) * v14, (uint64_t (*)(_QWORD))type metadata accessor for UpdateRegistry.Update);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_24478E1E8();
    goto LABEL_7;
  }
  sub_24478A740(v17, a3 & 1);
  v24 = sub_24470F6F0(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_2447955F8();
    __break(1u);
    return result;
  }
  v14 = v24;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_24478DA58(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_24478CFD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_24478CFE8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE77AE8], &qword_25737E728);
}

uint64_t sub_24478CFE8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(_QWORD), uint64_t *a6)
{
  _QWORD *v6;
  _QWORD **v9;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;

  v9 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_24470F788(a2, a3);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a4 & 1) != 0)
    {
LABEL_7:
      v22 = *v9;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7];
        v24 = a5(0);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v16, a1, v24);
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a4 & 1) == 0)
    {
      sub_24478E4C4(a5, a6);
      goto LABEL_7;
    }
    sub_24478AB70(v19, a4 & 1, a5, a6);
    v26 = sub_24470F788(a2, a3);
    if ((v20 & 1) == (v27 & 1))
    {
      v16 = v26;
      v22 = *v9;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_24478DB1C(v16, a2, a3, a1, v22, a5);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_2447955F8();
  __break(1u);
  return result;
}

uint64_t sub_24478D14C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_24470F7EC(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_244794B3C();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_24478DBAC(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_24478E720();
      goto LABEL_7;
    }
    sub_24478AED4(v13, a3 & 1);
    v20 = sub_24470F7EC(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_24478DBAC(v10, a2, a1, v16);
    }
  }
  result = sub_2447955F8();
  __break(1u);
  return result;
}

uint64_t sub_24478D270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_24470F788(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_24478E940();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_bridgeObjectRelease();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_24478B204(v17, a5 & 1);
  v23 = sub_24470F788(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2447955F8();
  __break(1u);
  return result;
}

uint64_t sub_24478D3E4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_244793F18();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_24470F6F0(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_24478EAF8((uint64_t (*)(_QWORD))MEMORY[0x24BE777F0], &qword_2573817D8);
    goto LABEL_7;
  }
  sub_24478B528(v17, a3 & 1, (uint64_t (*)(uint64_t))MEMORY[0x24BE777F0], &qword_2573817D8, &qword_25737D9B0, MEMORY[0x24BE77800]);
  v23 = sub_24470F6F0(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_2447955F8();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_24478DC38(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(_QWORD))MEMORY[0x24BE777F0]);
}

uint64_t sub_24478D578(__int128 *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_244793B28();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_24470F81C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 40 * v14;
        __swift_destroy_boxed_opaque_existential_1Tm(v21);
        return sub_244707B68(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_24478ED28();
      goto LABEL_7;
    }
    sub_24478B8B4(v17, a3 & 1);
    v23 = sub_24470F81C(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_24478DCD0(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_2447955F8();
  __break(1u);
  return result;
}

uint64_t sub_24478D6F8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  _QWORD *v18;
  uint64_t v19;

  v8 = sub_244793E94();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25737D860);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24479564C();
  sub_244793E88();
  sub_24470665C(&qword_25737D878, (uint64_t (*)(uint64_t))MEMORY[0x24BE77570], MEMORY[0x24BE77580]);
  sub_244795028();
  v15 = type metadata accessor for ContentKey();
  sub_24470E1C0(a1 + *(int *)(v15 + 20), (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_244795664();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    sub_244795664();
    sub_24470665C(&qword_25737D880, (uint64_t (*)(uint64_t))MEMORY[0x24BE775A0], MEMORY[0x24BE775B0]);
    sub_244795028();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  sub_24479567C();
  v16 = sub_244795484();
  *(_QWORD *)((char *)a4 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v16;
  result = sub_2447299F8(a1, a4[6] + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for ContentKey);
  v18 = (_QWORD *)(a4[7] + 16 * v16);
  *v18 = a2;
  v18[1] = a3;
  ++a4[2];
  return result;
}

uint64_t sub_24478D928(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6];
  v11 = type metadata accessor for ContentKey();
  result = sub_2447299F8(a2, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for ContentKey);
  v13 = (_QWORD *)(a5[7] + 16 * a1);
  *v13 = a3;
  v13[1] = a4;
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_24478D9C8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for JITManager.Storage.Record();
  result = sub_2447299F8(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for JITManager.Storage.Record);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

uint64_t sub_24478DA58(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t updated;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_244793F18();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  updated = type metadata accessor for UpdateRegistry.Update();
  result = sub_2447299F8(a3, v10 + *(_QWORD *)(*(_QWORD *)(updated - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for UpdateRegistry.Update);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_24478DB10(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_24478DB1C(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))MEMORY[0x24BE77AE8]);
}

uint64_t sub_24478DB1C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v9 = (_QWORD *)(a5[6] + 16 * a1);
  *v9 = a2;
  v9[1] = a3;
  v10 = a5[7];
  v11 = a6(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a4, v11);
  v13 = a5[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a5[2] = v15;
  return result;
}

uint64_t sub_24478DBAC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = sub_244794B3C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_24478DC38(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v9 = a4[6];
  v10 = a5(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a2, v10);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

uint64_t sub_24478DCD0(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_244793B28();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_244707B68(a3, a4[7] + 40 * a1);
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

void *sub_24478DD74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  __int128 v27;

  v1 = v0;
  v2 = type metadata accessor for ContentKey();
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E748);
  v5 = *v0;
  v6 = sub_244795568();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v9 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v26 + 72) * v18;
    sub_24470D480(*(_QWORD *)(v5 + 48) + v19, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ContentKey);
    v20 = 16 * v18;
    v21 = *(_QWORD *)(v7 + 48) + v19;
    v27 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v20);
    result = (void *)sub_2447299F8((uint64_t)v4, v21, (uint64_t (*)(_QWORD))type metadata accessor for ContentKey);
    *(_OWORD *)(*(_QWORD *)(v7 + 56) + v20) = v27;
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v9 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24478DFA4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for JITManager.Storage.Record();
  v29 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25737E738);
  v5 = *v0;
  v6 = sub_244795568();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v26 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v27 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v28 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v11;
    if (!v24)
    {
      v11 = v23 + 1;
      if (v23 + 1 >= v28)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v11);
      if (!v24)
        break;
    }
LABEL_25:
    v14 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v11 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    v19 = *v18;
    v20 = v18[1];
    v21 = *(_QWORD *)(v29 + 72) * v16;
    sub_24470D480(*(_QWORD *)(v5 + 56) + v21, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for JITManager.Storage.Record);
    v22 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v17);
    *v22 = v19;
    v22[1] = v20;
    sub_2447299F8((uint64_t)v4, *(_QWORD *)(v7 + 56) + v21, (uint64_t (*)(_QWORD))type metadata accessor for JITManager.Storage.Record);
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v11 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v11 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v11);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24478E1E8()
{
  uint64_t *v0;
  uint64_t updated;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t i;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  updated = type metadata accessor for UpdateRegistry.Update();
  v36 = *(_QWORD *)(updated - 8);
  MEMORY[0x24BDAC7A8](updated);
  v35 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_244793F18();
  v3 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573817C0);
  v30 = v0;
  v5 = *v0;
  v6 = sub_244795568();
  v7 = *(_QWORD *)(v5 + 16);
  v38 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v28 = v38;
    v27 = v30;
LABEL_25:
    *v27 = v28;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v38;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v37 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v31 = v5 + 64;
  v32 = (unint64_t)(v12 + 63) >> 6;
  v16 = v33;
  v15 = v34;
  v17 = (uint64_t)v35;
  for (i = v38;
        ;
        result = (void *)sub_2447299F8(v17, *(_QWORD *)(i + 56) + v23, (uint64_t (*)(_QWORD))type metadata accessor for UpdateRegistry.Update))
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v11 << 6);
      v21 = v37;
      goto LABEL_9;
    }
    v24 = v11 + 1;
    v21 = v37;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_23;
      v25 = *(_QWORD *)(v31 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_22:
    v14 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v16, *(_QWORD *)(v21 + 48) + v22, v15);
    v23 = *(_QWORD *)(v36 + 72) * v20;
    sub_24470D480(*(_QWORD *)(v21 + 56) + v23, v17, (uint64_t (*)(_QWORD))type metadata accessor for UpdateRegistry.Update);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(i + 48) + v22, v16, v15);
  }
  v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    result = (void *)swift_release();
    v27 = v30;
    v28 = v38;
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v31 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_24478E4B0()
{
  return sub_24478E4C4((uint64_t (*)(_QWORD))MEMORY[0x24BE77AE8], &qword_25737E728);
}

void *sub_24478E4C4(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a1(0);
  v4 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v6 = (char *)&v33 - v5;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v34 = v2;
  v7 = *v2;
  v8 = sub_244795568();
  v9 = *(_QWORD *)(v7 + 16);
  v38 = v8;
  if (!v9)
  {
    result = (void *)swift_release();
    v32 = v38;
    v31 = v34;
LABEL_28:
    *v31 = v32;
    return result;
  }
  v10 = v8;
  result = (void *)(v8 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)result >= v7 + 64 + 8 * v12)
  {
    result = memmove(result, (const void *)(v7 + 64), 8 * v12);
    v10 = v38;
  }
  v35 = v7 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 64);
  v36 = (unint64_t)(v15 + 63) >> 6;
  v18 = v37;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v28 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v28);
    ++v14;
    if (!v29)
    {
      v14 = v28 + 1;
      if (v28 + 1 >= v36)
        goto LABEL_26;
      v29 = *(_QWORD *)(v35 + 8 * v14);
      if (!v29)
        break;
    }
LABEL_25:
    v17 = (v29 - 1) & v29;
    v20 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_12:
    v21 = 16 * v20;
    v22 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
    v24 = *v22;
    v23 = v22[1];
    v25 = *(_QWORD *)(v4 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 56) + v25, v18);
    v26 = v38;
    v27 = (_QWORD *)(*(_QWORD *)(v38 + 48) + v21);
    *v27 = v24;
    v27[1] = v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v26 + 56) + v25, v6, v18);
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_26:
    result = (void *)swift_release();
    v31 = v34;
    v32 = v38;
    goto LABEL_28;
  }
  v29 = *(_QWORD *)(v35 + 8 * v30);
  if (v29)
  {
    v14 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v14 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v14);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24478E720()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_244794B3C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573817E8);
  v24 = v0;
  v5 = *v0;
  v6 = sub_244795568();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24478E940()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2573817D0);
  v2 = *v0;
  v3 = sub_244795568();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24478EAF8(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v4 = a1(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - v6;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v27 = v2;
  v8 = *v2;
  v9 = sub_244795568();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v27 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v28 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v29 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v23);
    ++v14;
    if (!v24)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v29)
        goto LABEL_26;
      v24 = *(_QWORD *)(v28 + 8 * v14);
      if (!v24)
        break;
    }
LABEL_25:
    v17 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v20, v4);
    v21 = 8 * v19;
    v22 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v20, v7, v4);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + v21) = v22;
    result = (void *)swift_retain();
  }
  v25 = v23 + 2;
  if (v25 >= v29)
    goto LABEL_26;
  v24 = *(_QWORD *)(v28 + 8 * v25);
  if (v24)
  {
    v14 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v14 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v14);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

