uint64_t sub_2421B70DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2422724AC();
  __swift_allocate_value_buffer(v0, qword_2543A9D08);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2543A9D08);
  if (qword_2543AA570 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2543AA558);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void Assertion.policy.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

void Assertion.description.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

uint64_t Assertion.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_15();
  v0 = OUTLINED_FUNCTION_56();
  return OUTLINED_FUNCTION_55(v0, v1, v2, v3);
}

uint64_t Assertion.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_15();
  v0 = OUTLINED_FUNCTION_56();
  return OUTLINED_FUNCTION_55(v0, v1, v2, v3);
}

uint64_t default argument 3 of Assertion.init(policy:description:collection:osEligibilityChecker:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;

  if (qword_2543AA170 != -1)
    swift_once();
  v2 = qword_2543AA1F0;
  a1[3] = type metadata accessor for OSEligibilityChecker();
  a1[4] = (uint64_t)&protocol witness table for OSEligibilityChecker;
  *a1 = v2;
  return swift_retain();
}

uint64_t Assertion.__allocating_init(policy:description:collection:osEligibilityChecker:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_52();
  swift_allocObject();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_32(v1, (uint64_t)sub_2421BD06C);
  return Assertion.init(policy:description:collection:osEligibilityChecker:)(v2, v3, v4, v5, v6, v7);
}

uint64_t Assertion.init(policy:description:collection:osEligibilityChecker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  type metadata accessor for Assertion.DaemonRep(0);
  v7[9] = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421B7338()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;

  v1 = *(_QWORD **)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 32);
  v12 = *(_OWORD *)(v0 + 16);
  _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
  v6 = OBJC_IVAR____TtC20ModelManagerServices9Assertion_timestamp;
  sub_2422722F0();
  *(_QWORD *)(v2 + v6) = v7;
  *(_QWORD *)(v2 + 32) = v5;
  *(_QWORD *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 16) = v12;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC20ModelManagerServices9Assertion_collection) = v3;
  v8 = v1[3];
  v9 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v8);
  swift_retain();
  v10 = (_QWORD *)OUTLINED_FUNCTION_80();
  *(_QWORD *)(v0 + 80) = v10;
  *v10 = v0;
  v10[1] = sub_2421B7408;
  return OSEligibilityChecking.isGreymatterEligible.getter(v8, v9);
}

uint64_t sub_2421B7408(char a1)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)v1 + 104) = a1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421B7458()
{
  os_log_type_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  if (*(_BYTE *)(v1 + 104) == 1)
  {
    Assertion.daemonRep.getter(*(_QWORD **)(v1 + 72));
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 88) = v2;
    *v2 = v1;
    v2[1] = sub_2421B7584;
    v3 = OUTLINED_FUNCTION_51(*(_QWORD *)(v1 + 72));
    return sub_2421B9364(v3);
  }
  else
  {
    if (qword_2543A9D20 != -1)
      swift_once();
    v5 = OUTLINED_FUNCTION_54();
    __swift_project_value_buffer(v5, (uint64_t)qword_2543A9D08);
    v6 = sub_242272494();
    v7 = sub_2422728FC();
    if (OUTLINED_FUNCTION_65(v7))
    {
      v8 = (uint8_t *)OUTLINED_FUNCTION_10();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_2421B5000, v6, v0, "Device is ineligible. ModelManagerServices Assertions are disabled.", v8, 2u);
      OUTLINED_FUNCTION_2();
    }

    OUTLINED_FUNCTION_28();
    __swift_destroy_boxed_opaque_existential_1Tm(*(_QWORD *)(v1 + 56));
    OUTLINED_FUNCTION_16();
    return OUTLINED_FUNCTION_13(*(_QWORD *)(v1 + 64), *(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_2421B7584()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *v1;
  v5 = v2;
  v3 = *(_QWORD *)(v2 + 72);
  OUTLINED_FUNCTION_76(&v5);
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  sub_2421BAEF8(v3);
  if (v0)
    swift_release();
  OUTLINED_FUNCTION_29();
  return swift_task_switch();
}

uint64_t sub_2421B75FC()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(*(_QWORD *)(v0 + 56));
  OUTLINED_FUNCTION_16();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 64));
}

uint64_t sub_2421B7644()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  OUTLINED_FUNCTION_16();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Assertion.daemonRep.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;

  v4 = v1[2];
  v3 = v1[3];
  v6 = v1[4];
  v5 = v1[5];
  v7 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC20ModelManagerServices9Assertion_timestamp);
  v8 = OUTLINED_FUNCTION_45();
  v9 = (char *)a1 + *(int *)(v8 + 28);
  v10 = OUTLINED_FUNCTION_15();
  (*(void (**)(char *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, v1, v10);
  sub_242272644();
  sub_242272644();
  result = getpid();
  *a1 = v4;
  a1[1] = v3;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  *(_DWORD *)((char *)a1 + *(int *)(v8 + 32)) = result;
  return result;
}

uint64_t Assertion.__allocating_init(policy:description:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2421B774C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (qword_2543A7AF0 != -1)
    swift_once();
  v1 = qword_2543A7AE8;
  v2 = qword_2543AA170;
  swift_retain();
  if (v2 != -1)
    swift_once();
  v3 = qword_2543AA1F0;
  v0[5] = type metadata accessor for OSEligibilityChecker();
  v0[6] = &protocol witness table for OSEligibilityChecker;
  v0[2] = v3;
  swift_allocObject();
  swift_retain();
  v4 = (_QWORD *)OUTLINED_FUNCTION_80();
  v0[12] = v4;
  *v4 = v0;
  v4[1] = sub_2421B7858;
  v5 = OUTLINED_FUNCTION_51(v0[7]);
  return Assertion.init(policy:description:collection:osEligibilityChecker:)(v5, v6, v7, v8, v1, (uint64_t)(v0 + 2));
}

uint64_t sub_2421B7858(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  OUTLINED_FUNCTION_73();
  v4 = *v2;
  *v5 = v4;
  *(_QWORD *)(v6 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
    return OUTLINED_FUNCTION_13(a1, *(uint64_t (**)(void))(v4 + 8));
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421B78B4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Assertion.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD v18[2];

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  OUTLINED_FUNCTION_27();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  OUTLINED_FUNCTION_66();
  v3 = v2 - v1;
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543AA0E0) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v7 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v18 - v8;
  v18[1] = OBJC_IVAR____TtC20ModelManagerServices9Assertion_collection;
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC20ModelManagerServices9Assertion_collection);
  v11 = v0 + OBJC_IVAR____TtC20ModelManagerServices9Assertion_uuid;
  v12 = OUTLINED_FUNCTION_21();
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v9, v11, v12);
  v14 = sub_242272848();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v14);
  sub_2421BAF80((uint64_t)v9, (uint64_t)v7);
  v15 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = v10;
  sub_2421BB048((uint64_t)v7, (uint64_t)v16 + v15);
  swift_retain();
  sub_2421B7ACC();
  swift_release();
  sub_2421BCB08((uint64_t)v9, (uint64_t *)&unk_2543AA0E0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  swift_release();
  return v0;
}

uint64_t sub_2421B7A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v7;
  *v7 = v5;
  v7[1] = sub_2421BD05C;
  return sub_2421B9DF4(a5);
}

void sub_2421B7ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_50();
  v3 = OUTLINED_FUNCTION_89(v2);
  if (v4)
  {
    OUTLINED_FUNCTION_96(v3, &qword_2543A9D48);
  }
  else
  {
    sub_24227283C();
    OUTLINED_FUNCTION_40();
  }
  if (*(_QWORD *)(v0 + 16))
  {
    OUTLINED_FUNCTION_83();
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_61();
  }
  v5 = OUTLINED_FUNCTION_81();
  *(_QWORD *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 24) = v0;
  swift_task_create();
  OUTLINED_FUNCTION_35();
}

void sub_2421B7B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_50();
  v3 = OUTLINED_FUNCTION_89(v2);
  if (v4)
  {
    OUTLINED_FUNCTION_96(v3, &qword_2543A9D48);
  }
  else
  {
    sub_24227283C();
    OUTLINED_FUNCTION_40();
  }
  if (*(_QWORD *)(v0 + 16))
  {
    OUTLINED_FUNCTION_83();
    OUTLINED_FUNCTION_82();
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_61();
  }
  v5 = OUTLINED_FUNCTION_81();
  *(_QWORD *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 24) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A6E10);
  swift_task_create();
  OUTLINED_FUNCTION_35();
}

uint64_t Assertion.__deallocating_deinit()
{
  Assertion.deinit();
  return swift_deallocClassInstance();
}

void Assertion.DaemonRep.init(policy:description:timestamp:id:acquirerPID:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v11;

  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(double *)(a7 + 32) = a8;
  v11 = OUTLINED_FUNCTION_45();
  sub_2421BB048(a5, a7 + *(int *)(v11 + 28));
  *(_DWORD *)(a7 + *(int *)(v11 + 32)) = a6;
  OUTLINED_FUNCTION_14();
}

void Assertion.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_67();
  Assertion.daemonRep.getter(v0);
  OUTLINED_FUNCTION_21();
  sub_2421BBEDC(&qword_2543AA0D8, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  OUTLINED_FUNCTION_69();
  sub_2421BAEF8((uint64_t)v0);
  OUTLINED_FUNCTION_14();
}

uint64_t static Assertion.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v8;

  OUTLINED_FUNCTION_63();
  OUTLINED_FUNCTION_27();
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v8 - v4;
  Assertion.daemonRep.getter((uint64_t *)((char *)&v8 - v4));
  Assertion.daemonRep.getter(v3);
  v6 = _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
  sub_2421BAEF8((uint64_t)v3);
  sub_2421BAEF8((uint64_t)v5);
  return v6 & 1;
}

uint64_t static Assertion.DaemonRep.== infix(_:_:)()
{
  OUTLINED_FUNCTION_63();
  return _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
}

uint64_t Assertion.invalidate()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543AA0E0);
  *(_QWORD *)(v1 + 24) = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421B7E64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = v0[3];
  v2 = v0[2] + OBJC_IVAR____TtC20ModelManagerServices9Assertion_uuid;
  v3 = OUTLINED_FUNCTION_21();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v1, v2, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[4] = v4;
  *v4 = v0;
  v4[1] = sub_2421B7EEC;
  v5 = OUTLINED_FUNCTION_51(v0[3]);
  return sub_2421B9DF4(v5);
}

uint64_t sub_2421B7EEC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_73();
  v1 = OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_96(v1, (uint64_t *)&unk_2543AA0E0);
  OUTLINED_FUNCTION_16();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

void Assertion.hashValue.getter()
{
  OUTLINED_FUNCTION_85();
  Assertion.hash(into:)();
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_48();
}

uint64_t sub_2421B7F50()
{
  return static Assertion.== infix(_:_:)() & 1;
}

void sub_2421B7F70()
{
  Assertion.hashValue.getter();
}

void sub_2421B7F90()
{
  Assertion.hash(into:)();
}

uint64_t sub_2421B7FB0()
{
  sub_242272CBC();
  Assertion.hash(into:)();
  return sub_242272D04();
}

uint64_t sub_2421B7FEC()
{
  return Assertion.uuid.getter();
}

void Assertion.DaemonRep.policy.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

void Assertion.DaemonRep.description.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

double Assertion.DaemonRep.timestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t Assertion.DaemonRep.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Assertion.DaemonRep(0) + 28);
  return sub_2421BAF80(v3, a1);
}

uint64_t Assertion.DaemonRep.acquirerPID.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + *(int *)(OUTLINED_FUNCTION_45() + 32));
}

void Assertion.DaemonRep.init(policy:description:id:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  pid_t v10;

  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  sub_2422722F0();
  a6[4] = v8;
  v9 = type metadata accessor for Assertion.DaemonRep(0);
  sub_2421BAF80(a5, (uint64_t)a6 + *(int *)(v9 + 28));
  v10 = getpid();
  sub_2421BCB08(a5, (uint64_t *)&unk_2543AA0E0);
  *(_DWORD *)((char *)a6 + *(int *)(v9 + 32)) = v10;
  OUTLINED_FUNCTION_14();
}

uint64_t Assertion.DaemonRep.receivedFromPID(_:)@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *v2;
  v5 = v2[1];
  v8 = v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v10 = OUTLINED_FUNCTION_45();
  sub_2421BAF80((uint64_t)v2 + *(int *)(v10 + 28), (uint64_t)a2 + *(int *)(v10 + 28));
  *a2 = v6;
  a2[1] = v5;
  a2[2] = v8;
  a2[3] = v7;
  a2[4] = v9;
  *(_DWORD *)((char *)a2 + *(int *)(v10 + 32)) = a1;
  sub_242272644();
  return sub_242272644();
}

void Assertion.DaemonRep.hash(into:)()
{
  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_15();
  sub_2421BBEDC(&qword_2543AA0D8, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_14();
}

BOOL sub_2421B81D8(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_2421B81E8()
{
  return sub_242272CD4();
}

uint64_t sub_2421B820C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v3 = a1 == 0x7963696C6F70 && a2 == 0xE600000000000000;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
    if (v6 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
      if (v7 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 25705 && a2 == 0xE200000000000000;
        if (v8 || (sub_242272C20() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x7265726975716361 && a2 == 0xEB00000000444950)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_242272C20();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_2421B8400()
{
  return 5;
}

uint64_t sub_2421B8408()
{
  sub_242272CBC();
  sub_242272CD4();
  return sub_242272D04();
}

uint64_t sub_2421B844C()
{
  return 0;
}

uint64_t sub_2421B8458(char a1)
{
  return *(_QWORD *)&aPolicy_3[8 * a1];
}

BOOL sub_2421B8478(char *a1, char *a2)
{
  return sub_2421B81D8(*a1, *a2);
}

uint64_t sub_2421B8484()
{
  return sub_2421B8408();
}

uint64_t sub_2421B848C()
{
  return sub_2421B81E8();
}

uint64_t sub_2421B8494()
{
  sub_242272CBC();
  sub_242272CD4();
  return sub_242272D04();
}

uint64_t sub_2421B84D4()
{
  char *v0;

  return sub_2421B8458(*v0);
}

uint64_t sub_2421B84DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421B820C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2421B8500()
{
  return sub_2421B844C();
}

uint64_t sub_2421B851C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2421B8400();
  *a1 = result;
  return result;
}

uint64_t sub_2421B8540()
{
  sub_2421BB114();
  return sub_242272D70();
}

uint64_t sub_2421B8568()
{
  sub_2421BB114();
  return sub_242272D7C();
}

uint64_t Assertion.DaemonRep.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D60);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_67();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2421BB114();
  sub_242272D64();
  OUTLINED_FUNCTION_75();
  if (!v1)
  {
    OUTLINED_FUNCTION_75();
    sub_242272B30();
    type metadata accessor for Assertion.DaemonRep(0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543AA0E0);
    sub_2421BB194(&qword_2543A9D00);
    sub_242272B48();
    sub_242272B54();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

void Assertion.DaemonRep.hashValue.getter()
{
  OUTLINED_FUNCTION_85();
  type metadata accessor for Assertion.DaemonRep(0);
  OUTLINED_FUNCTION_15();
  sub_2421BBEDC(&qword_2543AA0D8, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_48();
}

void Assertion.DaemonRep.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543AA0E0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_66();
  v14 = v6 - v5;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A6EF8);
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_66();
  v7 = type metadata accessor for Assertion.DaemonRep(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_68();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2421BB114();
  sub_242272D40();
  if (v16)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    *v2 = sub_242272A7C();
    v2[1] = v9;
    v2[2] = sub_242272A7C();
    v2[3] = v10;
    sub_242272A94();
    v2[4] = v11;
    sub_2421BB194(&qword_2543A6E60);
    sub_242272AAC();
    sub_2421BB048(v14, (uint64_t)v2 + *(int *)(v7 + 28));
    v12 = sub_242272AB8();
    OUTLINED_FUNCTION_12();
    *(_DWORD *)((char *)v2 + *(int *)(v7 + 32)) = v12;
    sub_2421BB1CC((uint64_t)v2, a2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    sub_2421BAEF8((uint64_t)v2);
  }
}

void sub_2421B8A34(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  Assertion.DaemonRep.init(from:)(a1, a2);
}

uint64_t sub_2421B8A48(_QWORD *a1)
{
  return Assertion.DaemonRep.encode(to:)(a1);
}

void sub_2421B8A64()
{
  sub_242272CBC();
  OUTLINED_FUNCTION_15();
  sub_2421BBEDC(&qword_2543AA0D8, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_48();
}

uint64_t Assertion.LiveDaemonInterface.acquire(_:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2421B8ACC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  if (qword_2543A9CF8 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_2421B8B48;
  v2 = OUTLINED_FUNCTION_51(*(_QWORD *)(v0 + 16));
  return ModelServiceClient.acquireAssertion(assertion:)(v2);
}

uint64_t sub_2421B8B48()
{
  uint64_t v0;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t Assertion.LiveDaemonInterface.invalidate(_:)(uint64_t a1)
{
  _QWORD *v1;

  v1[4] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543AA0E0);
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421B8BD4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  if (qword_2543A9CF8 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_2421B8C50;
  v2 = OUTLINED_FUNCTION_51(*(_QWORD *)(v0 + 32));
  return ModelServiceClient.releaseAssertion(id:)(v2);
}

uint64_t sub_2421B8C50()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_76(&v4);
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_29();
    return OUTLINED_FUNCTION_42();
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    return ((uint64_t (*)(void))v1[1])();
  }
}

void sub_2421B8CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_2543A9D20 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = OUTLINED_FUNCTION_54();
  __swift_project_value_buffer(v3, (uint64_t)qword_2543A9D08);
  sub_2421BAF80(v1, v2);
  OUTLINED_FUNCTION_58();
}

uint64_t Assertion.LiveDaemonInterface.fetchAll()()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2421B8F18()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_2543A9CF8 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421B8F90;
  return ModelServiceClient.fetchAllAssertions()();
}

uint64_t sub_2421B8F90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1();
  if (!v1)
    v4 = a1;
  return OUTLINED_FUNCTION_13(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t Assertion.LiveDaemonInterface.restore(_:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2421B8FD4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  if (qword_2543A9CF8 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_2421BD060;
  v2 = OUTLINED_FUNCTION_51(*(_QWORD *)(v0 + 16));
  return ModelServiceClient.restoreAssertions(_:)(v2);
}

uint64_t sub_2421B9054(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421B90A0;
  return Assertion.LiveDaemonInterface.acquire(_:)(a1);
}

uint64_t sub_2421B90A0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421B90C4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421B9110;
  return Assertion.LiveDaemonInterface.invalidate(_:)(a1);
}

uint64_t sub_2421B9110()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421B9138()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421BD06C;
  return Assertion.LiveDaemonInterface.fetchAll()();
}

uint64_t sub_2421B917C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421BD05C;
  return Assertion.LiveDaemonInterface.restore(_:)(a1);
}

uint64_t sub_2421B91C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2421B9218();
  *a1 = result;
  return result;
}

uint64_t sub_2421B91F0()
{
  uint64_t v0;

  v0 = sub_242272644();
  return sub_2421B9248(v0);
}

uint64_t sub_2421B9218()
{
  OUTLINED_FUNCTION_9();
  return sub_242272644();
}

uint64_t sub_2421B9248(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_9();
  *(_QWORD *)(v1 + 112) = a1;
  return swift_bridgeObjectRelease();
}

void sub_2421B9288()
{
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_34();
}

uint64_t Assertion.Collection.__allocating_init(daemonInterface:)()
{
  return sub_2421B92D4();
}

uint64_t Assertion.Collection.init(daemonInterface:)()
{
  return sub_2421B92D4();
}

uint64_t sub_2421B92D4()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_90();
  v5 = *(_QWORD *)(v4 + 24);
  v6 = *(_QWORD *)(v4 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_68();
  (*(void (**)(uint64_t))(v8 + 16))(v3);
  v9 = v0(v3, v1, v5, v6);
  __swift_destroy_boxed_opaque_existential_1Tm(v2);
  return v9;
}

uint64_t sub_2421B9364(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[19] = a1;
  v2[20] = v1;
  v3 = sub_2422725A8();
  v2[21] = v3;
  v2[22] = *(_QWORD *)(v3 - 8);
  v2[23] = OUTLINED_FUNCTION_11();
  v2[24] = OUTLINED_FUNCTION_22();
  v2[25] = OUTLINED_FUNCTION_22();
  v2[26] = OUTLINED_FUNCTION_45();
  v2[27] = OUTLINED_FUNCTION_11();
  v2[28] = OUTLINED_FUNCTION_22();
  v2[29] = OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_0();
}

uint64_t sub_2421B9410()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);

  v1 = *(_QWORD *)(v0 + 232);
  sub_2421BB1CC(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 224));
  OUTLINED_FUNCTION_4();
  v2 = sub_24226BDE8();
  sub_2421BAEF8(v1);
  swift_endAccess();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_79();
    *(_QWORD *)(v0 + 240) = swift_initStackObject();
    *(_QWORD *)(v0 + 248) = OUTLINED_FUNCTION_93("Acquiring Assertion", 19);
    if (qword_2543A9D20 != -1)
      swift_once();
    v3 = *(_QWORD *)(v0 + 216);
    v4 = *(_QWORD *)(v0 + 152);
    v5 = OUTLINED_FUNCTION_54();
    *(_QWORD *)(v0 + 256) = __swift_project_value_buffer(v5, (uint64_t)qword_2543A9D08);
    sub_2421BB1CC(v4, v3);
    v6 = sub_242272494();
    v7 = sub_24227292C();
    if (OUTLINED_FUNCTION_65(v7))
    {
      v8 = *(_QWORD *)(v0 + 232);
      v9 = *(_QWORD *)(v0 + 216);
      v10 = (uint8_t *)OUTLINED_FUNCTION_10();
      OUTLINED_FUNCTION_10();
      *(_DWORD *)v10 = 136315138;
      sub_2421BB1CC(v9, v8);
      v11 = sub_2422726D4();
      *(_QWORD *)(v0 + 144) = OUTLINED_FUNCTION_91(v11, v12, v13, v14, v15);
      sub_242272950();
      OUTLINED_FUNCTION_88();
      sub_2421BAEF8(v9);
      OUTLINED_FUNCTION_53(&dword_2421B5000, v6, (os_log_type_t)v4, "Acquiring assertion: %s", v10);
      OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_2();
    }
    sub_2421BAEF8(*(_QWORD *)(v0 + 216));

    v17 = *(_QWORD *)(v0 + 160);
    if ((*(_BYTE *)(v17 + 120) & 1) != 0)
    {
      v18 = (_QWORD *)OUTLINED_FUNCTION_31(v17);
      *(_QWORD *)(v0 + 272) = v18;
      *v18 = v0;
      v18[1] = sub_2421B9820;
      v19 = OUTLINED_FUNCTION_26(*(_QWORD *)(v0 + 152));
      return v20(v19);
    }
    else
    {
      *(_BYTE *)(v17 + 120) = 1;
      if (qword_2543AA2A0 != -1)
        swift_once();
      *(_QWORD *)(v0 + 264) = qword_2543AAE00;
      swift_retain();
      OUTLINED_FUNCTION_94();
      return swift_task_switch();
    }
  }
  else
  {
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_57();
    OUTLINED_FUNCTION_37();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_38();
    return OUTLINED_FUNCTION_20(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_2421B9730()
{
  uint64_t v0;

  sub_2422297F0((uint64_t)sub_2421BCF40, *(_QWORD *)(v0 + 160));
  OUTLINED_FUNCTION_28();
  return OUTLINED_FUNCTION_0();
}

uint64_t sub_2421B97A8()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_31(v0[20]);
  v0[34] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_2421B9820;
  v2 = OUTLINED_FUNCTION_26(v0[19]);
  return OUTLINED_FUNCTION_6(v2, v3, v4, v5);
}

uint64_t sub_2421B9820()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 280) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0();
}

uint64_t sub_2421B98B4()
{
  uint64_t v0;
  os_activity_scope_state_s *v1;

  v1 = (os_activity_scope_state_s *)(*(_QWORD *)(v0 + 248) + 24);
  OUTLINED_FUNCTION_4();
  os_activity_scope_leave(v1);
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2421B995C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;

  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v0 + 280);
  MEMORY[0x2426A61F8]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA5C8);
  if (swift_dynamicCast())
  {
    v2 = *(_QWORD *)(v0 + 192);
    v1 = *(_QWORD *)(v0 + 200);
    v4 = *(_QWORD *)(v0 + 176);
    v3 = *(_QWORD *)(v0 + 184);
    v5 = *(_QWORD *)(v0 + 168);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
    v6 = sub_242272494();
    v7 = sub_242272914();
    v8 = os_log_type_enabled(v6, v7);
    v9 = *(_QWORD *)(v0 + 184);
    v10 = *(_QWORD *)(v0 + 192);
    v12 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    if (v8)
    {
      v13 = (uint8_t *)OUTLINED_FUNCTION_10();
      OUTLINED_FUNCTION_10();
      *(_DWORD *)v13 = 136315138;
      v14 = sub_24227259C();
      *(_QWORD *)(v0 + 136) = OUTLINED_FUNCTION_91(v14, v15, v16, v17, v18);
      sub_242272950();
      OUTLINED_FUNCTION_88();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v12);
      OUTLINED_FUNCTION_53(&dword_2421B5000, v6, v7, "Acquiring assertion caught XPC error: %s", v13);
      OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_2();
    }

    v21 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v21(v9, v12);
    v21(v10, v12);

    v22 = *(_QWORD *)(v0 + 248);
    OUTLINED_FUNCTION_4();
    os_activity_scope_leave((os_activity_scope_state_t)(v22 + 24));
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_57();
    OUTLINED_FUNCTION_37();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_38();
    return OUTLINED_FUNCTION_20(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 248);

    OUTLINED_FUNCTION_4();
    os_activity_scope_leave((os_activity_scope_state_t)(v19 + 24));
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_37();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_38();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return OUTLINED_FUNCTION_20(*(uint64_t (**)(void))(v0 + 8));
  }
}

void sub_2421B9C24(char a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  NSObject *v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v6 = sub_242272848();
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v6);
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = 0;
    v7[3] = 0;
    v7[4] = a2;
    swift_retain();
    sub_2421B7ACC();
    swift_release();
  }
  else
  {
    if (qword_2543A9D20 != -1)
      swift_once();
    v8 = sub_2422724AC();
    __swift_project_value_buffer(v8, (uint64_t)qword_2543A9D08);
    v12 = sub_242272494();
    v9 = sub_24227292C();
    if (os_log_type_enabled(v12, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_2421B5000, v12, v9, "Can't retry modelmanagerd connection. Assertions cannot be restored.", v10, 2u);
      MEMORY[0x2426A6378](v10, -1, -1);
    }

  }
}

uint64_t sub_2421B9DAC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421BD05C;
  return sub_2421BA4EC();
}

uint64_t sub_2421B9DF4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[17] = a1;
  v2[18] = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543AA0E0);
  v2[19] = OUTLINED_FUNCTION_11();
  v2[20] = OUTLINED_FUNCTION_22();
  type metadata accessor for Assertion.DaemonRep(0);
  v2[21] = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_0();
}

uint64_t sub_2421B9E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t *v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26[2];

  v26[1] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(v0 + 136);
  v2 = (uint64_t *)(*(_QWORD *)(v0 + 144) + 112);
  OUTLINED_FUNCTION_9();
  v3 = *v2;
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v1;
  sub_242272644();
  v5 = sub_2421BA350((uint64_t (*)(char *))sub_2421BCEC4, v4, v3);
  v7 = v6;
  LOBYTE(v1) = v8;
  v9 = ~v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 176) = v5;
  *(_QWORD *)(v0 + 184) = v7;
  *(_BYTE *)(v0 + 216) = v1;
  swift_task_dealloc();
  if (v9)
  {
    v10 = *(_QWORD *)(v0 + 168);
    type metadata accessor for _OSActivity();
    *(_QWORD *)(v0 + 192) = swift_initStackObject();
    *(_QWORD *)(v0 + 200) = OUTLINED_FUNCTION_93("Invalidating Assertion", 22);
    OUTLINED_FUNCTION_4();
    sub_2421BBAD0(v5, v7, v10);
    sub_2421BAEF8(v10);
    swift_endAccess();
    if (qword_2543A9D20 != -1)
      swift_once();
    v11 = *(_QWORD *)(v0 + 136);
    v12 = OUTLINED_FUNCTION_54();
    __swift_project_value_buffer(v12, (uint64_t)qword_2543A9D08);
    OUTLINED_FUNCTION_72(v11);
    v13 = sub_242272494();
    v14 = sub_24227292C();
    v15 = os_log_type_enabled(v13, v14);
    v16 = *(_QWORD *)(v0 + 160);
    if (v15)
    {
      v17 = *(uint64_t **)(v0 + 152);
      v18 = (uint8_t *)OUTLINED_FUNCTION_10();
      v26[0] = OUTLINED_FUNCTION_10();
      *(_DWORD *)v18 = 136315138;
      OUTLINED_FUNCTION_72(v16);
      v19 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
      v21 = v20;
      OUTLINED_FUNCTION_95(v19, (uint64_t *)&unk_2543AA0E0);
      *(_QWORD *)(v0 + 128) = sub_2421BB36C(v19, v21, v26);
      sub_242272950();
      swift_bridgeObjectRelease();
      sub_2421BCB08(v16, v17);
      OUTLINED_FUNCTION_53(&dword_2421B5000, v13, v14, "Invalidating assertion: %s", v18);
      OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_2();
    }
    sub_2421BCB08(*(_QWORD *)(v0 + 160), (uint64_t *)&unk_2543AA0E0);

    __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 144) + 128), *(_QWORD *)(*(_QWORD *)(v0 + 144) + 152));
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v23;
    *v23 = v0;
    v23[1] = sub_2421BA1C8;
    v24 = OUTLINED_FUNCTION_26(*(_QWORD *)(v0 + 136));
    return v25(v24);
  }
  else
  {
    OUTLINED_FUNCTION_86();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_57();
    return OUTLINED_FUNCTION_18(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_2421BA1C8()
{
  void *v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_77(v1);
  if (v0)

  return OUTLINED_FUNCTION_0();
}

uint64_t sub_2421BA260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_activity_scope_state_s *v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v0 + 176);
  v1 = *(_QWORD *)(v0 + 184);
  v3 = (os_activity_scope_state_s *)(*(_QWORD *)(v0 + 200) + 24);
  v4 = *(_BYTE *)(v0 + 216);
  OUTLINED_FUNCTION_4();
  os_activity_scope_leave(v3);
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_28();
  sub_2421BCEE0(v2, v1, v4);
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421BA304()
{
  type metadata accessor for Assertion.DaemonRep(0);
  return _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1;
}

uint64_t sub_2421BA350(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  int v12;
  char v13;
  int64_t v14;
  int v15;
  uint64_t v16;
  char v17;
  int v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *);

  v22 = a1;
  v5 = type metadata accessor for Assertion.DaemonRep(0);
  v21 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  result = sub_2421BCC24(a3);
  if ((v13 & 1) != 0)
  {
LABEL_11:
    __break(1u);
    return 0;
  }
  else
  {
    v14 = result;
    v15 = v12;
    while (*(_DWORD *)(a3 + 36) == v15)
    {
      v16 = 1 << *(_BYTE *)(a3 + 32);
      if (v14 == v16)
        return 0;
      if (v14 < 0 || v14 >= v16)
        goto LABEL_15;
      if (((*(_QWORD *)(a3 + 56 + (((unint64_t)v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_16;
      sub_2421BB1CC(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v21 + 72) * v14, (uint64_t)v10);
      sub_2421BCDC0((uint64_t)v10, (uint64_t)v8);
      v17 = v22(v8);
      sub_2421BAEF8((uint64_t)v8);
      if (v3 || (v17 & 1) != 0)
        return v14;
      result = sub_2421BCB40(v14, v15, 0, a3);
      v14 = result;
      v15 = v18;
      if ((v19 & 1) != 0)
        goto LABEL_11;
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  return result;
}

uint64_t sub_2421BA4EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[18] = v0;
  v2 = OUTLINED_FUNCTION_45();
  v1[19] = v2;
  v1[20] = *(_QWORD *)(v2 - 8);
  v1[21] = OUTLINED_FUNCTION_11();
  v1[22] = OUTLINED_FUNCTION_22();
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543AA0E0);
  v1[23] = v3;
  v1[24] = *(_QWORD *)(v3 - 8);
  v1[25] = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_0();
}

uint64_t sub_2421BA588()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int v12;
  int v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  _QWORD *v33;
  uint8_t *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[2];

  v41[1] = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_79();
  v0[26] = swift_initStackObject();
  v0[27] = OUTLINED_FUNCTION_93("Restoring Assertions", 20);
  if (qword_2543A9D20 != -1)
    goto LABEL_20;
  while (1)
  {
    v1 = OUTLINED_FUNCTION_54();
    v0[28] = __swift_project_value_buffer(v1, (uint64_t)qword_2543A9D08);
    swift_retain_n();
    v2 = sub_242272494();
    v3 = sub_24227292C();
    v4 = os_log_type_enabled(v2, v3);
    v5 = v0[18];
    if (!v4)
      break;
    v37 = v3;
    v6 = (uint8_t *)OUTLINED_FUNCTION_10();
    v41[0] = OUTLINED_FUNCTION_10();
    *(_DWORD *)v6 = 136315138;
    OUTLINED_FUNCTION_9();
    v7 = *(_QWORD *)(v5 + 112);
    v8 = *(_QWORD *)(v7 + 16);
    v9 = MEMORY[0x24BEE4AF8];
    if (!v8)
      goto LABEL_16;
    v35 = v6;
    v36 = v2;
    v10 = v0[24];
    v38 = v0[19];
    v39 = v0[20];
    v40 = MEMORY[0x24BEE4AF8];
    sub_242272644();
    sub_2421BBBB4(0, v8, 0);
    v11 = sub_2421BCC24(v7);
    v13 = v12;
    v15 = v14 & 1;
    while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(_BYTE *)(v7 + 32))
    {
      if (((*(_QWORD *)(v7 + 56 + (((unint64_t)v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        goto LABEL_18;
      if (*(_DWORD *)(v7 + 36) != v13)
        goto LABEL_19;
      v16 = v0[21];
      v17 = v0[22];
      sub_2421BB1CC(*(_QWORD *)(v7 + 48) + *(_QWORD *)(v39 + 72) * v11, v17);
      sub_2421BCDC0(v17, v16);
      OUTLINED_FUNCTION_72(v16 + *(int *)(v38 + 28));
      sub_2421BAEF8(v16);
      v9 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2421BBBB4(0, *(_QWORD *)(v40 + 16) + 1, 1);
        v9 = v40;
      }
      v19 = *(_QWORD *)(v9 + 16);
      v18 = *(_QWORD *)(v9 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_2421BBBB4(v18 > 1, v19 + 1, 1);
        v9 = v40;
      }
      v20 = v0[25];
      *(_QWORD *)(v9 + 16) = v19 + 1;
      sub_2421BB048(v20, v9+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v19);
      v21 = sub_2421BCB40(v11, v13, v15 & 1, v7);
      v11 = v21;
      v13 = v22;
      v15 = v23 & 1;
      if (!--v8)
      {
        sub_2421BCE04(v21, v22, v23 & 1);
        swift_bridgeObjectRelease();
        v2 = v36;
        v6 = v35;
LABEL_16:
        v24 = MEMORY[0x2426A58D4](v9, v0[23]);
        v26 = v25;
        swift_bridgeObjectRelease();
        v0[17] = sub_2421BB36C(v24, v26, v41);
        sub_242272950();
        swift_release_n();
        OUTLINED_FUNCTION_88();
        OUTLINED_FUNCTION_53(&dword_2421B5000, v2, v37, "Restoring assertions: %s", v6);
        OUTLINED_FUNCTION_30();
        OUTLINED_FUNCTION_2();
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    swift_once();
  }

  swift_release_n();
  v27 = (_QWORD *)v0[18];
  v28 = v27[19];
  v29 = v27[20];
  __swift_project_boxed_opaque_existential_1(v27 + 16, v28);
  OUTLINED_FUNCTION_9();
  v30 = v27[14];
  v0[29] = v30;
  v31 = *(int **)(v29 + 32);
  v32 = *v31;
  sub_242272644();
  v33 = (_QWORD *)OUTLINED_FUNCTION_80();
  v0[30] = v33;
  *v33 = v0;
  v33[1] = sub_2421BA9D0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v31 + v32))(v30, v28, v29);
}

uint64_t sub_2421BA9D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 248) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_0();
}

uint64_t sub_2421BAA74()
{
  uint64_t v0;
  os_activity_scope_state_s *v1;

  v1 = (os_activity_scope_state_s *)(*(_QWORD *)(v0 + 216) + 24);
  OUTLINED_FUNCTION_4();
  os_activity_scope_leave(v1);
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

void sub_2421BAB08()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_58();
}

uint64_t sub_2421BAB50()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t v4;

  v1 = sub_242272494();
  v2 = sub_242272914();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_58();
  }
  OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_46();

  v4 = *(_QWORD *)(v0 + 216);
  OUTLINED_FUNCTION_4();
  os_activity_scope_leave((os_activity_scope_state_t)(v4 + 24));
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2421BACBC()
{
  uint64_t v0;
  uint64_t result;
  __int128 v2;
  ValueMetadata *v3;
  _UNKNOWN **v4;

  type metadata accessor for Assertion.Collection();
  v0 = swift_allocObject();
  v3 = &type metadata for Assertion.LiveDaemonInterface;
  v4 = &protocol witness table for Assertion.LiveDaemonInterface;
  swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = MEMORY[0x24BEE4B08];
  *(_BYTE *)(v0 + 120) = 0;
  result = sub_2421BCE50(&v2, v0 + 128);
  qword_2543A7AE8 = v0;
  return result;
}

uint64_t static Assertion.Collection.default.getter()
{
  if (qword_2543A7AF0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t Assertion.Collection.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 128);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t Assertion.Collection.__deallocating_deinit()
{
  Assertion.Collection.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t Assertion.Collection.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2421BADBC()
{
  return Assertion.Collection.unownedExecutor.getter();
}

void default argument 1 of InferenceProviderDescriptor.init(id:instance:hostedOnServer:)(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t default argument 2 of InferenceProviderDescriptor.init(id:instance:hostedOnServer:)()
{
  return 0;
}

uint64_t default argument 0 of ClientData.init(_:)()
{
  return 0;
}

uint64_t default argument 3 of Session.init(supportedAssetBundleIdentifiers:useCaseID:onBehalfOfPID:parentOfOnBehalfOfPid:loggingIdentifier:client:)()
{
  return 0;
}

void default argument 1 of ModelServiceClient.init(sender:runningBoardAssertions:)(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for RunningBoardSelfAssertions();
  v3 = swift_allocObject();
  swift_defaultActor_initialize();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA010);
  sub_2421BBE74();
  *(_QWORD *)(v3 + 112) = sub_242272638();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_2513346D0;
  *a1 = v3;
  OUTLINED_FUNCTION_14();
}

void default argument 0 of Policy.init(assetPolicy:memoryBudget:cancelPriority:inactiveAssetTimeout:assetTransitionDelay:)(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void default argument 2 of Policy.init(assetPolicy:memoryBudget:cancelPriority:inactiveAssetTimeout:assetTransitionDelay:)(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t default argument 0 of TaskCancellingXPCReceivedMessage.init(isSync:auditToken:request:)()
{
  return 0;
}

double default argument 1 of TaskCancellingXPCReceivedMessage.init(isSync:auditToken:request:)@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t type metadata accessor for Assertion.DaemonRep(uint64_t a1)
{
  return sub_2421BBF24(a1, qword_2543AA5B0);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_2421BAEF8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Assertion.DaemonRep(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2426A62AC]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_2421BAF80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543AA0E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2421BAFC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543AA0E0) - 8)
                          + 80);
  v2 = (v1 + 40) & ~v1;
  swift_unknownObjectRelease();
  swift_release();
  v3 = OUTLINED_FUNCTION_21();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_2421BB048(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543AA0E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2421BB090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543AA0E0) - 8)
                          + 80);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = v0 + ((v1 + 40) & ~v1);
  v4 = swift_task_alloc();
  v5 = (_QWORD *)OUTLINED_FUNCTION_92(v4);
  v6 = OUTLINED_FUNCTION_64(v5);
  return sub_2421B7A78(v6, v7, v8, v2, v3);
}

unint64_t sub_2421BB114()
{
  unint64_t result;

  result = qword_2543AA0F8;
  if (!qword_2543AA0F8)
  {
    result = MEMORY[0x2426A62C4](&unk_242273794, &type metadata for Assertion.DaemonRep.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543AA0F8);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2426A62B8](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_2421BB194(_QWORD *a1)
{
  if (!*a1)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2543AA0E0);
    OUTLINED_FUNCTION_78();
  }
  OUTLINED_FUNCTION_34();
}

uint64_t sub_2421BB1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Assertion.DaemonRep(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2421BB210(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2421BD064;
  return v6(a1);
}

uint64_t sub_2421BB274(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543AA0E0) - 8) + 72)
       * a2;
    v6 = a3 + v5;
    v7 = a1 + v5;
    if (v6 <= a1 || v7 <= a3)
      return swift_arrayInitWithCopy();
  }
  result = sub_242272A28();
  __break(1u);
  return result;
}

uint64_t sub_2421BB36C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t ObjectType;

  OUTLINED_FUNCTION_29();
  v9 = sub_2421BB438(v6, v7, v8, 1, a1, a2);
  v10 = v15[0];
  if (v9)
  {
    v11 = v9;
    ObjectType = swift_getObjectType();
    v15[0] = v11;
    v12 = *a3;
    if (*a3)
    {
      sub_2421BCE88((uint64_t)v15, *a3);
      *a3 = v12 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v15[0] = a1;
    v15[1] = a2;
    v13 = *a3;
    if (*a3)
    {
      sub_2421BCE88((uint64_t)v15, *a3);
      *a3 = v13 + 32;
    }
    sub_242272644();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  return v10;
}

uint64_t sub_2421BB438(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_2421BB58C((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_24227295C();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_2421BB650(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_2422729C8();
    if (!v8)
    {
      result = sub_242272A04();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_2421BB58C(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_242272A28();
  __break(1u);
  return result;
}

uint64_t sub_2421BB650(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_2421BB6E4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_2421BB8B8(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_2421BB8B8((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2421BB6E4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_242272704();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x24BEE4AF8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_6:
  v3 = sub_2421BB854(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_2422729A4();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return (uint64_t)v4;
  }
  sub_242272A28();
  __break(1u);
LABEL_14:
  result = sub_242272A04();
  __break(1u);
  return result;
}

_QWORD *sub_2421BB854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFB90);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_2421BB8B8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFB90);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_2421BBA50(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2421BB98C(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_2421BB98C(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_242272A28();
  __break(1u);
  return result;
}

char *sub_2421BBA50(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_242272A28();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_2421BBAD0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a1 < 0 || (v9 = *v4, 1 << *(_BYTE *)(*v4 + 32) <= a1))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (((*(_QWORD *)(v9 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) == 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (*(_DWORD *)(v9 + 36) != a2)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v13 = *v4;
  *v4 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
LABEL_10:
    sub_24226D4F0();
    v9 = v13;
  }
  v10 = *(_QWORD *)(v9 + 48);
  v11 = type metadata accessor for Assertion.DaemonRep(0);
  sub_2421BCDC0(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a3);
  sub_24226E3CC();
  *v4 = v13;
  return swift_bridgeObjectRelease();
}

size_t sub_2421BBBB4(size_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  size_t result;

  result = sub_2421BBBD0(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

size_t sub_2421BBBD0(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A6E38);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543AA0E0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_24;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  v15 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543AA0E0) - 8)
                           + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = (unint64_t)v13 + v16;
  v18 = a4 + v16;
  if ((v5 & 1) != 0)
  {
    sub_24226B14C(v18, v8, v17);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2421BB274(v18, v8, v17);
  }
  swift_release();
  return (size_t)v13;
}

uint64_t sub_2421BBD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Assertion.Collection();
  v10 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  v11 = sub_2421BBDF8((uint64_t)v9, v10, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, a3);
  return v11;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_2421BBDF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v10 = a3;
  v11 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  swift_defaultActor_initialize();
  *(_QWORD *)(a2 + 112) = MEMORY[0x24BEE4B08];
  *(_BYTE *)(a2 + 120) = 0;
  sub_2421BCE50(&v9, a2 + 128);
  return a2;
}

unint64_t sub_2421BBE74()
{
  unint64_t result;

  result = qword_2543A9FF8;
  if (!qword_2543A9FF8)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for RunningBoardSelfAssertionType, &type metadata for RunningBoardSelfAssertionType);
    atomic_store(result, (unint64_t *)&qword_2543A9FF8);
  }
  return result;
}

void sub_2421BBEB0()
{
  sub_2421BBEDC(qword_2571DFA90, (void (*)(uint64_t))type metadata accessor for Assertion);
}

void sub_2421BBEDC(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    OUTLINED_FUNCTION_78();
  }
  OUTLINED_FUNCTION_34();
}

uint64_t type metadata accessor for Assertion(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2543AA0C8);
}

uint64_t sub_2421BBF24(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2421BBF54()
{
  sub_2421BBEDC(qword_2543AA128, (void (*)(uint64_t))type metadata accessor for Assertion.DaemonRep);
}

uint64_t dispatch thunk of AssertionDaemonInterface.acquire(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_60();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_19(v1, (uint64_t)sub_2421BD05C);
  return OUTLINED_FUNCTION_6(v2, v3, v4, v5);
}

uint64_t dispatch thunk of AssertionDaemonInterface.invalidate(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_60();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_19(v1, (uint64_t)sub_2421B90A0);
  return OUTLINED_FUNCTION_6(v2, v3, v4, v5);
}

uint64_t dispatch thunk of AssertionDaemonInterface.fetchAll()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_90();
  v3 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = sub_2421BC060;
  return v5(v1, v0);
}

uint64_t sub_2421BC060(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_1();
  return OUTLINED_FUNCTION_13(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t dispatch thunk of AssertionDaemonInterface.restore(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_60();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_19(v1, (uint64_t)sub_2421BD05C);
  return OUTLINED_FUNCTION_6(v2, v3, v4, v5);
}

uint64_t sub_2421BC0D4()
{
  return type metadata accessor for Assertion(0);
}

uint64_t sub_2421BC0DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24227238C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for Assertion()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Assertion.__allocating_init(policy:description:collection:osEligibilityChecker:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  OUTLINED_FUNCTION_52();
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_32(v1, (uint64_t)sub_2421BD070);
  return v4(v2);
}

uint64_t *initializeBufferWithCopyOfBuffer for Assertion.DaemonRep(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 28);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    a1[4] = a2[4];
    v12 = sub_24227238C();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    sub_242272644();
    sub_242272644();
    v13(v10, v11, v12);
    *(_DWORD *)((char *)v4 + *(int *)(a3 + 32)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 32));
  }
  return v4;
}

uint64_t destroy for Assertion.DaemonRep(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_24227238C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for Assertion.DaemonRep(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  v8 = *(int *)(a3 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_24227238C();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  sub_242272644();
  sub_242272644();
  v12(v9, v10, v11);
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *assignWithCopy for Assertion.DaemonRep(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_242272644();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_242272644();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24227238C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t initializeWithTake for Assertion.DaemonRep(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_DWORD *)(a1 + *(int *)(a3 + 32)) = *(_DWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

_QWORD *assignWithTake for Assertion.DaemonRep(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  v8 = *(int *)(a3 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_24227238C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 32)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t getEnumTagSinglePayload for Assertion.DaemonRep()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2421BC588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543AA0E0);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for Assertion.DaemonRep()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2421BC618(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_14();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543AA0E0);
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 28), a2, a2, v7);
  }
}

uint64_t sub_2421BC680()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24227238C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Assertion.LiveDaemonInterface()
{
  return &type metadata for Assertion.LiveDaemonInterface;
}

uint64_t type metadata accessor for Assertion.Collection()
{
  return objc_opt_self();
}

uint64_t method lookup function for Assertion.Collection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Assertion.Collection.allAssertions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of Assertion.Collection.allAssertions.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of Assertion.Collection.allAssertions.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of Assertion.Collection.__allocating_init(daemonInterface:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t initializeBufferWithCopyOfBuffer for InferenceError.Context(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for AuditToken(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AuditToken(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t(uint64_t a1)
{
  sub_2421BC894(a1, &qword_2571DFB60);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_2421BC824(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_2421BC844(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for os_activity_scope_state_s(uint64_t a1)
{
  sub_2421BC894(a1, (unint64_t *)&unk_2571DFB68);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_2421BC894(a1, &qword_2543AA8D0);
}

void sub_2421BC894(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
  OUTLINED_FUNCTION_34();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Assertion.DaemonRep.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Assertion.DaemonRep.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2421BC9B4 + 4 * byte_2422733E5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2421BC9E8 + 4 * byte_2422733E0[v4]))();
}

uint64_t sub_2421BC9E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421BC9F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2421BC9F8);
  return result;
}

uint64_t sub_2421BCA04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2421BCA0CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2421BCA10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421BCA18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421BCA24(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_2421BCA30(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Assertion.DaemonRep.CodingKeys()
{
  return &type metadata for Assertion.DaemonRep.CodingKeys;
}

unint64_t sub_2421BCA4C()
{
  unint64_t result;

  result = qword_2571DFB78;
  if (!qword_2571DFB78)
  {
    result = MEMORY[0x2426A62C4](&unk_24227376C, &type metadata for Assertion.DaemonRep.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFB78);
  }
  return result;
}

unint64_t sub_2421BCA8C()
{
  unint64_t result;

  result = qword_2543AA110;
  if (!qword_2543AA110)
  {
    result = MEMORY[0x2426A62C4](&unk_2422736DC, &type metadata for Assertion.DaemonRep.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543AA110);
  }
  return result;
}

unint64_t sub_2421BCACC()
{
  unint64_t result;

  result = qword_2543AA108;
  if (!qword_2543AA108)
  {
    result = MEMORY[0x2426A62C4](&unk_242273704, &type metadata for Assertion.DaemonRep.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543AA108);
  }
  return result;
}

void sub_2421BCB08(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_34();
}

int64_t sub_2421BCB40(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    v10 = *(_QWORD *)(v6 + 8 * v9);
    if (v10)
      return __clz(__rbit64(v10)) + (v9 << 6);
    v11 = (unint64_t)(result + 63) >> 6;
    v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      v10 = *(_QWORD *)(v6 + 8 * v9);
      if (v10)
        return __clz(__rbit64(v10)) + (v9 << 6);
      while (v5 + 3 < v11)
      {
        v10 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_2421BCC24(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_2421BCCA4(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_2421BCD0C;
  return v5(v2 + 32);
}

uint64_t sub_2421BCD0C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = v1;
  v2 = *(_BYTE **)(v1 + 16);
  OUTLINED_FUNCTION_77(&v4);
  *v2 = *(_BYTE *)(v1 + 32);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_2421BCD54()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2421BCD78()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_44(v1);
  return OUTLINED_FUNCTION_33(v2, v3, v4, v5);
}

uint64_t sub_2421BCDC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Assertion.DaemonRep(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2421BCE04(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_2421BCE50(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_2421BCE88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2421BCEC4()
{
  return sub_2421BA304() & 1;
}

uint64_t sub_2421BCEE0(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_2421BCE04(result, a2, a3 & 1);
  return result;
}

uint64_t sub_2421BCEF8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_44(v1);
  return OUTLINED_FUNCTION_33(v2, v3, v4, v5);
}

void sub_2421BCF40(char a1)
{
  uint64_t v1;

  sub_2421B9C24(a1, v1);
}

uint64_t sub_2421BCF48()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2421BCF74()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  OUTLINED_FUNCTION_64(v1);
  return sub_2421B9DAC();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_2421BD00C()
{
  return sub_2421BA260();
}

uint64_t OUTLINED_FUNCTION_0()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_1()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_2()
{
  JUMPOUT(0x2426A6378);
}

uint64_t OUTLINED_FUNCTION_3()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_4()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_5()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_7()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_9()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_10()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_11()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_13(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_15()
{
  return sub_24227238C();
}

uint64_t OUTLINED_FUNCTION_16()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_17()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_18(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_19@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_20(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_21()
{
  return sub_24227238C();
}

uint64_t OUTLINED_FUNCTION_22()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_23()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_24(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_25()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_26@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_28()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_30()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_31@<X0>(uint64_t a1@<X8>)
{
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 152));
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_32@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

void OUTLINED_FUNCTION_36()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_37()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_38()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_39()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_40()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_42()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_43()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_44(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_45()
{
  return type metadata accessor for Assertion.DaemonRep(0);
}

void OUTLINED_FUNCTION_46()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_47()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_49()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_50()
{
  return sub_242272848();
}

uint64_t OUTLINED_FUNCTION_51@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

void OUTLINED_FUNCTION_53(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_54()
{
  return sub_2422724AC();
}

uint64_t OUTLINED_FUNCTION_55(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_56()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_57()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_58()
{
  JUMPOUT(0x2426A61F8);
}

uint64_t OUTLINED_FUNCTION_59()
{
  return sub_2422727D0();
}

uint64_t OUTLINED_FUNCTION_61()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_63()
{
  return type metadata accessor for Assertion.DaemonRep(0);
}

uint64_t OUTLINED_FUNCTION_64(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

BOOL OUTLINED_FUNCTION_65(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_69()
{
  return sub_242272680();
}

uint64_t OUTLINED_FUNCTION_70()
{
  return sub_242272680();
}

uint64_t OUTLINED_FUNCTION_72(uint64_t a1)
{
  uint64_t v1;

  return sub_2421BAF80(a1, v1);
}

void OUTLINED_FUNCTION_73()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_74()
{
  return sub_242272644();
}

uint64_t OUTLINED_FUNCTION_75()
{
  return sub_242272B18();
}

void OUTLINED_FUNCTION_76(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t OUTLINED_FUNCTION_77@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_78()
{
  JUMPOUT(0x2426A62C4);
}

uint64_t OUTLINED_FUNCTION_79()
{
  return type metadata accessor for _OSActivity();
}

uint64_t OUTLINED_FUNCTION_80()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_81()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_82()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_83()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_84()
{
  return sub_242272D04();
}

uint64_t OUTLINED_FUNCTION_85()
{
  return sub_242272CBC();
}

uint64_t OUTLINED_FUNCTION_86()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_88()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_89(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_91(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  return sub_2421BB36C(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_92(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_93(const char *a1, uint64_t a2)
{
  return _OSActivity.init(_:)(a1, a2, 2);
}

void OUTLINED_FUNCTION_95(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_2421BCB08(v2, a2);
}

void OUTLINED_FUNCTION_96(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_2421BCB08(v2, a2);
}

uint64_t OUTLINED_FUNCTION_97()
{
  return -1;
}

uint64_t OUTLINED_FUNCTION_98()
{
  return type metadata accessor for Assertion.DaemonRep(0);
}

uint64_t InferenceError.Context.additionalDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_242272644();
  return v1;
}

uint64_t InferenceError.Context.domain.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_242272644();
  return v1;
}

uint64_t InferenceError.Context.code.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t InferenceError.Context.userInfo.getter()
{
  return sub_242272644();
}

uint64_t InferenceError.Context.fallbackAllowed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

void __swiftcall InferenceError.Context.init(additionalDescription:domain:code:userInfo:fallbackAllowed:)(ModelManagerServices::InferenceError::Context *__return_ptr retstr, Swift::String additionalDescription, Swift::String domain, Swift::Int code, Swift::OpaquePointer userInfo, Swift::Bool fallbackAllowed)
{
  retstr->additionalDescription = additionalDescription;
  retstr->domain = domain;
  retstr->code = code;
  retstr->userInfo = userInfo;
  retstr->fallbackAllowed = fallbackAllowed;
}

uint64_t static InferenceError.Context.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  BOOL v12;
  char v13;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a2 + 48);
  v12 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v12 || (v13 = OUTLINED_FUNCTION_47_0(), result = 0, (v13 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8)
    {
      if (v4 != v10)
        return 0;
    }
    else
    {
      v16 = OUTLINED_FUNCTION_47_0();
      result = 0;
      if ((v16 & 1) == 0 || v4 != v10)
        return result;
    }
    if ((sub_2421BD758(v5, v9) & 1) != 0)
      return v6 ^ v11 ^ 1u;
    else
      return 0;
  }
  return result;
}

uint64_t sub_2421BD758(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  _QWORD *v23;
  char v25;
  int64_t v26;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v26 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_24;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v26)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v26)
        return 1;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v26)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
        {
          v4 = v11 + 3;
          if (v11 + 3 >= v26)
            return 1;
          v12 = *(_QWORD *)(v5 + 8 * v4);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_24:
    v14 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v15 = *v14;
    v16 = v14[1];
    v17 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v10);
    v19 = *v17;
    v18 = v17[1];
    sub_242272644();
    sub_242272644();
    v20 = sub_242239AE0(v15, v16);
    v22 = v21;
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v23 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v20);
    if (*v23 == v19 && v23[1] == v18)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v25 = sub_242272C20();
      result = swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
        return 0;
    }
  }
  v13 = v11 + 4;
  if (v13 >= v26)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v26)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2421BD970(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  BOOL v7;
  char v9;

  if (a1 == 0xD000000000000015 && a2 == 0x8000000242283420 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
    if (v5 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v6 = a1 == 1701080931 && a2 == 0xE400000000000000;
      if (v6 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v7 = a1 == 0x6F666E4972657375 && a2 == 0xE800000000000000;
        if (v7 || (sub_242272C20() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x6B6361626C6C6166 && a2 == 0xEF6465776F6C6C41)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = sub_242272C20();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_2421BDB60(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2421BDB98 + 4 * byte_242273840[a1]))(0xD000000000000015, 0x8000000242283420);
}

uint64_t sub_2421BDB98()
{
  return 0x6E69616D6F64;
}

uint64_t sub_2421BDBAC()
{
  return 1701080931;
}

uint64_t sub_2421BDBBC()
{
  return 0x6F666E4972657375;
}

uint64_t sub_2421BDBD4()
{
  return 0x6B6361626C6C6166;
}

uint64_t sub_2421BDBFC()
{
  unsigned __int8 *v0;

  return sub_2421BDB60(*v0);
}

uint64_t sub_2421BDC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421BD970(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2421BDC28()
{
  sub_2421BDE34();
  return sub_242272D70();
}

uint64_t sub_2421BDC50()
{
  sub_2421BDE34();
  return sub_242272D7C();
}

void InferenceError.Context.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_45_0();
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFC20);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_67();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_2421BDE34();
  sub_242272D64();
  sub_242272B18();
  if (!v0)
  {
    OUTLINED_FUNCTION_88_0();
    sub_242272B18();
    OUTLINED_FUNCTION_88_0();
    sub_242272B3C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFC30);
    sub_2421BE0FC(&qword_2571DFC38, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    OUTLINED_FUNCTION_88_0();
    sub_242272B48();
    OUTLINED_FUNCTION_88_0();
    sub_242272B24();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  OUTLINED_FUNCTION_16_0();
}

unint64_t sub_2421BDE34()
{
  unint64_t result;

  result = qword_2571DFC28;
  if (!qword_2571DFC28)
  {
    result = MEMORY[0x2426A62C4](&unk_24227536C, &type metadata for InferenceError.Context.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFC28);
  }
  return result;
}

void InferenceError.Context.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_45_0();
  v2 = v1;
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFC40);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_66();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_2421BDE34();
  sub_242272D40();
  if (v0)
  {
    OUTLINED_FUNCTION_87();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_56_0();
    v8 = v7;
    v14 = v6;
    sub_242272644();
    v9 = OUTLINED_FUNCTION_56_0();
    v15 = v10;
    v13 = v9;
    sub_242272644();
    v12 = sub_242272AA0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFC30);
    sub_2421BE0FC(&qword_2571DFC48, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    sub_242272AAC();
    sub_242272644();
    v11 = sub_242272A88();
    OUTLINED_FUNCTION_17_0();
    *(_QWORD *)v4 = v14;
    *(_QWORD *)(v4 + 8) = v8;
    *(_QWORD *)(v4 + 16) = v13;
    *(_QWORD *)(v4 + 24) = v15;
    *(_QWORD *)(v4 + 32) = v12;
    *(_QWORD *)(v4 + 40) = v16;
    *(_BYTE *)(v4 + 48) = v11 & 1;
    OUTLINED_FUNCTION_87();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_16_0();
}

uint64_t sub_2421BE0FC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571DFC30);
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x2426A62C4](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2421BE15C()
{
  InferenceError.Context.init(from:)();
}

void sub_2421BE170()
{
  InferenceError.Context.encode(to:)();
}

uint64_t InferenceError.description.getter()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 >> 3 >= 0xF)
  {
    if (v1 >> 3 == 15)
    {
      sub_242272998();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_20_0();
      OUTLINED_FUNCTION_78_0();
      swift_bridgeObjectRelease();
      sub_2422726F8();
      sub_2422726F8();
      return v3;
    }
    sub_242272998();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_78_0();
  }
  else
  {
    sub_2421C1F4C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v1);
    sub_242272998();
    v3 = 0;
    sub_2422726F8();
    InferenceError.caseName.getter();
    OUTLINED_FUNCTION_78_0();
    swift_bridgeObjectRelease();
    sub_2422726F8();
    sub_2422729D4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_86_0();
  return v3;
}

uint64_t InferenceError.context.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v3 = *(unsigned __int8 *)(v1 + 48);
  if (v3 > 0x77)
  {
    v10 = 0;
    v9 = 0;
    v7 = 0;
    v6 = 0;
    v4 = 0;
    v5 = 0;
    v8 = 0;
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 32);
    v5 = *(_QWORD *)(v1 + 40);
    v7 = *(_QWORD *)(v1 + 16);
    v6 = *(_QWORD *)(v1 + 24);
    v8 = v3 & 1;
    v10 = *(_QWORD *)v1;
    v9 = *(_QWORD *)(v1 + 8);
    result = sub_2421C1F4C(*(_QWORD *)v1, v9, v7, v6, v4, v5, v3);
  }
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = v8;
  return result;
}

uint64_t InferenceError.caseName.getter()
{
  uint64_t v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2421BE434
                                                                     + 4
                                                                     * byte_242273845[*(unsigned __int8 *)(v0 + 48) >> 3]))(0xD00000000000001BLL, 0x80000002422833D0);
}

uint64_t sub_2421BE434()
{
  return 0x656C706D49746F6ELL;
}

uint64_t sub_2421BE458@<X0>(uint64_t a1@<X8>)
{
  return a1 - 5;
}

uint64_t sub_2421BE628()
{
  return 0x696D694C65746172;
}

void InferenceError.init(wrapping:)(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  MEMORY[0x2426A61F8]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA5C8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_24227229C();
    if (qword_2543AA570 != -1)
      swift_once();
    v2 = sub_2422724AC();
    __swift_project_value_buffer(v2, (uint64_t)qword_2543AA558);
    OUTLINED_FUNCTION_46_0();
  }
  OUTLINED_FUNCTION_36();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
}

uint64_t InferenceError.errorCode.getter()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t))((char *)nullsub_2 + 4 * byte_242273857[*(unsigned __int8 *)(v0 + 48) >> 3]))(2001);
}

uint64_t sub_2421BE954()
{
  return 2002;
}

uint64_t sub_2421BE95C()
{
  return 2014;
}

uint64_t sub_2421BE964()
{
  return 2003;
}

uint64_t sub_2421BE96C()
{
  return 2004;
}

uint64_t sub_2421BE974()
{
  return 2005;
}

uint64_t sub_2421BE97C()
{
  return 2008;
}

uint64_t sub_2421BE984()
{
  return 2010;
}

uint64_t sub_2421BE98C()
{
  return 2012;
}

uint64_t sub_2421BE994()
{
  return 2016;
}

uint64_t sub_2421BE99C()
{
  return 2017;
}

uint64_t sub_2421BE9A4()
{
  return 2015;
}

uint64_t sub_2421BE9AC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v7;

  v3 = v2[3];
  v4 = v2[4] | v2[5];
  v5 = v2[2] | v2[1];
  if (a1 == 136 && (v4 | v1 | v3 | v5) == 0)
    return 2000;
  if (v4 | v3 | v5)
    v7 = 0;
  else
    v7 = v1 == 1;
  if (v7 && a1 == 136)
    return 2013;
  else
    return 2018;
}

void static InferenceError.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2421BEA8C()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;

  if (v2 >= 8)
  {
    OUTLINED_FUNCTION_35_0(v1, v0, v8, v6, v5, v4);
    v56 = OUTLINED_FUNCTION_34_0();
    sub_2421C1F4C(v56, v57, v58, v59, v60, v61, v62);
    v63 = OUTLINED_FUNCTION_34_0();
    sub_2421C1F98(v63, v64, v65, v66, v67, v68, v69);
    OUTLINED_FUNCTION_39_0(v109, v112, v105, v6, v5, v4);
    LOBYTE(v8) = 0;
  }
  else
  {
    v12 = OUTLINED_FUNCTION_18_0();
    v16 = OUTLINED_FUNCTION_35_0(v12, v13, v14, v15, v5, v4);
    v24 = OUTLINED_FUNCTION_26_0(v16, v17, v18, v19, v20, v21, v22, v23, v71, v75, v4, v83, v88, v92, v96);
    OUTLINED_FUNCTION_28_0(v24, v25, v26, v27, v28, v29, v30, v31, v72, v76, v79, v84, v89, v93, v97, v101, v105, v109, v112);
    v32 = v98;
    v33 = OUTLINED_FUNCTION_29_0(v9, v11, v98, v10, v7);
    OUTLINED_FUNCTION_82_0(v33, v34, v35, v36, v37, v38, v39, v40, v73, v10, v80, v85, v90, v7, v98, v102, v106, v110, v113,
      v114,
      v115,
      v116,
      v117,
      v118,
      v119,
      v120,
      v121);
    v41 = OUTLINED_FUNCTION_38_0();
    v44 = OUTLINED_FUNCTION_53_0(v41, v42, v32, v10, v7, v43);
    v52 = OUTLINED_FUNCTION_50_0(v44, v45, v46, v47, v48, v49, v50, v51, v74, v77, v81, v86, v91, v94, v99, v103, v107, v111);
    OUTLINED_FUNCTION_39_0(v52, v53, v54, v55, v104, v82);
    OUTLINED_FUNCTION_39_0(v32, v7, v108, v6, v104, v82);
    sub_2421C1F98(v9, v11, v100, v78, v95, v87, v3);
  }
  return v8 & 1;
}

uint64_t sub_2421BEF1C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  char v17;

  v3 = a1 == 0x6669636570736E75 && a2 == 0xEB00000000646569;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656C706D49746F6ELL && a2 == 0xEE006465746E656DLL;
    if (v6 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000002422832F0 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x8000000242283390 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x8000000242283370 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      v7 = a1 == 0x4C79646165726C61 && a2 == 0xED0000646564616FLL;
      if (v7 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v8 = a1 == 0x6564616F4C746F6ELL && a2 == 0xE900000000000064;
        if (v8 || (sub_242272C20() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          v9 = a1 == 0x6C69614664616F6CLL && a2 == 0xEA00000000006465;
          if (v9 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            v10 = a1 == 0x636E657265666E69 && a2 == 0xEF64656C69614665;
            if (v10 || (sub_242272C20() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else if (a1 == 0xD000000000000013 && a2 == 0x8000000242283350 || (sub_242272C20() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else if (a1 == 0xD000000000000012 && a2 == 0x8000000242283330 || (sub_242272C20() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else if (a1 == 0xD000000000000014 && a2 == 0x8000000242283310 || (sub_242272C20() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 11;
            }
            else
            {
              v11 = a1 == 0x6F4E6D6165727473 && a2 == 0xEE00646E756F4674;
              if (v11 || (sub_242272C20() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 12;
              }
              else
              {
                v12 = a1 == 0x696D694C65746172 && a2 == 0xEB00000000646574;
                if (v12 || (sub_242272C20() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 13;
                }
                else
                {
                  v13 = a1 == 0x6C616E7265746E69 && a2 == 0xED0000726F727245;
                  if (v13 || (sub_242272C20() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 14;
                  }
                  else
                  {
                    v14 = a1 == 0x456B726F7774656ELL && a2 == 0xEC000000726F7272;
                    if (v14 || (sub_242272C20() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 15;
                    }
                    else
                    {
                      v15 = a1 == 0x656372756F736572 && a2 == 0xED00007973754273;
                      if (v15 || (sub_242272C20() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 16;
                      }
                      else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002422833B0 || (sub_242272C20() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 17;
                      }
                      else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002422833D0 || (sub_242272C20() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 18;
                      }
                      else if (a1 == 0x726F727245637078 && a2 == 0xE800000000000000)
                      {
                        swift_bridgeObjectRelease();
                        return 19;
                      }
                      else
                      {
                        v17 = sub_242272C20();
                        swift_bridgeObjectRelease();
                        if ((v17 & 1) != 0)
                          return 19;
                        else
                          return 20;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_2421BF6F4()
{
  return 20;
}

void sub_2421BF6FC()
{
  OUTLINED_FUNCTION_85();
  sub_242272CD4();
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_48();
}

uint64_t sub_2421BF72C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2421BF768 + 4 * byte_24227387B[a1]))(0xD000000000000011, 0x80000002422832F0);
}

uint64_t sub_2421BF768()
{
  return 0x6669636570736E75;
}

uint64_t sub_2421BF788()
{
  return 0x656C706D49746F6ELL;
}

unint64_t sub_2421BF7AC()
{
  return 0xD000000000000016;
}

uint64_t sub_2421BF7D4()
{
  return 0x4C79646165726C61;
}

uint64_t sub_2421BF7F8()
{
  return 0x6564616F4C746F6ELL;
}

uint64_t sub_2421BF814()
{
  return 0x6C69614664616F6CLL;
}

uint64_t sub_2421BF830()
{
  return 0x636E657265666E69;
}

uint64_t sub_2421BF854()
{
  uint64_t v0;

  return v0 - 3;
}

uint64_t sub_2421BF95C()
{
  return 0x726F727245637078;
}

uint64_t sub_2421BF974()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_2421BF990()
{
  return 0;
}

uint64_t sub_2421BF99C()
{
  return 1;
}

uint64_t sub_2421BF9A4()
{
  return sub_242272CD4();
}

uint64_t sub_2421BF9C8()
{
  return 12383;
}

uint64_t sub_2421BF9D4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    OUTLINED_FUNCTION_86_0();
    v4 = 0;
  }
  else
  {
    v3 = OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_86_0();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_2421BFA34()
{
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_48();
}

void sub_2421BFA5C()
{
  sub_2421BFA34();
}

uint64_t sub_2421BFA7C()
{
  sub_2421C23A4();
  return sub_242272D70();
}

uint64_t sub_2421BFAA4()
{
  sub_2421C23A4();
  return sub_242272D7C();
}

uint64_t sub_2421BFAD0()
{
  sub_2421C223C();
  return sub_242272D70();
}

uint64_t sub_2421BFAF8()
{
  sub_2421C223C();
  return sub_242272D7C();
}

void sub_2421BFB20()
{
  sub_2421BF6FC();
}

void sub_2421BFB38()
{
  sub_242272CBC();
  sub_242272CD4();
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_48();
}

uint64_t sub_2421BFB6C()
{
  unsigned __int8 *v0;

  return sub_2421BF72C(*v0);
}

uint64_t sub_2421BFB74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421BEF1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2421BFB98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2421BF6F4();
  *a1 = result;
  return result;
}

uint64_t sub_2421BFBBC()
{
  sub_2421C1FE4();
  return sub_242272D70();
}

uint64_t sub_2421BFBE4()
{
  sub_2421C1FE4();
  return sub_242272D7C();
}

uint64_t sub_2421BFC0C()
{
  sub_2421C22F0();
  return sub_242272D70();
}

uint64_t sub_2421BFC34()
{
  sub_2421C22F0();
  return sub_242272D7C();
}

uint64_t sub_2421BFC5C()
{
  sub_2421C2188();
  return sub_242272D70();
}

uint64_t sub_2421BFC84()
{
  sub_2421C2188();
  return sub_242272D7C();
}

uint64_t sub_2421BFCAC()
{
  sub_2421C2458();
  return sub_242272D70();
}

uint64_t sub_2421BFCD4()
{
  sub_2421C2458();
  return sub_242272D7C();
}

uint64_t sub_2421BFCFC()
{
  sub_2421C232C();
  return sub_242272D70();
}

uint64_t sub_2421BFD24()
{
  sub_2421C232C();
  return sub_242272D7C();
}

uint64_t sub_2421BFD4C()
{
  sub_2421C214C();
  return sub_242272D70();
}

uint64_t sub_2421BFD74()
{
  sub_2421C214C();
  return sub_242272D7C();
}

uint64_t sub_2421BFD9C()
{
  sub_2421C2494();
  return sub_242272D70();
}

uint64_t sub_2421BFDC4()
{
  sub_2421C2494();
  return sub_242272D7C();
}

uint64_t sub_2421BFDEC()
{
  sub_2421C2368();
  return sub_242272D70();
}

uint64_t sub_2421BFE14()
{
  sub_2421C2368();
  return sub_242272D7C();
}

uint64_t sub_2421BFE3C()
{
  sub_2421C2278();
  return sub_242272D70();
}

uint64_t sub_2421BFE64()
{
  sub_2421C2278();
  return sub_242272D7C();
}

uint64_t sub_2421BFE8C()
{
  sub_2421C22B4();
  return sub_242272D70();
}

uint64_t sub_2421BFEB4()
{
  sub_2421C22B4();
  return sub_242272D7C();
}

uint64_t sub_2421BFEDC()
{
  sub_2421C21C4();
  return sub_242272D70();
}

uint64_t sub_2421BFF04()
{
  sub_2421C21C4();
  return sub_242272D7C();
}

uint64_t sub_2421BFF2C()
{
  sub_2421C2110();
  return sub_242272D70();
}

uint64_t sub_2421BFF54()
{
  sub_2421C2110();
  return sub_242272D7C();
}

uint64_t sub_2421BFF7C()
{
  sub_2421C23E0();
  return sub_242272D70();
}

uint64_t sub_2421BFFA4()
{
  sub_2421C23E0();
  return sub_242272D7C();
}

uint64_t sub_2421BFFCC()
{
  sub_2421C2200();
  return sub_242272D70();
}

uint64_t sub_2421BFFF4()
{
  sub_2421C2200();
  return sub_242272D7C();
}

uint64_t sub_2421C001C()
{
  sub_2421C205C();
  return sub_242272D70();
}

uint64_t sub_2421C0044()
{
  sub_2421C205C();
  return sub_242272D7C();
}

uint64_t sub_2421C006C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2421BF974();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2421C0094()
{
  sub_2421C24D0();
  return sub_242272D70();
}

uint64_t sub_2421C00BC()
{
  sub_2421C24D0();
  return sub_242272D7C();
}

uint64_t sub_2421C00E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421BF9D4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2421C010C()
{
  return sub_2421B844C();
}

uint64_t sub_2421C0124@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2421BF99C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2421C014C()
{
  sub_2421C2098();
  return sub_242272D70();
}

uint64_t sub_2421C0174()
{
  sub_2421C2098();
  return sub_242272D7C();
}

uint64_t sub_2421C019C()
{
  sub_2421C241C();
  return sub_242272D70();
}

uint64_t sub_2421C01C4()
{
  sub_2421C241C();
  return sub_242272D7C();
}

void sub_2421C01EC()
{
  sub_242272CBC();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_48();
}

uint64_t sub_2421C0214()
{
  sub_2421C2020();
  return sub_242272D70();
}

uint64_t sub_2421C023C()
{
  sub_2421C2020();
  return sub_242272D7C();
}

void InferenceError.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83[13];
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  OUTLINED_FUNCTION_45_0();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFC50);
  v97 = *(_QWORD *)(v25 - 8);
  v98 = v25;
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_37_0(v26, v83[0]);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFC58);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v96 - 8));
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_13_0((uint64_t)v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFC60);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v95 - 8));
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_13_0((uint64_t)v83 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFC68);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v86 - 8));
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v32);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFC70);
  OUTLINED_FUNCTION_15_0(v33, (uint64_t)&a14);
  OUTLINED_FUNCTION_3_0(v34);
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_13_0((uint64_t)v83 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFC78);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v92 - 8));
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v38);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFC80);
  OUTLINED_FUNCTION_15_0(v39, (uint64_t)&v94);
  OUTLINED_FUNCTION_3_0(v40);
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v42);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFC88);
  OUTLINED_FUNCTION_15_0(v43, (uint64_t)&v107);
  OUTLINED_FUNCTION_3_0(v44);
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v46);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFC90);
  OUTLINED_FUNCTION_15_0(v47, (uint64_t)&v90);
  OUTLINED_FUNCTION_3_0(v48);
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v50);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFC98);
  OUTLINED_FUNCTION_15_0(v51, (uint64_t)&v91);
  OUTLINED_FUNCTION_3_0(v52);
  MEMORY[0x24BDAC7A8](v53);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v54);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFCA0);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v85 - 8));
  MEMORY[0x24BDAC7A8](v55);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v56);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFCA8);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v91 - 8));
  MEMORY[0x24BDAC7A8](v57);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v58);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFCB0);
  OUTLINED_FUNCTION_15_0(v59, (uint64_t)&v93);
  OUTLINED_FUNCTION_3_0(v60);
  MEMORY[0x24BDAC7A8](v61);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v62);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFCB8);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v84 - 8));
  MEMORY[0x24BDAC7A8](v63);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v64);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFCC0);
  OUTLINED_FUNCTION_15_0(v65, (uint64_t)&v106);
  OUTLINED_FUNCTION_3_0(v66);
  MEMORY[0x24BDAC7A8](v67);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v68);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFCC8);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v89 - 8));
  MEMORY[0x24BDAC7A8](v69);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v70);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFCD0);
  OUTLINED_FUNCTION_15_0(v71, (uint64_t)&v103);
  OUTLINED_FUNCTION_3_0(v72);
  MEMORY[0x24BDAC7A8](v73);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v74);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFCD8);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v88 - 8));
  MEMORY[0x24BDAC7A8](v75);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v76);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFCE0);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v87 - 8));
  MEMORY[0x24BDAC7A8](v77);
  OUTLINED_FUNCTION_67();
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFCE8);
  MEMORY[0x24BDAC7A8](v78);
  OUTLINED_FUNCTION_66();
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFCF0);
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  OUTLINED_FUNCTION_68();
  v105 = *v20;
  v79 = v20[3];
  v80 = v20[4];
  v99 = v20[2];
  v100 = v80;
  v81 = v20[5];
  v101 = v79;
  v102 = v81;
  v82 = *((unsigned __int8 *)v20 + 48);
  __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  sub_2421C1FE4();
  sub_242272D64();
  __asm { BR              X10 }
}

void sub_2421C077C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_84_0();
  v2 = *(_QWORD *)(v0 - 176);
  v1 = *(_QWORD *)(v0 - 168);
  sub_242272AF4();
  OUTLINED_FUNCTION_0_0();
  sub_242272B48();
  v3 = OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_25_0(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 184) + 8))(v2, v1);
  OUTLINED_FUNCTION_16_0();
}

void InferenceError.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111[4];
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD v123[3];
  _QWORD v124[3];
  _QWORD v125[4];
  _QWORD v126[2];
  _QWORD v127[3];
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;

  OUTLINED_FUNCTION_45_0();
  a19 = v22;
  a20 = v23;
  a10 = v20;
  v25 = v24;
  v126[1] = v26;
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFDA8);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v120 - 8));
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_2_0();
  v126[0] = v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFDB0);
  OUTLINED_FUNCTION_15_0(v29, (uint64_t)&a9);
  OUTLINED_FUNCTION_3_0(v30);
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_2_0();
  v125[3] = v32;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFDB8);
  OUTLINED_FUNCTION_15_0(v33, (uint64_t)&v131);
  OUTLINED_FUNCTION_3_0(v34);
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_2_0();
  v125[2] = v36;
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFDC0);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v119 - 8));
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_2_0();
  v125[1] = v38;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFDC8);
  OUTLINED_FUNCTION_15_0(v39, (uint64_t)&v130);
  OUTLINED_FUNCTION_3_0(v40);
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_2_0();
  v125[0] = v42;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFDD0);
  OUTLINED_FUNCTION_15_0(v43, (uint64_t)&v129);
  OUTLINED_FUNCTION_3_0(v44);
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_2_0();
  v124[2] = v46;
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFDD8);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v118 - 8));
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_37_0(v48, v111[0]);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFDE0);
  OUTLINED_FUNCTION_15_0(v49, (uint64_t)v127);
  OUTLINED_FUNCTION_3_0(v50);
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_2_0();
  v124[0] = v52;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFDE8);
  OUTLINED_FUNCTION_15_0(v53, (uint64_t)v126);
  OUTLINED_FUNCTION_3_0(v54);
  MEMORY[0x24BDAC7A8](v55);
  OUTLINED_FUNCTION_2_0();
  v123[2] = v56;
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFDF0);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v117 - 8));
  MEMORY[0x24BDAC7A8](v57);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v58);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFDF8);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v116 - 8));
  MEMORY[0x24BDAC7A8](v59);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v60);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFE00);
  OUTLINED_FUNCTION_15_0(v61, (uint64_t)v125);
  OUTLINED_FUNCTION_3_0(v62);
  MEMORY[0x24BDAC7A8](v63);
  OUTLINED_FUNCTION_2_0();
  v127[2] = v64;
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFE08);
  OUTLINED_FUNCTION_15_0(v65, (uint64_t)v124);
  OUTLINED_FUNCTION_3_0(v66);
  MEMORY[0x24BDAC7A8](v67);
  OUTLINED_FUNCTION_2_0();
  v127[1] = v68;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFE10);
  OUTLINED_FUNCTION_15_0(v69, (uint64_t)v123);
  OUTLINED_FUNCTION_3_0(v70);
  MEMORY[0x24BDAC7A8](v71);
  OUTLINED_FUNCTION_13_0((uint64_t)v111 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0));
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFE18);
  OUTLINED_FUNCTION_15_0(v73, (uint64_t)&v122);
  OUTLINED_FUNCTION_3_0(v74);
  MEMORY[0x24BDAC7A8](v75);
  OUTLINED_FUNCTION_2_0();
  v127[0] = v76;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFE20);
  OUTLINED_FUNCTION_15_0(v77, (uint64_t)&v121);
  OUTLINED_FUNCTION_3_0(v78);
  MEMORY[0x24BDAC7A8](v79);
  OUTLINED_FUNCTION_13_0((uint64_t)v111 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0));
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFE28);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v115 - 8));
  MEMORY[0x24BDAC7A8](v81);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v82);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFE30);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v114 - 8));
  MEMORY[0x24BDAC7A8](v83);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v84);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFE38);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v113 - 8));
  MEMORY[0x24BDAC7A8](v85);
  OUTLINED_FUNCTION_13_0((uint64_t)v111 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0));
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFE40);
  v88 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  OUTLINED_FUNCTION_66();
  v91 = v90 - v89;
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFE48);
  v93 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92);
  OUTLINED_FUNCTION_68();
  v94 = v25[3];
  v128 = v25;
  __swift_project_boxed_opaque_existential_1(v25, v94);
  sub_2421C1FE4();
  v95 = a10;
  sub_242272D40();
  if (v95)
  {
    v96 = (uint64_t)v128;
  }
  else
  {
    v111[3] = v91;
    v111[1] = v88;
    v111[2] = v87;
    v112 = v93;
    a10 = v92;
    v97 = sub_242272AE8();
    v98 = *(_QWORD *)(v97 + 16);
    if (v98)
    {
      v99 = v21;
      v111[0] = 0;
      v100 = *(unsigned __int8 *)(v97 + 32);
      sub_2421C4044(1, v98, v97, v97 + 32, 0, (2 * v98) | 1);
      v102 = v101;
      v104 = v103;
      swift_bridgeObjectRelease();
      if (v102 == v104 >> 1)
        __asm { BR              X9 }
      v105 = v99;
    }
    else
    {
      v105 = v21;
    }
    v96 = (uint64_t)v128;
    v106 = a10;
    v107 = v112;
    v108 = sub_2422729BC();
    swift_allocError();
    v110 = v109;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFE50);
    *v110 = &type metadata for InferenceError;
    sub_242272A58();
    sub_2422729B0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v108 - 8) + 104))(v110, *MEMORY[0x24BEE26D0], v108);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v105, v106);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v96);
  OUTLINED_FUNCTION_16_0();
}

uint64_t sub_2421C1E04()
{
  sub_2421C2594();
  return sub_242272C8C();
}

uint64_t sub_2421C1E2C()
{
  sub_2421C2594();
  return sub_242272C80();
}

#error "2421C1E68: call analysis failed (funcsize=5)"

#error "2421C1E7C: call analysis failed (funcsize=5)"

uint64_t sub_2421C1E8C()
{
  __int128 *v0;
  _BYTE v2[56];

  sub_2421C4020(v0, (uint64_t)v2);
  return sub_2421D4374();
}

uint64_t sub_2421C1ED4()
{
  __int128 *v0;
  _BYTE v2[56];

  sub_2421C4020(v0, (uint64_t)v2);
  return sub_2421D43AC();
}

uint64_t sub_2421C1F08(uint64_t a1)
{
  if (a1 < 16)
    return 0;
  sub_242272998();
  return 0;
}

uint64_t sub_2421C1F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  uint64_t result;
  unsigned int v8;
  BOOL v9;
  unsigned int v10;

  result = a2;
  v8 = a7 >> 3;
  v9 = v8 >= 0xF;
  v10 = v8 - 15;
  if (!v9)
  {
    sub_242272644();
    sub_242272644();
    return sub_242272644();
  }
  if (v10 < 2)
    return sub_242272644();
  return result;
}

uint64_t sub_2421C1F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  uint64_t result;
  unsigned int v8;
  BOOL v9;
  unsigned int v10;

  result = a2;
  v8 = a7 >> 3;
  v9 = v8 >= 0xF;
  v10 = v8 - 15;
  if (!v9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (v10 < 2)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_2421C1FE4()
{
  unint64_t result;

  result = qword_2571DFCF8;
  if (!qword_2571DFCF8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227531C, &type metadata for InferenceError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFCF8);
  }
  return result;
}

unint64_t sub_2421C2020()
{
  unint64_t result;

  result = qword_2571DFD00;
  if (!qword_2571DFD00)
  {
    result = MEMORY[0x2426A62C4](&unk_2422752CC, &type metadata for InferenceError.XpcErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD00);
  }
  return result;
}

unint64_t sub_2421C205C()
{
  unint64_t result;

  result = qword_2571DFD08;
  if (!qword_2571DFD08)
  {
    result = MEMORY[0x2426A62C4](&unk_24227527C, &type metadata for InferenceError.UnrecognizedUnderlyingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD08);
  }
  return result;
}

unint64_t sub_2421C2098()
{
  unint64_t result;

  result = qword_2571DFD10;
  if (!qword_2571DFD10)
  {
    result = MEMORY[0x2426A62C4](&unk_24227522C, &type metadata for InferenceError.UnspecifiedUnderlyingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD10);
  }
  return result;
}

unint64_t sub_2421C20D4()
{
  unint64_t result;

  result = qword_2571DFD18;
  if (!qword_2571DFD18)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceError.Context, &type metadata for InferenceError.Context);
    atomic_store(result, (unint64_t *)&qword_2571DFD18);
  }
  return result;
}

unint64_t sub_2421C2110()
{
  unint64_t result;

  result = qword_2571DFD20;
  if (!qword_2571DFD20)
  {
    result = MEMORY[0x2426A62C4](&unk_2422751DC, &type metadata for InferenceError.ResourcesBusyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD20);
  }
  return result;
}

unint64_t sub_2421C214C()
{
  unint64_t result;

  result = qword_2571DFD28;
  if (!qword_2571DFD28)
  {
    result = MEMORY[0x2426A62C4](&unk_24227518C, &type metadata for InferenceError.NetworkErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD28);
  }
  return result;
}

unint64_t sub_2421C2188()
{
  unint64_t result;

  result = qword_2571DFD30;
  if (!qword_2571DFD30)
  {
    result = MEMORY[0x2426A62C4](&unk_24227513C, &type metadata for InferenceError.InternalErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD30);
  }
  return result;
}

unint64_t sub_2421C21C4()
{
  unint64_t result;

  result = qword_2571DFD38;
  if (!qword_2571DFD38)
  {
    result = MEMORY[0x2426A62C4](&unk_2422750EC, &type metadata for InferenceError.RateLimitedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD38);
  }
  return result;
}

unint64_t sub_2421C2200()
{
  unint64_t result;

  result = qword_2571DFD40;
  if (!qword_2571DFD40)
  {
    result = MEMORY[0x2426A62C4](&unk_24227509C, &type metadata for InferenceError.StreamNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD40);
  }
  return result;
}

unint64_t sub_2421C223C()
{
  unint64_t result;

  result = qword_2571DFD48;
  if (!qword_2571DFD48)
  {
    result = MEMORY[0x2426A62C4](&unk_24227504C, &type metadata for InferenceError.AssetVersionMismatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD48);
  }
  return result;
}

unint64_t sub_2421C2278()
{
  unint64_t result;

  result = qword_2571DFD50;
  if (!qword_2571DFD50)
  {
    result = MEMORY[0x2426A62C4](&unk_242274FFC, &type metadata for InferenceError.OperationCancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD50);
  }
  return result;
}

unint64_t sub_2421C22B4()
{
  unint64_t result;

  result = qword_2571DFD58;
  if (!qword_2571DFD58)
  {
    result = MEMORY[0x2426A62C4](&unk_242274FAC, &type metadata for InferenceError.OperationNotAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD58);
  }
  return result;
}

unint64_t sub_2421C22F0()
{
  unint64_t result;

  result = qword_2571DFD60;
  if (!qword_2571DFD60)
  {
    result = MEMORY[0x2426A62C4](&unk_242274F5C, &type metadata for InferenceError.InferenceFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD60);
  }
  return result;
}

unint64_t sub_2421C232C()
{
  unint64_t result;

  result = qword_2571DFD68;
  if (!qword_2571DFD68)
  {
    result = MEMORY[0x2426A62C4](&unk_242274F0C, &type metadata for InferenceError.LoadFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD68);
  }
  return result;
}

unint64_t sub_2421C2368()
{
  unint64_t result;

  result = qword_2571DFD70;
  if (!qword_2571DFD70)
  {
    result = MEMORY[0x2426A62C4](&unk_242274EBC, &type metadata for InferenceError.NotLoadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD70);
  }
  return result;
}

unint64_t sub_2421C23A4()
{
  unint64_t result;

  result = qword_2571DFD78;
  if (!qword_2571DFD78)
  {
    result = MEMORY[0x2426A62C4](&unk_242274E6C, &type metadata for InferenceError.AlreadyLoadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD78);
  }
  return result;
}

unint64_t sub_2421C23E0()
{
  unint64_t result;

  result = qword_2571DFD80;
  if (!qword_2571DFD80)
  {
    result = MEMORY[0x2426A62C4](&unk_242274E1C, &type metadata for InferenceError.ResponseEncodingFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD80);
  }
  return result;
}

unint64_t sub_2421C241C()
{
  unint64_t result;

  result = qword_2571DFD88;
  if (!qword_2571DFD88)
  {
    result = MEMORY[0x2426A62C4](&unk_242274DCC, &type metadata for InferenceError.UnsupportedRequestTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD88);
  }
  return result;
}

unint64_t sub_2421C2458()
{
  unint64_t result;

  result = qword_2571DFD90;
  if (!qword_2571DFD90)
  {
    result = MEMORY[0x2426A62C4](&unk_242274D7C, &type metadata for InferenceError.InvalidClientDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD90);
  }
  return result;
}

unint64_t sub_2421C2494()
{
  unint64_t result;

  result = qword_2571DFD98;
  if (!qword_2571DFD98)
  {
    result = MEMORY[0x2426A62C4](&unk_242274D2C, &type metadata for InferenceError.NotImplementedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFD98);
  }
  return result;
}

unint64_t sub_2421C24D0()
{
  unint64_t result;

  result = qword_2571DFDA0;
  if (!qword_2571DFDA0)
  {
    result = MEMORY[0x2426A62C4](&unk_242274CDC, &type metadata for InferenceError.UnspecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFDA0);
  }
  return result;
}

unint64_t sub_2421C250C()
{
  unint64_t result;

  result = qword_2571DFE58;
  if (!qword_2571DFE58)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceError.Context, &type metadata for InferenceError.Context);
    atomic_store(result, (unint64_t *)&qword_2571DFE58);
  }
  return result;
}

unint64_t sub_2421C2548(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_2421C2594();
  a1[2] = sub_2421C25D0();
  a1[3] = sub_2421C260C();
  a1[4] = sub_2421C2648();
  a1[5] = sub_2421C2684();
  result = sub_2421C26C0();
  a1[6] = result;
  return result;
}

unint64_t sub_2421C2594()
{
  unint64_t result;

  result = qword_2571DFE60;
  if (!qword_2571DFE60)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceError, &type metadata for InferenceError);
    atomic_store(result, (unint64_t *)&qword_2571DFE60);
  }
  return result;
}

unint64_t sub_2421C25D0()
{
  unint64_t result;

  result = qword_2571DFE68;
  if (!qword_2571DFE68)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceError, &type metadata for InferenceError);
    atomic_store(result, (unint64_t *)&qword_2571DFE68);
  }
  return result;
}

unint64_t sub_2421C260C()
{
  unint64_t result;

  result = qword_2571DFE70;
  if (!qword_2571DFE70)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceError, &type metadata for InferenceError);
    atomic_store(result, (unint64_t *)&qword_2571DFE70);
  }
  return result;
}

unint64_t sub_2421C2648()
{
  unint64_t result;

  result = qword_2571DFE78;
  if (!qword_2571DFE78)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceError, &type metadata for InferenceError);
    atomic_store(result, (unint64_t *)&qword_2571DFE78);
  }
  return result;
}

unint64_t sub_2421C2684()
{
  unint64_t result;

  result = qword_2571DFE80;
  if (!qword_2571DFE80)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceError, &type metadata for InferenceError);
    atomic_store(result, (unint64_t *)&qword_2571DFE80);
  }
  return result;
}

unint64_t sub_2421C26C0()
{
  unint64_t result;

  result = qword_2571DFE88;
  if (!qword_2571DFE88)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceError, &type metadata for InferenceError);
    atomic_store(result, (unint64_t *)&qword_2571DFE88);
  }
  return result;
}

unint64_t sub_2421C2700()
{
  unint64_t result;

  result = qword_2571DFE90;
  if (!qword_2571DFE90)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceError, &type metadata for InferenceError);
    atomic_store(result, (unint64_t *)&qword_2571DFE90);
  }
  return result;
}

uint64_t destroy for InferenceError(uint64_t a1)
{
  return sub_2421C1F98(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for InferenceError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_2421C1F4C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for InferenceError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_2421C1F4C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_2421C1F98(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for InferenceError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unsigned __int8 v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_2421C1F98(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceError(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x6F && *(_BYTE *)(a1 + 49))
    {
      v2 = *(_DWORD *)a1 + 110;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 48) >> 3) & 0xFFFFFF9F | (32 * ((*(unsigned __int8 *)(a1 + 48) >> 1) & 3))) ^ 0x7F;
      if (v2 >= 0x6E)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for InferenceError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x6E)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 111;
    if (a3 >= 0x6F)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x6F)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
    {
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)result = 0u;
      *(_BYTE *)(result + 48) = 2 * (((-a2 >> 5) & 3) - 4 * a2);
    }
  }
  return result;
}

uint64_t sub_2421C2980(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 48);
  if (v1 <= 0x87)
    return v1 >> 3;
  else
    return (*(_DWORD *)a1 + 17);
}

uint64_t sub_2421C299C(uint64_t result)
{
  *(_BYTE *)(result + 48) &= 7u;
  return result;
}

uint64_t sub_2421C29AC(uint64_t result, unsigned int a2)
{
  char v2;

  if (a2 < 0x11)
  {
    v2 = *(_BYTE *)(result + 48) & 1 | (8 * a2);
  }
  else
  {
    *(_QWORD *)result = a2 - 17;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0;
    v2 = -120;
  }
  *(_BYTE *)(result + 48) = v2;
  return result;
}

ValueMetadata *type metadata accessor for InferenceError()
{
  return &type metadata for InferenceError;
}

uint64_t destroy for InferenceError.Context()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InferenceError.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  sub_242272644();
  sub_242272644();
  sub_242272644();
  return a1;
}

uint64_t assignWithCopy for InferenceError.Context(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for InferenceError.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceError.Context(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceError.Context(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceError.Context()
{
  return &type metadata for InferenceError.Context;
}

uint64_t getEnumTagSinglePayload for InferenceError.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xED)
  {
    if (a2 + 19 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 19) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 20;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v5 = v6 - 20;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_2421C2CE4 + 4 * byte_2422738E1[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_2421C2D18 + 4 * byte_2422738DC[v4]))();
}

uint64_t sub_2421C2D18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421C2D20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2421C2D28);
  return result;
}

uint64_t sub_2421C2D34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2421C2D3CLL);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_2421C2D40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421C2D48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InferenceError.CodingKeys()
{
  return &type metadata for InferenceError.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.UnspecifiedCodingKeys()
{
  return &type metadata for InferenceError.UnspecifiedCodingKeys;
}

uint64_t sub_2421C2D80()
{
  return 0;
}

ValueMetadata *type metadata accessor for InferenceError.NotImplementedCodingKeys()
{
  return &type metadata for InferenceError.NotImplementedCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.InvalidClientDataCodingKeys()
{
  return &type metadata for InferenceError.InvalidClientDataCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.UnsupportedRequestTypeCodingKeys()
{
  return &type metadata for InferenceError.UnsupportedRequestTypeCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.ResponseEncodingFailedCodingKeys()
{
  return &type metadata for InferenceError.ResponseEncodingFailedCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.AlreadyLoadedCodingKeys()
{
  return &type metadata for InferenceError.AlreadyLoadedCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.NotLoadedCodingKeys()
{
  return &type metadata for InferenceError.NotLoadedCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.LoadFailedCodingKeys()
{
  return &type metadata for InferenceError.LoadFailedCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.InferenceFailedCodingKeys()
{
  return &type metadata for InferenceError.InferenceFailedCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.OperationNotAllowedCodingKeys()
{
  return &type metadata for InferenceError.OperationNotAllowedCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.OperationCancelledCodingKeys()
{
  return &type metadata for InferenceError.OperationCancelledCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.AssetVersionMismatchCodingKeys()
{
  return &type metadata for InferenceError.AssetVersionMismatchCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.StreamNotFoundCodingKeys()
{
  return &type metadata for InferenceError.StreamNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.RateLimitedCodingKeys()
{
  return &type metadata for InferenceError.RateLimitedCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.InternalErrorCodingKeys()
{
  return &type metadata for InferenceError.InternalErrorCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.NetworkErrorCodingKeys()
{
  return &type metadata for InferenceError.NetworkErrorCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.ResourcesBusyCodingKeys()
{
  return &type metadata for InferenceError.ResourcesBusyCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.UnspecifiedUnderlyingErrorCodingKeys()
{
  return &type metadata for InferenceError.UnspecifiedUnderlyingErrorCodingKeys;
}

ValueMetadata *type metadata accessor for InferenceError.UnrecognizedUnderlyingErrorCodingKeys()
{
  return &type metadata for InferenceError.UnrecognizedUnderlyingErrorCodingKeys;
}

uint64_t getEnumTagSinglePayload for InferenceProviderDescriptor.Instance.SpecificInstanceCodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s20ModelManagerServices14InferenceErrorO24NotImplementedCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2421C2F38 + 4 * byte_2422738E6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2421C2F58 + 4 * byte_2422738EB[v4]))();
}

_BYTE *sub_2421C2F38(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2421C2F58(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2421C2F60(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2421C2F68(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2421C2F70(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2421C2F78(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for InferenceError.XpcErrorCodingKeys()
{
  return &type metadata for InferenceError.XpcErrorCodingKeys;
}

uint64_t storeEnumTagSinglePayload for InferenceError.Context.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2421C2FE0 + 4 * byte_2422738F5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2421C3014 + 4 * byte_2422738F0[v4]))();
}

uint64_t sub_2421C3014(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421C301C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2421C3024);
  return result;
}

uint64_t sub_2421C3030(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2421C3038);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2421C303C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421C3044(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InferenceError.Context.CodingKeys()
{
  return &type metadata for InferenceError.Context.CodingKeys;
}

unint64_t sub_2421C3064()
{
  unint64_t result;

  result = qword_2571DFE98;
  if (!qword_2571DFE98)
  {
    result = MEMORY[0x2426A62C4](&unk_242273ED4, &type metadata for InferenceError.Context.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFE98);
  }
  return result;
}

unint64_t sub_2421C30A4()
{
  unint64_t result;

  result = qword_2571DFEA0;
  if (!qword_2571DFEA0)
  {
    result = MEMORY[0x2426A62C4](&unk_242273F8C, &type metadata for InferenceError.XpcErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFEA0);
  }
  return result;
}

unint64_t sub_2421C30E4()
{
  unint64_t result;

  result = qword_2571DFEA8;
  if (!qword_2571DFEA8)
  {
    result = MEMORY[0x2426A62C4](&unk_242274044, &type metadata for InferenceError.UnrecognizedUnderlyingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFEA8);
  }
  return result;
}

unint64_t sub_2421C3124()
{
  unint64_t result;

  result = qword_2571DFEB0;
  if (!qword_2571DFEB0)
  {
    result = MEMORY[0x2426A62C4](&unk_2422740FC, &type metadata for InferenceError.UnspecifiedUnderlyingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFEB0);
  }
  return result;
}

unint64_t sub_2421C3164()
{
  unint64_t result;

  result = qword_2571DFEB8;
  if (!qword_2571DFEB8)
  {
    result = MEMORY[0x2426A62C4](&unk_2422741B4, &type metadata for InferenceError.ResourcesBusyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFEB8);
  }
  return result;
}

unint64_t sub_2421C31A4()
{
  unint64_t result;

  result = qword_2571DFEC0;
  if (!qword_2571DFEC0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227426C, &type metadata for InferenceError.NetworkErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFEC0);
  }
  return result;
}

unint64_t sub_2421C31E4()
{
  unint64_t result;

  result = qword_2571DFEC8;
  if (!qword_2571DFEC8)
  {
    result = MEMORY[0x2426A62C4](&unk_242274324, &type metadata for InferenceError.InternalErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFEC8);
  }
  return result;
}

unint64_t sub_2421C3224()
{
  unint64_t result;

  result = qword_2571DFED0;
  if (!qword_2571DFED0)
  {
    result = MEMORY[0x2426A62C4](&unk_2422743DC, &type metadata for InferenceError.RateLimitedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFED0);
  }
  return result;
}

unint64_t sub_2421C3264()
{
  unint64_t result;

  result = qword_2571DFED8;
  if (!qword_2571DFED8)
  {
    result = MEMORY[0x2426A62C4](&unk_242274494, &type metadata for InferenceError.StreamNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFED8);
  }
  return result;
}

unint64_t sub_2421C32A4()
{
  unint64_t result;

  result = qword_2571DFEE0;
  if (!qword_2571DFEE0)
  {
    result = MEMORY[0x2426A62C4](&unk_2422745EC, &type metadata for InferenceError.OperationNotAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFEE0);
  }
  return result;
}

unint64_t sub_2421C32E4()
{
  unint64_t result;

  result = qword_2571DFEE8;
  if (!qword_2571DFEE8)
  {
    result = MEMORY[0x2426A62C4](&unk_2422746A4, &type metadata for InferenceError.InferenceFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFEE8);
  }
  return result;
}

unint64_t sub_2421C3324()
{
  unint64_t result;

  result = qword_2571DFEF0;
  if (!qword_2571DFEF0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227475C, &type metadata for InferenceError.LoadFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFEF0);
  }
  return result;
}

unint64_t sub_2421C3364()
{
  unint64_t result;

  result = qword_2571DFEF8;
  if (!qword_2571DFEF8)
  {
    result = MEMORY[0x2426A62C4](&unk_242274814, &type metadata for InferenceError.NotLoadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFEF8);
  }
  return result;
}

unint64_t sub_2421C33A4()
{
  unint64_t result;

  result = qword_2571DFF00;
  if (!qword_2571DFF00)
  {
    result = MEMORY[0x2426A62C4](&unk_2422748CC, &type metadata for InferenceError.AlreadyLoadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF00);
  }
  return result;
}

unint64_t sub_2421C33E4()
{
  unint64_t result;

  result = qword_2571DFF08;
  if (!qword_2571DFF08)
  {
    result = MEMORY[0x2426A62C4](&unk_242274984, &type metadata for InferenceError.ResponseEncodingFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF08);
  }
  return result;
}

unint64_t sub_2421C3424()
{
  unint64_t result;

  result = qword_2571DFF10;
  if (!qword_2571DFF10)
  {
    result = MEMORY[0x2426A62C4](&unk_242274A3C, &type metadata for InferenceError.UnsupportedRequestTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF10);
  }
  return result;
}

unint64_t sub_2421C3464()
{
  unint64_t result;

  result = qword_2571DFF18;
  if (!qword_2571DFF18)
  {
    result = MEMORY[0x2426A62C4](&unk_242274AF4, &type metadata for InferenceError.InvalidClientDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF18);
  }
  return result;
}

unint64_t sub_2421C34A4()
{
  unint64_t result;

  result = qword_2571DFF20;
  if (!qword_2571DFF20)
  {
    result = MEMORY[0x2426A62C4](&unk_242274BAC, &type metadata for InferenceError.NotImplementedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF20);
  }
  return result;
}

unint64_t sub_2421C34E4()
{
  unint64_t result;

  result = qword_2571DFF28;
  if (!qword_2571DFF28)
  {
    result = MEMORY[0x2426A62C4](&unk_242274CB4, &type metadata for InferenceError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF28);
  }
  return result;
}

unint64_t sub_2421C3524()
{
  unint64_t result;

  result = qword_2571DFF30;
  if (!qword_2571DFF30)
  {
    result = MEMORY[0x2426A62C4](&unk_242274BD4, &type metadata for InferenceError.UnspecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF30);
  }
  return result;
}

unint64_t sub_2421C3564()
{
  unint64_t result;

  result = qword_2571DFF38;
  if (!qword_2571DFF38)
  {
    result = MEMORY[0x2426A62C4](&unk_242274BFC, &type metadata for InferenceError.UnspecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF38);
  }
  return result;
}

unint64_t sub_2421C35A4()
{
  unint64_t result;

  result = qword_2571DFF40;
  if (!qword_2571DFF40)
  {
    result = MEMORY[0x2426A62C4](&unk_242274B1C, &type metadata for InferenceError.NotImplementedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF40);
  }
  return result;
}

unint64_t sub_2421C35E4()
{
  unint64_t result;

  result = qword_2571DFF48;
  if (!qword_2571DFF48)
  {
    result = MEMORY[0x2426A62C4](&unk_242274B44, &type metadata for InferenceError.NotImplementedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF48);
  }
  return result;
}

unint64_t sub_2421C3624()
{
  unint64_t result;

  result = qword_2571DFF50;
  if (!qword_2571DFF50)
  {
    result = MEMORY[0x2426A62C4](&unk_242274A64, &type metadata for InferenceError.InvalidClientDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF50);
  }
  return result;
}

unint64_t sub_2421C3664()
{
  unint64_t result;

  result = qword_2571DFF58;
  if (!qword_2571DFF58)
  {
    result = MEMORY[0x2426A62C4](&unk_242274A8C, &type metadata for InferenceError.InvalidClientDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF58);
  }
  return result;
}

unint64_t sub_2421C36A4()
{
  unint64_t result;

  result = qword_2571DFF60;
  if (!qword_2571DFF60)
  {
    result = MEMORY[0x2426A62C4](&unk_2422749AC, &type metadata for InferenceError.UnsupportedRequestTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF60);
  }
  return result;
}

unint64_t sub_2421C36E4()
{
  unint64_t result;

  result = qword_2571DFF68;
  if (!qword_2571DFF68)
  {
    result = MEMORY[0x2426A62C4](&unk_2422749D4, &type metadata for InferenceError.UnsupportedRequestTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF68);
  }
  return result;
}

unint64_t sub_2421C3724()
{
  unint64_t result;

  result = qword_2571DFF70;
  if (!qword_2571DFF70)
  {
    result = MEMORY[0x2426A62C4](&unk_2422748F4, &type metadata for InferenceError.ResponseEncodingFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF70);
  }
  return result;
}

unint64_t sub_2421C3764()
{
  unint64_t result;

  result = qword_2571DFF78;
  if (!qword_2571DFF78)
  {
    result = MEMORY[0x2426A62C4](&unk_24227491C, &type metadata for InferenceError.ResponseEncodingFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF78);
  }
  return result;
}

unint64_t sub_2421C37A4()
{
  unint64_t result;

  result = qword_2571DFF80;
  if (!qword_2571DFF80)
  {
    result = MEMORY[0x2426A62C4](&unk_24227483C, &type metadata for InferenceError.AlreadyLoadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF80);
  }
  return result;
}

unint64_t sub_2421C37E4()
{
  unint64_t result;

  result = qword_2571DFF88;
  if (!qword_2571DFF88)
  {
    result = MEMORY[0x2426A62C4](&unk_242274864, &type metadata for InferenceError.AlreadyLoadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF88);
  }
  return result;
}

unint64_t sub_2421C3824()
{
  unint64_t result;

  result = qword_2571DFF90;
  if (!qword_2571DFF90)
  {
    result = MEMORY[0x2426A62C4](&unk_242274784, &type metadata for InferenceError.NotLoadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF90);
  }
  return result;
}

unint64_t sub_2421C3864()
{
  unint64_t result;

  result = qword_2571DFF98;
  if (!qword_2571DFF98)
  {
    result = MEMORY[0x2426A62C4](&unk_2422747AC, &type metadata for InferenceError.NotLoadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFF98);
  }
  return result;
}

unint64_t sub_2421C38A4()
{
  unint64_t result;

  result = qword_2571DFFA0;
  if (!qword_2571DFFA0)
  {
    result = MEMORY[0x2426A62C4](&unk_2422746CC, &type metadata for InferenceError.LoadFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFFA0);
  }
  return result;
}

unint64_t sub_2421C38E4()
{
  unint64_t result;

  result = qword_2571DFFA8;
  if (!qword_2571DFFA8)
  {
    result = MEMORY[0x2426A62C4](&unk_2422746F4, &type metadata for InferenceError.LoadFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFFA8);
  }
  return result;
}

unint64_t sub_2421C3924()
{
  unint64_t result;

  result = qword_2571DFFB0;
  if (!qword_2571DFFB0)
  {
    result = MEMORY[0x2426A62C4](&unk_242274614, &type metadata for InferenceError.InferenceFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFFB0);
  }
  return result;
}

unint64_t sub_2421C3964()
{
  unint64_t result;

  result = qword_2571DFFB8;
  if (!qword_2571DFFB8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227463C, &type metadata for InferenceError.InferenceFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFFB8);
  }
  return result;
}

unint64_t sub_2421C39A4()
{
  unint64_t result;

  result = qword_2571DFFC0;
  if (!qword_2571DFFC0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227455C, &type metadata for InferenceError.OperationNotAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFFC0);
  }
  return result;
}

unint64_t sub_2421C39E4()
{
  unint64_t result;

  result = qword_2571DFFC8;
  if (!qword_2571DFFC8)
  {
    result = MEMORY[0x2426A62C4](&unk_242274584, &type metadata for InferenceError.OperationNotAllowedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFFC8);
  }
  return result;
}

unint64_t sub_2421C3A24()
{
  unint64_t result;

  result = qword_2571DFFD0;
  if (!qword_2571DFFD0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227450C, &type metadata for InferenceError.OperationCancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFFD0);
  }
  return result;
}

unint64_t sub_2421C3A64()
{
  unint64_t result;

  result = qword_2571DFFD8;
  if (!qword_2571DFFD8)
  {
    result = MEMORY[0x2426A62C4](&unk_242274534, &type metadata for InferenceError.OperationCancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFFD8);
  }
  return result;
}

unint64_t sub_2421C3AA4()
{
  unint64_t result;

  result = qword_2571DFFE0;
  if (!qword_2571DFFE0)
  {
    result = MEMORY[0x2426A62C4](&unk_2422744BC, &type metadata for InferenceError.AssetVersionMismatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFFE0);
  }
  return result;
}

unint64_t sub_2421C3AE4()
{
  unint64_t result;

  result = qword_2571DFFE8;
  if (!qword_2571DFFE8)
  {
    result = MEMORY[0x2426A62C4](&unk_2422744E4, &type metadata for InferenceError.AssetVersionMismatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFFE8);
  }
  return result;
}

unint64_t sub_2421C3B24()
{
  unint64_t result;

  result = qword_2571DFFF0;
  if (!qword_2571DFFF0)
  {
    result = MEMORY[0x2426A62C4](&unk_242274404, &type metadata for InferenceError.StreamNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFFF0);
  }
  return result;
}

unint64_t sub_2421C3B64()
{
  unint64_t result;

  result = qword_2571DFFF8;
  if (!qword_2571DFFF8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227442C, &type metadata for InferenceError.StreamNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571DFFF8);
  }
  return result;
}

unint64_t sub_2421C3BA4()
{
  unint64_t result;

  result = qword_2571E0000;
  if (!qword_2571E0000)
  {
    result = MEMORY[0x2426A62C4](&unk_24227434C, &type metadata for InferenceError.RateLimitedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0000);
  }
  return result;
}

unint64_t sub_2421C3BE4()
{
  unint64_t result;

  result = qword_2571E0008;
  if (!qword_2571E0008)
  {
    result = MEMORY[0x2426A62C4](&unk_242274374, &type metadata for InferenceError.RateLimitedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0008);
  }
  return result;
}

unint64_t sub_2421C3C24()
{
  unint64_t result;

  result = qword_2571E0010;
  if (!qword_2571E0010)
  {
    result = MEMORY[0x2426A62C4](&unk_242274294, &type metadata for InferenceError.InternalErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0010);
  }
  return result;
}

unint64_t sub_2421C3C64()
{
  unint64_t result;

  result = qword_2571E0018;
  if (!qword_2571E0018)
  {
    result = MEMORY[0x2426A62C4](&unk_2422742BC, &type metadata for InferenceError.InternalErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0018);
  }
  return result;
}

unint64_t sub_2421C3CA4()
{
  unint64_t result;

  result = qword_2571E0020;
  if (!qword_2571E0020)
  {
    result = MEMORY[0x2426A62C4](&unk_2422741DC, &type metadata for InferenceError.NetworkErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0020);
  }
  return result;
}

unint64_t sub_2421C3CE4()
{
  unint64_t result;

  result = qword_2571E0028;
  if (!qword_2571E0028)
  {
    result = MEMORY[0x2426A62C4](&unk_242274204, &type metadata for InferenceError.NetworkErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0028);
  }
  return result;
}

unint64_t sub_2421C3D24()
{
  unint64_t result;

  result = qword_2571E0030;
  if (!qword_2571E0030)
  {
    result = MEMORY[0x2426A62C4](&unk_242274124, &type metadata for InferenceError.ResourcesBusyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0030);
  }
  return result;
}

unint64_t sub_2421C3D64()
{
  unint64_t result;

  result = qword_2571E0038;
  if (!qword_2571E0038)
  {
    result = MEMORY[0x2426A62C4](&unk_24227414C, &type metadata for InferenceError.ResourcesBusyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0038);
  }
  return result;
}

unint64_t sub_2421C3DA4()
{
  unint64_t result;

  result = qword_2571E0040;
  if (!qword_2571E0040)
  {
    result = MEMORY[0x2426A62C4](&unk_24227406C, &type metadata for InferenceError.UnspecifiedUnderlyingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0040);
  }
  return result;
}

unint64_t sub_2421C3DE4()
{
  unint64_t result;

  result = qword_2571E0048;
  if (!qword_2571E0048)
  {
    result = MEMORY[0x2426A62C4](&unk_242274094, &type metadata for InferenceError.UnspecifiedUnderlyingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0048);
  }
  return result;
}

unint64_t sub_2421C3E24()
{
  unint64_t result;

  result = qword_2571E0050;
  if (!qword_2571E0050)
  {
    result = MEMORY[0x2426A62C4](&unk_242273FB4, &type metadata for InferenceError.UnrecognizedUnderlyingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0050);
  }
  return result;
}

unint64_t sub_2421C3E64()
{
  unint64_t result;

  result = qword_2571E0058;
  if (!qword_2571E0058)
  {
    result = MEMORY[0x2426A62C4](&unk_242273FDC, &type metadata for InferenceError.UnrecognizedUnderlyingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0058);
  }
  return result;
}

unint64_t sub_2421C3EA4()
{
  unint64_t result;

  result = qword_2571E0060;
  if (!qword_2571E0060)
  {
    result = MEMORY[0x2426A62C4](&unk_242273EFC, &type metadata for InferenceError.XpcErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0060);
  }
  return result;
}

unint64_t sub_2421C3EE4()
{
  unint64_t result;

  result = qword_2571E0068;
  if (!qword_2571E0068)
  {
    result = MEMORY[0x2426A62C4](&unk_242273F24, &type metadata for InferenceError.XpcErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0068);
  }
  return result;
}

unint64_t sub_2421C3F24()
{
  unint64_t result;

  result = qword_2571E0070;
  if (!qword_2571E0070)
  {
    result = MEMORY[0x2426A62C4](&unk_242274C24, &type metadata for InferenceError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0070);
  }
  return result;
}

unint64_t sub_2421C3F64()
{
  unint64_t result;

  result = qword_2571E0078;
  if (!qword_2571E0078)
  {
    result = MEMORY[0x2426A62C4](&unk_242274C4C, &type metadata for InferenceError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0078);
  }
  return result;
}

unint64_t sub_2421C3FA4()
{
  unint64_t result;

  result = qword_2571E0080;
  if (!qword_2571E0080)
  {
    result = MEMORY[0x2426A62C4](&unk_242273E44, &type metadata for InferenceError.Context.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0080);
  }
  return result;
}

unint64_t sub_2421C3FE4()
{
  unint64_t result;

  result = qword_2571E0088;
  if (!qword_2571E0088)
  {
    result = MEMORY[0x2426A62C4](&unk_242273E6C, &type metadata for InferenceError.Context.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0088);
  }
  return result;
}

uint64_t sub_2421C4020(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_BYTE *)(a2 + 48) = *((_BYTE *)a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_2421C4044(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

unint64_t OUTLINED_FUNCTION_0_0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 - 72);
  *(_QWORD *)(v1 - 144) = *(_QWORD *)(v1 - 152);
  *(_QWORD *)(v1 - 136) = v2;
  v3 = *(_QWORD *)(v1 - 200);
  *(_QWORD *)(v1 - 128) = *(_QWORD *)(v1 - 216);
  *(_QWORD *)(v1 - 120) = v3;
  v4 = *(_QWORD *)(v1 - 192);
  *(_QWORD *)(v1 - 112) = *(_QWORD *)(v1 - 208);
  *(_QWORD *)(v1 - 104) = v4;
  *(_BYTE *)(v1 - 96) = v0;
  return sub_2421C20D4();
}

uint64_t OUTLINED_FUNCTION_1_0()
{
  return sub_242272AF4();
}

void OUTLINED_FUNCTION_3_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_4_0()
{
  return sub_242272A4C();
}

uint64_t OUTLINED_FUNCTION_5_0()
{
  return sub_242272A4C();
}

uint64_t OUTLINED_FUNCTION_6_0()
{
  return sub_242272AAC();
}

uint64_t OUTLINED_FUNCTION_7_0()
{
  return sub_242272B48();
}

uint64_t OUTLINED_FUNCTION_8_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_10_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

void OUTLINED_FUNCTION_13_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_14_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_15_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_17_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_18_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_19_0()
{
  return sub_242272AAC();
}

uint64_t OUTLINED_FUNCTION_20_0()
{
  return InferenceError.caseName.getter();
}

uint64_t OUTLINED_FUNCTION_21_0()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_22_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 624) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_24_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  return sub_2421C1F98(a1, 0, v6, v7, a5, a6, 0x88u);
}

uint64_t OUTLINED_FUNCTION_25_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_26_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  return sub_2421C1F4C(v18, v20, a15, v19, v17, v16, v15);
}

uint64_t OUTLINED_FUNCTION_27_0()
{
  return sub_242272AF4();
}

uint64_t OUTLINED_FUNCTION_28_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  return sub_2421C1F4C(a18, a19, v22, v21, a16, v20, v19);
}

uint64_t OUTLINED_FUNCTION_29_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v5;
  uint64_t v6;

  return sub_2421C1F4C(a1, a2, a3, a4, a5, v6, v5);
}

uint64_t OUTLINED_FUNCTION_30_0()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_31_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 256) + 8))(a1, v2);
}

uint64_t OUTLINED_FUNCTION_34_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_35_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned __int8 v6;

  return sub_2421C1F4C(a1, a2, a3, a4, a5, a6, v6);
}

uint64_t OUTLINED_FUNCTION_36_0()
{
  return sub_242272A7C();
}

void OUTLINED_FUNCTION_37_0(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_38_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_39_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned __int8 v6;

  return sub_2421C1F98(a1, a2, a3, a4, a5, a6, v6);
}

uint64_t OUTLINED_FUNCTION_40_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_44_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_46_0()
{
  JUMPOUT(0x2426A61F8);
}

uint64_t OUTLINED_FUNCTION_47_0()
{
  return sub_242272C20();
}

uint64_t OUTLINED_FUNCTION_48_0()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_50_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return a18;
}

uint64_t OUTLINED_FUNCTION_52_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_53_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned __int8 v6;

  return sub_2421C1F98(a1, a2, a3, a4, a5, a6, v6);
}

uint64_t OUTLINED_FUNCTION_54_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_55_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_56_0()
{
  return sub_242272A7C();
}

uint64_t OUTLINED_FUNCTION_57_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 256));
}

unint64_t OUTLINED_FUNCTION_59_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 11;
  return sub_2421C223C();
}

unint64_t OUTLINED_FUNCTION_60_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 10;
  return sub_2421C2278();
}

unint64_t OUTLINED_FUNCTION_61_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 16;
  return sub_2421C2110();
}

unint64_t OUTLINED_FUNCTION_62()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 13;
  return sub_2421C21C4();
}

unint64_t OUTLINED_FUNCTION_63_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 9;
  return sub_2421C22B4();
}

unint64_t OUTLINED_FUNCTION_64_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 7;
  return sub_2421C232C();
}

unint64_t OUTLINED_FUNCTION_65_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 6;
  return sub_2421C2368();
}

uint64_t OUTLINED_FUNCTION_68_0()
{
  return sub_242272B18();
}

unint64_t OUTLINED_FUNCTION_69_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 19;
  return sub_2421C2020();
}

unint64_t OUTLINED_FUNCTION_71()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 18;
  return sub_2421C205C();
}

unint64_t OUTLINED_FUNCTION_72_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 17;
  return sub_2421C2098();
}

unint64_t OUTLINED_FUNCTION_73_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 15;
  return sub_2421C214C();
}

unint64_t OUTLINED_FUNCTION_74_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 14;
  return sub_2421C2188();
}

unint64_t OUTLINED_FUNCTION_75_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 12;
  return sub_2421C2200();
}

unint64_t OUTLINED_FUNCTION_76_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 4;
  return sub_2421C23E0();
}

unint64_t OUTLINED_FUNCTION_77_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 8;
  return sub_2421C22F0();
}

uint64_t OUTLINED_FUNCTION_78_0()
{
  return sub_2422726F8();
}

unint64_t OUTLINED_FUNCTION_79_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 5;
  return sub_2421C23A4();
}

uint64_t OUTLINED_FUNCTION_80_0()
{
  return sub_242272CD4();
}

unint64_t OUTLINED_FUNCTION_81_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 3;
  return sub_2421C241C();
}

uint64_t OUTLINED_FUNCTION_82_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  return static InferenceError.Context.== infix(_:_:)((uint64_t)&a27, (uint64_t)&a20);
}

unint64_t OUTLINED_FUNCTION_83_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 2;
  return sub_2421C2458();
}

unint64_t OUTLINED_FUNCTION_84_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 1;
  return sub_2421C2494();
}

uint64_t OUTLINED_FUNCTION_86_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_87()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1Tm(v0);
}

uint64_t loadAssetBundle(_:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_12_1(a1, a2);
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421C4694()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_1();
  v0[15] = OUTLINED_FUNCTION_14_1();
  v0[16] = OUTLINED_FUNCTION_93("Loading asset bundle", 20);
  if (qword_2543AA2D0 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  v0[17] = v1;
  OUTLINED_FUNCTION_16_1(v1, (uint64_t)sub_2421C4754);
  return OUTLINED_FUNCTION_6_1(v3, v2, 0);
}

uint64_t sub_2421C4754()
{
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t loadAssetBundleToDynamicMode(_:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_12_1(a1, a2);
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421C4820()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_1();
  v0[15] = OUTLINED_FUNCTION_14_1();
  v0[16] = OUTLINED_FUNCTION_93("Loading asset bundle to dynamic mode", 36);
  if (qword_2543AA2D0 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  v0[17] = v1;
  OUTLINED_FUNCTION_16_1(v1, (uint64_t)sub_2421C4754);
  return OUTLINED_FUNCTION_6_1(v3, v2, 1);
}

uint64_t holdAssetBundle(_:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_12_1(a1, a2);
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421C4930()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_1();
  v0[15] = OUTLINED_FUNCTION_14_1();
  v0[16] = OUTLINED_FUNCTION_93("Holding asset bundle", 20);
  if (qword_2543AA2D0 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  v0[17] = v1;
  OUTLINED_FUNCTION_16_1(v1, (uint64_t)sub_2421C49F4);
  return ModelXPCSender.holdAssetBundle(_:)(v3, v2);
}

uint64_t sub_2421C49F4()
{
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421C4A70()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_28();
  return OUTLINED_FUNCTION_1_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421C4ADC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_28();
  return OUTLINED_FUNCTION_1_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t forceAssetVersionSwitch()()
{
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421C4B98()
{
  _QWORD *v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_4_1();
  v0[13] = OUTLINED_FUNCTION_14_1();
  v0[14] = OUTLINED_FUNCTION_93("Forcing asset version switch", 28);
  if (qword_2543AA2D0 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  v0[15] = v1;
  *v1 = v0;
  v1[1] = sub_2421C4C5C;
  return ModelXPCSender.forceAssetVersionSwitch()();
}

uint64_t sub_2421C4C5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421C4CF8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_28();
  return OUTLINED_FUNCTION_1_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421C4D64()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_28();
  return OUTLINED_FUNCTION_1_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421C4DD0()
{
  OUTLINED_FUNCTION_13_1();
  return OUTLINED_FUNCTION_7_1();
}

uint64_t sub_2421C4E14()
{
  OUTLINED_FUNCTION_13_1();
  return OUTLINED_FUNCTION_8_1();
}

uint64_t OUTLINED_FUNCTION_1_1(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_2_1()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 144) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_3_1()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_4_1()
{
  return type metadata accessor for _OSActivity();
}

uint64_t OUTLINED_FUNCTION_6_1(uint64_t a1, uint64_t a2, char a3)
{
  return ModelXPCSender.loadAssetBundle(_:dynamicMode:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_7_1()
{
  return sub_2421C4A70();
}

uint64_t OUTLINED_FUNCTION_8_1()
{
  return sub_2421C4ADC();
}

uint64_t OUTLINED_FUNCTION_12_1(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = result;
  *(_QWORD *)(v2 + 112) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  return swift_initStackObject();
}

void OUTLINED_FUNCTION_15_1()
{
  os_activity_scope_state_s *v0;

  os_activity_scope_leave(v0);
}

_QWORD *OUTLINED_FUNCTION_16_1@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t sub_2421C4F14()
{
  OUTLINED_FUNCTION_26_1();
  return swift_retain();
}

void sub_2421C4F40(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_2571E00D0;
  OUTLINED_FUNCTION_26_1();
  sub_2421C70BC(v3, a1);
  OUTLINED_FUNCTION_20_1();
}

void sub_2421C4F80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + qword_2571E00D0;
  OUTLINED_FUNCTION_4();
  sub_2421C7074(a1, v3);
  swift_endAccess();
  OUTLINED_FUNCTION_20_1();
}

uint64_t sub_2421C4FC8()
{
  return OUTLINED_FUNCTION_16_2(qword_2571E00E0);
}

uint64_t sub_2421C4FEC(uint64_t a1, uint64_t a2)
{
  return sub_2421C5038(a1, a2, &qword_2571E00E0, (uint64_t (*)(uint64_t, uint64_t))sub_2421C71E4);
}

uint64_t sub_2421C5000()
{
  return OUTLINED_FUNCTION_16_2(qword_2571E00E8);
}

uint64_t sub_2421C5024(uint64_t a1, uint64_t a2)
{
  return sub_2421C5038(a1, a2, qword_2571E00E8, (uint64_t (*)(uint64_t, uint64_t))sub_2421C6244);
}

uint64_t sub_2421C5038(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = (uint64_t *)(v4 + *a3);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return a4(v6, v7);
}

uint64_t *sub_2421C5054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_allocObject();
  return sub_2421C50BC(a1, a2, a3, a4, a5);
}

uint64_t *sub_2421C50BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v10 = *v5;
  swift_defaultActor_initialize();
  v11 = (uint64_t)v5 + qword_2571E00D0;
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_2571E01A0);
  __swift_storeEnumTagSinglePayload(v11, 1, 1, v12);
  v13 = (uint64_t *)((char *)v5 + qword_2571E00E0);
  *v13 = 0;
  v13[1] = 0;
  v14 = (uint64_t *)((char *)v5 + qword_2571E00E8);
  *v14 = 0;
  v14[1] = 0;
  type metadata accessor for BufferedStreamSequence.BufferValue(0, *(_QWORD *)(v10 + 80), v15, v16);
  v17 = sub_2422727B8();
  MEMORY[0x2426A62C4](MEMORY[0x24BEE12E0], v17);
  v5[14] = sub_242272404();
  v18 = *v13;
  *v13 = a2;
  v13[1] = a3;
  sub_2421C6244(v18);
  v19 = *v14;
  *v14 = a4;
  v14[1] = a5;
  sub_2421C6244(v19);
  return v5;
}

uint64_t *BufferedStreamSequence.__allocating_init(onFirst:onCompletion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  type metadata accessor for BufferedStreamSequence.BufferValue(0, *(_QWORD *)(v4 + 80), a3, a4);
  v9 = sub_2422727AC();
  return sub_2421C5054(v9, a1, a2, a3, a4);
}

uint64_t *BufferedStreamSequence.__allocating_init(error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;

  type metadata accessor for BufferedStreamSequence.BufferValue(255, *(_QWORD *)(v4 + 80), a3, a4);
  sub_242272B90();
  swift_allocObject();
  v6 = sub_2422727A0();
  *v7 = a1;
  OUTLINED_FUNCTION_22_1();
  sub_2422727B8();
  return sub_2421C5054(v6, 0, 0, 0, 0);
}

uint64_t OUTLINED_FUNCTION_57_1()
{
  return swift_retain();
}

void sub_2421C52D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E00D8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v14 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2571E01A0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_4();
  type metadata accessor for BufferedStreamSequence.BufferValue(255, *(_QWORD *)(v1 + 80), v12, v13);
  sub_2422723F8();
  sub_2422723D4();
  swift_endAccess();
  sub_2421C4F40((uint64_t)v7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
  {
    sub_2421C6204((uint64_t)v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_2422727E8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v8);
  sub_2421C4F80((uint64_t)v5);
}

void sub_2421C5464(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2421C5000();
  if (v5)
  {
    v7 = v5;
    v8 = v6;
    sub_2421C5024(0, 0);
    v9 = sub_242272848();
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v9);
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v7;
    v10[5] = v8;
    v10[6] = a1;
    MEMORY[0x2426A61F8](a1);
    sub_2421B7ACC();
    swift_release();
  }
  OUTLINED_FUNCTION_15_2();
}

uint64_t sub_2421C553C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v10 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v8;
  *v8 = v6;
  v8[1] = sub_2421C71E8;
  return v10(a6);
}

uint64_t sub_2421C55A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = OUTLINED_FUNCTION_5_1(a1, a2, a3, a4);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - v6;
  sub_2421C5464(0);
  swift_storeEnumTagMultiPayload();
  sub_2421C52D0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2421C5624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_12_2(a1, a2, a3, a4);
  *(_QWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 56) = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421C565C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t (*v8)(_QWORD);

  v1 = sub_2421C4FC8();
  *(_QWORD *)(v0 + 64) = v1;
  if (v1)
  {
    v3 = (int *)v1;
    *(_QWORD *)(v0 + 72) = v2;
    sub_2421C4FEC(0, 0);
    v8 = (uint64_t (*)(_QWORD))((char *)v3 + *v3);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v4;
    *v4 = v0;
    v4[1] = sub_2421C5750;
    return v8(*(_QWORD *)(v0 + 16));
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 16))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 16));
    OUTLINED_FUNCTION_29_1();
    swift_storeEnumTagMultiPayload();
    sub_2421C52D0();
    v6 = OUTLINED_FUNCTION_29_1();
    v7(v6);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2421C5750()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421C5788()
{
  uint64_t v0;

  sub_2421C6244(*(_QWORD *)(v0 + 64));
  swift_task_dealloc();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

void sub_2421C57B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  v5 = OUTLINED_FUNCTION_5_1(a1, a2, a3, a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v9 - v7);
  sub_2421C5464(a1);
  *v8 = a1;
  OUTLINED_FUNCTION_22_1();
  MEMORY[0x2426A61F8](a1);
  sub_2421C52D0();
  (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  OUTLINED_FUNCTION_15_2();
}

uint64_t sub_2421C5840(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v5 + 160) = a2;
  *(_QWORD *)(v5 + 56) = a1;
  *(_QWORD *)(v5 + 64) = v4;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  *(_QWORD *)(v5 + 72) = v6;
  v7 = type metadata accessor for BufferedStreamSequence.BufferValue(0, v6, a3, a4);
  *(_QWORD *)(v5 + 80) = v7;
  *(_QWORD *)(v5 + 88) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 96) = swift_task_alloc();
  *(_QWORD *)(v5 + 104) = swift_task_alloc();
  v8 = sub_242272938();
  *(_QWORD *)(v5 + 112) = v8;
  *(_QWORD *)(v5 + 120) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 128) = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_94();
  return swift_task_switch();
}

uint64_t sub_2421C58E8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;

  *(_QWORD *)(v0 + 40) = OUTLINED_FUNCTION_23_1();
  v1 = sub_2422723F8();
  *(_QWORD *)(v0 + 136) = v1;
  *(_QWORD *)(v0 + 144) = MEMORY[0x2426A62C4](MEMORY[0x24BE18D68], v1);
  v2 = sub_2422728F0();
  swift_release();
  if ((v2 & 1) != 0)
  {
    v5 = type metadata accessor for BufferedStreamSequence(255, *(_QWORD *)(v0 + 72), v3, v4);
    MEMORY[0x2426A62C4](&protocol conformance descriptor for BufferedStreamSequence<A>, v5);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v6;
    *v6 = v0;
    v6[1] = sub_2421C5B48;
    return sub_242272B9C();
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_23_1();
    sub_2422728E4();
    swift_release();
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v8, 1, v9);
    v11 = *(_QWORD *)(v0 + 128);
    if (EnumTagSinglePayload == 1)
    {
      OUTLINED_FUNCTION_14_2(v11);
      return OUTLINED_FUNCTION_27_1();
    }
    else
    {
      v12 = *(unsigned __int8 *)(v0 + 160);
      OUTLINED_FUNCTION_17_1(v11);
      if (v12 == 1)
      {
        v13 = *(_QWORD *)(v0 + 104);
        v14 = *(_QWORD *)(v0 + 80);
        v15 = *(_QWORD *)(v0 + 88);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v13, *(_QWORD *)(v0 + 56), v14);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
        if (!EnumCaseMultiPayload)
        {
          OUTLINED_FUNCTION_3_2();
          OUTLINED_FUNCTION_18_1();
          OUTLINED_FUNCTION_24_1();
          swift_endAccess();
        }
      }
      OUTLINED_FUNCTION_28_1();
      OUTLINED_FUNCTION_16();
      OUTLINED_FUNCTION_57();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_2421C5B48()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421C5B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int EnumTagSinglePayload;
  uint64_t v4;
  int v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  void (*v9)(uint64_t);
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_23_1();
  sub_2422728E4();
  swift_release();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v2);
  v4 = *(_QWORD *)(v0 + 128);
  if (EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_14_2(v4);
    return OUTLINED_FUNCTION_27_1();
  }
  else
  {
    v6 = *(unsigned __int8 *)(v0 + 160);
    OUTLINED_FUNCTION_17_1(v4);
    if (v6 == 1)
    {
      v7 = *(_QWORD *)(v0 + 88);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
      OUTLINED_FUNCTION_29_1();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v9 = *(void (**)(uint64_t))(v7 + 8);
      v10 = OUTLINED_FUNCTION_29_1();
      v9(v10);
      if (!EnumCaseMultiPayload)
      {
        OUTLINED_FUNCTION_3_2();
        OUTLINED_FUNCTION_18_1();
        OUTLINED_FUNCTION_24_1();
        swift_endAccess();
      }
    }
    OUTLINED_FUNCTION_28_1();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_57();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

void sub_2421C5CE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E00D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_2571E01A0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v4, a1, v5);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v5);
  sub_2421C4F80((uint64_t)v4);
}

uint64_t sub_2421C5D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_12_2(a1, a2, a3, a4);
  *(_QWORD *)(v4 + 48) = OUTLINED_FUNCTION_17();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 56) = v5;
  v6 = OUTLINED_FUNCTION_9_1(v5);
  return OUTLINED_FUNCTION_8_2(v6, 1, v7, v8);
}

uint64_t sub_2421C5DD8()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421C5E10()
{
  _QWORD *v0;
  uint64_t v1;
  int EnumCaseMultiPayload;
  uint64_t (*v3)(void);
  uint64_t v4;

  v1 = v0[6];
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0[4] - 8) + 32))(v0[2], v1);
    v4 = 0;
LABEL_6:
    __swift_storeEnumTagSinglePayload(v0[2], v4, 1, v0[4]);
    OUTLINED_FUNCTION_57();
    v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  if (EnumCaseMultiPayload != 1)
  {
    v4 = 1;
    goto LABEL_6;
  }
  swift_willThrow();
  OUTLINED_FUNCTION_57();
  v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_2421C5EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[2] = v4;
  v6 = OUTLINED_FUNCTION_5_1(a1, a2, a3, a4);
  v5[3] = v6;
  v5[4] = *(_QWORD *)(v6 - 8);
  v5[5] = OUTLINED_FUNCTION_17();
  v7 = (_QWORD *)swift_task_alloc();
  v5[6] = v7;
  v8 = OUTLINED_FUNCTION_9_1(v7);
  return OUTLINED_FUNCTION_8_2(v8, 0, v9, v10);
}

uint64_t sub_2421C5F10()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421C5F48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(uint64_t **)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 24);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v3 = *v1;
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v0 + 32) + 8))(v1, v2);
    v3 = 0;
  }
  OUTLINED_FUNCTION_16();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t BufferedStreamSequence.deinit()
{
  uint64_t v0;

  swift_release();
  sub_2421C6204(v0 + qword_2571E00D0);
  OUTLINED_FUNCTION_25_1(qword_2571E00E0);
  OUTLINED_FUNCTION_25_1(qword_2571E00E8[0]);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t BufferedStreamSequence.__deallocating_deinit()
{
  BufferedStreamSequence.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t BufferedStreamSequence.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2421C6028()
{
  return BufferedStreamSequence.unownedExecutor.getter();
}

uint64_t sub_2421C6040@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  OUTLINED_FUNCTION_57_1();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_2421C6070(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421C60C4;
  return sub_2421C5D88(a1, v4, v5, v6);
}

uint64_t sub_2421C60C4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421C60F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 24) = a4;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 32) = v7;
  type metadata accessor for BufferedStreamSequence(0, *(_QWORD *)(a5 + 80), v8, v9);
  *v7 = v5;
  v7[1] = sub_2421C619C;
  return sub_242272818();
}

uint64_t sub_2421C619C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    **(_QWORD **)(v2 + 24) = *(_QWORD *)(v2 + 16);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t type metadata accessor for BufferedStreamSequence.BufferValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BufferedStreamSequence.BufferValue);
}

uint64_t sub_2421C6204(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E00D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2421C6244(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

void sub_2421C6254()
{
  JUMPOUT(0x2426A62C4);
}

uint64_t sub_2421C6264()
{
  return MEMORY[0x24BEE3F20];
}

void sub_2421C6274()
{
  unint64_t v0;

  sub_2421C6478();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

uint64_t type metadata accessor for BufferedStreamSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BufferedStreamSequence);
}

uint64_t method lookup function for BufferedStreamSequence()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BufferedStreamSequence.makeAsyncIterator()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of BufferedStreamSequence.end()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of BufferedStreamSequence.pushElement(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v3 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421C60C4;
  return v5(a1);
}

uint64_t dispatch thunk of BufferedStreamSequence.pushError(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of BufferedStreamSequence.next()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_9_1(v1);
  return v4(v2);
}

uint64_t dispatch thunk of BufferedStreamSequence.immediateError.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 296) + *(_QWORD *)(*(_QWORD *)v0 + 296));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_2421C6434;
  return OUTLINED_FUNCTION_8(v4);
}

uint64_t sub_2421C6434(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_3();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

void sub_2421C6478()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571E0198)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2571E01A0);
    v0 = sub_242272938();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571E0198);
  }
}

uint64_t sub_2421C64D0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2421C64D8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_2421C6548(_QWORD *__dst, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  v3 = __dst;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X14 }
    }
    if (v9 == 1)
    {
      v11 = *a2;
      MEMORY[0x2426A61F8](*a2);
      *v3 = v11;
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(_QWORD *))(v4 + 16))(__dst);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

void sub_2421C6680(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *((unsigned __int8 *)a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)

    else
      (*(void (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    ((void (*)(void))((char *)&loc_2421C66C8 + 4 * byte_2422753C5[v5]))();
  }
}

_BYTE *sub_2421C6728(_BYTE *__dst, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    v8 = *a2;
    MEMORY[0x2426A61F8](*a2);
    *(_QWORD *)__dst = v8;
    __dst[v5] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *))(v4 + 16))(__dst);
    __dst[v5] = 0;
  }
  return __dst;
}

id *sub_2421C6820(id *__dst, id *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  id v12;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)__src + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      v12 = *__src;
      MEMORY[0x2426A61F8](v12);
      *__dst = v12;
      *((_BYTE *)__dst + v7) = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 0;
    }
  }
  return __dst;
}

_BYTE *sub_2421C69CC(_BYTE *__dst, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *(_QWORD *)__dst = *a2;
    __dst[v5] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *))(v4 + 32))(__dst);
    __dst[v5] = 0;
  }
  return __dst;
}

id *sub_2421C6AB4(id *__dst, id *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)__src + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *__dst = *__src;
      *((_BYTE *)__dst + v7) = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 0;
    }
  }
  return __dst;
}

uint64_t sub_2421C6C58(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_2421C6D1C + 4 * byte_2422753E8[(v4 - 1)]))();
}

void sub_2421C6D68(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    v8 = 0;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v9 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_2421C6F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_2421C6F54 + 4 * byte_2422753F6[v3]))();
}

void sub_2421C6F9C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_2421C7064(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_2421C7074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E00D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2421C70BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E00D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2421C7104(uint64_t a1)
{
  sub_2421C5CE0(a1);
}

uint64_t sub_2421C710C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2421C7140()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  v8 = OUTLINED_FUNCTION_9_1(v7);
  return sub_2421C553C(v8, v2, v3, v4, v5, v6);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2426A6240](a1, v6, a5);
}

uint64_t OUTLINED_FUNCTION_3_2()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_5_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for BufferedStreamSequence.BufferValue(0, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
}

uint64_t OUTLINED_FUNCTION_8_2(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_2421C5840(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_9_1(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_12_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;

  v5[2] = a1;
  v5[3] = v4;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v5[4] = v6;
  result = type metadata accessor for BufferedStreamSequence.BufferValue(0, v6, a3, a4);
  v5[5] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 120) + 8))(a1, *(_QWORD *)(v1 + 112));
}

uint64_t OUTLINED_FUNCTION_16_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + a1);
  sub_2421C7064(v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_17_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 32))(*(_QWORD *)(v2 + 56), a1);
}

uint64_t OUTLINED_FUNCTION_18_1()
{
  return sub_2422723BC();
}

uint64_t OUTLINED_FUNCTION_22_1()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_23_1()
{
  return sub_2421C4F14();
}

uint64_t OUTLINED_FUNCTION_24_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_25_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2421C6244(*(_QWORD *)(v1 + a1));
}

uint64_t OUTLINED_FUNCTION_26_1()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_27_1()
{
  return sub_242272A10();
}

uint64_t OUTLINED_FUNCTION_28_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_29_1()
{
  uint64_t v0;

  return v0;
}

ModelManagerServices::BuiltInInferenceProvider_optional __swiftcall BuiltInInferenceProvider.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ModelManagerServices::BuiltInInferenceProvider_optional result;
  char v5;

  v2 = v1;
  v3 = sub_242272A34();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static BuiltInInferenceProvider.allCases.getter()
{
  return &unk_251338A00;
}

unint64_t BuiltInInferenceProvider.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001BLL;
  else
    return 0xD00000000000001ALL;
}

void sub_2421C73F8(char *a1, char *a2)
{
  sub_2421C7C9C(*a1, *a2);
}

ModelManagerServices::BuiltInInferenceProvider_optional sub_2421C7404(Swift::String *a1)
{
  return BuiltInInferenceProvider.init(rawValue:)(*a1);
}

unint64_t sub_2421C7410@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = BuiltInInferenceProvider.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_2421C7438()
{
  unint64_t result;

  result = qword_2571E0238;
  if (!qword_2571E0238)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for BuiltInInferenceProvider, &type metadata for BuiltInInferenceProvider);
    atomic_store(result, (unint64_t *)&qword_2571E0238);
  }
  return result;
}

void sub_2421C7474()
{
  sub_24225EC9C();
}

uint64_t sub_2421C747C()
{
  return sub_2421C7EF8();
}

void sub_2421C7484()
{
  sub_24225EEBC();
}

uint64_t sub_2421C748C()
{
  sub_2421C76E0();
  return sub_242272764();
}

uint64_t sub_2421C74E8()
{
  sub_2421C76E0();
  return sub_24227274C();
}

unint64_t sub_2421C7538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2571E0240;
  if (!qword_2571E0240)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571E0248);
    result = MEMORY[0x2426A62C4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2571E0240);
  }
  return result;
}

void sub_2421C757C(_QWORD *a1@<X8>)
{
  *a1 = &unk_251338A00;
}

uint64_t getEnumTagSinglePayload for BuiltInInferenceProvider(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BuiltInInferenceProvider(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2421C7660 + 4 * byte_242275565[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2421C7694 + 4 * byte_242275560[v4]))();
}

uint64_t sub_2421C7694(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421C769C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2421C76A4);
  return result;
}

uint64_t sub_2421C76B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2421C76B8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2421C76BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421C76C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BuiltInInferenceProvider()
{
  return &type metadata for BuiltInInferenceProvider;
}

unint64_t sub_2421C76E0()
{
  unint64_t result;

  result = qword_2571E0250;
  if (!qword_2571E0250)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for BuiltInInferenceProvider, &type metadata for BuiltInInferenceProvider);
    atomic_store(result, (unint64_t *)&qword_2571E0250);
  }
  return result;
}

uint64_t sub_2421C771C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[18] = v4;
  v5[19] = a4;
  v5[17] = a1;
  if (a2)
  {
    swift_getObjectType();
    v6 = sub_2422727D0();
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v5[20] = v6;
  v5[21] = v8;
  return swift_task_switch();
}

uint64_t sub_2421C7794()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v1;
  *v1 = v0;
  v1[1] = sub_2421C77E8;
  return sub_2421CC410(*(_QWORD *)(v0 + 136));
}

uint64_t sub_2421C77E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_70_1();
  v3 = *v2;
  *v4 = v3;
  *(_QWORD *)(v0 + 184) = v1;
  swift_task_dealloc();
  if (v1)
    return OUTLINED_FUNCTION_19_1();
  else
    return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_2421C7840()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  __int128 v3;
  char v4;
  __int128 v5;
  __int128 v6;
  uint64_t (*v7)(void);

  v1 = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v0 + 184);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA5C8);
  swift_dynamicCast();
  v2 = *(_BYTE *)(v0 + 64);
  v3 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 72) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 88) = v3;
  *(_OWORD *)(v0 + 104) = *(_OWORD *)(v0 + 48);
  *(_BYTE *)(v0 + 120) = v2;
  sub_2421C2700();
  swift_willThrowTypedImpl();
  v4 = *(_BYTE *)(v0 + 64);
  v5 = *(_OWORD *)(v0 + 32);
  v6 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = v5;
  *(_OWORD *)(v1 + 32) = v6;
  *(_BYTE *)(v1 + 48) = v4;
  v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_94_0();
  return OUTLINED_FUNCTION_7_2(v7);
}

uint64_t sub_2421C78F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v5;

  v3[3] = a2;
  v3[4] = a3;
  v5 = (_QWORD *)swift_task_alloc();
  v3[5] = v5;
  *v5 = v3;
  v5[1] = sub_2421C7950;
  return ResponseIterator.next()(a1);
}

uint64_t sub_2421C7950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_70_1();
  v3 = *v2;
  *v4 = v3;
  *(_QWORD *)(v0 + 48) = v1;
  swift_task_dealloc();
  if (!v1)
    return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v3 + 8));
  if (*(_QWORD *)(v0 + 24))
  {
    swift_getObjectType();
    sub_2422727D0();
  }
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_2421C79D8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA5C8);
  swift_willThrowTypedImpl();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

void sub_2421C7A28(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2421C7A74(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2421C7AD4 + 4 * byte_2422756D4[a2]))(1701736302);
}

void sub_2421C7AD4(uint64_t a1)
{
  uint64_t v1;

  if (a1 != 1701736302 || v1 != 0xE400000000000000)
    OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_14();
}

void sub_2421C7B4C()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;

  OUTLINED_FUNCTION_104();
  v2 = v2 && v0 == v1;
  if (!v2)
    OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_14();
}

void sub_2421C7BAC()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;

  OUTLINED_FUNCTION_104();
  v2 = v2 && v0 == v1;
  if (!v2)
    OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_14();
}

void sub_2421C7C0C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x614364616F6C6E75;
  else
    v3 = 0x647261646E617473;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xEC00000064656863;
  if ((a2 & 1) != 0)
    v5 = 0x614364616F6C6E75;
  else
    v5 = 0x647261646E617473;
  if ((a2 & 1) != 0)
    v6 = 0xEC00000064656863;
  else
    v6 = 0xE800000000000000;
  if (v3 != v5 || v4 != v6)
    OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_14();
}

void sub_2421C7C9C(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v2 = 0xD00000000000001BLL;
  v3 = 0x8000000242282DB0;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x8000000242282DD0;
    else
      v4 = 0x8000000242282DF0;
    v5 = 0xD00000000000001BLL;
  }
  else
  {
    v5 = 0xD00000000000001ALL;
    v4 = 0x8000000242282DB0;
  }
  if (a2)
  {
    if (a2 == 1)
      v3 = 0x8000000242282DD0;
    else
      v3 = 0x8000000242282DF0;
  }
  else
  {
    v2 = 0xD00000000000001ALL;
  }
  if (v5 != v2 || v4 != v3)
    OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_14();
}

BOOL sub_2421C7D70(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void sub_2421C7D7C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2421C7DC0()
{
  OUTLINED_FUNCTION_38_1();
  return OUTLINED_FUNCTION_6_2();
}

uint64_t sub_2421C7E10()
{
  OUTLINED_FUNCTION_38_1();
  return OUTLINED_FUNCTION_6_2();
}

uint64_t sub_2421C7E48()
{
  OUTLINED_FUNCTION_38_1();
  return OUTLINED_FUNCTION_6_2();
}

uint64_t sub_2421C7E80()
{
  OUTLINED_FUNCTION_38_1();
  return OUTLINED_FUNCTION_6_2();
}

void sub_2421C7ED8()
{
  sub_242272CE0();
  OUTLINED_FUNCTION_34();
}

uint64_t sub_2421C7EF8()
{
  OUTLINED_FUNCTION_38_1();
  return OUTLINED_FUNCTION_6_2();
}

void sub_2421C7F68()
{
  sub_242272CF8();
  OUTLINED_FUNCTION_34();
}

uint64_t sub_2421C7F88()
{
  return sub_2422726EC();
}

void InferenceProviderRequestConfiguration.requestLoggingIdentifier.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

uint64_t InferenceProviderRequestConfiguration.assetIdentifiers.getter()
{
  return sub_242272644();
}

uint64_t InferenceProviderRequestConfiguration.requestUUID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_21();
  v0 = OUTLINED_FUNCTION_56();
  return OUTLINED_FUNCTION_55(v0, v1, v2, v3);
}

uint64_t type metadata accessor for InferenceProviderRequestConfiguration(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2571E03E0);
}

uint64_t InferenceProviderRequestConfiguration.sessionUUID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_21();
  v0 = OUTLINED_FUNCTION_56();
  return OUTLINED_FUNCTION_55(v0, v1, v2, v3);
}

uint64_t InferenceProviderRequestConfiguration.onBehalfOfPID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_33_0() + 36));
}

uint64_t InferenceProviderRequestConfiguration.parentOfOnBehalfOfPID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_33_0() + 40));
}

void InferenceProviderRequestConfiguration.auditToken.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  __int128 v5;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_33_0() + 44);
  v4 = *(_BYTE *)(v3 + 32);
  v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 32) = v4;
  OUTLINED_FUNCTION_34();
}

uint64_t InferenceProviderRequestConfiguration.auditSessionUIDt.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + *(int *)(OUTLINED_FUNCTION_33_0() + 48));
}

void InferenceProviderRequestConfiguration.useCaseIdentifier.getter()
{
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

void InferenceProviderRequestConfiguration.assetBundleIdentifier.getter()
{
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

void InferenceProviderRequestConfiguration.requestPriority.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(type metadata accessor for InferenceProviderRequestConfiguration(0) + 60));
  OUTLINED_FUNCTION_34();
}

void InferenceProviderRequestConfiguration.requestPriority.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for InferenceProviderRequestConfiguration(0) + 60)) = v2;
  OUTLINED_FUNCTION_34();
}

uint64_t (*InferenceProviderRequestConfiguration.requestPriority.modify())()
{
  type metadata accessor for InferenceProviderRequestConfiguration(0);
  return nullsub_1;
}

double InferenceProviderRequestConfiguration.init(sessionLoggingIdentifier:requestLoggingIdentifier:assetIdentifiers:requestUUID:sessionUUID:onBehalfOfPID:auditSessionUID:useCaseIdentifier:assetBundleIdentifier:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  double result;
  char *v24;
  char *v25;

  *(_QWORD *)a9 = a1;
  *((_QWORD *)a9 + 1) = a2;
  *((_QWORD *)a9 + 2) = a3;
  *((_QWORD *)a9 + 3) = a4;
  *((_QWORD *)a9 + 4) = a5;
  v18 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
  v19 = &a9[v18[7]];
  v20 = OUTLINED_FUNCTION_21();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
  v21(v19, a6, v20);
  v21(&a9[v18[8]], a7, v20);
  *(_QWORD *)&a9[v18[9]] = a8;
  *(_QWORD *)&a9[v18[10]] = 0;
  v22 = &a9[v18[11]];
  result = 0.0;
  *(_OWORD *)v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  v22[32] = 1;
  *(_DWORD *)&a9[v18[12]] = a10;
  v24 = &a9[v18[13]];
  *(_QWORD *)v24 = a11;
  *((_QWORD *)v24 + 1) = a12;
  v25 = &a9[v18[14]];
  *(_QWORD *)v25 = a13;
  *((_QWORD *)v25 + 1) = a14;
  a9[v18[15]] = 0;
  return result;
}

__n128 InferenceProviderRequestConfiguration.init(sessionLoggingIdentifier:requestLoggingIdentifier:assetIdentifiers:requestUUID:sessionUUID:onBehalfOfPID:parentOfOnBehalfOfPID:auditToken:auditSessionUID:useCaseIdentifier:assetBundleIdentifier:requestPriority:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, __n128 *a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char *a17)
{
  unint64_t v19;
  unint64_t v20;
  unsigned __int8 v21;
  int *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  __n128 *v26;
  __n128 result;
  char *v28;
  char *v29;
  __n128 v30;
  char v32;

  v30 = *a11;
  v20 = a11[1].n128_u64[0];
  v19 = a11[1].n128_u64[1];
  v21 = a11[2].n128_u8[0];
  v32 = *a17;
  *(_QWORD *)a9 = a1;
  *((_QWORD *)a9 + 1) = a2;
  *((_QWORD *)a9 + 2) = a3;
  *((_QWORD *)a9 + 3) = a4;
  *((_QWORD *)a9 + 4) = a5;
  v22 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
  v23 = &a9[v22[7]];
  v24 = OUTLINED_FUNCTION_21();
  v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
  v25(v23, a6, v24);
  v25(&a9[v22[8]], a7, v24);
  *(_QWORD *)&a9[v22[9]] = a8;
  *(_QWORD *)&a9[v22[10]] = a10;
  v26 = (__n128 *)&a9[v22[11]];
  result = v30;
  *v26 = v30;
  v26[1].n128_u64[0] = v20;
  v26[1].n128_u64[1] = v19;
  v26[2].n128_u8[0] = v21;
  *(_DWORD *)&a9[v22[12]] = a12;
  v28 = &a9[v22[13]];
  *(_QWORD *)v28 = a13;
  *((_QWORD *)v28 + 1) = a14;
  v29 = &a9[v22[14]];
  *(_QWORD *)v29 = a15;
  *((_QWORD *)v29 + 1) = a16;
  a9[v22[15]] = v32;
  return result;
}

uint64_t InferenceProviderRequestConfiguration.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_82_1();
  OUTLINED_FUNCTION_55_1();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_82_1();
  OUTLINED_FUNCTION_55_1();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_74();
  v1 = OUTLINED_FUNCTION_56();
  sub_2421CE084(v1, v2);
  OUTLINED_FUNCTION_31_1();
  v3 = OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_21();
  sub_2421CE228(&qword_2543AA0D8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_111();
  sub_242272CD4();
  sub_242272CD4();
  if (*(_BYTE *)(v0 + *(int *)(v3 + 44) + 32) == 1)
  {
    sub_242272CE0();
  }
  else
  {
    sub_242272CE0();
    sub_242272CC8();
  }
  OUTLINED_FUNCTION_130();
  OUTLINED_FUNCTION_48_1();
  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_48_1();
  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_40_0();
  return sub_2421C7E10();
}

void static InferenceProviderRequestConfiguration.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  BOOL v5;
  char v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  char v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  __int128 v31;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (OUTLINED_FUNCTION_47_0() & 1) != 0)
  {
    v5 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v5 || (OUTLINED_FUNCTION_47_0() & 1) != 0)
    {
      sub_2421C8768(a1[4], a2[4]);
      if ((v6 & 1) != 0)
      {
        v7 = (int *)OUTLINED_FUNCTION_33_0();
        if ((OUTLINED_FUNCTION_142() & 1) != 0)
        {
          v8 = OUTLINED_FUNCTION_142();
          if ((v8 & 1) != 0
            && *(_QWORD *)((char *)a1 + v7[9]) == *(_QWORD *)((char *)a2 + v7[9])
            && *(_QWORD *)((char *)a1 + v7[10]) == *(_QWORD *)((char *)a2 + v7[10]))
          {
            v16 = v7[11];
            v17 = (__int128 *)((char *)a1 + v16);
            v18 = *((_BYTE *)a1 + v16 + 32);
            v19 = (char *)a2 + v16;
            v20 = v19[32];
            if ((v18 & 1) != 0)
            {
              if ((v19[32] & 1) == 0)
                return;
            }
            else
            {
              v22 = *(_QWORD *)v19;
              v21 = *((_QWORD *)v19 + 1);
              v24 = *((_QWORD *)v19 + 2);
              v23 = *((_QWORD *)v19 + 3);
              if ((v20 & 1) != 0)
                return;
              *(_QWORD *)&v31 = v22;
              *((_QWORD *)&v31 + 1) = v21;
              if ((OUTLINED_FUNCTION_152(v8, v9, v10, v11, v12, v13, v14, v15, v31, v24, v23, *v17) & 1) == 0)
                return;
            }
            if (*(_DWORD *)((char *)a1 + v7[12]) == *(_DWORD *)((char *)a2 + v7[12]))
            {
              OUTLINED_FUNCTION_119(v7[13]);
              v27 = v4 && v25 == v26;
              if (v27 || (OUTLINED_FUNCTION_47_0() & 1) != 0)
              {
                OUTLINED_FUNCTION_119(v7[14]);
                v30 = v4 && v28 == v29;
                if (v30 || (OUTLINED_FUNCTION_47_0() & 1) != 0)
                  sub_2421C7B4C();
              }
            }
          }
        }
      }
    }
  }
}

void sub_2421C8768(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t i;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t j;
  uint64_t v30;
  _QWORD *v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v33 = a1 + 56;
  OUTLINED_FUNCTION_114();
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & v3;
  OUTLINED_FUNCTION_143();
  v34 = v9;
  v10 = a2 + 56;
  if (!v6)
    goto LABEL_8;
LABEL_7:
  OUTLINED_FUNCTION_141();
  v35 = v11;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v16 << 6))
  {
    v18 = v7;
    v19 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * i);
    v21 = *v19;
    v20 = v19[1];
    sub_242272CBC();
    OUTLINED_FUNCTION_82_1();
    sub_2422726EC();
    v22 = sub_242272D04();
    v23 = -1 << *(_BYTE *)(a2 + 32);
    v24 = v22 & ~v23;
    if (((*(_QWORD *)(v10 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
      goto LABEL_39;
    v25 = *(_QWORD *)(a2 + 48);
    v26 = (_QWORD *)(v25 + 16 * v24);
    v27 = *v26 == v21 && v26[1] == v20;
    if (!v27 && (OUTLINED_FUNCTION_47_0() & 1) == 0)
    {
      v28 = ~v23;
      for (j = v24 + 1; ; j = v30 + 1)
      {
        v30 = j & v28;
        if (((*(_QWORD *)(v10 + (((j & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v28)) & 1) == 0)
          break;
        v31 = (_QWORD *)(v25 + 16 * v30);
        v32 = *v31 == v21 && v31[1] == v20;
        if (v32 || (OUTLINED_FUNCTION_47_0() & 1) != 0)
          goto LABEL_28;
      }
LABEL_39:
      OUTLINED_FUNCTION_60_1();
      return;
    }
LABEL_28:
    OUTLINED_FUNCTION_60_1();
    v7 = v18;
    v8 = v35;
    if (v6)
      goto LABEL_7;
LABEL_8:
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >= v34)
      return;
    v15 = *(_QWORD *)(v33 + 8 * v14);
    v16 = v8 + 1;
    if (!v15)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v34)
        return;
      v15 = *(_QWORD *)(v33 + 8 * v16);
      if (!v15)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= v34)
          return;
        v15 = *(_QWORD *)(v33 + 8 * v16);
        if (!v15)
          break;
      }
    }
LABEL_21:
    v6 = (v15 - 1) & v15;
    v35 = v16;
  }
  v17 = v8 + 4;
  if (v8 + 4 >= v34)
    return;
  v15 = *(_QWORD *)(v33 + 8 * v17);
  if (v15)
  {
    v16 = v8 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v34)
      return;
    v15 = *(_QWORD *)(v33 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_21;
  }
LABEL_42:
  __break(1u);
}

void sub_2421C89C4()
{
  sub_2421C89EC();
}

void sub_2421C89D8()
{
  sub_2421C89EC();
}

void sub_2421C89EC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t i;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  OUTLINED_FUNCTION_106();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(v2);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v44 - v13;
  __swift_instantiateConcreteTypeFromMangledName(v1);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_66();
  if (v7 != v5 && *(_QWORD *)(v7 + 16) == *(_QWORD *)(v5 + 16))
  {
    v46 = v7;
    v47 = v7 + 56;
    OUTLINED_FUNCTION_114();
    OUTLINED_FUNCTION_143();
    v48 = v17;
    v18 = v5 + 56;
    v44[1] = v19;
    v45 = v9;
    v51 = v5 + 56;
    if (!v20)
      goto LABEL_5;
LABEL_4:
    OUTLINED_FUNCTION_132();
    v49 = v22;
    v50 = v23;
    for (i = v24 | (v23 << 6); ; i = v32 + (v31 << 6))
    {
      v33 = *(_QWORD *)(v9 + 72);
      v34 = *(_QWORD *)(v7 + 48) + v33 * i;
      v35 = v21;
      sub_2421D11D0(v34, v21, v3);
      __swift_storeEnumTagSinglePayload(v35, 0, 1, v8);
      if (__swift_getEnumTagSinglePayload(v35, 1, v8) == 1)
        goto LABEL_28;
      sub_2421D1200(v35, (uint64_t)v14, v3);
      sub_242272CBC();
      OUTLINED_FUNCTION_21();
      sub_2421CE228(&qword_2543AA0D8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_242272680();
      v36 = sub_242272D04();
      v37 = -1 << *(_BYTE *)(v5 + 32);
      v38 = v36 & ~v37;
      if (((*(_QWORD *)(v18 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
      {
LABEL_27:
        OUTLINED_FUNCTION_149((uint64_t)v14);
        goto LABEL_28;
      }
      v39 = ~v37;
      while (1)
      {
        sub_2421D11D0(*(_QWORD *)(v5 + 48) + v38 * v33, (uint64_t)v12, v3);
        v40 = _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
        OUTLINED_FUNCTION_149((uint64_t)v12);
        if ((v40 & 1) != 0)
          break;
        v38 = (v38 + 1) & v39;
        if (((*(_QWORD *)(v18 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
          goto LABEL_27;
      }
      OUTLINED_FUNCTION_149((uint64_t)v14);
      v9 = v45;
      v7 = v46;
      v16 = v50;
      if (v49)
        goto LABEL_4;
LABEL_5:
      v26 = v16 + 1;
      if (__OFADD__(v16, 1))
        break;
      if (v26 >= v48)
        goto LABEL_29;
      if (!*(_QWORD *)(v47 + 8 * v26))
      {
        if (v16 + 2 >= v48)
          goto LABEL_29;
        if (!*(_QWORD *)(v47 + 8 * (v16 + 2)))
        {
          if (v16 + 3 >= v48)
            goto LABEL_29;
          if (!*(_QWORD *)(v47 + 8 * (v16 + 3)))
          {
            v27 = v16 + 4;
            if (v16 + 4 >= v48)
            {
LABEL_29:
              OUTLINED_FUNCTION_128();
              __swift_storeEnumTagSinglePayload(v41, v42, v43, v8);
              goto LABEL_28;
            }
            if (!*(_QWORD *)(v47 + 8 * v27))
            {
              do
              {
                v28 = v27 + 1;
                if (__OFADD__(v27, 1))
                  goto LABEL_31;
                if (v28 >= v48)
                  goto LABEL_29;
                ++v27;
              }
              while (!*(_QWORD *)(v47 + 8 * v28));
            }
          }
        }
      }
      OUTLINED_FUNCTION_59_1();
      v49 = v30 & v29;
      v50 = v31;
    }
    __break(1u);
LABEL_31:
    __break(1u);
    return;
  }
LABEL_28:
  OUTLINED_FUNCTION_73_1();
}

void sub_2421C8D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t active;
  uint64_t v47;

  OUTLINED_FUNCTION_106();
  v2 = v1;
  v4 = v3;
  active = type metadata accessor for StateDump.InferenceProviderState.ActiveRequest(0);
  MEMORY[0x24BDAC7A8](active);
  OUTLINED_FUNCTION_84_1();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v38 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v38 - v9;
  if (v4 == v2 || *(_QWORD *)(v4 + 16) != *(_QWORD *)(v2 + 16))
    goto LABEL_34;
  v41 = v4 + 56;
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_143();
  v42 = v13;
  v45 = v2;
  v47 = v2 + 56;
  v14 = type metadata accessor for StateDump.InferenceProviderState.ActiveRequest;
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v39 = v12;
  v40 = v4;
  v38 = v10;
  if (!v16)
    goto LABEL_5;
  while (2)
  {
    OUTLINED_FUNCTION_132();
    v43 = v17;
    v44 = v18;
    v20 = v19 | (v18 << 6);
LABEL_19:
    v25 = *(_QWORD *)(v12 + 72);
    sub_2421CE528(*(_QWORD *)(v4 + 48) + v25 * v20, (uint64_t)v10, v14);
    sub_2421D11A4((uint64_t)v10, (uint64_t)v8, v14);
    v26 = v45;
    sub_242272CBC();
    OUTLINED_FUNCTION_21();
    v27 = v14;
    sub_2421CE228(&qword_2543AA0D8, 255, v15, MEMORY[0x24BDCEA88]);
    sub_242272680();
    v28 = *(int *)(active + 20);
    sub_2421C7E10();
    v29 = sub_242272D04();
    v30 = -1 << *(_BYTE *)(v26 + 32);
    v31 = v29 & ~v30;
    if (((*(_QWORD *)(v47 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
    {
LABEL_33:
      sub_2421CE554((uint64_t)v8, type metadata accessor for StateDump.InferenceProviderState.ActiveRequest);
      goto LABEL_34;
    }
    v32 = v26;
    v33 = ~v30;
    while (1)
    {
      sub_2421CE528(*(_QWORD *)(v32 + 48) + v31 * v25, v0, v14);
      OUTLINED_FUNCTION_126();
      if ((_s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1) == 0)
        goto LABEL_27;
      v34 = *(char *)(v0 + *(int *)(active + 20));
      v35 = v8[v28];
      if (*(_QWORD *)&aNone_2[8 * v34] == *(_QWORD *)&aNone_2[8 * v35]
        && *(_QWORD *)&aBackgrouuserin[8 * v34 + 24] == *(_QWORD *)&aBackgrouuserin[8 * v35 + 24])
      {
        break;
      }
      v37 = OUTLINED_FUNCTION_47_0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_31_1();
      v14 = v27;
      v32 = v45;
      if ((v37 & 1) != 0)
        goto LABEL_30;
LABEL_27:
      OUTLINED_FUNCTION_122(v0);
      v31 = (v31 + 1) & v33;
      if (((*(_QWORD *)(v47 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
        goto LABEL_33;
    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_31_1();
    v14 = v27;
LABEL_30:
    OUTLINED_FUNCTION_122(v0);
    OUTLINED_FUNCTION_122((uint64_t)v8);
    v12 = v39;
    v4 = v40;
    v10 = v38;
    v11 = v44;
    v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    if (v43)
      continue;
    break;
  }
LABEL_5:
  v21 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v21 >= v42)
    goto LABEL_34;
  v22 = *(_QWORD *)(v41 + 8 * v21);
  v23 = v11 + 1;
  if (v22)
    goto LABEL_18;
  v23 = v21 + 1;
  if (v21 + 1 >= v42)
    goto LABEL_34;
  v22 = *(_QWORD *)(v41 + 8 * v23);
  if (v22)
    goto LABEL_18;
  v23 = v21 + 2;
  if (v21 + 2 >= v42)
    goto LABEL_34;
  v22 = *(_QWORD *)(v41 + 8 * v23);
  if (v22)
    goto LABEL_18;
  v24 = v21 + 3;
  if (v24 >= v42)
  {
LABEL_34:
    OUTLINED_FUNCTION_73_1();
    return;
  }
  v22 = *(_QWORD *)(v41 + 8 * v24);
  if (v22)
  {
    v23 = v24;
LABEL_18:
    v43 = (v22 - 1) & v22;
    v44 = v23;
    v20 = __clz(__rbit64(v22)) + (v23 << 6);
    goto LABEL_19;
  }
  while (1)
  {
    v23 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v23 >= v42)
      goto LABEL_34;
    v22 = *(_QWORD *)(v41 + 8 * v23);
    ++v24;
    if (v22)
      goto LABEL_18;
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_2421C90C8(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  if (a1 == 0xD000000000000018 && a2 == 0x80000002422836D0 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002422836F0 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000242283710 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = a1 == 0x5574736575716572 && a2 == 0xEB00000000444955;
    if (v5 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v6 = a1 == 0x556E6F6973736573 && a2 == 0xEB00000000444955;
      if (v6 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v7 = a1 == 0x666C616865426E6FLL && a2 == 0xED0000444950664FLL;
        if (v7 || (sub_242272C20() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x8000000242283730 || (sub_242272C20() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          v8 = a1 == 0x6B6F547469647561 && a2 == 0xEA00000000006E65;
          if (v8 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else if (a1 == 0xD000000000000010 && a2 == 0x8000000242283750 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else if (a1 == 0xD000000000000011 && a2 == 0x8000000242283770 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else if (a1 == 0xD000000000000015 && a2 == 0x8000000242283790 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else if (a1 == 0x5074736575716572 && a2 == 0xEF797469726F6972)
          {
            swift_bridgeObjectRelease();
            return 11;
          }
          else
          {
            v10 = sub_242272C20();
            swift_bridgeObjectRelease();
            if ((v10 & 1) != 0)
              return 11;
            else
              return 12;
          }
        }
      }
    }
  }
}

uint64_t sub_2421C9568()
{
  return 12;
}

uint64_t sub_2421C9570(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2421C95AC + 4 * byte_2422756DC[a1]))(0xD000000000000018, 0x80000002422836D0);
}

uint64_t sub_2421C95AC()
{
  uint64_t v0;

  return v0 + 8;
}

uint64_t sub_2421C9690()
{
  return 0x5074736575716572;
}

uint64_t sub_2421C96B8()
{
  unsigned __int8 *v0;

  return sub_2421C9570(*v0);
}

uint64_t sub_2421C96C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421C90C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2421C96E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2421C9568();
  *a1 = result;
  return result;
}

uint64_t sub_2421C9708()
{
  sub_2421CE1EC();
  return sub_242272D70();
}

uint64_t sub_2421C9730()
{
  sub_2421CE1EC();
  return sub_242272D7C();
}

void InferenceProviderRequestConfiguration.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_45_0();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0258);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_66();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_2421CE1EC();
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_18_2();
  if (!v0)
  {
    OUTLINED_FUNCTION_18_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7970);
    sub_2421CE2DC(&qword_2543A7978, MEMORY[0x24BEE0D08], MEMORY[0x24BEE1700]);
    OUTLINED_FUNCTION_51_0();
    type metadata accessor for InferenceProviderRequestConfiguration(0);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_101((unint64_t *)&unk_2543A9CE8, v8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    OUTLINED_FUNCTION_51_0();
    OUTLINED_FUNCTION_51_0();
    OUTLINED_FUNCTION_66_1(5);
    OUTLINED_FUNCTION_66_1(6);
    sub_2421CE264();
    sub_242272B0C();
    sub_242272B6C();
    OUTLINED_FUNCTION_18_2();
    OUTLINED_FUNCTION_18_2();
    sub_2421CE2A0();
    OUTLINED_FUNCTION_51_0();
  }
  OUTLINED_FUNCTION_116(v7, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_16_0();
}

void InferenceProviderRequestConfiguration.hashValue.getter()
{
  sub_2421CB9BC((void (*)(_BYTE *))InferenceProviderRequestConfiguration.hash(into:));
}

void InferenceProviderRequestConfiguration.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  int *v22;
  char v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  int *v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  char v45;

  OUTLINED_FUNCTION_45_0();
  v2 = v1;
  v4 = v3;
  v42 = OUTLINED_FUNCTION_21();
  v38 = *(_QWORD *)(v42 - 8);
  OUTLINED_FUNCTION_20_2();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v35 - v9;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0270);
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_66();
  v41 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_2_0();
  v39 = v2;
  v40 = v12;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_2421CE1EC();
  sub_242272D40();
  if (v0)
  {
    OUTLINED_FUNCTION_125();
  }
  else
  {
    v36 = v4;
    LOBYTE(v43) = 0;
    v13 = OUTLINED_FUNCTION_44_1();
    v14 = v40;
    *v40 = v13;
    v14[1] = v15;
    LOBYTE(v43) = 1;
    v14[2] = OUTLINED_FUNCTION_44_1();
    v14[3] = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7970);
    sub_2421CE2DC(&qword_2571E0278, MEMORY[0x24BEE0D38], MEMORY[0x24BEE1720]);
    OUTLINED_FUNCTION_45_1();
    v14[4] = v43;
    LOBYTE(v43) = 3;
    OUTLINED_FUNCTION_101(&qword_2543A6E40, v17, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v18 = v42;
    v35 = v19;
    OUTLINED_FUNCTION_45_1();
    v20 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
    v20((char *)v14 + v41[7], v10, v18);
    LOBYTE(v43) = 4;
    v21 = v18;
    OUTLINED_FUNCTION_45_1();
    v22 = v41;
    v20((char *)v14 + v41[8], v8, v21);
    LOBYTE(v43) = 5;
    *(uint64_t *)((char *)v14 + v22[9]) = sub_242272AA0();
    OUTLINED_FUNCTION_107(6);
    *(uint64_t *)((char *)v14 + v22[10]) = sub_242272AA0();
    sub_2421CE33C();
    sub_242272A70();
    v23 = v45;
    v24 = (char *)v14 + v22[11];
    v25 = v44;
    *(_OWORD *)v24 = v43;
    *((_OWORD *)v24 + 1) = v25;
    v24[32] = v23;
    OUTLINED_FUNCTION_107(8);
    *(_DWORD *)((char *)v14 + v22[12]) = sub_242272AD0();
    LOBYTE(v43) = 9;
    v26 = OUTLINED_FUNCTION_44_1();
    v27 = (uint64_t *)((char *)v40 + v41[13]);
    *v27 = v26;
    v27[1] = v28;
    LOBYTE(v43) = 10;
    v29 = OUTLINED_FUNCTION_44_1();
    v30 = (uint64_t *)((char *)v40 + v41[14]);
    *v30 = v29;
    v30[1] = v31;
    sub_2421CE378();
    OUTLINED_FUNCTION_45_1();
    OUTLINED_FUNCTION_16_3();
    v32 = (uint64_t)v40;
    *((_BYTE *)v40 + v41[15]) = v43;
    sub_2421CE528(v32, v36, type metadata accessor for InferenceProviderRequestConfiguration);
    OUTLINED_FUNCTION_125();
    v33 = OUTLINED_FUNCTION_56();
    sub_2421CE554(v33, v34);
  }
  OUTLINED_FUNCTION_16_0();
}

void sub_2421C9FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2421CBCDC(a1, a2, a3, (void (*)(_BYTE *))InferenceProviderRequestConfiguration.hash(into:));
}

void sub_2421CA008()
{
  InferenceProviderRequestConfiguration.init(from:)();
}

void sub_2421CA01C()
{
  InferenceProviderRequestConfiguration.encode(to:)();
}

uint64_t LoadState.description.getter()
{
  char *v0;

  return *(_QWORD *)&aUnloadeddynami[8 * *v0];
}

uint64_t LoadState.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aUnloadeddynami[8 * *v0];
}

ModelManagerServices::LoadState_optional __swiftcall LoadState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  ModelManagerServices::LoadState_optional result;

  v2 = v1;
  v3 = sub_242272A34();
  OUTLINED_FUNCTION_86_0();
  v4 = 3;
  if (v3 < 3)
    v4 = v3;
  *v2 = v4;
  OUTLINED_FUNCTION_14();
  return result;
}

void sub_2421CA0C0()
{
  sub_2421C7BAC();
}

void sub_2421CA0CC()
{
  sub_24225ECA8();
}

uint64_t sub_2421CA0D4()
{
  return sub_2421C7E48();
}

void sub_2421CA0DC()
{
  sub_24225EF70();
}

ModelManagerServices::LoadState_optional sub_2421CA0E4(Swift::String *a1)
{
  return LoadState.init(rawValue:)(*a1);
}

void sub_2421CA0F0(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = LoadState.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_34();
}

uint64_t sub_2421CA110()
{
  sub_2421D1168();
  return sub_242272764();
}

uint64_t sub_2421CA16C()
{
  sub_2421D1168();
  return sub_24227274C();
}

uint64_t sub_2421CA1BC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421BD05C;
  return sub_2421B90A0();
}

uint64_t sub_2421CA208()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421BD05C;
  return sub_2421B90A0();
}

uint64_t sub_2421CA250()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421BD05C;
  return sub_2421B90A0();
}

void sub_2421CA29C(_QWORD *a1@<X8>)
{
  InferenceProvider.requestStream(clientData:configuration:)(a1);
}

void InferenceProvider.requestStream(clientData:configuration:)(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_2421C2700();
  v2 = OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_110(v2, v3);
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02A0);
  a1[4] = sub_2421CE3B4();
  v4 = (_QWORD *)swift_allocObject();
  *a1 = v4;
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v2;
  v4[5] = nullsub_1;
  v4[6] = 0;
  OUTLINED_FUNCTION_34();
}

uint64_t InferenceProvider.requestStream(clientData:configuration:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  const void *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v8 = ClientData.data.getter();
  if (v9 >> 60 == 15)
    v10 = 0;
  else
    v10 = (uint64_t)v8;
  if (v9 >> 60 == 15)
    v11 = 0xC000000000000000;
  else
    v11 = v9;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 40))(v17, v10, v11, a1, a2, a3);
  sub_2421CE434(v10, v11);
  v12 = v18;
  v13 = v19;
  v14 = __swift_project_boxed_opaque_existential_1(v17, v18);
  type metadata accessor for ClientData(255);
  v15 = sub_242272BA8();
  a4[3] = v15;
  a4[4] = MEMORY[0x2426A62C4](MEMORY[0x24BEE7090], v15);
  __swift_allocate_boxed_opaque_existential_1Tm(a4);
  sub_2421CA7A8((uint64_t)v14, a2, v12, a3, v13);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
}

uint64_t sub_2421CA438()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421CA488;
  return sub_2421CA488(0, 0xC000000000000000);
}

uint64_t sub_2421CA488(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = OUTLINED_FUNCTION_1();
  if (!v2)
  {
    v6 = a1;
    v7 = a2;
  }
  return OUTLINED_FUNCTION_57_2(v6, v7, *(uint64_t (**)(void))(v3 + 8));
}

uint64_t InferenceProvider.requestOneShot(clientData:configuration:)()
{
  uint64_t v0;

  return sub_2421CE478(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8), v0, 0, 0xC000000000000000);
}

uint64_t sub_2421CA4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_2421BD05C;
  return InferenceProvider.requestOneShot(clientData:configuration:)(a1, a2, a3, a4, a5);
}

uint64_t InferenceProvider.requestOneShot(clientData:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
  v6[8] = OUTLINED_FUNCTION_35_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421CA5AC()
{
  uint64_t *v0;
  const void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v1 = ClientData.data.getter();
  v0[9] = (uint64_t)v1;
  v0[10] = v2;
  if (v2 >> 60 == 15)
    v3 = 0;
  else
    v3 = (uint64_t)v1;
  if (v2 >> 60 == 15)
    v4 = 0xC000000000000000;
  else
    v4 = v2;
  v5 = (_QWORD *)OUTLINED_FUNCTION_23();
  v0[11] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_2421CA628;
  return OUTLINED_FUNCTION_71_0(v3, v4, v0[4], v0[5], v0[6], v7);
}

uint64_t sub_2421CA628(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = *(_QWORD **)v3;
  *(_QWORD *)(*(_QWORD *)v3 + 96) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    v7 = v6[10];
    if (v7 >> 60 == 15)
      v8 = 0;
    else
      v8 = v6[9];
    if (v7 >> 60 == 15)
      v9 = 0xC000000000000000;
    else
      v9 = v6[10];
    v6[13] = a2;
    v6[14] = a1;
    sub_2421CE434(v8, v9);
  }
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_2421CA6B4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_129(v3, v5, v6, v4);
  ClientData.init(data:xpcData:)(v2, v3, v1);
  swift_task_dealloc();
  v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_7_2(v7);
}

uint64_t sub_2421CA714()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 80);
  if (v1 >> 60 == 15)
    v2 = 0;
  else
    v2 = *(_QWORD *)(v0 + 72);
  if (v1 >> 60 == 15)
    v3 = 0xC000000000000000;
  else
    v3 = *(_QWORD *)(v0 + 80);
  sub_2421CE434(v2, v3);
  OUTLINED_FUNCTION_16();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421CA75C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421B90A0;
  return sub_2421B90A0();
}

uint64_t sub_2421CA7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v10 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a5;
  type metadata accessor for ClientData(0);
  sub_2422728B4();
  return swift_release();
}

uint64_t sub_2421CA880(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t AssociatedTypeWitness;

  v2[4] = a1;
  v2[5] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
  v2[6] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[7] = AssociatedTypeWitness;
  v2[8] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421CA924()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[8] + 16))(v0[9], v0[5], v0[7]);
  v1 = swift_dynamicCast();
  v2 = v0[6];
  if ((v1 & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_129(v2, v4, v5, v3);
    OUTLINED_FUNCTION_126();
    ClientData.init(data:xpcData:)(v6, v2, v7);
    OUTLINED_FUNCTION_57();
    OUTLINED_FUNCTION_16();
    v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  }
  else
  {
    sub_2421C2700();
    v9 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_110(v9, v10);
    swift_willThrow();
    OUTLINED_FUNCTION_57();
    OUTLINED_FUNCTION_16();
    v8 = (uint64_t (*)(void))v0[1];
  }
  return OUTLINED_FUNCTION_72_1(v8);
}

void InferenceProviderAssetDescriptor.identifier.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

void InferenceProviderAssetDescriptor.version.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

ModelManagerServices::InferenceProviderAssetDescriptor __swiftcall InferenceProviderAssetDescriptor.init(identifier:version:)(Swift::String identifier, Swift::String_optional version)
{
  Swift::String_optional *v2;
  ModelManagerServices::InferenceProviderAssetDescriptor result;

  v2->value = identifier;
  v2[1] = version;
  result.version = version;
  result.identifier = identifier;
  return result;
}

uint64_t InferenceProviderAssetDescriptor.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_144();
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_146();
  if (!v1)
    return sub_242272CE0();
  sub_242272CE0();
  OUTLINED_FUNCTION_89_0();
  OUTLINED_FUNCTION_38_1();
  return swift_bridgeObjectRelease();
}

void static InferenceProviderAssetDescriptor.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;

  v3 = OUTLINED_FUNCTION_99(a1);
  v7 = v5[2];
  v6 = v5[3];
  v8 = v3 == *v5 && v4 == v5[1];
  if (v8 || (OUTLINED_FUNCTION_47_0(), OUTLINED_FUNCTION_98_0(), (v9 & 1) != 0))
  {
    if (v1 && v6 && (v2 != v7 || v1 != v6))
      OUTLINED_FUNCTION_47_0();
  }
  OUTLINED_FUNCTION_14();
}

uint64_t sub_2421CAB50(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_242272C20();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2421CAC3C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F6973726576;
  else
    return 0x696669746E656469;
}

uint64_t sub_2421CAC78()
{
  char *v0;

  return sub_2421CAC3C(*v0);
}

uint64_t sub_2421CAC80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421CAB50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2421CACA4()
{
  sub_2421CE49C();
  return sub_242272D70();
}

uint64_t sub_2421CACCC()
{
  sub_2421CE49C();
  return sub_242272D7C();
}

void InferenceProviderAssetDescriptor.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_45_0();
  v3 = v2;
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571E02D0) - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_67();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_2421CE49C();
  sub_242272D64();
  OUTLINED_FUNCTION_88_0();
  sub_242272B18();
  if (!v0)
  {
    OUTLINED_FUNCTION_88_0();
    sub_242272B00();
  }
  OUTLINED_FUNCTION_116(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_16_0();
}

void InferenceProviderAssetDescriptor.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_85();
  sub_242272644();
  sub_2422726EC();
  OUTLINED_FUNCTION_40_0();
  sub_242272CE0();
  if (v1)
  {
    OUTLINED_FUNCTION_89_0();
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_86_0();
  }
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_95_0();
}

void InferenceProviderAssetDescriptor.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  uint64_t v41;

  OUTLINED_FUNCTION_45_0();
  a22 = v25;
  a23 = v26;
  v28 = v27;
  v30 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02E0);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v28, v28[3]);
  sub_2421CE49C();
  OUTLINED_FUNCTION_75_1();
  if (v23)
  {
    OUTLINED_FUNCTION_87();
  }
  else
  {
    a13 = 0;
    v34 = OUTLINED_FUNCTION_123();
    v36 = v35;
    a12 = 1;
    sub_242272644();
    v37 = sub_242272A64();
    v39 = v38;
    v40 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8);
    v41 = v37;
    OUTLINED_FUNCTION_58_0((uint64_t)v33, v40);
    *v30 = v34;
    v30[1] = v36;
    v30[2] = v41;
    v30[3] = v39;
    OUTLINED_FUNCTION_74();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
    OUTLINED_FUNCTION_31_1();
    OUTLINED_FUNCTION_79_1();
  }
  OUTLINED_FUNCTION_16_0();
}

#error "2421CAFAC: call analysis failed (funcsize=5)"

void sub_2421CAFB8()
{
  InferenceProviderAssetDescriptor.encode(to:)();
}

uint64_t sub_2421CAFD4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_242272CBC();
  sub_242272644();
  sub_2422726EC();
  swift_bridgeObjectRelease();
  sub_242272CE0();
  if (v1)
  {
    sub_242272644();
    sub_2422726EC();
    swift_bridgeObjectRelease();
  }
  return sub_242272D04();
}

void InferenceProviderAssetDescriptor.description.getter()
{
  sub_2422726F8();
  OUTLINED_FUNCTION_87_0();
  sub_2422726F8();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_87_0();
  sub_2422726F8();
  OUTLINED_FUNCTION_89_0();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_82_1();
  sub_2422726F8();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_92_0();
}

void InferenceProviderPrewarmInformation.modelBundleIdentifier.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

__n128 InferenceProviderPrewarmInformation.requestorAuditToken.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(v1 + 16);
  v3 = *(_OWORD *)(v1 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s20ModelManagerServices35InferenceProviderPrewarmInformationV19internalSessionUUID10Foundation0J0Vvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_21();
  v0 = OUTLINED_FUNCTION_56();
  return OUTLINED_FUNCTION_55(v0, v1, v2, v3);
}

void _s20ModelManagerServices35InferenceProviderPrewarmInformationV25internalUseCaseIdentifierSSvg_0()
{
  OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

uint64_t InferenceProviderPrewarmInformation.onBehalfOfPid.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + *(int *)(OUTLINED_FUNCTION_96_0() + 32));
}

void InferenceProviderPrewarmInformation.init(bundleIdentifier:requestorAuditToken:sessionUUID:useCaseIdentifier:onBehalfOfPid:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  __int128 v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  v13 = a3[1];
  *(_OWORD *)(a8 + 16) = *a3;
  *(_OWORD *)(a8 + 32) = v13;
  v14 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
  v15 = a8 + v14[6];
  v16 = OUTLINED_FUNCTION_21();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a4, v16);
  v17 = (_QWORD *)(a8 + v14[7]);
  *v17 = a5;
  v17[1] = a6;
  *(_DWORD *)(a8 + v14[8]) = a7;
  OUTLINED_FUNCTION_93_0();
}

__n128 InferenceProviderPrewarmInformation.init(bundleIdentifier:requestorAuditToken:sessionUUID:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X8>)
{
  int *v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __n128 result;
  _QWORD *v16;
  __n128 v17;

  v10 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
  v11 = (char *)a5 + v10[6];
  v12 = OUTLINED_FUNCTION_21();
  v17 = *a3;
  v13 = a3[1].n128_u64[0];
  v14 = a3[1].n128_u64[1];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a4, v12);
  a5->n128_u64[0] = a1;
  a5->n128_u64[1] = a2;
  result = v17;
  a5[1] = v17;
  a5[2].n128_u64[0] = v13;
  a5[2].n128_u64[1] = v14;
  v16 = (unint64_t *)((char *)a5->n128_u64 + v10[7]);
  *v16 = 0;
  v16[1] = 0xE000000000000000;
  *(unsigned __int32 *)((char *)a5->n128_u32 + v10[8]) = 0;
  return result;
}

uint64_t InferenceProviderPrewarmInformation.hash(into:)()
{
  OUTLINED_FUNCTION_82_1();
  OUTLINED_FUNCTION_55_1();
  OUTLINED_FUNCTION_60_1();
  sub_242272CC8();
  OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_21();
  sub_2421CE228(&qword_2543AA0D8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_242272680();
  OUTLINED_FUNCTION_48_1();
  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_40_0();
  return OUTLINED_FUNCTION_130();
}

uint64_t static InferenceProviderPrewarmInformation.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char v22;

  result = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)a2;
  v13 = *(_QWORD *)(a2 + 8);
  v14 = result == *(_QWORD *)a2 && v11 == v13;
  if (v14 || (OUTLINED_FUNCTION_47_0(), result = OUTLINED_FUNCTION_98_0(), (v15 & 1) != 0))
  {
    if ((OUTLINED_FUNCTION_152(result, v11, v12, v13, a5, a6, a7, a8, *(_OWORD *)(a2 + 16), *(_QWORD *)(a2 + 32), *(_QWORD *)(a2 + 40), *(_OWORD *)(a1 + 16)) & 1) != 0&& (v16 = OUTLINED_FUNCTION_96_0(), (_s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1) != 0))
    {
      v17 = *(int *)(v16 + 28);
      v18 = *(_QWORD *)(a1 + v17);
      v19 = *(_QWORD *)(a1 + v17 + 8);
      v20 = (_QWORD *)(a2 + v17);
      if (v18 == *v20 && v19 == v20[1])
        return *(_DWORD *)(a1 + *(int *)(v16 + 32)) == *(_DWORD *)(a2 + *(int *)(v16 + 32));
      OUTLINED_FUNCTION_47_0();
      result = OUTLINED_FUNCTION_98_0();
      if ((v22 & 1) != 0)
        return *(_DWORD *)(a1 + *(int *)(v16 + 32)) == *(_DWORD *)(a2 + *(int *)(v16 + 32));
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_2421CB514(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x80000002422837B0 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002422837D0 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002422837F0 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000242283810 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000242283830)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_242272C20();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_2421CB704(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2421CB740 + 4 * byte_2422756E8[a1]))(0xD000000000000018, 0x80000002422837B0);
}

uint64_t sub_2421CB740()
{
  uint64_t v0;

  return v0 + 8;
}

uint64_t sub_2421CB794()
{
  unsigned __int8 *v0;

  return sub_2421CB704(*v0);
}

uint64_t sub_2421CB79C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421CB514(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2421CB7C0()
{
  sub_2421CE4EC();
  return sub_242272D70();
}

uint64_t sub_2421CB7E8()
{
  sub_2421CE4EC();
  return sub_242272D7C();
}

uint64_t InferenceProviderPrewarmInformation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02E8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_67();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2421CE4EC();
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_88_1();
  if (!v1)
  {
    sub_2421CE264();
    OUTLINED_FUNCTION_147();
    type metadata accessor for InferenceProviderPrewarmInformation(0);
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_101((unint64_t *)&unk_2543A9CE8, v6, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    OUTLINED_FUNCTION_147();
    OUTLINED_FUNCTION_88_1();
    sub_242272B54();
  }
  return OUTLINED_FUNCTION_116(v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
}

void InferenceProviderPrewarmInformation.hashValue.getter()
{
  sub_2421CB9BC((void (*)(_BYTE *))InferenceProviderPrewarmInformation.hash(into:));
}

void sub_2421CB9BC(void (*a1)(_BYTE *))
{
  _BYTE v2[72];

  OUTLINED_FUNCTION_85();
  a1(v2);
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_48();
}

void InferenceProviderPrewarmInformation.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;

  OUTLINED_FUNCTION_45_0();
  v3 = v2;
  v18 = v4;
  v5 = OUTLINED_FUNCTION_21();
  v19 = *(_QWORD *)(v5 - 8);
  v20 = v5;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_66();
  v9 = v8 - v7;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02F8);
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_21_1();
  v10 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_105();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_2421CE4EC();
  sub_242272D40();
  if (v0)
  {
    OUTLINED_FUNCTION_145();
  }
  else
  {
    LOBYTE(v22) = 0;
    *(_QWORD *)v1 = OUTLINED_FUNCTION_83_1();
    *(_QWORD *)(v1 + 8) = v12;
    sub_2421CE33C();
    sub_242272AAC();
    *(_OWORD *)(v1 + 16) = v22;
    *(_OWORD *)(v1 + 32) = v23;
    OUTLINED_FUNCTION_101(&qword_2543A6E40, v13, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_242272AAC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v1 + v10[6], v9, v20);
    v14 = OUTLINED_FUNCTION_83_1();
    v15 = (uint64_t *)(v1 + v10[7]);
    *v15 = v14;
    v15[1] = v16;
    v17 = sub_242272AB8();
    OUTLINED_FUNCTION_17_2();
    *(_DWORD *)(v1 + v10[8]) = v17;
    sub_2421CE528(v1, v18, type metadata accessor for InferenceProviderPrewarmInformation);
    OUTLINED_FUNCTION_145();
    sub_2421CE554(v1, type metadata accessor for InferenceProviderPrewarmInformation);
  }
  OUTLINED_FUNCTION_16_0();
}

void sub_2421CBCA0()
{
  InferenceProviderPrewarmInformation.init(from:)();
}

uint64_t sub_2421CBCB4(_QWORD *a1)
{
  return InferenceProviderPrewarmInformation.encode(to:)(a1);
}

void sub_2421CBCD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2421CBCDC(a1, a2, a3, (void (*)(_BYTE *))InferenceProviderPrewarmInformation.hash(into:));
}

void sub_2421CBCDC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v5[72];

  sub_242272CBC();
  a4(v5);
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_48();
}

uint64_t sub_2421CBD10()
{
  uint64_t v0;

  return sub_2421D1160(*(uint64_t (**)(void))(v0 + 8));
}

void InferenceProviderAdapter.init()()
{
  sub_242272A10();
  __break(1u);
}

uint64_t InferenceProviderAdapter.init(_:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2421BCE50(a1, a2);
}

uint64_t _s20ModelManagerServices24InferenceProviderAdapterV15transitionAsset14withIdentifier2to4fromySS_AA9LoadStateOAItYaAA0D5ErrorOYKF(uint64_t a1, uint64_t a2, _BYTE *a3, _BYTE *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 88) = v5;
  *(_QWORD *)(v6 + 96) = a5;
  *(_QWORD *)(v6 + 72) = a1;
  *(_QWORD *)(v6 + 80) = a2;
  *(_BYTE *)(v6 + 66) = *a3;
  *(_BYTE *)(v6 + 67) = *a4;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2421CBDA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v8)(void);

  v3 = *(_BYTE *)(v2 + 66);
  OUTLINED_FUNCTION_47_1(*(_QWORD **)(v2 + 88));
  *(_BYTE *)(v2 + 65) = v3;
  v4 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v2 + 104) = v4;
  v5 = OUTLINED_FUNCTION_137(v4, (uint64_t)sub_2421CBE10);
  return OUTLINED_FUNCTION_71_0(v5, v6, v2 + 65, v0, v1, v8);
}

uint64_t sub_2421CBE10()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_153();
  *(_QWORD *)(v1 + 112) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421CBE5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  _QWORD *v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  if (!*(_BYTE *)(v2 + 66))
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v1 = 0xEB0000000065646FLL;
  v0 = OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_31_1();
  if ((v0 & 1) != 0)
  {
LABEL_7:
    OUTLINED_FUNCTION_47_1(*(_QWORD **)(v2 + 88));
    v5 = (_QWORD *)OUTLINED_FUNCTION_23();
    *(_QWORD *)(v2 + 120) = v5;
    v6 = sub_2421CBFA8;
    goto LABEL_10;
  }
  if (*(_BYTE *)(v2 + 67))
  {
    v0 = OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_31_1();
    if ((v0 & 1) == 0)
    {
      v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
      return OUTLINED_FUNCTION_72_1(v3);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_47_1(*(_QWORD **)(v2 + 88));
  v5 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v2 + 136) = v5;
  v6 = sub_2421CBFF4;
LABEL_10:
  v7 = OUTLINED_FUNCTION_137(v5, (uint64_t)v6);
  return OUTLINED_FUNCTION_27_2(v7, v8, v0, v1, v9);
}

uint64_t sub_2421CBFA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_153();
  *(_QWORD *)(v2 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421CBFF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_153();
  *(_QWORD *)(v2 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
    return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

void sub_2421CC040()
{
  OUTLINED_FUNCTION_90_0();
}

#error "2421CC068: call analysis failed (funcsize=9)"

void sub_2421CC08C()
{
  OUTLINED_FUNCTION_90_0();
}

#error "2421CC0B4: call analysis failed (funcsize=9)"

void sub_2421CC0D8()
{
  OUTLINED_FUNCTION_90_0();
}

#error "2421CC100: call analysis failed (funcsize=9)"

uint64_t _s20ModelManagerServices24InferenceProviderAdapterV14requestOneShot10clientData13configurationAA06ClientK0VAH_AA0dE20RequestConfigurationVtYaAA0D5ErrorOYKF(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[12] = v4;
  v5[13] = a4;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2421CC13C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  OUTLINED_FUNCTION_47_1(*(_QWORD **)(v2 + 96));
  v3 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v2 + 112) = v3;
  *v3 = v2;
  v3[1] = sub_2421CC1A4;
  return v5(*(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), v0, v1);
}

uint64_t sub_2421CC1A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_153();
  *(_QWORD *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
    return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

void sub_2421CC1F0()
{
  OUTLINED_FUNCTION_90_0();
}

#error "2421CC218: call analysis failed (funcsize=9)"

uint64_t InferenceProviderAdapter.requestStream(clientData:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[5];
  _QWORD v15[5];

  v7 = v3[3];
  v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 48))(v15, a1, a2, v7, v8);
  sub_2421CE584((uint64_t)v15, (uint64_t)v14);
  v9 = type metadata accessor for InferenceProviderAdapter.StreamAdapter();
  v10 = swift_allocObject();
  sub_2421CC308(v14);
  a3[3] = v9;
  sub_2421CE228(&qword_2571E0318, v11, (uint64_t (*)(uint64_t))type metadata accessor for InferenceProviderAdapter.StreamAdapter, (uint64_t)&unk_2422765F0);
  a3[4] = v12;
  *a3 = v10;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
}

uint64_t sub_2421CC308(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  swift_defaultActor_initialize();
  v3 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_66();
  (*(void (**)(uint64_t))(v6 + 16))(v5 - v4);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v8);
  sub_2422728A8();
  sub_2421D1230((uint64_t)a1, &qword_2571E0598);
  sub_2421BCE50(&v8, v1 + 112);
  return v1;
}

uint64_t sub_2421CC410(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[25] = a1;
  v2[26] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
  v2[27] = OUTLINED_FUNCTION_35_1();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421CC45C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v3 = v2[26];
  sub_2421CE228(&qword_2571E0568, a2, (uint64_t (*)(uint64_t))type metadata accessor for InferenceProviderAdapter.StreamAdapter, (uint64_t)&unk_242276488);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 136);
  v2[28] = v4;
  v2[29] = *(_QWORD *)(v3 + 144);
  __swift_mutable_project_boxed_opaque_existential_1(v3 + 112, v4);
  v2[30] = OUTLINED_FUNCTION_100();
  v5 = sub_242272938();
  v2[31] = v5;
  v2[32] = *(_QWORD *)(v5 - 8);
  v2[33] = OUTLINED_FUNCTION_35_1();
  v6 = OUTLINED_FUNCTION_100();
  v2[34] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[35] = v7;
  v2[36] = *(_QWORD *)(v7 + 64);
  v2[37] = OUTLINED_FUNCTION_35_1();
  v8 = (_QWORD *)swift_task_alloc();
  v2[38] = v8;
  *v8 = v2;
  v8[1] = sub_2421CC5B0;
  return sub_24227280C();
}

uint64_t sub_2421CC5B0()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_77(v1);
  if (!v0)
  {
    swift_endAccess();
    OUTLINED_FUNCTION_16();
  }
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_2421CC614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t (*v21)(void);

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 240);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(v1, *(_QWORD *)(v0 + 248));
    OUTLINED_FUNCTION_43();
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
  }
  else
  {
    *(_QWORD *)(v0 + 72) = v2;
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v0 + 48));
    (*(void (**)(void))(*(_QWORD *)(v2 - 8) + 32))();
    OUTLINED_FUNCTION_43();
  }
  sub_2421D1200(v0 + 48, v0 + 16, &qword_2571E0570);
  sub_2421D11D0(v0 + 16, v0 + 112, &qword_2571E0570);
  if (*(_QWORD *)(v0 + 136))
  {
    sub_2421D1118((_OWORD *)(v0 + 112), (_OWORD *)(v0 + 80));
    v3 = OUTLINED_FUNCTION_126();
    sub_2421BCE88(v3, v4);
    v5 = type metadata accessor for ClientData(0);
    v6 = swift_dynamicCast();
    v7 = *(_QWORD *)(v0 + 216);
    if (v6)
    {
      v8 = *(_QWORD *)(v0 + 200);
      __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 + 216), 0, 1, v5);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
      sub_2421D1230(v0 + 16, &qword_2571E0570);
      sub_2421D11A4(v7, v8, type metadata accessor for ClientData);
      v9 = v8;
      v10 = 0;
    }
    else
    {
      OUTLINED_FUNCTION_128();
      __swift_storeEnumTagSinglePayload(v13, v14, v15, v5);
      sub_2421D1230(v7, &qword_2571E0560);
      if (qword_2543AA570 != -1)
        swift_once();
      v16 = sub_2422724AC();
      __swift_project_value_buffer(v16, (uint64_t)qword_2543AA558);
      v17 = sub_242272494();
      v18 = sub_242272914();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_2421B5000, v17, v18, "InferenceProvider stream produced a non-ClientData element", v19, 2u);
        MEMORY[0x2426A6378](v19, -1, -1);
      }
      v20 = *(_QWORD *)(v0 + 200);

      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 80);
      sub_2421D1230(v0 + 16, &qword_2571E0570);
      v9 = v20;
      v10 = 1;
    }
    v11 = 1;
    v12 = v5;
  }
  else
  {
    sub_2421D1230(v0 + 16, &qword_2571E0570);
    sub_2421D1230(v0 + 112, &qword_2571E0570);
    type metadata accessor for ClientData(0);
    OUTLINED_FUNCTION_128();
  }
  __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
  swift_task_dealloc();
  v21 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_7_2(v21);
}

void sub_2421CC8C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_76_1();
  v1 = v0[37];
  v2 = v0[34];
  v3 = v0[35];
  v4 = OUTLINED_FUNCTION_35_1();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  v5(v4, v1, v2);
  swift_getAssociatedConformanceWitness();
  if (sub_242272C14())
  {
    OUTLINED_FUNCTION_77_1(v0[35]);
  }
  else
  {
    v6 = v0[34];
    OUTLINED_FUNCTION_53_1();
    v5(v7, v4, v6);
  }
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_43();
  swift_endAccess();
  swift_task_dealloc();
  sub_2421C2700();
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_90_0();
}

uint64_t sub_2421CC9B4()
{
  uint64_t v0;
  uint64_t v1;

  InferenceError.init(wrapping:)(v0);
  swift_willThrow();
  OUTLINED_FUNCTION_91_0();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_2421CC9F8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 112);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

void sub_2421CCA1C()
{
  OUTLINED_FUNCTION_65_1();
}

void sub_2421CCA24()
{
  sub_2421CCA1C();
}

uint64_t sub_2421CCA3C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421BD05C;
  return sub_2421CC410(a1);
}

uint64_t sub_2421CCA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 72) = a4;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2571E0558 + dword_2571E0558);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 80) = v8;
  *v8 = v4;
  v8[1] = sub_2421CCB20;
  return v10(a1, a2, a3, v4 + 16);
}

uint64_t sub_2421CCB20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  __int128 v6;
  __int128 v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_77(v3);
  if (v1)
  {
    v4 = *(_QWORD *)(v0 + 72);
    v5 = *(_BYTE *)(v0 + 64);
    v6 = *(_OWORD *)(v0 + 32);
    v7 = *(_OWORD *)(v0 + 48);
    *(_OWORD *)v4 = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v4 + 16) = v6;
    *(_OWORD *)(v4 + 32) = v7;
    *(_BYTE *)(v4 + 48) = v5;
    v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_94_0();
  }
  else
  {
    v8 = *(uint64_t (**)(void))(v2 + 8);
  }
  return OUTLINED_FUNCTION_7_2(v8);
}

void sub_2421CCB78()
{
  InferenceProviderAdapter.init()();
}

uint64_t sub_2421CCB84()
{
  uint64_t v0;

  nullsub_1();
  return sub_2421D1160(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421CCBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v3 + 72) = a3;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 80) = v4;
  *v4 = v3;
  v4[1] = sub_2421D12F0;
  return sub_2421CCB20();
}

uint64_t sub_2421CCC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;

  *(_QWORD *)(v4 + 72) = a4;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 80) = v8;
  *v8 = v4;
  v8[1] = sub_2421D12F0;
  return _s20ModelManagerServices24InferenceProviderAdapterV14requestOneShot10clientData13configurationAA06ClientK0VAH_AA0dE20RequestConfigurationVtYaAA0D5ErrorOYKF(a1, a2, a3, v4 + 16);
}

uint64_t sub_2421CCC80(uint64_t a1, uint64_t a2, _BYTE *a3, _BYTE *a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v10;

  *(_QWORD *)(v5 + 72) = a5;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 80) = v10;
  *v10 = v5;
  v10[1] = sub_2421D12F0;
  return _s20ModelManagerServices24InferenceProviderAdapterV15transitionAsset14withIdentifier2to4fromySS_AA9LoadStateOAItYaAA0D5ErrorOYKF(a1, a2, a3, a4, v5 + 16);
}

void InferenceProviderDescriptor.Instance.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_242272CD4();
    sub_2422726EC();
  }
  else
  {
    sub_242272CD4();
    OUTLINED_FUNCTION_14();
  }
}

uint64_t static InferenceProviderDescriptor.Instance.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      if (*a1 != *a2 || v3 != v4)
        return sub_242272C20();
      return 1;
    }
    return 0;
  }
  if (v4)
    return 0;
  OUTLINED_FUNCTION_157();
  return 1;
}

BOOL sub_2421CCDB4(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_2421CCDC4()
{
  return sub_242272CD4();
}

uint64_t sub_2421CCDE8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x49746C7561666564 && a2 == 0xEF65636E6174736ELL;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000242283850)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_242272C20();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2421CCEE4()
{
  return 2;
}

void sub_2421CCEEC()
{
  OUTLINED_FUNCTION_85();
  sub_242272CD4();
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_48();
}

uint64_t sub_2421CCF1C(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 0x49746C7561666564;
}

uint64_t sub_2421CCF64(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_242272C20();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2421CCFD0()
{
  sub_242272CBC();
  sub_242272CD4();
  return sub_242272D04();
}

BOOL sub_2421CD010(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2421CCDB4(*a1, *a2);
}

void sub_2421CD01C()
{
  sub_2421CCEEC();
}

uint64_t sub_2421CD034()
{
  return sub_2421CCDC4();
}

void sub_2421CD03C()
{
  OUTLINED_FUNCTION_131();
  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_48();
}

uint64_t sub_2421CD060()
{
  char *v0;

  return sub_2421CCF1C(*v0);
}

uint64_t sub_2421CD068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421CCDE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2421CD08C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2421CCEE4();
  *a1 = result;
  return result;
}

uint64_t sub_2421CD0B0()
{
  sub_2421CE5E8();
  return sub_242272D70();
}

uint64_t sub_2421CD0D8()
{
  sub_2421CE5E8();
  return sub_242272D7C();
}

uint64_t sub_2421CD100()
{
  sub_2421CE660();
  return sub_242272D70();
}

uint64_t sub_2421CD128()
{
  sub_2421CE660();
  return sub_242272D7C();
}

uint64_t sub_2421CD154()
{
  sub_242272CBC();
  sub_242272CD4();
  return sub_242272D04();
}

uint64_t sub_2421CD190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421CCF64(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2421CD1B8()
{
  sub_2421CE624();
  return sub_242272D70();
}

uint64_t sub_2421CD1E0()
{
  sub_2421CE624();
  return sub_242272D7C();
}

void InferenceProviderDescriptor.Instance.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_45_0();
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0320);
  v13 = *(_QWORD *)(v5 - 8);
  v14 = v5;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_21_1();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0328);
  v11 = *(_QWORD *)(v7 - 8);
  v12 = v7;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_105();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0330);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_68();
  v10 = *(_QWORD *)(v0 + 8);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_2421CE5E8();
  sub_242272D64();
  if (v10)
  {
    OUTLINED_FUNCTION_138();
    OUTLINED_FUNCTION_102();
    sub_242272B18();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v14);
  }
  else
  {
    sub_2421CE660();
    OUTLINED_FUNCTION_102();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v12);
  }
  OUTLINED_FUNCTION_78_1();
  OUTLINED_FUNCTION_16_0();
}

uint64_t InferenceProviderDescriptor.Instance.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  OUTLINED_FUNCTION_85();
  sub_242272CD4();
  if (v1)
    OUTLINED_FUNCTION_134();
  return OUTLINED_FUNCTION_84();
}

void InferenceProviderDescriptor.Instance.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  _QWORD *v31;
  char v32;

  OUTLINED_FUNCTION_45_0();
  v5 = v4;
  v29 = v6;
  v28 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571E0350) - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_0();
  v30 = v8;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0358);
  v9 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_68();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0360);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_21_1();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_2421CE5E8();
  sub_242272D40();
  if (v0)
    goto LABEL_9;
  v31 = v5;
  v12 = sub_242272AE8();
  v13 = *(_QWORD *)(v12 + 16);
  v14 = v10;
  if (!v13)
  {
    v19 = v2;
LABEL_8:
    v20 = sub_2422729BC();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFE50);
    *v22 = &type metadata for InferenceProviderDescriptor.Instance;
    sub_242272A58();
    sub_2422729B0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    OUTLINED_FUNCTION_67_1();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v14);
    v5 = v31;
LABEL_9:
    v23 = (uint64_t)v5;
    goto LABEL_10;
  }
  v32 = *(_BYTE *)(v12 + 32);
  sub_2421C4040(1, v13, v12, v12 + 32, 0, (2 * v13) | 1);
  v16 = v15;
  v18 = v17;
  swift_bridgeObjectRelease();
  if (v16 != v18 >> 1)
  {
    v19 = v2;
    v14 = v10;
    goto LABEL_8;
  }
  if ((v32 & 1) != 0)
  {
    OUTLINED_FUNCTION_138();
    sub_242272A4C();
    v24 = sub_242272A7C();
    v26 = v25;
    OUTLINED_FUNCTION_58_0(v30, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
    OUTLINED_FUNCTION_67_1();
    OUTLINED_FUNCTION_118();
  }
  else
  {
    sub_2421CE660();
    sub_242272A4C();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v27);
    OUTLINED_FUNCTION_67_1();
    OUTLINED_FUNCTION_116(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    v24 = 0;
    v26 = 0;
  }
  *v29 = v24;
  v29[1] = v26;
  v23 = (uint64_t)v31;
LABEL_10:
  __swift_destroy_boxed_opaque_existential_1Tm(v23);
  OUTLINED_FUNCTION_16_0();
}

void sub_2421CD78C()
{
  InferenceProviderDescriptor.Instance.init(from:)();
}

void sub_2421CD7A0()
{
  InferenceProviderDescriptor.Instance.encode(to:)();
}

uint64_t sub_2421CD7BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_242272CBC();
  sub_242272CD4();
  if (v1)
    sub_2422726EC();
  return sub_242272D04();
}

void InferenceProviderDescriptor.id.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

uint64_t InferenceProviderDescriptor.instance.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return sub_242272644();
}

uint64_t InferenceProviderDescriptor.hostedOnServer.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

__n128 InferenceProviderDescriptor.init(id:instance:hostedOnServer:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, unsigned __int8 a4@<W3>, __n128 *a5@<X8>)
{
  __n128 result;

  a5->n128_u64[0] = a1;
  a5->n128_u64[1] = a2;
  result = *a3;
  a5[1] = *a3;
  a5[2].n128_u8[0] = a4;
  return result;
}

void InferenceProviderDescriptor.description.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
  {
    OUTLINED_FUNCTION_89_0();
    sub_2422726F8();
    sub_2422726F8();
    sub_2422726F8();
  }
  else
  {
    OUTLINED_FUNCTION_89_0();
  }
  OUTLINED_FUNCTION_92_0();
}

void InferenceProviderDescriptor.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_242272644();
  OUTLINED_FUNCTION_126();
  sub_2422726EC();
  swift_bridgeObjectRelease();
  sub_242272CD4();
  if (v1)
  {
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_134();
    OUTLINED_FUNCTION_108();
  }
  sub_242272CE0();
  OUTLINED_FUNCTION_93_0();
}

uint64_t static InferenceProviderDescriptor.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t result;
  char v13;
  char v15;

  v3 = OUTLINED_FUNCTION_99(a1);
  v7 = *(unsigned __int8 *)(v6 + 32);
  v9 = *(_QWORD *)(v5 + 16);
  v8 = *(_QWORD *)(v5 + 24);
  v10 = *(unsigned __int8 *)(v5 + 32);
  if (v3 != *(_QWORD *)v5 || v4 != *(_QWORD *)(v5 + 8))
  {
    OUTLINED_FUNCTION_47_0();
    result = OUTLINED_FUNCTION_98_0();
    if ((v13 & 1) == 0)
      return result;
  }
  if (!v1)
  {
    if (!v8)
    {
      OUTLINED_FUNCTION_157();
      return v7 ^ v10 ^ 1u;
    }
    return 0;
  }
  if (!v8)
    return 0;
  if (v2 == v9 && v1 == v8)
    return v7 ^ v10 ^ 1u;
  OUTLINED_FUNCTION_47_0();
  result = OUTLINED_FUNCTION_98_0();
  if ((v15 & 1) != 0)
    return v7 ^ v10 ^ 1u;
  return result;
}

uint64_t sub_2421CDA18(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  char v8;

  v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65636E6174736E69 && a2 == 0xE800000000000000;
    if (v6 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E4F646574736F68 && a2 == 0xEE00726576726553)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_242272C20();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_2421CDB54()
{
  return 3;
}

uint64_t sub_2421CDB5C(char a1)
{
  return qword_242276730[a1];
}

uint64_t sub_2421CDB7C()
{
  char *v0;

  return sub_2421CDB5C(*v0);
}

uint64_t sub_2421CDB84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421CDA18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2421CDBA8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2421CDB54();
  *a1 = result;
  return result;
}

uint64_t sub_2421CDBCC()
{
  sub_2421CEB04();
  return sub_242272D70();
}

uint64_t sub_2421CDBF4()
{
  sub_2421CEB04();
  return sub_242272D7C();
}

void InferenceProviderDescriptor.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_45_0();
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0368);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_67();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_2421CEB04();
  sub_242272D64();
  sub_242272B18();
  if (!v0)
  {
    sub_2421CEB40();
    OUTLINED_FUNCTION_88_0();
    sub_242272B48();
    OUTLINED_FUNCTION_88_0();
    sub_242272B24();
  }
  OUTLINED_FUNCTION_58_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_16_0();
}

void InferenceProviderDescriptor.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_144();
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_146();
  sub_242272CD4();
  if (v1)
  {
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_134();
    OUTLINED_FUNCTION_108();
  }
  sub_242272CE0();
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_95_0();
}

void InferenceProviderDescriptor.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_45_0();
  v2 = v1;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0380);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_2421CEB04();
  OUTLINED_FUNCTION_75_1();
  if (v0)
  {
    OUTLINED_FUNCTION_87();
  }
  else
  {
    LOBYTE(v11) = 0;
    v6 = OUTLINED_FUNCTION_123();
    v8 = v7;
    v10 = v6;
    sub_2421CEB7C();
    OUTLINED_FUNCTION_124();
    sub_242272AAC();
    sub_242272644();
    v9 = sub_242272A88();
    OUTLINED_FUNCTION_28_2();
    *(_QWORD *)v4 = v10;
    *(_QWORD *)(v4 + 8) = v8;
    *(_QWORD *)(v4 + 16) = v11;
    *(_QWORD *)(v4 + 24) = v12;
    *(_BYTE *)(v4 + 32) = v9 & 1;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
    OUTLINED_FUNCTION_31_1();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_16_0();
}

void sub_2421CDF88()
{
  InferenceProviderDescriptor.init(from:)();
}

void sub_2421CDF9C()
{
  InferenceProviderDescriptor.encode(to:)();
}

uint64_t sub_2421CDFB8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_242272CBC();
  sub_242272644();
  sub_2422726EC();
  swift_bridgeObjectRelease();
  sub_242272CD4();
  if (v1)
  {
    sub_242272644();
    sub_2422726EC();
    swift_bridgeObjectRelease();
  }
  sub_242272CE0();
  return sub_242272D04();
}

void sub_2421CE070()
{
  sub_2421CE6B0();
}

uint64_t sub_2421CE084(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_242272D04();
  v3 = a2 + 56;
  OUTLINED_FUNCTION_29_2();
  v6 = v5 & v4;
  v8 = (unint64_t)(v7 + 63) >> 6;
  result = OUTLINED_FUNCTION_87_0();
  v10 = 0;
  v11 = 0;
  if (!v6)
    goto LABEL_3;
LABEL_2:
  for (v6 &= v6 - 1; ; v6 = v15 & v14)
  {
    sub_242272CBC();
    OUTLINED_FUNCTION_144();
    OUTLINED_FUNCTION_133();
    v16 = OUTLINED_FUNCTION_84();
    result = OUTLINED_FUNCTION_146();
    v10 ^= v16;
    if (v6)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v11++, 1))
      goto LABEL_17;
    if (v11 >= v8)
    {
LABEL_15:
      swift_release();
      return sub_242272CD4();
    }
    if (!*(_QWORD *)(v3 + 8 * v11))
      break;
LABEL_12:
    OUTLINED_FUNCTION_59_1();
  }
  v13 = v11 + 1;
  if (v11 + 1 >= v8)
    goto LABEL_15;
  if (*(_QWORD *)(v3 + 8 * v13))
  {
    ++v11;
    goto LABEL_12;
  }
  while (1)
  {
    v11 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v11 >= v8)
      goto LABEL_15;
    ++v13;
    if (*(_QWORD *)(v3 + 8 * v11))
      goto LABEL_12;
  }
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

unint64_t sub_2421CE1EC()
{
  unint64_t result;

  result = qword_2571E0260;
  if (!qword_2571E0260)
  {
    result = MEMORY[0x2426A62C4](&unk_2422766AC, &type metadata for InferenceProviderRequestConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0260);
  }
  return result;
}

void sub_2421CE228(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6;

  if (!*a1)
  {
    v6 = a3(a2);
    atomic_store(MEMORY[0x2426A62C4](a4, v6), a1);
  }
  OUTLINED_FUNCTION_34();
}

unint64_t sub_2421CE264()
{
  unint64_t result;

  result = qword_2571E0268;
  if (!qword_2571E0268)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for AuditToken, &type metadata for AuditToken);
    atomic_store(result, (unint64_t *)&qword_2571E0268);
  }
  return result;
}

unint64_t sub_2421CE2A0()
{
  unint64_t result;

  result = qword_2543A7858;
  if (!qword_2543A7858)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for RequestPriority, &type metadata for RequestPriority);
    atomic_store(result, (unint64_t *)&qword_2543A7858);
  }
  return result;
}

uint64_t sub_2421CE2DC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543A7970);
    v8 = a2;
    result = MEMORY[0x2426A62C4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2421CE33C()
{
  unint64_t result;

  result = qword_2571E0280;
  if (!qword_2571E0280)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for AuditToken, &type metadata for AuditToken);
    atomic_store(result, (unint64_t *)&qword_2571E0280);
  }
  return result;
}

unint64_t sub_2421CE378()
{
  unint64_t result;

  result = qword_2543A6E78;
  if (!qword_2543A6E78)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for RequestPriority, &type metadata for RequestPriority);
    atomic_store(result, (unint64_t *)&qword_2543A6E78);
  }
  return result;
}

unint64_t sub_2421CE3B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2571E02A8;
  if (!qword_2571E02A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571E02A0);
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ResponseStream<A>, v1);
    atomic_store(result, (unint64_t *)&qword_2571E02A8);
  }
  return result;
}

uint64_t sub_2421CE3F8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2421CE434(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_2421CE478(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

uint64_t sub_2421CE490(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_2421CE49C()
{
  unint64_t result;

  result = qword_2571E02D8;
  if (!qword_2571E02D8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227665C, &type metadata for InferenceProviderAssetDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E02D8);
  }
  return result;
}

uint64_t type metadata accessor for InferenceProviderPrewarmInformation(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2571E0450);
}

unint64_t sub_2421CE4EC()
{
  unint64_t result;

  result = qword_2571E02F0;
  if (!qword_2571E02F0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227660C, &type metadata for InferenceProviderPrewarmInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E02F0);
  }
  return result;
}

void sub_2421CE528(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_115(a1, a2, a3);
  OUTLINED_FUNCTION_56_1(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_34();
}

void sub_2421CE554(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  OUTLINED_FUNCTION_77_1(*(_QWORD *)(v2 - 8));
  OUTLINED_FUNCTION_34();
}

uint64_t sub_2421CE584(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for InferenceProviderAdapter.StreamAdapter()
{
  return objc_opt_self();
}

unint64_t sub_2421CE5E8()
{
  unint64_t result;

  result = qword_2571E0338;
  if (!qword_2571E0338)
  {
    result = MEMORY[0x2426A62C4](&unk_2422765A0, &type metadata for InferenceProviderDescriptor.Instance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0338);
  }
  return result;
}

unint64_t sub_2421CE624()
{
  unint64_t result;

  result = qword_2571E0340;
  if (!qword_2571E0340)
  {
    result = MEMORY[0x2426A62C4](&unk_242276550, &type metadata for InferenceProviderDescriptor.Instance.SpecificInstanceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0340);
  }
  return result;
}

unint64_t sub_2421CE660()
{
  unint64_t result;

  result = qword_2571E0348;
  if (!qword_2571E0348)
  {
    result = MEMORY[0x2426A62C4](&unk_242276500, &type metadata for InferenceProviderDescriptor.Instance.DefaultInstanceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0348);
  }
  return result;
}

void sub_2421CE69C()
{
  sub_2421CE6B0();
}

void sub_2421CE6B0()
{
  __n128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t i;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_106();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = OUTLINED_FUNCTION_81_1(v9, v7, v5);
  v32 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_68();
  __swift_instantiateConcreteTypeFromMangledName(v4);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_103(v0[4].n128_i64[0], v0[2], v0[3]);
  v13 = v8 + 56;
  OUTLINED_FUNCTION_29_2();
  v16 = v15 & v14;
  OUTLINED_FUNCTION_143();
  v31 = v17;
  v33 = v8;
  OUTLINED_FUNCTION_124();
  v18 = 0;
  v19 = 0;
  if (!v16)
    goto LABEL_3;
LABEL_2:
  v20 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v20 | (v19 << 6); ; i = v26 + (v19 << 6))
  {
    sub_2421D11D0(*(_QWORD *)(v33 + 48) + *(_QWORD *)(v32 + 72) * i, v2, v6);
    __swift_storeEnumTagSinglePayload(v2, 0, 1, v10);
    if (__swift_getEnumTagSinglePayload(v2, 1, v10) == 1)
      goto LABEL_17;
    sub_2421D1200(v2, v1, v6);
    sub_242272CBC();
    OUTLINED_FUNCTION_21();
    sub_2421CE228(&qword_2543AA0D8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_242272680();
    v27 = sub_242272D04();
    sub_2421D1230(v1, v6);
    v18 ^= v27;
    if (v16)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v19++, 1))
      goto LABEL_19;
    if (v19 >= v31)
      goto LABEL_16;
    if (!*(_QWORD *)(v13 + 8 * v19))
      break;
LABEL_12:
    OUTLINED_FUNCTION_59_1();
    v16 = v25 & v24;
  }
  v23 = v19 + 1;
  if (v19 + 1 >= v31)
  {
LABEL_16:
    OUTLINED_FUNCTION_128();
    __swift_storeEnumTagSinglePayload(v28, v29, v30, v10);
LABEL_17:
    swift_release();
    sub_242272CD4();
    OUTLINED_FUNCTION_73_1();
    return;
  }
  if (*(_QWORD *)(v13 + 8 * v23))
  {
    ++v19;
    goto LABEL_12;
  }
  while (1)
  {
    v19 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v19 >= v31)
      goto LABEL_16;
    ++v23;
    if (*(_QWORD *)(v13 + 8 * v19))
      goto LABEL_12;
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

void sub_2421CE8E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 *v3;
  __int128 *v4;
  uint64_t active;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  __n128 v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t i;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;

  OUTLINED_FUNCTION_106();
  v2 = v1;
  v4 = v3;
  active = type metadata accessor for StateDump.InferenceProviderState.ActiveRequest(0);
  v31 = *(_QWORD *)(active - 8);
  v32 = active;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_84_1();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v30 - v8;
  v10 = *((_QWORD *)v4 + 8);
  v11 = v4[1];
  v34 = *v4;
  v35 = v11;
  v12 = (__n128)v4[2];
  v13 = (__n128)v4[3];
  v30[0] = v4;
  v30[1] = OUTLINED_FUNCTION_103(v10, v12, v13);
  v14 = v2 + 56;
  OUTLINED_FUNCTION_29_2();
  v17 = v16 & v15;
  v19 = (unint64_t)(v18 + 63) >> 6;
  v33 = v2;
  OUTLINED_FUNCTION_124();
  v20 = 0;
  v21 = 0;
  if (!v17)
    goto LABEL_3;
LABEL_2:
  OUTLINED_FUNCTION_141();
  for (i = v22 | (v21 << 6); ; i = v28 + (v21 << 6))
  {
    sub_2421CE528(*(_QWORD *)(v33 + 48) + *(_QWORD *)(v31 + 72) * i, (uint64_t)v9, type metadata accessor for StateDump.InferenceProviderState.ActiveRequest);
    sub_2421D11A4((uint64_t)v9, v0, type metadata accessor for StateDump.InferenceProviderState.ActiveRequest);
    sub_242272CBC();
    OUTLINED_FUNCTION_21();
    sub_2421CE228(&qword_2543AA0D8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_242272680();
    OUTLINED_FUNCTION_38_1();
    OUTLINED_FUNCTION_86_0();
    v29 = sub_242272D04();
    sub_2421CE554(v0, type metadata accessor for StateDump.InferenceProviderState.ActiveRequest);
    v20 ^= v29;
    if (v17)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v21++, 1))
      goto LABEL_17;
    if (v21 >= v19)
    {
LABEL_15:
      swift_release();
      sub_242272CD4();
      OUTLINED_FUNCTION_73_1();
      return;
    }
    if (!*(_QWORD *)(v14 + 8 * v21))
      break;
LABEL_12:
    OUTLINED_FUNCTION_59_1();
    v17 = v27 & v26;
  }
  v25 = v21 + 1;
  if (v21 + 1 >= v19)
    goto LABEL_15;
  if (*(_QWORD *)(v14 + 8 * v25))
  {
    ++v21;
    goto LABEL_12;
  }
  while (1)
  {
    v21 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v21 >= v19)
      goto LABEL_15;
    ++v25;
    if (*(_QWORD *)(v14 + 8 * v21))
      goto LABEL_12;
  }
  __break(1u);
LABEL_17:
  __break(1u);
}

unint64_t sub_2421CEB04()
{
  unint64_t result;

  result = qword_2571E0370;
  if (!qword_2571E0370)
  {
    result = MEMORY[0x2426A62C4](&unk_2422764B0, &type metadata for InferenceProviderDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0370);
  }
  return result;
}

unint64_t sub_2421CEB40()
{
  unint64_t result;

  result = qword_2571E0378;
  if (!qword_2571E0378)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderDescriptor.Instance, &type metadata for InferenceProviderDescriptor.Instance);
    atomic_store(result, (unint64_t *)&qword_2571E0378);
  }
  return result;
}

unint64_t sub_2421CEB7C()
{
  unint64_t result;

  result = qword_2571E0388;
  if (!qword_2571E0388)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderDescriptor.Instance, &type metadata for InferenceProviderDescriptor.Instance);
    atomic_store(result, (unint64_t *)&qword_2571E0388);
  }
  return result;
}

void sub_2421CEBB8()
{
  sub_2421CE228(&qword_2571E0390, 255, type metadata accessor for InferenceProviderRequestConfiguration, (uint64_t)&protocol conformance descriptor for InferenceProviderRequestConfiguration);
}

unint64_t sub_2421CEBEC()
{
  unint64_t result;

  result = qword_2571E0398;
  if (!qword_2571E0398)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for LoadState, &type metadata for LoadState);
    atomic_store(result, (unint64_t *)&qword_2571E0398);
  }
  return result;
}

unint64_t sub_2421CEC2C()
{
  unint64_t result;

  result = qword_2571E03A0;
  if (!qword_2571E03A0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderAssetDescriptor, &type metadata for InferenceProviderAssetDescriptor);
    atomic_store(result, (unint64_t *)&qword_2571E03A0);
  }
  return result;
}

void sub_2421CEC68()
{
  sub_2421CE228(&qword_2571E03A8, 255, type metadata accessor for InferenceProviderPrewarmInformation, (uint64_t)&protocol conformance descriptor for InferenceProviderPrewarmInformation);
}

unint64_t sub_2421CEC9C()
{
  unint64_t result;

  result = qword_2571E03D0;
  if (!qword_2571E03D0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderDescriptor.Instance, &type metadata for InferenceProviderDescriptor.Instance);
    atomic_store(result, (unint64_t *)&qword_2571E03D0);
  }
  return result;
}

unint64_t sub_2421CECDC()
{
  unint64_t result;

  result = qword_2571E03D8;
  if (!qword_2571E03D8)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderDescriptor, &type metadata for InferenceProviderDescriptor);
    atomic_store(result, (unint64_t *)&qword_2571E03D8);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for InferenceProviderRequestConfiguration(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = *((_QWORD *)a2 + 3);
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a1 + 3) = v8;
    v9 = a3[7];
    v10 = &a1[v9];
    v11 = &a2[v9];
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    v12 = sub_24227238C();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    sub_242272644();
    sub_242272644();
    sub_242272644();
    v13(v10, v11, v12);
    v13(&v4[a3[8]], &a2[a3[8]], v12);
    v14 = a3[10];
    *(_QWORD *)&v4[a3[9]] = *(_QWORD *)&a2[a3[9]];
    *(_QWORD *)&v4[v14] = *(_QWORD *)&a2[v14];
    v15 = a3[11];
    v16 = a3[12];
    v17 = &v4[v15];
    v18 = &a2[v15];
    v19 = *((_OWORD *)v18 + 1);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v19;
    v17[32] = v18[32];
    *(_DWORD *)&v4[v16] = *(_DWORD *)&a2[v16];
    v20 = a3[13];
    v21 = a3[14];
    v22 = &v4[v20];
    v23 = &a2[v20];
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v25 = &v4[v21];
    v26 = &a2[v21];
    v27 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    v4[a3[15]] = a2[a3[15]];
    sub_242272644();
    sub_242272644();
  }
  return v4;
}

uint64_t destroy for InferenceProviderRequestConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_24227238C();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 32), v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for InferenceProviderRequestConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v7;
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  v8 = a3[7];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_24227238C();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  sub_242272644();
  sub_242272644();
  sub_242272644();
  v12(v9, v10, v11);
  v12(&a1[a3[8]], &a2[a3[8]], v11);
  v13 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  v14 = a3[11];
  v15 = a3[12];
  v16 = &a1[v14];
  v17 = &a2[v14];
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  v16[32] = v17[32];
  *(_DWORD *)&a1[v15] = *(_DWORD *)&a2[v15];
  v19 = a3[13];
  v20 = a3[14];
  v21 = &a1[v19];
  v22 = &a2[v19];
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = v23;
  v24 = &a1[v20];
  v25 = &a2[v20];
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = v26;
  a1[a3[15]] = a2[a3[15]];
  sub_242272644();
  sub_242272644();
  return a1;
}

char *assignWithCopy for InferenceProviderRequestConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  sub_242272644();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
  sub_242272644();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  sub_242272644();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_24227238C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  v11 = a3[11];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = v13[32];
  v15 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v15;
  v12[32] = v14;
  *(_DWORD *)&a1[a3[12]] = *(_DWORD *)&a2[a3[12]];
  v16 = a3[13];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  sub_242272644();
  swift_bridgeObjectRelease();
  v19 = a3[14];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  sub_242272644();
  swift_bridgeObjectRelease();
  a1[a3[15]] = a2[a3[15]];
  return a1;
}

uint64_t initializeWithTake for InferenceProviderRequestConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24227238C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v12 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[11];
  v14 = a3[12];
  v15 = a1 + v13;
  v16 = (__int128 *)(a2 + v13);
  v17 = *v16;
  v18 = v16[1];
  *(_BYTE *)(v15 + 32) = *((_BYTE *)v16 + 32);
  *(_OWORD *)v15 = v17;
  *(_OWORD *)(v15 + 16) = v18;
  *(_DWORD *)(a1 + v14) = *(_DWORD *)(a2 + v14);
  v19 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  return a1;
}

char *assignWithTake for InferenceProviderRequestConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_24227238C();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(&a1[a3[8]], &a2[a3[8]], v11);
  v13 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  *(_QWORD *)&a1[v13] = *(_QWORD *)&a2[v13];
  v14 = a3[11];
  v15 = a3[12];
  v16 = &a1[v14];
  v17 = &a2[v14];
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  v16[32] = v17[32];
  *(_DWORD *)&a1[v15] = *(_DWORD *)&a2[v15];
  v19 = a3[13];
  v20 = &a1[v19];
  v21 = (uint64_t *)&a2[v19];
  v23 = *v21;
  v22 = v21[1];
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  v24 = a3[14];
  v25 = &a1[v24];
  v26 = (uint64_t *)&a2[v24];
  v28 = *v26;
  v27 = v26[1];
  *(_QWORD *)v25 = v28;
  *((_QWORD *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  a1[a3[15]] = a2[a3[15]];
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderRequestConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2421CF3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_97_0();
    OUTLINED_FUNCTION_14();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_62_0(a1 + *(int *)(a3 + 28), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for InferenceProviderRequestConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2421CF444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_155();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_14();
  }
  else
  {
    v4 = v2;
    v5 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_63_1(v1 + *(int *)(v4 + 28), v0, v0, v5);
  }
}

uint64_t sub_2421CF490()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24227238C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for LoadState()
{
  OUTLINED_FUNCTION_65_1();
}

uint64_t dispatch thunk of InferenceProvider.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of InferenceProvider.loadIn(inferenceAssetIdentifier:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_139();
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_61_1(v1, (uint64_t)sub_2421BD05C);
  return OUTLINED_FUNCTION_27_2(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of InferenceProvider.loadOut(inferenceAssetIdentifier:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_139();
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_61_1(v1, (uint64_t)sub_2421BD05C);
  return OUTLINED_FUNCTION_27_2(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of InferenceProvider.transitionAsset(withIdentifier:to:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_23_2();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_14_3(v1, (uint64_t)sub_2421BD05C);
  return OUTLINED_FUNCTION_42_0(v2, v3, v4, v5, v6, v7);
}

uint64_t dispatch thunk of InferenceProvider.requestStream(clientData:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of InferenceProvider.requestStream(clientData:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of InferenceProvider.requestOneShot(clientData:configuration:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_23_2();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_14_3(v1, (uint64_t)sub_2421CF680);
  return OUTLINED_FUNCTION_42_0(v2, v3, v4, v5, v6, v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_23_2();
  v6 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_2421BD05C;
  return v8(v5, v4, v3, v1, v0);
}

uint64_t sub_2421CF680(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_1();
  return OUTLINED_FUNCTION_57_2(a1, a2, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t dispatch thunk of InferenceProvider.cancelRequest(uuid:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_19(v1, (uint64_t)sub_2421B90A0);
  return OUTLINED_FUNCTION_49_1(v2, v3, v4, v5);
}

_QWORD *initializeWithCopy for InferenceProviderAssetDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_242272644();
  sub_242272644();
  return a1;
}

_QWORD *assignWithCopy for InferenceProviderAssetDescriptor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_242272644();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_242272644();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for InferenceProviderAssetDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderAssetDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderAssetDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for InferenceProviderAssetDescriptor()
{
  OUTLINED_FUNCTION_65_1();
}

_QWORD *initializeBufferWithCopyOfBuffer for InferenceProviderPrewarmInformation(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v8;
    v9 = a3[6];
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    v12 = sub_24227238C();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    sub_242272644();
    v13(v10, v11, v12);
    v14 = a3[7];
    v15 = a3[8];
    v16 = (_QWORD *)((char *)v4 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    *(_DWORD *)((char *)v4 + v15) = *(_DWORD *)((char *)a2 + v15);
    sub_242272644();
  }
  return v4;
}

uint64_t destroy for InferenceProviderPrewarmInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InferenceProviderPrewarmInformation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_24227238C();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  sub_242272644();
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = a3[8];
  v15 = (_QWORD *)(a1 + v13);
  v16 = (_QWORD *)(a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  *(_DWORD *)(a1 + v14) = *(_DWORD *)(a2 + v14);
  sub_242272644();
  return a1;
}

uint64_t assignWithCopy for InferenceProviderPrewarmInformation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  return a1;
}

_OWORD *initializeWithTake for InferenceProviderPrewarmInformation(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_24227238C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_DWORD *)((char *)a1 + v11) = *(_DWORD *)((char *)a2 + v11);
  return a1;
}

uint64_t assignWithTake for InferenceProviderPrewarmInformation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = a3[6];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderPrewarmInformation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2421CFD04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_97_0();
    OUTLINED_FUNCTION_14();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_62_0(a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for InferenceProviderPrewarmInformation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2421CFD60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_155();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_14();
  }
  else
  {
    v4 = v2;
    v5 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_63_1(v1 + *(int *)(v4 + 24), v0, v0, v5);
  }
}

uint64_t sub_2421CFDAC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24227238C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of InferenceProviding.prewarmHint(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_19(v1, (uint64_t)sub_2421CFE80);
  return OUTLINED_FUNCTION_49_1(v2, v3, v4, v5);
}

uint64_t sub_2421CFE80()
{
  uint64_t v0;

  OUTLINED_FUNCTION_1();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t _s20ModelManagerServices18InferenceProvidingP15transitionAsset_2toyAA0d8ProviderG10DescriptorV_AA9LoadStateOtYaAA0D5ErrorOYKFTj()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  OUTLINED_FUNCTION_76_1();
  OUTLINED_FUNCTION_23_2();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_14_3(v1, (uint64_t)sub_2421BD05C);
  return v3(v2);
}

uint64_t dispatch thunk of InferenceProviding.requestStream(clientData:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t _s20ModelManagerServices18InferenceProvidingP14requestOneShot10clientData13configurationAA06ClientJ0VAH_AA0D28ProviderRequestConfigurationVtYaAA0D5ErrorOYKFTj(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_2421BD05C;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t _s20ModelManagerServices36UndeprecatedInferenceProviderAdapterP15transitionAsset14withIdentifier2to4fromySS_AA9LoadStateOAItYaAA0E5ErrorOYKFTj(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_2421BD05C;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t destroy for InferenceProviderAdapter(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t initializeWithCopy for InferenceProviderAdapter(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for InferenceProviderAdapter(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for InferenceProviderAdapter(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderAdapter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderAdapter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for InferenceProviderAdapter()
{
  OUTLINED_FUNCTION_65_1();
}

uint64_t _s20ModelManagerServices32InferenceProviderAssetDescriptorVwxx_0()
{
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_6_2();
}

uint64_t initializeWithCopy for InferenceProviderDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  sub_242272644();
  sub_242272644();
  return a1;
}

uint64_t assignWithCopy for InferenceProviderDescriptor(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for InferenceProviderDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for InferenceProviderDescriptor()
{
  OUTLINED_FUNCTION_65_1();
}

_QWORD *initializeBufferWithCopyOfBuffer for InferenceProviderDescriptor.Instance(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_242272644();
  return a1;
}

uint64_t destroy for InferenceProviderDescriptor.Instance()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for InferenceProviderDescriptor.Instance(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_242272644();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for InferenceProviderDescriptor.Instance(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderDescriptor.Instance(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for InferenceProviderDescriptor.Instance(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_2421D05F4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_2421D060C(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

void type metadata accessor for InferenceProviderDescriptor.Instance()
{
  OUTLINED_FUNCTION_65_1();
}

uint64_t _s20ModelManagerServices9LoadStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2421D0684 + 4 * byte_2422756F2[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2421D06B8 + 4 * byte_2422756ED[v4]))();
}

uint64_t sub_2421D06B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421D06C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2421D06C8);
  return result;
}

uint64_t sub_2421D06D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2421D06DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2421D06E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421D06E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderDescriptor.CodingKeys()
{
  return &type metadata for InferenceProviderDescriptor.CodingKeys;
}

_BYTE *sub_2421D070C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderDescriptor.Instance.CodingKeys()
{
  return &type metadata for InferenceProviderDescriptor.Instance.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProviderDescriptor.Instance.DefaultInstanceCodingKeys()
{
  return &type metadata for InferenceProviderDescriptor.Instance.DefaultInstanceCodingKeys;
}

uint64_t storeEnumTagSinglePayload for InferenceProviderDescriptor.Instance.SpecificInstanceCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2421D0778 + 4 * byte_2422756F7[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2421D0798 + 4 * byte_2422756FC[v4]))();
}

_BYTE *sub_2421D0778(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2421D0798(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2421D07A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2421D07A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2421D07B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2421D07B8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderDescriptor.Instance.SpecificInstanceCodingKeys()
{
  return &type metadata for InferenceProviderDescriptor.Instance.SpecificInstanceCodingKeys;
}

uint64_t storeEnumTagSinglePayload for InferenceProviderPrewarmInformation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2421D0820 + 4 * byte_242275706[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2421D0854 + 4 * byte_242275701[v4]))();
}

uint64_t sub_2421D0854(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421D085C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2421D0864);
  return result;
}

uint64_t sub_2421D0870(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2421D0878);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2421D087C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421D0884(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderPrewarmInformation.CodingKeys()
{
  return &type metadata for InferenceProviderPrewarmInformation.CodingKeys;
}

uint64_t getEnumTagSinglePayload for StateDump.InferenceProviderState.ActiveRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s20ModelManagerServices27InferenceProviderDescriptorV8InstanceO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2421D0974 + 4 * byte_242275710[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2421D09A8 + 4 * byte_24227570B[v4]))();
}

uint64_t sub_2421D09A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421D09B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2421D09B8);
  return result;
}

uint64_t sub_2421D09C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2421D09CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2421D09D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421D09D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderAssetDescriptor.CodingKeys()
{
  return &type metadata for InferenceProviderAssetDescriptor.CodingKeys;
}

uint64_t getEnumTagSinglePayload for InferenceProviderRequestConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF5)
  {
    if (a2 + 11 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 11) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 12;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v5 = v6 - 12;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderRequestConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_2421D0AC8 + 4 * byte_24227571A[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_2421D0AFC + 4 * byte_242275715[v4]))();
}

uint64_t sub_2421D0AFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421D0B04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2421D0B0CLL);
  return result;
}

uint64_t sub_2421D0B18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2421D0B20);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_2421D0B24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421D0B2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderRequestConfiguration.CodingKeys()
{
  return &type metadata for InferenceProviderRequestConfiguration.CodingKeys;
}

unint64_t sub_2421D0B4C()
{
  unint64_t result;

  result = qword_2571E0490;
  if (!qword_2571E0490)
  {
    result = MEMORY[0x2426A62C4](&unk_242275FCC, &type metadata for InferenceProviderRequestConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0490);
  }
  return result;
}

unint64_t sub_2421D0B8C()
{
  unint64_t result;

  result = qword_2571E0498;
  if (!qword_2571E0498)
  {
    result = MEMORY[0x2426A62C4](&unk_242276084, &type metadata for InferenceProviderAssetDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0498);
  }
  return result;
}

unint64_t sub_2421D0BCC()
{
  unint64_t result;

  result = qword_2571E04A0;
  if (!qword_2571E04A0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227613C, &type metadata for InferenceProviderPrewarmInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E04A0);
  }
  return result;
}

unint64_t sub_2421D0C0C()
{
  unint64_t result;

  result = qword_2571E04A8;
  if (!qword_2571E04A8)
  {
    result = MEMORY[0x2426A62C4](&unk_2422761F4, &type metadata for InferenceProviderDescriptor.Instance.SpecificInstanceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E04A8);
  }
  return result;
}

unint64_t sub_2421D0C4C()
{
  unint64_t result;

  result = qword_2571E04B0;
  if (!qword_2571E04B0)
  {
    result = MEMORY[0x2426A62C4](&unk_2422762FC, &type metadata for InferenceProviderDescriptor.Instance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E04B0);
  }
  return result;
}

unint64_t sub_2421D0C8C()
{
  unint64_t result;

  result = qword_2571E04B8[0];
  if (!qword_2571E04B8[0])
  {
    result = MEMORY[0x2426A62C4](&unk_2422763B4, &type metadata for InferenceProviderDescriptor.CodingKeys);
    atomic_store(result, qword_2571E04B8);
  }
  return result;
}

void sub_2421D0CC8(uint64_t a1, uint64_t a2)
{
  sub_2421CE228(&qword_2571E04D0, a2, (uint64_t (*)(uint64_t))type metadata accessor for InferenceProviderAdapter.StreamAdapter, (uint64_t)&unk_2422763DC);
}

void sub_2421D0CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_2421CE228(&qword_2571E04D0, a2, (uint64_t (*)(uint64_t))type metadata accessor for InferenceProviderAdapter.StreamAdapter, (uint64_t)&unk_2422763DC);
  *(_QWORD *)(a1 + 8) = v3;
}

unint64_t sub_2421D0D34()
{
  unint64_t result;

  result = qword_2571E04D8;
  if (!qword_2571E04D8)
  {
    result = MEMORY[0x2426A62C4](&unk_242276324, &type metadata for InferenceProviderDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E04D8);
  }
  return result;
}

unint64_t sub_2421D0D74()
{
  unint64_t result;

  result = qword_2571E04E0;
  if (!qword_2571E04E0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227634C, &type metadata for InferenceProviderDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E04E0);
  }
  return result;
}

unint64_t sub_2421D0DB4()
{
  unint64_t result;

  result = qword_2571E04E8;
  if (!qword_2571E04E8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227621C, &type metadata for InferenceProviderDescriptor.Instance.DefaultInstanceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E04E8);
  }
  return result;
}

unint64_t sub_2421D0DF4()
{
  unint64_t result;

  result = qword_2571E04F0;
  if (!qword_2571E04F0)
  {
    result = MEMORY[0x2426A62C4](&unk_242276244, &type metadata for InferenceProviderDescriptor.Instance.DefaultInstanceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E04F0);
  }
  return result;
}

unint64_t sub_2421D0E34()
{
  unint64_t result;

  result = qword_2571E04F8;
  if (!qword_2571E04F8)
  {
    result = MEMORY[0x2426A62C4](&unk_242276164, &type metadata for InferenceProviderDescriptor.Instance.SpecificInstanceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E04F8);
  }
  return result;
}

unint64_t sub_2421D0E74()
{
  unint64_t result;

  result = qword_2571E0500;
  if (!qword_2571E0500)
  {
    result = MEMORY[0x2426A62C4](&unk_24227618C, &type metadata for InferenceProviderDescriptor.Instance.SpecificInstanceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0500);
  }
  return result;
}

unint64_t sub_2421D0EB4()
{
  unint64_t result;

  result = qword_2571E0508;
  if (!qword_2571E0508)
  {
    result = MEMORY[0x2426A62C4](&unk_24227626C, &type metadata for InferenceProviderDescriptor.Instance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0508);
  }
  return result;
}

unint64_t sub_2421D0EF4()
{
  unint64_t result;

  result = qword_2571E0510;
  if (!qword_2571E0510)
  {
    result = MEMORY[0x2426A62C4](&unk_242276294, &type metadata for InferenceProviderDescriptor.Instance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0510);
  }
  return result;
}

void sub_2421D0F30(uint64_t a1, uint64_t a2)
{
  sub_2421CE228(&qword_2571E0518, a2, (uint64_t (*)(uint64_t))type metadata accessor for InferenceProviderAdapter.StreamAdapter, (uint64_t)&unk_24227646C);
}

void sub_2421D0F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_2421CE228(&qword_2571E0520, a2, (uint64_t (*)(uint64_t))type metadata accessor for InferenceProviderAdapter.StreamAdapter, (uint64_t)&unk_242276424);
  *(_QWORD *)(a1 + 8) = v3;
}

unint64_t sub_2421D0F9C()
{
  unint64_t result;

  result = qword_2571E0528;
  if (!qword_2571E0528)
  {
    result = MEMORY[0x2426A62C4](&unk_2422760AC, &type metadata for InferenceProviderPrewarmInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0528);
  }
  return result;
}

unint64_t sub_2421D0FDC()
{
  unint64_t result;

  result = qword_2571E0530;
  if (!qword_2571E0530)
  {
    result = MEMORY[0x2426A62C4](&unk_2422760D4, &type metadata for InferenceProviderPrewarmInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0530);
  }
  return result;
}

unint64_t sub_2421D101C()
{
  unint64_t result;

  result = qword_2571E0538;
  if (!qword_2571E0538)
  {
    result = MEMORY[0x2426A62C4](&unk_242275FF4, &type metadata for InferenceProviderAssetDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0538);
  }
  return result;
}

unint64_t sub_2421D105C()
{
  unint64_t result;

  result = qword_2571E0540;
  if (!qword_2571E0540)
  {
    result = MEMORY[0x2426A62C4](&unk_24227601C, &type metadata for InferenceProviderAssetDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0540);
  }
  return result;
}

unint64_t sub_2421D109C()
{
  unint64_t result;

  result = qword_2571E0548;
  if (!qword_2571E0548)
  {
    result = MEMORY[0x2426A62C4](&unk_242275F3C, &type metadata for InferenceProviderRequestConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0548);
  }
  return result;
}

unint64_t sub_2421D10DC()
{
  unint64_t result;

  result = qword_2571E0550;
  if (!qword_2571E0550)
  {
    result = MEMORY[0x2426A62C4](&unk_242275F64, &type metadata for InferenceProviderRequestConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0550);
  }
  return result;
}

_OWORD *sub_2421D1118(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void __swift_allocate_boxed_opaque_existential_1Tm(uint64_t *a1)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
    *a1 = swift_allocBox();
  OUTLINED_FUNCTION_34();
}

uint64_t sub_2421D1160(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_2421D1168()
{
  unint64_t result;

  result = qword_2571E0580;
  if (!qword_2571E0580)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for LoadState, &type metadata for LoadState);
    atomic_store(result, (unint64_t *)&qword_2571E0580);
  }
  return result;
}

void sub_2421D11A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_115(a1, a2, a3);
  OUTLINED_FUNCTION_56_1(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_34();
}

void sub_2421D11D0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_81_1(a1, a2, a3);
  OUTLINED_FUNCTION_56_1(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_34();
}

void sub_2421D1200(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_81_1(a1, a2, a3);
  OUTLINED_FUNCTION_56_1(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_34();
}

void sub_2421D1230(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_77_1(*(_QWORD *)(v2 - 8));
  OUTLINED_FUNCTION_34();
}

uint64_t sub_2421D1260()
{
  return swift_deallocObject();
}

uint64_t sub_2421D1270(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2421BD05C;
  return sub_2421CA880(a1, a2);
}

unint64_t OUTLINED_FUNCTION_0_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)v16 = a10;
  *(_QWORD *)(v16 + 8) = a11;
  *(_QWORD *)(v16 + 16) = a12;
  *(_QWORD *)(v16 + 24) = a13;
  *(_QWORD *)(v16 + 32) = a14;
  *(_QWORD *)(v16 + 40) = a15;
  *(_BYTE *)(v16 + 48) = a16;
  *(_QWORD *)(v17 + 16) = a10;
  *(_QWORD *)(v17 + 24) = a11;
  *(_QWORD *)(v17 + 32) = a12;
  *(_QWORD *)(v17 + 40) = a13;
  *(_QWORD *)(v17 + 48) = a14;
  *(_QWORD *)(v17 + 56) = a15;
  *(_BYTE *)(v17 + 64) = a16;
  return sub_2421C2700();
}

uint64_t OUTLINED_FUNCTION_6_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_7_2(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_9_2()
{
  uint64_t v0;

  return sub_2421CE490(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t OUTLINED_FUNCTION_10_1(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_14_3@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_16_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 176));
}

uint64_t OUTLINED_FUNCTION_17_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 128), v1);
}

uint64_t OUTLINED_FUNCTION_18_2()
{
  return sub_242272B18();
}

uint64_t OUTLINED_FUNCTION_19_1()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_24_2@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_27_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t OUTLINED_FUNCTION_28_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_31_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_33_0()
{
  return type metadata accessor for InferenceProviderRequestConfiguration(0);
}

uint64_t OUTLINED_FUNCTION_35_1()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_38_1()
{
  return sub_2422726EC();
}

uint64_t OUTLINED_FUNCTION_42_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t OUTLINED_FUNCTION_44_1()
{
  return sub_242272A7C();
}

uint64_t OUTLINED_FUNCTION_45_1()
{
  return sub_242272AAC();
}

_QWORD *OUTLINED_FUNCTION_47_1(_QWORD *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, a1[3]);
}

uint64_t OUTLINED_FUNCTION_48_1()
{
  return sub_242272644();
}

uint64_t OUTLINED_FUNCTION_49_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_51_0()
{
  return sub_242272B48();
}

void OUTLINED_FUNCTION_52_1(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  InferenceError.init(wrapping:)((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_53_1()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_54_1()
{
  return sub_2422726EC();
}

uint64_t OUTLINED_FUNCTION_55_1()
{
  return sub_2422726EC();
}

uint64_t OUTLINED_FUNCTION_56_1@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_57_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_58_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_60_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_61_1@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_62_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_63_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_66_1@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 128) = a1;
  return sub_242272B3C();
}

uint64_t OUTLINED_FUNCTION_67_1()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_70_1()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_71_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t OUTLINED_FUNCTION_72_1(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_75_1()
{
  return sub_242272D40();
}

uint64_t OUTLINED_FUNCTION_77_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_78_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_79_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_81_1(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledName(a3);
}

uint64_t OUTLINED_FUNCTION_82_1()
{
  return sub_242272644();
}

uint64_t OUTLINED_FUNCTION_83_1()
{
  return sub_242272A7C();
}

uint64_t OUTLINED_FUNCTION_87_0()
{
  return sub_242272644();
}

uint64_t OUTLINED_FUNCTION_88_1()
{
  return sub_242272B18();
}

uint64_t OUTLINED_FUNCTION_89_0()
{
  return sub_242272644();
}

void OUTLINED_FUNCTION_90_0()
{
  JUMPOUT(0x2426A61F8);
}

void OUTLINED_FUNCTION_91_0()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_94_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_96_0()
{
  return type metadata accessor for InferenceProviderPrewarmInformation(0);
}

uint64_t OUTLINED_FUNCTION_97_0()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t OUTLINED_FUNCTION_98_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_99(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_100()
{
  return swift_getAssociatedTypeWitness();
}

void OUTLINED_FUNCTION_101(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  sub_2421CE228(a1, 255, a3, a4);
}

uint64_t OUTLINED_FUNCTION_102()
{
  return sub_242272AF4();
}

uint64_t OUTLINED_FUNCTION_103@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>, __n128 a3@<Q1>)
{
  uint64_t v3;

  *(__n128 *)(v3 - 128) = a2;
  *(__n128 *)(v3 - 112) = a3;
  *(_QWORD *)(v3 - 96) = a1;
  return sub_242272D04();
}

uint64_t OUTLINED_FUNCTION_107@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 128) = a1;
  return v1 - 128;
}

uint64_t OUTLINED_FUNCTION_108()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_109()
{
  return sub_242272D64();
}

double OUTLINED_FUNCTION_110(uint64_t a1, uint64_t a2)
{
  double result;

  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_BYTE *)(a2 + 48) = -120;
  return result;
}

uint64_t OUTLINED_FUNCTION_111()
{
  return sub_242272680();
}

uint64_t OUTLINED_FUNCTION_112()
{
  return swift_willThrowTypedImpl();
}

uint64_t OUTLINED_FUNCTION_115(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t OUTLINED_FUNCTION_116@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_119@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_121()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_122(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_2421CE554(a1, v1);
}

uint64_t OUTLINED_FUNCTION_123()
{
  return sub_242272A7C();
}

uint64_t OUTLINED_FUNCTION_124()
{
  return sub_242272644();
}

uint64_t OUTLINED_FUNCTION_125()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1Tm(*(_QWORD *)(v0 - 160));
}

uint64_t OUTLINED_FUNCTION_126()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_129(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
}

uint64_t OUTLINED_FUNCTION_130()
{
  return sub_242272CEC();
}

uint64_t OUTLINED_FUNCTION_131()
{
  return sub_242272CBC();
}

uint64_t OUTLINED_FUNCTION_133()
{
  return sub_2422726EC();
}

uint64_t OUTLINED_FUNCTION_134()
{
  return sub_2422726EC();
}

uint64_t OUTLINED_FUNCTION_135()
{
  return sub_2422725CC();
}

uint64_t OUTLINED_FUNCTION_137@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 72);
}

unint64_t OUTLINED_FUNCTION_138()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_2421CE624();
}

uint64_t OUTLINED_FUNCTION_142()
{
  return _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
}

uint64_t OUTLINED_FUNCTION_144()
{
  return sub_242272644();
}

uint64_t OUTLINED_FUNCTION_145()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1Tm(v0);
}

uint64_t OUTLINED_FUNCTION_146()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_147()
{
  return sub_242272B48();
}

void OUTLINED_FUNCTION_149(uint64_t a1)
{
  uint64_t *v1;

  sub_2421D1230(a1, v1);
}

uint64_t OUTLINED_FUNCTION_151()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_152(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11, __int128 a12)
{
  return static AuditToken.== infix(_:_:)(&a12, &a9);
}

void OUTLINED_FUNCTION_153()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
}

uint64_t OUTLINED_FUNCTION_156()
{
  return sub_242272CD4();
}

uint64_t OUTLINED_FUNCTION_157()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_2421D1A2C()
{
  uint64_t v0;

  v0 = sub_2422724AC();
  __swift_allocate_value_buffer(v0, qword_2571E05B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2571E05B0);
  return sub_2422724A0();
}

uint64_t InferenceProviderExtension.__allocating_init()()
{
  uint64_t result;

  result = OUTLINED_FUNCTION_22_2();
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t InferenceProviderExtension.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0;
  return result;
}

uint64_t sub_2421D1AD4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t InferenceProviderExtension.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t InferenceProviderExtension.__deallocating_deinit()
{
  InferenceProviderExtension.deinit();
  return swift_deallocClassInstance();
}

uint64_t InferenceProviderExtension.configuration.getter()
{
  return swift_retain();
}

uint64_t sub_2421D1B28@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = InferenceProviderExtension.configuration.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_2421D1B50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 96))();
  *a1 = result;
  return result;
}

Swift::Bool __swiftcall InferenceProviderExtension.accept(connection:)(NSXPCConnection connection)
{
  return 0;
}

uint64_t sub_2421D1B80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  uint64_t result;
  uint64_t v12;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = dynamic_cast_existential_1_conditional(v3);
  if (v4)
  {
    v6 = v4;
    v7 = v5;
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    *(_QWORD *)(a1 + 24) = &type metadata for InferenceProviderAdapter;
    *(_QWORD *)(a1 + 32) = &protocol witness table for InferenceProviderAdapter;
    v9 = swift_allocObject();
    *(_QWORD *)a1 = v9;
    *(_QWORD *)(v9 + 40) = v6;
    *(_QWORD *)(v9 + 48) = v7;
    v10 = (uint64_t *)(v9 + 16);
LABEL_5:
    __swift_allocate_boxed_opaque_existential_1(v10);
    result = v8(v6, v7);
    *(_BYTE *)(a1 + 40) = 0;
    return result;
  }
  result = dynamic_cast_existential_1_conditional(v3);
  if (result)
  {
    v6 = result;
    v7 = v12;
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    *(_QWORD *)(a1 + 24) = result;
    *(_QWORD *)(a1 + 32) = v12;
    v10 = (uint64_t *)a1;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t InferenceProviderExtension.handleConnection(_:)(_xpc_connection_s *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  pid_t pid;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  __int128 v17[3];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2422724E8();
  MEMORY[0x24BDAC7A8](v7);
  pid = xpc_connection_get_pid(a1);
  swift_retain();
  sub_2421D1B80((uint64_t)v17);
  type metadata accessor for InferenceProviderXPCRequestDispatcher();
  swift_allocObject();
  InferenceProviderXPCRequestDispatcher.init(configuration:)(v17);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E05C8);
  swift_allocObject();
  v9 = swift_retain();
  sub_2421D22B8(v9);
  sub_24227253C();
  *(_DWORD *)(OUTLINED_FUNCTION_22_2() + 16) = pid;
  swift_unknownObjectRetain();
  swift_retain();
  sub_2422724D0();
  v10 = sub_2422724C4();
  v11 = sub_242272848();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v11);
  sub_242272830();
  swift_retain();
  swift_retain();
  v12 = sub_242272824();
  v13 = (_QWORD *)OUTLINED_FUNCTION_22_2();
  v14 = MEMORY[0x24BEE6930];
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = v2;
  v13[5] = v10;
  sub_2421B7ACC();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_2421D1FDC(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;

  v4 = sub_2422725A8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2571DF9D0 != -1)
    swift_once();
  v8 = sub_2422724AC();
  __swift_project_value_buffer(v8, (uint64_t)qword_2571E05B0);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v9(v7, a1, v4);
  v10 = sub_242272494();
  v11 = sub_242272914();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v12 = 67109378;
    v17 = a2;
    sub_242272950();
    *(_WORD *)(v12 + 8) = 2112;
    sub_2421D3878();
    swift_allocError();
    v9(v14, (uint64_t)v7, v4);
    v15 = _swift_stdlib_bridgeErrorToNSError();
    v16 = v15;
    sub_242272950();
    *v13 = v15;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_2421B5000, v10, v11, "Session with host process with %d was cancelled: %@", (uint8_t *)v12, 0x12u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543A6E28);
    swift_arrayDestroy();
    MEMORY[0x2426A6378](v13, -1, -1);
    MEMORY[0x2426A6378](v12, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  exit(1);
}

uint64_t sub_2421D21F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[2] = a4;
  v5[3] = a5;
  sub_242272830();
  v5[4] = sub_242272824();
  sub_2422727D0();
  return swift_task_switch();
}

uint64_t sub_2421D225C()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  v1 = swift_retain();
  sub_2421D1AD4(v1);
  return OUTLINED_FUNCTION_9_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421D2294(_xpc_connection_s *a1)
{
  return InferenceProviderExtension.handleConnection(_:)(a1);
}

uint64_t sub_2421D22B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  swift_defaultActor_initialize();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7818);
  v3 = sub_242272638();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7980);
  v4 = OUTLINED_FUNCTION_22_2();
  *(_DWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v1 + 112) = a1;
  *(_QWORD *)(v1 + 120) = v4;
  return v1;
}

double sub_2421D2338@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _OWORD *v73;
  double result;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;

  v86 = a2;
  v3 = type metadata accessor for InferenceProviderXPCRequest.Notification(0);
  v77 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v77 + 64);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v78 = (uint64_t)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v75 - v6;
  v8 = sub_242272620();
  v81 = *(_QWORD *)(v8 - 8);
  v82 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v80 = v9;
  v84 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  MEMORY[0x24BDAC7A8](v10);
  v79 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for InferenceProviderXPCRequest(0);
  v75 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v75 + 64);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v76 = (uint64_t)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v83 = (char *)&v75 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0660);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v75 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0668);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (uint64_t *)((char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v75 - v26;
  if ((sub_2422725E4() & 1) != 0)
  {
    sub_2421D3A10(&qword_2571E06A0, &qword_2571E0668);
    v28 = a1;
    sub_242272608();
    sub_2421D3A4C((uint64_t)v27, (uint64_t)v25, &qword_2571E0668);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v30 = *v25;
    if (EnumCaseMultiPayload == 1)
    {
      v31 = sub_242272848();
      __swift_storeEnumTagSinglePayload((uint64_t)v79, 1, 1, v31);
      v32 = (_QWORD *)swift_allocObject();
      v32[2] = 0;
      v32[3] = 0;
      v32[4] = v85;
      v32[5] = v30;
      swift_retain();
      sub_2421B7ACC();
      swift_release();
    }
    else
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E06B8);
      v41 = (uint64_t)v25 + *(int *)(v40 + 48);
      LODWORD(v79) = *((unsigned __int8 *)v25 + *(int *)(v40 + 64));
      sub_2421D3B28(v41, (uint64_t)v83, type metadata accessor for InferenceProviderXPCRequest);
      if (qword_2543AA808 != -1)
        swift_once();
      v42 = sub_2422724AC();
      __swift_project_value_buffer(v42, (uint64_t)qword_2543AA7E8);
      v43 = sub_242272494();
      v44 = sub_242272908();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v45 = 134217984;
        v87 = v30;
        sub_242272950();
        _os_log_impl(&dword_2421B5000, v43, v44, "Received message %llu.", v45, 0xCu);
        MEMORY[0x2426A6378](v45, -1, -1);
      }

      sub_2422725F0();
      v46 = v81;
      v47 = v82;
      (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v84, v28, v82);
      v48 = v76;
      sub_2421D3B5C((uint64_t)v83, v76, type metadata accessor for InferenceProviderXPCRequest);
      v49 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
      v50 = (v80 + *(unsigned __int8 *)(v75 + 80) + v49) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
      v51 = v13 + v50 + 7;
      v52 = v30;
      v53 = v51 & 0xFFFFFFFFFFFFFFF8;
      v54 = ((v51 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      v55 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(v55 + v49, v84, v47);
      sub_2421D3B28(v48, v55 + v50, type metadata accessor for InferenceProviderXPCRequest);
      *(_QWORD *)(v55 + v53) = v85;
      *(_QWORD *)(v55 + v54) = v52;
      swift_retain();
      sub_2421D35B0(v52, (char)v79, (uint64_t)&unk_2571E06C8, v55);
      swift_release();
      sub_2421D3DF4((uint64_t)v83, type metadata accessor for InferenceProviderXPCRequest);
    }
    v38 = &qword_2571E0668;
    v39 = (uint64_t)v27;
  }
  else
  {
    v83 = v7;
    sub_2421D3A10(&qword_2571E0670, &qword_2571E0660);
    v33 = a1;
    sub_242272608();
    sub_2421D3A4C((uint64_t)v21, (uint64_t)v19, &qword_2571E0660);
    v34 = swift_getEnumCaseMultiPayload();
    v76 = *v19;
    if (v34 == 1)
    {
      v35 = sub_242272848();
      __swift_storeEnumTagSinglePayload((uint64_t)v79, 1, 1, v35);
      v36 = (_QWORD *)swift_allocObject();
      v36[2] = 0;
      v36[3] = 0;
      v37 = v76;
      v36[4] = v85;
      v36[5] = v37;
      swift_retain();
      sub_2421B7ACC();
      swift_release();
      v38 = &qword_2571E0660;
      v39 = (uint64_t)v21;
    }
    else
    {
      v79 = v21;
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0688);
      v57 = (uint64_t)v19 + *(int *)(v56 + 48);
      LODWORD(v75) = *((unsigned __int8 *)v19 + *(int *)(v56 + 64));
      sub_2421D3B28(v57, (uint64_t)v83, type metadata accessor for InferenceProviderXPCRequest.Notification);
      if (qword_2543AA808 != -1)
        swift_once();
      v58 = sub_2422724AC();
      __swift_project_value_buffer(v58, (uint64_t)qword_2543AA7E8);
      v59 = sub_242272494();
      v60 = sub_242272908();
      if (os_log_type_enabled(v59, v60))
      {
        v61 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v61 = 134217984;
        v87 = v76;
        sub_242272950();
        _os_log_impl(&dword_2421B5000, v59, v60, "Received message %llu.", v61, 0xCu);
        MEMORY[0x2426A6378](v61, -1, -1);
      }

      v62 = v33;
      sub_2422725F0();
      v64 = v81;
      v63 = v82;
      v65 = v84;
      (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v84, v62, v82);
      v66 = (uint64_t)v83;
      v67 = v78;
      sub_2421D3B5C((uint64_t)v83, v78, type metadata accessor for InferenceProviderXPCRequest.Notification);
      v68 = (*(unsigned __int8 *)(v64 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
      v69 = (v80 + *(unsigned __int8 *)(v77 + 80) + v68) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
      v70 = (v4 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
      v71 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v64 + 32))(v71 + v68, v65, v63);
      sub_2421D3B28(v67, v71 + v69, type metadata accessor for InferenceProviderXPCRequest.Notification);
      *(_QWORD *)(v71 + v70) = v85;
      v72 = v76;
      *(_QWORD *)(v71 + ((v70 + 15) & 0xFFFFFFFFFFFFFFF8)) = v76;
      swift_retain();
      sub_2421D35B0(v72, v75, (uint64_t)&unk_2571E0698, v71);
      swift_release();
      sub_2421D3DF4(v66, type metadata accessor for InferenceProviderXPCRequest.Notification);
      v38 = &qword_2571E0660;
      v39 = (uint64_t)v79;
    }
  }
  sub_2421D3B00(v39, v38);
  v73 = (_OWORD *)v86;
  *(_QWORD *)(v86 + 32) = 0;
  result = 0.0;
  *v73 = 0u;
  v73[1] = 0u;
  return result;
}

uint64_t sub_2421D2D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  type metadata accessor for InferenceProviderXPCRequest(0);
  v4[12] = swift_task_alloc();
  v5 = sub_242272620();
  v4[13] = v5;
  v4[14] = *(_QWORD *)(v5 - 8);
  v4[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421D2DB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v1 = v0[15];
  v2 = v0[12];
  v3 = v0[9];
  OUTLINED_FUNCTION_29_3(v0[14]);
  sub_2421D3B5C(v3, v2, type metadata accessor for InferenceProviderXPCRequest);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E06D0);
  OUTLINED_FUNCTION_27_3();
  v4 = sub_2421D3678(v1, v2, type metadata accessor for InferenceProviderXPCRequest);
  v0[16] = v4;
  v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2571E06D8 + dword_2571E06D8);
  v5 = (_QWORD *)swift_task_alloc();
  v0[17] = v5;
  *v5 = v0;
  v5[1] = sub_2421D2E84;
  return v7((uint64_t)(v0 + 2), v4, v0[11]);
}

uint64_t sub_2421D2E84()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421D2EBC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint8_t *v5;

  if (qword_2543AA808 != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_54();
  __swift_project_value_buffer(v1, (uint64_t)qword_2543AA7E8);
  v2 = sub_242272494();
  v3 = sub_242272908();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 88);
    v5 = (uint8_t *)OUTLINED_FUNCTION_10();
    *(_DWORD *)v5 = 134217984;
    *(_QWORD *)(v0 + 56) = v4;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v2, v3, "Replying to message %llu.", v5, 0xCu);
    OUTLINED_FUNCTION_2();
  }

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_2422725FC();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_5_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421D2FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v9 = (uint64_t (*)(uint64_t))((char *)&dword_2571E06E0 + dword_2571E06E0);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v7;
  *v7 = v5;
  v7[1] = sub_2421D3E74;
  return v9(a5);
}

uint64_t sub_2421D3068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for InferenceProviderXPCRequest.Notification(0);
  v4[6] = swift_task_alloc();
  v5 = sub_242272620();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421D30EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v7;

  v1 = v0[9];
  v2 = v0[6];
  v3 = v0[3];
  OUTLINED_FUNCTION_29_3(v0[8]);
  sub_2421D3B5C(v3, v2, type metadata accessor for InferenceProviderXPCRequest.Notification);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E06E8);
  OUTLINED_FUNCTION_27_3();
  v4 = sub_2421D3678(v1, v2, type metadata accessor for InferenceProviderXPCRequest.Notification);
  v0[10] = v4;
  v7 = (char *)&dword_2571E06F0 + dword_2571E06F0;
  v5 = (_QWORD *)swift_task_alloc();
  v0[11] = v5;
  *v5 = v0;
  v5[1] = sub_2421D31B0;
  return ((uint64_t (*)(uint64_t, _QWORD))v7)(v4, v0[5]);
}

uint64_t sub_2421D31B0()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421D31E8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_9_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421D3224(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2421D3240()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 112);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *v2 = v0;
  v2[1] = sub_2421D32A0;
  return sub_24221969C(v1);
}

uint64_t sub_2421D32A0()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421D32D8()
{
  uint64_t v0;

  sub_2421D3624(*(_QWORD *)(v0 + 24));
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421D3300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  return swift_task_switch();
}

uint64_t sub_2421D331C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_2421D3378;
  return sub_242263B08(v0 + 16);
}

uint64_t sub_2421D3378()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421D33B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *boxed_opaque_existential_1;

  v1 = *(uint64_t **)(v0 + 64);
  sub_2421D3624(*(_QWORD *)(v0 + 80));
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v2);
  v1[3] = v2;
  v1[4] = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v1);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(boxed_opaque_existential_1, v4, v2);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2421D3438(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_2421D3450()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (qword_2543AA808 != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_54();
  __swift_project_value_buffer(v1, (uint64_t)qword_2543AA7E8);
  v2 = sub_242272494();
  v3 = sub_242272908();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 24);
    v5 = (uint8_t *)OUTLINED_FUNCTION_10();
    *(_DWORD *)v5 = 134217984;
    *(_QWORD *)(v0 + 16) = v4;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v2, v3, "Received task cancellation for message %llu.", v5, 0xCu);
    OUTLINED_FUNCTION_2();
  }

  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 120);
  v8 = swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v6;
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
  sub_24225C508((uint64_t *)(v7 + 16), *(_QWORD *)(v8 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 24));
  swift_task_dealloc();
  return OUTLINED_FUNCTION_5_2(*(uint64_t (**)(void))(v0 + 8));
}

void sub_2421D35B0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  os_unfair_lock_s *v9;
  uint64_t v10;
  os_unfair_lock_s *v11;

  v9 = *(os_unfair_lock_s **)(v4 + 120);
  v10 = (uint64_t)&v9[4];
  v11 = v9 + 6;
  os_unfair_lock_lock(v9 + 6);
  sub_24225C728(v10, a1, a2, a3, a4);
  os_unfair_lock_unlock(v11);
}

void sub_2421D3624(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  unint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(os_unfair_lock_s **)(v1 + 120);
  v4 = (unint64_t)&v3[4];
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_24225CBE8(v4, a1, v6, v7, v8, v9, v10, v11);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_2421D3678(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v4 = v3;
  *(_BYTE *)(v4 + 16) = sub_242272614() & 1;
  v6 = sub_2422725D8();
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = HIDWORD(v6);
  v15 = HIDWORD(v8);
  v16 = HIDWORD(v10);
  v17 = HIDWORD(v12);
  v18 = OUTLINED_FUNCTION_12_3();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1, v18);
  *(_DWORD *)(v4 + 20) = v7;
  *(_DWORD *)(v4 + 24) = v14;
  *(_DWORD *)(v4 + 28) = v9;
  *(_DWORD *)(v4 + 32) = v15;
  *(_DWORD *)(v4 + 36) = v11;
  *(_DWORD *)(v4 + 40) = v16;
  *(_DWORD *)(v4 + 44) = v13;
  *(_DWORD *)(v4 + 48) = v17;
  sub_2421D3B28(a2, v4 + *(_QWORD *)(*(_QWORD *)v4 + 120), a3);
  return v4;
}

uint64_t sub_2421D3738()
{
  return swift_deallocObject();
}

void sub_2421D3748(uint64_t a1)
{
  uint64_t v1;

  sub_2421D1FDC(a1, *(_DWORD *)(v1 + 16));
}

uint64_t sub_2421D3750()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2421D3784()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_23_3();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_4_2(v1);
  return sub_2421D21F0(v2, v3, v4, v5, v6);
}

uint64_t sub_2421D37DC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

void sub_2421D3808()
{
  JUMPOUT(0x2426A62C4);
}

uint64_t sub_2421D3818()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for InferenceProviderExtension(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InferenceProviderExtension);
}

uint64_t method lookup function for InferenceProviderExtension()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InferenceProviderExtension.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_2421D3878()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2543A6E00;
  if (!qword_2543A6E00)
  {
    v1 = sub_2422725A8();
    result = MEMORY[0x2426A62C4](MEMORY[0x24BEE6688], v1);
    atomic_store(result, (unint64_t *)&qword_2543A6E00);
  }
  return result;
}

uint64_t sub_2421D38BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_23_3();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_4_2(v1);
  return sub_2421D2FFC(v2, v3, v4, v5, v6);
}

uint64_t sub_2421D3914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_12_3();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  type metadata accessor for InferenceProviderXPCRequest.Notification(0);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v4 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_3_3(v4);
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_28_3();
  return swift_deallocObject();
}

uint64_t sub_2421D39B8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_12_3();
  v1 = OUTLINED_FUNCTION_13_2();
  type metadata accessor for InferenceProviderXPCRequest.Notification(v1);
  OUTLINED_FUNCTION_1_2();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v2;
  v3 = OUTLINED_FUNCTION_14_4(v2, (uint64_t)sub_2421D3E74);
  return sub_2421D3068(v3, v4, v5, v6);
}

void sub_2421D3A10(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x2426A62C4](&unk_242282770, v3), a1);
  }
  OUTLINED_FUNCTION_34();
}

void sub_2421D3A4C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_10_2(v3);
  OUTLINED_FUNCTION_34();
}

uint64_t objectdestroy_6Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2421D3AA8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_23_3();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_4_2(v1);
  return sub_2421D2FFC(v2, v3, v4, v5, v6);
}

void sub_2421D3B00(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_3_3(v2);
  OUTLINED_FUNCTION_34();
}

void sub_2421D3B28(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_115(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  OUTLINED_FUNCTION_34();
}

void sub_2421D3B5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_115(a1, a2, a3);
  OUTLINED_FUNCTION_10_2(v3);
  OUTLINED_FUNCTION_34();
}

uint64_t sub_2421D3B7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = OUTLINED_FUNCTION_12_3();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(type metadata accessor for InferenceProviderXPCRequest(0) - 8);
  v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v7 = v0 + v6;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRelease();
      v8 = v7 + *(int *)(type metadata accessor for InferenceProviderPrewarmInformation(0) + 24);
      v9 = OUTLINED_FUNCTION_21();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      swift_bridgeObjectRelease();
      break;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0);
      goto LABEL_4;
    case 3u:
      v12 = type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
      sub_2422725CC();
      if (!OUTLINED_FUNCTION_19_2())
        OUTLINED_FUNCTION_15_3();
      type metadata accessor for ClientData(0);
      if (!OUTLINED_FUNCTION_19_2())
        OUTLINED_FUNCTION_15_3();
      v16 = v12;
      v13 = v7 + *(int *)(v12 + 24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = type metadata accessor for InferenceProviderRequestConfiguration(0);
      v15 = v13 + *(int *)(v14 + 28);
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_26_2(v15);
      OUTLINED_FUNCTION_26_2(v13 + *(int *)(v14 + 32));
      OUTLINED_FUNCTION_24_3();
      OUTLINED_FUNCTION_24_3();
      OUTLINED_FUNCTION_26_2(v7 + *(int *)(v16 + 28));
      break;
    case 4u:
    case 5u:
    case 6u:
LABEL_4:
      v10 = OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_3_3(v10);
      break;
    default:
      break;
  }
  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_28_3();
  return swift_deallocObject();
}

uint64_t sub_2421D3D9C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_12_3();
  v1 = OUTLINED_FUNCTION_13_2();
  type metadata accessor for InferenceProviderXPCRequest(v1);
  OUTLINED_FUNCTION_1_2();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v2;
  v3 = OUTLINED_FUNCTION_14_4(v2, (uint64_t)sub_2421D3E74);
  return sub_2421D2D2C(v3, v4, v5, v6);
}

void sub_2421D3DF4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  OUTLINED_FUNCTION_3_3(v2);
  OUTLINED_FUNCTION_34();
}

uint64_t dynamic_cast_existential_1_conditional(uint64_t a1)
{
  if (swift_conformsToProtocol2())
    return a1;
  else
    return 0;
}

uint64_t sub_2421D3E50()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_3_3(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_4_2(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_5_2(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_9_3(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_10_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_12_3()
{
  return sub_242272620();
}

uint64_t OUTLINED_FUNCTION_13_2()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_14_4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_15_3()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_19_2()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_22_2()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_24_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_26_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_27_3()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_28_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_29_3@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 16))(v1);
}

BOOL static RequestPriority.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

ModelManagerServices::RequestPriority_optional __swiftcall RequestPriority.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ModelManagerServices::RequestPriority_optional result;
  char v5;

  v2 = v1;
  v3 = sub_242272A34();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t RequestPriority.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aNone_3[8 * *v0];
}

void sub_2421D4080()
{
  sub_2421C7B4C();
}

unint64_t sub_2421D4090()
{
  unint64_t result;

  result = qword_2543A6E68;
  if (!qword_2543A6E68)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for RequestPriority, &type metadata for RequestPriority);
    atomic_store(result, (unint64_t *)&qword_2543A6E68);
  }
  return result;
}

void sub_2421D40CC()
{
  sub_24225ECB4();
}

uint64_t sub_2421D40D4()
{
  return sub_2421C7E10();
}

void sub_2421D40DC()
{
  sub_24225EE50();
}

ModelManagerServices::RequestPriority_optional sub_2421D40E4(Swift::String *a1)
{
  return RequestPriority.init(rawValue:)(*a1);
}

uint64_t sub_2421D40F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = RequestPriority.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_2421D4118(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_242256BF0(*a1, *a2);
}

BOOL sub_2421D4124(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_242256C14(*a1, *a2);
}

BOOL sub_2421D4130(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_242256C38(*a1, *a2);
}

uint64_t sub_2421D413C()
{
  sub_2421D4338();
  return sub_242272764();
}

uint64_t sub_2421D4198()
{
  sub_2421D4338();
  return sub_24227274C();
}

uint64_t getEnumTagSinglePayload for RequestPriority(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestPriority(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2421D42B8 + 4 * byte_2422768F5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2421D42EC + 4 * asc_2422768F0[v4]))();
}

uint64_t sub_2421D42EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421D42F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2421D42FCLL);
  return result;
}

uint64_t sub_2421D4308(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2421D4310);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2421D4314(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421D431C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RequestPriority()
{
  return &type metadata for RequestPriority;
}

unint64_t sub_2421D4338()
{
  unint64_t result;

  result = qword_2543A6E70;
  if (!qword_2543A6E70)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for RequestPriority, &type metadata for RequestPriority);
    atomic_store(result, (unint64_t *)&qword_2543A6E70);
  }
  return result;
}

uint64_t sub_2421D4374()
{
  __int128 *v0;
  _BYTE v2[56];

  sub_2421C4020(v0, (uint64_t)v2);
  return InferenceError.description.getter();
}

uint64_t sub_2421D43AC()
{
  __int128 *v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[56];

  sub_2421C4020(v0, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7AE0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242276AB0;
  *(_QWORD *)(inited + 32) = sub_2422726A4();
  *(_QWORD *)(inited + 40) = v2;
  v3 = InferenceError.description.getter();
  v4 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v5;
  *(_QWORD *)(inited + 80) = sub_2422726A4();
  *(_QWORD *)(inited + 88) = v6;
  v7 = InferenceError.description.getter();
  *(_QWORD *)(inited + 120) = v4;
  *(_QWORD *)(inited + 96) = v7;
  *(_QWORD *)(inited + 104) = v8;
  OUTLINED_FUNCTION_29_1();
  return sub_242272638();
}

uint64_t sub_2421D446C()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7AE0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242276AB0;
  *(_QWORD *)(inited + 32) = sub_2422726A4();
  *(_QWORD *)(inited + 40) = v1;
  ModelManagerError.description.getter();
  v2 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v4;
  *(_QWORD *)(inited + 80) = sub_2422726A4();
  *(_QWORD *)(inited + 88) = v5;
  ModelManagerError.description.getter();
  *(_QWORD *)(inited + 120) = v2;
  *(_QWORD *)(inited + 96) = v6;
  *(_QWORD *)(inited + 104) = v7;
  return sub_242272638();
}

uint64_t sub_2421D4520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2422724AC();
  __swift_allocate_value_buffer(v0, qword_2571E06F8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2571E06F8);
  if (qword_2543AA570 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2543AA558);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_2421D45B0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  char v14;

  v3 = a1 == 0x636E657265666E69 && a2 == 0xEE00726F72724565;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656E696665646E75 && a2 == 0xEE00726F72724564;
    if (v6 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000242283D50 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000242283D70 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v7 = a1 == 0x6C616E7265746E69 && a2 == 0xED0000726F727245;
      if (v7 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000242283D90 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else if (a1 == 0xD000000000000012 && a2 == 0x8000000242283DB0 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002422833D0 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else
      {
        v8 = a1 == 0x726F727245637078 && a2 == 0xE800000000000000;
        if (v8 || (sub_242272C20() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 8;
        }
        else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000242283DD0 || (sub_242272C20() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 9;
        }
        else
        {
          v9 = a1 == 0x4465736143657375 && a2 == 0xEF64656C62617369;
          if (v9 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000242283DF0 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 11;
          }
          else if (a1 == 0xD000000000000016 && a2 == 0x8000000242283E10 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 12;
          }
          else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000242283E30 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 13;
          }
          else
          {
            v10 = a1 == 0x4E74736575716572 && a2 == 0xEF646E756F46746FLL;
            if (v10 || (sub_242272C20() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 14;
            }
            else if (a1 == 0xD000000000000014 && a2 == 0x8000000242283E50 || (sub_242272C20() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 15;
            }
            else if (a1 == 0xD000000000000012 && a2 == 0x8000000242283330 || (sub_242272C20() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 16;
            }
            else if (a1 == 0xD000000000000013 && a2 == 0x8000000242283E70 || (sub_242272C20() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 17;
            }
            else
            {
              v11 = a1 == 0x746F4E7465737361 && a2 == 0xED0000646E756F46;
              if (v11 || (sub_242272C20() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 18;
              }
              else if (a1 == 0xD000000000000020 && a2 == 0x8000000242283E90 || (sub_242272C20() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 19;
              }
              else if (a1 == 0xD000000000000022 && a2 == 0x8000000242283EC0 || (sub_242272C20() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 20;
              }
              else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000242283EF0 || (sub_242272C20() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 21;
              }
              else
              {
                v12 = a1 == 0x4E6E6F6973736573 && a2 == 0xEF646E756F46746FLL;
                if (v12 || (sub_242272C20() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 22;
                }
                else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000242283F10 || (sub_242272C20() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 23;
                }
                else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000242283F30 || (sub_242272C20() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 24;
                }
                else if (a1 == 0xD000000000000011 && a2 == 0x8000000242283F50 || (sub_242272C20() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 25;
                }
                else if (a1 == 0xD000000000000017 && a2 == 0x8000000242283F70 || (sub_242272C20() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 26;
                }
                else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000242283F90 || (sub_242272C20() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 27;
                }
                else if (a1 == 0xD000000000000012 && a2 == 0x8000000242283FB0 || (sub_242272C20() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 28;
                }
                else if (a1 == 0xD000000000000011 && a2 == 0x8000000242283FD0 || (sub_242272C20() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 29;
                }
                else
                {
                  v13 = a1 == 0x6F4E7963696C6F70 && a2 == 0xEE00646E756F4674;
                  if (v13 || (sub_242272C20() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 30;
                  }
                  else if (a1 == 0xD000000000000018 && a2 == 0x8000000242283FF0 || (sub_242272C20() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 31;
                  }
                  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000242284010)
                  {
                    swift_bridgeObjectRelease();
                    return 32;
                  }
                  else
                  {
                    v14 = sub_242272C20();
                    swift_bridgeObjectRelease();
                    if ((v14 & 1) != 0)
                      return 32;
                    else
                      return 33;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_2421D519C()
{
  return 33;
}

uint64_t sub_2421D51A4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2421D51E0 + 4 * byte_242276AC0[a1]))(0xD000000000000012, 0x8000000242283D50);
}

uint64_t sub_2421D51E0()
{
  return 0x636E657265666E69;
}

uint64_t sub_2421D5208()
{
  return 0x656E696665646E75;
}

uint64_t sub_2421D522C()
{
  uint64_t v0;

  return v0 + 4;
}

uint64_t sub_2421D5474(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701080931 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_242272C20();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2421D5540(char a1)
{
  if ((a1 & 1) != 0)
    return 1701080931;
  else
    return 0x6E69616D6F64;
}

uint64_t sub_2421D556C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6E75426C65646F6DLL && a2 == 0xED00004449656C64;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000242284030)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_242272C20();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2421D5668(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 0x6E75426C65646F6DLL;
}

uint64_t sub_2421D56B0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    OUTLINED_FUNCTION_86_0();
    v4 = 0;
  }
  else
  {
    v3 = sub_242272C20();
    OUTLINED_FUNCTION_86_0();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2421D5714()
{
  sub_2421DABC8();
  return sub_242272D70();
}

uint64_t sub_2421D573C()
{
  sub_2421DABC8();
  return sub_242272D7C();
}

uint64_t sub_2421D5764()
{
  sub_2421DAAD8();
  return sub_242272D70();
}

uint64_t sub_2421D578C()
{
  sub_2421DAAD8();
  return sub_242272D7C();
}

uint64_t sub_2421D57B4()
{
  sub_2421DA970();
  return sub_242272D70();
}

uint64_t sub_2421D57DC()
{
  sub_2421DA970();
  return sub_242272D7C();
}

uint64_t sub_2421D5804()
{
  sub_2421DAB8C();
  return sub_242272D70();
}

uint64_t sub_2421D582C()
{
  sub_2421DAB8C();
  return sub_242272D7C();
}

uint64_t sub_2421D5854()
{
  unsigned __int8 *v0;

  return sub_2421D51A4(*v0);
}

uint64_t sub_2421D585C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421D45B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2421D5880@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2421D519C();
  *a1 = result;
  return result;
}

uint64_t sub_2421D58A4()
{
  sub_2421DA808();
  return sub_242272D70();
}

uint64_t sub_2421D58CC()
{
  sub_2421DA808();
  return sub_242272D7C();
}

uint64_t sub_2421D58F4()
{
  sub_2421DA9AC();
  return sub_242272D70();
}

uint64_t sub_2421D591C()
{
  sub_2421DA9AC();
  return sub_242272D7C();
}

uint64_t sub_2421D5944()
{
  sub_2421DACF4();
  return sub_242272D70();
}

uint64_t sub_2421D596C()
{
  sub_2421DACF4();
  return sub_242272D7C();
}

uint64_t sub_2421D5994()
{
  sub_2421DA8F8();
  return sub_242272D70();
}

uint64_t sub_2421D59BC()
{
  sub_2421DA8F8();
  return sub_242272D7C();
}

uint64_t sub_2421D59E4()
{
  sub_2421DAFC4();
  return sub_242272D70();
}

uint64_t sub_2421D5A0C()
{
  sub_2421DAFC4();
  return sub_242272D7C();
}

uint64_t sub_2421D5A34()
{
  char *v0;

  return sub_2421D5540(*v0);
}

uint64_t sub_2421D5A3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421D5474(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2421D5A60()
{
  sub_2421DA880();
  return sub_242272D70();
}

uint64_t sub_2421D5A88()
{
  sub_2421DA880();
  return sub_242272D7C();
}

uint64_t sub_2421D5AB0()
{
  sub_2421DAD30();
  return sub_242272D70();
}

uint64_t sub_2421D5AD8()
{
  sub_2421DAD30();
  return sub_242272D7C();
}

uint64_t sub_2421D5B00()
{
  sub_2421DAED4();
  return sub_242272D70();
}

uint64_t sub_2421D5B28()
{
  sub_2421DAED4();
  return sub_242272D7C();
}

uint64_t sub_2421D5B50()
{
  sub_2421DAA60();
  return sub_242272D70();
}

uint64_t sub_2421D5B78()
{
  sub_2421DAA60();
  return sub_242272D7C();
}

uint64_t sub_2421D5BA0()
{
  char *v0;

  return sub_2421D5668(*v0);
}

uint64_t sub_2421D5BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421D556C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2421D5BCC()
{
  sub_2421DAA24();
  return sub_242272D70();
}

uint64_t sub_2421D5BF4()
{
  sub_2421DAA24();
  return sub_242272D7C();
}

uint64_t sub_2421D5C1C()
{
  sub_2421DAE5C();
  return sub_242272D70();
}

uint64_t sub_2421D5C44()
{
  sub_2421DAE5C();
  return sub_242272D7C();
}

uint64_t sub_2421D5C6C()
{
  sub_2421DAF4C();
  return sub_242272D70();
}

uint64_t sub_2421D5C94()
{
  sub_2421DAF4C();
  return sub_242272D7C();
}

uint64_t sub_2421D5CBC()
{
  sub_2421DA9E8();
  return sub_242272D70();
}

uint64_t sub_2421D5CE4()
{
  sub_2421DA9E8();
  return sub_242272D7C();
}

uint64_t sub_2421D5D0C()
{
  sub_2421DAB14();
  return sub_242272D70();
}

uint64_t sub_2421D5D34()
{
  sub_2421DAB14();
  return sub_242272D7C();
}

uint64_t sub_2421D5D5C()
{
  sub_2421DAE98();
  return sub_242272D70();
}

uint64_t sub_2421D5D84()
{
  sub_2421DAE98();
  return sub_242272D7C();
}

uint64_t sub_2421D5DAC()
{
  sub_2421DACB8();
  return sub_242272D70();
}

uint64_t sub_2421D5DD4()
{
  sub_2421DACB8();
  return sub_242272D7C();
}

uint64_t sub_2421D5DFC()
{
  sub_2421DAC04();
  return sub_242272D70();
}

uint64_t sub_2421D5E24()
{
  sub_2421DAC04();
  return sub_242272D7C();
}

uint64_t sub_2421D5E4C()
{
  sub_2421DA934();
  return sub_242272D70();
}

uint64_t sub_2421D5E74()
{
  sub_2421DA934();
  return sub_242272D7C();
}

uint64_t sub_2421D5E9C()
{
  sub_2421DA8BC();
  return sub_242272D70();
}

uint64_t sub_2421D5EC4()
{
  sub_2421DA8BC();
  return sub_242272D7C();
}

uint64_t sub_2421D5EEC()
{
  sub_2421DAC7C();
  return sub_242272D70();
}

uint64_t sub_2421D5F14()
{
  sub_2421DAC7C();
  return sub_242272D7C();
}

uint64_t sub_2421D5F3C()
{
  sub_2421DAC40();
  return sub_242272D70();
}

uint64_t sub_2421D5F64()
{
  sub_2421DAC40();
  return sub_242272D7C();
}

uint64_t sub_2421D5F8C()
{
  sub_2421DAA9C();
  return sub_242272D70();
}

uint64_t sub_2421D5FB4()
{
  sub_2421DAA9C();
  return sub_242272D7C();
}

uint64_t sub_2421D5FDC()
{
  sub_2421DA844();
  return sub_242272D70();
}

uint64_t sub_2421D6004()
{
  sub_2421DA844();
  return sub_242272D7C();
}

uint64_t sub_2421D602C()
{
  sub_2421DAF88();
  return sub_242272D70();
}

uint64_t sub_2421D6054()
{
  sub_2421DAF88();
  return sub_242272D7C();
}

uint64_t sub_2421D607C()
{
  sub_2421DADA8();
  return sub_242272D70();
}

uint64_t sub_2421D60A4()
{
  sub_2421DADA8();
  return sub_242272D7C();
}

uint64_t sub_2421D60CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421D56B0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2421D60F4()
{
  sub_2421DAB50();
  return sub_242272D70();
}

uint64_t sub_2421D611C()
{
  sub_2421DAB50();
  return sub_242272D7C();
}

uint64_t sub_2421D6144()
{
  sub_2421DAE20();
  return sub_242272D70();
}

uint64_t sub_2421D616C()
{
  sub_2421DAE20();
  return sub_242272D7C();
}

uint64_t sub_2421D6194()
{
  sub_2421DAF10();
  return sub_242272D70();
}

uint64_t sub_2421D61BC()
{
  sub_2421DAF10();
  return sub_242272D7C();
}

uint64_t sub_2421D61E4()
{
  sub_2421DAD6C();
  return sub_242272D70();
}

uint64_t sub_2421D620C()
{
  sub_2421DAD6C();
  return sub_242272D7C();
}

uint64_t sub_2421D6234()
{
  sub_2421DADE4();
  return sub_242272D70();
}

uint64_t sub_2421D625C()
{
  sub_2421DADE4();
  return sub_242272D7C();
}

uint64_t sub_2421D6284()
{
  sub_2421DB178(&qword_2543A7800, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  return sub_242272C8C();
}

uint64_t sub_2421D62C4()
{
  sub_2421DB178(&qword_2543A7800, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  return sub_242272C80();
}

void ModelManagerError.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;

  v2 = sub_24227238C();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_60_2();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_82_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_68_1();
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_21_1();
  sub_2421D6AB4(v0, v1);
  v6 = (char *)sub_2421D63F0 + 4 * word_242276AE2[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2421D63F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;

  v2 = *(_QWORD *)v0;
  v3 = *(_QWORD *)(v0 + 8);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_BYTE *)(v0 + 48);
  *(_QWORD *)(v1 - 144) = v2;
  *(_QWORD *)(v1 - 136) = v3;
  *(_QWORD *)(v1 - 128) = v4;
  *(_QWORD *)(v1 - 120) = v5;
  *(_QWORD *)(v1 - 112) = v6;
  *(_QWORD *)(v1 - 104) = v7;
  *(_BYTE *)(v1 - 96) = v8;
  v9 = InferenceError.description.getter();
  sub_2421C1F98(v2, v3, v4, v5, v6, v7, v8);
  return v9;
}

uint64_t type metadata accessor for ModelManagerError()
{
  uint64_t result;

  result = qword_2543AA748;
  if (!qword_2543AA748)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2421D6AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ModelManagerError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void ModelManagerError.errorCode.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;

  OUTLINED_FUNCTION_68_1();
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_36_1(v0);
  OUTLINED_FUNCTION_29_1();
  v2 = (char *)sub_2421D6B5C + 4 * byte_242276B24[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2421D6B5C()
{
  OUTLINED_FUNCTION_26_3();
  return 1001;
}

void static ModelManagerError.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD v34[18];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a1;
  v36 = a2;
  v3 = sub_24227238C();
  v34[15] = *(_QWORD *)(v3 - 8);
  v34[16] = v3;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v6);
  v34[0] = (char *)v34 - v7;
  v34[17] = OUTLINED_FUNCTION_68_1();
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_20_4();
  v34[14] = v10;
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_60_2();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_82_2();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v26 = MEMORY[0x24BDAC7A8](v25);
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_84_2();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_83_2();
  MEMORY[0x24BDAC7A8](v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0718);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_62_1();
  v31 = v2 + *(int *)(v30 + 48);
  sub_2421D6AB4(v35, v2);
  v32 = v36;
  v36 = v31;
  OUTLINED_FUNCTION_36_1(v32);
  v37 = v2;
  v33 = (char *)sub_2421D6F94 + 4 * word_242276B46[OUTLINED_FUNCTION_19_3()];
  __asm { BR              X10 }
}

uint64_t sub_2421D6F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;

  v3 = OUTLINED_FUNCTION_27_4();
  sub_2421D6AB4(v3, v0);
  v5 = *(_QWORD *)v0;
  v4 = *(_QWORD *)(v0 + 8);
  v7 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v0 + 24);
  v9 = *(_QWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 40);
  v10 = *(_BYTE *)(v0 + 48);
  v11 = *(_QWORD *)(v2 - 216);
  if (OUTLINED_FUNCTION_19_3())
  {
    OUTLINED_FUNCTION_41();
    sub_2421DB044(v1, &qword_2571E0718);
    v12 = 0;
  }
  else
  {
    v14 = *(_QWORD *)v11;
    v15 = *(_QWORD *)(v11 + 8);
    v16 = *(_QWORD *)(v11 + 16);
    v17 = *(_QWORD *)(v11 + 24);
    *(_QWORD *)(v2 - 232) = v17;
    *(_QWORD *)(v2 - 224) = v16;
    v18 = *(_QWORD *)(v11 + 32);
    v19 = *(_QWORD *)(v11 + 40);
    *(_QWORD *)(v2 - 248) = v19;
    *(_QWORD *)(v2 - 240) = v18;
    v20 = *(unsigned __int8 *)(v11 + 48);
    *(_DWORD *)(v2 - 216) = v20;
    *(_QWORD *)(v2 - 144) = v5;
    *(_QWORD *)(v2 - 136) = v4;
    *(_QWORD *)(v2 - 128) = v7;
    *(_QWORD *)(v2 - 120) = v6;
    *(_QWORD *)(v2 - 112) = v9;
    *(_QWORD *)(v2 - 104) = v8;
    *(_BYTE *)(v2 - 96) = v10;
    *(_QWORD *)(v2 - 200) = v14;
    *(_QWORD *)(v2 - 192) = v15;
    *(_QWORD *)(v2 - 184) = v16;
    *(_QWORD *)(v2 - 176) = v17;
    *(_QWORD *)(v2 - 168) = v18;
    *(_QWORD *)(v2 - 160) = v19;
    *(_BYTE *)(v2 - 152) = v20;
    static InferenceError.== infix(_:_:)(v2 - 144);
    v12 = v21;
    sub_2421C1F98(v14, v15, *(_QWORD *)(v2 - 224), *(_QWORD *)(v2 - 232), *(_QWORD *)(v2 - 240), *(_QWORD *)(v2 - 248), *(_DWORD *)(v2 - 216));
    OUTLINED_FUNCTION_41();
    sub_2421DA7CC(*(_QWORD *)(v2 - 208));
  }
  return v12 & 1;
}

void ModelManagerError.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109[16];
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE v119[8];
  uint64_t v120;
  _BYTE v121[8];
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE v125[8];
  uint64_t v126;
  uint64_t v127;
  _BYTE v128[8];
  _BYTE v129[8];
  _BYTE v130[8];
  _BYTE v131[8];
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD v135[5];
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD v139[2];
  _BYTE v140[8];
  _BYTE v141[8];
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7AB8);
  v133 = *(_QWORD *)(v1 - 8);
  v134 = v1;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_52_2(v3, v109[0]);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A80);
  v135[1] = *(_QWORD *)(v4 - 8);
  v135[2] = v4;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_0();
  v135[0] = v6;
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A18);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v132 - 8));
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_13_0((uint64_t)v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A38);
  OUTLINED_FUNCTION_15_0(v9, (uint64_t)&v145);
  OUTLINED_FUNCTION_3_0(v10);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_13_0((uint64_t)v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A58);
  OUTLINED_FUNCTION_15_0(v13, (uint64_t)&v142);
  OUTLINED_FUNCTION_3_0(v14);
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_13_0((uint64_t)v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A79D0);
  OUTLINED_FUNCTION_15_0(v17, (uint64_t)&v144);
  OUTLINED_FUNCTION_3_0(v18);
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_13_0((uint64_t)v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A78);
  OUTLINED_FUNCTION_15_0(v21, (uint64_t)v140);
  OUTLINED_FUNCTION_3_0(v22);
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_13_0((uint64_t)v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A00);
  OUTLINED_FUNCTION_15_0(v25, (uint64_t)v141);
  OUTLINED_FUNCTION_3_0(v26);
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_13_0((uint64_t)v109 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7AB0);
  OUTLINED_FUNCTION_15_0(v29, (uint64_t)&v143);
  OUTLINED_FUNCTION_3_0(v30);
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_13_0((uint64_t)v109 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A79C8);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v127 - 8));
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_13_0((uint64_t)v109 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A28);
  OUTLINED_FUNCTION_15_0(v35, (uint64_t)v139);
  OUTLINED_FUNCTION_3_0(v36);
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_13_0((uint64_t)v109 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7AA8);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v126 - 8));
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_13_0((uint64_t)v109 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7AC8);
  OUTLINED_FUNCTION_15_0(v41, (uint64_t)&v136);
  OUTLINED_FUNCTION_3_0(v42);
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_13_0((uint64_t)v109 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A79C0);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v124 - 8));
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_13_0((uint64_t)v109 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A10);
  OUTLINED_FUNCTION_15_0(v47, (uint64_t)v135);
  OUTLINED_FUNCTION_3_0(v48);
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v50);
  v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A60);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v123 - 8));
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v52);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A50);
  OUTLINED_FUNCTION_15_0(v53, (uint64_t)v130);
  OUTLINED_FUNCTION_3_0(v54);
  MEMORY[0x24BDAC7A8](v55);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v56);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A68);
  OUTLINED_FUNCTION_15_0(v57, (uint64_t)v131);
  OUTLINED_FUNCTION_3_0(v58);
  MEMORY[0x24BDAC7A8](v59);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v60);
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A20);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v122 - 8));
  MEMORY[0x24BDAC7A8](v61);
  OUTLINED_FUNCTION_2_0();
  v120 = v62;
  v63 = OUTLINED_FUNCTION_21();
  v135[3] = *(_QWORD *)(v63 - 8);
  v135[4] = v63;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v64);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v65);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v66);
  OUTLINED_FUNCTION_13_0((uint64_t)v109 - v67);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A98);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v118 - 8));
  MEMORY[0x24BDAC7A8](v68);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v69);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A70);
  OUTLINED_FUNCTION_15_0(v70, (uint64_t)v129);
  OUTLINED_FUNCTION_3_0(v71);
  MEMORY[0x24BDAC7A8](v72);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v73);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A88);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v117 - 8));
  MEMORY[0x24BDAC7A8](v74);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v75);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A30);
  OUTLINED_FUNCTION_15_0(v76, (uint64_t)v128);
  OUTLINED_FUNCTION_3_0(v77);
  MEMORY[0x24BDAC7A8](v78);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v79);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7AA0);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v116 - 8));
  MEMORY[0x24BDAC7A8](v80);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v81);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A79E0);
  OUTLINED_FUNCTION_15_0(v82, (uint64_t)v125);
  OUTLINED_FUNCTION_3_0(v83);
  MEMORY[0x24BDAC7A8](v84);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v85);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A79D8);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v115 - 8));
  MEMORY[0x24BDAC7A8](v86);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v87);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A40);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v114 - 8));
  MEMORY[0x24BDAC7A8](v88);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v89);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A90);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v113 - 8));
  MEMORY[0x24BDAC7A8](v90);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v91);
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A79E8);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v112 - 8));
  MEMORY[0x24BDAC7A8](v92);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v93);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7AC0);
  OUTLINED_FUNCTION_15_0(v94, (uint64_t)v121);
  OUTLINED_FUNCTION_3_0(v95);
  MEMORY[0x24BDAC7A8](v96);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v97);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A48);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v111 - 8));
  MEMORY[0x24BDAC7A8](v98);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v99);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A79F8);
  MEMORY[0x24BDAC7A8](v110);
  OUTLINED_FUNCTION_66();
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A79F0);
  OUTLINED_FUNCTION_15_0(v100, (uint64_t)v119);
  OUTLINED_FUNCTION_3_0(v101);
  MEMORY[0x24BDAC7A8](v102);
  OUTLINED_FUNCTION_62_1();
  type metadata accessor for ModelManagerError();
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v103);
  OUTLINED_FUNCTION_66();
  v106 = v105 - v104;
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7A08);
  v136 = *(_QWORD *)(v138 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v107);
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_119_0();
  v137 = v0;
  sub_242272D64();
  sub_2421D6AB4(v139[1], v106);
  v108 = (char *)sub_2421D7E10 + 4 * word_242276B88[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_2421D7E10()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *v0;
  v4 = v0[1];
  *(_QWORD *)(v2 - 152) = *v0;
  v5 = v0[2];
  v6 = v0[3];
  *(_QWORD *)(v2 - 200) = v6;
  *(_QWORD *)(v2 - 192) = v4;
  v7 = v0[4];
  *(_QWORD *)(v2 - 216) = v0[5];
  *(_QWORD *)(v2 - 208) = v5;
  v8 = *((_BYTE *)v0 + 48);
  *(_BYTE *)(v2 - 144) = 0;
  sub_2421DAFC4();
  v9 = *(_QWORD *)(v2 - 176);
  v10 = *(_QWORD *)(v2 - 168);
  sub_242272AF4();
  *(_QWORD *)(v2 - 144) = v3;
  *(_QWORD *)(v2 - 136) = v4;
  v11 = *(_QWORD *)(v2 - 208);
  *(_QWORD *)(v2 - 128) = v11;
  *(_QWORD *)(v2 - 120) = v6;
  v12 = *(_QWORD *)(v2 - 216);
  *(_QWORD *)(v2 - 112) = v7;
  *(_QWORD *)(v2 - 104) = v12;
  *(_BYTE *)(v2 - 96) = v8;
  sub_2421C2684();
  OUTLINED_FUNCTION_53_2();
  OUTLINED_FUNCTION_14_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 856) + 8));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 184) + 8))(v9, v10);
  sub_2421C1F98(*(_QWORD *)(v2 - 152), *(_QWORD *)(v2 - 192), v11, *(_QWORD *)(v2 - 200), v7, v12, v8);
  OUTLINED_FUNCTION_16_0();
}

void sub_2421D87A0()
{
  OUTLINED_FUNCTION_90_1();
  sub_242272AF4();
  JUMPOUT(0x2421D8774);
}

void ModelManagerError.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t *v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155[23];
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168[8];
  char v169[8];
  uint64_t v170;
  char v171[8];
  char v172[8];
  char v173[8];
  char v174[8];
  char v175[8];
  char v176[8];
  char v177[8];
  char v178[8];
  char v179[8];
  char v180[8];
  char v181[8];
  char v182[8];
  char v183[8];
  char v184[8];
  _QWORD v185[2];
  uint64_t v186;
  _QWORD v187[3];
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;

  v187[0] = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7768);
  OUTLINED_FUNCTION_15_0(v6, (uint64_t)&v186);
  OUTLINED_FUNCTION_3_0(v7);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_0();
  v186 = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7730);
  OUTLINED_FUNCTION_15_0(v10, (uint64_t)v187);
  v187[2] = v11;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_2_0();
  v187[1] = v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A76C8);
  OUTLINED_FUNCTION_15_0(v14, (uint64_t)v185);
  OUTLINED_FUNCTION_3_0(v15);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_2_0();
  v185[1] = v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A76E8);
  OUTLINED_FUNCTION_15_0(v18, (uint64_t)v184);
  OUTLINED_FUNCTION_3_0(v19);
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_2_0();
  v185[0] = v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7708);
  OUTLINED_FUNCTION_15_0(v22, (uint64_t)v181);
  OUTLINED_FUNCTION_3_0(v23);
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v25);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7680);
  OUTLINED_FUNCTION_15_0(v26, (uint64_t)v183);
  OUTLINED_FUNCTION_3_0(v27);
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_52_2(v29, v155[0]);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7728);
  OUTLINED_FUNCTION_15_0(v30, (uint64_t)v180);
  OUTLINED_FUNCTION_3_0(v31);
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v33);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A76B0);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v170 - 8));
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v35);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7760);
  OUTLINED_FUNCTION_15_0(v36, (uint64_t)v182);
  OUTLINED_FUNCTION_3_0(v37);
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_13_0((uint64_t)v155 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7678);
  OUTLINED_FUNCTION_15_0(v40, (uint64_t)v179);
  OUTLINED_FUNCTION_3_0(v41);
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_13_0((uint64_t)v155 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A76D8);
  OUTLINED_FUNCTION_15_0(v44, (uint64_t)v178);
  OUTLINED_FUNCTION_3_0(v45);
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v47);
  v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7758);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v167 - 8));
  MEMORY[0x24BDAC7A8](v48);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v49);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7778);
  OUTLINED_FUNCTION_15_0(v50, (uint64_t)v177);
  OUTLINED_FUNCTION_3_0(v51);
  MEMORY[0x24BDAC7A8](v52);
  OUTLINED_FUNCTION_13_0((uint64_t)v155 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7670);
  OUTLINED_FUNCTION_15_0(v54, (uint64_t)v176);
  OUTLINED_FUNCTION_3_0(v55);
  MEMORY[0x24BDAC7A8](v56);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v57);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A76C0);
  OUTLINED_FUNCTION_15_0(v58, (uint64_t)v175);
  OUTLINED_FUNCTION_3_0(v59);
  MEMORY[0x24BDAC7A8](v60);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v61);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7710);
  OUTLINED_FUNCTION_15_0(v62, (uint64_t)v174);
  OUTLINED_FUNCTION_3_0(v63);
  MEMORY[0x24BDAC7A8](v64);
  OUTLINED_FUNCTION_13_0((uint64_t)v155 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7700);
  OUTLINED_FUNCTION_15_0(v66, (uint64_t)v173);
  OUTLINED_FUNCTION_3_0(v67);
  MEMORY[0x24BDAC7A8](v68);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v69);
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7718);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v166 - 8));
  MEMORY[0x24BDAC7A8](v70);
  OUTLINED_FUNCTION_13_0((uint64_t)v155 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0));
  v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A76D0);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v165 - 8));
  MEMORY[0x24BDAC7A8](v72);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v73);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7748);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v164 - 8));
  MEMORY[0x24BDAC7A8](v74);
  OUTLINED_FUNCTION_13_0((uint64_t)v155 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0));
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7720);
  OUTLINED_FUNCTION_15_0(v76, (uint64_t)v172);
  OUTLINED_FUNCTION_3_0(v77);
  MEMORY[0x24BDAC7A8](v78);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v79);
  v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7738);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v163 - 8));
  MEMORY[0x24BDAC7A8](v80);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v81);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A76E0);
  OUTLINED_FUNCTION_15_0(v82, (uint64_t)v171);
  OUTLINED_FUNCTION_3_0(v83);
  MEMORY[0x24BDAC7A8](v84);
  OUTLINED_FUNCTION_13_0((uint64_t)v155 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7750);
  OUTLINED_FUNCTION_15_0(v86, (uint64_t)&v170);
  OUTLINED_FUNCTION_3_0(v87);
  MEMORY[0x24BDAC7A8](v88);
  OUTLINED_FUNCTION_13_0((uint64_t)v155 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0));
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7690);
  OUTLINED_FUNCTION_15_0(v90, (uint64_t)v169);
  OUTLINED_FUNCTION_3_0(v91);
  MEMORY[0x24BDAC7A8](v92);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v93);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7688);
  OUTLINED_FUNCTION_15_0(v94, (uint64_t)v168);
  OUTLINED_FUNCTION_3_0(v95);
  MEMORY[0x24BDAC7A8](v96);
  OUTLINED_FUNCTION_13_0((uint64_t)v155 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0));
  v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A76F0);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v162 - 8));
  MEMORY[0x24BDAC7A8](v98);
  OUTLINED_FUNCTION_2_0();
  v190 = v99;
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7740);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v161 - 8));
  MEMORY[0x24BDAC7A8](v100);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v101);
  v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7698);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v160 - 8));
  MEMORY[0x24BDAC7A8](v102);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v103);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7770);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v159 - 8));
  MEMORY[0x24BDAC7A8](v104);
  OUTLINED_FUNCTION_13_0((uint64_t)v155 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0));
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A76F8);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v158 - 8));
  MEMORY[0x24BDAC7A8](v106);
  OUTLINED_FUNCTION_13_0((uint64_t)v155 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0));
  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A76A8);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v156 - 8));
  MEMORY[0x24BDAC7A8](v108);
  OUTLINED_FUNCTION_13_0((uint64_t)v155 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0));
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A76A0);
  OUTLINED_FUNCTION_3_0(*(_QWORD *)(v157 - 8));
  MEMORY[0x24BDAC7A8](v110);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v111);
  v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A76B8);
  v189 = *(_QWORD *)(v191 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v112);
  OUTLINED_FUNCTION_2_0();
  v194 = v113;
  v188 = type metadata accessor for ModelManagerError();
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v114);
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v115);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v116);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v117);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v118);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v119);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v120);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v121);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v122);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v123);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v124);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v125);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v126);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v127);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v128);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  v130 = MEMORY[0x24BDAC7A8](v129);
  v132 = (char *)v155 - v131;
  MEMORY[0x24BDAC7A8](v130);
  OUTLINED_FUNCTION_83_2();
  v134 = MEMORY[0x24BDAC7A8](v133);
  v136 = (char *)v155 - v135;
  MEMORY[0x24BDAC7A8](v134);
  OUTLINED_FUNCTION_84_2();
  MEMORY[0x24BDAC7A8](v137);
  OUTLINED_FUNCTION_60_2();
  MEMORY[0x24BDAC7A8](v138);
  v140 = (char *)v155 - v139;
  v192 = a1;
  OUTLINED_FUNCTION_119_0();
  v141 = v193;
  sub_242272D40();
  if (!v141)
  {
    v155[2] = v3;
    v155[3] = v2;
    v155[4] = (uint64_t)v136;
    v155[5] = v4;
    v155[6] = (uint64_t)v132;
    v193 = v140;
    v142 = v194;
    v143 = sub_242272AE8();
    v144 = *(_QWORD *)(v143 + 16);
    if (v144)
    {
      v155[1] = 0;
      v145 = *(unsigned __int8 *)(v143 + 32);
      sub_2421C4040(1, v144, v143, v143 + 32, 0, (2 * v144) | 1);
      v147 = v146;
      v149 = v148;
      swift_bridgeObjectRelease();
      if (v147 == v149 >> 1)
        __asm { BR              X9 }
    }
    v150 = v188;
    v151 = sub_2422729BC();
    swift_allocError();
    v153 = v152;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFE50);
    *v153 = v150;
    v154 = v191;
    sub_242272A58();
    sub_2422729B0();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v151 - 8) + 104))(v153, *MEMORY[0x24BEE26D0], v151);
    swift_willThrow();
    OUTLINED_FUNCTION_48_0();
    (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v142, v154);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v192);
  OUTLINED_FUNCTION_16_0();
}

void sub_2421D945C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_71_1();
  OUTLINED_FUNCTION_2_2();
  if (!v0)
  {
    v1 = OUTLINED_FUNCTION_54_0();
    OUTLINED_FUNCTION_57_0(v1, v2);
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_22_3();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x2421DA33CLL);
  }
  OUTLINED_FUNCTION_48_0();
  JUMPOUT(0x2421D9440);
}

void sub_2421D94B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_117();
  OUTLINED_FUNCTION_2_2();
  if (!v0)
  {
    v1 = OUTLINED_FUNCTION_54_0();
    OUTLINED_FUNCTION_57_0(v1, v2);
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_22_3();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x2421DA33CLL);
  }
  OUTLINED_FUNCTION_48_0();
  JUMPOUT(0x2421D9440);
}

void sub_2421D950C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_2_2();
  if (!v0)
  {
    v1 = OUTLINED_FUNCTION_54_0();
    OUTLINED_FUNCTION_57_0(v1, v2);
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_22_3();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x2421DA33CLL);
  }
  OUTLINED_FUNCTION_48_0();
  JUMPOUT(0x2421D9440);
}

void sub_2421D9564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_110_0();
  OUTLINED_FUNCTION_2_2();
  if (!v0)
  {
    v1 = OUTLINED_FUNCTION_54_0();
    OUTLINED_FUNCTION_57_0(v1, v2);
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_22_3();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x2421DA33CLL);
  }
  OUTLINED_FUNCTION_48_0();
  JUMPOUT(0x2421D9440);
}

void sub_2421D95BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_108_0();
  OUTLINED_FUNCTION_2_2();
  if (!v0)
  {
    v1 = OUTLINED_FUNCTION_54_0();
    OUTLINED_FUNCTION_57_0(v1, v2);
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_11_1();
    OUTLINED_FUNCTION_22_3();
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x2421DA33CLL);
  }
  OUTLINED_FUNCTION_48_0();
  JUMPOUT(0x2421D9440);
}

void sub_2421D9614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  OUTLINED_FUNCTION_72_2();
  OUTLINED_FUNCTION_2_2();
  if (!v0)
  {
    sub_242272A7C();
    OUTLINED_FUNCTION_35_2();
    v2 = OUTLINED_FUNCTION_66_2();
    v3(v2);
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_56_2();
    OUTLINED_FUNCTION_16_4(v1 - 896);
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x2421DA330);
  }
  JUMPOUT(0x2421D942CLL);
}

void sub_2421D966C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_118_0();
  OUTLINED_FUNCTION_2_2();
  if (!v0)
  {
    OUTLINED_FUNCTION_12_4();
    v3 = *(_QWORD *)(v2 - 192);
    OUTLINED_FUNCTION_35_2();
    OUTLINED_FUNCTION_5_3(v2 - 616);
    OUTLINED_FUNCTION_48_0();
    (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v1, *(_QWORD *)(v2 - 176));
    OUTLINED_FUNCTION_16_4(v2 - 880);
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x2421DA330);
  }
  OUTLINED_FUNCTION_48_0();
  JUMPOUT(0x2421D9440);
}

void sub_2421D96D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_113();
  v2 = *(_QWORD *)(v1 - 176);
  OUTLINED_FUNCTION_2_2();
  if (!v0)
  {
    OUTLINED_FUNCTION_12_4();
    OUTLINED_FUNCTION_35_2();
    OUTLINED_FUNCTION_5_3(v1 - 608);
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_16_4(v1 - 872);
    swift_storeEnumTagMultiPayload();
    v3 = *(_QWORD *)(v1 - 160);
    sub_2421DB000(v2, v3);
    sub_2421DB000(v3, *(_QWORD *)(v1 - 224));
    JUMPOUT(0x2421D9448);
  }
  JUMPOUT(0x2421D9F44);
}

void sub_2421D9F5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_73_2();
  OUTLINED_FUNCTION_2_2();
  if (!v0)
  {
    *(_BYTE *)(v3 - 144) = 0;
    OUTLINED_FUNCTION_64_1();
    v4 = sub_242272AD0();
    *(_BYTE *)(v3 - 144) = 1;
    OUTLINED_FUNCTION_64_1();
    v5 = sub_242272ADC();
    OUTLINED_FUNCTION_14_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_6_3();
    v6 = *(_QWORD *)(v3 - 1104);
    *(_DWORD *)v6 = v4;
    *(_QWORD *)(v6 + 8) = v5;
    JUMPOUT(0x2421DA328);
  }
  JUMPOUT(0x2421D9F44);
}

void sub_2421D9FD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_90_1();
  OUTLINED_FUNCTION_2_2();
  if (v0)
    JUMPOUT(0x2421DA004);
  v1 = OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_57_0(v1, v2);
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_22_3();
  JUMPOUT(0x2421DA03CLL);
}

void sub_2421DA398(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  ModelManagerError.init(from:)(a1, a2);
}

void sub_2421DA3AC()
{
  ModelManagerError.encode(to:)();
}

void ModelManagerError.init(wrapping:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_68_1();
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_66();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7138);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_21_1();
  v2 = sub_2422725A8();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_66();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7808);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_47_2();
}

uint64_t sub_2421DA4A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA5C8);
  if ((OUTLINED_FUNCTION_92_1() & 1) == 0)
  {
    OUTLINED_FUNCTION_115_0(v2, 1);
    sub_2421DB044(v2, &qword_2543A7808);
    *(_QWORD *)(v3 - 88) = v1;
    OUTLINED_FUNCTION_47_2();
  }
  OUTLINED_FUNCTION_115_0(v2, 0);
  OUTLINED_FUNCTION_42_1();
  return sub_2421DB000(v2, v0);
}

uint64_t sub_2421DA7CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ModelManagerError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2421DA808()
{
  unint64_t result;

  result = qword_2543A9A38;
  if (!qword_2543A9A38)
  {
    result = MEMORY[0x2426A62C4](&unk_2422791A4, &type metadata for ModelManagerError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A38);
  }
  return result;
}

unint64_t sub_2421DA844()
{
  unint64_t result;

  result = qword_2571E0720;
  if (!qword_2571E0720)
  {
    result = MEMORY[0x2426A62C4](&unk_242279154, &type metadata for ModelManagerError.UnableToForceAssetVersionSwitchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0720);
  }
  return result;
}

unint64_t sub_2421DA880()
{
  unint64_t result;

  result = qword_2571E0728;
  if (!qword_2571E0728)
  {
    result = MEMORY[0x2426A62C4](&unk_242279104, &type metadata for ModelManagerError.InferenceProviderCrashedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0728);
  }
  return result;
}

unint64_t sub_2421DA8BC()
{
  unint64_t result;

  result = qword_2571E0730;
  if (!qword_2571E0730)
  {
    result = MEMORY[0x2426A62C4](&unk_2422790B4, &type metadata for ModelManagerError.PolicyNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0730);
  }
  return result;
}

unint64_t sub_2421DA8F8()
{
  unint64_t result;

  result = qword_2571E0738;
  if (!qword_2571E0738)
  {
    result = MEMORY[0x2426A62C4](&unk_242279064, &type metadata for ModelManagerError.DeviceNotEligibleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0738);
  }
  return result;
}

unint64_t sub_2421DA934()
{
  unint64_t result;

  result = qword_2571E0740;
  if (!qword_2571E0740)
  {
    result = MEMORY[0x2426A62C4](&unk_242279014, &type metadata for ModelManagerError.PolicyNotAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0740);
  }
  return result;
}

unint64_t sub_2421DA970()
{
  unint64_t result;

  result = qword_2571E0748;
  if (!qword_2571E0748)
  {
    result = MEMORY[0x2426A62C4](&unk_242278FC4, &type metadata for ModelManagerError.AssetNotAvailableInModelCatalogCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0748);
  }
  return result;
}

unint64_t sub_2421DA9AC()
{
  unint64_t result;

  result = qword_2571E0750;
  if (!qword_2571E0750)
  {
    result = MEMORY[0x2426A62C4](&unk_242278F74, &type metadata for ModelManagerError.DeniedAssertionBySystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0750);
  }
  return result;
}

unint64_t sub_2421DA9E8()
{
  unint64_t result;

  result = qword_2571E0758;
  if (!qword_2571E0758)
  {
    result = MEMORY[0x2426A62C4](&unk_242278F24, &type metadata for ModelManagerError.ModelCatalogErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0758);
  }
  return result;
}

unint64_t sub_2421DAA24()
{
  unint64_t result;

  result = qword_2571E0760;
  if (!qword_2571E0760)
  {
    result = MEMORY[0x2426A62C4](&unk_242278ED4, &type metadata for ModelManagerError.InvalidRequestRequiredAssetIDsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0760);
  }
  return result;
}

unint64_t sub_2421DAA60()
{
  unint64_t result;

  result = qword_2571E0768;
  if (!qword_2571E0768)
  {
    result = MEMORY[0x2426A62C4](&unk_242278E84, &type metadata for ModelManagerError.InvalidRequestModelBundleIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0768);
  }
  return result;
}

unint64_t sub_2421DAA9C()
{
  unint64_t result;

  result = qword_2571E0770;
  if (!qword_2571E0770)
  {
    result = MEMORY[0x2426A62C4](&unk_242278E34, &type metadata for ModelManagerError.SessionNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0770);
  }
  return result;
}

unint64_t sub_2421DAAD8()
{
  unint64_t result;

  result = qword_2571E0778;
  if (!qword_2571E0778)
  {
    result = MEMORY[0x2426A62C4](&unk_242278DE4, &type metadata for ModelManagerError.AssetDoesNotSupportDynamicModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0778);
  }
  return result;
}

unint64_t sub_2421DAB14()
{
  unint64_t result;

  result = qword_2571E0780;
  if (!qword_2571E0780)
  {
    result = MEMORY[0x2426A62C4](&unk_242278D94, &type metadata for ModelManagerError.NoCommonInferenceProviderForAssetsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0780);
  }
  return result;
}

unint64_t sub_2421DAB50()
{
  unint64_t result;

  result = qword_2571E0788;
  if (!qword_2571E0788)
  {
    result = MEMORY[0x2426A62C4](&unk_242278D44, &type metadata for ModelManagerError.UnrecognizedModelCatalogResourceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0788);
  }
  return result;
}

unint64_t sub_2421DAB8C()
{
  unint64_t result;

  result = qword_2571E0790;
  if (!qword_2571E0790)
  {
    result = MEMORY[0x2426A62C4](&unk_242278CF4, &type metadata for ModelManagerError.AssetNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0790);
  }
  return result;
}

unint64_t sub_2421DABC8()
{
  unint64_t result;

  result = qword_2571E0798;
  if (!qword_2571E0798)
  {
    result = MEMORY[0x2426A62C4](&unk_242278CA4, &type metadata for ModelManagerError.AssetBundleNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0798);
  }
  return result;
}

unint64_t sub_2421DAC04()
{
  unint64_t result;

  result = qword_2571E07A0;
  if (!qword_2571E07A0)
  {
    result = MEMORY[0x2426A62C4](&unk_242278C54, &type metadata for ModelManagerError.OperationCancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E07A0);
  }
  return result;
}

unint64_t sub_2421DAC40()
{
  unint64_t result;

  result = qword_2571E07A8;
  if (!qword_2571E07A8)
  {
    result = MEMORY[0x2426A62C4](&unk_242278C04, &type metadata for ModelManagerError.SessionInCancelStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E07A8);
  }
  return result;
}

unint64_t sub_2421DAC7C()
{
  unint64_t result;

  result = qword_2571E07B0;
  if (!qword_2571E07B0)
  {
    result = MEMORY[0x2426A62C4](&unk_242278BB4, &type metadata for ModelManagerError.RequestNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E07B0);
  }
  return result;
}

unint64_t sub_2421DACB8()
{
  unint64_t result;

  result = qword_2571E07B8;
  if (!qword_2571E07B8)
  {
    result = MEMORY[0x2426A62C4](&unk_242278B64, &type metadata for ModelManagerError.OnBehalfOfProcessNotRunningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E07B8);
  }
  return result;
}

unint64_t sub_2421DACF4()
{
  unint64_t result;

  result = qword_2571E07C0;
  if (!qword_2571E07C0)
  {
    result = MEMORY[0x2426A62C4](&unk_242278B14, &type metadata for ModelManagerError.DeniedDueToSystemStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E07C0);
  }
  return result;
}

unint64_t sub_2421DAD30()
{
  unint64_t result;

  result = qword_2571E07C8;
  if (!qword_2571E07C8)
  {
    result = MEMORY[0x2426A62C4](&unk_242278AC4, &type metadata for ModelManagerError.InsufficientSystemResourcesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E07C8);
  }
  return result;
}

unint64_t sub_2421DAD6C()
{
  unint64_t result;

  result = qword_2571E07D0;
  if (!qword_2571E07D0)
  {
    result = MEMORY[0x2426A62C4](&unk_242278A74, &type metadata for ModelManagerError.UseCaseDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E07D0);
  }
  return result;
}

unint64_t sub_2421DADA8()
{
  unint64_t result;

  result = qword_2571E07D8;
  if (!qword_2571E07D8)
  {
    result = MEMORY[0x2426A62C4](&unk_242278A24, &type metadata for ModelManagerError.UnrecognizedInferenceProviderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E07D8);
  }
  return result;
}

unint64_t sub_2421DADE4()
{
  unint64_t result;

  result = qword_2571E07E0;
  if (!qword_2571E07E0)
  {
    result = MEMORY[0x2426A62C4](&unk_2422789D4, &type metadata for ModelManagerError.XpcErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E07E0);
  }
  return result;
}

unint64_t sub_2421DAE20()
{
  unint64_t result;

  result = qword_2571E07E8;
  if (!qword_2571E07E8)
  {
    result = MEMORY[0x2426A62C4](&unk_242278984, &type metadata for ModelManagerError.UnrecognizedUnderlyingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E07E8);
  }
  return result;
}

unint64_t sub_2421DAE5C()
{
  unint64_t result;

  result = qword_2543A9AB0;
  if (!qword_2543A9AB0)
  {
    result = MEMORY[0x2426A62C4](&unk_242278934, &type metadata for ModelManagerError.MissingEntitlementCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9AB0);
  }
  return result;
}

unint64_t sub_2421DAE98()
{
  unint64_t result;

  result = qword_2571E07F0;
  if (!qword_2571E07F0)
  {
    result = MEMORY[0x2426A62C4](&unk_2422788E4, &type metadata for ModelManagerError.NotSupportedOnExternalBuildCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E07F0);
  }
  return result;
}

unint64_t sub_2421DAED4()
{
  unint64_t result;

  result = qword_2571E07F8;
  if (!qword_2571E07F8)
  {
    result = MEMORY[0x2426A62C4](&unk_242278894, &type metadata for ModelManagerError.InternalErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E07F8);
  }
  return result;
}

unint64_t sub_2421DAF10()
{
  unint64_t result;

  result = qword_2571E0800;
  if (!qword_2571E0800)
  {
    result = MEMORY[0x2426A62C4](&unk_242278844, &type metadata for ModelManagerError.UnsupportedNumberOfAssetBundlesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0800);
  }
  return result;
}

unint64_t sub_2421DAF4C()
{
  unint64_t result;

  result = qword_2571E0808;
  if (!qword_2571E0808)
  {
    result = MEMORY[0x2426A62C4](&unk_2422787F4, &type metadata for ModelManagerError.MissingFeatureFlagCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0808);
  }
  return result;
}

unint64_t sub_2421DAF88()
{
  unint64_t result;

  result = qword_2571E0810;
  if (!qword_2571E0810)
  {
    result = MEMORY[0x2426A62C4](&unk_2422787A4, &type metadata for ModelManagerError.UndefinedErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0810);
  }
  return result;
}

unint64_t sub_2421DAFC4()
{
  unint64_t result;

  result = qword_2571E0818;
  if (!qword_2571E0818)
  {
    result = MEMORY[0x2426A62C4](&unk_242278754, &type metadata for ModelManagerError.InferenceErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0818);
  }
  return result;
}

uint64_t sub_2421DB000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ModelManagerError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2421DB044(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2421DB080(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_2421DB178(&qword_2543A7800, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  a1[2] = sub_2421DB178(&qword_2571E0820, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  a1[3] = sub_2421DB178(&qword_2571E0828, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  a1[4] = sub_2421DB178(&qword_2543AA450, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  a1[5] = sub_2421DB178(&qword_2543AA448, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  result = sub_2421DB178(&qword_2571E0830, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  a1[6] = result;
  return result;
}

uint64_t sub_2421DB14C()
{
  return sub_2421DB178(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
}

uint64_t sub_2421DB178(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2426A62C4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ModelManagerError(uint64_t *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (uint64_t *)(v14 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *(_QWORD *)a2;
        v8 = *((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        v10 = *((_QWORD *)a2 + 3);
        v11 = *((_QWORD *)a2 + 4);
        v12 = *((_QWORD *)a2 + 5);
        v13 = *((_BYTE *)a2 + 48);
        sub_2421C1F4C(v7, v8, v9, v10, v11, v12, v13);
        *a1 = v7;
        a1[1] = v8;
        a1[2] = v9;
        a1[3] = v10;
        a1[4] = v11;
        a1[5] = v12;
        *((_BYTE *)a1 + 48) = v13;
        goto LABEL_10;
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xCu:
      case 0xEu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
        v17 = *((_QWORD *)a2 + 1);
        *a1 = *(_QWORD *)a2;
        a1[1] = v17;
        sub_242272644();
        goto LABEL_10;
      case 6u:
      case 7u:
      case 0xDu:
        v15 = sub_24227238C();
        (*(void (**)(uint64_t *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        goto LABEL_10;
      case 0xBu:
        *a1 = *(_QWORD *)a2;
        sub_242272644();
        goto LABEL_10;
      case 0xFu:
        v16 = *((_QWORD *)a2 + 1);
        *a1 = *(_QWORD *)a2;
        a1[1] = v16;
        a1[2] = *((_QWORD *)a2 + 2);
        sub_242272644();
        sub_242272644();
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for ModelManagerError(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      result = sub_2421C1F98(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
      break;
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 14:
    case 16:
    case 17:
    case 18:
      goto LABEL_2;
    case 6:
    case 7:
    case 13:
      v3 = sub_24227238C();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 15:
      swift_bridgeObjectRelease();
LABEL_2:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for ModelManagerError(uint64_t *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *(_QWORD *)a2;
      v7 = *((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      v9 = *((_QWORD *)a2 + 3);
      v10 = *((_QWORD *)a2 + 4);
      v11 = *((_QWORD *)a2 + 5);
      v12 = *((_BYTE *)a2 + 48);
      sub_2421C1F4C(v6, v7, v8, v9, v10, v11, v12);
      *a1 = v6;
      a1[1] = v7;
      a1[2] = v8;
      a1[3] = v9;
      a1[4] = v10;
      a1[5] = v11;
      *((_BYTE *)a1 + 48) = v12;
      goto LABEL_8;
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xCu:
    case 0xEu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
      v15 = *((_QWORD *)a2 + 1);
      *a1 = *(_QWORD *)a2;
      a1[1] = v15;
      sub_242272644();
      goto LABEL_8;
    case 6u:
    case 7u:
    case 0xDu:
      v13 = sub_24227238C();
      (*(void (**)(uint64_t *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      goto LABEL_8;
    case 0xBu:
      *a1 = *(_QWORD *)a2;
      sub_242272644();
      goto LABEL_8;
    case 0xFu:
      v14 = *((_QWORD *)a2 + 1);
      *a1 = *(_QWORD *)a2;
      a1[1] = v14;
      a1[2] = *((_QWORD *)a2 + 2);
      sub_242272644();
      sub_242272644();
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for ModelManagerError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_2421DA7CC((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = *a2;
        v7 = a2[1];
        v8 = a2[2];
        v9 = a2[3];
        v10 = a2[4];
        v11 = a2[5];
        v12 = *((_BYTE *)a2 + 48);
        sub_2421C1F4C(v6, v7, v8, v9, v10, v11, v12);
        *a1 = v6;
        a1[1] = v7;
        a1[2] = v8;
        a1[3] = v9;
        a1[4] = v10;
        a1[5] = v11;
        *((_BYTE *)a1 + 48) = v12;
        goto LABEL_9;
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xCu:
      case 0xEu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
        *a1 = *a2;
        a1[1] = a2[1];
        sub_242272644();
        goto LABEL_9;
      case 6u:
      case 7u:
      case 0xDu:
        v13 = sub_24227238C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        goto LABEL_9;
      case 0xBu:
        *a1 = *a2;
        sub_242272644();
        goto LABEL_9;
      case 0xFu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        sub_242272644();
        sub_242272644();
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for ModelManagerError(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 13 || EnumCaseMultiPayload == 7 || EnumCaseMultiPayload == 6)
  {
    v7 = sub_24227238C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for ModelManagerError(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_2421DA7CC((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 13 || EnumCaseMultiPayload == 7 || EnumCaseMultiPayload == 6)
    {
      v7 = sub_24227238C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2421DBE8C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2421DBE9C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24227238C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ModelManagerError.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE0)
  {
    if (a2 + 32 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 32) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 33;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x21;
  v5 = v6 - 33;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelManagerError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 32 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 32) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xDF)
    return ((uint64_t (*)(void))((char *)&loc_2421DC024 + 4 * byte_242276C5D[v4]))();
  *a1 = a2 + 32;
  return ((uint64_t (*)(void))((char *)sub_2421DC058 + 4 * byte_242276C58[v4]))();
}

uint64_t sub_2421DC058(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421DC060(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2421DC068);
  return result;
}

uint64_t sub_2421DC074(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2421DC07CLL);
  *(_BYTE *)result = a2 + 32;
  return result;
}

uint64_t sub_2421DC080(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421DC088(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ModelManagerError.CodingKeys()
{
  return &type metadata for ModelManagerError.CodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.InferenceErrorCodingKeys()
{
  return &type metadata for ModelManagerError.InferenceErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.UndefinedErrorCodingKeys()
{
  return &type metadata for ModelManagerError.UndefinedErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.MissingFeatureFlagCodingKeys()
{
  return &type metadata for ModelManagerError.MissingFeatureFlagCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.UnsupportedNumberOfAssetBundlesCodingKeys()
{
  return &type metadata for ModelManagerError.UnsupportedNumberOfAssetBundlesCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.InternalErrorCodingKeys()
{
  return &type metadata for ModelManagerError.InternalErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.NotSupportedOnExternalBuildCodingKeys()
{
  return &type metadata for ModelManagerError.NotSupportedOnExternalBuildCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.MissingEntitlementCodingKeys()
{
  return &type metadata for ModelManagerError.MissingEntitlementCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.UnrecognizedUnderlyingErrorCodingKeys()
{
  return &type metadata for ModelManagerError.UnrecognizedUnderlyingErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.XpcErrorCodingKeys()
{
  return &type metadata for ModelManagerError.XpcErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.UnrecognizedInferenceProviderCodingKeys()
{
  return &type metadata for ModelManagerError.UnrecognizedInferenceProviderCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.UseCaseDisabledCodingKeys()
{
  return &type metadata for ModelManagerError.UseCaseDisabledCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.InsufficientSystemResourcesCodingKeys()
{
  return &type metadata for ModelManagerError.InsufficientSystemResourcesCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.DeniedDueToSystemStateCodingKeys()
{
  return &type metadata for ModelManagerError.DeniedDueToSystemStateCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.OnBehalfOfProcessNotRunningCodingKeys()
{
  return &type metadata for ModelManagerError.OnBehalfOfProcessNotRunningCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.RequestNotFoundCodingKeys()
{
  return &type metadata for ModelManagerError.RequestNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.SessionInCancelStateCodingKeys()
{
  return &type metadata for ModelManagerError.SessionInCancelStateCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.OperationCancelledCodingKeys()
{
  return &type metadata for ModelManagerError.OperationCancelledCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.AssetBundleNotFoundCodingKeys()
{
  return &type metadata for ModelManagerError.AssetBundleNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.AssetNotFoundCodingKeys()
{
  return &type metadata for ModelManagerError.AssetNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.UnrecognizedModelCatalogResourceCodingKeys()
{
  return &type metadata for ModelManagerError.UnrecognizedModelCatalogResourceCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.NoCommonInferenceProviderForAssetsCodingKeys()
{
  return &type metadata for ModelManagerError.NoCommonInferenceProviderForAssetsCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.AssetDoesNotSupportDynamicModeCodingKeys()
{
  return &type metadata for ModelManagerError.AssetDoesNotSupportDynamicModeCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.SessionNotFoundCodingKeys()
{
  return &type metadata for ModelManagerError.SessionNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.InvalidRequestModelBundleIDCodingKeys()
{
  return &type metadata for ModelManagerError.InvalidRequestModelBundleIDCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.InvalidRequestRequiredAssetIDsCodingKeys()
{
  return &type metadata for ModelManagerError.InvalidRequestRequiredAssetIDsCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.ModelCatalogErrorCodingKeys()
{
  return &type metadata for ModelManagerError.ModelCatalogErrorCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.DeniedAssertionBySystemCodingKeys()
{
  return &type metadata for ModelManagerError.DeniedAssertionBySystemCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.AssetNotAvailableInModelCatalogCodingKeys()
{
  return &type metadata for ModelManagerError.AssetNotAvailableInModelCatalogCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.PolicyNotAvailableCodingKeys()
{
  return &type metadata for ModelManagerError.PolicyNotAvailableCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.DeviceNotEligibleCodingKeys()
{
  return &type metadata for ModelManagerError.DeviceNotEligibleCodingKeys;
}

uint64_t _s20ModelManagerServices17ModelManagerErrorO24InferenceErrorCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2421DC2CC + 4 * byte_242276C62[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2421DC2EC + 4 * byte_242276C67[v4]))();
}

_BYTE *sub_2421DC2CC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2421DC2EC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2421DC2F4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2421DC2FC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2421DC304(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2421DC30C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ModelManagerError.PolicyNotFoundCodingKeys()
{
  return &type metadata for ModelManagerError.PolicyNotFoundCodingKeys;
}

uint64_t _s20ModelManagerServices17ModelManagerErrorO40InvalidRequestRequiredAssetIDsCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2421DC374 + 4 * byte_242276C71[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2421DC3A8 + 4 * byte_242276C6C[v4]))();
}

uint64_t sub_2421DC3A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421DC3B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2421DC3B8);
  return result;
}

uint64_t sub_2421DC3C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2421DC3CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2421DC3D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421DC3D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ModelManagerError.InferenceProviderCrashedCodingKeys()
{
  return &type metadata for ModelManagerError.InferenceProviderCrashedCodingKeys;
}

ValueMetadata *type metadata accessor for ModelManagerError.UnableToForceAssetVersionSwitchCodingKeys()
{
  return &type metadata for ModelManagerError.UnableToForceAssetVersionSwitchCodingKeys;
}

unint64_t sub_2421DC408()
{
  unint64_t result;

  result = qword_2571E0838;
  if (!qword_2571E0838)
  {
    result = MEMORY[0x2426A62C4](&unk_24227750C, &type metadata for ModelManagerError.InferenceProviderCrashedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0838);
  }
  return result;
}

unint64_t sub_2421DC448()
{
  unint64_t result;

  result = qword_2571E0840;
  if (!qword_2571E0840)
  {
    result = MEMORY[0x2426A62C4](&unk_2422775C4, &type metadata for ModelManagerError.PolicyNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0840);
  }
  return result;
}

unint64_t sub_2421DC488()
{
  unint64_t result;

  result = qword_2571E0848;
  if (!qword_2571E0848)
  {
    result = MEMORY[0x2426A62C4](&unk_24227771C, &type metadata for ModelManagerError.AssetNotAvailableInModelCatalogCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0848);
  }
  return result;
}

unint64_t sub_2421DC4C8()
{
  unint64_t result;

  result = qword_2571E0850;
  if (!qword_2571E0850)
  {
    result = MEMORY[0x2426A62C4](&unk_242277824, &type metadata for ModelManagerError.ModelCatalogErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0850);
  }
  return result;
}

unint64_t sub_2421DC508()
{
  unint64_t result;

  result = qword_2571E0858;
  if (!qword_2571E0858)
  {
    result = MEMORY[0x2426A62C4](&unk_2422778DC, &type metadata for ModelManagerError.InvalidRequestRequiredAssetIDsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0858);
  }
  return result;
}

unint64_t sub_2421DC548()
{
  unint64_t result;

  result = qword_2571E0860;
  if (!qword_2571E0860)
  {
    result = MEMORY[0x2426A62C4](&unk_242277994, &type metadata for ModelManagerError.InvalidRequestModelBundleIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0860);
  }
  return result;
}

unint64_t sub_2421DC588()
{
  unint64_t result;

  result = qword_2571E0868;
  if (!qword_2571E0868)
  {
    result = MEMORY[0x2426A62C4](&unk_242277A4C, &type metadata for ModelManagerError.SessionNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0868);
  }
  return result;
}

unint64_t sub_2421DC5C8()
{
  unint64_t result;

  result = qword_2571E0870;
  if (!qword_2571E0870)
  {
    result = MEMORY[0x2426A62C4](&unk_242277B04, &type metadata for ModelManagerError.AssetDoesNotSupportDynamicModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0870);
  }
  return result;
}

unint64_t sub_2421DC608()
{
  unint64_t result;

  result = qword_2571E0878;
  if (!qword_2571E0878)
  {
    result = MEMORY[0x2426A62C4](&unk_242277BBC, &type metadata for ModelManagerError.NoCommonInferenceProviderForAssetsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0878);
  }
  return result;
}

unint64_t sub_2421DC648()
{
  unint64_t result;

  result = qword_2571E0880;
  if (!qword_2571E0880)
  {
    result = MEMORY[0x2426A62C4](&unk_242277C74, &type metadata for ModelManagerError.UnrecognizedModelCatalogResourceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0880);
  }
  return result;
}

unint64_t sub_2421DC688()
{
  unint64_t result;

  result = qword_2571E0888;
  if (!qword_2571E0888)
  {
    result = MEMORY[0x2426A62C4](&unk_242277D2C, &type metadata for ModelManagerError.AssetNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0888);
  }
  return result;
}

unint64_t sub_2421DC6C8()
{
  unint64_t result;

  result = qword_2571E0890;
  if (!qword_2571E0890)
  {
    result = MEMORY[0x2426A62C4](&unk_242277DE4, &type metadata for ModelManagerError.AssetBundleNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0890);
  }
  return result;
}

unint64_t sub_2421DC708()
{
  unint64_t result;

  result = qword_2571E0898;
  if (!qword_2571E0898)
  {
    result = MEMORY[0x2426A62C4](&unk_242277EEC, &type metadata for ModelManagerError.SessionInCancelStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0898);
  }
  return result;
}

unint64_t sub_2421DC748()
{
  unint64_t result;

  result = qword_2571E08A0;
  if (!qword_2571E08A0)
  {
    result = MEMORY[0x2426A62C4](&unk_242277FA4, &type metadata for ModelManagerError.RequestNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E08A0);
  }
  return result;
}

unint64_t sub_2421DC788()
{
  unint64_t result;

  result = qword_2571E08A8;
  if (!qword_2571E08A8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227814C, &type metadata for ModelManagerError.UseCaseDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E08A8);
  }
  return result;
}

unint64_t sub_2421DC7C8()
{
  unint64_t result;

  result = qword_2571E08B0;
  if (!qword_2571E08B0)
  {
    result = MEMORY[0x2426A62C4](&unk_242278204, &type metadata for ModelManagerError.UnrecognizedInferenceProviderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E08B0);
  }
  return result;
}

unint64_t sub_2421DC808()
{
  unint64_t result;

  result = qword_2571E08B8;
  if (!qword_2571E08B8)
  {
    result = MEMORY[0x2426A62C4](&unk_2422782BC, &type metadata for ModelManagerError.XpcErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E08B8);
  }
  return result;
}

unint64_t sub_2421DC848()
{
  unint64_t result;

  result = qword_2571E08C0;
  if (!qword_2571E08C0)
  {
    result = MEMORY[0x2426A62C4](&unk_242278374, &type metadata for ModelManagerError.UnrecognizedUnderlyingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E08C0);
  }
  return result;
}

unint64_t sub_2421DC888()
{
  unint64_t result;

  result = qword_2571E08C8;
  if (!qword_2571E08C8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227842C, &type metadata for ModelManagerError.MissingEntitlementCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E08C8);
  }
  return result;
}

unint64_t sub_2421DC8C8()
{
  unint64_t result;

  result = qword_2571E08D0;
  if (!qword_2571E08D0)
  {
    result = MEMORY[0x2426A62C4](&unk_242278674, &type metadata for ModelManagerError.InferenceErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E08D0);
  }
  return result;
}

unint64_t sub_2421DC908()
{
  unint64_t result;

  result = qword_2571E08D8;
  if (!qword_2571E08D8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227872C, &type metadata for ModelManagerError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E08D8);
  }
  return result;
}

unint64_t sub_2421DC948()
{
  unint64_t result;

  result = qword_2543A9A10;
  if (!qword_2543A9A10)
  {
    result = MEMORY[0x2426A62C4](&unk_2422785E4, &type metadata for ModelManagerError.InferenceErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A10);
  }
  return result;
}

unint64_t sub_2421DC988()
{
  unint64_t result;

  result = qword_2543A9A08;
  if (!qword_2543A9A08)
  {
    result = MEMORY[0x2426A62C4](&unk_24227860C, &type metadata for ModelManagerError.InferenceErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A08);
  }
  return result;
}

unint64_t sub_2421DC9C8()
{
  unint64_t result;

  result = qword_2543A9A20;
  if (!qword_2543A9A20)
  {
    result = MEMORY[0x2426A62C4](&unk_242278594, &type metadata for ModelManagerError.UndefinedErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A20);
  }
  return result;
}

unint64_t sub_2421DCA08()
{
  unint64_t result;

  result = qword_2543A9A18;
  if (!qword_2543A9A18)
  {
    result = MEMORY[0x2426A62C4](&unk_2422785BC, &type metadata for ModelManagerError.UndefinedErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A18);
  }
  return result;
}

unint64_t sub_2421DCA48()
{
  unint64_t result;

  result = qword_2543A9AD0;
  if (!qword_2543A9AD0)
  {
    result = MEMORY[0x2426A62C4](&unk_242278544, &type metadata for ModelManagerError.MissingFeatureFlagCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9AD0);
  }
  return result;
}

unint64_t sub_2421DCA88()
{
  unint64_t result;

  result = qword_2543A9AC8;
  if (!qword_2543A9AC8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227856C, &type metadata for ModelManagerError.MissingFeatureFlagCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9AC8);
  }
  return result;
}

unint64_t sub_2421DCAC8()
{
  unint64_t result;

  result = qword_2543A9BC0;
  if (!qword_2543A9BC0)
  {
    result = MEMORY[0x2426A62C4](&unk_2422784F4, &type metadata for ModelManagerError.UnsupportedNumberOfAssetBundlesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9BC0);
  }
  return result;
}

unint64_t sub_2421DCB08()
{
  unint64_t result;

  result = qword_2543A9BB8;
  if (!qword_2543A9BB8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227851C, &type metadata for ModelManagerError.UnsupportedNumberOfAssetBundlesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9BB8);
  }
  return result;
}

unint64_t sub_2421DCB48()
{
  unint64_t result;

  result = qword_2543A9A00;
  if (!qword_2543A9A00)
  {
    result = MEMORY[0x2426A62C4](&unk_2422784A4, &type metadata for ModelManagerError.InternalErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A00);
  }
  return result;
}

unint64_t sub_2421DCB88()
{
  unint64_t result;

  result = qword_2543A99F8;
  if (!qword_2543A99F8)
  {
    result = MEMORY[0x2426A62C4](&unk_2422784CC, &type metadata for ModelManagerError.InternalErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A99F8);
  }
  return result;
}

unint64_t sub_2421DCBC8()
{
  unint64_t result;

  result = qword_2543A9B60;
  if (!qword_2543A9B60)
  {
    result = MEMORY[0x2426A62C4](&unk_242278454, &type metadata for ModelManagerError.NotSupportedOnExternalBuildCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B60);
  }
  return result;
}

unint64_t sub_2421DCC08()
{
  unint64_t result;

  result = qword_2543A9B58;
  if (!qword_2543A9B58)
  {
    result = MEMORY[0x2426A62C4](&unk_24227847C, &type metadata for ModelManagerError.NotSupportedOnExternalBuildCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B58);
  }
  return result;
}

unint64_t sub_2421DCC48()
{
  unint64_t result;

  result = qword_2543A9AC0;
  if (!qword_2543A9AC0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227839C, &type metadata for ModelManagerError.MissingEntitlementCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9AC0);
  }
  return result;
}

unint64_t sub_2421DCC88()
{
  unint64_t result;

  result = qword_2543A9AB8;
  if (!qword_2543A9AB8)
  {
    result = MEMORY[0x2426A62C4](&unk_2422783C4, &type metadata for ModelManagerError.MissingEntitlementCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9AB8);
  }
  return result;
}

unint64_t sub_2421DCCC8()
{
  unint64_t result;

  result = qword_2543A99E0;
  if (!qword_2543A99E0)
  {
    result = MEMORY[0x2426A62C4](&unk_2422782E4, &type metadata for ModelManagerError.UnrecognizedUnderlyingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A99E0);
  }
  return result;
}

unint64_t sub_2421DCD08()
{
  unint64_t result;

  result = qword_2543A99D8;
  if (!qword_2543A99D8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227830C, &type metadata for ModelManagerError.UnrecognizedUnderlyingErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A99D8);
  }
  return result;
}

unint64_t sub_2421DCD48()
{
  unint64_t result;

  result = qword_2543A99F0;
  if (!qword_2543A99F0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227822C, &type metadata for ModelManagerError.XpcErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A99F0);
  }
  return result;
}

unint64_t sub_2421DCD88()
{
  unint64_t result;

  result = qword_2543A99E8;
  if (!qword_2543A99E8)
  {
    result = MEMORY[0x2426A62C4](&unk_242278254, &type metadata for ModelManagerError.XpcErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A99E8);
  }
  return result;
}

unint64_t sub_2421DCDC8()
{
  unint64_t result;

  result = qword_2543A9B80;
  if (!qword_2543A9B80)
  {
    result = MEMORY[0x2426A62C4](&unk_242278174, &type metadata for ModelManagerError.UnrecognizedInferenceProviderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B80);
  }
  return result;
}

unint64_t sub_2421DCE08()
{
  unint64_t result;

  result = qword_2543A9B78;
  if (!qword_2543A9B78)
  {
    result = MEMORY[0x2426A62C4](&unk_24227819C, &type metadata for ModelManagerError.UnrecognizedInferenceProviderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B78);
  }
  return result;
}

unint64_t sub_2421DCE48()
{
  unint64_t result;

  result = qword_2543A9A98;
  if (!qword_2543A9A98)
  {
    result = MEMORY[0x2426A62C4](&unk_2422780BC, &type metadata for ModelManagerError.UseCaseDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A98);
  }
  return result;
}

unint64_t sub_2421DCE88()
{
  unint64_t result;

  result = qword_2543A9A90;
  if (!qword_2543A9A90)
  {
    result = MEMORY[0x2426A62C4](&unk_2422780E4, &type metadata for ModelManagerError.UseCaseDisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A90);
  }
  return result;
}

unint64_t sub_2421DCEC8()
{
  unint64_t result;

  result = qword_2543A9B50;
  if (!qword_2543A9B50)
  {
    result = MEMORY[0x2426A62C4](&unk_24227806C, &type metadata for ModelManagerError.InsufficientSystemResourcesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B50);
  }
  return result;
}

unint64_t sub_2421DCF08()
{
  unint64_t result;

  result = qword_2543A9B48;
  if (!qword_2543A9B48)
  {
    result = MEMORY[0x2426A62C4](&unk_242278094, &type metadata for ModelManagerError.InsufficientSystemResourcesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B48);
  }
  return result;
}

unint64_t sub_2421DCF48()
{
  unint64_t result;

  result = qword_2543A9B20;
  if (!qword_2543A9B20)
  {
    result = MEMORY[0x2426A62C4](&unk_24227801C, &type metadata for ModelManagerError.DeniedDueToSystemStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B20);
  }
  return result;
}

unint64_t sub_2421DCF88()
{
  unint64_t result;

  result = qword_2543A9B18;
  if (!qword_2543A9B18)
  {
    result = MEMORY[0x2426A62C4](&unk_242278044, &type metadata for ModelManagerError.DeniedDueToSystemStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B18);
  }
  return result;
}

unint64_t sub_2421DCFC8()
{
  unint64_t result;

  result = qword_2543A9B70;
  if (!qword_2543A9B70)
  {
    result = MEMORY[0x2426A62C4](&unk_242277FCC, &type metadata for ModelManagerError.OnBehalfOfProcessNotRunningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B70);
  }
  return result;
}

unint64_t sub_2421DD008()
{
  unint64_t result;

  result = qword_2543A9B68;
  if (!qword_2543A9B68)
  {
    result = MEMORY[0x2426A62C4](&unk_242277FF4, &type metadata for ModelManagerError.OnBehalfOfProcessNotRunningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B68);
  }
  return result;
}

unint64_t sub_2421DD048()
{
  unint64_t result;

  result = qword_2543A9A78;
  if (!qword_2543A9A78)
  {
    result = MEMORY[0x2426A62C4](&unk_242277F14, &type metadata for ModelManagerError.RequestNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A78);
  }
  return result;
}

unint64_t sub_2421DD088()
{
  unint64_t result;

  result = qword_2543A9A70;
  if (!qword_2543A9A70)
  {
    result = MEMORY[0x2426A62C4](&unk_242277F3C, &type metadata for ModelManagerError.RequestNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A70);
  }
  return result;
}

unint64_t sub_2421DD0C8()
{
  unint64_t result;

  result = qword_2543A9B10;
  if (!qword_2543A9B10)
  {
    result = MEMORY[0x2426A62C4](&unk_242277E5C, &type metadata for ModelManagerError.SessionInCancelStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B10);
  }
  return result;
}

unint64_t sub_2421DD108()
{
  unint64_t result;

  result = qword_2543A9B08;
  if (!qword_2543A9B08)
  {
    result = MEMORY[0x2426A62C4](&unk_242277E84, &type metadata for ModelManagerError.SessionInCancelStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B08);
  }
  return result;
}

unint64_t sub_2421DD148()
{
  unint64_t result;

  result = qword_2543A9AE0;
  if (!qword_2543A9AE0)
  {
    result = MEMORY[0x2426A62C4](&unk_242277E0C, &type metadata for ModelManagerError.OperationCancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9AE0);
  }
  return result;
}

unint64_t sub_2421DD188()
{
  unint64_t result;

  result = qword_2543A9AD8;
  if (!qword_2543A9AD8)
  {
    result = MEMORY[0x2426A62C4](&unk_242277E34, &type metadata for ModelManagerError.OperationCancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9AD8);
  }
  return result;
}

unint64_t sub_2421DD1C8()
{
  unint64_t result;

  result = qword_2543A9B00;
  if (!qword_2543A9B00)
  {
    result = MEMORY[0x2426A62C4](&unk_242277D54, &type metadata for ModelManagerError.AssetBundleNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B00);
  }
  return result;
}

unint64_t sub_2421DD208()
{
  unint64_t result;

  result = qword_2543A9AF8;
  if (!qword_2543A9AF8)
  {
    result = MEMORY[0x2426A62C4](&unk_242277D7C, &type metadata for ModelManagerError.AssetBundleNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9AF8);
  }
  return result;
}

unint64_t sub_2421DD248()
{
  unint64_t result;

  result = qword_2543A9A58;
  if (!qword_2543A9A58)
  {
    result = MEMORY[0x2426A62C4](&unk_242277C9C, &type metadata for ModelManagerError.AssetNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A58);
  }
  return result;
}

unint64_t sub_2421DD288()
{
  unint64_t result;

  result = qword_2543A9A50;
  if (!qword_2543A9A50)
  {
    result = MEMORY[0x2426A62C4](&unk_242277CC4, &type metadata for ModelManagerError.AssetNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A50);
  }
  return result;
}

unint64_t sub_2421DD2C8()
{
  unint64_t result;

  result = qword_2543A99B0;
  if (!qword_2543A99B0)
  {
    result = MEMORY[0x2426A62C4](&unk_242277BE4, &type metadata for ModelManagerError.UnrecognizedModelCatalogResourceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A99B0);
  }
  return result;
}

unint64_t sub_2421DD308()
{
  unint64_t result;

  result = qword_2543A99A8;
  if (!qword_2543A99A8)
  {
    result = MEMORY[0x2426A62C4](&unk_242277C0C, &type metadata for ModelManagerError.UnrecognizedModelCatalogResourceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A99A8);
  }
  return result;
}

unint64_t sub_2421DD348()
{
  unint64_t result;

  result = qword_2543A9BD0;
  if (!qword_2543A9BD0)
  {
    result = MEMORY[0x2426A62C4](&unk_242277B2C, &type metadata for ModelManagerError.NoCommonInferenceProviderForAssetsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9BD0);
  }
  return result;
}

unint64_t sub_2421DD388()
{
  unint64_t result;

  result = qword_2543A9BC8;
  if (!qword_2543A9BC8)
  {
    result = MEMORY[0x2426A62C4](&unk_242277B54, &type metadata for ModelManagerError.NoCommonInferenceProviderForAssetsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9BC8);
  }
  return result;
}

unint64_t sub_2421DD3C8()
{
  unint64_t result;

  result = qword_2543A9B90;
  if (!qword_2543A9B90)
  {
    result = MEMORY[0x2426A62C4](&unk_242277A74, &type metadata for ModelManagerError.AssetDoesNotSupportDynamicModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B90);
  }
  return result;
}

unint64_t sub_2421DD408()
{
  unint64_t result;

  result = qword_2543A9B88;
  if (!qword_2543A9B88)
  {
    result = MEMORY[0x2426A62C4](&unk_242277A9C, &type metadata for ModelManagerError.AssetDoesNotSupportDynamicModeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B88);
  }
  return result;
}

unint64_t sub_2421DD448()
{
  unint64_t result;

  result = qword_2543A9A88;
  if (!qword_2543A9A88)
  {
    result = MEMORY[0x2426A62C4](&unk_2422779BC, &type metadata for ModelManagerError.SessionNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A88);
  }
  return result;
}

unint64_t sub_2421DD488()
{
  unint64_t result;

  result = qword_2543A9A80;
  if (!qword_2543A9A80)
  {
    result = MEMORY[0x2426A62C4](&unk_2422779E4, &type metadata for ModelManagerError.SessionNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A80);
  }
  return result;
}

unint64_t sub_2421DD4C8()
{
  unint64_t result;

  result = qword_2543A99C0;
  if (!qword_2543A99C0)
  {
    result = MEMORY[0x2426A62C4](&unk_242277904, &type metadata for ModelManagerError.InvalidRequestModelBundleIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A99C0);
  }
  return result;
}

unint64_t sub_2421DD508()
{
  unint64_t result;

  result = qword_2543A99B8;
  if (!qword_2543A99B8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227792C, &type metadata for ModelManagerError.InvalidRequestModelBundleIDCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A99B8);
  }
  return result;
}

unint64_t sub_2421DD548()
{
  unint64_t result;

  result = qword_2543A9BA0;
  if (!qword_2543A9BA0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227784C, &type metadata for ModelManagerError.InvalidRequestRequiredAssetIDsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9BA0);
  }
  return result;
}

unint64_t sub_2421DD588()
{
  unint64_t result;

  result = qword_2543A9B98;
  if (!qword_2543A9B98)
  {
    result = MEMORY[0x2426A62C4](&unk_242277874, &type metadata for ModelManagerError.InvalidRequestRequiredAssetIDsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B98);
  }
  return result;
}

unint64_t sub_2421DD5C8()
{
  unint64_t result;

  result = qword_2543A9A30;
  if (!qword_2543A9A30)
  {
    result = MEMORY[0x2426A62C4](&unk_242277794, &type metadata for ModelManagerError.ModelCatalogErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A30);
  }
  return result;
}

unint64_t sub_2421DD608()
{
  unint64_t result;

  result = qword_2543A9A28;
  if (!qword_2543A9A28)
  {
    result = MEMORY[0x2426A62C4](&unk_2422777BC, &type metadata for ModelManagerError.ModelCatalogErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A28);
  }
  return result;
}

unint64_t sub_2421DD648()
{
  unint64_t result;

  result = qword_2543A9B30;
  if (!qword_2543A9B30)
  {
    result = MEMORY[0x2426A62C4](&unk_242277744, &type metadata for ModelManagerError.DeniedAssertionBySystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B30);
  }
  return result;
}

unint64_t sub_2421DD688()
{
  unint64_t result;

  result = qword_2543A9B28;
  if (!qword_2543A9B28)
  {
    result = MEMORY[0x2426A62C4](&unk_24227776C, &type metadata for ModelManagerError.DeniedAssertionBySystemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B28);
  }
  return result;
}

unint64_t sub_2421DD6C8()
{
  unint64_t result;

  result = qword_2543A99D0;
  if (!qword_2543A99D0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227768C, &type metadata for ModelManagerError.AssetNotAvailableInModelCatalogCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A99D0);
  }
  return result;
}

unint64_t sub_2421DD708()
{
  unint64_t result;

  result = qword_2543A99C8;
  if (!qword_2543A99C8)
  {
    result = MEMORY[0x2426A62C4](&unk_2422776B4, &type metadata for ModelManagerError.AssetNotAvailableInModelCatalogCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A99C8);
  }
  return result;
}

unint64_t sub_2421DD748()
{
  unint64_t result;

  result = qword_2543A9AF0;
  if (!qword_2543A9AF0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227763C, &type metadata for ModelManagerError.PolicyNotAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9AF0);
  }
  return result;
}

unint64_t sub_2421DD788()
{
  unint64_t result;

  result = qword_2543A9AE8;
  if (!qword_2543A9AE8)
  {
    result = MEMORY[0x2426A62C4](&unk_242277664, &type metadata for ModelManagerError.PolicyNotAvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9AE8);
  }
  return result;
}

unint64_t sub_2421DD7C8()
{
  unint64_t result;

  result = qword_2543A9AA8;
  if (!qword_2543A9AA8)
  {
    result = MEMORY[0x2426A62C4](&unk_2422775EC, &type metadata for ModelManagerError.DeviceNotEligibleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9AA8);
  }
  return result;
}

unint64_t sub_2421DD808()
{
  unint64_t result;

  result = qword_2543A9AA0;
  if (!qword_2543A9AA0)
  {
    result = MEMORY[0x2426A62C4](&unk_242277614, &type metadata for ModelManagerError.DeviceNotEligibleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9AA0);
  }
  return result;
}

unint64_t sub_2421DD848()
{
  unint64_t result;

  result = qword_2543A9A68;
  if (!qword_2543A9A68)
  {
    result = MEMORY[0x2426A62C4](&unk_242277534, &type metadata for ModelManagerError.PolicyNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A68);
  }
  return result;
}

unint64_t sub_2421DD888()
{
  unint64_t result;

  result = qword_2543A9A60;
  if (!qword_2543A9A60)
  {
    result = MEMORY[0x2426A62C4](&unk_24227755C, &type metadata for ModelManagerError.PolicyNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A60);
  }
  return result;
}

unint64_t sub_2421DD8C8()
{
  unint64_t result;

  result = qword_2543A9B40;
  if (!qword_2543A9B40)
  {
    result = MEMORY[0x2426A62C4](&unk_24227747C, &type metadata for ModelManagerError.InferenceProviderCrashedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B40);
  }
  return result;
}

unint64_t sub_2421DD908()
{
  unint64_t result;

  result = qword_2543A9B38;
  if (!qword_2543A9B38)
  {
    result = MEMORY[0x2426A62C4](&unk_2422774A4, &type metadata for ModelManagerError.InferenceProviderCrashedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9B38);
  }
  return result;
}

unint64_t sub_2421DD948()
{
  unint64_t result;

  result = qword_2543A9BB0;
  if (!qword_2543A9BB0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227742C, &type metadata for ModelManagerError.UnableToForceAssetVersionSwitchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9BB0);
  }
  return result;
}

unint64_t sub_2421DD988()
{
  unint64_t result;

  result = qword_2543A9BA8;
  if (!qword_2543A9BA8)
  {
    result = MEMORY[0x2426A62C4](&unk_242277454, &type metadata for ModelManagerError.UnableToForceAssetVersionSwitchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9BA8);
  }
  return result;
}

unint64_t sub_2421DD9C8()
{
  unint64_t result;

  result = qword_2543A9A48;
  if (!qword_2543A9A48)
  {
    result = MEMORY[0x2426A62C4](&unk_24227869C, &type metadata for ModelManagerError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A48);
  }
  return result;
}

unint64_t sub_2421DDA08()
{
  unint64_t result;

  result = qword_2543A9A40;
  if (!qword_2543A9A40)
  {
    result = MEMORY[0x2426A62C4](&unk_2422786C4, &type metadata for ModelManagerError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9A40);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_2()
{
  return sub_242272A4C();
}

uint64_t OUTLINED_FUNCTION_4_3()
{
  return sub_242272AF4();
}

uint64_t OUTLINED_FUNCTION_5_3@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_6_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8))(v1, v0);
}

void OUTLINED_FUNCTION_7_3()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

uint64_t OUTLINED_FUNCTION_8_3()
{
  return sub_242272AF4();
}

uint64_t OUTLINED_FUNCTION_10_3()
{
  return sub_242272AF4();
}

uint64_t OUTLINED_FUNCTION_11_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_12_4()
{
  return sub_242272A7C();
}

uint64_t OUTLINED_FUNCTION_13_3()
{
  return sub_242272B18();
}

uint64_t OUTLINED_FUNCTION_14_5()
{
  return swift_getEnumCaseMultiPayload();
}

_QWORD *OUTLINED_FUNCTION_16_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v3 = *(_QWORD **)(a1 - 256);
  *v3 = v1;
  v3[1] = v2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_19_3()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_21_2()
{
  return sub_242272B18();
}

uint64_t OUTLINED_FUNCTION_22_3()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 160);
}

uint64_t OUTLINED_FUNCTION_23_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_24_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = a1;
  *(_QWORD *)(v2 - 136) = v1;
  return sub_2422726F8();
}

uint64_t OUTLINED_FUNCTION_26_3()
{
  uint64_t v0;

  return sub_2421DA7CC(v0);
}

uint64_t OUTLINED_FUNCTION_27_4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 208);
}

uint64_t OUTLINED_FUNCTION_28_4()
{
  return sub_242272AAC();
}

uint64_t OUTLINED_FUNCTION_32_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2421D6AB4(a1, *(_QWORD *)(a2 - 256));
}

uint64_t OUTLINED_FUNCTION_33_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_34_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_36_1(uint64_t a1)
{
  uint64_t v1;

  return sub_2421D6AB4(a1, v1);
}

uint64_t OUTLINED_FUNCTION_39_1()
{
  return sub_242272AF4();
}

uint64_t OUTLINED_FUNCTION_41()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return sub_2421C1F98(v6, v5, v4, v3, v2, v1, v0);
}

void OUTLINED_FUNCTION_42_1()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_43_0()
{
  return sub_2422726F8();
}

uint64_t OUTLINED_FUNCTION_45_2()
{
  return sub_2422726F8();
}

uint64_t OUTLINED_FUNCTION_46_1()
{
  return sub_242272B48();
}

void OUTLINED_FUNCTION_47_2()
{
  JUMPOUT(0x2426A61F8);
}

uint64_t OUTLINED_FUNCTION_48_2@<X0>(uint64_t (*a1)(_QWORD, uint64_t, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(*(_QWORD *)(v1 - 256), v2, *(_QWORD *)(v3 - 192));
}

uint64_t OUTLINED_FUNCTION_50_1@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_51_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

void OUTLINED_FUNCTION_52_2(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 256) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_53_2()
{
  return sub_242272B48();
}

uint64_t OUTLINED_FUNCTION_54_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2421D6AB4(a1, *(_QWORD *)(a2 - 256));
}

void OUTLINED_FUNCTION_55_2()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 144) = 0x206E6F6973736553;
  *(_QWORD *)(v0 - 136) = 0xE800000000000000;
}

uint64_t OUTLINED_FUNCTION_56_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_58_1()
{
  return sub_242272C20();
}

uint64_t OUTLINED_FUNCTION_59_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_65_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_66_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_68_1()
{
  return type metadata accessor for ModelManagerError();
}

uint64_t OUTLINED_FUNCTION_69_2()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_71_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 1;
  return sub_2421DAF88();
}

unint64_t OUTLINED_FUNCTION_72_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 6;
  return sub_2421DAE5C();
}

unint64_t OUTLINED_FUNCTION_73_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 31;
  return sub_2421DA880();
}

unint64_t OUTLINED_FUNCTION_75_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 30;
  return sub_2421DA8BC();
}

unint64_t OUTLINED_FUNCTION_76_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 27;
  return sub_2421DA970();
}

uint64_t OUTLINED_FUNCTION_77_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_78_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_79_2()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_81_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 25;
  return sub_2421DA9E8();
}

unint64_t OUTLINED_FUNCTION_85_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 24;
  return sub_2421DAA24();
}

unint64_t OUTLINED_FUNCTION_86_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 23;
  return sub_2421DAA60();
}

unint64_t OUTLINED_FUNCTION_87_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 22;
  return sub_2421DAA9C();
}

uint64_t OUTLINED_FUNCTION_88_2()
{
  return sub_2421C1F08(42);
}

unint64_t OUTLINED_FUNCTION_89_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 21;
  return sub_2421DAAD8();
}

unint64_t OUTLINED_FUNCTION_90_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 32;
  return sub_2421DA844();
}

unint64_t OUTLINED_FUNCTION_91_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 20;
  return sub_2421DAB14();
}

uint64_t OUTLINED_FUNCTION_92_1()
{
  return swift_dynamicCast();
}

unint64_t OUTLINED_FUNCTION_93_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 29;
  return sub_2421DA8F8();
}

unint64_t OUTLINED_FUNCTION_94_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 19;
  return sub_2421DAB50();
}

unint64_t OUTLINED_FUNCTION_95_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 28;
  return sub_2421DA934();
}

unint64_t OUTLINED_FUNCTION_96_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 18;
  return sub_2421DAB8C();
}

unint64_t OUTLINED_FUNCTION_97_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 26;
  return sub_2421DA9AC();
}

unint64_t OUTLINED_FUNCTION_98_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 17;
  return sub_2421DABC8();
}

unint64_t OUTLINED_FUNCTION_100_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 16;
  return sub_2421DAC04();
}

unint64_t OUTLINED_FUNCTION_101_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 15;
  return sub_2421DAC40();
}

unint64_t OUTLINED_FUNCTION_102_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 13;
  return sub_2421DACB8();
}

unint64_t OUTLINED_FUNCTION_103_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 12;
  return sub_2421DACF4();
}

uint64_t OUTLINED_FUNCTION_104_0()
{
  return sub_242272B84();
}

uint64_t OUTLINED_FUNCTION_105_0()
{
  return swift_bridgeObjectRelease_n();
}

unint64_t OUTLINED_FUNCTION_106_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 14;
  return sub_2421DAC7C();
}

unint64_t OUTLINED_FUNCTION_107_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 11;
  return sub_2421DAD30();
}

unint64_t OUTLINED_FUNCTION_108_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 5;
  return sub_2421DAE98();
}

unint64_t OUTLINED_FUNCTION_109_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 10;
  return sub_2421DAD6C();
}

unint64_t OUTLINED_FUNCTION_110_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 4;
  return sub_2421DAED4();
}

unint64_t OUTLINED_FUNCTION_111_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 9;
  return sub_2421DADA8();
}

unint64_t OUTLINED_FUNCTION_112_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 3;
  return sub_2421DAF10();
}

unint64_t OUTLINED_FUNCTION_113()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 8;
  return sub_2421DADE4();
}

uint64_t OUTLINED_FUNCTION_115_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_116_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

unint64_t OUTLINED_FUNCTION_117()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 2;
  return sub_2421DAF4C();
}

unint64_t OUTLINED_FUNCTION_118_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 144) = 7;
  return sub_2421DAE20();
}

unint64_t OUTLINED_FUNCTION_119_0()
{
  _QWORD *v0;
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1(v0, v1);
  return sub_2421DA808();
}

uint64_t OUTLINED_FUNCTION_120()
{
  return sub_2422726F8();
}

uint64_t StateDump.assertions.getter()
{
  return sub_242272644();
}

__n128 StateDump.currentPolicy.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 *v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = v1[1].n128_u64[0];
  v3 = v1[1].n128_u8[8];
  *(_BYTE *)a1 = v1->n128_u8[8];
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  result = v1[2];
  *(__n128 *)(a1 + 24) = result;
  return result;
}

uint64_t StateDump.sessions.getter()
{
  return sub_242272644();
}

uint64_t StateDump.requests.getter()
{
  return sub_242272644();
}

uint64_t StateDump.runningRequests.getter()
{
  return sub_242272644();
}

uint64_t StateDump.inferenceProviders.getter()
{
  return sub_242272644();
}

uint64_t StateDump.disabledUseCases.getter()
{
  return sub_242272644();
}

uint64_t StateDump.trials.getter()
{
  return sub_242272644();
}

uint64_t StateDump.budget.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 104);
}

uint64_t StateDump.AssetState.descriptor.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  sub_242272644();
  return OUTLINED_FUNCTION_28_5();
}

uint64_t StateDump.AssetState.inferenceProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_91_2(*(_QWORD *)(v1 + 88), a1);
  return OUTLINED_FUNCTION_28_5();
}

void StateDump.AssetState.loadState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 97);
}

uint64_t StateDump.AssetState.foregroundSessions.getter()
{
  type metadata accessor for StateDump.AssetState(0);
  return sub_242272644();
}

uint64_t type metadata accessor for StateDump.AssetState(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2543A7888);
}

void StateDump.AssetState.init(descriptor:path:cost:isCacheable:dynamicModeAllowed:useEnergyEfficientMode:inferenceProvider:loadState:timeLastRequestEnded:timeLastForegroundSessionEnded:requiredByOtherAssets:foregroundSessions:requests:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,_BYTE *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_106();
  v27 = v26;
  v29 = *(_QWORD *)(v28 + 8);
  v31 = *v30;
  v33 = *v32;
  v34 = v32[1];
  v35 = *((_BYTE *)v32 + 32);
  LOBYTE(v26) = *a21;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_QWORD *)(v27 + 8) = v29;
  *(_OWORD *)(v27 + 16) = *(_OWORD *)(v28 + 16);
  *(_QWORD *)(v27 + 32) = v36;
  *(_QWORD *)(v27 + 40) = v37;
  *(_QWORD *)(v27 + 48) = v31;
  *(_BYTE *)(v27 + 56) = v38;
  *(_BYTE *)(v27 + 57) = v39;
  *(_BYTE *)(v27 + 58) = v40;
  *(_QWORD *)(v27 + 64) = v33;
  *(_QWORD *)(v27 + 72) = v34;
  *(_OWORD *)(v27 + 80) = *((_OWORD *)v32 + 1);
  *(_BYTE *)(v27 + 96) = v35;
  *(_BYTE *)(v27 + 97) = v26;
  v41 = (int *)type metadata accessor for StateDump.AssetState(0);
  v42 = v27 + v41[12];
  v43 = OUTLINED_FUNCTION_85_1();
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32);
  v44(v42, a22, v43);
  v44(v27 + v41[13], a23, v43);
  *(_QWORD *)(v27 + v41[14]) = a24;
  *(_QWORD *)(v27 + v41[15]) = a25;
  *(_QWORD *)(v27 + v41[16]) = a26;
  OUTLINED_FUNCTION_73_1();
}

uint64_t StateDump.AssetState.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_144();
  OUTLINED_FUNCTION_133();
  OUTLINED_FUNCTION_146();
  OUTLINED_FUNCTION_95_2();
  if (v1)
  {
    OUTLINED_FUNCTION_82_1();
    sub_2422726EC();
    OUTLINED_FUNCTION_60_1();
  }
  OUTLINED_FUNCTION_82_1();
  OUTLINED_FUNCTION_55_1();
  OUTLINED_FUNCTION_60_1();
  sub_242272CF8();
  sub_242272CE0();
  sub_242272CE0();
  sub_242272CE0();
  v2 = *(_QWORD *)(v0 + 88);
  OUTLINED_FUNCTION_43_1();
  swift_bridgeObjectRetain_n();
  OUTLINED_FUNCTION_55_1();
  OUTLINED_FUNCTION_60_1();
  OUTLINED_FUNCTION_96_2();
  if (v2)
  {
    OUTLINED_FUNCTION_43_1();
    sub_2422726EC();
    OUTLINED_FUNCTION_40_0();
  }
  OUTLINED_FUNCTION_95_2();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_60_1();
  sub_2422726EC();
  OUTLINED_FUNCTION_31_1();
  type metadata accessor for StateDump.AssetState(0);
  OUTLINED_FUNCTION_85_1();
  sub_2421E388C((uint64_t)&unk_2571E08E0);
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_26_4();
  sub_2421CE69C();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_122_0();
  return swift_bridgeObjectRelease();
}

void static StateDump.AssetState.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;

  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (!v11 && (OUTLINED_FUNCTION_47_0() & 1) == 0)
    goto LABEL_31;
  if (v8)
  {
    if (!v9)
      goto LABEL_31;
    v12 = v7 == v10 && v8 == v9;
    if (!v12 && (OUTLINED_FUNCTION_47_0() & 1) == 0)
      goto LABEL_31;
  }
  else if (v9)
  {
    goto LABEL_31;
  }
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a2 + 32);
  v16 = *(_QWORD *)(a2 + 40);
  v17 = v13 == v15 && v14 == v16;
  if (v17 || (v13 = OUTLINED_FUNCTION_47_0(), (v13 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48)
      && *(unsigned __int8 *)(a1 + 56) == *(unsigned __int8 *)(a2 + 56)
      && *(unsigned __int8 *)(a1 + 57) == *(unsigned __int8 *)(a2 + 57)
      && *(unsigned __int8 *)(a1 + 58) == *(unsigned __int8 *)(a2 + 58)
      && (OUTLINED_FUNCTION_61_2(v13, v14, v15, v16, a5, *(_QWORD *)(a2 + 64), *(_QWORD *)(a2 + 72), *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), *(_BYTE *)(a2 + 96), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96)) & 1) != 0)
    {
      sub_2421C7BAC();
      if ((v18 & 1) != 0)
      {
        v19 = type metadata accessor for StateDump.AssetState(0);
        if ((OUTLINED_FUNCTION_99_0() & 1) != 0 && (OUTLINED_FUNCTION_99_0() & 1) != 0)
        {
          sub_2421C8768(*(_QWORD *)(a1 + *(int *)(v19 + 56)), *(_QWORD *)(a2 + *(int *)(v19 + 56)));
          if ((v20 & 1) != 0)
          {
            sub_2421C89D8();
            if ((v21 & 1) != 0)
            {
              sub_2421C89C4();
              return;
            }
          }
        }
      }
    }
  }
LABEL_31:
  OUTLINED_FUNCTION_95_0();
}

uint64_t sub_2421DE56C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v3 = a1 == 0x7470697263736564 && a2 == 0xEA0000000000726FLL;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1752457584 && a2 == 0xE400000000000000;
    if (v6 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1953722211 && a2 == 0xE400000000000000;
      if (v7 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6165686361437369 && a2 == 0xEB00000000656C62;
        if (v8 || (sub_242272C20() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000012 && a2 == 0x8000000242284070 || (sub_242272C20() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000016 && a2 == 0x8000000242284090 || (sub_242272C20() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000011 && a2 == 0x80000002422840B0 || (sub_242272C20() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          v9 = a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065;
          if (v9 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else if (a1 == 0xD000000000000014 && a2 == 0x80000002422840D0 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else if (a1 == 0xD00000000000001ELL && a2 == 0x80000002422840F0 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else if (a1 == 0xD000000000000015 && a2 == 0x8000000242284110 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else if (a1 == 0xD000000000000012 && a2 == 0x8000000242284130 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 11;
          }
          else if (a1 == 0x7374736575716572 && a2 == 0xE800000000000000)
          {
            swift_bridgeObjectRelease();
            return 12;
          }
          else
          {
            v11 = sub_242272C20();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 12;
            else
              return 13;
          }
        }
      }
    }
  }
}

uint64_t sub_2421DEA20()
{
  return 13;
}

uint64_t sub_2421DEA28(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2421DEA60 + 4 * byte_242279200[a1]))(0xD000000000000012, 0x8000000242284070);
}

uint64_t sub_2421DEA60()
{
  return 0x7470697263736564;
}

uint64_t sub_2421DEA7C()
{
  return 1752457584;
}

uint64_t sub_2421DEA8C()
{
  return 1953722211;
}

uint64_t sub_2421DEA9C()
{
  return 0x6165686361437369;
}

uint64_t sub_2421DEABC(uint64_t a1)
{
  return a1 + 4;
}

uint64_t sub_2421DEB3C()
{
  return 0x7374736575716572;
}

uint64_t sub_2421DEB58()
{
  unsigned __int8 *v0;

  return sub_2421DEA28(*v0);
}

uint64_t sub_2421DEB60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421DE56C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2421DEB84@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2421DEA20();
  *a1 = result;
  return result;
}

uint64_t sub_2421DEBA8()
{
  sub_2421E3760();
  return sub_242272D70();
}

uint64_t sub_2421DEBD0()
{
  sub_2421E3760();
  return sub_242272D7C();
}

void StateDump.AssetState.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_45_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E08E8);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_22_4();
  sub_2421E3760();
  OUTLINED_FUNCTION_16_5();
  sub_2421E379C();
  OUTLINED_FUNCTION_2_3();
  if (!v0)
  {
    OUTLINED_FUNCTION_112_1();
    OUTLINED_FUNCTION_84_3();
    OUTLINED_FUNCTION_39_2();
    sub_2421E37D8();
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_19_4(3);
    OUTLINED_FUNCTION_19_4(4);
    OUTLINED_FUNCTION_19_4(5);
    OUTLINED_FUNCTION_106_1();
    sub_2421E3814();
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_105_1();
    sub_2421E3850();
    OUTLINED_FUNCTION_2_3();
    type metadata accessor for StateDump.AssetState(0);
    sub_24227235C();
    sub_2421E388C((uint64_t)&unk_2571E0918);
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_79_3();
    OUTLINED_FUNCTION_2_3();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7970);
    sub_2421E39B0((uint64_t)&qword_2543A7978);
    OUTLINED_FUNCTION_2_3();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0920);
    sub_2421E39FC((uint64_t)&unk_2571E0928);
    OUTLINED_FUNCTION_2_3();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7920);
    sub_2421E3A4C((uint64_t)&unk_2543A7928);
    OUTLINED_FUNCTION_2_3();
  }
  OUTLINED_FUNCTION_42_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_16_0();
}

void StateDump.AssetState.hashValue.getter()
{
  sub_2421CB9BC((void (*)(_BYTE *))StateDump.AssetState.hash(into:));
}

void StateDump.AssetState.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  char v35;

  OUTLINED_FUNCTION_45_0();
  v3 = v2;
  v5 = v4;
  v31 = sub_24227235C();
  v27 = *(_QWORD *)(v31 - 8);
  v6 = MEMORY[0x24BDAC7A8](v31);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - v9;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0938);
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_63_2();
  v30 = (int *)type metadata accessor for StateDump.AssetState(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_2_0();
  v28 = v3;
  v29 = v12;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_2421E3760();
  v25 = v0;
  sub_242272D40();
  if (v1)
  {
    OUTLINED_FUNCTION_120_0();
  }
  else
  {
    v23 = v8;
    v24 = v10;
    v22 = v5;
    sub_2421E38C0();
    OUTLINED_FUNCTION_69_3();
    OUTLINED_FUNCTION_29_4();
    v13 = v33;
    v14 = v29;
    *v29 = v32;
    v14[1] = v13;
    *((_OWORD *)v14 + 1) = v34;
    OUTLINED_FUNCTION_112_1();
    v14[4] = sub_242272A7C();
    v14[5] = v15;
    OUTLINED_FUNCTION_39_2();
    sub_2421E38FC();
    OUTLINED_FUNCTION_20_5();
    v14[6] = v32;
    *((_BYTE *)v14 + 56) = OUTLINED_FUNCTION_25_2(3) & 1;
    *((_BYTE *)v14 + 57) = OUTLINED_FUNCTION_25_2(4) & 1;
    *((_BYTE *)v14 + 58) = OUTLINED_FUNCTION_25_2(5) & 1;
    OUTLINED_FUNCTION_106_1();
    sub_2421E3938();
    OUTLINED_FUNCTION_20_5();
    v16 = v33;
    v17 = v35;
    v14[8] = v32;
    v14[9] = v16;
    *((_OWORD *)v14 + 5) = v34;
    *((_BYTE *)v14 + 96) = v17;
    OUTLINED_FUNCTION_105_1();
    sub_2421E3974();
    OUTLINED_FUNCTION_20_5();
    *((_BYTE *)v14 + 97) = v32;
    LOBYTE(v32) = 8;
    sub_2421E388C((uint64_t)&unk_2571E0960);
    v18 = v24;
    OUTLINED_FUNCTION_29_4();
    v19 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v19((char *)v14 + v30[12], v18, v31);
    OUTLINED_FUNCTION_79_3();
    OUTLINED_FUNCTION_29_4();
    v19((char *)v29 + v30[13], v23, v31);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7970);
    sub_2421E39B0((uint64_t)&qword_2571E0278);
    OUTLINED_FUNCTION_11_2();
    *(_QWORD *)((char *)v29 + v30[14]) = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0920);
    sub_2421E39FC((uint64_t)&unk_2571E0968);
    OUTLINED_FUNCTION_11_2();
    *(_QWORD *)((char *)v29 + v30[15]) = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7920);
    sub_2421E3A4C((uint64_t)&unk_2571E0978);
    OUTLINED_FUNCTION_11_2();
    OUTLINED_FUNCTION_35_3();
    v20 = (uint64_t)v29;
    *(_QWORD *)((char *)v29 + v30[16]) = v32;
    OUTLINED_FUNCTION_117_0(v20, v22);
    OUTLINED_FUNCTION_120_0();
    OUTLINED_FUNCTION_102_1(v20);
  }
  OUTLINED_FUNCTION_16_0();
}

void sub_2421DF548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2421E0EA8(a1, a2, a3, (void (*)(_BYTE *))StateDump.AssetState.hash(into:));
}

void sub_2421DF554()
{
  StateDump.AssetState.init(from:)();
}

void sub_2421DF568()
{
  StateDump.AssetState.encode(to:)();
}

void StateDump.SessionState.identifier.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2421E3B90(v1, a1, &qword_2543A7850);
}

void StateDump.SessionState.init(identifier:supportedAssets:useCaseIdentifier:onBehalfOfPID:createdByPID:containsSensitiveData:requests:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char *a21)
{
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  int *v39;
  _QWORD *v40;

  OUTLINED_FUNCTION_106();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v37 = *a21;
  sub_2421E3BC4(v38, v35, &qword_2543A7850);
  v39 = (int *)OUTLINED_FUNCTION_113_0();
  *(_QWORD *)(v36 + v39[5]) = v34;
  v40 = (_QWORD *)(v36 + v39[6]);
  *v40 = v32;
  v40[1] = v30;
  *(_DWORD *)(v36 + v39[7]) = v28;
  *(_DWORD *)(v36 + v39[8]) = v26;
  *(_BYTE *)(v36 + v39[9]) = v24;
  *(_QWORD *)(v36 + v39[10]) = v22;
  *(_BYTE *)(v36 + v39[11]) = v37;
  OUTLINED_FUNCTION_73_1();
}

void StateDump.SessionState.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_21();
  sub_2421E388C((uint64_t)&qword_2543AA0D8);
  sub_242272680();
  v3 = OUTLINED_FUNCTION_113_0();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_43_1();
  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_40_0();
  sub_242272CEC();
  sub_242272CEC();
  sub_242272CE0();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_31_1();
  sub_2421C7D7C(a1, *(_BYTE *)(v1 + *(int *)(v3 + 44)));
}

void static StateDump.SessionState.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  BOOL v8;
  char v9;

  if ((OUTLINED_FUNCTION_63_3() & 1) == 0)
    goto LABEL_13;
  v2 = (int *)OUTLINED_FUNCTION_113_0();
  OUTLINED_FUNCTION_110_1(v2[5]);
  if ((v3 & 1) == 0)
    goto LABEL_13;
  v4 = v2[6];
  v5 = *(_QWORD *)(v0 + v4);
  v6 = *(_QWORD *)(v0 + v4 + 8);
  v7 = (_QWORD *)(v1 + v4);
  v8 = v5 == *v7 && v6 == v7[1];
  if ((v8 || (OUTLINED_FUNCTION_47_0() & 1) != 0)
    && *(_DWORD *)(v0 + v2[7]) == *(_DWORD *)(v1 + v2[7])
    && *(_DWORD *)(v0 + v2[8]) == *(_DWORD *)(v1 + v2[8])
    && *(unsigned __int8 *)(v0 + v2[9]) == *(unsigned __int8 *)(v1 + v2[9])
    && (sub_2421C89C4(), (v9 & 1) != 0))
  {
    sub_2421C7A28(*(_BYTE *)(v0 + v2[11]));
  }
  else
  {
LABEL_13:
    OUTLINED_FUNCTION_14();
  }
}

uint64_t sub_2421DF7E0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6574726F70707573 && a2 == 0xEF73746573734164;
    if (v6 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x8000000242283770 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x666C616865426E6FLL && a2 == 0xED0000444950664FLL;
      if (v7 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x4264657461657263 && a2 == 0xEC00000044495079;
        if (v8 || (sub_242272C20() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x8000000242284150 || (sub_242272C20() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v9 = a1 == 0x7374736575716572 && a2 == 0xE800000000000000;
          if (v9 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            v11 = sub_242272C20();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 7;
            else
              return 8;
          }
        }
      }
    }
  }
}

uint64_t sub_2421DFB20()
{
  return 8;
}

uint64_t sub_2421DFB28(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2421DFB60 + 4 * byte_24227920D[a1]))(0xD000000000000011, 0x8000000242283770);
}

uint64_t sub_2421DFB60()
{
  return 0x696669746E656469;
}

uint64_t sub_2421DFB7C()
{
  return 0x6574726F70707573;
}

uint64_t sub_2421DFBA0()
{
  return 0x666C616865426E6FLL;
}

uint64_t sub_2421DFBC4()
{
  return 0x4264657461657263;
}

uint64_t sub_2421DFBE4(uint64_t a1)
{
  return a1 + 4;
}

uint64_t sub_2421DFBFC()
{
  return 0x7374736575716572;
}

uint64_t sub_2421DFC14()
{
  return 0x6574617473;
}

uint64_t sub_2421DFC28()
{
  unsigned __int8 *v0;

  return sub_2421DFB28(*v0);
}

uint64_t sub_2421DFC30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421DF7E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2421DFC54@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2421DFB20();
  *a1 = result;
  return result;
}

uint64_t sub_2421DFC78()
{
  sub_2421E3AB0();
  return sub_242272D70();
}

uint64_t sub_2421DFCA0()
{
  sub_2421E3AB0();
  return sub_242272D7C();
}

void StateDump.SessionState.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0988);
  OUTLINED_FUNCTION_45_3();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_22_4();
  sub_2421E3AB0();
  OUTLINED_FUNCTION_16_5();
  OUTLINED_FUNCTION_114_0();
  OUTLINED_FUNCTION_101_1((uint64_t)&unk_2571E0930);
  OUTLINED_FUNCTION_2_3();
  if (!v0)
  {
    type metadata accessor for StateDump.SessionState(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7970);
    sub_2421E39B0((uint64_t)&qword_2543A7978);
    OUTLINED_FUNCTION_2_3();
    OUTLINED_FUNCTION_84_3();
    OUTLINED_FUNCTION_40_1();
    OUTLINED_FUNCTION_40_1();
    sub_242272B24();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7920);
    sub_2421E3A4C((uint64_t)&unk_2543A7928);
    OUTLINED_FUNCTION_2_3();
    sub_2421E3AEC();
    OUTLINED_FUNCTION_2_3();
  }
  OUTLINED_FUNCTION_42_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_65_3();
}

void StateDump.SessionState.hashValue.getter()
{
  sub_2421CB9BC((void (*)(_BYTE *))StateDump.SessionState.hash(into:));
}

void StateDump.SessionState.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;

  OUTLINED_FUNCTION_45_0();
  v13 = v12;
  v22 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_62_1();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E09A0);
  v16 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_105();
  v25 = (int *)type metadata accessor for StateDump.SessionState(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_72_3(v18, v22);
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  sub_2421E3AB0();
  sub_242272D40();
  if (v10)
  {
    OUTLINED_FUNCTION_145();
  }
  else
  {
    LOBYTE(a10) = 0;
    sub_2421E3DB8((uint64_t)&unk_2571E0970);
    OUTLINED_FUNCTION_49_2();
    sub_2421E3BC4(v11, v26, &qword_2543A7850);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7970);
    sub_2421E39B0((uint64_t)&qword_2571E0278);
    OUTLINED_FUNCTION_32_1();
    *(_QWORD *)(v26 + v25[5]) = a10;
    OUTLINED_FUNCTION_100_1(2);
    v19 = sub_242272A7C();
    v20 = (uint64_t *)(v26 + v25[6]);
    *v20 = v19;
    v20[1] = v21;
    *(_DWORD *)(v26 + v25[7]) = OUTLINED_FUNCTION_60_3(3);
    *(_DWORD *)(v26 + v25[8]) = OUTLINED_FUNCTION_60_3(4);
    OUTLINED_FUNCTION_100_1(5);
    *(_BYTE *)(v26 + v25[9]) = sub_242272A88() & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7920);
    sub_2421E3A4C((uint64_t)&unk_2571E0978);
    OUTLINED_FUNCTION_32_1();
    *(_QWORD *)(v26 + v25[10]) = a10;
    sub_2421E3B28();
    OUTLINED_FUNCTION_49_2();
    OUTLINED_FUNCTION_4_4(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    *(_BYTE *)(v26 + v25[11]) = 0;
    sub_2421E3B64(v26, v23, type metadata accessor for StateDump.SessionState);
    OUTLINED_FUNCTION_145();
    sub_2421D3DF4(v26, type metadata accessor for StateDump.SessionState);
  }
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_16_0();
}

void sub_2421E0314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2421E0EA8(a1, a2, a3, (void (*)(_BYTE *))StateDump.SessionState.hash(into:));
}

void sub_2421E0320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  StateDump.SessionState.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_2421E0334()
{
  StateDump.SessionState.encode(to:)();
}

uint64_t StateDump.RequestState.asset.getter()
{
  type metadata accessor for StateDump.RequestState(0);
  return sub_242272644();
}

__n128 StateDump.RequestState.init(identifier:session:asset:inferenceProvider:priority:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 v11;
  char v12;
  int *v13;
  __n128 *v14;
  __n128 result;
  __n128 v16;

  v16 = *a4;
  v9 = a4[1].n128_u64[0];
  v10 = a4[1].n128_u64[1];
  v11 = a4[2].n128_u8[0];
  v12 = *a5;
  sub_2421E3BC4(a1, a6, &qword_2543A7848);
  v13 = (int *)type metadata accessor for StateDump.RequestState(0);
  sub_2421E3BC4(a2, a6 + v13[5], &qword_2543A7850);
  *(_QWORD *)(a6 + v13[6]) = a3;
  v14 = (__n128 *)(a6 + v13[7]);
  result = v16;
  *v14 = v16;
  v14[1].n128_u64[0] = v9;
  v14[1].n128_u64[1] = v10;
  v14[2].n128_u8[0] = v11;
  *(_BYTE *)(a6 + v13[8]) = v12;
  return result;
}

uint64_t StateDump.RequestState.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_21();
  sub_2421E388C((uint64_t)&qword_2543AA0D8);
  OUTLINED_FUNCTION_111();
  v1 = type metadata accessor for StateDump.RequestState(0);
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_31_1();
  v2 = *(_QWORD *)(v0 + *(int *)(v1 + 28) + 24);
  OUTLINED_FUNCTION_144();
  OUTLINED_FUNCTION_104_1();
  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_96_2();
  if (v2)
  {
    OUTLINED_FUNCTION_144();
    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_146();
  }
  OUTLINED_FUNCTION_95_2();
  OUTLINED_FUNCTION_146();
  OUTLINED_FUNCTION_40_0();
  return sub_2421C7E10();
}

void static StateDump.RequestState.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  char v13;

  if ((OUTLINED_FUNCTION_63_3() & 1) != 0)
  {
    v2 = type metadata accessor for StateDump.RequestState(0);
    if ((_s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0() & 1) != 0)
    {
      OUTLINED_FUNCTION_110_1(*(int *)(v2 + 24));
      if ((v3 & 1) != 0)
      {
        v8 = (uint64_t *)(v0 + *(int *)(v2 + 28));
        v10 = *v8;
        v11 = v8[1];
        v12 = *((_OWORD *)v8 + 1);
        v13 = *((_BYTE *)v8 + 32);
        v9 = v1 + *(int *)(v2 + 28);
        if ((OUTLINED_FUNCTION_61_2(v3, v4, v5, v6, v7, *(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 24), *(_BYTE *)(v9 + 32), v10, v11, v12, v13) & 1) != 0)sub_2421C7B4C();
      }
    }
  }
}

uint64_t sub_2421E05E0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  BOOL v7;
  char v9;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E6F6973736573 && a2 == 0xE700000000000000;
    if (v6 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7465737361 && a2 == 0xE500000000000000;
      if (v7 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x80000002422840B0 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v9 = sub_242272C20();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_2421E07D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2421E0808 + 4 * byte_242279215[a1]))(0xD000000000000011, 0x80000002422840B0);
}

uint64_t sub_2421E0808()
{
  return 0x696669746E656469;
}

uint64_t sub_2421E0824()
{
  return 0x6E6F6973736573;
}

uint64_t sub_2421E083C()
{
  return 0x7465737361;
}

uint64_t sub_2421E0850()
{
  return 0x797469726F697270;
}

uint64_t sub_2421E0868()
{
  unsigned __int8 *v0;

  return sub_2421E07D0(*v0);
}

uint64_t sub_2421E0870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421E05E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2421E0894()
{
  sub_2421E3BF8();
  return sub_242272D70();
}

uint64_t sub_2421E08BC()
{
  sub_2421E3BF8();
  return sub_242272D7C();
}

void StateDump.RequestState.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_45_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E09B0);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_22_4();
  sub_2421E3BF8();
  OUTLINED_FUNCTION_16_5();
  OUTLINED_FUNCTION_114_0();
  OUTLINED_FUNCTION_101_1((uint64_t)&unk_2543A7840);
  OUTLINED_FUNCTION_118_1();
  OUTLINED_FUNCTION_147();
  if (!v0)
  {
    type metadata accessor for StateDump.RequestState(0);
    OUTLINED_FUNCTION_112_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
    sub_2421E3DB8((uint64_t)&unk_2571E0930);
    OUTLINED_FUNCTION_118_1();
    OUTLINED_FUNCTION_147();
    OUTLINED_FUNCTION_39_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7970);
    sub_2421E39B0((uint64_t)&qword_2543A7978);
    OUTLINED_FUNCTION_147();
    OUTLINED_FUNCTION_64_2();
    sub_2421E3814();
    OUTLINED_FUNCTION_147();
    OUTLINED_FUNCTION_108_1();
    sub_2421CE2A0();
    OUTLINED_FUNCTION_147();
  }
  OUTLINED_FUNCTION_42_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_16_0();
}

void StateDump.RequestState.hashValue.getter()
{
  sub_2421CB9BC((void (*)(_BYTE *))StateDump.RequestState.hash(into:));
}

void StateDump.RequestState.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  char v20;

  OUTLINED_FUNCTION_45_0();
  v3 = v2;
  v13 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_0();
  v14 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_0();
  v15 = v8;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E09C0);
  MEMORY[0x24BDAC7A8](v16);
  v9 = OUTLINED_FUNCTION_71_2();
  v10 = (int *)type metadata accessor for StateDump.RequestState(v9);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_63_2();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_2421E3BF8();
  sub_242272D40();
  if (v1)
  {
    OUTLINED_FUNCTION_145();
  }
  else
  {
    LOBYTE(v17) = 0;
    sub_2421E3DB8((uint64_t)&unk_2571E0980);
    OUTLINED_FUNCTION_118_1();
    sub_242272AAC();
    sub_2421E3BC4(v15, v0, &qword_2543A7848);
    OUTLINED_FUNCTION_112_1();
    sub_2421E3DB8((uint64_t)&unk_2571E0970);
    OUTLINED_FUNCTION_118_1();
    OUTLINED_FUNCTION_36_2();
    sub_2421E3BC4(v14, v0 + v10[5], &qword_2543A7850);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7970);
    OUTLINED_FUNCTION_39_2();
    sub_2421E39B0((uint64_t)&qword_2571E0278);
    OUTLINED_FUNCTION_69_3();
    sub_242272AAC();
    *(_QWORD *)(v0 + v10[6]) = v17;
    OUTLINED_FUNCTION_64_2();
    sub_2421E3938();
    OUTLINED_FUNCTION_36_2();
    v12 = v0 + v10[7];
    *(_QWORD *)v12 = v17;
    *(_QWORD *)(v12 + 8) = v18;
    *(_OWORD *)(v12 + 16) = v19;
    *(_BYTE *)(v12 + 32) = v20;
    OUTLINED_FUNCTION_108_1();
    sub_2421CE378();
    OUTLINED_FUNCTION_36_2();
    OUTLINED_FUNCTION_9_4();
    *(_BYTE *)(v0 + v10[8]) = 0;
    OUTLINED_FUNCTION_117_0(v0, v13);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
    OUTLINED_FUNCTION_102_1(v0);
  }
  OUTLINED_FUNCTION_16_0();
}

void sub_2421E0E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2421E0EA8(a1, a2, a3, (void (*)(_BYTE *))StateDump.RequestState.hash(into:));
}

void sub_2421E0EA8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v5[72];

  OUTLINED_FUNCTION_98_2();
  a4(v5);
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_48();
}

void sub_2421E0ED4()
{
  StateDump.RequestState.init(from:)();
}

void sub_2421E0EE8()
{
  StateDump.RequestState.encode(to:)();
}

uint64_t StateDump.InferenceProviderState.pid.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t StateDump.InferenceProviderState.descriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_91_2(*(_QWORD *)(v1 + 32), a1);
  return OUTLINED_FUNCTION_28_5();
}

void StateDump.InferenceProviderState.ActiveRequest.request.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2421E3B90(v1, a1, &qword_2543A7848);
}

uint64_t StateDump.InferenceProviderState.ActiveRequest.init(request:priority:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t result;

  v4 = *a2;
  sub_2421E3BC4(a1, a3, &qword_2543A7848);
  result = type metadata accessor for StateDump.InferenceProviderState.ActiveRequest(0);
  *(_BYTE *)(a3 + *(int *)(result + 20)) = v4;
  return result;
}

uint64_t StateDump.InferenceProviderState.ActiveRequest.hash(into:)()
{
  OUTLINED_FUNCTION_21();
  sub_2421E388C((uint64_t)&qword_2543AA0D8);
  sub_242272680();
  OUTLINED_FUNCTION_86_2();
  return sub_2421C7E10();
}

void static StateDump.InferenceProviderState.ActiveRequest.== infix(_:_:)()
{
  if ((OUTLINED_FUNCTION_63_3() & 1) != 0)
  {
    OUTLINED_FUNCTION_86_2();
    sub_2421C7B4C();
  }
}

uint64_t sub_2421E1030(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 0x74736575716572 && a2 == 0xE700000000000000;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_242272C20();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2421E1114()
{
  sub_242272CBC();
  sub_242272CD4();
  return sub_242272D04();
}

uint64_t sub_2421E1158(char a1)
{
  if ((a1 & 1) != 0)
    return 0x797469726F697270;
  else
    return 0x74736575716572;
}

uint64_t sub_2421E1190()
{
  return sub_2421E1114();
}

uint64_t sub_2421E1198()
{
  char *v0;

  return sub_2421E1158(*v0);
}

uint64_t sub_2421E11A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421E1030(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2421E11C4()
{
  sub_2421E3C48();
  return sub_242272D70();
}

uint64_t sub_2421E11EC()
{
  sub_2421E3C48();
  return sub_242272D7C();
}

void StateDump.InferenceProviderState.ActiveRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E09C8);
  OUTLINED_FUNCTION_45_3();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_22_4();
  sub_2421E3C48();
  OUTLINED_FUNCTION_16_5();
  OUTLINED_FUNCTION_114_0();
  OUTLINED_FUNCTION_101_1((uint64_t)&unk_2543A7840);
  OUTLINED_FUNCTION_147();
  if (!v0)
  {
    type metadata accessor for StateDump.InferenceProviderState.ActiveRequest(0);
    sub_2421CE2A0();
    OUTLINED_FUNCTION_147();
  }
  OUTLINED_FUNCTION_42_2(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_65_3();
}

void StateDump.InferenceProviderState.ActiveRequest.hashValue.getter()
{
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_21();
  sub_2421E388C((uint64_t)&qword_2543AA0D8);
  sub_242272680();
  OUTLINED_FUNCTION_86_2();
  sub_2421C7E10();
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_48();
}

void StateDump.InferenceProviderState.ActiveRequest.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t active;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_45_0();
  v15 = v14;
  v23 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_72_3(v18, v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E09D8);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v19);
  active = type metadata accessor for StateDump.InferenceProviderState.ActiveRequest(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_68();
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  sub_2421E3C48();
  sub_242272D40();
  if (v12)
  {
    OUTLINED_FUNCTION_87();
  }
  else
  {
    sub_2421E3DB8((uint64_t)&unk_2571E0980);
    OUTLINED_FUNCTION_49_2();
    sub_2421E3BC4(v24, v13, &qword_2543A7848);
    sub_2421CE378();
    OUTLINED_FUNCTION_49_2();
    OUTLINED_FUNCTION_77_3();
    *(_BYTE *)(v13 + *(int *)(active + 20)) = a12;
    OUTLINED_FUNCTION_117_0(v13, v23);
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_102_1(v13);
  }
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_16_0();
}

uint64_t sub_2421E1574()
{
  OUTLINED_FUNCTION_98_2();
  OUTLINED_FUNCTION_21();
  sub_2421E388C((uint64_t)&qword_2543AA0D8);
  sub_242272680();
  sub_2421C7E10();
  return OUTLINED_FUNCTION_84();
}

void sub_2421E15EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  StateDump.InferenceProviderState.ActiveRequest.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_2421E1600()
{
  StateDump.InferenceProviderState.ActiveRequest.encode(to:)();
}

__n128 StateDump.InferenceProviderState.init(pid:descriptor:activeRequests:activePriority:loadingCount:)@<Q0>(int a1@<W0>, __n128 *a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  char v9;
  __n128 result;

  v6 = a2->n128_u64[0];
  v7 = a2->n128_u64[1];
  v8 = a2[2].n128_u8[0];
  v9 = *a4;
  *(_DWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = v6;
  *(_QWORD *)(a6 + 16) = v7;
  result = a2[1];
  *(__n128 *)(a6 + 24) = result;
  *(_BYTE *)(a6 + 40) = v8;
  *(_QWORD *)(a6 + 48) = a3;
  *(_BYTE *)(a6 + 56) = v9;
  *(_QWORD *)(a6 + 64) = a5;
  return result;
}

void StateDump.InferenceProviderState.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_106();
  v1 = *(_QWORD *)(v0 + 32);
  sub_242272CEC();
  OUTLINED_FUNCTION_144();
  OUTLINED_FUNCTION_104_1();
  sub_2422726EC();
  OUTLINED_FUNCTION_40_0();
  sub_242272CD4();
  if (v1)
  {
    OUTLINED_FUNCTION_144();
    OUTLINED_FUNCTION_133();
    OUTLINED_FUNCTION_146();
  }
  sub_242272CE0();
  OUTLINED_FUNCTION_146();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_82_1();
  sub_2421CE8E8();
  OUTLINED_FUNCTION_60_1();
  sub_2421C7E10();
  sub_242272CD4();
  OUTLINED_FUNCTION_73_1();
}

void static StateDump.InferenceProviderState.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v5;

  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && (OUTLINED_FUNCTION_61_2(a1, a2, a3, a4, a5, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32), *(_BYTE *)(a2 + 40), *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40)) & 1) != 0)
  {
    sub_2421C8D30();
    if ((v5 & 1) != 0)
      sub_2421C7B4C();
  }
  OUTLINED_FUNCTION_95_0();
}

uint64_t sub_2421E17C8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v3 = a1 == 6580592 && a2 == 0xE300000000000000;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7470697263736564 && a2 == 0xEA0000000000726FLL;
    if (v6 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6552657669746361 && a2 == 0xEE00737473657571;
      if (v7 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x7250657669746361 && a2 == 0xEE00797469726F69;
        if (v8 || (sub_242272C20() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x43676E6964616F6CLL && a2 == 0xEC000000746E756FLL)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_242272C20();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_2421E19EC(char a1)
{
  return qword_242279E18[a1];
}

uint64_t sub_2421E1A0C()
{
  char *v0;

  return sub_2421E19EC(*v0);
}

uint64_t sub_2421E1A14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421E17C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2421E1A38()
{
  sub_2421E3C84();
  return sub_242272D70();
}

uint64_t sub_2421E1A60()
{
  sub_2421E3C84();
  return sub_242272D7C();
}

void StateDump.InferenceProviderState.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  OUTLINED_FUNCTION_45_0();
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E09E0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v0 + 8);
  v18 = *(_QWORD *)(v0 + 16);
  v19 = v8;
  v9 = *(_QWORD *)(v0 + 24);
  v16 = *(_QWORD *)(v0 + 32);
  v17 = v9;
  v25 = *(_BYTE *)(v0 + 40);
  v15 = *(_QWORD *)(v0 + 48);
  v14 = *(unsigned __int8 *)(v0 + 56);
  v13 = *(_QWORD *)(v0 + 64);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_2421E3C84();
  v10 = v4;
  sub_242272D64();
  LOBYTE(v20) = 0;
  OUTLINED_FUNCTION_40_1();
  if (!v1)
  {
    v11 = v14;
    v20 = v19;
    v21 = v18;
    v12 = v15;
    v22 = v17;
    v23 = v16;
    LOBYTE(v24) = v25;
    OUTLINED_FUNCTION_111_1();
    sub_2421E3814();
    OUTLINED_FUNCTION_2_3();
    v20 = v12;
    OUTLINED_FUNCTION_39_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571E09F0);
    sub_2421E3CC0();
    OUTLINED_FUNCTION_2_3();
    LOBYTE(v20) = v11;
    OUTLINED_FUNCTION_64_2();
    sub_2421CE2A0();
    OUTLINED_FUNCTION_2_3();
    LOBYTE(v20) = 4;
    sub_242272B3C();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v10);
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_16_0();
}

uint64_t StateDump.InferenceProviderState.hashValue.getter()
{
  sub_242272CBC();
  StateDump.InferenceProviderState.hash(into:)();
  return sub_242272D04();
}

void StateDump.InferenceProviderState.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  OUTLINED_FUNCTION_45_0();
  v2 = v1;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0A08);
  OUTLINED_FUNCTION_45_3();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_62_1();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_2421E3C84();
  sub_242272D40();
  if (v0)
  {
    v7 = 0;
    v8 = 0;
  }
  else
  {
    LOBYTE(v12) = 0;
    OUTLINED_FUNCTION_116_1();
    v6 = sub_242272AB8();
    OUTLINED_FUNCTION_111_1();
    sub_2421E3938();
    OUTLINED_FUNCTION_125_0();
    OUTLINED_FUNCTION_17_3();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571E09F0);
    OUTLINED_FUNCTION_39_2();
    v9 = sub_2421E3D3C();
    sub_242272644();
    OUTLINED_FUNCTION_144();
    OUTLINED_FUNCTION_17_3();
    if (v9)
    {
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_146();
      OUTLINED_FUNCTION_62_2();
      v7 = 0;
      v8 = 1;
    }
    else
    {
      OUTLINED_FUNCTION_64_2();
      v10 = sub_2421CE378();
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_125_0();
      OUTLINED_FUNCTION_17_3();
      if (!v10)
      {
        OUTLINED_FUNCTION_116_1();
        v11 = sub_242272AA0();
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_123_0();
        swift_bridgeObjectRelease();
        *(_DWORD *)v4 = v6;
        *(_QWORD *)(v4 + 8) = v12;
        *(_QWORD *)(v4 + 16) = v13;
        *(_QWORD *)(v4 + 24) = v14;
        *(_QWORD *)(v4 + 32) = v15;
        *(_BYTE *)(v4 + 40) = v16;
        *(_QWORD *)(v4 + 48) = v12;
        *(_BYTE *)(v4 + 56) = 0;
        *(_QWORD *)(v4 + 64) = v11;
        OUTLINED_FUNCTION_52_3();
        OUTLINED_FUNCTION_40_0();
        OUTLINED_FUNCTION_146();
        goto LABEL_8;
      }
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_146();
      OUTLINED_FUNCTION_62_2();
      OUTLINED_FUNCTION_40_0();
      v7 = 1;
      v8 = 1;
    }
  }
  OUTLINED_FUNCTION_52_3();
  if (v8)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
      goto LABEL_9;
    goto LABEL_8;
  }
  if (v7)
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_9:
  OUTLINED_FUNCTION_16_0();
}

uint64_t sub_2421E1F80()
{
  sub_242272CBC();
  StateDump.InferenceProviderState.hash(into:)();
  return sub_242272D04();
}

void sub_2421E1FF4()
{
  StateDump.InferenceProviderState.init(from:)();
}

void sub_2421E2008()
{
  StateDump.InferenceProviderState.encode(to:)();
}

__n128 StateDump.init(assertions:currentPolicy:assets:sessions:requests:runningRequests:inferenceProviders:disabledUseCases:trials:budget:)@<Q0>(unint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, unint64_t a10, unint64_t a11)
{
  unsigned __int8 v11;
  unint64_t v12;
  unsigned __int8 v13;
  __n128 result;

  v11 = *(_BYTE *)a2;
  v12 = *(_QWORD *)(a2 + 8);
  v13 = *(_BYTE *)(a2 + 16);
  a9->n128_u64[0] = a1;
  a9->n128_u8[8] = v11;
  a9[1].n128_u64[0] = v12;
  a9[1].n128_u8[8] = v13;
  result = *(__n128 *)(a2 + 24);
  a9[2] = result;
  a9[3].n128_u64[0] = a3;
  a9[3].n128_u64[1] = a4;
  a9[4].n128_u64[0] = a5;
  a9[4].n128_u64[1] = a6;
  a9[5].n128_u64[0] = a7;
  a9[5].n128_u64[1] = a8;
  a9[6].n128_u64[0] = a10;
  a9[6].n128_u64[1] = a11;
  return result;
}

uint64_t static StateDump.dump()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_2421E2074()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_2543A9CF8 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_2421E20F4;
  return ModelServiceClient.dumpState()(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2421E20F4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t StateDump.dataValue.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_106();
  v6 = sub_2422726C8();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_0();
  v1 = sub_242272200();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_71_2();
  v3 = sub_2422721E8();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_105();
  sub_242272230();
  swift_allocObject();
  sub_242272224();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0A28);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_242279E70;
  sub_2422721D0();
  sub_2422721C4();
  sub_2422721DC();
  sub_2421E388C((uint64_t)&unk_2571E0A30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0A38);
  sub_2421E3DB8((uint64_t)&unk_2571E0A40);
  sub_242272968();
  sub_2422721F4();
  *v0 = sub_2421E2504;
  v0[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v0, *MEMORY[0x24BDCB350], v1);
  sub_24227220C();
  sub_2421E3DEC();
  v4 = sub_242272218();
  swift_release();
  return v4;
}

uint64_t sub_2421E2504(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  uint64_t v30;

  v28 = a1;
  v3 = sub_24227232C();
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v25 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_242272314();
  v22 = *(_QWORD *)(v5 - 8);
  v23 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v21 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2422722FC();
  v19 = *(_QWORD *)(v7 - 8);
  v20 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v18 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242272308();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2422723A4();
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_242272338();
  v24 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_242272D58();
  sub_242272398();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BDCE368], v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v18, *MEMORY[0x24BDCE348], v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v21, *MEMORY[0x24BDCE388], v23);
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v25, *MEMORY[0x24BDCE3D0], v27);
  sub_242272320();
  sub_2421E388C((uint64_t)&unk_2571E0B40);
  sub_242272350();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
  sub_242272C44();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v16, v14);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
}

uint64_t sub_2421E2804(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  v3 = a1 == 0x6F69747265737361 && a2 == 0xEA0000000000736ELL;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x50746E6572727563 && a2 == 0xED00007963696C6FLL;
    if (v6 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x737465737361 && a2 == 0xE600000000000000;
      if (v7 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x736E6F6973736573 && a2 == 0xE800000000000000;
        if (v8 || (sub_242272C20() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x7374736575716572 && a2 == 0xE800000000000000;
          if (v9 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x52676E696E6E7572 && a2 == 0xEF73747365757165;
            if (v10 || (sub_242272C20() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000012 && a2 == 0x8000000242284170 || (sub_242272C20() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0xD000000000000010 && a2 == 0x8000000242284190 || (sub_242272C20() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              v11 = a1 == 0x736C61697274 && a2 == 0xE600000000000000;
              if (v11 || (sub_242272C20() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else if (a1 == 0x746567647562 && a2 == 0xE600000000000000)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else
              {
                v13 = sub_242272C20();
                swift_bridgeObjectRelease();
                if ((v13 & 1) != 0)
                  return 9;
                else
                  return 10;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_2421E2BD8()
{
  return 10;
}

uint64_t sub_2421E2BE0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2421E2C1C + 4 * byte_24227921A[a1]))(0xD000000000000012, 0x8000000242284170);
}

uint64_t sub_2421E2C1C()
{
  return 0x6F69747265737361;
}

uint64_t sub_2421E2C38()
{
  return 0x50746E6572727563;
}

uint64_t sub_2421E2C5C()
{
  return 0x737465737361;
}

uint64_t sub_2421E2C70()
{
  return 0x736E6F6973736573;
}

uint64_t sub_2421E2C88()
{
  return 0x7374736575716572;
}

uint64_t sub_2421E2CA0()
{
  return 0x52676E696E6E7572;
}

unint64_t sub_2421E2CC4()
{
  return 0xD000000000000010;
}

uint64_t sub_2421E2CE0()
{
  return 0x736C61697274;
}

uint64_t sub_2421E2CF4()
{
  return 0x746567647562;
}

void sub_2421E2D08()
{
  OUTLINED_FUNCTION_98_2();
  sub_242272CD4();
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_48();
}

uint64_t sub_2421E2D38()
{
  unsigned __int8 *v0;

  return sub_2421E2BE0(*v0);
}

uint64_t sub_2421E2D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2421E2804(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2421E2D64@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2421E2BD8();
  *a1 = result;
  return result;
}

uint64_t sub_2421E2D88()
{
  sub_2421E3E28();
  return sub_242272D70();
}

uint64_t sub_2421E2DB0()
{
  sub_2421E3E28();
  return sub_242272D7C();
}

void StateDump.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_45_0();
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7AD8);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_68();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_2421E3E28();
  sub_242272D64();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7908);
  sub_2421E3E64();
  OUTLINED_FUNCTION_1_3();
  if (!v0)
  {
    OUTLINED_FUNCTION_111_1();
    sub_2421E3EE0();
    sub_242272B48();
    OUTLINED_FUNCTION_39_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7940);
    sub_2421E3F1C();
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_64_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7960);
    sub_2421E3F98();
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_108_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7950);
    sub_2421E4014();
    OUTLINED_FUNCTION_1_3();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7920);
    sub_2421E3A4C((uint64_t)&unk_2543A7928);
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_106_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7930);
    sub_2421E4090((uint64_t)&unk_2543A7938);
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_105_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7970);
    sub_2421E39B0((uint64_t)&qword_2543A7978);
    OUTLINED_FUNCTION_1_3();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A78F8);
    sub_2421E438C((uint64_t)&unk_2543A7900);
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_79_3();
    sub_242272B78();
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v5);
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_16_0();
}

void StateDump.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  _BOOL4 v10;
  int v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_45_0();
  v2 = v1;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0A48);
  OUTLINED_FUNCTION_45_3();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_68();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_2421E3E28();
  sub_242272D40();
  if (v0)
  {
    v6 = 0;
    v7 = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7908);
    sub_2421E4124();
    OUTLINED_FUNCTION_6_4();
    OUTLINED_FUNCTION_111_1();
    v13 = sub_2421E41A0();
    OUTLINED_FUNCTION_43_1();
    OUTLINED_FUNCTION_69_3();
    OUTLINED_FUNCTION_5_4();
    if (v13)
    {
      OUTLINED_FUNCTION_3_4();
      OUTLINED_FUNCTION_40_0();
      v6 = 0;
      v7 = 1;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7940);
      OUTLINED_FUNCTION_39_2();
      sub_2421E41DC();
      OUTLINED_FUNCTION_6_4();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7960);
      OUTLINED_FUNCTION_64_2();
      v14 = sub_2421E4258();
      OUTLINED_FUNCTION_43_1();
      OUTLINED_FUNCTION_5_4();
      if (v14)
      {
        OUTLINED_FUNCTION_3_4();
        OUTLINED_FUNCTION_33_2();
        OUTLINED_FUNCTION_40_0();
        v6 = 0;
        v7 = 5;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7950);
        OUTLINED_FUNCTION_108_1();
        v15 = sub_2421E42D4();
        OUTLINED_FUNCTION_123_0();
        OUTLINED_FUNCTION_5_4();
        if (v15)
        {
          OUTLINED_FUNCTION_3_4();
          OUTLINED_FUNCTION_33_2();
          OUTLINED_FUNCTION_40_0();
          OUTLINED_FUNCTION_124_0();
          v6 = 0;
          v7 = 13;
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7920);
          sub_2421E3A4C((uint64_t)&unk_2571E0978);
          v17 = v16;
          OUTLINED_FUNCTION_74();
          OUTLINED_FUNCTION_69_3();
          OUTLINED_FUNCTION_5_4();
          if (!v17)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7930);
            OUTLINED_FUNCTION_106_1();
            sub_2421E4090((uint64_t)&unk_2571E0A90);
            v19 = v18;
            OUTLINED_FUNCTION_123_0();
            OUTLINED_FUNCTION_5_4();
            v10 = v19 == 0;
            if (v19)
            {
              OUTLINED_FUNCTION_3_4();
              OUTLINED_FUNCTION_33_2();
              OUTLINED_FUNCTION_40_0();
              OUTLINED_FUNCTION_46_2();
              OUTLINED_FUNCTION_59_3();
              OUTLINED_FUNCTION_78_3();
              v9 = 0;
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7970);
              OUTLINED_FUNCTION_105_1();
              sub_2421E39B0((uint64_t)&qword_2571E0278);
              v21 = v20;
              OUTLINED_FUNCTION_74();
              OUTLINED_FUNCTION_69_3();
              OUTLINED_FUNCTION_5_4();
              if (v21)
              {
                OUTLINED_FUNCTION_3_4();
                OUTLINED_FUNCTION_33_2();
                OUTLINED_FUNCTION_40_0();
                OUTLINED_FUNCTION_46_2();
                OUTLINED_FUNCTION_59_3();
                OUTLINED_FUNCTION_78_3();
                OUTLINED_FUNCTION_119_1();
                v9 = 0;
              }
              else
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_2543A78F8);
                sub_2421E438C((uint64_t)&unk_2571E0AA0);
                v23 = v22;
                OUTLINED_FUNCTION_74();
                OUTLINED_FUNCTION_69_3();
                OUTLINED_FUNCTION_5_4();
                if (!v23)
                {
                  sub_242272644();
                  v24 = sub_242272ADC();
                  OUTLINED_FUNCTION_3_4();
                  *(_QWORD *)v4 = v25;
                  *(_BYTE *)(v4 + 8) = v25;
                  *(_QWORD *)(v4 + 16) = v26;
                  *(_BYTE *)(v4 + 24) = v27;
                  *(_QWORD *)(v4 + 32) = v28;
                  *(_QWORD *)(v4 + 40) = v29;
                  *(_QWORD *)(v4 + 48) = v25;
                  *(_QWORD *)(v4 + 56) = v25;
                  *(_QWORD *)(v4 + 64) = v25;
                  *(_QWORD *)(v4 + 72) = v25;
                  *(_QWORD *)(v4 + 80) = v25;
                  *(_QWORD *)(v4 + 88) = v25;
                  *(_QWORD *)(v4 + 96) = v25;
                  *(_QWORD *)(v4 + 104) = v24;
                  OUTLINED_FUNCTION_52_3();
                  OUTLINED_FUNCTION_124_0();
                  OUTLINED_FUNCTION_40_0();
                  OUTLINED_FUNCTION_146();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  OUTLINED_FUNCTION_46_2();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_19;
                }
                OUTLINED_FUNCTION_3_4();
                OUTLINED_FUNCTION_33_2();
                OUTLINED_FUNCTION_40_0();
                OUTLINED_FUNCTION_46_2();
                OUTLINED_FUNCTION_59_3();
                OUTLINED_FUNCTION_78_3();
                OUTLINED_FUNCTION_119_1();
                swift_bridgeObjectRelease();
                v9 = 1;
              }
            }
            OUTLINED_FUNCTION_52_3();
            LOBYTE(v12) = 1;
            v8 = 1;
            v6 = 1;
            v11 = 1;
            goto LABEL_13;
          }
          OUTLINED_FUNCTION_3_4();
          OUTLINED_FUNCTION_33_2();
          OUTLINED_FUNCTION_40_0();
          OUTLINED_FUNCTION_124_0();
          OUTLINED_FUNCTION_59_3();
          v7 = 29;
          v6 = 1;
        }
      }
    }
  }
  OUTLINED_FUNCTION_52_3();
  v8 = (v7 >> 3) & 1;
  if ((v7 & 1) == 0)
  {
    v9 = 0;
    v10 = 0;
    v11 = 0;
    if ((v7 & 4) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
  v11 = 0;
  v10 = 0;
  v9 = 0;
  v12 = (v7 >> 2) & 1;
LABEL_13:
  OUTLINED_FUNCTION_33_2();
  if ((v12 & 1) == 0)
  {
LABEL_6:
    if (v8)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  OUTLINED_FUNCTION_40_0();
  if ((v8 & 1) != 0)
  {
LABEL_7:
    OUTLINED_FUNCTION_46_2();
    if ((v6 & 1) == 0)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_15:
  if (!v6)
  {
LABEL_8:
    if (v11)
      goto LABEL_9;
    goto LABEL_17;
  }
LABEL_16:
  OUTLINED_FUNCTION_40_0();
  if ((v11 & 1) != 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    if (!v10)
      goto LABEL_10;
LABEL_18:
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
      goto LABEL_19;
    goto LABEL_11;
  }
LABEL_17:
  if (v10)
    goto LABEL_18;
LABEL_10:
  if (v9)
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_19:
  OUTLINED_FUNCTION_16_0();
}

void sub_2421E3738()
{
  StateDump.init(from:)();
}

void sub_2421E374C()
{
  StateDump.encode(to:)();
}

unint64_t sub_2421E3760()
{
  unint64_t result;

  result = qword_2571E08F0;
  if (!qword_2571E08F0)
  {
    result = MEMORY[0x2426A62C4](&unk_242279D90, &type metadata for StateDump.AssetState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E08F0);
  }
  return result;
}

unint64_t sub_2421E379C()
{
  unint64_t result;

  result = qword_2571E08F8;
  if (!qword_2571E08F8)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderAssetDescriptor, &type metadata for InferenceProviderAssetDescriptor);
    atomic_store(result, (unint64_t *)&qword_2571E08F8);
  }
  return result;
}

unint64_t sub_2421E37D8()
{
  unint64_t result;

  result = qword_2571E0900;
  if (!qword_2571E0900)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for AssetCost, &type metadata for AssetCost);
    atomic_store(result, (unint64_t *)&qword_2571E0900);
  }
  return result;
}

unint64_t sub_2421E3814()
{
  unint64_t result;

  result = qword_2571E0908;
  if (!qword_2571E0908)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderDescriptor, &type metadata for InferenceProviderDescriptor);
    atomic_store(result, (unint64_t *)&qword_2571E0908);
  }
  return result;
}

unint64_t sub_2421E3850()
{
  unint64_t result;

  result = qword_2571E0910;
  if (!qword_2571E0910)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for LoadState, &type metadata for LoadState);
    atomic_store(result, (unint64_t *)&qword_2571E0910);
  }
  return result;
}

void sub_2421E388C(uint64_t a1)
{
  void (*v1)(uint64_t);

  if (!OUTLINED_FUNCTION_55_3(a1))
  {
    v1(255);
    OUTLINED_FUNCTION_115_1();
  }
  OUTLINED_FUNCTION_34();
}

unint64_t sub_2421E38C0()
{
  unint64_t result;

  result = qword_2571E0940;
  if (!qword_2571E0940)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderAssetDescriptor, &type metadata for InferenceProviderAssetDescriptor);
    atomic_store(result, (unint64_t *)&qword_2571E0940);
  }
  return result;
}

unint64_t sub_2421E38FC()
{
  unint64_t result;

  result = qword_2571E0948;
  if (!qword_2571E0948)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for AssetCost, &type metadata for AssetCost);
    atomic_store(result, (unint64_t *)&qword_2571E0948);
  }
  return result;
}

unint64_t sub_2421E3938()
{
  unint64_t result;

  result = qword_2571E0950;
  if (!qword_2571E0950)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderDescriptor, &type metadata for InferenceProviderDescriptor);
    atomic_store(result, (unint64_t *)&qword_2571E0950);
  }
  return result;
}

unint64_t sub_2421E3974()
{
  unint64_t result;

  result = qword_2571E0958;
  if (!qword_2571E0958)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for LoadState, &type metadata for LoadState);
    atomic_store(result, (unint64_t *)&qword_2571E0958);
  }
  return result;
}

void sub_2421E39B0(uint64_t a1)
{
  if (!OUTLINED_FUNCTION_55_3(a1))
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543A7970);
    OUTLINED_FUNCTION_115_1();
  }
  OUTLINED_FUNCTION_82_3();
}

void sub_2421E39FC(uint64_t a1)
{
  if (!OUTLINED_FUNCTION_55_3(a1))
  {
    OUTLINED_FUNCTION_88_3();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571E0920);
    OUTLINED_FUNCTION_127();
    OUTLINED_FUNCTION_67_2();
  }
  OUTLINED_FUNCTION_92_0();
}

void sub_2421E3A4C(uint64_t a1)
{
  if (!OUTLINED_FUNCTION_55_3(a1))
  {
    OUTLINED_FUNCTION_88_3();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543A7920);
    OUTLINED_FUNCTION_127();
    OUTLINED_FUNCTION_67_2();
  }
  OUTLINED_FUNCTION_92_0();
}

uint64_t type metadata accessor for StateDump.SessionState(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2543A78C8);
}

unint64_t sub_2421E3AB0()
{
  unint64_t result;

  result = qword_2571E0990;
  if (!qword_2571E0990)
  {
    result = MEMORY[0x2426A62C4](&unk_242279D40, &type metadata for StateDump.SessionState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0990);
  }
  return result;
}

unint64_t sub_2421E3AEC()
{
  unint64_t result;

  result = qword_2571E0998;
  if (!qword_2571E0998)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for DaemonSessionState, &type metadata for DaemonSessionState);
    atomic_store(result, (unint64_t *)&qword_2571E0998);
  }
  return result;
}

unint64_t sub_2421E3B28()
{
  unint64_t result;

  result = qword_2571E09A8;
  if (!qword_2571E09A8)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for DaemonSessionState, &type metadata for DaemonSessionState);
    atomic_store(result, (unint64_t *)&qword_2571E09A8);
  }
  return result;
}

void sub_2421E3B64(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  OUTLINED_FUNCTION_10_2(v3);
  OUTLINED_FUNCTION_34();
}

void sub_2421E3B90(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_81_3(a1, a2, a3);
  OUTLINED_FUNCTION_10_2(v3);
  OUTLINED_FUNCTION_34();
}

uint64_t type metadata accessor for StateDump.RequestState(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2543A78A8);
}

void sub_2421E3BC4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_81_3(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  OUTLINED_FUNCTION_34();
}

unint64_t sub_2421E3BF8()
{
  unint64_t result;

  result = qword_2571E09B8;
  if (!qword_2571E09B8)
  {
    result = MEMORY[0x2426A62C4](&unk_242279CF0, &type metadata for StateDump.RequestState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E09B8);
  }
  return result;
}

uint64_t type metadata accessor for StateDump.InferenceProviderState.ActiveRequest(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2571E0AB0);
}

unint64_t sub_2421E3C48()
{
  unint64_t result;

  result = qword_2571E09D0;
  if (!qword_2571E09D0)
  {
    result = MEMORY[0x2426A62C4](&unk_242279CA0, &type metadata for StateDump.InferenceProviderState.ActiveRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E09D0);
  }
  return result;
}

unint64_t sub_2421E3C84()
{
  unint64_t result;

  result = qword_2571E09E8;
  if (!qword_2571E09E8)
  {
    result = MEMORY[0x2426A62C4](&unk_242279C50, &type metadata for StateDump.InferenceProviderState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E09E8);
  }
  return result;
}

unint64_t sub_2421E3CC0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_2571E09F8;
  if (!qword_2571E09F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571E09F0);
    sub_2421E388C((uint64_t)&unk_2571E0A00);
    v3 = v2;
    result = MEMORY[0x2426A62C4](MEMORY[0x24BEE1700], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_2571E09F8);
  }
  return result;
}

unint64_t sub_2421E3D3C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_2571E0A10;
  if (!qword_2571E0A10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571E09F0);
    sub_2421E388C((uint64_t)&unk_2571E0A18);
    v3 = v2;
    result = MEMORY[0x2426A62C4](MEMORY[0x24BEE1720], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_2571E0A10);
  }
  return result;
}

void sub_2421E3DB8(uint64_t a1)
{
  uint64_t *v1;

  if (!OUTLINED_FUNCTION_55_3(a1))
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v1);
    OUTLINED_FUNCTION_115_1();
  }
  OUTLINED_FUNCTION_34();
}

unint64_t sub_2421E3DEC()
{
  unint64_t result;

  result = qword_2543A78F0;
  if (!qword_2543A78F0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for StateDump, &type metadata for StateDump);
    atomic_store(result, (unint64_t *)&qword_2543A78F0);
  }
  return result;
}

unint64_t sub_2421E3E28()
{
  unint64_t result;

  result = qword_2543A78D8;
  if (!qword_2543A78D8)
  {
    result = MEMORY[0x2426A62C4](&unk_242279C00, &type metadata for StateDump.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A78D8);
  }
  return result;
}

unint64_t sub_2421E3E64()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_2543A7910;
  if (!qword_2543A7910)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543A7908);
    sub_2421E388C((uint64_t)&unk_2543AA118);
    v3 = v2;
    result = MEMORY[0x2426A62C4](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_2543A7910);
  }
  return result;
}

unint64_t sub_2421E3EE0()
{
  unint64_t result;

  result = qword_2543A7860;
  if (!qword_2543A7860)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for Policy, &type metadata for Policy);
    atomic_store(result, (unint64_t *)&qword_2543A7860);
  }
  return result;
}

unint64_t sub_2421E3F1C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_2543A7948;
  if (!qword_2543A7948)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543A7940);
    sub_2421E388C((uint64_t)&unk_2543A7878);
    v3 = v2;
    result = MEMORY[0x2426A62C4](MEMORY[0x24BEE1700], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_2543A7948);
  }
  return result;
}

unint64_t sub_2421E3F98()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_2543A7968;
  if (!qword_2543A7968)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543A7960);
    sub_2421E388C((uint64_t)&unk_2543A78B8);
    v3 = v2;
    result = MEMORY[0x2426A62C4](MEMORY[0x24BEE1700], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_2543A7968);
  }
  return result;
}

unint64_t sub_2421E4014()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_2543A7958;
  if (!qword_2543A7958)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543A7950);
    sub_2421E388C((uint64_t)&unk_2543A7898);
    v3 = v2;
    result = MEMORY[0x2426A62C4](MEMORY[0x24BEE1700], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_2543A7958);
  }
  return result;
}

void sub_2421E4090(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;

  if (!OUTLINED_FUNCTION_55_3(a1))
  {
    v4 = v3;
    v5 = v2;
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543A7930);
    v7 = v5();
    atomic_store(MEMORY[0x2426A62C4](v4, v6, &v7), v1);
  }
  OUTLINED_FUNCTION_82_3();
}

unint64_t sub_2421E40E8()
{
  unint64_t result;

  result = qword_2543A7868;
  if (!qword_2543A7868)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for StateDump.InferenceProviderState, &type metadata for StateDump.InferenceProviderState);
    atomic_store(result, (unint64_t *)&qword_2543A7868);
  }
  return result;
}

unint64_t sub_2421E4124()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_2571E0A50;
  if (!qword_2571E0A50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543A7908);
    sub_2421E388C((uint64_t)&unk_2543A6ED8);
    v3 = v2;
    result = MEMORY[0x2426A62C4](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_2571E0A50);
  }
  return result;
}

unint64_t sub_2421E41A0()
{
  unint64_t result;

  result = qword_2571E0A58;
  if (!qword_2571E0A58)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for Policy, &type metadata for Policy);
    atomic_store(result, (unint64_t *)&qword_2571E0A58);
  }
  return result;
}

unint64_t sub_2421E41DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_2571E0A60;
  if (!qword_2571E0A60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543A7940);
    sub_2421E388C((uint64_t)&unk_2571E0A68);
    v3 = v2;
    result = MEMORY[0x2426A62C4](MEMORY[0x24BEE1720], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_2571E0A60);
  }
  return result;
}

unint64_t sub_2421E4258()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_2571E0A70;
  if (!qword_2571E0A70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543A7960);
    sub_2421E388C((uint64_t)&unk_2571E0A78);
    v3 = v2;
    result = MEMORY[0x2426A62C4](MEMORY[0x24BEE1720], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_2571E0A70);
  }
  return result;
}

unint64_t sub_2421E42D4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_2571E0A80;
  if (!qword_2571E0A80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543A7950);
    sub_2421E388C((uint64_t)&unk_2571E0A88);
    v3 = v2;
    result = MEMORY[0x2426A62C4](MEMORY[0x24BEE1720], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_2571E0A80);
  }
  return result;
}

unint64_t sub_2421E4350()
{
  unint64_t result;

  result = qword_2571E0A98;
  if (!qword_2571E0A98)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for StateDump.InferenceProviderState, &type metadata for StateDump.InferenceProviderState);
    atomic_store(result, (unint64_t *)&qword_2571E0A98);
  }
  return result;
}

void sub_2421E438C(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  _QWORD v6[2];

  if (!OUTLINED_FUNCTION_55_3(a1))
  {
    OUTLINED_FUNCTION_88_3();
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543A78F8);
    v6[0] = v3;
    v6[1] = v4();
    atomic_store(MEMORY[0x2426A62C4](v2, v5, v6), v1);
  }
  OUTLINED_FUNCTION_92_0();
}

void sub_2421E43E4()
{
  sub_2421E388C((uint64_t)&unk_2543A7880);
}

void sub_2421E4410()
{
  sub_2421E388C((uint64_t)&unk_2543A78C0);
}

void sub_2421E443C()
{
  sub_2421E388C((uint64_t)&unk_2543A78A0);
}

void sub_2421E4468()
{
  sub_2421E388C((uint64_t)&unk_2571E0AA8);
}

unint64_t sub_2421E4498()
{
  unint64_t result;

  result = qword_2543A7870;
  if (!qword_2543A7870)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for StateDump.InferenceProviderState, &type metadata for StateDump.InferenceProviderState);
    atomic_store(result, (unint64_t *)&qword_2543A7870);
  }
  return result;
}

uint64_t destroy for StateDump()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StateDump(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  sub_242272644();
  sub_242272644();
  sub_242272644();
  sub_242272644();
  sub_242272644();
  sub_242272644();
  sub_242272644();
  sub_242272644();
  return a1;
}

uint64_t assignWithCopy for StateDump(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

void *__swift_memcpy112_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

uint64_t assignWithTake for StateDump(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for StateDump(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StateDump(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StateDump()
{
  return &type metadata for StateDump;
}

_QWORD *initializeBufferWithCopyOfBuffer for StateDump.AssetState(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
    *(_BYTE *)(a1 + 58) = *((_BYTE *)a2 + 58);
    v10 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v10;
    v11 = a2[10];
    v12 = a2[11];
    *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
    v13 = a3[12];
    v19 = (uint64_t)a2 + v13;
    v20 = a1 + v13;
    *(_QWORD *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 88) = v12;
    v14 = sub_24227235C();
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    sub_242272644();
    sub_242272644();
    sub_242272644();
    sub_242272644();
    sub_242272644();
    v15(v20, v19, v14);
    v15((uint64_t)v4 + a3[13], (uint64_t)a2 + a3[13], v14);
    v16 = a3[15];
    *(_QWORD *)((char *)v4 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(_QWORD *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    *(_QWORD *)((char *)v4 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    sub_242272644();
    sub_242272644();
    sub_242272644();
  }
  return v4;
}

uint64_t destroy for StateDump.AssetState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 48);
  v5 = sub_24227235C();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 52), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StateDump.AssetState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  v10 = *(_QWORD *)(a2 + 80);
  v11 = *(_QWORD *)(a2 + 88);
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  v12 = a3[12];
  v17 = a2 + v12;
  v18 = a1 + v12;
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = v11;
  v13 = sub_24227235C();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  sub_242272644();
  sub_242272644();
  sub_242272644();
  sub_242272644();
  sub_242272644();
  v14(v18, v17, v13);
  v14(a1 + a3[13], a2 + a3[13], v13);
  v15 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  sub_242272644();
  sub_242272644();
  sub_242272644();
  return a1;
}

uint64_t assignWithCopy for StateDump.AssetState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  v6 = a3[12];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_24227235C();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + a3[13], a2 + a3[13], v9);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  sub_242272644();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for StateDump.AssetState(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_WORD *)(a1 + 57) = *(_WORD *)(a2 + 57);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v8 = *(_OWORD *)(a2 + 64);
  v7 = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  v9 = a3[12];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 80) = v7;
  v12 = sub_24227235C();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v13(a1 + a3[13], a2 + a3[13], v12);
  v14 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t assignWithTake for StateDump.AssetState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  v11 = a3[12];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_24227235C();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + a3[13], a2 + a3[13], v14);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StateDump.AssetState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2421E4F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_48_3(*(_QWORD *)(a1 + 8));
    OUTLINED_FUNCTION_14();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_85_1();
    OUTLINED_FUNCTION_62_0(a1 + *(int *)(a3 + 48), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for StateDump.AssetState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2421E4FE8(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_14();
  }
  else
  {
    OUTLINED_FUNCTION_85_1();
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_63_1(v3, v4, v5, v6);
  }
}

uint64_t sub_2421E503C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24227235C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for StateDump.SessionState(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24227238C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = a3[8];
    *(_DWORD *)((char *)a1 + a3[7]) = *(_DWORD *)((char *)a2 + a3[7]);
    *(_DWORD *)((char *)a1 + v12) = *(_DWORD *)((char *)a2 + v12);
    v13 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    sub_242272644();
    sub_242272644();
    sub_242272644();
  }
  return a1;
}

uint64_t destroy for StateDump.SessionState(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StateDump.SessionState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_DWORD *)(a1 + v11) = *(_DWORD *)(a2 + v11);
  v12 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  sub_242272644();
  sub_242272644();
  sub_242272644();
  return a1;
}

uint64_t assignWithCopy for StateDump.SessionState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  sub_242272644();
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for StateDump.SessionState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_DWORD *)(a1 + v8) = *(_DWORD *)(a2 + v8);
  v9 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for StateDump.SessionState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  v13 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for StateDump.SessionState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2421E5544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    OUTLINED_FUNCTION_62_0(a1, a2, v6);
  }
  else
  {
    OUTLINED_FUNCTION_48_3(*(_QWORD *)(a1 + *(int *)(a3 + 20)));
    OUTLINED_FUNCTION_14();
  }
}

uint64_t storeEnumTagSinglePayload for StateDump.SessionState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2421E55B0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_47_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  OUTLINED_FUNCTION_44_2();
  if (v3)
  {
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_63_1(v4, v5, v6, v7);
  }
  else
  {
    *(_QWORD *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
    OUTLINED_FUNCTION_14();
  }
}

uint64_t sub_2421E5600()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24227238C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for StateDump.RequestState(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24227238C();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((_QWORD *)((char *)a1 + a3[5]), (_QWORD *)((char *)a2 + a3[5]), v7);
    v9 = a3[7];
    *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v13;
    v10[32] = v11[32];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    sub_242272644();
    sub_242272644();
    sub_242272644();
  }
  return a1;
}

uint64_t destroy for StateDump.RequestState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_24227238C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StateDump.RequestState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_24227238C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  v12 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v12;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  sub_242272644();
  sub_242272644();
  sub_242272644();
  return a1;
}

uint64_t assignWithCopy for StateDump.RequestState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_24227238C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  sub_242272644();
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(a2 + v8 + 8);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v10 + 24);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for StateDump.RequestState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  v6 = sub_24227238C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for StateDump.RequestState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_24227238C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_QWORD *)(a2 + v8 + 8);
  *(_QWORD *)v9 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(v9 + 8) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v12;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for StateDump.RequestState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2421E5B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
LABEL_5:
    OUTLINED_FUNCTION_62_0(v8, a2, v7);
    return;
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_48_3(*(_QWORD *)(a1 + *(int *)(a3 + 24)));
  OUTLINED_FUNCTION_14();
}

uint64_t storeEnumTagSinglePayload for StateDump.RequestState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2421E5BB4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_47_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_44_2();
  if (v3 || (__swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850), OUTLINED_FUNCTION_44_2(), v3))
  {
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_63_1(v4, v5, v6, v7);
  }
  else
  {
    *(_QWORD *)(v1 + *(int *)(v2 + 24)) = (v0 - 1);
    OUTLINED_FUNCTION_14();
  }
}

uint64_t sub_2421E5C28()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24227238C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for StateDump.InferenceProviderState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StateDump.InferenceProviderState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  sub_242272644();
  sub_242272644();
  sub_242272644();
  return a1;
}

uint64_t assignWithCopy for StateDump.InferenceProviderState(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

void *__swift_memcpy72_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t assignWithTake for StateDump.InferenceProviderState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for StateDump.InferenceProviderState(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StateDump.InferenceProviderState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StateDump.InferenceProviderState()
{
  return &type metadata for StateDump.InferenceProviderState;
}

_QWORD *initializeBufferWithCopyOfBuffer for StateDump.InferenceProviderState.ActiveRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24227238C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for StateDump.InferenceProviderState.ActiveRequest(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_24227238C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for StateDump.InferenceProviderState.ActiveRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for StateDump.InferenceProviderState.ActiveRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for StateDump.InferenceProviderState.ActiveRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for StateDump.InferenceProviderState.ActiveRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for StateDump.InferenceProviderState.ActiveRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2421E6150(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    OUTLINED_FUNCTION_62_0(a1, a2, v4);
  else
    OUTLINED_FUNCTION_14();
}

uint64_t storeEnumTagSinglePayload for StateDump.InferenceProviderState.ActiveRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2421E61C4()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_47_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_44_2();
  if (v3)
  {
    OUTLINED_FUNCTION_107_1();
    OUTLINED_FUNCTION_63_1(v4, v5, v6, v7);
  }
  else
  {
    *(_BYTE *)(v1 + *(int *)(v2 + 20)) = v0 + 3;
    OUTLINED_FUNCTION_14();
  }
}

uint64_t sub_2421E6214()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24227238C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StateDump.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 9) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v5 = v6 - 10;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StateDump.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_2421E6358 + 4 * byte_242279229[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_2421E638C + 4 * byte_242279224[v4]))();
}

uint64_t sub_2421E638C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421E6394(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2421E639CLL);
  return result;
}

uint64_t sub_2421E63A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2421E63B0);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_2421E63B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421E63BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateDump.CodingKeys()
{
  return &type metadata for StateDump.CodingKeys;
}

ValueMetadata *type metadata accessor for StateDump.InferenceProviderState.CodingKeys()
{
  return &type metadata for StateDump.InferenceProviderState.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for StateDump.InferenceProviderState.ActiveRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2421E643C + 4 * byte_242279233[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2421E6470 + 4 * byte_24227922E[v4]))();
}

uint64_t sub_2421E6470(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421E6478(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2421E6480);
  return result;
}

uint64_t sub_2421E648C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2421E6494);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2421E6498(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421E64A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateDump.InferenceProviderState.ActiveRequest.CodingKeys()
{
  return &type metadata for StateDump.InferenceProviderState.ActiveRequest.CodingKeys;
}

uint64_t _s20ModelManagerServices9StateDumpV22InferenceProviderStateV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2421E6508 + 4 * byte_24227923D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2421E653C + 4 * byte_242279238[v4]))();
}

uint64_t sub_2421E653C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421E6544(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2421E654CLL);
  return result;
}

uint64_t sub_2421E6558(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2421E6560);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2421E6564(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421E656C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateDump.RequestState.CodingKeys()
{
  return &type metadata for StateDump.RequestState.CodingKeys;
}

uint64_t getEnumTagSinglePayload for StateDump.SessionState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StateDump.SessionState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2421E665C + 4 * byte_242279247[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2421E6690 + 4 * byte_242279242[v4]))();
}

uint64_t sub_2421E6690(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421E6698(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2421E66A0);
  return result;
}

uint64_t sub_2421E66AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2421E66B4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_2421E66B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421E66C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateDump.SessionState.CodingKeys()
{
  return &type metadata for StateDump.SessionState.CodingKeys;
}

uint64_t getEnumTagSinglePayload for StateDump.AssetState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF4)
  {
    if (a2 + 12 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 12) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 13;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v5 = v6 - 13;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StateDump.AssetState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_2421E67B0 + 4 * byte_242279251[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_2421E67E4 + 4 * byte_24227924C[v4]))();
}

uint64_t sub_2421E67E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421E67EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2421E67F4);
  return result;
}

uint64_t sub_2421E6800(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2421E6808);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_2421E680C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2421E6814(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateDump.AssetState.CodingKeys()
{
  return &type metadata for StateDump.AssetState.CodingKeys;
}

unint64_t sub_2421E6834()
{
  unint64_t result;

  result = qword_2571E0AC0;
  if (!qword_2571E0AC0)
  {
    result = MEMORY[0x2426A62C4](&unk_242279840, &type metadata for StateDump.AssetState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0AC0);
  }
  return result;
}

unint64_t sub_2421E6874()
{
  unint64_t result;

  result = qword_2571E0AC8;
  if (!qword_2571E0AC8)
  {
    result = MEMORY[0x2426A62C4](&unk_2422798F8, &type metadata for StateDump.SessionState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0AC8);
  }
  return result;
}

unint64_t sub_2421E68B4()
{
  unint64_t result;

  result = qword_2571E0AD0;
  if (!qword_2571E0AD0)
  {
    result = MEMORY[0x2426A62C4](&unk_2422799B0, &type metadata for StateDump.RequestState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0AD0);
  }
  return result;
}

unint64_t sub_2421E68F4()
{
  unint64_t result;

  result = qword_2571E0AD8;
  if (!qword_2571E0AD8)
  {
    result = MEMORY[0x2426A62C4](&unk_242279A68, &type metadata for StateDump.InferenceProviderState.ActiveRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0AD8);
  }
  return result;
}

unint64_t sub_2421E6934()
{
  unint64_t result;

  result = qword_2571E0AE0;
  if (!qword_2571E0AE0)
  {
    result = MEMORY[0x2426A62C4](&unk_242279B20, &type metadata for StateDump.InferenceProviderState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0AE0);
  }
  return result;
}

unint64_t sub_2421E6974()
{
  unint64_t result;

  result = qword_2571E0AE8;
  if (!qword_2571E0AE8)
  {
    result = MEMORY[0x2426A62C4](&unk_242279BD8, &type metadata for StateDump.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0AE8);
  }
  return result;
}

unint64_t sub_2421E69B4()
{
  unint64_t result;

  result = qword_2543A78E8;
  if (!qword_2543A78E8)
  {
    result = MEMORY[0x2426A62C4](&unk_242279B48, &type metadata for StateDump.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A78E8);
  }
  return result;
}

unint64_t sub_2421E69F4()
{
  unint64_t result;

  result = qword_2543A78E0;
  if (!qword_2543A78E0)
  {
    result = MEMORY[0x2426A62C4](&unk_242279B70, &type metadata for StateDump.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A78E0);
  }
  return result;
}

unint64_t sub_2421E6A34()
{
  unint64_t result;

  result = qword_2571E0AF0;
  if (!qword_2571E0AF0)
  {
    result = MEMORY[0x2426A62C4](&unk_242279A90, &type metadata for StateDump.InferenceProviderState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0AF0);
  }
  return result;
}

unint64_t sub_2421E6A74()
{
  unint64_t result;

  result = qword_2571E0AF8;
  if (!qword_2571E0AF8)
  {
    result = MEMORY[0x2426A62C4](&unk_242279AB8, &type metadata for StateDump.InferenceProviderState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0AF8);
  }
  return result;
}

unint64_t sub_2421E6AB4()
{
  unint64_t result;

  result = qword_2571E0B00;
  if (!qword_2571E0B00)
  {
    result = MEMORY[0x2426A62C4](&unk_2422799D8, &type metadata for StateDump.InferenceProviderState.ActiveRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0B00);
  }
  return result;
}

unint64_t sub_2421E6AF4()
{
  unint64_t result;

  result = qword_2571E0B08;
  if (!qword_2571E0B08)
  {
    result = MEMORY[0x2426A62C4](&unk_242279A00, &type metadata for StateDump.InferenceProviderState.ActiveRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0B08);
  }
  return result;
}

unint64_t sub_2421E6B34()
{
  unint64_t result;

  result = qword_2571E0B10;
  if (!qword_2571E0B10)
  {
    result = MEMORY[0x2426A62C4](&unk_242279920, &type metadata for StateDump.RequestState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0B10);
  }
  return result;
}

unint64_t sub_2421E6B74()
{
  unint64_t result;

  result = qword_2571E0B18;
  if (!qword_2571E0B18)
  {
    result = MEMORY[0x2426A62C4](&unk_242279948, &type metadata for StateDump.RequestState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0B18);
  }
  return result;
}

unint64_t sub_2421E6BB4()
{
  unint64_t result;

  result = qword_2571E0B20;
  if (!qword_2571E0B20)
  {
    result = MEMORY[0x2426A62C4](&unk_242279868, &type metadata for StateDump.SessionState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0B20);
  }
  return result;
}

unint64_t sub_2421E6BF4()
{
  unint64_t result;

  result = qword_2571E0B28;
  if (!qword_2571E0B28)
  {
    result = MEMORY[0x2426A62C4](&unk_242279890, &type metadata for StateDump.SessionState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0B28);
  }
  return result;
}

unint64_t sub_2421E6C34()
{
  unint64_t result;

  result = qword_2571E0B30;
  if (!qword_2571E0B30)
  {
    result = MEMORY[0x2426A62C4](&unk_2422797B0, &type metadata for StateDump.AssetState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0B30);
  }
  return result;
}

unint64_t sub_2421E6C74()
{
  unint64_t result;

  result = qword_2571E0B38;
  if (!qword_2571E0B38)
  {
    result = MEMORY[0x2426A62C4](&unk_2422797D8, &type metadata for StateDump.AssetState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E0B38);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_3()
{
  return sub_242272B48();
}

uint64_t OUTLINED_FUNCTION_2_3()
{
  return sub_242272B48();
}

uint64_t OUTLINED_FUNCTION_3_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_4_4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_5_4()
{
  return sub_242272AAC();
}

uint64_t OUTLINED_FUNCTION_6_4()
{
  return sub_242272AAC();
}

uint64_t OUTLINED_FUNCTION_9_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_11_2()
{
  return sub_242272AAC();
}

uint64_t OUTLINED_FUNCTION_16_5()
{
  return sub_242272D64();
}

uint64_t OUTLINED_FUNCTION_17_3()
{
  return sub_242272AAC();
}

uint64_t OUTLINED_FUNCTION_19_4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 120) = a1;
  return sub_242272B24();
}

uint64_t OUTLINED_FUNCTION_20_5()
{
  return sub_242272AAC();
}

_QWORD *OUTLINED_FUNCTION_22_4()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_25_2@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 120) = a1;
  return sub_242272A88();
}

uint64_t OUTLINED_FUNCTION_26_4()
{
  return sub_242272644();
}

uint64_t OUTLINED_FUNCTION_28_5()
{
  return sub_242272644();
}

uint64_t OUTLINED_FUNCTION_29_4()
{
  return sub_242272AAC();
}

uint64_t OUTLINED_FUNCTION_32_1()
{
  return sub_242272AAC();
}

uint64_t OUTLINED_FUNCTION_33_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_35_3()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 176), *(_QWORD *)(v1 - 168));
}

uint64_t OUTLINED_FUNCTION_36_2()
{
  return sub_242272AAC();
}

void OUTLINED_FUNCTION_39_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
}

uint64_t OUTLINED_FUNCTION_40_1()
{
  return sub_242272B54();
}

uint64_t OUTLINED_FUNCTION_42_2@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_43_1()
{
  return sub_242272644();
}

uint64_t OUTLINED_FUNCTION_46_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_48_3@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF)
    LODWORD(a1) = -1;
  return (a1 + 1);
}

uint64_t OUTLINED_FUNCTION_49_2()
{
  return sub_242272AAC();
}

uint64_t OUTLINED_FUNCTION_52_3()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1Tm(v0);
}

uint64_t OUTLINED_FUNCTION_55_3(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_59_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_60_3@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  return sub_242272AB8();
}

uint64_t OUTLINED_FUNCTION_61_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  return static InferenceProviderDescriptor.== infix(_:_:)((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_62_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_63_3()
{
  return _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
}

void OUTLINED_FUNCTION_64_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
}

void OUTLINED_FUNCTION_67_2()
{
  JUMPOUT(0x2426A62C4);
}

uint64_t OUTLINED_FUNCTION_68_2()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2421CE084(v0, v1);
}

uint64_t OUTLINED_FUNCTION_71_2()
{
  return 0;
}

void OUTLINED_FUNCTION_72_3(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_74_1()
{
  return sub_242272644();
}

uint64_t OUTLINED_FUNCTION_77_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_78_3()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_79_3()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 120) = 9;
}

uint64_t OUTLINED_FUNCTION_81_3(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledName(a3);
}

uint64_t OUTLINED_FUNCTION_84_3()
{
  return sub_242272B18();
}

uint64_t OUTLINED_FUNCTION_85_1()
{
  return sub_24227235C();
}

uint64_t OUTLINED_FUNCTION_86_2()
{
  return type metadata accessor for StateDump.InferenceProviderState.ActiveRequest(0);
}

uint64_t OUTLINED_FUNCTION_91_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 24) = a1;
  *(_BYTE *)(a2 + 32) = v4;
  return sub_242272644();
}

uint64_t OUTLINED_FUNCTION_95_2()
{
  return sub_242272CE0();
}

uint64_t OUTLINED_FUNCTION_96_2()
{
  return sub_242272CD4();
}

uint64_t OUTLINED_FUNCTION_98_2()
{
  return sub_242272CBC();
}

uint64_t OUTLINED_FUNCTION_99_0()
{
  return sub_242272344();
}

uint64_t OUTLINED_FUNCTION_100_1@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  return v1 - 72;
}

void OUTLINED_FUNCTION_101_1(uint64_t a1)
{
  sub_2421E3DB8(a1);
}

void OUTLINED_FUNCTION_102_1(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_2421D3DF4(a1, v1);
}

uint64_t OUTLINED_FUNCTION_104_1()
{
  return swift_bridgeObjectRetain_n();
}

void OUTLINED_FUNCTION_105_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 7;
}

void OUTLINED_FUNCTION_106_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 6;
}

void OUTLINED_FUNCTION_108_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
}

uint64_t OUTLINED_FUNCTION_109_1()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_110_1(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  sub_2421C8768(*(_QWORD *)(v1 + a1), *(_QWORD *)(v2 + a1));
}

void OUTLINED_FUNCTION_111_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
}

void OUTLINED_FUNCTION_112_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 120) = 1;
}

uint64_t OUTLINED_FUNCTION_113_0()
{
  return type metadata accessor for StateDump.SessionState(0);
}

uint64_t OUTLINED_FUNCTION_114_0()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

void OUTLINED_FUNCTION_115_1()
{
  JUMPOUT(0x2426A62C4);
}

uint64_t OUTLINED_FUNCTION_116_1()
{
  uint64_t v0;

  return v0 - 120;
}

void OUTLINED_FUNCTION_117_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_2421E3B64(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_119_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_120_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1Tm(*(_QWORD *)(v0 - 152));
}

void OUTLINED_FUNCTION_122_0()
{
  sub_2421CE070();
}

uint64_t OUTLINED_FUNCTION_123_0()
{
  return sub_242272644();
}

uint64_t OUTLINED_FUNCTION_124_0()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_127()
{
  uint64_t v0;

  sub_2421E3DB8(v0);
}

uint64_t sub_2421E7174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2422724AC();
  __swift_allocate_value_buffer(v0, qword_2571E0B48);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2571E0B48);
  if (qword_2543AA570 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2543AA558);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

unint64_t static InferenceProviderXPCSender.extensionPointIdentifier.getter()
{
  return 0xD000000000000028;
}

unint64_t static InferenceProviderXPCSender.inferenceProviderIdentifierKey.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2421E723C()
{
  uint64_t v0;

  v0 = swift_retain();
  return sub_2421E7294(v0);
}

uint64_t sub_2421E7264()
{
  OUTLINED_FUNCTION_9();
  return swift_retain();
}

uint64_t sub_2421E7294(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_9();
  *(_QWORD *)(v1 + 112) = a1;
  return swift_release();
}

uint64_t (*sub_2421E72D4())()
{
  OUTLINED_FUNCTION_9();
  return j__swift_endAccess;
}

uint64_t sub_2421E730C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[4];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_242272848();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  if (__swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3) == 1)
  {
    sub_2421D1230((uint64_t)v2, &qword_2543A9D48);
    v5 = 0;
    v6 = 0;
  }
  else
  {
    sub_24227283C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
    if (*(_QWORD *)(v4 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v5 = sub_2422727D0();
      v6 = v7;
      swift_unknownObjectRelease();
    }
    else
    {
      v5 = 0;
      v6 = 0;
    }
  }
  sub_242272410();
  if (v6 | v5)
  {
    v9[0] = 0;
    v9[1] = 0;
    v9[2] = v5;
    v9[3] = v6;
  }
  result = swift_task_create();
  qword_2571E0B60 = result;
  return result;
}

uint64_t sub_2421E74A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[8] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0CD0);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  v2 = sub_242272488();
  v1[11] = v2;
  v1[12] = *(_QWORD *)(v2 - 8);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  v3 = sub_242272458();
  v1[16] = v3;
  v1[17] = *(_QWORD *)(v3 - 8);
  v1[18] = swift_task_alloc();
  v4 = sub_242272440();
  v1[19] = v4;
  v1[20] = *(_QWORD *)(v4 - 8);
  v1[21] = swift_task_alloc();
  v5 = sub_242272470();
  v1[22] = v5;
  v1[23] = *(_QWORD *)(v5 - 8);
  v1[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421E75CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_178();
  v2 = v0[17];
  v1 = v0[18];
  v3 = v0[16];
  sub_242272428();
  sub_242272464();
  sub_24227244C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[25] = v4;
  *v4 = v0;
  v4[1] = sub_2421E7674;
  OUTLINED_FUNCTION_173();
  return sub_242272434();
}

uint64_t sub_2421E7674(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 208) = a1;
  *(_QWORD *)(v3 + 216) = v1;
  OUTLINED_FUNCTION_55_4();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421E76D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (**v21)(uint64_t, uint64_t);
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v1 = *(_QWORD *)(v0 + 208);
  if (v1)
  {
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      v3 = *(_QWORD *)(v0 + 96);
      v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      v5 = *(_QWORD *)(v3 + 72);
      v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
      sub_242272644();
      OUTLINED_FUNCTION_169();
      v53 = v7 - 22;
      while (1)
      {
        v8 = *(_QWORD *)(v0 + 88);
        v9 = *(_QWORD *)(v0 + 72);
        v6(v9, v4, v8);
        OUTLINED_FUNCTION_168(v9, 0);
        if (__swift_getEnumTagSinglePayload(v9, 1, v8) == 1)
          break;
        v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
        v10(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 88));
        v11 = sub_24227247C();
        if (*(_QWORD *)(v11 + 16) && (v12 = sub_242239AE0(v53, 0x80000002422841E0), (v13 & 1) != 0))
        {
          sub_2421BCE88(*(_QWORD *)(v11 + 56) + 32 * v12, v0 + 16);
        }
        else
        {
          *(_OWORD *)(v0 + 16) = 0u;
          *(_OWORD *)(v0 + 32) = 0u;
        }
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v0 + 40))
        {
          if ((swift_dynamicCast() & 1) != 0)
          {
            v14 = *(_QWORD *)(v0 + 56);
            OUTLINED_FUNCTION_169();
            if (v15 == v16 && v14 == 0x8000000242284300)
            {
              OUTLINED_FUNCTION_86_0();
LABEL_36:
              v47 = *(_QWORD *)(v0 + 112);
              v49 = *(_QWORD *)(v0 + 80);
              v48 = *(_QWORD *)(v0 + 88);
              swift_bridgeObjectRelease();
              v10(v49, v47, v48);
              v29 = 0;
              goto LABEL_26;
            }
            v17 = sub_242272C20();
            swift_bridgeObjectRelease();
            if ((v17 & 1) != 0)
              goto LABEL_36;
          }
        }
        else
        {
          sub_2421D1230(v0 + 16, &qword_2571E0570);
        }
        (*(void (**)(_QWORD, _QWORD))(v3 + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
        v4 += v5;
        if (!--v2)
          goto LABEL_24;
      }
    }
    else
    {
      sub_242272644();
LABEL_24:
      OUTLINED_FUNCTION_129(*(_QWORD *)(v0 + 72), v18, v19, *(_QWORD *)(v0 + 88));
    }
    OUTLINED_FUNCTION_86_0();
    v29 = 1;
LABEL_26:
    v31 = *(_QWORD *)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 88);
    OUTLINED_FUNCTION_168(v31, v29);
    OUTLINED_FUNCTION_86_0();
    if (__swift_getEnumTagSinglePayload(v31, 1, v30) != 1)
    {
      v39 = *(_QWORD *)(v0 + 192);
      v40 = *(_QWORD *)(v0 + 168);
      v51 = *(_QWORD *)(v0 + 184);
      v52 = *(_QWORD *)(v0 + 176);
      v41 = *(_QWORD *)(v0 + 160);
      v50 = *(_QWORD *)(v0 + 152);
      v43 = *(_QWORD *)(v0 + 96);
      v42 = *(_QWORD *)(v0 + 104);
      v44 = OUTLINED_FUNCTION_82_4();
      v45(v44);
      OUTLINED_FUNCTION_52_4(v42, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 16));
      sub_24227241C();
      OUTLINED_FUNCTION_166(*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8));
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v50);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v39, v52);
      OUTLINED_FUNCTION_38();
      OUTLINED_FUNCTION_27_5();
      swift_task_dealloc();
      OUTLINED_FUNCTION_16();
      swift_task_dealloc();
      OUTLINED_FUNCTION_37();
      OUTLINED_FUNCTION_57();
      swift_task_dealloc();
      v38 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
      return v38();
    }
    sub_2421D1230(*(_QWORD *)(v0 + 80), &qword_2571E0CD0);
    if (qword_2571DF9E0 != -1)
      swift_once();
    v32 = OUTLINED_FUNCTION_54();
    __swift_project_value_buffer(v32, (uint64_t)qword_2571E0B48);
    v21 = (uint64_t (**)(uint64_t, uint64_t))OUTLINED_FUNCTION_164();
    v33 = sub_242272920();
    if (OUTLINED_FUNCTION_137_0(v33))
    {
      *(_WORD *)OUTLINED_FUNCTION_10() = 0;
      OUTLINED_FUNCTION_116_2(&dword_2421B5000, v34, v35, "Builtin InferenceProviderService extension not found");
      OUTLINED_FUNCTION_2();
    }

    v25 = sub_242272638();
    sub_2421C2700();
    OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_169();
    *(_QWORD *)v26 = v36 + 3;
    v28 = "Builtin InferenceProviderService extension not found";
  }
  else
  {
    if (qword_2571DF9E0 != -1)
      swift_once();
    v20 = OUTLINED_FUNCTION_54();
    __swift_project_value_buffer(v20, (uint64_t)qword_2571E0B48);
    v21 = (uint64_t (**)(uint64_t, uint64_t))OUTLINED_FUNCTION_164();
    v22 = sub_242272920();
    if (OUTLINED_FUNCTION_137_0(v22))
    {
      *(_WORD *)OUTLINED_FUNCTION_10() = 0;
      OUTLINED_FUNCTION_116_2(&dword_2421B5000, v23, v24, "No results found from _AppExtensionQuery");
      OUTLINED_FUNCTION_2();
    }

    v25 = sub_242272638();
    sub_2421C2700();
    OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_169();
    *(_QWORD *)v26 = v27 - 9;
    v28 = "No results found from _AppExtensionQuery";
  }
  *(_QWORD *)(v26 + 8) = (unint64_t)(v28 - 32) | 0x8000000000000000;
  *(_OWORD *)(v26 + 16) = xmmword_242279E80;
  *(_QWORD *)(v26 + 32) = 0;
  *(_QWORD *)(v26 + 40) = v25;
  *(_BYTE *)(v26 + 48) = 88;
  swift_willThrow();
  OUTLINED_FUNCTION_95_3();
  OUTLINED_FUNCTION_151_0(v37);
  OUTLINED_FUNCTION_128_0(v21[1]);
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  swift_task_dealloc();
  v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

uint64_t sub_2421E7C20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_95_3();
  OUTLINED_FUNCTION_151_0(v2);
  OUTLINED_FUNCTION_128_0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_2421E7CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = sub_242272848();
  if (__swift_getEnumTagSinglePayload(a1, 1, v5) == 1)
  {
    sub_2421D1230(a1, &qword_2543A9D48);
  }
  else
  {
    sub_24227283C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2422727D0();
    swift_unknownObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0B78);
  return swift_task_create();
}

uint64_t sub_2421E7DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2421E7DF0(a1, a2, a3);
}

uint64_t sub_2421E7DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2421E7DF0(a1, a2, a3);
}

uint64_t sub_2421E7DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t EnumTagSinglePayload;

  v5 = OUTLINED_FUNCTION_157_0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, 1, v5);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_119_2(EnumTagSinglePayload, &qword_2543A9D48);
  }
  else
  {
    sub_24227283C();
    OUTLINED_FUNCTION_166(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8));
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2422727D0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t static InferenceProviderXPCSender.builtInInferenceProviderExtensionIdentityCache.getter()
{
  if (qword_2571DF9E8 != -1)
    swift_once();
  return swift_retain();
}

void InferenceProviderXPCSender.__allocating_init(session:)(uint64_t a1)
{
  OUTLINED_FUNCTION_141_0();
  InferenceProviderXPCSender.init(session:)(a1);
  OUTLINED_FUNCTION_34();
}

uint64_t InferenceProviderXPCSender.init(session:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t EnumTagSinglePayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  v7 = OUTLINED_FUNCTION_157_0();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v7);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a1;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_119_2(EnumTagSinglePayload, &qword_2543A9D48);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    sub_24227283C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    if (v8[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v10 = sub_2422727D0();
      v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0B78);
  if (v11 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v10;
    v14[3] = v11;
  }
  *(_QWORD *)(v2 + 112) = swift_task_create();
  return v2;
}

uint64_t sub_2421E811C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_2421E8134()
{
  uint64_t v0;
  uint64_t (*v2)(void);

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 24);
  v2 = *(uint64_t (**)(void))(v0 + 8);
  swift_retain();
  return OUTLINED_FUNCTION_8(v2);
}

uint64_t sub_2421E816C()
{
  OUTLINED_FUNCTION_163();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2421E8194()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_2421E811C(v2, v3, v4, v5);
}

void InferenceProviderXPCSender.__allocating_init(builtInProvider:session:)(_BYTE *a1, uint64_t a2)
{
  OUTLINED_FUNCTION_141_0();
  InferenceProviderXPCSender.init(builtInProvider:session:)(a1, a2);
  OUTLINED_FUNCTION_14();
}

void InferenceProviderXPCSender.init(builtInProvider:session:)(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  swift_defaultActor_initialize();
  v8 = OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_129((uint64_t)v7, v9, v10, v8);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_BYTE *)(v11 + 32) = (_BYTE)a1;
  *(_QWORD *)(v11 + 40) = a2;
  *(_QWORD *)(v2 + 112) = sub_2421E7CA8((uint64_t)v7, (uint64_t)&unk_2571E0B88, v11);
  OUTLINED_FUNCTION_14();
}

uint64_t sub_2421E82D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 176) = a4;
  *(_QWORD *)(v5 + 72) = a1;
  *(_QWORD *)(v5 + 80) = a5;
  *(_QWORD *)(v5 + 88) = type metadata accessor for ModelManagerError();
  *(_QWORD *)(v5 + 96) = swift_task_alloc();
  *(_QWORD *)(v5 + 104) = swift_task_alloc();
  *(_QWORD *)(v5 + 112) = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0C88);
  *(_QWORD *)(v5 + 120) = swift_task_alloc();
  *(_QWORD *)(v5 + 128) = swift_task_alloc();
  *(_QWORD *)(v5 + 136) = type metadata accessor for InferenceProviderXPCRequest(0);
  *(_QWORD *)(v5 + 144) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421E83A0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  int v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(_QWORD, _QWORD);
  uint64_t v14;

  if (qword_2571DF9E0 != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_54();
  *(_QWORD *)(v1 + 152) = __swift_project_value_buffer(v2, (uint64_t)qword_2571E0B48);
  OUTLINED_FUNCTION_164();
  v3 = OUTLINED_FUNCTION_62_3();
  if (OUTLINED_FUNCTION_87_3(v3))
  {
    v4 = *(unsigned __int8 *)(v1 + 176);
    v5 = (uint8_t *)OUTLINED_FUNCTION_10();
    v14 = OUTLINED_FUNCTION_10();
    *(_DWORD *)v5 = 136315138;
    OUTLINED_FUNCTION_96_3();
    if (v4 != 1)
      v8 = 0x8000000242282DF0;
    if (v4)
      v9 = 0xD00000000000001BLL;
    else
      v9 = v6;
    if (v4)
      v10 = v8;
    else
      v10 = v7;
    *(_QWORD *)(v1 + 64) = sub_2421BB36C(v9, v10, &v14);
    sub_242272950();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_53(&dword_2421B5000, v0, v3, "Sending configure request to service for: %s", v5);
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_2();
  }

  **(_BYTE **)(v1 + 144) = *(_BYTE *)(v1 + 176);
  swift_storeEnumTagMultiPayload();
  v11 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v1 + 160) = v11;
  *v11 = v1;
  v11[1] = sub_2421E8564;
  return v13(*(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 144));
}

uint64_t sub_2421E8564()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_73();
  *v2 = *v1;
  *(_QWORD *)(v3 + 168) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421E85B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  int v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v18;

  OUTLINED_FUNCTION_162(*(_QWORD *)(v2 + 128), a2, &qword_2571E0C88);
  OUTLINED_FUNCTION_82_4();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = *(_QWORD *)(v2 + 96);
    v3 = *(_QWORD *)(v2 + 104);
    sub_2421DB000(*(_QWORD *)(v2 + 120), v4);
    sub_2421E3B64(v4, v3, (uint64_t (*)(_QWORD))type metadata accessor for ModelManagerError);
    sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    swift_willThrowTypedImpl();
    sub_2421CE554(v4, (uint64_t (*)(_QWORD))type metadata accessor for ModelManagerError);
    sub_2421DB000(v3, v4);
    OUTLINED_FUNCTION_53_1();
    v6 = sub_2421DB000(v4, v5);
    OUTLINED_FUNCTION_119_2(v6, &qword_2571E0C88);
    OUTLINED_FUNCTION_94_2();
  }
  v7 = *(NSObject **)(v2 + 152);
  sub_242272494();
  v8 = OUTLINED_FUNCTION_62_3();
  if (OUTLINED_FUNCTION_87_3(v8))
  {
    v9 = *(unsigned __int8 *)(v2 + 176);
    v10 = (uint8_t *)OUTLINED_FUNCTION_10();
    v18 = OUTLINED_FUNCTION_10();
    *(_DWORD *)v10 = 136315138;
    OUTLINED_FUNCTION_96_3();
    if (v9)
      v13 = 0xD00000000000001BLL;
    else
      v13 = v12;
    *(_QWORD *)(v2 + 56) = OUTLINED_FUNCTION_171(v13, v11, &v18);
    OUTLINED_FUNCTION_170();
    OUTLINED_FUNCTION_79_1();
    OUTLINED_FUNCTION_53(&dword_2421B5000, v7, v8, "Configure request for: %s returned", v10);
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_2();
  }
  v14 = *(_QWORD *)(v2 + 144);

  OUTLINED_FUNCTION_103_1(v15, &qword_2571E0C88);
  sub_2421CE554(v14, type metadata accessor for InferenceProviderXPCRequest);
  **(_QWORD **)(v2 + 72) = *(_QWORD *)(v2 + 80);
  swift_retain();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  v16 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_18(v16);
}

void sub_2421E8AC4()
{
  OUTLINED_FUNCTION_58();
}

uint64_t sub_2421E8B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v16 = (void *)sub_242272494();
  v17 = sub_242272914();
  if (OUTLINED_FUNCTION_87_3(v17))
  {
    v18 = *(unsigned __int8 *)(v15 + 176);
    v19 = OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    a13 = OUTLINED_FUNCTION_10();
    *(_DWORD *)v19 = 136315394;
    OUTLINED_FUNCTION_136();
    if (v18 != 1)
      v22 = v23;
    if (v18)
      v24 = 0xD00000000000001BLL;
    else
      v24 = v20;
    if (v18)
      v25 = v22;
    else
      v25 = v21;
    *(_QWORD *)(v15 + 40) = sub_2421BB36C(v24, v25, &a13);
    OUTLINED_FUNCTION_170();
    OUTLINED_FUNCTION_183();
    *(_WORD *)(v19 + 12) = 2112;
    OUTLINED_FUNCTION_58();
  }
  OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_46();

  OUTLINED_FUNCTION_123_1();
  v26 = a14;
  *(_QWORD *)(v15 + 16) = a13;
  *(_QWORD *)(v15 + 24) = v26;
  sub_2422726F8();
  OUTLINED_FUNCTION_136();
  v27 = *(_QWORD *)(v15 + 144);
  sub_2422726F8();
  OUTLINED_FUNCTION_183();
  OUTLINED_FUNCTION_67_3();
  *(_QWORD *)(v15 + 32) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA5C8);
  sub_2422729D4();
  sub_242272518();
  OUTLINED_FUNCTION_183();
  OUTLINED_FUNCTION_114_1();
  sub_2421CE554(v27, type metadata accessor for InferenceProviderXPCRequest);
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_18(*(uint64_t (**)(void))(v15 + 8));
}

uint64_t sub_2421E8D94()
{
  OUTLINED_FUNCTION_163();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2421E8DBC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  OUTLINED_FUNCTION_178();
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_92(v1);
  *v2 = v0;
  v2[1] = sub_2421C60C4;
  OUTLINED_FUNCTION_173();
  return sub_2421E82D4(v3, v4, v5, v6, v7);
}

uint64_t sub_2421E8E2C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = v0;
  return OUTLINED_FUNCTION_130_0();
}

uint64_t sub_2421E8E40()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_88_4();
  *(_QWORD *)(v1 + 56) = *(_QWORD *)(v0 + 112);
  swift_retain();
  v2 = (_QWORD *)OUTLINED_FUNCTION_175();
  *(_QWORD *)(v1 + 64) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0B78);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA5C8);
  *v2 = v1;
  v2[1] = sub_2421E8EC4;
  OUTLINED_FUNCTION_165();
  return OUTLINED_FUNCTION_89_2();
}

uint64_t sub_2421E8EC4()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_77(v1);
  if (v0)
    OUTLINED_FUNCTION_91_0();
  swift_release();
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_4_5();
}

uint64_t sub_2421E8F24()
{
  uint64_t v0;

  sub_242272518();
  OUTLINED_FUNCTION_121_0();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421E8F6C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2421E8F74()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = v0;
  return OUTLINED_FUNCTION_130_0();
}

uint64_t sub_2421E8F88()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_88_4();
  *(_QWORD *)(v1 + 56) = *(_QWORD *)(v0 + 112);
  swift_retain();
  v2 = (_QWORD *)OUTLINED_FUNCTION_175();
  *(_QWORD *)(v1 + 64) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0B78);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA5C8);
  *v2 = v1;
  v2[1] = sub_2421E900C;
  OUTLINED_FUNCTION_165();
  return OUTLINED_FUNCTION_89_2();
}

uint64_t sub_2421E900C()
{
  OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_28();
  return OUTLINED_FUNCTION_4_5();
}

uint64_t sub_2421E9054()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40));
}

uint64_t sub_2421E9064()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2421E9070(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_152_0(a1);
  type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle(v2);
  *(_QWORD *)(v1 + 32) = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421E90AC()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  sub_2421E3B64(v0[2], v0[4], type metadata accessor for InferenceProviderPrewarmInformation);
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  v0[5] = (uint64_t)v1;
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_101_2(v1, (uint64_t)sub_2421E90F8, v4);
  return OUTLINED_FUNCTION_8(v2);
}

uint64_t sub_2421E90F8()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_76_3();
  OUTLINED_FUNCTION_106_2(v0, type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle);
  return OUTLINED_FUNCTION_4_5();
}

uint64_t sub_2421E9148()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_181();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_8(v0);
}

uint64_t sub_2421E916C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_181();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421E9194(uint64_t *a1, _BYTE *a2, _BYTE *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = v4;
  *(_QWORD *)(v5 + 32) = type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0);
  v9 = OUTLINED_FUNCTION_17();
  v10 = *a1;
  v11 = a1[1];
  *(_QWORD *)(v5 + 40) = v9;
  *(_QWORD *)(v5 + 48) = v10;
  *(_QWORD *)(v5 + 56) = v11;
  *(_OWORD *)(v5 + 64) = *((_OWORD *)a1 + 1);
  *(_BYTE *)(v5 + 96) = *a2;
  *(_BYTE *)(v5 + 97) = *a3;
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_2421E9210()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v1 = *(_WORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 40);
  sub_2421D3A4C(*(_QWORD *)(v0 + 16), v6 + *(int *)(*(_QWORD *)(v0 + 32) + 28), &qword_2543A7848);
  *(_QWORD *)v6 = v5;
  *(_QWORD *)(v6 + 8) = v4;
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = v2;
  *(_WORD *)(v6 + 32) = v1;
  v9 = (uint64_t (*)(void))((char *)&dword_2571E0BB0 + dword_2571E0BB0);
  sub_242272644();
  sub_242272644();
  v7 = (_QWORD *)OUTLINED_FUNCTION_175();
  *(_QWORD *)(v0 + 80) = v7;
  *v7 = v0;
  v7[1] = sub_2421E92C8;
  return v9();
}

uint64_t sub_2421E92C8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_135_0();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v1 + 88) = v0;
  v3 = swift_task_dealloc();
  OUTLINED_FUNCTION_106_2(v3, type metadata accessor for InferenceProviderXPCRequest.TransitionAsset);
  return OUTLINED_FUNCTION_4_5();
}

uint64_t sub_2421E932C()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_153_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_8(v0);
}

uint64_t sub_2421E9350()
{
  uint64_t v0;

  OUTLINED_FUNCTION_153_0();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421E9378(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification(0);
  v2[7] = OUTLINED_FUNCTION_17();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  v2[8] = OUTLINED_FUNCTION_11();
  v2[9] = OUTLINED_FUNCTION_22();
  v2[10] = OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_2421E93E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_25_3();
  v21 = v1;
  v22 = v2;
  v20 = v0;
  if (qword_2571DF9E0 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_54();
  v0[11] = __swift_project_value_buffer(v3, (uint64_t)qword_2571E0B48);
  v4 = OUTLINED_FUNCTION_82_4();
  sub_2421D3A4C(v4, v5, v6);
  v7 = sub_242272494();
  v8 = sub_24227292C();
  v9 = os_log_type_enabled(v7, v8);
  v10 = v0[10];
  if (v9)
  {
    v11 = v0[9];
    v12 = (uint8_t *)OUTLINED_FUNCTION_10();
    v19 = OUTLINED_FUNCTION_10();
    *(_DWORD *)v12 = 136315138;
    OUTLINED_FUNCTION_162(v10, v13, &qword_2543A7848);
    v14 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    sub_2421D1230(v11, &qword_2543A7848);
    v0[4] = OUTLINED_FUNCTION_171(v14, v15, &v19);
    sub_242272950();
    OUTLINED_FUNCTION_79_1();
    sub_2421D1230(v10, &qword_2543A7848);
    OUTLINED_FUNCTION_53(&dword_2421B5000, v7, v8, "Sending InferenceProvider EndOfStream message for %s", v12);
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_2();
  }
  sub_2421D1230(v0[10], &qword_2543A7848);

  sub_2421D3A4C(v0[5], v0[7], &qword_2543A7848);
  v18 = (uint64_t (*)(uint64_t))((char *)&dword_2571E0BC0 + dword_2571E0BC0);
  v16 = (_QWORD *)swift_task_alloc();
  v0[12] = v16;
  *v16 = v0;
  v16[1] = sub_2421E95F0;
  return v18(v0[7]);
}

uint64_t sub_2421E95F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_135_0();
  OUTLINED_FUNCTION_76(v3);
  *(_QWORD *)(v1 + 104) = v0;
  v4 = swift_task_dealloc();
  OUTLINED_FUNCTION_106_2(v4, type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification);
  if (v0)
    return OUTLINED_FUNCTION_4_5();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_2421E9678()
{
  uint64_t v0;

  sub_2421D3A4C(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 64), &qword_2543A7848);
  OUTLINED_FUNCTION_58();
}

uint64_t sub_2421E96C0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;

  v1 = sub_242272494();
  v2 = sub_242272914();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 64);
    v4 = *(_QWORD *)(v0 + 72);
    v6 = OUTLINED_FUNCTION_10();
    v12 = (_QWORD *)OUTLINED_FUNCTION_10();
    v13 = OUTLINED_FUNCTION_10();
    *(_DWORD *)v6 = 136315394;
    sub_2421D3A4C(v5, v4, &qword_2543A7848);
    v7 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    sub_2421D1230(v4, &qword_2543A7848);
    *(_QWORD *)(v0 + 16) = OUTLINED_FUNCTION_171(v7, v8, &v13);
    sub_242272950();
    OUTLINED_FUNCTION_79_1();
    sub_2421D1230(v5, &qword_2543A7848);
    *(_WORD *)(v6 + 12) = 2112;
    MEMORY[0x2426A61F8](v3);
    v9 = OUTLINED_FUNCTION_176();
    *(_QWORD *)(v0 + 24) = v9;
    sub_242272950();
    *v12 = v9;
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_36();
    OUTLINED_FUNCTION_161(&dword_2421B5000, v1, v2, "Error occurred while sending EndOfStream message for %s: %@");
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543A6E28);
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_2();
  }
  OUTLINED_FUNCTION_91_0();
  OUTLINED_FUNCTION_103_1(v10, &qword_2543A7848);
  OUTLINED_FUNCTION_91_0();
  OUTLINED_FUNCTION_91_0();

  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2421E9898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(0);
  v5[9] = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421E98E0()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  sub_2421D3A4C(v0[5], v0[9], &qword_2543A7848);
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  v0[10] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_2421E9948;
  return OUTLINED_FUNCTION_16_6((uint64_t)(v0 + 2), v0[9], v3);
}

uint64_t sub_2421E9948()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 88) = v1;
  swift_task_dealloc();
  sub_2421CE554(*(_QWORD *)(v0 + 72), type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_2421E99A8()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD);

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 16);
  v1 = *(unsigned __int8 *)(v0 + 24);
  *(_BYTE *)(v0 + 25) = v1;
  if (v1 == 1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v2;
    v3 = OUTLINED_FUNCTION_147_0(v2, (uint64_t)sub_2421E9A44);
    return OUTLINED_FUNCTION_100_2(v3);
  }
  else
  {
    OUTLINED_FUNCTION_118_2();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v5;
    *v5 = v0;
    v5[1] = sub_2421E9AC0;
    return v6(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 96), *(unsigned __int8 *)(v0 + 25));
  }
}

uint64_t sub_2421E9A44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD);

  OUTLINED_FUNCTION_70_1();
  v2 = *v1;
  *v3 = *v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_118_2();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v4;
  *v4 = v2;
  v4[1] = sub_2421E9AC0;
  return v6(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 96), *(unsigned __int8 *)(v0 + 25));
}

uint64_t sub_2421E9AC0()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  swift_bridgeObjectRelease_n();
  OUTLINED_FUNCTION_57();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return v0();
}

uint64_t sub_2421E9B0C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v1;
  v2 = OUTLINED_FUNCTION_147_0(v1, (uint64_t)sub_2421E9B44);
  return OUTLINED_FUNCTION_100_2(v2);
}

uint64_t sub_2421E9B44()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

void sub_2421E9B7C()
{
  OUTLINED_FUNCTION_68_1();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_90_0();
}

void sub_2421E9BDC()
{
  ModelManagerError.init(wrapping:)();
}

uint64_t sub_2421E9BE8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_142_0();
  OUTLINED_FUNCTION_91_0();
  OUTLINED_FUNCTION_57();
  return OUTLINED_FUNCTION_83_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421E9C04(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_BYTE *)(v5 + 80) = a2;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a3;
  *(_QWORD *)(v5 + 48) = type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
  *(_QWORD *)(v5 + 56) = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421E9C50()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_BYTE **)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_BYTE *)(v0 + 80);
  sub_2421E3B64(*(_QWORD *)(v0 + 24), (uint64_t)&v2[*(int *)(v1 + 20)], type metadata accessor for ClientData);
  sub_2421E3B64(v3, (uint64_t)&v2[*(int *)(v1 + 24)], type metadata accessor for InferenceProviderRequestConfiguration);
  type metadata accessor for InferenceProviderRequestConfiguration(0);
  v5 = sub_24227238C();
  OUTLINED_FUNCTION_10_2(v5);
  *v2 = v4;
  v6 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 64) = v6;
  *v6 = v0;
  v6[1] = sub_2421E9D14;
  return v8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56));
}

uint64_t sub_2421E9D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_77_4();
  OUTLINED_FUNCTION_106_2(v2, type metadata accessor for InferenceProviderXPCRequest.InferenceRequest);
  if (v0)
    return OUTLINED_FUNCTION_4_5();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_2421E9D6C()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421E9D98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_152_0(a1);
  type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake(v2);
  *(_QWORD *)(v1 + 32) = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421E9DD4()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  sub_2421D3A4C(v0[2], v0[4], &qword_2543A7848);
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  v0[5] = (uint64_t)v1;
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_101_2(v1, (uint64_t)sub_2421E9E20, v4);
  return OUTLINED_FUNCTION_8(v2);
}

uint64_t sub_2421E9E20()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_76_3();
  OUTLINED_FUNCTION_106_2(v0, type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake);
  return OUTLINED_FUNCTION_4_5();
}

uint64_t sub_2421E9E70(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_152_0(a1);
  *(_QWORD *)(v2 + 32) = type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(v4);
  *(_QWORD *)(v2 + 40) = OUTLINED_FUNCTION_17();
  *(_BYTE *)(v2 + 64) = *a2;
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_2421E9EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v3 = *(_BYTE *)(v2 + 64);
  v5 = *(_QWORD *)(v2 + 32);
  v4 = *(_QWORD *)(v2 + 40);
  OUTLINED_FUNCTION_162(*(_QWORD *)(v2 + 16), a2, &qword_2543A7848);
  *(_BYTE *)(v4 + *(int *)(v5 + 20)) = v3;
  v6 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v2 + 48) = v6;
  *v6 = v2;
  v6[1] = sub_2421E9F34;
  return OUTLINED_FUNCTION_17_4(*(_QWORD *)(v2 + 40), v8);
}

uint64_t sub_2421E9F34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_135_0();
  OUTLINED_FUNCTION_76(v3);
  *(_QWORD *)(v1 + 56) = v0;
  v4 = swift_task_dealloc();
  OUTLINED_FUNCTION_106_2(v4, type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification);
  if (v0)
    return OUTLINED_FUNCTION_4_5();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_1_1(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_2421E9F9C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_153_0();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421E9FC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_152_0(a1);
  type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest(v2);
  *(_QWORD *)(v1 + 32) = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421EA000()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  sub_2421D3A4C(v0[2], v0[4], &qword_2543A7848);
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  v0[5] = (uint64_t)v1;
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_101_2(v1, (uint64_t)sub_2421EA04C, v4);
  return OUTLINED_FUNCTION_8(v2);
}

uint64_t sub_2421EA04C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_77(v2);
  v3 = *(_QWORD *)(v0 + 32);
  if (v1)
    OUTLINED_FUNCTION_91_0();
  sub_2421CE554(v3, type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_4_5();
}

uint64_t sub_2421EA0BC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_181();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421EA0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = sub_2422725A8();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = type metadata accessor for ModelManagerError();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for InferenceProviderXPCRequest(0);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0C88);
  v3[18] = swift_task_alloc();
  v5 = (_QWORD *)swift_task_alloc();
  v3[19] = v5;
  *v5 = v3;
  v5[1] = sub_2421EA1EC;
  return sub_2421E8F74();
}

uint64_t sub_2421EA1EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_10_4(v2);
  if (!v0)
    return OUTLINED_FUNCTION_7_4();
  OUTLINED_FUNCTION_28_6();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_5_2(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_2421EA24C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = OUTLINED_FUNCTION_113_1();
  OUTLINED_FUNCTION_79_4(v0, v1, type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle);
  OUTLINED_FUNCTION_140();
  v2 = (_QWORD *)OUTLINED_FUNCTION_23();
  v3 = OUTLINED_FUNCTION_20_6(v2);
  return OUTLINED_FUNCTION_16_6(v3, v4, v5);
}

uint64_t sub_2421EA29C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12_5();
  v0 = OUTLINED_FUNCTION_112_2();
  sub_2421CE554(v0, type metadata accessor for InferenceProviderXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_2421EA2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_25_3();
  v3 = OUTLINED_FUNCTION_74_2();
  sub_2421F0170(v3);
  if (v0)
  {
    OUTLINED_FUNCTION_48_4();
    sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v4 = OUTLINED_FUNCTION_53_1();
    v6 = OUTLINED_FUNCTION_122_1(v4, v5);
    OUTLINED_FUNCTION_103_1(v6, &qword_2571E0C88);
    *(_QWORD *)(v1 + 16) = v2;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_75_3();
  OUTLINED_FUNCTION_179(v7, &qword_2571E0C88);
  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_20(v8);
}

uint64_t sub_2421EA640(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = sub_2422725A8();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = type metadata accessor for ModelManagerError();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for InferenceProviderXPCRequest(0);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0C88);
  v3[18] = swift_task_alloc();
  v5 = (_QWORD *)swift_task_alloc();
  v3[19] = v5;
  *v5 = v3;
  v5[1] = sub_2421EA74C;
  return sub_2421E8F74();
}

uint64_t sub_2421EA74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_10_4(v2);
  if (!v0)
    return OUTLINED_FUNCTION_7_4();
  OUTLINED_FUNCTION_28_6();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_5_2(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_2421EA7AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = OUTLINED_FUNCTION_113_1();
  OUTLINED_FUNCTION_79_4(v0, v1, type metadata accessor for InferenceProviderXPCRequest.TransitionAsset);
  OUTLINED_FUNCTION_82_4();
  swift_storeEnumTagMultiPayload();
  v2 = (_QWORD *)OUTLINED_FUNCTION_23();
  v3 = OUTLINED_FUNCTION_20_6(v2);
  return OUTLINED_FUNCTION_16_6(v3, v4, v5);
}

uint64_t sub_2421EA804()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12_5();
  v0 = OUTLINED_FUNCTION_112_2();
  sub_2421CE554(v0, type metadata accessor for InferenceProviderXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_2421EA854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = OUTLINED_FUNCTION_159();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = OUTLINED_FUNCTION_11();
  v3[11] = OUTLINED_FUNCTION_22();
  v3[12] = OUTLINED_FUNCTION_22();
  v3[13] = OUTLINED_FUNCTION_68_1();
  v3[14] = OUTLINED_FUNCTION_11();
  v3[15] = OUTLINED_FUNCTION_22();
  v3[16] = type metadata accessor for InferenceProviderXPCRequest(0);
  v3[17] = OUTLINED_FUNCTION_17();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0CB8);
  v3[18] = OUTLINED_FUNCTION_17();
  v5 = (_QWORD *)swift_task_alloc();
  v3[19] = v5;
  OUTLINED_FUNCTION_102_2(v5, (uint64_t)sub_2421EA90C);
  return OUTLINED_FUNCTION_69_4();
}

uint64_t sub_2421EA90C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_10_4(v2);
  if (!v0)
    return OUTLINED_FUNCTION_7_4();
  OUTLINED_FUNCTION_28_6();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_5_2(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_2421EA96C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = OUTLINED_FUNCTION_113_1();
  OUTLINED_FUNCTION_79_4(v0, v1, type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
  OUTLINED_FUNCTION_82_4();
  swift_storeEnumTagMultiPayload();
  v2 = (_QWORD *)OUTLINED_FUNCTION_23();
  v3 = OUTLINED_FUNCTION_20_6(v2);
  return OUTLINED_FUNCTION_16_6(v3, v4, v5);
}

uint64_t sub_2421EA9C4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12_5();
  v0 = OUTLINED_FUNCTION_112_2();
  sub_2421CE554(v0, type metadata accessor for InferenceProviderXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_2421EAA14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_25_3();
  OUTLINED_FUNCTION_74_2();
  sub_2421F018C(v3);
  if (v0)
  {
    OUTLINED_FUNCTION_48_4();
    sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v4 = OUTLINED_FUNCTION_53_1();
    v6 = OUTLINED_FUNCTION_122_1(v4, v5);
    OUTLINED_FUNCTION_103_1(v6, &qword_2571E0CB8);
    *(_QWORD *)(v1 + 16) = v2;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_75_3();
  OUTLINED_FUNCTION_179(v7, &qword_2571E0CB8);
  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_20(v8);
}

uint64_t sub_2421EAD68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = sub_2422725A8();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = type metadata accessor for ModelManagerError();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for InferenceProviderXPCRequest(0);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0CB0);
  v3[18] = swift_task_alloc();
  v5 = (_QWORD *)swift_task_alloc();
  v3[19] = v5;
  *v5 = v3;
  v5[1] = sub_2421EAE74;
  return sub_2421E8F74();
}

uint64_t sub_2421EAE74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_10_4(v2);
  if (!v0)
    return OUTLINED_FUNCTION_7_4();
  OUTLINED_FUNCTION_28_6();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_5_2(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_2421EAED4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = OUTLINED_FUNCTION_113_1();
  OUTLINED_FUNCTION_79_4(v0, v1, type metadata accessor for InferenceProviderXPCRequest.InferenceRequest);
  OUTLINED_FUNCTION_82_4();
  swift_storeEnumTagMultiPayload();
  v2 = (_QWORD *)OUTLINED_FUNCTION_23();
  v3 = OUTLINED_FUNCTION_20_6(v2);
  return OUTLINED_FUNCTION_16_6(v3, v4, v5);
}

uint64_t sub_2421EAF2C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_12_5();
  v0 = OUTLINED_FUNCTION_112_2();
  sub_2421CE554(v0, type metadata accessor for InferenceProviderXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_2421EAF7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_25_3();
  OUTLINED_FUNCTION_74_2();
  sub_2421F0270(v3);
  if (v0)
  {
    OUTLINED_FUNCTION_48_4();
    sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v4 = OUTLINED_FUNCTION_53_1();
    v6 = OUTLINED_FUNCTION_122_1(v4, v5);
    OUTLINED_FUNCTION_103_1(v6, &qword_2571E0CB0);
    *(_QWORD *)(v1 + 16) = v2;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_75_3();
  OUTLINED_FUNCTION_179(v7, &qword_2571E0CB0);
  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_20(v8);
}

void sub_2421EB2D0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_25_3();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 176);
  OUTLINED_FUNCTION_58();
}

#error "2421EB3DC: call analysis failed (funcsize=126)"

uint64_t sub_2421EB610(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = sub_2422725A8();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = type metadata accessor for ModelManagerError();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for InferenceProviderXPCRequest(0);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0C88);
  v3[18] = swift_task_alloc();
  v5 = (_QWORD *)swift_task_alloc();
  v3[19] = v5;
  *v5 = v3;
  v5[1] = sub_2421EB71C;
  return sub_2421E8F74();
}

uint64_t sub_2421EB71C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_10_4(v2);
  if (!v0)
    return OUTLINED_FUNCTION_7_4();
  OUTLINED_FUNCTION_28_6();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_5_2(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_2421EB77C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = OUTLINED_FUNCTION_113_1();
  OUTLINED_FUNCTION_79_4(v0, v1, type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake);
  OUTLINED_FUNCTION_82_4();
  swift_storeEnumTagMultiPayload();
  v2 = (_QWORD *)OUTLINED_FUNCTION_23();
  v3 = OUTLINED_FUNCTION_20_6(v2);
  return OUTLINED_FUNCTION_16_6(v3, v4, v5);
}

uint64_t sub_2421EB7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v4 = sub_2422725A8();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = type metadata accessor for ModelManagerError();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = type metadata accessor for InferenceProviderXPCRequest(0);
  v3[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0C88);
  v3[18] = swift_task_alloc();
  v5 = (_QWORD *)swift_task_alloc();
  v3[19] = v5;
  *v5 = v3;
  v5[1] = sub_2421EB8E0;
  return sub_2421E8F74();
}

uint64_t sub_2421EB8E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_10_4(v2);
  if (!v0)
    return OUTLINED_FUNCTION_7_4();
  OUTLINED_FUNCTION_28_6();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_5_2(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_2421EB940()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = OUTLINED_FUNCTION_113_1();
  OUTLINED_FUNCTION_79_4(v0, v1, type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest);
  OUTLINED_FUNCTION_82_4();
  swift_storeEnumTagMultiPayload();
  v2 = (_QWORD *)OUTLINED_FUNCTION_23();
  v3 = OUTLINED_FUNCTION_20_6(v2);
  return OUTLINED_FUNCTION_16_6(v3, v4, v5);
}

uint64_t sub_2421EB998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v5[12] = a4;
  v5[13] = v4;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  v6 = OUTLINED_FUNCTION_159();
  v5[14] = v6;
  v5[15] = *(_QWORD *)(v6 - 8);
  v5[16] = OUTLINED_FUNCTION_110_2();
  v5[17] = OUTLINED_FUNCTION_110_2();
  v5[18] = OUTLINED_FUNCTION_110_2();
  v7 = OUTLINED_FUNCTION_68_1();
  v5[19] = v7;
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  v8 = OUTLINED_FUNCTION_139_0();
  v5[22] = v8;
  v5[23] = *(_QWORD *)(v8 - 8);
  v5[24] = OUTLINED_FUNCTION_17();
  v9 = OUTLINED_FUNCTION_139_0();
  v5[25] = v9;
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  v5[26] = v10;
  v11 = type metadata accessor for ModelXPCResult(0, v9, v7, v10);
  v5[27] = v11;
  v5[28] = *(_QWORD *)(v11 - 8);
  v5[29] = OUTLINED_FUNCTION_17();
  v12 = (_QWORD *)swift_task_alloc();
  v5[30] = v12;
  OUTLINED_FUNCTION_102_2(v12, (uint64_t)sub_2421EBAF0);
  return OUTLINED_FUNCTION_69_4();
}

uint64_t sub_2421EBAF0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_49_3();
  v2 = *v1;
  *(_QWORD *)(v2 + 248) = v3;
  OUTLINED_FUNCTION_55_4();
  if (!v0)
    return OUTLINED_FUNCTION_7_4();
  swift_task_dealloc();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  return OUTLINED_FUNCTION_5_2(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_2421EBB84()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v11 = v0[27];
  (*(void (**)(_QWORD, _QWORD))(v0[12] + 72))(v0[11], v0[12]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[32] = v1;
  v2 = OUTLINED_FUNCTION_131_0();
  v3 = OUTLINED_FUNCTION_131_0();
  v4 = OUTLINED_FUNCTION_132_0();
  v5 = OUTLINED_FUNCTION_132_0();
  sub_2421ED71C(&qword_2543AA450, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  v7 = v6;
  sub_2421ED71C(&qword_2543AA448, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  v0[2] = v4;
  v0[3] = v5;
  v0[4] = v7;
  v0[5] = v8;
  v9 = MEMORY[0x2426A62C4](&protocol conformance descriptor for <> ModelXPCResult<A, B>, v11, v0 + 2);
  *v1 = v0;
  v1[1] = sub_2421EBCDC;
  return XPCSession.sendWithTaskCancellationWithReply<A, B>(_:)(v0[29], v0[24], v0[22], v0[27], v2, v3, v9);
}

uint64_t sub_2421EBCDC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  v0[33] = v1;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v0[23] + 8))(v0[24], v0[22]);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_2421EBD40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_25_3();
  v1 = v0[33];
  _s20ModelManagerServices0A9XPCResultO3getxyq_YKF(v0[27], v0[21], v0[9]);
  if (v1)
  {
    v2 = v0[28];
    v3 = v0[20];
    sub_2421DB000(v0[21], v3);
    v4 = OUTLINED_FUNCTION_53_1();
    sub_2421DB000(v3, v5);
    OUTLINED_FUNCTION_128_0(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v0[6] = v4;
    OUTLINED_FUNCTION_94_2();
  }
  OUTLINED_FUNCTION_77_1(v0[28]);
  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_20(v6);
}

void sub_2421EC124()
{
  uint64_t v0;

  OUTLINED_FUNCTION_25_3();
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 264);
  OUTLINED_FUNCTION_58();
}

#error "2421EC230: call analysis failed (funcsize=129)"

uint64_t sub_2421EC470(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  v2[5] = a1;
  v2[6] = v1;
  v3 = sub_2422725A8();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = type metadata accessor for InferenceProviderXPCRequest.Notification(0);
  v2[13] = swift_task_alloc();
  v4 = (_QWORD *)swift_task_alloc();
  v2[14] = v4;
  *v4 = v2;
  v4[1] = sub_2421EC520;
  return sub_2421E8F74();
}

uint64_t sub_2421EC520(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 120) = a1;
  OUTLINED_FUNCTION_55_4();
  if (!v1)
    return OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_134_0();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_21_3(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_2421EC59C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_79_4(*(_QWORD *)(v2 + 40), a2, type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification);
  OUTLINED_FUNCTION_140();
  v3 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v2 + 128) = v3;
  v4 = OUTLINED_FUNCTION_125_1(v3, (uint64_t)sub_2421EC5F0);
  return OUTLINED_FUNCTION_17_4(v4, v5);
}

uint64_t sub_2421EC5F0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_78_4();
  sub_2421CE554(*(_QWORD *)(v0 + 104), type metadata accessor for InferenceProviderXPCRequest.Notification);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_2421EC644(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  v2[5] = a1;
  v2[6] = v1;
  v3 = sub_2422725A8();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = type metadata accessor for InferenceProviderXPCRequest.Notification(0);
  v2[13] = swift_task_alloc();
  v4 = (_QWORD *)swift_task_alloc();
  v2[14] = v4;
  *v4 = v2;
  v4[1] = sub_2421EC6F4;
  return sub_2421E8F74();
}

uint64_t sub_2421EC6F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 120) = a1;
  OUTLINED_FUNCTION_55_4();
  if (!v1)
    return OUTLINED_FUNCTION_19_1();
  OUTLINED_FUNCTION_134_0();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_21_3(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_2421EC770(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_79_4(*(_QWORD *)(v2 + 40), a2, type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification);
  OUTLINED_FUNCTION_82_4();
  swift_storeEnumTagMultiPayload();
  v3 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v2 + 128) = v3;
  v4 = OUTLINED_FUNCTION_125_1(v3, (uint64_t)sub_2421EC7CC);
  return OUTLINED_FUNCTION_17_4(v4, v5);
}

uint64_t sub_2421EC7CC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_78_4();
  sub_2421CE554(*(_QWORD *)(v0 + 104), type metadata accessor for InferenceProviderXPCRequest.Notification);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_2421EC820()
{
  uint64_t (*v0)(void);

  swift_release();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_21_3(v0);
}

#error "2421EC988: call analysis failed (funcsize=138)"

uint64_t sub_2421ECBAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  _QWORD *v7;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v5 = OUTLINED_FUNCTION_159();
  v4[9] = v5;
  v4[10] = *(_QWORD *)(v5 - 8);
  v4[11] = OUTLINED_FUNCTION_110_2();
  v4[12] = OUTLINED_FUNCTION_110_2();
  v4[13] = OUTLINED_FUNCTION_110_2();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[14] = AssociatedTypeWitness;
  v4[15] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[16] = OUTLINED_FUNCTION_17();
  v7 = (_QWORD *)swift_task_alloc();
  v4[17] = v7;
  OUTLINED_FUNCTION_102_2(v7, (uint64_t)sub_2421ECC68);
  return OUTLINED_FUNCTION_69_4();
}

uint64_t sub_2421ECC68(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 144) = a1;
  OUTLINED_FUNCTION_55_4();
  if (!v1)
    return OUTLINED_FUNCTION_19_1();
  swift_task_dealloc();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_21_3(*(uint64_t (**)(void))(v3 + 8));
}

uint64_t sub_2421ECCF0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_49_3();
  (*(void (**)(_QWORD, _QWORD))(v0[7] + 72))(v0[6], v0[7]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[19] = v1;
  v2 = OUTLINED_FUNCTION_126_0();
  v3 = OUTLINED_FUNCTION_126_0();
  *v1 = v0;
  v1[1] = sub_2421ECDA4;
  return XPCSession.sendWithTaskCancellation<A>(_:)(v0[16], v0[14], v2, v3);
}

uint64_t sub_2421ECDA4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  v0[20] = v1;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v0[15] + 8))(v0[16], v0[14]);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_2421ECE08()
{
  uint64_t (*v0)(void);

  swift_release();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_21_3(v0);
}

#error "2421ECF70: call analysis failed (funcsize=138)"

uint64_t sub_2421ED194(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0660);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421ED1F0()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t inited;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;

  OUTLINED_FUNCTION_178();
  v2 = v0[6];
  v1 = (_QWORD *)v0[7];
  sub_24220BCE4(v0[5], v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  inited = swift_initStackObject();
  v0[8] = inited;
  *(_DWORD *)(inited + 20) = 0;
  *(_BYTE *)(inited + 16) = 0;
  v4 = (_QWORD *)swift_task_alloc();
  v0[9] = (uint64_t)v4;
  v4[2] = inited;
  v4[3] = v1;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[10] = (uint64_t)v5;
  v5[2] = inited;
  v5[3] = v2;
  v5[4] = v1;
  v6 = (_QWORD *)swift_task_alloc();
  v0[11] = (uint64_t)v6;
  *v6 = v0;
  v6[1] = sub_2421ED2D4;
  OUTLINED_FUNCTION_173();
  return sub_242272C2C();
}

uint64_t sub_2421ED2D4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_73();
  *v2 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  return OUTLINED_FUNCTION_4_5();
}

uint64_t sub_2421ED338()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v0 = swift_release();
  OUTLINED_FUNCTION_119_2(v0, &qword_2571E0660);
  OUTLINED_FUNCTION_16();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_8(v1);
}

uint64_t sub_2421ED370()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_release();
  OUTLINED_FUNCTION_119_2(v1, &qword_2571E0660);
  OUTLINED_FUNCTION_16();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t InferenceProviderXPCSender.deinit()
{
  uint64_t v0;

  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t InferenceProviderXPCSender.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t InferenceProviderXPCSender.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2421ED400()
{
  return InferenceProviderXPCSender.unownedExecutor.getter();
}

uint64_t sub_2421ED418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_2421ED434()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(v0 + 24);
  v2 = swift_task_alloc();
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  v3 = v1 + 4;
  v1 += 5;
  os_unfair_lock_lock(v1);
  sub_2421ED4B4(v3, *(_QWORD *)(v2 + 16));
  os_unfair_lock_unlock(v1);
  OUTLINED_FUNCTION_57();
  return OUTLINED_FUNCTION_83_3(*(uint64_t (**)(void))(v0 + 8));
}

void sub_2421ED4B4(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint8_t *v13;
  uint64_t v14;
  uint8_t *v15;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0660);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v9 = sub_2422724AC();
  __swift_project_value_buffer(v9, (uint64_t)qword_2543AA7E8);
  sub_2421D3A4C(a2, (uint64_t)v8, &qword_2571E0660);
  v10 = sub_242272494();
  v11 = sub_242272908();
  if (os_log_type_enabled(v10, v11))
  {
    v18 = a2;
    v12 = (uint8_t *)swift_slowAlloc();
    v17 = v2;
    v13 = v12;
    v16[1] = v6;
    *(_DWORD *)v12 = 134217984;
    v14 = sub_24220BE64();
    sub_2421D1230((uint64_t)v8, &qword_2571E0660);
    v19 = v14;
    a2 = v18;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v10, v11, "Sending message %llu.", v13, 0xCu);
    v15 = v13;
    v3 = v17;
    MEMORY[0x2426A6378](v15, -1, -1);
  }
  else
  {
    sub_2421D1230((uint64_t)v8, &qword_2571E0660);
  }

  sub_2421EDBCC();
  sub_24227250C();
  if (!v3)
  {
    *a1 = 1;
    if ((sub_242272890() & 1) != 0)
      sub_242211064(a2);
  }
}

void sub_2421ED6CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_unfair_lock_s *v5;

  v5 = (os_unfair_lock_s *)(a1 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 20));
  if (*(_BYTE *)(a1 + 16) == 1)
    sub_242211064(a3);
  os_unfair_lock_unlock(v5);
}

void sub_2421ED71C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x2426A62C4](a3, v5), a1);
  }
  OUTLINED_FUNCTION_34();
}

uint64_t sub_2421ED758@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2421E7264();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for InferenceProviderXPCSender()
{
  return objc_opt_self();
}

uint64_t method lookup function for InferenceProviderXPCSender()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InferenceProviderXPCSender.sessionCache.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of InferenceProviderXPCSender.sessionCache.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of InferenceProviderXPCSender.sessionCache.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of InferenceProviderXPCSender.__allocating_init(session:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of InferenceProviderXPCSender.__allocating_init(builtInProvider:session:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of InferenceProviderXPCSender.invalidate()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 16) = v1;
  OUTLINED_FUNCTION_102_2(v1, (uint64_t)sub_2421C60C4);
  return OUTLINED_FUNCTION_8(v3);
}

uint64_t dispatch thunk of InferenceProviderXPCSender.prewarmBundle(information:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_180();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_70_2(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_17_4(v2, v3);
}

uint64_t dispatch thunk of InferenceProviderXPCSender.transitionAsset(withDescriptor:to:from:requestIdentifier:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_178();
  OUTLINED_FUNCTION_143_0();
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 16) = v1;
  OUTLINED_FUNCTION_102_2(v1, (uint64_t)sub_2421C71E8);
  OUTLINED_FUNCTION_149_0();
  OUTLINED_FUNCTION_173();
  return v6(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t dispatch thunk of InferenceProviderXPCSender.sendEndOfStream(for:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_180();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_70_2(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_17_4(v2, v3);
}

uint64_t dispatch thunk of InferenceProviderXPCSender.withNextFetchedStreamResults<A>(requestIdentifier:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = OUTLINED_FUNCTION_23();
  v12 = (_QWORD *)OUTLINED_FUNCTION_92(v11);
  *v12 = v5;
  v12[1] = sub_2421C71E8;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of InferenceProviderXPCSender.requestInference(asStream:clientData:configuration:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_178();
  v1 = OUTLINED_FUNCTION_49();
  v2 = (_QWORD *)OUTLINED_FUNCTION_92(v1);
  *v2 = v0;
  v2[1] = sub_2421C71E8;
  OUTLINED_FUNCTION_149_0();
  OUTLINED_FUNCTION_173();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of InferenceProviderXPCSender.directStreamHandshake(requestIdentifier:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_180();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_70_2(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_17_4(v2, v3);
}

uint64_t dispatch thunk of InferenceProviderXPCSender.willCancelActiveRequest(id:dueTo:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v5 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v2 + 16) = v5;
  OUTLINED_FUNCTION_102_2(v5, (uint64_t)sub_2421C71E8);
  return v7(a1, a2);
}

uint64_t dispatch thunk of InferenceProviderXPCSender.endOfStream(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_180();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_70_2(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_17_4(v2, v3);
}

uint64_t dispatch thunk of InferenceProviderXPCSender.sendAsync<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_178();
  OUTLINED_FUNCTION_143_0();
  v1 = OUTLINED_FUNCTION_49();
  v2 = (_QWORD *)OUTLINED_FUNCTION_92(v1);
  *v2 = v0;
  v2[1] = sub_2421C71E8;
  OUTLINED_FUNCTION_149_0();
  OUTLINED_FUNCTION_173();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of InferenceProviderXPCSender.sendOnewayAsync<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v7 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v3 + 16) = v7;
  OUTLINED_FUNCTION_102_2(v7, (uint64_t)sub_2421C71E8);
  return v9(a1, a2, a3);
}

uint64_t sub_2421EDB6C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_2421ED418(v2, v3, v4, v5);
}

void sub_2421EDBC0()
{
  uint64_t *v0;

  sub_2421ED6CC(v0[2], v0[3], v0[4]);
}

unint64_t sub_2421EDBCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2571E0CA8;
  if (!qword_2571E0CA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571E0660);
    result = MEMORY[0x2426A62C4](&unk_242282748, v1);
    atomic_store(result, (unint64_t *)&qword_2571E0CA8);
  }
  return result;
}

uint64_t sub_2421EDC10()
{
  OUTLINED_FUNCTION_163();
  return swift_deallocObject();
}

uint64_t sub_2421EDC30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_92(v3);
  *v4 = v1;
  v4[1] = sub_2421C71E8;
  return sub_2421E74A4(a1);
}

uint64_t OUTLINED_FUNCTION_4_5()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_7_4()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_10_4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v3 + 160) = a1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_12_5()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 176) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_16_6(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_17_4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_20_6(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 168) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 144);
}

uint64_t OUTLINED_FUNCTION_21_3(uint64_t (*a1)(void))
{
  return a1();
}

void OUTLINED_FUNCTION_23_5(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_24_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_26_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_27_5()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_28_6()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_30_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_33_3(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_242272950();
}

BOOL OUTLINED_FUNCTION_34_2(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_35_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v12;
  uint64_t v13;

  return a12(a2, v12, v13);
}

uint64_t OUTLINED_FUNCTION_36_3()
{
  return sub_242272950();
}

uint64_t OUTLINED_FUNCTION_37_1(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_242272950();
}

void OUTLINED_FUNCTION_38_3(float a1)
{
  float *v1;

  *v1 = a1;
}

void OUTLINED_FUNCTION_39_3()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_42_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_project_value_buffer(a1, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v4, v3, v5);
}

BOOL OUTLINED_FUNCTION_43_2(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_46_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;

  return a11(a2, v11, v12);
}

uint64_t OUTLINED_FUNCTION_47_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v2, v1, v3);
}

uint64_t OUTLINED_FUNCTION_48_4()
{
  uint64_t v0;

  return sub_2421DB000(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 112));
}

void OUTLINED_FUNCTION_51_2()
{
  JUMPOUT(0x2426A61F8);
}

uint64_t OUTLINED_FUNCTION_52_4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_54_3()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_55_4()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_59_4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return sub_242272950();
}

uint64_t OUTLINED_FUNCTION_62_3()
{
  return sub_2422728FC();
}

BOOL OUTLINED_FUNCTION_64_3(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_65_4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_66_3(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  return v2(a2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_67_3()
{
  return sub_2422726F8();
}

uint64_t OUTLINED_FUNCTION_69_4()
{
  return sub_2421E8F74();
}

uint64_t OUTLINED_FUNCTION_70_2@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_71_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_72_4()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

void OUTLINED_FUNCTION_73_3()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_74_2()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 120);
}

uint64_t OUTLINED_FUNCTION_76_3()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_77_4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 72) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_78_4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 136) = v0;
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_79_4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_2421E3B64(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_81_4()
{
  return sub_24227292C();
}

uint64_t OUTLINED_FUNCTION_82_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_83_3(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_85_2()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_86_3()
{
  void *v0;

}

BOOL OUTLINED_FUNCTION_87_3(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_88_4()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_89_2()
{
  return sub_24227286C();
}

uint64_t OUTLINED_FUNCTION_91_3()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_92_2()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_93_2(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  return v2(a2, v3, v4);
}

void OUTLINED_FUNCTION_94_2()
{
  JUMPOUT(0x2426A61F8);
}

uint64_t OUTLINED_FUNCTION_99_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v0, v1, v3);
}

uint64_t OUTLINED_FUNCTION_100_2(uint64_t a1)
{
  return sub_2421E9378(a1);
}

uint64_t OUTLINED_FUNCTION_101_2@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return a3;
}

_QWORD *OUTLINED_FUNCTION_102_2@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

void OUTLINED_FUNCTION_103_1(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_2421D1230(v2, a2);
}

uint64_t OUTLINED_FUNCTION_104_2()
{
  return swift_willThrow();
}

void OUTLINED_FUNCTION_106_2(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_2421CE554(v2, a2);
}

void OUTLINED_FUNCTION_109_2()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_110_2()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_112_2()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 136);
}

uint64_t OUTLINED_FUNCTION_113_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t OUTLINED_FUNCTION_114_1()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_115_2(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

void OUTLINED_FUNCTION_116_2(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  NSObject *v5;
  uint8_t *v6;

  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_117_1(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  return v2(a2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_118_2()
{
  return sub_242272644();
}

void OUTLINED_FUNCTION_119_2(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_2421D1230(v2, a2);
}

uint64_t OUTLINED_FUNCTION_121_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_122_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2421DB000(v2, a2);
}

uint64_t OUTLINED_FUNCTION_123_1()
{
  return sub_242272998();
}

uint64_t OUTLINED_FUNCTION_125_1@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 104);
}

uint64_t OUTLINED_FUNCTION_126_0()
{
  return swift_getAssociatedConformanceWitness();
}

void OUTLINED_FUNCTION_127_0(float a1)
{
  float *v1;

  *v1 = a1;
  JUMPOUT(0x2426A61F8);
}

uint64_t OUTLINED_FUNCTION_128_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_130_0()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_131_0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_132_0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_133_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_134_0()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_135_0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

BOOL OUTLINED_FUNCTION_137_0(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_138_0()
{
  return sub_242272494();
}

uint64_t OUTLINED_FUNCTION_139_0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_140()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_141_0()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_142_0()
{
  return swift_willThrow();
}

void OUTLINED_FUNCTION_144_0(float a1)
{
  float *v1;

  *v1 = a1;
}

void OUTLINED_FUNCTION_145_0(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_146_0()
{
  return sub_242272494();
}

uint64_t OUTLINED_FUNCTION_147_0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 40);
}

void OUTLINED_FUNCTION_148()
{
  id *v0;

}

uint64_t OUTLINED_FUNCTION_150()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_151_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_152_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_153_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_155_0()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_156_0()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_157_0()
{
  return sub_242272848();
}

uint64_t OUTLINED_FUNCTION_159()
{
  return sub_2422725A8();
}

void OUTLINED_FUNCTION_161(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

void OUTLINED_FUNCTION_162(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_2421D3A4C(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_163()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_164()
{
  return sub_242272494();
}

uint64_t OUTLINED_FUNCTION_165()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_166@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_168(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_170()
{
  return sub_242272950();
}

uint64_t OUTLINED_FUNCTION_171(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_2421BB36C(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_175()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_176()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

void OUTLINED_FUNCTION_177()
{
  void *v0;

}

void OUTLINED_FUNCTION_179(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_2421D1230(v2, a2);
}

uint64_t OUTLINED_FUNCTION_181()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_182()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_183()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_185()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_186()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t OUTLINED_FUNCTION_187()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t ModelXPCSender.loadAssetBundle(_:dynamicMode:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 56) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2421EE56C()
{
  uint64_t v0;
  _QWORD *v1;

  sub_242272644();
  v1 = (_QWORD *)OUTLINED_FUNCTION_297();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_2421EE5C4;
  return sub_2421F0EDC((uint64_t)v1, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 56));
}

uint64_t sub_2421EE5C4()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_241(*v0);
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_42();
}

uint64_t ModelXPCSender.holdAssetBundle(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2421EE634()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_242272644();
  v1 = (_QWORD *)OUTLINED_FUNCTION_297();
  v0[5] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_2421EE5C4;
  return sub_2421F0F98((uint64_t)v1, v0[2], v0[3]);
}

uint64_t ModelXPCSender.forceAssetVersionSwitch()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421EE6CC;
  return sub_2421F0FFC((uint64_t)v1);
}

uint64_t sub_2421EE6CC()
{
  OUTLINED_FUNCTION_307();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421EE708(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EE768()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9FF0);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EE808()
{
  uint64_t v0;

  OUTLINED_FUNCTION_23_6();
  if (!v0)
  {
    OUTLINED_FUNCTION_203();
    OUTLINED_FUNCTION_16();
  }
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421EE84C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EE8AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9998);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EE94C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EE9AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1170);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EEA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EEAAC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1118);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EEB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EEBAC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E15A0);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EEC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EECAC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1548);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EED4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EEDAC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E14F0);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EEE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EEEAC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0FF8);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EEF4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0668);
  v3[8] = OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421EEF90()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, &qword_2571E06B8, (uint64_t)type metadata accessor for InferenceProviderXPCRequest, &qword_2571E0668);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0C88);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EF030);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EF030()
{
  uint64_t v0;

  OUTLINED_FUNCTION_23_6();
  if (!v0)
  {
    OUTLINED_FUNCTION_203();
    OUTLINED_FUNCTION_16();
  }
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421EF074(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0668);
  v3[8] = OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421EF0B8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, &qword_2571E06B8, (uint64_t)type metadata accessor for InferenceProviderXPCRequest, &qword_2571E0668);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0CB8);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EF030);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EF158(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0668);
  v3[8] = OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421EF19C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, &qword_2571E06B8, (uint64_t)type metadata accessor for InferenceProviderXPCRequest, &qword_2571E0668);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0CB0);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EF23C);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EF23C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_23_6();
  if (!v0)
  {
    OUTLINED_FUNCTION_203();
    OUTLINED_FUNCTION_16();
  }
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421EF280(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v3 = *(_QWORD *)(v2 + 64);
  OUTLINED_FUNCTION_375(a1, a2, &qword_2571E06B8, type metadata accessor for InferenceProviderXPCRequest);
  OUTLINED_FUNCTION_311(v3);
  OUTLINED_FUNCTION_16();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_9_3(v4);
}

uint64_t sub_2421EF2CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_368();
  v2 = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_372(v2, v3, &qword_2571E06B8, type metadata accessor for InferenceProviderXPCRequest);
  OUTLINED_FUNCTION_304(v0);
  OUTLINED_FUNCTION_57();
  return OUTLINED_FUNCTION_9_3(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_2421EF320(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EF380()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E13D0);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EF420(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EF480()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1378);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EF520(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EF580()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1320);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EF620(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EF680()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E12C8);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EF720(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EF780()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1270);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EF820(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EF880()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1218);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EF920(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EF980()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9F70);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EFA20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EFA80()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1098);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EFB20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EFB80()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1040);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EFC20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EFC80()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0FA0);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EFD20);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

uint64_t sub_2421EFD20()
{
  uint64_t v0;

  OUTLINED_FUNCTION_23_6();
  if (!v0)
  {
    OUTLINED_FUNCTION_203();
    OUTLINED_FUNCTION_16();
  }
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421EFD64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v3 = *(_QWORD *)(v2 + 64);
  OUTLINED_FUNCTION_375(a1, a2, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_311(v3);
  OUTLINED_FUNCTION_16();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_9_3(v4);
}

uint64_t sub_2421EFDB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_368();
  v2 = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_372(v2, v3, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_304(v0);
  OUTLINED_FUNCTION_57();
  return OUTLINED_FUNCTION_9_3(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_2421EFE04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421EFE64()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v0 = OUTLINED_FUNCTION_137_1();
  OUTLINED_FUNCTION_205(v0, (uint64_t *)&unk_2543AA520, (uint64_t)type metadata accessor for ModelXPCRequest, &qword_2543AA460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v1 = OUTLINED_FUNCTION_14_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_49_4(v1);
  v3 = (_QWORD *)OUTLINED_FUNCTION_48_5(v2);
  OUTLINED_FUNCTION_103_2(v3);
  v4 = swift_task_alloc();
  OUTLINED_FUNCTION_213(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0F48);
  OUTLINED_FUNCTION_212((uint64_t)sub_2421EE808);
  OUTLINED_FUNCTION_68_3();
  return OUTLINED_FUNCTION_25_4();
}

void sub_2421EFF04(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_68_1();
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_66();
  v8 = v7 - v6;
  sub_242213618(v2, v7 - v6, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    OUTLINED_FUNCTION_310(v8);
    OUTLINED_FUNCTION_286();
    OUTLINED_FUNCTION_174(&qword_2543A99A0, v9, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    OUTLINED_FUNCTION_285();
    OUTLINED_FUNCTION_309();
  }
}

void sub_2421EFFE8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  _QWORD v18[2];

  v5 = type metadata accessor for ModelManagerError();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0FF8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242213618(v2, (uint64_t)v10, &qword_2571E0FF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2421D11A4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ModelManagerError);
    sub_2421CE528((uint64_t)v7, a1, (uint64_t (*)(_QWORD))type metadata accessor for ModelManagerError);
    sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    swift_willThrowTypedImpl();
    sub_2421D3DF4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ModelManagerError);
  }
  else
  {
    v11 = v10[8];
    v12 = *((_QWORD *)v10 + 2);
    v13 = v10[24];
    v14 = *((_QWORD *)v10 + 12);
    v15 = *((_QWORD *)v10 + 13);
    *(_QWORD *)a2 = *(_QWORD *)v10;
    *(_BYTE *)(a2 + 8) = v11;
    *(_QWORD *)(a2 + 16) = v12;
    *(_BYTE *)(a2 + 24) = v13;
    v16 = *((_OWORD *)v10 + 3);
    *(_OWORD *)(a2 + 32) = *((_OWORD *)v10 + 2);
    *(_OWORD *)(a2 + 48) = v16;
    v17 = *((_OWORD *)v10 + 5);
    *(_OWORD *)(a2 + 64) = *((_OWORD *)v10 + 4);
    *(_OWORD *)(a2 + 80) = v17;
    *(_QWORD *)(a2 + 96) = v14;
    *(_QWORD *)(a2 + 104) = v15;
  }
}

void sub_2421F0170(uint64_t a1)
{
  sub_2421EFF04(a1, &qword_2571E0C88);
}

void sub_2421F018C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_68_1();
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0CB8);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_21_1();
  sub_242213618(v1, v2, &qword_2571E0CB8);
  if (OUTLINED_FUNCTION_365() == 1)
  {
    OUTLINED_FUNCTION_310(v2);
    OUTLINED_FUNCTION_286();
    OUTLINED_FUNCTION_174(&qword_2543A99A0, v6, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    OUTLINED_FUNCTION_285();
    OUTLINED_FUNCTION_309();
  }
  else
  {
    v7 = *(_BYTE *)(v2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)v2;
    *(_BYTE *)(a1 + 8) = v7;
  }
  OUTLINED_FUNCTION_16_0();
}

void sub_2421F0270(uint64_t a1@<X8>)
{
  sub_2421F0294(&qword_2571E0CB0, type metadata accessor for InferenceProviderRequestResult, a1);
}

void sub_2421F0294(uint64_t *a1@<X1>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_68_1();
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_66();
  v10 = v9 - v8;
  sub_242213618(v3, v9 - v8, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    OUTLINED_FUNCTION_310(v10);
    OUTLINED_FUNCTION_286();
    OUTLINED_FUNCTION_174(&qword_2543A99A0, v11, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    OUTLINED_FUNCTION_285();
    OUTLINED_FUNCTION_309();
  }
  else
  {
    sub_2421D11A4(v10, a3, a2);
  }
  OUTLINED_FUNCTION_16_0();
}

void sub_2421F0388(uint64_t *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_68_1();
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_21_1();
  sub_242213618(v2, (uint64_t)v3, a1);
  if (OUTLINED_FUNCTION_365() == 1)
  {
    OUTLINED_FUNCTION_310((uint64_t)v3);
    OUTLINED_FUNCTION_286();
    OUTLINED_FUNCTION_174(&qword_2543A99A0, v8, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    OUTLINED_FUNCTION_285();
    OUTLINED_FUNCTION_309();
  }
  else
  {
    *a2 = *v3;
  }
  OUTLINED_FUNCTION_16_0();
}

void sub_2421F0460(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  _QWORD v13[2];

  v5 = type metadata accessor for ModelManagerError();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1040);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242213618(v2, (uint64_t)v10, &qword_2571E1040);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2421D11A4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ModelManagerError);
    sub_2421CE528((uint64_t)v7, a1, (uint64_t (*)(_QWORD))type metadata accessor for ModelManagerError);
    sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    swift_willThrowTypedImpl();
    sub_2421D3DF4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ModelManagerError);
  }
  else
  {
    v11 = *((_QWORD *)v10 + 4);
    v12 = *((_OWORD *)v10 + 1);
    *(_OWORD *)a2 = *(_OWORD *)v10;
    *(_OWORD *)(a2 + 16) = v12;
    *(_QWORD *)(a2 + 32) = v11;
  }
}

void sub_2421F05C0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v15[2];

  v5 = type metadata accessor for ModelManagerError();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0FA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242213618(v2, (uint64_t)v10, &qword_2571E0FA0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2421D11A4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ModelManagerError);
    sub_2421CE528((uint64_t)v7, a1, (uint64_t (*)(_QWORD))type metadata accessor for ModelManagerError);
    sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    swift_willThrowTypedImpl();
    sub_2421D3DF4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ModelManagerError);
  }
  else
  {
    v11 = *((_OWORD *)v10 + 1);
    v12 = *((_QWORD *)v10 + 4);
    v13 = *((_QWORD *)v10 + 5);
    v14 = v10[64];
    *(_OWORD *)a2 = *(_OWORD *)v10;
    *(_OWORD *)(a2 + 16) = v11;
    *(_QWORD *)(a2 + 32) = v12;
    *(_QWORD *)(a2 + 40) = v13;
    *(_OWORD *)(a2 + 48) = *((_OWORD *)v10 + 3);
    *(_BYTE *)(a2 + 64) = v14;
  }
}

uint64_t sub_2421F0730()
{
  if (qword_2543AA2A0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_2421F0770()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ModelXPCSender();
  v0 = swift_allocObject();
  result = ModelXPCSender.init()();
  qword_2543AAE10 = v0;
  return result;
}

void ModelXPCSender.__allocating_init()()
{
  swift_allocObject();
  ModelXPCSender.init()();
  OUTLINED_FUNCTION_34();
}

uint64_t ModelXPCSender.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0 + OBJC_IVAR____TtC20ModelManagerServices14ModelXPCSender_logHandle;
  if (qword_2543AA570 != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_54();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2543AA558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1, v3, v2);
  if (qword_2543AA2A0 != -1)
    swift_once();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC20ModelManagerServices14ModelXPCSender_session) = qword_2543AAE00;
  swift_retain();
  return v0;
}

uint64_t ModelXPCSender.executeRequest(asStream:clientData:modelBundleID:requiredAssetIDs:id:sessionID:taskPriority:loggingIdentifier:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v9 + 96) = v14;
  *(_QWORD *)(v9 + 104) = v8;
  *(_QWORD *)(v9 + 80) = v11;
  *(_QWORD *)(v9 + 88) = v13;
  *(_BYTE *)(v9 + 177) = v12;
  *(_QWORD *)(v9 + 64) = a7;
  *(_QWORD *)(v9 + 72) = a8;
  *(_QWORD *)(v9 + 48) = a5;
  *(_QWORD *)(v9 + 56) = a6;
  *(_QWORD *)(v9 + 32) = a2;
  *(_QWORD *)(v9 + 40) = a4;
  *(_BYTE *)(v9 + 176) = a3;
  *(_QWORD *)(v9 + 24) = a1;
  *(_QWORD *)(v9 + 112) = type metadata accessor for ModelXPCRequest.ExecuteRequest.Response(0);
  *(_QWORD *)(v9 + 120) = OUTLINED_FUNCTION_127_1();
  *(_QWORD *)(v9 + 128) = type metadata accessor for ModelXPCRequest.ExecuteRequest(0);
  *(_QWORD *)(v9 + 136) = OUTLINED_FUNCTION_127_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  *(_QWORD *)(v9 + 144) = OUTLINED_FUNCTION_278();
  *(_QWORD *)(v9 + 152) = OUTLINED_FUNCTION_297();
  OUTLINED_FUNCTION_29();
  return swift_task_switch();
}

uint64_t sub_2421F0940()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  os_log_type_t v4;
  _BOOL4 v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  char v25;
  uint64_t v26;
  uint64_t v27;

  if ((sub_242272890() & 1) != 0)
  {
    sub_242213618(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 152), &qword_2543A7848);
    sub_242272494();
    v4 = OUTLINED_FUNCTION_367();
    v5 = OUTLINED_FUNCTION_352(v4);
    v6 = *(_QWORD *)(v1 + 152);
    if (v5)
    {
      v7 = (uint8_t *)OUTLINED_FUNCTION_10();
      v27 = OUTLINED_FUNCTION_10();
      *(_DWORD *)v7 = 136315138;
      OUTLINED_FUNCTION_359(v6, v8, &qword_2543A7848);
      _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
      v9 = OUTLINED_FUNCTION_349();
      OUTLINED_FUNCTION_304(v9);
      *(_QWORD *)(v1 + 16) = OUTLINED_FUNCTION_336(v10, v11, &v27);
      OUTLINED_FUNCTION_54_4();
      OUTLINED_FUNCTION_183();
      OUTLINED_FUNCTION_304(v6);
      OUTLINED_FUNCTION_53(&dword_2421B5000, v0, v2, "Task for execute request %s cancelled before sending", v7);
      OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_2();
    }

    sub_242213420(v6, &qword_2543A7848);
    OUTLINED_FUNCTION_68_1();
    sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_338();
    swift_willThrow();
    OUTLINED_FUNCTION_362();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_37();
    OUTLINED_FUNCTION_43();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v13 = *(int **)(v1 + 128);
    v12 = *(_QWORD *)(v1 + 136);
    v14 = *(_QWORD *)(v1 + 96);
    v26 = *(_QWORD *)(v1 + 88);
    v25 = *(_BYTE *)(v1 + 177);
    v16 = *(_QWORD *)(v1 + 72);
    v15 = *(_QWORD *)(v1 + 80);
    v18 = *(_QWORD *)(v1 + 56);
    v17 = *(_QWORD *)(v1 + 64);
    v19 = *(_QWORD *)(v1 + 48);
    v20 = *(_BYTE *)(v1 + 176);
    OUTLINED_FUNCTION_287(*(_QWORD *)(v1 + 40), v3, type metadata accessor for ClientData);
    sub_242213618(v16, v12 + v13[7], &qword_2543A7848);
    sub_242213618(v15, v12 + v13[8], &qword_2543A7850);
    v21 = (_QWORD *)(v12 + v13[5]);
    *v21 = v19;
    v21[1] = v18;
    *(_QWORD *)(v12 + v13[6]) = v17;
    *(_BYTE *)(v12 + v13[9]) = v25;
    v22 = (_QWORD *)(v12 + v13[10]);
    *v22 = v26;
    v22[1] = v14;
    *(_BYTE *)(v12 + v13[11]) = v20;
    sub_242272644();
    sub_242272644();
    sub_242272644();
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 160) = v23;
    *v23 = v1;
    v23[1] = sub_2421F0C0C;
    return sub_2421F10BC(*(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 136));
  }
}

uint64_t sub_2421F0C0C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_153();
  *(_QWORD *)(v1 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421F0C58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  uint64_t (*v9)(void);

  v2 = v0[14];
  v1 = v0[15];
  v3 = v0[3];
  v4 = v0[4];
  sub_2421D3DF4(v0[17], type metadata accessor for ModelXPCRequest.ExecuteRequest);
  sub_2421D11A4(v1, v3, type metadata accessor for InferenceProviderRequestResult);
  v5 = v1 + *(int *)(v2 + 20);
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(_BYTE *)(v5 + 32);
  v8 = *(_OWORD *)(v5 + 16);
  *(_QWORD *)v4 = *(_QWORD *)v5;
  *(_QWORD *)(v4 + 8) = v6;
  *(_OWORD *)(v4 + 16) = v8;
  *(_BYTE *)(v4 + 32) = v7;
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return v9();
}

uint64_t sub_2421F0CFC()
{
  uint64_t v0;

  sub_2421D3DF4(*(_QWORD *)(v0 + 136), type metadata accessor for ModelXPCRequest.ExecuteRequest);
  OUTLINED_FUNCTION_362();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421F0D50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2421F0D6C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_49();
  v1 = (_QWORD *)OUTLINED_FUNCTION_292(v0);
  v2 = OUTLINED_FUNCTION_184(v1);
  return OUTLINED_FUNCTION_135_1(v2, v3, v4);
}

uint64_t sub_2421F0DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2421F0DD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_49();
  v1 = (_QWORD *)OUTLINED_FUNCTION_292(v0);
  v2 = OUTLINED_FUNCTION_184(v1);
  return OUTLINED_FUNCTION_135_1(v2, v3, v4);
}

uint64_t sub_2421F0E18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_2421F0E30()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v0 = OUTLINED_FUNCTION_49();
  v1 = (_QWORD *)OUTLINED_FUNCTION_330(v0);
  v2 = OUTLINED_FUNCTION_268(v1);
  return OUTLINED_FUNCTION_192(v2, v3);
}

uint64_t sub_2421F0E78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2421F0E94()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_49();
  v1 = (_QWORD *)OUTLINED_FUNCTION_292(v0);
  v2 = OUTLINED_FUNCTION_184(v1);
  return OUTLINED_FUNCTION_135_1(v2, v3, v4);
}

uint64_t sub_2421F0EDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 + 56) = a4;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = v4;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_2421F0EFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD, _QWORD, _QWORD, _QWORD);

  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_2421F0F64;
  return v3(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_2421F0F64()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421F0F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_2421F0FB4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = (_QWORD *)OUTLINED_FUNCTION_49();
  v1 = OUTLINED_FUNCTION_327(v0);
  return OUTLINED_FUNCTION_325(v1, v2, v3, v4);
}

uint64_t sub_2421F0FFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_2421F1014()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v0 = OUTLINED_FUNCTION_49();
  v1 = (_QWORD *)OUTLINED_FUNCTION_330(v0);
  v2 = OUTLINED_FUNCTION_268(v1);
  return OUTLINED_FUNCTION_192(v2, v3);
}

uint64_t sub_2421F105C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_2421F1074()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v0 = OUTLINED_FUNCTION_49();
  v1 = (_QWORD *)OUTLINED_FUNCTION_330(v0);
  v2 = OUTLINED_FUNCTION_268(v1);
  return OUTLINED_FUNCTION_192(v2, v3);
}

uint64_t sub_2421F10BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2421F10D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_49();
  v1 = (_QWORD *)OUTLINED_FUNCTION_292(v0);
  v2 = OUTLINED_FUNCTION_184(v1);
  return OUTLINED_FUNCTION_135_1(v2, v3, v4);
}

uint64_t sub_2421F1120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2421F113C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_49();
  v1 = (_QWORD *)OUTLINED_FUNCTION_292(v0);
  v2 = OUTLINED_FUNCTION_184(v1);
  return OUTLINED_FUNCTION_135_1(v2, v3, v4);
}

uint64_t sub_2421F1184(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2421F11A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_49();
  v1 = (_QWORD *)OUTLINED_FUNCTION_292(v0);
  v2 = OUTLINED_FUNCTION_184(v1);
  return OUTLINED_FUNCTION_135_1(v2, v3, v4);
}

uint64_t sub_2421F11E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2421F1204()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_49();
  v1 = (_QWORD *)OUTLINED_FUNCTION_292(v0);
  v2 = OUTLINED_FUNCTION_184(v1);
  return OUTLINED_FUNCTION_135_1(v2, v3, v4);
}

uint64_t sub_2421F124C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2421F1268()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_49();
  v1 = (_QWORD *)OUTLINED_FUNCTION_292(v0);
  v2 = OUTLINED_FUNCTION_184(v1);
  return OUTLINED_FUNCTION_135_1(v2, v3, v4);
}

uint64_t sub_2421F12B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2421F12CC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_49();
  v1 = (_QWORD *)OUTLINED_FUNCTION_292(v0);
  v2 = OUTLINED_FUNCTION_184(v1);
  return OUTLINED_FUNCTION_135_1(v2, v3, v4);
}

uint64_t sub_2421F1314(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_2421F132C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v0 = OUTLINED_FUNCTION_49();
  v1 = (_QWORD *)OUTLINED_FUNCTION_330(v0);
  v2 = OUTLINED_FUNCTION_268(v1);
  return OUTLINED_FUNCTION_192(v2, v3);
}

uint64_t sub_2421F1374()
{
  uint64_t v0;

  OUTLINED_FUNCTION_374();
  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421F139C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_2421F13B4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v0 = OUTLINED_FUNCTION_49();
  v1 = (_QWORD *)OUTLINED_FUNCTION_330(v0);
  v2 = OUTLINED_FUNCTION_268(v1);
  return OUTLINED_FUNCTION_192(v2, v3);
}

uint64_t sub_2421F13FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_2421F1418()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = (_QWORD *)OUTLINED_FUNCTION_49();
  v1 = OUTLINED_FUNCTION_327(v0);
  return OUTLINED_FUNCTION_325(v1, v2, v3, v4);
}

uint64_t sub_2421F1460(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2421F147C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = OUTLINED_FUNCTION_49();
  v1 = (_QWORD *)OUTLINED_FUNCTION_292(v0);
  v2 = OUTLINED_FUNCTION_184(v1);
  return OUTLINED_FUNCTION_135_1(v2, v3, v4);
}

uint64_t sub_2421F14C4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2421F14F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_2421F1510()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v0 = OUTLINED_FUNCTION_49();
  v1 = (_QWORD *)OUTLINED_FUNCTION_330(v0);
  v2 = OUTLINED_FUNCTION_268(v1);
  return OUTLINED_FUNCTION_192(v2, v3);
}

uint64_t ModelXPCSender.cancelRequest(id:sessionID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v3[6] = type metadata accessor for ModelXPCRequest.CancelRequest(0);
  v3[7] = OUTLINED_FUNCTION_127_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  v3[8] = OUTLINED_FUNCTION_278();
  v3[9] = OUTLINED_FUNCTION_297();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421F15B8()
{
  NSObject *v0;
  _QWORD *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  sub_242213618(v1[3], v1[9], &qword_2543A7848);
  sub_242272494();
  v2 = OUTLINED_FUNCTION_367();
  if (os_log_type_enabled(v0, v2))
  {
    v3 = v1[9];
    v4 = (uint8_t *)OUTLINED_FUNCTION_10();
    v16 = OUTLINED_FUNCTION_10();
    *(_DWORD *)v4 = 136315138;
    OUTLINED_FUNCTION_359(v3, v5, &qword_2543A7848);
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    v6 = OUTLINED_FUNCTION_349();
    OUTLINED_FUNCTION_304(v6);
    v1[2] = OUTLINED_FUNCTION_336(v7, v8, &v16);
    OUTLINED_FUNCTION_54_4();
    OUTLINED_FUNCTION_183();
    OUTLINED_FUNCTION_304(v3);
    OUTLINED_FUNCTION_53(&dword_2421B5000, v0, v2, "Sending CancelRequest for request %s", v4);
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_2();
  }

  OUTLINED_FUNCTION_142_1(v9, &qword_2543A7848);
  v11 = v1[6];
  v10 = v1[7];
  v12 = v1[4];
  OUTLINED_FUNCTION_359(v1[3], v13, &qword_2543A7848);
  sub_242213618(v12, v10 + *(int *)(v11 + 20), &qword_2543A7850);
  v14 = (_QWORD *)swift_task_alloc();
  v1[10] = v14;
  *v14 = v1;
  v14[1] = sub_2421F1784;
  return sub_2421F1120((uint64_t)v14, v1[7]);
}

uint64_t sub_2421F1784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_153();
  *(_QWORD *)(v1 + 88) = v0;
  v2 = swift_task_dealloc();
  OUTLINED_FUNCTION_314(v2, type metadata accessor for ModelXPCRequest.CancelRequest);
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421F17E0()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_360();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_9_3(v0);
}

uint64_t sub_2421F180C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_360();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  return OUTLINED_FUNCTION_9_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ModelXPCSender.createSession(supportedAssetBundleIdentifiers:useCaseIdentifier:onBehalfOfPID:parentOfOnBehalfOfPID:containsSensitiveData:loggingIdentifier:id:alreadyLockedInferenceProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v9 + 88) = v13;
  *(_QWORD *)(v9 + 96) = v8;
  *(_QWORD *)(v9 + 72) = a8;
  *(_QWORD *)(v9 + 80) = v12;
  *(_BYTE *)(v9 + 192) = a7;
  *(_QWORD *)(v9 + 56) = a5;
  *(_QWORD *)(v9 + 64) = a6;
  *(_QWORD *)(v9 + 40) = a3;
  *(_QWORD *)(v9 + 48) = a4;
  *(_QWORD *)(v9 + 24) = a1;
  *(_QWORD *)(v9 + 32) = a2;
  *(_QWORD *)(v9 + 104) = type metadata accessor for ModelXPCRequest.CreateSessionRequest(0);
  *(_QWORD *)(v9 + 112) = OUTLINED_FUNCTION_127_1();
  type metadata accessor for ModelXPCRequest.CreateSessionRequest.Response(0);
  *(_QWORD *)(v9 + 120) = OUTLINED_FUNCTION_127_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  *(_QWORD *)(v9 + 128) = OUTLINED_FUNCTION_278();
  *(_QWORD *)(v9 + 136) = OUTLINED_FUNCTION_297();
  v10 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)(v9 + 144) = *(_OWORD *)v14;
  *(_OWORD *)(v9 + 160) = v10;
  *(_BYTE *)(v9 + 193) = *(_BYTE *)(v14 + 32);
  OUTLINED_FUNCTION_29();
  return swift_task_switch();
}

uint64_t sub_2421F18E0()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_123_2();
  v33 = v3;
  v34 = v4;
  v32 = v1;
  if ((sub_242272890() & 1) != 0)
  {
    sub_242213618(*(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 136), &qword_2543A7850);
    sub_242272494();
    v5 = OUTLINED_FUNCTION_367();
    v6 = OUTLINED_FUNCTION_352(v5);
    v7 = *(_QWORD *)(v1 + 136);
    if (v6)
    {
      v8 = (uint8_t *)OUTLINED_FUNCTION_10();
      v31 = OUTLINED_FUNCTION_10();
      *(_DWORD *)v8 = 136315138;
      OUTLINED_FUNCTION_359(v7, v9, &qword_2543A7850);
      _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
      v10 = OUTLINED_FUNCTION_349();
      OUTLINED_FUNCTION_304(v10);
      *(_QWORD *)(v1 + 16) = OUTLINED_FUNCTION_336(v11, v12, &v31);
      OUTLINED_FUNCTION_54_4();
      OUTLINED_FUNCTION_183();
      OUTLINED_FUNCTION_304(v7);
      OUTLINED_FUNCTION_53(&dword_2421B5000, v0, v2, "Task for create session %s cancelled before sending", v8);
      OUTLINED_FUNCTION_30();
      OUTLINED_FUNCTION_2();
    }

    sub_242213420(v7, &qword_2543A7850);
    OUTLINED_FUNCTION_68_1();
    sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_338();
    swift_willThrow();
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_37();
    OUTLINED_FUNCTION_43();
    return OUTLINED_FUNCTION_16_7(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    v29 = *(_QWORD *)(v1 + 160);
    v30 = *(_QWORD *)(v1 + 168);
    v27 = *(_QWORD *)(v1 + 144);
    v28 = *(_QWORD *)(v1 + 152);
    v13 = *(_QWORD *)(v1 + 104);
    v14 = *(_QWORD *)(v1 + 112);
    v15 = *(_QWORD *)(v1 + 80);
    v25 = *(_BYTE *)(v1 + 192);
    v16 = *(_QWORD *)(v1 + 64);
    v26 = *(_QWORD *)(v1 + 72);
    v18 = *(_QWORD *)(v1 + 48);
    v17 = *(_QWORD *)(v1 + 56);
    v20 = *(_QWORD *)(v1 + 32);
    v19 = *(_QWORD *)(v1 + 40);
    v21 = *(_BYTE *)(v1 + 193);
    sub_242213618(*(_QWORD *)(v1 + 88), v14 + *(int *)(v13 + 40), &qword_2543A7850);
    *(_QWORD *)v14 = v20;
    *(_QWORD *)(v14 + 8) = v19;
    *(_QWORD *)(v14 + 16) = v18;
    *(_QWORD *)(v14 + 24) = v17;
    *(_QWORD *)(v14 + 32) = v16;
    *(_BYTE *)(v14 + 40) = v25;
    *(_QWORD *)(v14 + 48) = v26;
    *(_QWORD *)(v14 + 56) = v15;
    v22 = v14 + *(int *)(v13 + 44);
    *(_QWORD *)v22 = v27;
    *(_QWORD *)(v22 + 8) = v28;
    *(_QWORD *)(v22 + 16) = v29;
    *(_QWORD *)(v22 + 24) = v30;
    *(_BYTE *)(v22 + 32) = v21;
    sub_242272644();
    sub_242272644();
    sub_242272644();
    sub_242211358(v27, v28);
    v23 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 176) = v23;
    *v23 = v1;
    v23[1] = sub_2421F1B88;
    return sub_2421F1184(*(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 112));
  }
}

uint64_t sub_2421F1B88()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 184) = v0;
  swift_task_dealloc();
  sub_2421D3DF4(*(_QWORD *)(v2 + 112), type metadata accessor for ModelXPCRequest.CreateSessionRequest);
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421F1BF0()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_242213644(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 24), &qword_2543A7850);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_7_2(v1);
}

uint64_t sub_2421F1C48()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ModelXPCSender.deleteSession(id:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_152_0(a1);
  type metadata accessor for ModelXPCRequest.DeleteSessionRequest(v2);
  *(_QWORD *)(v1 + 32) = OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421F1CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_344();
  sub_242213618(v1, v2, &qword_2543A7850);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v3;
  v4 = OUTLINED_FUNCTION_308(v3, (uint64_t)sub_2421F1D18);
  return sub_2421F11E8((uint64_t)v4, v5);
}

uint64_t sub_2421F1D18()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_177_0();
  OUTLINED_FUNCTION_314(v0, type metadata accessor for ModelXPCRequest.DeleteSessionRequest);
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_42();
}

uint64_t ModelXPCSender.cancelSession(id:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_152_0(a1);
  type metadata accessor for ModelXPCRequest.CancelSessionRequest(v2);
  *(_QWORD *)(v1 + 32) = OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421F1D98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_344();
  sub_242213618(v1, v2, &qword_2543A7850);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v3;
  v4 = OUTLINED_FUNCTION_308(v3, (uint64_t)sub_2421F1DE8);
  return sub_2421F124C((uint64_t)v4, v5);
}

uint64_t sub_2421F1DE8()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_177_0();
  OUTLINED_FUNCTION_314(v0, type metadata accessor for ModelXPCRequest.CancelSessionRequest);
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421F1E30()
{
  uint64_t (*v0)(void);

  swift_task_dealloc();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_8(v0);
}

uint64_t sub_2421F1E58()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ModelXPCSender.prewarmSession(id:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_152_0(a1);
  type metadata accessor for ModelXPCRequest.PrewarmSession(v2);
  *(_QWORD *)(v1 + 32) = OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421F1EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_344();
  sub_242213618(v1, v2, &qword_2543A7850);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v3;
  v4 = OUTLINED_FUNCTION_308(v3, (uint64_t)sub_2421F1F0C);
  return sub_2421F12B0((uint64_t)v4, v5);
}

uint64_t sub_2421F1F0C()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_177_0();
  OUTLINED_FUNCTION_314(v0, type metadata accessor for ModelXPCRequest.PrewarmSession);
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_42();
}

uint64_t ModelXPCSender.acquireAssertion(assertion:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_152_0(a1);
  type metadata accessor for ModelXPCRequest.AcquireRequest(v2);
  *(_QWORD *)(v1 + 32) = OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421F1F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_344();
  sub_2421CE528(v1, v2, type metadata accessor for Assertion.DaemonRep);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v3;
  v4 = OUTLINED_FUNCTION_308(v3, (uint64_t)sub_2421F1FDC);
  return sub_2421F0D50((uint64_t)v4, v5);
}

uint64_t sub_2421F1FDC()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_177_0();
  OUTLINED_FUNCTION_314(v0, type metadata accessor for ModelXPCRequest.AcquireRequest);
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_42();
}

uint64_t ModelXPCSender.releaseAssertion(id:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_152_0(a1);
  type metadata accessor for ModelXPCRequest.ReleaseRequest(v2);
  *(_QWORD *)(v1 + 32) = OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421F205C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_344();
  sub_242213618(v1, v2, (uint64_t *)&unk_2543AA0E0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v3;
  v4 = OUTLINED_FUNCTION_308(v3, (uint64_t)sub_2421F20AC);
  return sub_2421F0DB4((uint64_t)v4, v5);
}

uint64_t sub_2421F20AC()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_177_0();
  OUTLINED_FUNCTION_314(v0, type metadata accessor for ModelXPCRequest.ReleaseRequest);
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_42();
}

uint64_t ModelXPCSender.fetchAllAssertions()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  v2 = OUTLINED_FUNCTION_9_1(v1);
  return sub_2421F0E18(v2);
}

uint64_t sub_2421F213C()
{
  OUTLINED_FUNCTION_271();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t ModelXPCSender.restoreAssertions(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2421F2188()
{
  uint64_t v0;
  _QWORD *v1;

  sub_242272644();
  v1 = (_QWORD *)OUTLINED_FUNCTION_297();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_2421F21D8;
  return sub_2421F0E78((uint64_t)v1, *(_QWORD *)(v0 + 16));
}

uint64_t sub_2421F21D8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_374();
  OUTLINED_FUNCTION_153();
  *(_QWORD *)(v1 + 40) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421F2228()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ModelXPCSender.fetchAllAssetInfo()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  v2 = OUTLINED_FUNCTION_9_1(v1);
  return sub_2421F1314(v2);
}

uint64_t sub_2421F227C()
{
  OUTLINED_FUNCTION_271();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421F22B8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_2421F22C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ModelXPCSender.fetchDynamicAssetInfo()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  v2 = OUTLINED_FUNCTION_9_1(v1);
  return sub_2421F139C(v2);
}

uint64_t ModelXPCSender.fetchEffectivePolicy()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 56) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v2;
  OUTLINED_FUNCTION_9_1(v2);
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_342(v3, v4, v5);
}

uint64_t sub_2421F2364()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_153();
  *(_QWORD *)(v1 + 72) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421F23B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t result;

  v1 = *(unsigned __int8 *)(v0 + 16);
  if (v1 == 2)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 24);
    v3 = *(_QWORD *)(v0 + 32);
    v5 = *(_OWORD *)(v0 + 40);
    *(_BYTE *)v2 = v1 & 1;
    *(_QWORD *)(v2 + 8) = v4;
    *(_BYTE *)(v2 + 16) = v3;
    *(_OWORD *)(v2 + 24) = v5;
    return OUTLINED_FUNCTION_191();
  }
  return result;
}

uint64_t ModelXPCSender.fetchPolicy(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_2421F23FC()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[9];
  sub_242272644();
  v2 = (_QWORD *)OUTLINED_FUNCTION_175();
  v0[11] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_2421F2468;
  return OUTLINED_FUNCTION_342((uint64_t)(v0 + 2), v0[8], v1);
}

uint64_t sub_2421F2468()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421F24C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  OUTLINED_FUNCTION_326();
  v1 = *(unsigned __int8 *)(v0 + 16);
  if (v1 == 2)
  {
    v3 = *(_QWORD *)(v0 + 64);
    v2 = *(_QWORD *)(v0 + 72);
    OUTLINED_FUNCTION_68_1();
    sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    OUTLINED_FUNCTION_53_1();
    *v4 = v3;
    v4[1] = v2;
    swift_storeEnumTagMultiPayload();
    sub_242272644();
    swift_willThrow();
    v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 24);
    v7 = *(_QWORD *)(v0 + 32);
    v9 = *(_OWORD *)(v0 + 40);
    *(_BYTE *)v6 = v1 & 1;
    *(_QWORD *)(v6 + 8) = v8;
    *(_BYTE *)(v6 + 16) = v7;
    *(_OWORD *)(v6 + 24) = v9;
    v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  }
  return v5();
}

uint64_t sub_2421F2594()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ModelXPCSender.dumpState()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 128) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 136) = v2;
  v3 = OUTLINED_FUNCTION_9_1(v2);
  return sub_2421F105C(v3);
}

uint64_t sub_2421F25EC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_153();
  *(_QWORD *)(v1 + 144) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421F2638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_BYTE *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_BYTE *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(_OWORD *)(v0 + 48);
  v8 = *(_OWORD *)(v0 + 64);
  v9 = *(_OWORD *)(v0 + 80);
  v10 = *(_OWORD *)(v0 + 96);
  *(_QWORD *)v1 = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v1 + 8) = v3;
  *(_QWORD *)(v1 + 16) = v4;
  *(_BYTE *)(v1 + 24) = v5;
  *(_OWORD *)(v1 + 32) = v7;
  *(_OWORD *)(v1 + 48) = v8;
  *(_OWORD *)(v1 + 64) = v9;
  *(_OWORD *)(v1 + 80) = v10;
  *(_QWORD *)(v1 + 96) = v6;
  *(_QWORD *)(v1 + 104) = v2;
  return OUTLINED_FUNCTION_191();
}

uint64_t sub_2421F2678()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ModelXPCSender.fetchModelInstance(session:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  type metadata accessor for ModelXPCRequest.FetchModelInstance(0);
  v3[14] = OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421F26C4()
{
  uint64_t *v0;
  _QWORD *v1;

  sub_242213618(v0[12], v0[14], &qword_2543A7850);
  v1 = (_QWORD *)swift_task_alloc();
  v0[15] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_2421F272C;
  return sub_2421F1460((uint64_t)(v0 + 2), v0[14]);
}

uint64_t sub_2421F272C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_153();
  *(_QWORD *)(v1 + 128) = v0;
  v2 = swift_task_dealloc();
  OUTLINED_FUNCTION_314(v2, type metadata accessor for ModelXPCRequest.FetchModelInstance);
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421F2784()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  __int128 v6;
  uint64_t (*v7)(void);

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_OWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_BYTE *)(v0 + 80);
  v6 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)v1 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v4;
  *(_OWORD *)(v1 + 48) = v6;
  *(_BYTE *)(v1 + 64) = v5;
  swift_task_dealloc();
  v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_8(v7);
}

uint64_t sub_2421F27D0()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ModelXPCSender.setAssetsHaveUpdated()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421F2840;
  return sub_2421F14F8((uint64_t)v1);
}

uint64_t sub_2421F2840()
{
  OUTLINED_FUNCTION_307();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2421F287C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void ModelXPCSender.deinit()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_3_3(v0);
  swift_release();
  OUTLINED_FUNCTION_34();
}

uint64_t ModelXPCSender.__deallocating_deinit()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_3_3(v0);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2421F2910(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v13;
  *v13 = v8;
  v13[1] = sub_2421C71E8;
  return ModelXPCSender.executeRequest(asStream:clientData:modelBundleID:requiredAssetIDs:id:sessionID:taskPriority:loggingIdentifier:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_2421F29C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2421C71E8;
  return ModelXPCSender.cancelRequest(id:sessionID:)(a1, a2);
}

uint64_t sub_2421F2A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v14;

  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v14;
  *v14 = v8;
  v14[1] = sub_2421C71E8;
  return ModelXPCSender.createSession(supportedAssetBundleIdentifiers:useCaseIdentifier:onBehalfOfPID:parentOfOnBehalfOfPID:containsSensitiveData:loggingIdentifier:id:alreadyLockedInferenceProvider:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_2421F2AE0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421C71E8;
  return ModelXPCSender.deleteSession(id:)(a1);
}

uint64_t sub_2421F2B30(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421C71E8;
  return ModelXPCSender.cancelSession(id:)(a1);
}

uint64_t sub_2421F2B80(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421C71E8;
  return ModelXPCSender.prewarmSession(id:)(a1);
}

uint64_t sub_2421F2BD0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421C71E8;
  return ModelXPCSender.acquireAssertion(assertion:)(a1);
}

uint64_t sub_2421F2C20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421C71E8;
  return ModelXPCSender.releaseAssertion(id:)(a1);
}

uint64_t sub_2421F2C70()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_242213698;
  return ModelXPCSender.fetchAllAssertions()();
}

uint64_t sub_2421F2CB8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421C71E8;
  return ModelXPCSender.restoreAssertions(_:)(a1);
}

uint64_t sub_2421F2D08()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421F2D50;
  return ModelXPCSender.fetchAllAssetInfo()();
}

uint64_t sub_2421F2D50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_3();
  if (!v1)
    v4 = a1;
  return OUTLINED_FUNCTION_324(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_2421F2D90()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_242213698;
  return ModelXPCSender.fetchDynamicAssetInfo()();
}

uint64_t sub_2421F2DD8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421C71E8;
  return ModelXPCSender.fetchEffectivePolicy()(a1);
}

uint64_t sub_2421F2E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2421C71E8;
  return ModelXPCSender.fetchPolicy(_:)(a1, a2, a3);
}

uint64_t sub_2421F2E98(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2421C71E8;
  return ModelXPCSender.loadAssetBundle(_:dynamicMode:)(a1, a2, a3);
}

uint64_t sub_2421F2F00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2421C71E8;
  return ModelXPCSender.holdAssetBundle(_:)(a1, a2);
}

uint64_t sub_2421F2F60(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421C71E8;
  return ModelXPCSender.dumpState()(a1);
}

uint64_t sub_2421F2FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2421C60C4;
  return ModelXPCSender.fetchModelInstance(session:)(a1, a2);
}

uint64_t sub_2421F3018()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421C71E8;
  return ModelXPCSender.setAssetsHaveUpdated()();
}

uint64_t sub_2421F3060(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = sub_2422725A8();
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = type metadata accessor for ModelManagerError();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = type metadata accessor for ModelXPCRequest(0);
  v3[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9FF0);
  v3[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421F318C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_33_4();
  *(_QWORD *)(v1 + 224) = OUTLINED_FUNCTION_222();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_94_2();
  }
  v2 = OUTLINED_FUNCTION_264();
  OUTLINED_FUNCTION_287(v2, v3, type metadata accessor for ModelXPCRequest.AcquireRequest);
  OUTLINED_FUNCTION_29_1();
  swift_storeEnumTagMultiPayload();
  v4 = OUTLINED_FUNCTION_108_2();
  v5 = (_QWORD *)OUTLINED_FUNCTION_293(v4);
  v6 = OUTLINED_FUNCTION_183_0(v5);
  return OUTLINED_FUNCTION_21_4(v6, v7, v8);
}

#error "2421F36F8: call analysis failed (funcsize=175)"

uint64_t sub_2421F3464()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_99_2();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_2421F35F4()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421F35FC()
{
  void *v0;

  JUMPOUT(0x2421F3754);
}

void sub_2421F371C()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_2421F373C()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421F3744()
{
  void *v0;

  JUMPOUT(0x2421F37A0);
}

uint64_t sub_2421F3818()
{
  uint64_t v0;

  OUTLINED_FUNCTION_101_3();
  v0 = OUTLINED_FUNCTION_289();
  sub_2421D3DF4(v0, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421F3864(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  OUTLINED_FUNCTION_123_2();
  v32 = OUTLINED_FUNCTION_170_0();
  sub_2421EFF04(v32, &qword_2543A9FF0);
  if (v28)
  {
    v33 = OUTLINED_FUNCTION_181_0();
    OUTLINED_FUNCTION_150_0(v33, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v34, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v35 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v35, v36);
    v37 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v37, &qword_2543A9FF0);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_94_3();
  OUTLINED_FUNCTION_142_1(v38, &qword_2543A9FF0);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v39 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v39);
}

void sub_2421F3EC0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_242();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 240);
  OUTLINED_FUNCTION_94_2();
}

#error "2421F4120: call analysis failed (funcsize=104)"

uint64_t sub_2421F44FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = sub_2422725A8();
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = type metadata accessor for ModelManagerError();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = type metadata accessor for ModelXPCRequest(0);
  v3[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9998);
  v3[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421F4628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_33_4();
  *(_QWORD *)(v1 + 224) = OUTLINED_FUNCTION_222();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_94_2();
  }
  v2 = OUTLINED_FUNCTION_264();
  OUTLINED_FUNCTION_287(v2, v3, type metadata accessor for ModelXPCRequest.ReleaseRequest);
  OUTLINED_FUNCTION_29_1();
  swift_storeEnumTagMultiPayload();
  v4 = OUTLINED_FUNCTION_108_2();
  v5 = (_QWORD *)OUTLINED_FUNCTION_293(v4);
  v6 = OUTLINED_FUNCTION_183_0(v5);
  return OUTLINED_FUNCTION_21_4(v6, v7, v8);
}

#error "2421F4B94: call analysis failed (funcsize=175)"

uint64_t sub_2421F4900()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_99_2();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_2421F4A90()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421F4A98()
{
  void *v0;

  JUMPOUT(0x2421F4BF0);
}

void sub_2421F4BB8()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_2421F4BD8()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421F4BE0()
{
  void *v0;

  JUMPOUT(0x2421F4C3CLL);
}

uint64_t sub_2421F4CB4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_101_3();
  v0 = OUTLINED_FUNCTION_289();
  sub_2421D3DF4(v0, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421F4D00(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  OUTLINED_FUNCTION_123_2();
  v32 = OUTLINED_FUNCTION_170_0();
  sub_2421EFF04(v32, &qword_2543A9998);
  if (v28)
  {
    v33 = OUTLINED_FUNCTION_181_0();
    OUTLINED_FUNCTION_150_0(v33, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v34, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v35 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v35, v36);
    v37 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v37, &qword_2543A9998);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_94_3();
  OUTLINED_FUNCTION_142_1(v38, &qword_2543A9998);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v39 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v39);
}

void sub_2421F535C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_242();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 240);
  OUTLINED_FUNCTION_94_2();
}

#error "2421F55BC: call analysis failed (funcsize=104)"

uint64_t sub_2421F5998(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[10] = a1;
  v2[11] = v1;
  v3 = sub_2422725A8();
  v2[12] = v3;
  v2[13] = *(_QWORD *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = type metadata accessor for ModelManagerError();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = type metadata accessor for ModelXPCRequest(0);
  v2[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1170);
  v2[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421F5AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_33_4();
  *(_QWORD *)(v1 + 216) = OUTLINED_FUNCTION_222();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_94_2();
  }
  OUTLINED_FUNCTION_340();
  swift_storeEnumTagMultiPayload();
  v2 = OUTLINED_FUNCTION_108_2();
  v3 = (_QWORD *)OUTLINED_FUNCTION_329(v2);
  *v3 = v1;
  v3[1] = sub_2421F6158;
  OUTLINED_FUNCTION_250();
  return OUTLINED_FUNCTION_21_4(v4, v5, v6);
}

#error "2421F6038: call analysis failed (funcsize=175)"

uint64_t sub_2421F5DA4()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_171_0();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_2421F5F34()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421F5F3C()
{
  void *v0;

  JUMPOUT(0x2421F6094);
}

void sub_2421F605C()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_2421F607C()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421F6084()
{
  void *v0;

  JUMPOUT(0x2421F60E0);
}

uint64_t sub_2421F6158()
{
  uint64_t v0;

  OUTLINED_FUNCTION_173_0();
  v0 = OUTLINED_FUNCTION_334();
  sub_2421D3DF4(v0, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421F61A4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  OUTLINED_FUNCTION_123_2();
  OUTLINED_FUNCTION_215();
  sub_2421F0388(&qword_2571E1170, v32);
  if (v28)
  {
    v33 = OUTLINED_FUNCTION_267();
    OUTLINED_FUNCTION_150_0(v33, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v34, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v35 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v35, v36);
    v37 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v37, &qword_2571E1170);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_140_0();
  OUTLINED_FUNCTION_142_1(v38, &qword_2571E1170);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v39 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v39);
}

void sub_2421F6818()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_279();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 232);
  OUTLINED_FUNCTION_94_2();
}

#error "2421F6A80: call analysis failed (funcsize=106)"

uint64_t sub_2421F6E78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = sub_2422725A8();
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = type metadata accessor for ModelManagerError();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = type metadata accessor for ModelXPCRequest(0);
  v3[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1118);
  v3[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421F6FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_33_4();
  *(_QWORD *)(v1 + 224) = OUTLINED_FUNCTION_222();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_94_2();
  }
  **(_QWORD **)(v1 + 208) = *(_QWORD *)(v1 + 88);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_261();
  v2 = OUTLINED_FUNCTION_175();
  v3 = (_QWORD *)OUTLINED_FUNCTION_293(v2);
  v4 = OUTLINED_FUNCTION_183_0(v3);
  return OUTLINED_FUNCTION_21_4(v4, v5, v6);
}

#error "2421F7510: call analysis failed (funcsize=174)"

uint64_t sub_2421F727C()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_99_2();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_2421F740C()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421F7414()
{
  void *v0;

  JUMPOUT(0x2421F756CLL);
}

void sub_2421F7534()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_2421F7554()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421F755C()
{
  void *v0;

  JUMPOUT(0x2421F75B8);
}

uint64_t sub_2421F7630()
{
  uint64_t v0;

  OUTLINED_FUNCTION_101_3();
  v0 = OUTLINED_FUNCTION_289();
  sub_2421D3DF4(v0, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421F767C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  OUTLINED_FUNCTION_123_2();
  v32 = OUTLINED_FUNCTION_170_0();
  sub_2421EFF04(v32, &qword_2571E1118);
  if (v28)
  {
    v33 = OUTLINED_FUNCTION_181_0();
    OUTLINED_FUNCTION_150_0(v33, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v34, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v35 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v35, v36);
    v37 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v37, &qword_2571E1118);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_94_3();
  OUTLINED_FUNCTION_142_1(v38, &qword_2571E1118);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v39 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v39);
}

void sub_2421F7CDC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_242();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 240);
  OUTLINED_FUNCTION_94_2();
}

#error "2421F7F3C: call analysis failed (funcsize=104)"

uint64_t sub_2421F8334(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + 256) = a4;
  *(_QWORD *)(v5 + 96) = a3;
  *(_QWORD *)(v5 + 104) = v4;
  *(_QWORD *)(v5 + 80) = a1;
  *(_QWORD *)(v5 + 88) = a2;
  v6 = sub_2422725A8();
  *(_QWORD *)(v5 + 112) = v6;
  *(_QWORD *)(v5 + 120) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 128) = swift_task_alloc();
  *(_QWORD *)(v5 + 136) = swift_task_alloc();
  *(_QWORD *)(v5 + 144) = swift_task_alloc();
  *(_QWORD *)(v5 + 152) = swift_task_alloc();
  *(_QWORD *)(v5 + 160) = type metadata accessor for ModelManagerError();
  *(_QWORD *)(v5 + 168) = swift_task_alloc();
  *(_QWORD *)(v5 + 176) = swift_task_alloc();
  *(_QWORD *)(v5 + 184) = swift_task_alloc();
  *(_QWORD *)(v5 + 192) = swift_task_alloc();
  *(_QWORD *)(v5 + 200) = swift_task_alloc();
  *(_QWORD *)(v5 + 208) = type metadata accessor for ModelXPCRequest(0);
  *(_QWORD *)(v5 + 216) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E15A0);
  *(_QWORD *)(v5 + 224) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421F8464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_33_4();
  *(_QWORD *)(v1 + 232) = OUTLINED_FUNCTION_222();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_94_2();
  }
  v2 = *(_QWORD *)(v1 + 216);
  v3 = *(_BYTE *)(v1 + 256);
  v4 = *(_QWORD *)(v1 + 96);
  *(_QWORD *)v2 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v2 + 8) = v4;
  *(_BYTE *)(v2 + 16) = v3;
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_261();
  v5 = (_QWORD *)OUTLINED_FUNCTION_175();
  *(_QWORD *)(v1 + 240) = v5;
  *v5 = v1;
  v5[1] = sub_2421F8B34;
  OUTLINED_FUNCTION_250();
  return OUTLINED_FUNCTION_21_4(v6, v7, v8);
}

#error "2421F89F8: call analysis failed (funcsize=175)"

uint64_t sub_2421F8768()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_219();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_2421F88F8()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421F8900()
{
  void *v0;

  JUMPOUT(0x2421F8A54);
}

void sub_2421F8A1C()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_2421F8A3C()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421F8A44()
{
  void *v0;

  JUMPOUT(0x2421F8AA0);
}

uint64_t sub_2421F8B34()
{
  uint64_t v0;

  OUTLINED_FUNCTION_270();
  sub_2421D3DF4(*(_QWORD *)(v0 + 216), type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421F8B84(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  OUTLINED_FUNCTION_123_2();
  v32 = OUTLINED_FUNCTION_299();
  sub_2421EFF04(v32, &qword_2571E15A0);
  if (v28)
  {
    v33 = OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_150_0(v33, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v34, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v35 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v35, v36);
    v37 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v37, &qword_2571E15A0);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_262();
  OUTLINED_FUNCTION_142_1(v38, &qword_2571E15A0);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v39 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v39);
}

void sub_2421F9210()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_343();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 248);
  OUTLINED_FUNCTION_94_2();
}

#error "2421F9488: call analysis failed (funcsize=117)"

uint64_t sub_2421F98A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  v5 = sub_2422725A8();
  v4[14] = v5;
  v4[15] = *(_QWORD *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  v4[20] = type metadata accessor for ModelManagerError();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = type metadata accessor for ModelXPCRequest(0);
  v4[27] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1548);
  v4[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421F99CC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_33_4();
  v1[29] = OUTLINED_FUNCTION_222();
  if (v0)
  {
    v1[2] = v0;
    OUTLINED_FUNCTION_94_2();
  }
  OUTLINED_FUNCTION_370();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_261();
  v2 = (_QWORD *)OUTLINED_FUNCTION_175();
  v1[30] = v2;
  *v2 = v1;
  v2[1] = sub_2421FA088;
  OUTLINED_FUNCTION_250();
  return OUTLINED_FUNCTION_21_4(v3, v4, v5);
}

#error "2421F9F4C: call analysis failed (funcsize=175)"

uint64_t sub_2421F9CBC()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_219();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_2421F9E4C()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421F9E54()
{
  void *v0;

  JUMPOUT(0x2421F9FA8);
}

void sub_2421F9F70()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_2421F9F90()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421F9F98()
{
  void *v0;

  JUMPOUT(0x2421F9FF4);
}

uint64_t sub_2421FA088()
{
  uint64_t v0;

  OUTLINED_FUNCTION_270();
  sub_2421D3DF4(*(_QWORD *)(v0 + 216), type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421FA0D8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  OUTLINED_FUNCTION_123_2();
  v32 = OUTLINED_FUNCTION_299();
  sub_2421EFF04(v32, &qword_2571E1548);
  if (v28)
  {
    v33 = OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_150_0(v33, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v34, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v35 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v35, v36);
    v37 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v37, &qword_2571E1548);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_262();
  OUTLINED_FUNCTION_142_1(v38, &qword_2571E1548);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v39 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v39);
}

void sub_2421FA764()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_343();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 248);
  OUTLINED_FUNCTION_94_2();
}

#error "2421FA9DC: call analysis failed (funcsize=117)"

uint64_t sub_2421FADF4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[10] = a1;
  v2[11] = v1;
  v3 = sub_2422725A8();
  v2[12] = v3;
  v2[13] = *(_QWORD *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = type metadata accessor for ModelManagerError();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = type metadata accessor for ModelXPCRequest(0);
  v2[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E14F0);
  v2[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421FAF1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_33_4();
  *(_QWORD *)(v1 + 216) = OUTLINED_FUNCTION_222();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_94_2();
  }
  OUTLINED_FUNCTION_340();
  swift_storeEnumTagMultiPayload();
  v2 = OUTLINED_FUNCTION_108_2();
  v3 = (_QWORD *)OUTLINED_FUNCTION_329(v2);
  *v3 = v1;
  v3[1] = sub_2421FB5B4;
  OUTLINED_FUNCTION_250();
  return OUTLINED_FUNCTION_21_4(v4, v5, v6);
}

#error "2421FB494: call analysis failed (funcsize=175)"

uint64_t sub_2421FB200()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_171_0();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_2421FB390()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421FB398()
{
  void *v0;

  JUMPOUT(0x2421FB4F0);
}

void sub_2421FB4B8()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_2421FB4D8()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421FB4E0()
{
  void *v0;

  JUMPOUT(0x2421FB53CLL);
}

uint64_t sub_2421FB5B4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_173_0();
  v0 = OUTLINED_FUNCTION_334();
  sub_2421D3DF4(v0, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421FB600(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  OUTLINED_FUNCTION_123_2();
  v32 = OUTLINED_FUNCTION_215();
  sub_2421EFF04(v32, &qword_2571E14F0);
  if (v28)
  {
    v33 = OUTLINED_FUNCTION_267();
    OUTLINED_FUNCTION_150_0(v33, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v34, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v35 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v35, v36);
    v37 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v37, &qword_2571E14F0);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_140_0();
  OUTLINED_FUNCTION_142_1(v38, &qword_2571E14F0);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v39 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v39);
}

void sub_2421FBC74()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_279();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 232);
  OUTLINED_FUNCTION_94_2();
}

#error "2421FBEDC: call analysis failed (funcsize=106)"

uint64_t sub_2421FC2D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[10] = a1;
  v2[11] = v1;
  v3 = sub_2422725A8();
  v2[12] = v3;
  v2[13] = *(_QWORD *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = type metadata accessor for ModelManagerError();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = type metadata accessor for ModelXPCRequest(0);
  v2[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0FF8);
  v2[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421FC3FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_33_4();
  *(_QWORD *)(v1 + 216) = OUTLINED_FUNCTION_222();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_94_2();
  }
  OUTLINED_FUNCTION_340();
  swift_storeEnumTagMultiPayload();
  v2 = OUTLINED_FUNCTION_108_2();
  v3 = (_QWORD *)OUTLINED_FUNCTION_329(v2);
  *v3 = v1;
  v3[1] = sub_2421FCA94;
  OUTLINED_FUNCTION_250();
  return OUTLINED_FUNCTION_21_4(v4, v5, v6);
}

#error "2421FC974: call analysis failed (funcsize=175)"

uint64_t sub_2421FC6E0()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_171_0();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_2421FC870()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421FC878()
{
  void *v0;

  JUMPOUT(0x2421FC9D0);
}

void sub_2421FC998()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_2421FC9B8()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421FC9C0()
{
  void *v0;

  JUMPOUT(0x2421FCA1CLL);
}

uint64_t sub_2421FCA94()
{
  uint64_t v0;

  OUTLINED_FUNCTION_173_0();
  v0 = OUTLINED_FUNCTION_334();
  sub_2421D3DF4(v0, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421FCAE0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void);

  OUTLINED_FUNCTION_123_2();
  v32 = OUTLINED_FUNCTION_215();
  sub_2421EFFE8(v32, v33);
  if (v28)
  {
    v34 = OUTLINED_FUNCTION_267();
    OUTLINED_FUNCTION_150_0(v34, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v35, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v36 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v36, v37);
    v38 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v38, &qword_2571E0FF8);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_140_0();
  OUTLINED_FUNCTION_142_1(v39, &qword_2571E0FF8);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v40 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v40);
}

void sub_2421FD14C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_279();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 232);
  OUTLINED_FUNCTION_94_2();
}

#error "2421FD3B4: call analysis failed (funcsize=106)"

uint64_t sub_2421FD7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = sub_2422725A8();
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = type metadata accessor for ModelManagerError();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = type metadata accessor for ModelXPCRequest(0);
  v3[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E13D0);
  v3[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421FD8D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_33_4();
  *(_QWORD *)(v1 + 224) = OUTLINED_FUNCTION_222();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_94_2();
  }
  v2 = OUTLINED_FUNCTION_264();
  OUTLINED_FUNCTION_287(v2, v3, type metadata accessor for ModelXPCRequest.ExecuteRequest);
  OUTLINED_FUNCTION_29_1();
  swift_storeEnumTagMultiPayload();
  v4 = OUTLINED_FUNCTION_108_2();
  v5 = (_QWORD *)OUTLINED_FUNCTION_293(v4);
  v6 = OUTLINED_FUNCTION_183_0(v5);
  return OUTLINED_FUNCTION_21_4(v6, v7, v8);
}

#error "2421FDE44: call analysis failed (funcsize=175)"

uint64_t sub_2421FDBB0()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_99_2();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_2421FDD40()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421FDD48()
{
  void *v0;

  JUMPOUT(0x2421FDEA0);
}

void sub_2421FDE68()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_2421FDE88()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421FDE90()
{
  void *v0;

  JUMPOUT(0x2421FDEECLL);
}

uint64_t sub_2421FDF64()
{
  uint64_t v0;

  OUTLINED_FUNCTION_101_3();
  v0 = OUTLINED_FUNCTION_289();
  sub_2421D3DF4(v0, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421FDFB0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  OUTLINED_FUNCTION_123_2();
  OUTLINED_FUNCTION_170_0();
  sub_2421F0294(&qword_2571E13D0, type metadata accessor for ModelXPCRequest.ExecuteRequest.Response, v32);
  if (v28)
  {
    v33 = OUTLINED_FUNCTION_181_0();
    OUTLINED_FUNCTION_150_0(v33, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v34, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v35 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v35, v36);
    v37 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v37, &qword_2571E13D0);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_94_3();
  OUTLINED_FUNCTION_142_1(v38, &qword_2571E13D0);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v39 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v39);
}

void sub_2421FE614()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_242();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 240);
  OUTLINED_FUNCTION_94_2();
}

#error "2421FE874: call analysis failed (funcsize=104)"

uint64_t sub_2421FEC50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = sub_2422725A8();
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = type metadata accessor for ModelManagerError();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = type metadata accessor for ModelXPCRequest(0);
  v3[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1378);
  v3[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2421FED7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_33_4();
  *(_QWORD *)(v1 + 224) = OUTLINED_FUNCTION_222();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_94_2();
  }
  v2 = OUTLINED_FUNCTION_264();
  OUTLINED_FUNCTION_287(v2, v3, type metadata accessor for ModelXPCRequest.CancelRequest);
  OUTLINED_FUNCTION_29_1();
  swift_storeEnumTagMultiPayload();
  v4 = OUTLINED_FUNCTION_108_2();
  v5 = (_QWORD *)OUTLINED_FUNCTION_293(v4);
  v6 = OUTLINED_FUNCTION_183_0(v5);
  return OUTLINED_FUNCTION_21_4(v6, v7, v8);
}

#error "2421FF2E8: call analysis failed (funcsize=175)"

uint64_t sub_2421FF054()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_99_2();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_2421FF1E4()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421FF1EC()
{
  void *v0;

  JUMPOUT(0x2421FF344);
}

void sub_2421FF30C()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_2421FF32C()
{
  OUTLINED_FUNCTION_2();
}

void sub_2421FF334()
{
  void *v0;

  JUMPOUT(0x2421FF390);
}

uint64_t sub_2421FF408()
{
  uint64_t v0;

  OUTLINED_FUNCTION_101_3();
  v0 = OUTLINED_FUNCTION_289();
  sub_2421D3DF4(v0, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2421FF454(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  OUTLINED_FUNCTION_123_2();
  v32 = OUTLINED_FUNCTION_170_0();
  sub_2421EFF04(v32, &qword_2571E1378);
  if (v28)
  {
    v33 = OUTLINED_FUNCTION_181_0();
    OUTLINED_FUNCTION_150_0(v33, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v34, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v35 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v35, v36);
    v37 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v37, &qword_2571E1378);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_94_3();
  OUTLINED_FUNCTION_142_1(v38, &qword_2571E1378);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v39 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v39);
}

void sub_2421FFAB0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_242();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 240);
  OUTLINED_FUNCTION_94_2();
}

#error "2421FFD10: call analysis failed (funcsize=104)"

uint64_t sub_2422000EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = sub_2422725A8();
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = type metadata accessor for ModelManagerError();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = type metadata accessor for ModelXPCRequest(0);
  v3[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1320);
  v3[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_242200218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_33_4();
  *(_QWORD *)(v1 + 224) = OUTLINED_FUNCTION_222();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_94_2();
  }
  v2 = OUTLINED_FUNCTION_264();
  OUTLINED_FUNCTION_287(v2, v3, type metadata accessor for ModelXPCRequest.CreateSessionRequest);
  OUTLINED_FUNCTION_29_1();
  swift_storeEnumTagMultiPayload();
  v4 = OUTLINED_FUNCTION_108_2();
  v5 = (_QWORD *)OUTLINED_FUNCTION_293(v4);
  v6 = OUTLINED_FUNCTION_183_0(v5);
  return OUTLINED_FUNCTION_21_4(v6, v7, v8);
}

#error "242200784: call analysis failed (funcsize=175)"

uint64_t sub_2422004F0()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_99_2();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_242200680()
{
  OUTLINED_FUNCTION_2();
}

void sub_242200688()
{
  void *v0;

  JUMPOUT(0x2422007E0);
}

void sub_2422007A8()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_2422007C8()
{
  OUTLINED_FUNCTION_2();
}

void sub_2422007D0()
{
  void *v0;

  JUMPOUT(0x24220082CLL);
}

uint64_t sub_2422008A4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_101_3();
  v0 = OUTLINED_FUNCTION_289();
  sub_2421D3DF4(v0, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2422008F0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  OUTLINED_FUNCTION_123_2();
  OUTLINED_FUNCTION_170_0();
  sub_2421F0294(&qword_2571E1320, type metadata accessor for ModelXPCRequest.CreateSessionRequest.Response, v32);
  if (v28)
  {
    v33 = OUTLINED_FUNCTION_181_0();
    OUTLINED_FUNCTION_150_0(v33, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v34, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v35 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v35, v36);
    v37 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v37, &qword_2571E1320);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_94_3();
  OUTLINED_FUNCTION_142_1(v38, &qword_2571E1320);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v39 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v39);
}

void sub_242200F54()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_242();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 240);
  OUTLINED_FUNCTION_94_2();
}

#error "2422011B4: call analysis failed (funcsize=104)"

uint64_t sub_242201590(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = sub_2422725A8();
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = type metadata accessor for ModelManagerError();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = type metadata accessor for ModelXPCRequest(0);
  v3[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E12C8);
  v3[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2422016BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_33_4();
  *(_QWORD *)(v1 + 224) = OUTLINED_FUNCTION_222();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_94_2();
  }
  v2 = OUTLINED_FUNCTION_264();
  OUTLINED_FUNCTION_287(v2, v3, type metadata accessor for ModelXPCRequest.DeleteSessionRequest);
  OUTLINED_FUNCTION_29_1();
  swift_storeEnumTagMultiPayload();
  v4 = OUTLINED_FUNCTION_108_2();
  v5 = (_QWORD *)OUTLINED_FUNCTION_293(v4);
  v6 = OUTLINED_FUNCTION_183_0(v5);
  return OUTLINED_FUNCTION_21_4(v6, v7, v8);
}

#error "242201C28: call analysis failed (funcsize=175)"

uint64_t sub_242201994()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_99_2();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_242201B24()
{
  OUTLINED_FUNCTION_2();
}

void sub_242201B2C()
{
  void *v0;

  JUMPOUT(0x242201C84);
}

void sub_242201C4C()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_242201C6C()
{
  OUTLINED_FUNCTION_2();
}

void sub_242201C74()
{
  void *v0;

  JUMPOUT(0x242201CD0);
}

uint64_t sub_242201D48()
{
  uint64_t v0;

  OUTLINED_FUNCTION_101_3();
  v0 = OUTLINED_FUNCTION_289();
  sub_2421D3DF4(v0, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_242201D94(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  OUTLINED_FUNCTION_123_2();
  v32 = OUTLINED_FUNCTION_170_0();
  sub_2421EFF04(v32, &qword_2571E12C8);
  if (v28)
  {
    v33 = OUTLINED_FUNCTION_181_0();
    OUTLINED_FUNCTION_150_0(v33, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v34, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v35 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v35, v36);
    v37 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v37, &qword_2571E12C8);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_94_3();
  OUTLINED_FUNCTION_142_1(v38, &qword_2571E12C8);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v39 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v39);
}

void sub_2422023F0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_242();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 240);
  OUTLINED_FUNCTION_94_2();
}

#error "242202650: call analysis failed (funcsize=104)"

uint64_t sub_242202A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = sub_2422725A8();
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = type metadata accessor for ModelManagerError();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = type metadata accessor for ModelXPCRequest(0);
  v3[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1270);
  v3[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_242202B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_33_4();
  *(_QWORD *)(v1 + 224) = OUTLINED_FUNCTION_222();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_94_2();
  }
  v2 = OUTLINED_FUNCTION_264();
  OUTLINED_FUNCTION_287(v2, v3, type metadata accessor for ModelXPCRequest.CancelSessionRequest);
  OUTLINED_FUNCTION_29_1();
  swift_storeEnumTagMultiPayload();
  v4 = OUTLINED_FUNCTION_108_2();
  v5 = (_QWORD *)OUTLINED_FUNCTION_293(v4);
  v6 = OUTLINED_FUNCTION_183_0(v5);
  return OUTLINED_FUNCTION_21_4(v6, v7, v8);
}

#error "2422030C4: call analysis failed (funcsize=175)"

uint64_t sub_242202E30()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_99_2();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_242202FC0()
{
  OUTLINED_FUNCTION_2();
}

void sub_242202FC8()
{
  void *v0;

  JUMPOUT(0x242203120);
}

void sub_2422030E8()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_242203108()
{
  OUTLINED_FUNCTION_2();
}

void sub_242203110()
{
  void *v0;

  JUMPOUT(0x24220316CLL);
}

uint64_t sub_2422031E4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_101_3();
  v0 = OUTLINED_FUNCTION_289();
  sub_2421D3DF4(v0, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_242203230(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  OUTLINED_FUNCTION_123_2();
  v32 = OUTLINED_FUNCTION_170_0();
  sub_2421EFF04(v32, &qword_2571E1270);
  if (v28)
  {
    v33 = OUTLINED_FUNCTION_181_0();
    OUTLINED_FUNCTION_150_0(v33, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v34, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v35 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v35, v36);
    v37 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v37, &qword_2571E1270);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_94_3();
  OUTLINED_FUNCTION_142_1(v38, &qword_2571E1270);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v39 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v39);
}

void sub_24220388C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_242();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 240);
  OUTLINED_FUNCTION_94_2();
}

#error "242203AEC: call analysis failed (funcsize=104)"

uint64_t sub_242203EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = sub_2422725A8();
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = type metadata accessor for ModelManagerError();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = type metadata accessor for ModelXPCRequest(0);
  v3[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1218);
  v3[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_242203FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_33_4();
  *(_QWORD *)(v1 + 224) = OUTLINED_FUNCTION_222();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_94_2();
  }
  v2 = OUTLINED_FUNCTION_264();
  OUTLINED_FUNCTION_287(v2, v3, type metadata accessor for ModelXPCRequest.PrewarmSession);
  OUTLINED_FUNCTION_29_1();
  swift_storeEnumTagMultiPayload();
  v4 = OUTLINED_FUNCTION_108_2();
  v5 = (_QWORD *)OUTLINED_FUNCTION_293(v4);
  v6 = OUTLINED_FUNCTION_183_0(v5);
  return OUTLINED_FUNCTION_21_4(v6, v7, v8);
}

#error "242204560: call analysis failed (funcsize=175)"

uint64_t sub_2422042CC()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_99_2();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_24220445C()
{
  OUTLINED_FUNCTION_2();
}

void sub_242204464()
{
  void *v0;

  JUMPOUT(0x2422045BCLL);
}

void sub_242204584()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_2422045A4()
{
  OUTLINED_FUNCTION_2();
}

void sub_2422045AC()
{
  void *v0;

  JUMPOUT(0x242204608);
}

uint64_t sub_242204680()
{
  uint64_t v0;

  OUTLINED_FUNCTION_101_3();
  v0 = OUTLINED_FUNCTION_289();
  sub_2421D3DF4(v0, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2422046CC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  OUTLINED_FUNCTION_123_2();
  v32 = OUTLINED_FUNCTION_170_0();
  sub_2421EFF04(v32, &qword_2571E1218);
  if (v28)
  {
    v33 = OUTLINED_FUNCTION_181_0();
    OUTLINED_FUNCTION_150_0(v33, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v34, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v35 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v35, v36);
    v37 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v37, &qword_2571E1218);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_94_3();
  OUTLINED_FUNCTION_142_1(v38, &qword_2571E1218);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v39 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v39);
}

void sub_242204D28()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_242();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 240);
  OUTLINED_FUNCTION_94_2();
}

#error "242204F88: call analysis failed (funcsize=104)"

uint64_t sub_242205364(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[10] = a1;
  v2[11] = v1;
  v3 = sub_2422725A8();
  v2[12] = v3;
  v2[13] = *(_QWORD *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = type metadata accessor for ModelManagerError();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = type metadata accessor for ModelXPCRequest(0);
  v2[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9F70);
  v2[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24220548C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_33_4();
  *(_QWORD *)(v1 + 216) = OUTLINED_FUNCTION_222();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_94_2();
  }
  OUTLINED_FUNCTION_340();
  swift_storeEnumTagMultiPayload();
  v2 = OUTLINED_FUNCTION_108_2();
  v3 = (_QWORD *)OUTLINED_FUNCTION_329(v2);
  *v3 = v1;
  v3[1] = sub_242205B24;
  OUTLINED_FUNCTION_250();
  return OUTLINED_FUNCTION_21_4(v4, v5, v6);
}

#error "242205A04: call analysis failed (funcsize=175)"

uint64_t sub_242205770()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_171_0();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_242205900()
{
  OUTLINED_FUNCTION_2();
}

void sub_242205908()
{
  void *v0;

  JUMPOUT(0x242205A60);
}

void sub_242205A28()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_242205A48()
{
  OUTLINED_FUNCTION_2();
}

void sub_242205A50()
{
  void *v0;

  JUMPOUT(0x242205AACLL);
}

uint64_t sub_242205B24()
{
  uint64_t v0;

  OUTLINED_FUNCTION_173_0();
  v0 = OUTLINED_FUNCTION_334();
  sub_2421D3DF4(v0, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_242205B70(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  OUTLINED_FUNCTION_123_2();
  OUTLINED_FUNCTION_215();
  sub_2421F0388(&qword_2543A9F70, v32);
  if (v28)
  {
    v33 = OUTLINED_FUNCTION_267();
    OUTLINED_FUNCTION_150_0(v33, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v34, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v35 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v35, v36);
    v37 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v37, &qword_2543A9F70);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_140_0();
  OUTLINED_FUNCTION_142_1(v38, &qword_2543A9F70);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v39 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v39);
}

void sub_2422061E4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_279();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 232);
  OUTLINED_FUNCTION_94_2();
}

#error "24220644C: call analysis failed (funcsize=106)"

uint64_t sub_242206844(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[10] = a1;
  v2[11] = v1;
  v3 = sub_2422725A8();
  v2[12] = v3;
  v2[13] = *(_QWORD *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = type metadata accessor for ModelManagerError();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = type metadata accessor for ModelXPCRequest(0);
  v2[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1098);
  v2[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24220696C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_33_4();
  *(_QWORD *)(v1 + 216) = OUTLINED_FUNCTION_222();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_94_2();
  }
  OUTLINED_FUNCTION_340();
  swift_storeEnumTagMultiPayload();
  v2 = OUTLINED_FUNCTION_108_2();
  v3 = (_QWORD *)OUTLINED_FUNCTION_329(v2);
  *v3 = v1;
  v3[1] = sub_242207004;
  OUTLINED_FUNCTION_250();
  return OUTLINED_FUNCTION_21_4(v4, v5, v6);
}

#error "242206EE4: call analysis failed (funcsize=175)"

uint64_t sub_242206C50()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_171_0();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_242206DE0()
{
  OUTLINED_FUNCTION_2();
}

void sub_242206DE8()
{
  void *v0;

  JUMPOUT(0x242206F40);
}

void sub_242206F08()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_242206F28()
{
  OUTLINED_FUNCTION_2();
}

void sub_242206F30()
{
  void *v0;

  JUMPOUT(0x242206F8CLL);
}

uint64_t sub_242207004()
{
  uint64_t v0;

  OUTLINED_FUNCTION_173_0();
  v0 = OUTLINED_FUNCTION_334();
  sub_2421D3DF4(v0, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_242207050(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  OUTLINED_FUNCTION_123_2();
  OUTLINED_FUNCTION_215();
  sub_2421F0388(&qword_2571E1098, v32);
  if (v28)
  {
    v33 = OUTLINED_FUNCTION_267();
    OUTLINED_FUNCTION_150_0(v33, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v34, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v35 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v35, v36);
    v37 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v37, &qword_2571E1098);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_140_0();
  OUTLINED_FUNCTION_142_1(v38, &qword_2571E1098);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v39 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v39);
}

void sub_2422076C4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_279();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 232);
  OUTLINED_FUNCTION_94_2();
}

#error "24220792C: call analysis failed (funcsize=106)"

uint64_t sub_242207D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  v5 = sub_2422725A8();
  v4[14] = v5;
  v4[15] = *(_QWORD *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  v4[20] = type metadata accessor for ModelManagerError();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = type metadata accessor for ModelXPCRequest(0);
  v4[27] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1040);
  v4[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_242207E50()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_33_4();
  v1[29] = OUTLINED_FUNCTION_222();
  if (v0)
  {
    v1[2] = v0;
    OUTLINED_FUNCTION_94_2();
  }
  OUTLINED_FUNCTION_370();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_261();
  v2 = (_QWORD *)OUTLINED_FUNCTION_175();
  v1[30] = v2;
  *v2 = v1;
  v2[1] = sub_24220850C;
  OUTLINED_FUNCTION_250();
  return OUTLINED_FUNCTION_21_4(v3, v4, v5);
}

#error "2422083D0: call analysis failed (funcsize=175)"

uint64_t sub_242208140()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_219();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_2422082D0()
{
  OUTLINED_FUNCTION_2();
}

void sub_2422082D8()
{
  void *v0;

  JUMPOUT(0x24220842CLL);
}

void sub_2422083F4()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_242208414()
{
  OUTLINED_FUNCTION_2();
}

void sub_24220841C()
{
  void *v0;

  JUMPOUT(0x242208478);
}

uint64_t sub_24220850C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_270();
  sub_2421D3DF4(*(_QWORD *)(v0 + 216), type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_24220855C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void);

  OUTLINED_FUNCTION_123_2();
  v32 = OUTLINED_FUNCTION_299();
  sub_2421F0460(v32, v33);
  if (v28)
  {
    v34 = OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_150_0(v34, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v35, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v36 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v36, v37);
    v38 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v38, &qword_2571E1040);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_262();
  OUTLINED_FUNCTION_142_1(v39, &qword_2571E1040);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v40 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v40);
}

void sub_242208BE0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_343();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 248);
  OUTLINED_FUNCTION_94_2();
}

#error "242208E58: call analysis failed (funcsize=117)"

uint64_t sub_242209270(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = sub_2422725A8();
  v3[13] = v4;
  v3[14] = *(_QWORD *)(v4 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = type metadata accessor for ModelManagerError();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = type metadata accessor for ModelXPCRequest(0);
  v3[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0FA0);
  v3[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24220939C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_33_4();
  *(_QWORD *)(v1 + 224) = OUTLINED_FUNCTION_222();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_94_2();
  }
  v2 = OUTLINED_FUNCTION_264();
  OUTLINED_FUNCTION_287(v2, v3, type metadata accessor for ModelXPCRequest.FetchModelInstance);
  OUTLINED_FUNCTION_29_1();
  swift_storeEnumTagMultiPayload();
  v4 = OUTLINED_FUNCTION_108_2();
  v5 = (_QWORD *)OUTLINED_FUNCTION_293(v4);
  v6 = OUTLINED_FUNCTION_183_0(v5);
  return OUTLINED_FUNCTION_21_4(v6, v7, v8);
}

#error "242209908: call analysis failed (funcsize=175)"

uint64_t sub_242209674()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_99_2();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_242209804()
{
  OUTLINED_FUNCTION_2();
}

void sub_24220980C()
{
  void *v0;

  JUMPOUT(0x242209964);
}

void sub_24220992C()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_24220994C()
{
  OUTLINED_FUNCTION_2();
}

void sub_242209954()
{
  void *v0;

  JUMPOUT(0x2422099B0);
}

uint64_t sub_242209A28()
{
  uint64_t v0;

  OUTLINED_FUNCTION_101_3();
  v0 = OUTLINED_FUNCTION_289();
  sub_2421D3DF4(v0, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_242209A74(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void);

  OUTLINED_FUNCTION_123_2();
  v32 = OUTLINED_FUNCTION_170_0();
  sub_2421F05C0(v32, v33);
  if (v28)
  {
    v34 = OUTLINED_FUNCTION_181_0();
    OUTLINED_FUNCTION_150_0(v34, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v35, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v36 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v36, v37);
    v38 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v38, &qword_2571E0FA0);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_94_3();
  OUTLINED_FUNCTION_142_1(v39, &qword_2571E0FA0);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v40 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v40);
}

void sub_24220A0C8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_242();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 240);
  OUTLINED_FUNCTION_94_2();
}

#error "24220A328: call analysis failed (funcsize=104)"

uint64_t sub_24220A704(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[10] = a1;
  v2[11] = v1;
  v3 = sub_2422725A8();
  v2[12] = v3;
  v2[13] = *(_QWORD *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = type metadata accessor for ModelManagerError();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = type metadata accessor for ModelXPCRequest(0);
  v2[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0F48);
  v2[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24220A82C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_33_4();
  *(_QWORD *)(v1 + 216) = OUTLINED_FUNCTION_222();
  if (v0)
  {
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_94_2();
  }
  OUTLINED_FUNCTION_340();
  swift_storeEnumTagMultiPayload();
  v2 = OUTLINED_FUNCTION_108_2();
  v3 = (_QWORD *)OUTLINED_FUNCTION_329(v2);
  *v3 = v1;
  v3[1] = sub_24220AEC4;
  OUTLINED_FUNCTION_250();
  return OUTLINED_FUNCTION_21_4(v4, v5, v6);
}

#error "24220ADA4: call analysis failed (funcsize=175)"

uint64_t sub_24220AB10()
{
  void *v0;
  void *v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t (*v4)(void);

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_65(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_94_2();
  }

  OUTLINED_FUNCTION_73_3();
  OUTLINED_FUNCTION_73_3();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_10_5();
  OUTLINED_FUNCTION_106_3();

  OUTLINED_FUNCTION_171_0();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_145_1();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_255();
  return OUTLINED_FUNCTION_18(v4);
}

void sub_24220ACA0()
{
  OUTLINED_FUNCTION_2();
}

void sub_24220ACA8()
{
  void *v0;

  JUMPOUT(0x24220AE00);
}

void sub_24220ADC8()
{
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_2();
}

void sub_24220ADE8()
{
  OUTLINED_FUNCTION_2();
}

void sub_24220ADF0()
{
  void *v0;

  JUMPOUT(0x24220AE4CLL);
}

uint64_t sub_24220AEC4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_173_0();
  v0 = OUTLINED_FUNCTION_334();
  sub_2421D3DF4(v0, type metadata accessor for ModelXPCRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_24220AF10(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);

  OUTLINED_FUNCTION_123_2();
  v32 = OUTLINED_FUNCTION_215();
  sub_2421EFF04(v32, &qword_2571E0F48);
  if (v28)
  {
    v33 = OUTLINED_FUNCTION_267();
    OUTLINED_FUNCTION_150_0(v33, v31);
    OUTLINED_FUNCTION_230(&qword_2543A99A0, v34, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v35 = OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_118_3(v35, v36);
    v37 = OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_142_1(v37, &qword_2571E0F48);
    *(_QWORD *)(v29 + 16) = v30;
    OUTLINED_FUNCTION_51_2();
  }
  OUTLINED_FUNCTION_140_0();
  OUTLINED_FUNCTION_142_1(v38, &qword_2571E0F48);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  v39 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v39);
}

void sub_24220B584()
{
  uint64_t v0;

  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_279();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 232);
  OUTLINED_FUNCTION_94_2();
}

#error "24220B7EC: call analysis failed (funcsize=106)"

uint64_t sub_24220BBE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X3>, _QWORD *a4@<X8>)
{
  _QWORD *v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  if (qword_2543AA470 != -1)
    swift_once();
  v8 = (_QWORD *)((char *)off_2543AA468 + 16);
  v9 = (os_unfair_lock_s *)((char *)off_2543AA468 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)off_2543AA468 + 6);
  sub_242258AD0(v8, &v14);
  v10 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v11 = (uint64_t)a4 + *(int *)(v10 + 48);
  v12 = *(int *)(v10 + 64);
  os_unfair_lock_unlock(v9);
  *a4 = v14;
  OUTLINED_FUNCTION_130_1(a1, v11);
  *((_BYTE *)a4 + v12) = sub_242272890() & 1;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24220BCE4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_24220BBE4(a1, &qword_2571E0688, &qword_2571E0660, a2);
}

void sub_24220BD00(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9 = v4;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_21_1();
  sub_242213618(v9, (uint64_t)v5, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_242213618(v9, (uint64_t)a4, a1);
  }
  else
  {
    v12 = *v5;
    v13 = (uint64_t)v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a2) + 48);
    *a4 = v12;
    swift_storeEnumTagMultiPayload();
    sub_2421D3DF4(v13, a3);
  }
  OUTLINED_FUNCTION_93_0();
}

uint64_t sub_24220BDC0(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;

  v7 = v3;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_66();
  v11 = (uint64_t *)(v10 - v9);
  sub_242213618(v7, v10 - v9, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v13 = *v11;
  if (EnumCaseMultiPayload != 1)
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(a2);
    sub_2421D3DF4((uint64_t)v11 + *(int *)(v14 + 48), a3);
  }
  return v13;
}

uint64_t sub_24220BE64()
{
  return sub_24220BDC0(&qword_2571E0660, &qword_2571E0688, type metadata accessor for InferenceProviderXPCRequest.Notification);
}

void sub_24220BE80(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  OUTLINED_FUNCTION_348(a1, a2);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_357();
  if (qword_2543AA808 != -1)
    swift_once();
  v10 = OUTLINED_FUNCTION_54();
  __swift_project_value_buffer(v10, (uint64_t)qword_2543AA7E8);
  sub_242213618(a1, v4, a2);
  v11 = sub_242272494();
  v12 = sub_242272908();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)OUTLINED_FUNCTION_10();
    *(_DWORD *)v13 = 134217984;
    sub_24220BDC0(a2, a3, a4);
    OUTLINED_FUNCTION_311(v4);
    OUTLINED_FUNCTION_54_4();
    OUTLINED_FUNCTION_53(&dword_2421B5000, v11, v12, "Returning response from message %llu.", v13);
    OUTLINED_FUNCTION_2();
  }
  OUTLINED_FUNCTION_311(v4);

  OUTLINED_FUNCTION_73_1();
}

uint64_t sub_24220BFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220BFF4()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9FF0);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C064()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_24_6();
  if (v0)
  {
    OUTLINED_FUNCTION_29();
    return OUTLINED_FUNCTION_42();
  }
  else
  {
    OUTLINED_FUNCTION_201();
    return OUTLINED_FUNCTION_9_3(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_24220C0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220C0C0()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9998);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220C14C()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1170);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220C1D8()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1118);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220C264()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E15A0);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220C2F0()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1548);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220C37C()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E14F0);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220C408()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0FF8);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220C494()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0C88);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220C520()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0CB8);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220C5AC()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0CB0);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220C638()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E13D0);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220C6C4()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1378);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220C750()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1320);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220C7DC()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E12C8);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220C868()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1270);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220C8F4()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1218);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220C980()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9F70);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220C9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220CA0C()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1098);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220CA7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220CA98()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1040);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220CB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220CB24()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0FA0);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220CB94);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

uint64_t sub_24220CB94()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_24_6();
  if (v0)
  {
    OUTLINED_FUNCTION_29();
    return OUTLINED_FUNCTION_42();
  }
  else
  {
    OUTLINED_FUNCTION_201();
    return OUTLINED_FUNCTION_9_3(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_24220CBD4()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24220CC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_24220CC1C()
{
  __n128 *v0;
  uint64_t v1;

  v0 = (__n128 *)OUTLINED_FUNCTION_97_2();
  OUTLINED_FUNCTION_69_5(v0);
  v1 = swift_task_alloc();
  OUTLINED_FUNCTION_211(v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0F48);
  OUTLINED_FUNCTION_210((uint64_t)sub_24220C064);
  OUTLINED_FUNCTION_209();
  OUTLINED_FUNCTION_51_3();
  return OUTLINED_FUNCTION_50_3();
}

void sub_24220CC8C(uint64_t a1, os_unfair_lock_s *a2, uint64_t a3, uint64_t a4, void (*a5)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))
{
  os_unfair_lock_s *v9;
  os_unfair_lock_s *v10;

  v9 = a2 + 4;
  v10 = a2 + 5;
  os_unfair_lock_lock(a2 + 5);
  a5(v9, a3, a4, a1);
  os_unfair_lock_unlock(v10);
}

uint64_t sub_24220CD20(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA008);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9FF0);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242211C98(&qword_2543A9FE8, &qword_2543A9FF0, (uint64_t (*)(void))sub_2422125EC, (uint64_t (*)(void))sub_242212628);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_24220D024(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9BE0);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9998);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242211C98(&qword_2543A9BD8, &qword_2543A9998, (uint64_t (*)(void))sub_2422124D8, (uint64_t (*)(void))sub_242212514);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_24220D328(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1198);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1170);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242211C98(&qword_2571E11A0, &qword_2571E1170, (uint64_t (*)(void))sub_2422123C4, (uint64_t (*)(void))sub_242212400);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_24220D62C(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1140);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1118);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242211C98(&qword_2571E1148, &qword_2571E1118, (uint64_t (*)(void))sub_2422122B0, (uint64_t (*)(void))sub_2422122EC);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_24220D930(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E15C8);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E15A0);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242211C98(&qword_2571E15D0, &qword_2571E15A0, (uint64_t (*)(void))sub_2422135A0, (uint64_t (*)(void))sub_2422135DC);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_24220DC34(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1570);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1548);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242211C98(&qword_2571E1578, &qword_2571E1548, (uint64_t (*)(void))sub_2422133A8, (uint64_t (*)(void))sub_2422133E4);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_24220DF38(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1518);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E14F0);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242211C98(&qword_2571E1520, &qword_2571E14F0, (uint64_t (*)(void))sub_242213294, (uint64_t (*)(void))sub_2422132D0);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_24220E23C(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1020);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0FF8);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242211C98(&qword_2571E1028, &qword_2571E0FF8, (uint64_t (*)(void))sub_242211E60, (uint64_t (*)(void))sub_242211E9C);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_24220E540(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1440);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0668);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2571E0668);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2571E0668, &qword_2571E06B8, type metadata accessor for InferenceProviderXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2571E0668);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2571E0668);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0C88);
  sub_242212EE0(&qword_2571E1438, &qword_2571E0668);
  sub_242211C98(&qword_2571E1448, &qword_2571E0C88, (uint64_t (*)(void))sub_242212E68, (uint64_t (*)(void))sub_242212EA4);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_24220E844(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E14C0);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0668);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2571E0668);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2571E0668, &qword_2571E06B8, type metadata accessor for InferenceProviderXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2571E0668);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2571E0668);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0CB8);
  sub_242212EE0(&qword_2571E1438, &qword_2571E0668);
  sub_242211C98(&qword_2571E14C8, &qword_2571E0CB8, (uint64_t (*)(void))sub_242213180, (uint64_t (*)(void))sub_2422131BC);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_24220EB48(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1480);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0668);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2571E0668);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2571E0668, &qword_2571E06B8, type metadata accessor for InferenceProviderXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2571E0668);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2571E0668);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0CB0);
  sub_242212EE0(&qword_2571E1438, &qword_2571E0668);
  sub_242212FF4();
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_24220EE2C(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E13F8);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E13D0);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242212CDC();
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_24220F110(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E13A0);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1378);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242211C98(&qword_2571E13A8, &qword_2571E1378, (uint64_t (*)(void))sub_242212BC8, (uint64_t (*)(void))sub_242212C04);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_24220F414(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1348);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1320);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242212A3C();
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_24220F6F8(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E12F0);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E12C8);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242211C98(&qword_2571E12F8, &qword_2571E12C8, (uint64_t (*)(void))sub_242212928, (uint64_t (*)(void))sub_242212964);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_24220F9FC(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1298);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1270);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242211C98(&qword_2571E12A0, &qword_2571E1270, (uint64_t (*)(void))sub_242212814, (uint64_t (*)(void))sub_242212850);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_24220FD00(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1240);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1218);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242211C98(&qword_2571E1248, &qword_2571E1218, (uint64_t (*)(void))sub_242212700, (uint64_t (*)(void))sub_24221273C);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_242210004(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9FA0);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9F70);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242211C98(&qword_2543A9F98, &qword_2543A9F70, (uint64_t (*)(void))sub_24221219C, (uint64_t (*)(void))sub_2422121D8);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_242210308(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E10C0);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1098);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242211C98(&qword_2571E10C8, &qword_2571E1098, (uint64_t (*)(void))sub_242212088, (uint64_t (*)(void))sub_2422120C4);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_24221060C(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1068);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1040);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242211C98(&qword_2571E1070, &qword_2571E1040, (uint64_t (*)(void))sub_242211F74, (uint64_t (*)(void))sub_242211FB0);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_242210910(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0FC8);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0FA0);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242211C98(&qword_2571E0FD0, &qword_2571E0FA0, (uint64_t (*)(void))sub_242211D4C, (uint64_t (*)(void))sub_242211D88);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

uint64_t sub_242210C14(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = v4;
  v28 = a4;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0F70);
  v9 = *(_QWORD *)(v30 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v29 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA460);
  MEMORY[0x24BDAC7A8](v31);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543AA808 != -1)
    swift_once();
  v13 = sub_2422724AC();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543AA7E8);
  v32 = a2;
  sub_242213618(a2, (uint64_t)v12, &qword_2543AA460);
  v14 = sub_242272494();
  v15 = sub_242272908();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v26 = v4;
    v17 = v16;
    v27 = a1;
    *(_DWORD *)v16 = 134217984;
    v25 = a3;
    v18 = sub_24220BDC0(&qword_2543AA460, (uint64_t *)&unk_2543AA520, type metadata accessor for ModelXPCRequest);
    sub_242213420((uint64_t)v12, &qword_2543AA460);
    v33 = v18;
    a1 = v27;
    sub_242272950();
    _os_log_impl(&dword_2421B5000, v14, v15, "Sending message %llu.", v17, 0xCu);
    v19 = v17;
    v5 = v26;
    MEMORY[0x2426A6378](v19, -1, -1);
  }
  else
  {
    sub_242213420((uint64_t)v12, &qword_2543AA460);
  }

  v20 = v29;
  v21 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v29, v28, v30);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0F48);
  sub_242212EE0(&qword_2543AA458, &qword_2543AA460);
  sub_242211C98(&qword_2571E0F78, &qword_2571E0F48, (uint64_t (*)(void))sub_242211B48, (uint64_t (*)(void))sub_242211B84);
  sub_242272500();
  result = swift_release();
  if (!v5)
    *a1 = 1;
  return result;
}

void sub_242210F18(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_67();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_357();
  sub_242213618(a1, v5, a4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    OUTLINED_FUNCTION_373();
    sub_2422727DC();
  }
  else
  {
    sub_242213644(v5, v4, a3);
    OUTLINED_FUNCTION_373();
    sub_2422727E8();
  }
  OUTLINED_FUNCTION_93_0();
}

void sub_242210FF0(uint64_t a1)
{
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t (*v6)(_QWORD);
  unint64_t *v7;

  v2 = (os_unfair_lock_s *)(a1 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 20));
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    OUTLINED_FUNCTION_364();
    sub_2422110C8(v3, v4, v5, v6, v7);
  }
  os_unfair_lock_unlock(v2);
}

void sub_242211064(uint64_t a1)
{
  sub_2422110C8(a1, &qword_2571E0660, &qword_2571E0688, type metadata accessor for InferenceProviderXPCRequest.Notification, (unint64_t *)&qword_2571E0CA8);
}

void sub_2422110C8(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD), unint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t *v22;
  os_activity_scope_state_s *v23;
  _QWORD v24[5];
  uint64_t *v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a5;
  v25 = a3;
  v29 = *MEMORY[0x24BDAC8D0];
  v9 = OUTLINED_FUNCTION_348(a1, a2);
  OUTLINED_FUNCTION_27();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (_QWORD *)((char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v24 - v14;
  type metadata accessor for _OSActivity();
  swift_initStackObject();
  v26 = _OSActivity.init(_:)("XPC message with reply cancelled", 32, 2);
  if (qword_2543AA808 != -1)
    swift_once();
  v16 = OUTLINED_FUNCTION_54();
  __swift_project_value_buffer(v16, (uint64_t)qword_2543AA7E8);
  v24[4] = a1;
  sub_242213618(a1, (uint64_t)v15, a2);
  v17 = sub_242272494();
  v18 = sub_242272908();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)OUTLINED_FUNCTION_10();
    v24[3] = v5;
    v20 = v19;
    v24[2] = v9;
    *(_DWORD *)v19 = 134217984;
    v24[1] = v19 + 4;
    v21 = sub_24220BDC0(a2, v25, a4);
    OUTLINED_FUNCTION_311((uint64_t)v15);
    v28 = v21;
    sub_242272950();
    OUTLINED_FUNCTION_53(&dword_2421B5000, v17, v18, "Task for message %llu cancelled, sending cancellation message.", v20);
    OUTLINED_FUNCTION_2();
  }
  OUTLINED_FUNCTION_311((uint64_t)v15);
  v22 = v25;

  sub_24220BD00(a2, v22, a4, v13);
  sub_242212EE0(v27, a2);
  sub_24227250C();
  OUTLINED_FUNCTION_311((uint64_t)v13);
  v23 = (os_activity_scope_state_s *)(v26 + 24);
  swift_beginAccess();
  os_activity_scope_leave(v23);
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_73_1();
}

uint64_t sub_242211358(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_242272644();
    return sub_242272644();
  }
  return result;
}

uint64_t dispatch thunk of ModelXPCSending.executeRequest(asStream:clientData:modelBundleID:requiredAssetIDs:id:sessionID:taskPriority:loggingIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_33_4();
  v34 = v15;
  v32 = v16;
  v33 = v17;
  v30 = v18;
  v31 = v19;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a14 + 8) + *(_QWORD *)(a14 + 8));
  v26 = swift_task_alloc();
  v27 = (_QWORD *)OUTLINED_FUNCTION_92(v26);
  *v27 = v14;
  v27[1] = sub_2421C71E8;
  return v29(v25, v23, v21, v30, v31, v32, v33, v34, a9, a10, a11, a12, a13, a14);
}

uint64_t dispatch thunk of ModelXPCSending.cancelRequest(id:sessionID:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_178();
  OUTLINED_FUNCTION_139();
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421C71E8;
  OUTLINED_FUNCTION_322();
  return OUTLINED_FUNCTION_303(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of ModelXPCSending.createSession(supportedAssetBundleIdentifiers:useCaseIdentifier:onBehalfOfPID:parentOfOnBehalfOfPID:containsSensitiveData:loggingIdentifier:id:alreadyLockedInferenceProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;

  OUTLINED_FUNCTION_33_4();
  v33 = v14;
  v32 = v15;
  v30 = v16;
  v31 = v17;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a13 + 24) + *(_QWORD *)(a13 + 24));
  v26 = swift_task_alloc();
  v27 = (_QWORD *)OUTLINED_FUNCTION_92(v26);
  *v27 = v13;
  v27[1] = sub_2421C71E8;
  return v29(v25, v23, v21, v19, v30, v31, v32, v33, a9, a10, a11, a12, a13);
}

uint64_t dispatch thunk of ModelXPCSending.deleteSession(id:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_60();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_19(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_49_1(v2, v3, v4, v5);
}

uint64_t dispatch thunk of ModelXPCSending.cancelSession(id:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_60();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_19(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_49_1(v2, v3, v4, v5);
}

uint64_t dispatch thunk of ModelXPCSending.prewarmSession(id:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_60();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_19(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_49_1(v2, v3, v4, v5);
}

uint64_t dispatch thunk of ModelXPCSending.acquireAssertion(assertion:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_60();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_19(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_49_1(v2, v3, v4, v5);
}

uint64_t dispatch thunk of ModelXPCSending.releaseAssertion(id:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_60();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_19(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_49_1(v2, v3, v4, v5);
}

uint64_t dispatch thunk of ModelXPCSending.fetchAllAssertions()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_90();
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_275(v1, (uint64_t)sub_2422136B4);
  return OUTLINED_FUNCTION_57_2(v2, v3, v4);
}

uint64_t dispatch thunk of ModelXPCSending.restoreAssertions(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_60();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_19(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_49_1(v2, v3, v4, v5);
}

uint64_t dispatch thunk of ModelXPCSending.fetchAllAssetInfo()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_90();
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_275(v1, (uint64_t)sub_242211720);
  return OUTLINED_FUNCTION_57_2(v2, v3, v4);
}

uint64_t sub_242211720(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_324(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t dispatch thunk of ModelXPCSending.fetchDynamicAssetInfo()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_90();
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_275(v1, (uint64_t)sub_2422136B4);
  return OUTLINED_FUNCTION_57_2(v2, v3, v4);
}

uint64_t dispatch thunk of ModelXPCSending.fetchEffectivePolicy()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_60();
  v0 = OUTLINED_FUNCTION_23();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_328(v1);
  return OUTLINED_FUNCTION_49_1(v2, v3, v4, v5);
}

uint64_t dispatch thunk of ModelXPCSending.fetchPolicy(_:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = OUTLINED_FUNCTION_23();
  v2 = (_QWORD *)OUTLINED_FUNCTION_92(v1);
  *v2 = v0;
  v2[1] = sub_2421C71E8;
  OUTLINED_FUNCTION_364();
  return v4();
}

uint64_t dispatch thunk of ModelXPCSending.loadAssetBundle(_:dynamicMode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_2421C71E8;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of ModelXPCSending.holdAssetBundle(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_178();
  OUTLINED_FUNCTION_139();
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421C71E8;
  OUTLINED_FUNCTION_322();
  return OUTLINED_FUNCTION_303(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of ModelXPCSending.dumpState()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_60();
  v0 = OUTLINED_FUNCTION_23();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_328(v1);
  return OUTLINED_FUNCTION_49_1(v2, v3, v4, v5);
}

uint64_t dispatch thunk of ModelXPCSending.fetchModelInstance(session:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_178();
  OUTLINED_FUNCTION_139();
  v1 = OUTLINED_FUNCTION_49();
  v2 = (_QWORD *)OUTLINED_FUNCTION_92(v1);
  *v2 = v0;
  v2[1] = sub_2421C60C4;
  OUTLINED_FUNCTION_322();
  return v3();
}

uint64_t dispatch thunk of ModelXPCSending.setAssetsHaveUpdated()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_90();
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_275(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_57_2(v2, v3, v4);
}

uint64_t sub_2422119E0()
{
  return type metadata accessor for ModelXPCSender();
}

uint64_t type metadata accessor for ModelXPCSender()
{
  uint64_t result;

  result = qword_2543AA2D8;
  if (!qword_2543AA2D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_242211A20()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2422724AC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ModelXPCSender()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ModelXPCSender.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_242211AAC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220CC00(v2, v3, v4, v5);
}

void sub_242211AF8()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_242210C14);
}

uint64_t sub_242211B20()
{
  return objectdestroyTm(&qword_2571E0F70);
}

void sub_242211B2C(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E0F70, &qword_2571E0F48, &qword_2571E0F90);
}

unint64_t sub_242211B48()
{
  unint64_t result;

  result = qword_2571E0F80;
  if (!qword_2571E0F80)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.SetAssetsHaveUpdated.Response, &type metadata for ModelXPCRequest.SetAssetsHaveUpdated.Response);
    atomic_store(result, (unint64_t *)&qword_2571E0F80);
  }
  return result;
}

unint64_t sub_242211B84()
{
  unint64_t result;

  result = qword_2571E0F88;
  if (!qword_2571E0F88)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.SetAssetsHaveUpdated.Response, &type metadata for ModelXPCRequest.SetAssetsHaveUpdated.Response);
    atomic_store(result, (unint64_t *)&qword_2571E0F88);
  }
  return result;
}

uint64_t sub_242211BC0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220CB08(v2, v3, v4, v5);
}

void sub_242211C0C()
{
  uint64_t v0;

  sub_242210FF0(*(_QWORD *)(v0 + 16));
}

void sub_242211C48()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_242210910);
}

uint64_t sub_242211C70()
{
  return objectdestroyTm(&qword_2571E0FC8);
}

void sub_242211C7C(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E0FC8, &qword_2571E0FA0, &qword_2571E0FE8);
}

uint64_t sub_242211C98(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    v10 = a4();
    OUTLINED_FUNCTION_174(&qword_2543AA450, v11, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v13 = v12;
    OUTLINED_FUNCTION_174(&qword_2543AA448, v14, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v16[0] = v9;
    v16[1] = v10;
    v16[2] = v13;
    v16[3] = v15;
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for <> ModelXPCResult<A, B>, v8, v16);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_242211D4C()
{
  unint64_t result;

  result = qword_2571E0FD8;
  if (!qword_2571E0FD8)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchModelInstance.Response, &type metadata for ModelXPCRequest.FetchModelInstance.Response);
    atomic_store(result, (unint64_t *)&qword_2571E0FD8);
  }
  return result;
}

unint64_t sub_242211D88()
{
  unint64_t result;

  result = qword_2571E0FE0;
  if (!qword_2571E0FE0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchModelInstance.Response, &type metadata for ModelXPCRequest.FetchModelInstance.Response);
    atomic_store(result, (unint64_t *)&qword_2571E0FE0);
  }
  return result;
}

uint64_t sub_242211DC4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C3EC(v2, v3, v4, v5);
}

void sub_242211E10()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24220E23C);
}

uint64_t sub_242211E38()
{
  return objectdestroyTm(&qword_2571E1020);
}

void sub_242211E44(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E1020, &qword_2571E0FF8, &qword_2571E1030);
}

unint64_t sub_242211E60()
{
  unint64_t result;

  result = qword_2543A77E8;
  if (!qword_2543A77E8)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.DumpState.Response, &type metadata for ModelXPCRequest.DumpState.Response);
    atomic_store(result, (unint64_t *)&qword_2543A77E8);
  }
  return result;
}

unint64_t sub_242211E9C()
{
  unint64_t result;

  result = qword_2543A77E0;
  if (!qword_2543A77E0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.DumpState.Response, &type metadata for ModelXPCRequest.DumpState.Response);
    atomic_store(result, (unint64_t *)&qword_2543A77E0);
  }
  return result;
}

uint64_t sub_242211ED8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220CA7C(v2, v3, v4, v5);
}

void sub_242211F24()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24221060C);
}

uint64_t sub_242211F4C()
{
  return objectdestroyTm(&qword_2571E1068);
}

void sub_242211F58(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E1068, &qword_2571E1040, &qword_2571E1088);
}

unint64_t sub_242211F74()
{
  unint64_t result;

  result = qword_2571E1078;
  if (!qword_2571E1078)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchPolicyRequest.Response, &type metadata for ModelXPCRequest.FetchPolicyRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2571E1078);
  }
  return result;
}

unint64_t sub_242211FB0()
{
  unint64_t result;

  result = qword_2571E1080;
  if (!qword_2571E1080)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchPolicyRequest.Response, &type metadata for ModelXPCRequest.FetchPolicyRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2571E1080);
  }
  return result;
}

uint64_t sub_242211FEC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C9F0(v2, v3, v4, v5);
}

void sub_242212038()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_242210308);
}

uint64_t sub_242212060()
{
  return objectdestroyTm(&qword_2571E10C0);
}

void sub_24221206C(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E10C0, &qword_2571E1098, &qword_2571E10E0);
}

unint64_t sub_242212088()
{
  unint64_t result;

  result = qword_2571E10D0;
  if (!qword_2571E10D0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchDynamicAssetsRequest.Response, &type metadata for ModelXPCRequest.FetchDynamicAssetsRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2571E10D0);
  }
  return result;
}

unint64_t sub_2422120C4()
{
  unint64_t result;

  result = qword_2571E10D8;
  if (!qword_2571E10D8)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchDynamicAssetsRequest.Response, &type metadata for ModelXPCRequest.FetchDynamicAssetsRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2571E10D8);
  }
  return result;
}

uint64_t sub_242212100()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C964(v2, v3, v4, v5);
}

void sub_24221214C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_242210004);
}

uint64_t sub_242212174()
{
  return objectdestroyTm(&qword_2543A9FA0);
}

void sub_242212180(uint64_t a1)
{
  sub_24221353C(a1, &qword_2543A9FA0, &qword_2543A9F70, &qword_2543A9F78);
}

unint64_t sub_24221219C()
{
  unint64_t result;

  result = qword_2543AA148;
  if (!qword_2543AA148)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchAssetsRequest.Response, &type metadata for ModelXPCRequest.FetchAssetsRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2543AA148);
  }
  return result;
}

unint64_t sub_2422121D8()
{
  unint64_t result;

  result = qword_2543AA140;
  if (!qword_2543AA140)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchAssetsRequest.Response, &type metadata for ModelXPCRequest.FetchAssetsRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2543AA140);
  }
  return result;
}

uint64_t sub_242212214()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C1BC(v2, v3, v4, v5);
}

void sub_242212260()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24220D62C);
}

uint64_t sub_242212288()
{
  return objectdestroyTm(&qword_2571E1140);
}

void sub_242212294(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E1140, &qword_2571E1118, &qword_2571E1160);
}

unint64_t sub_2422122B0()
{
  unint64_t result;

  result = qword_2571E1150;
  if (!qword_2571E1150)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.RestoreAssertionsRequest.Response, &type metadata for ModelXPCRequest.RestoreAssertionsRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2571E1150);
  }
  return result;
}

unint64_t sub_2422122EC()
{
  unint64_t result;

  result = qword_2571E1158;
  if (!qword_2571E1158)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.RestoreAssertionsRequest.Response, &type metadata for ModelXPCRequest.RestoreAssertionsRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2571E1158);
  }
  return result;
}

uint64_t sub_242212328()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C130(v2, v3, v4, v5);
}

void sub_242212374()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24220D328);
}

uint64_t sub_24221239C()
{
  return objectdestroyTm(&qword_2571E1198);
}

void sub_2422123A8(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E1198, &qword_2571E1170, &qword_2571E11B8);
}

unint64_t sub_2422123C4()
{
  unint64_t result;

  result = qword_2571E11A8;
  if (!qword_2571E11A8)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchAssertionsRequest.Response, &type metadata for ModelXPCRequest.FetchAssertionsRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2571E11A8);
  }
  return result;
}

unint64_t sub_242212400()
{
  unint64_t result;

  result = qword_2571E11B0;
  if (!qword_2571E11B0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchAssertionsRequest.Response, &type metadata for ModelXPCRequest.FetchAssertionsRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2571E11B0);
  }
  return result;
}

uint64_t sub_24221243C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C0A4(v2, v3, v4, v5);
}

void sub_242212488()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24220D024);
}

uint64_t sub_2422124B0()
{
  return objectdestroyTm(&qword_2543A9BE0);
}

void sub_2422124BC(uint64_t a1)
{
  sub_24221353C(a1, &qword_2543A9BE0, &qword_2543A9998, &qword_2543A9BF0);
}

unint64_t sub_2422124D8()
{
  unint64_t result;

  result = qword_2543A9FD0;
  if (!qword_2543A9FD0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.ReleaseRequest.Response, &type metadata for ModelXPCRequest.ReleaseRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2543A9FD0);
  }
  return result;
}

unint64_t sub_242212514()
{
  unint64_t result;

  result = qword_2543A9FC8;
  if (!qword_2543A9FC8)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.ReleaseRequest.Response, &type metadata for ModelXPCRequest.ReleaseRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2543A9FC8);
  }
  return result;
}

uint64_t sub_242212550()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220BFD8(v2, v3, v4, v5);
}

void sub_24221259C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24220CD20);
}

uint64_t sub_2422125C4()
{
  return objectdestroyTm(&qword_2543AA008);
}

void sub_2422125D0(uint64_t a1)
{
  sub_24221353C(a1, &qword_2543AA008, &qword_2543A9FF0, &qword_2543AA020);
}

unint64_t sub_2422125EC()
{
  unint64_t result;

  result = qword_2543AA1C0;
  if (!qword_2543AA1C0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.AcquireRequest.Response, &type metadata for ModelXPCRequest.AcquireRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2543AA1C0);
  }
  return result;
}

unint64_t sub_242212628()
{
  unint64_t result;

  result = qword_2543AA1B8;
  if (!qword_2543AA1B8)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.AcquireRequest.Response, &type metadata for ModelXPCRequest.AcquireRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2543AA1B8);
  }
  return result;
}

uint64_t sub_242212664()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C8D8(v2, v3, v4, v5);
}

void sub_2422126B0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24220FD00);
}

uint64_t sub_2422126D8()
{
  return objectdestroyTm(&qword_2571E1240);
}

void sub_2422126E4(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E1240, &qword_2571E1218, &qword_2571E1260);
}

unint64_t sub_242212700()
{
  unint64_t result;

  result = qword_2571E1250;
  if (!qword_2571E1250)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.PrewarmSession.Response, &type metadata for ModelXPCRequest.PrewarmSession.Response);
    atomic_store(result, (unint64_t *)&qword_2571E1250);
  }
  return result;
}

unint64_t sub_24221273C()
{
  unint64_t result;

  result = qword_2571E1258;
  if (!qword_2571E1258)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.PrewarmSession.Response, &type metadata for ModelXPCRequest.PrewarmSession.Response);
    atomic_store(result, (unint64_t *)&qword_2571E1258);
  }
  return result;
}

uint64_t sub_242212778()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C84C(v2, v3, v4, v5);
}

void sub_2422127C4()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24220F9FC);
}

uint64_t sub_2422127EC()
{
  return objectdestroyTm(&qword_2571E1298);
}

void sub_2422127F8(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E1298, &qword_2571E1270, &qword_2571E12B8);
}

unint64_t sub_242212814()
{
  unint64_t result;

  result = qword_2571E12A8;
  if (!qword_2571E12A8)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.CancelSessionRequest.Response, &type metadata for ModelXPCRequest.CancelSessionRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2571E12A8);
  }
  return result;
}

unint64_t sub_242212850()
{
  unint64_t result;

  result = qword_2571E12B0;
  if (!qword_2571E12B0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.CancelSessionRequest.Response, &type metadata for ModelXPCRequest.CancelSessionRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2571E12B0);
  }
  return result;
}

uint64_t sub_24221288C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C7C0(v2, v3, v4, v5);
}

void sub_2422128D8()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24220F6F8);
}

uint64_t sub_242212900()
{
  return objectdestroyTm(&qword_2571E12F0);
}

void sub_24221290C(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E12F0, &qword_2571E12C8, &qword_2571E1310);
}

unint64_t sub_242212928()
{
  unint64_t result;

  result = qword_2571E1300;
  if (!qword_2571E1300)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.DeleteSessionRequest.Response, &type metadata for ModelXPCRequest.DeleteSessionRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2571E1300);
  }
  return result;
}

unint64_t sub_242212964()
{
  unint64_t result;

  result = qword_2571E1308;
  if (!qword_2571E1308)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.DeleteSessionRequest.Response, &type metadata for ModelXPCRequest.DeleteSessionRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2571E1308);
  }
  return result;
}

uint64_t sub_2422129A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C734(v2, v3, v4, v5);
}

void sub_2422129EC()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24220F414);
}

uint64_t sub_242212A14()
{
  return objectdestroyTm(&qword_2571E1348);
}

void sub_242212A20(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E1348, &qword_2571E1320, &qword_2571E1368);
}

unint64_t sub_242212A3C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  result = qword_2571E1350;
  if (!qword_2571E1350)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571E1320);
    sub_2421ED71C(&qword_2571E1358, type metadata accessor for ModelXPCRequest.CreateSessionRequest.Response, (uint64_t)&protocol conformance descriptor for ModelXPCRequest.CreateSessionRequest.Response);
    v3 = v2;
    sub_2421ED71C(&qword_2571E1360, type metadata accessor for ModelXPCRequest.CreateSessionRequest.Response, (uint64_t)&protocol conformance descriptor for ModelXPCRequest.CreateSessionRequest.Response);
    v5 = v4;
    sub_2421ED71C(&qword_2543AA450, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v7 = v6;
    sub_2421ED71C(&qword_2543AA448, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = v7;
    v9[3] = v8;
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for <> ModelXPCResult<A, B>, v1, v9);
    atomic_store(result, (unint64_t *)&qword_2571E1350);
  }
  return result;
}

uint64_t sub_242212B2C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C6A8(v2, v3, v4, v5);
}

void sub_242212B78()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24220F110);
}

uint64_t sub_242212BA0()
{
  return objectdestroyTm(&qword_2571E13A0);
}

void sub_242212BAC(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E13A0, &qword_2571E1378, &qword_2571E13C0);
}

unint64_t sub_242212BC8()
{
  unint64_t result;

  result = qword_2571E13B0;
  if (!qword_2571E13B0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.CancelRequest.Response, &type metadata for ModelXPCRequest.CancelRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2571E13B0);
  }
  return result;
}

unint64_t sub_242212C04()
{
  unint64_t result;

  result = qword_2571E13B8;
  if (!qword_2571E13B8)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.CancelRequest.Response, &type metadata for ModelXPCRequest.CancelRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2571E13B8);
  }
  return result;
}

uint64_t sub_242212C40()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C61C(v2, v3, v4, v5);
}

void sub_242212C8C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24220EE2C);
}

uint64_t sub_242212CB4()
{
  return objectdestroyTm(&qword_2571E13F8);
}

void sub_242212CC0(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E13F8, &qword_2571E13D0, &qword_2571E1418);
}

unint64_t sub_242212CDC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  result = qword_2571E1400;
  if (!qword_2571E1400)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571E13D0);
    sub_2421ED71C(&qword_2571E1408, type metadata accessor for ModelXPCRequest.ExecuteRequest.Response, (uint64_t)&protocol conformance descriptor for ModelXPCRequest.ExecuteRequest.Response);
    v3 = v2;
    sub_2421ED71C(&qword_2571E1410, type metadata accessor for ModelXPCRequest.ExecuteRequest.Response, (uint64_t)&protocol conformance descriptor for ModelXPCRequest.ExecuteRequest.Response);
    v5 = v4;
    sub_2421ED71C(&qword_2543AA450, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v7 = v6;
    sub_2421ED71C(&qword_2543AA448, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = v7;
    v9[3] = v8;
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for <> ModelXPCResult<A, B>, v1, v9);
    atomic_store(result, (unint64_t *)&qword_2571E1400);
  }
  return result;
}

uint64_t sub_242212DCC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C478(v2, v3, v4, v5);
}

void sub_242212E18()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24220E540);
}

uint64_t sub_242212E40()
{
  return objectdestroyTm(&qword_2571E1440);
}

void sub_242212E4C(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E1440, &qword_2571E0C88, &qword_2571E1460);
}

unint64_t sub_242212E68()
{
  unint64_t result;

  result = qword_2571E1450;
  if (!qword_2571E1450)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderXPCRequest.EmptyResponse, &type metadata for InferenceProviderXPCRequest.EmptyResponse);
    atomic_store(result, (unint64_t *)&qword_2571E1450);
  }
  return result;
}

unint64_t sub_242212EA4()
{
  unint64_t result;

  result = qword_2571E1458;
  if (!qword_2571E1458)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderXPCRequest.EmptyResponse, &type metadata for InferenceProviderXPCRequest.EmptyResponse);
    atomic_store(result, (unint64_t *)&qword_2571E1458);
  }
  return result;
}

void sub_242212EE0(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x2426A62C4](&unk_242282748, v3), a1);
  }
  OUTLINED_FUNCTION_34();
}

uint64_t sub_242212F1C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C590(v2, v3, v4, v5);
}

void sub_242212F68()
{
  uint64_t v0;

  sub_242210FF0(*(_QWORD *)(v0 + 16));
}

void sub_242212FA4()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24220EB48);
}

uint64_t sub_242212FCC()
{
  return objectdestroyTm(&qword_2571E1480);
}

void sub_242212FD8(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E1480, &qword_2571E0CB0, &qword_2571E14A0);
}

unint64_t sub_242212FF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];

  result = qword_2571E1488;
  if (!qword_2571E1488)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571E0CB0);
    sub_2421ED71C(&qword_2571E1490, type metadata accessor for InferenceProviderRequestResult, (uint64_t)&protocol conformance descriptor for InferenceProviderRequestResult);
    v3 = v2;
    sub_2421ED71C(&qword_2571E1498, type metadata accessor for InferenceProviderRequestResult, (uint64_t)&protocol conformance descriptor for InferenceProviderRequestResult);
    v5 = v4;
    sub_2421ED71C(&qword_2543AA450, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v7 = v6;
    sub_2421ED71C(&qword_2543AA448, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v9[0] = v3;
    v9[1] = v5;
    v9[2] = v7;
    v9[3] = v8;
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for <> ModelXPCResult<A, B>, v1, v9);
    atomic_store(result, (unint64_t *)&qword_2571E1488);
  }
  return result;
}

uint64_t sub_2422130E4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C504(v2, v3, v4, v5);
}

void sub_242213130()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24220E844);
}

uint64_t sub_242213158()
{
  return objectdestroyTm(&qword_2571E14C0);
}

void sub_242213164(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E14C0, &qword_2571E0CB8, &qword_2571E14E0);
}

unint64_t sub_242213180()
{
  unint64_t result;

  result = qword_2571E14D0;
  if (!qword_2571E14D0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response, &type metadata for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2571E14D0);
  }
  return result;
}

unint64_t sub_2422131BC()
{
  unint64_t result;

  result = qword_2571E14D8;
  if (!qword_2571E14D8)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response, &type metadata for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response);
    atomic_store(result, (unint64_t *)&qword_2571E14D8);
  }
  return result;
}

uint64_t sub_2422131F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C360(v2, v3, v4, v5);
}

void sub_242213244()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24220DF38);
}

uint64_t sub_24221326C()
{
  return objectdestroyTm(&qword_2571E1518);
}

void sub_242213278(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E1518, &qword_2571E14F0, &qword_2571E1538);
}

unint64_t sub_242213294()
{
  unint64_t result;

  result = qword_2571E1528;
  if (!qword_2571E1528)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.ForceAssetVersionSwitch.Response, &type metadata for ModelXPCRequest.ForceAssetVersionSwitch.Response);
    atomic_store(result, (unint64_t *)&qword_2571E1528);
  }
  return result;
}

unint64_t sub_2422132D0()
{
  unint64_t result;

  result = qword_2571E1530;
  if (!qword_2571E1530)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.ForceAssetVersionSwitch.Response, &type metadata for ModelXPCRequest.ForceAssetVersionSwitch.Response);
    atomic_store(result, (unint64_t *)&qword_2571E1530);
  }
  return result;
}

uint64_t sub_24221330C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C2D4(v2, v3, v4, v5);
}

void sub_242213358()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24220DC34);
}

uint64_t sub_242213380()
{
  return objectdestroyTm(&qword_2571E1570);
}

void sub_24221338C(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E1570, &qword_2571E1548, &qword_2571E1590);
}

unint64_t sub_2422133A8()
{
  unint64_t result;

  result = qword_2571E1580;
  if (!qword_2571E1580)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.HoldAssetBundle.Response, &type metadata for ModelXPCRequest.HoldAssetBundle.Response);
    atomic_store(result, (unint64_t *)&qword_2571E1580);
  }
  return result;
}

unint64_t sub_2422133E4()
{
  unint64_t result;

  result = qword_2571E1588;
  if (!qword_2571E1588)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.HoldAssetBundle.Response, &type metadata for ModelXPCRequest.HoldAssetBundle.Response);
    atomic_store(result, (unint64_t *)&qword_2571E1588);
  }
  return result;
}

void sub_242213420(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_348(a1, a2);
  OUTLINED_FUNCTION_3_3(v2);
  OUTLINED_FUNCTION_34();
}

uint64_t sub_242213444()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_136_0();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24220C248(v2, v3, v4, v5);
}

void sub_242213490()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_208();
  sub_24220CC8C(v0, v1, v2, v3, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t, uint64_t))sub_24220D930);
}

uint64_t sub_2422134B8()
{
  return objectdestroyTm(&qword_2571E15C8);
}

uint64_t objectdestroyTm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

void sub_242213520(uint64_t a1)
{
  sub_24221353C(a1, &qword_2571E15C8, &qword_2571E15A0, &qword_2571E15E8);
}

void sub_24221353C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;

  v8 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_348(a1, a2) - 8) + 80);
  sub_242210F18(a1, v4 + ((v8 + 16) & ~v8), a3, a4);
}

unint64_t sub_2422135A0()
{
  unint64_t result;

  result = qword_2571E15D8;
  if (!qword_2571E15D8)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.LoadAssetBundle.Response, &type metadata for ModelXPCRequest.LoadAssetBundle.Response);
    atomic_store(result, (unint64_t *)&qword_2571E15D8);
  }
  return result;
}

unint64_t sub_2422135DC()
{
  unint64_t result;

  result = qword_2571E15E0;
  if (!qword_2571E15E0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.LoadAssetBundle.Response, &type metadata for ModelXPCRequest.LoadAssetBundle.Response);
    atomic_store(result, (unint64_t *)&qword_2571E15E0);
  }
  return result;
}

void sub_242213618(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_81_3(a1, a2, a3);
  OUTLINED_FUNCTION_56_1(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_34();
}

void sub_242213644(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_81_3(a1, a2, a3);
  OUTLINED_FUNCTION_56_1(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_34();
}

BOOL OUTLINED_FUNCTION_8_4(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_9_5(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  *v2 = a1;
  v2[1] = a2;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_10_5()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_11_3(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  NSObject *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v5, v6, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_12_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  return a13(v13, v14, v15);
}

void OUTLINED_FUNCTION_14_6(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_16_7(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_17_5()
{
  return sub_242272920();
}

uint64_t OUTLINED_FUNCTION_18_3()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_20_7()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_21_4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_23_6()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 104) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_24_6()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_25_4()
{
  return sub_242272C2C();
}

_QWORD *OUTLINED_FUNCTION_26_6(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;

  result = a2;
  *a2 = v2;
  a2[1] = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_28_7(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_242272950();
}

uint64_t OUTLINED_FUNCTION_29_5(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_242272950();
}

uint64_t OUTLINED_FUNCTION_30_2(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return sub_242272950();
}

uint64_t OUTLINED_FUNCTION_31_2(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
  return sub_242272950();
}

uint64_t OUTLINED_FUNCTION_36_4()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_37_2()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_38_4()
{
  return sub_2422726D4();
}

uint64_t OUTLINED_FUNCTION_39_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  unint64_t v5;
  va_list va;

  va_start(va, a5);
  return sub_2421BB36C(a5, v5, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_40_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_41_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_42_4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_43_3(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_242272950();
}

uint64_t OUTLINED_FUNCTION_44_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, _QWORD *a12)
{
  *a12 = a1;
  return sub_242272950();
}

uint64_t OUTLINED_FUNCTION_45_4(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_242272950();
}

void OUTLINED_FUNCTION_46_4(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type)
{
  uint8_t *v12;
  NSObject *v13;

  _os_log_impl(a1, v13, type, a4, v12, 0x16u);
}

uint64_t OUTLINED_FUNCTION_48_5(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 80) = a1;
  a1[2] = v2;
  a1[3] = v1;
  a1[4] = v4;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_49_4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
  *(_DWORD *)(a1 + 20) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_50_3()
{
  return sub_242272C5C();
}

uint64_t OUTLINED_FUNCTION_54_4()
{
  return sub_242272950();
}

uint64_t OUTLINED_FUNCTION_56_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a10 = v11;
  return (*(uint64_t (**)(uint64_t, uint64_t))(a11 + 8))(v12, v13);
}

uint64_t OUTLINED_FUNCTION_57_3(float a1)
{
  float *v1;

  *v1 = a1;
  return sub_242272644();
}

uint64_t OUTLINED_FUNCTION_58_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v0, v3);
}

uint64_t OUTLINED_FUNCTION_59_5(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return sub_242272950();
}

uint64_t OUTLINED_FUNCTION_60_4(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_242272950();
}

uint64_t OUTLINED_FUNCTION_61_3(float a1)
{
  float *v1;

  *v1 = a1;
  return sub_242272644();
}

uint64_t OUTLINED_FUNCTION_62_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v2, v1, v3);
}

uint64_t OUTLINED_FUNCTION_63_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  uint64_t v14;

  return a13(a2, v13, v14);
}

uint64_t OUTLINED_FUNCTION_64_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_65_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v2, v1, v3);
}

uint64_t OUTLINED_FUNCTION_66_4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return sub_242272950();
}

__n128 OUTLINED_FUNCTION_69_5(__n128 *a1)
{
  unint64_t v1;
  uint64_t v2;
  __n128 result;

  *(_QWORD *)(v2 + 48) = a1;
  result = *(__n128 *)(v2 + 24);
  a1[1] = result;
  a1[2].n128_u64[0] = v1;
  return result;
}

void OUTLINED_FUNCTION_78_5(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t OUTLINED_FUNCTION_79_5()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_80_1()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_2421D3DF4(v1, v0);
}

void OUTLINED_FUNCTION_81_5(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  sub_2421CE528(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_82_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v0, v1, v3);
}

uint64_t OUTLINED_FUNCTION_83_4(float a1)
{
  float *v1;

  *v1 = a1;
  return sub_242272644();
}

void OUTLINED_FUNCTION_84_4()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_2421CE528(v2, v0, v1);
}

void OUTLINED_FUNCTION_85_3()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_2421CE528(v2, v1, v0);
}

void OUTLINED_FUNCTION_86_4()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_2421CE528(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_88_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v2, v0, v3);
}

uint64_t OUTLINED_FUNCTION_89_3(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  return v2(a2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_90_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_91_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(a2, v2, v3);
}

void OUTLINED_FUNCTION_92_3(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  NSObject *v5;
  uint8_t *v6;

  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

void OUTLINED_FUNCTION_93_3(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, os_log_type_t type)
{
  NSObject *v12;
  uint8_t *v13;

  _os_log_impl(a1, v12, type, a4, v13, 0x16u);
}

void OUTLINED_FUNCTION_95_4(float a1)
{
  float *v1;

  *v1 = a1;
}

_QWORD *OUTLINED_FUNCTION_96_4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;

  result = a2;
  *a2 = v2;
  a2[1] = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_97_2()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_99_2()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_100_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_101_3()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 240) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_102_3(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return sub_242272950();
}

_QWORD *OUTLINED_FUNCTION_103_2(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 88) = result;
  result[2] = v2;
  result[3] = v4;
  result[4] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_104_3()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_105_2()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_106_3()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_107_2()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_108_2()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_109_3()
{
  return sub_242272494();
}

uint64_t OUTLINED_FUNCTION_110_3()
{
  return sub_2422726D4();
}

uint64_t OUTLINED_FUNCTION_111_2(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_2421BB36C(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_113_2()
{
  return sub_242272914();
}

uint64_t OUTLINED_FUNCTION_114_2(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return sub_242272950();
}

uint64_t OUTLINED_FUNCTION_115_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

void OUTLINED_FUNCTION_118_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD);

  sub_2421D11A4(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_119_3(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return sub_242272950();
}

BOOL OUTLINED_FUNCTION_120_1(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void OUTLINED_FUNCTION_121_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD);

  sub_2421CE528(v2, a2, v3);
}

void OUTLINED_FUNCTION_122_2()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  *v1 = v0;
  sub_2421D3DF4(v3, v2);
}

void OUTLINED_FUNCTION_124_1(float a1)
{
  float *v1;

  *v1 = a1;
}

void OUTLINED_FUNCTION_125_2(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_126_1(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_127_1()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_129_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return sub_242272950();
}

void OUTLINED_FUNCTION_130_1(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_2421CE528(a1, a2, v2);
}

void OUTLINED_FUNCTION_131_1()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_132_1(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return sub_242272950();
}

void OUTLINED_FUNCTION_133_1()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_134_1()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_135_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_137_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t OUTLINED_FUNCTION_138_1(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return sub_242272950();
}

uint64_t OUTLINED_FUNCTION_139_1()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_141_1()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_142_1(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_242213420(v2, a2);
}

uint64_t OUTLINED_FUNCTION_143_1(uint64_t a1)
{
  return sub_242228FF8(a1, 1);
}

uint64_t OUTLINED_FUNCTION_144_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_145_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_146_1(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  return sub_2421BB36C(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_149_1()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

void OUTLINED_FUNCTION_150_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_2421D11A4(a1, a2, v2);
}

void OUTLINED_FUNCTION_151_1(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_2421D3DF4(v2, a2);
}

void OUTLINED_FUNCTION_154_0()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_156_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_157_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_159_0()
{
  return sub_2422726D4();
}

void OUTLINED_FUNCTION_160(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  sub_2421CE528(v3, a2, v2);
}

void OUTLINED_FUNCTION_161_0(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_2421D11A4(a1, v2, v1);
}

void OUTLINED_FUNCTION_162_0(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_2421D11A4(a1, v2, v1);
}

void OUTLINED_FUNCTION_163_0(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_2421D11A4(a1, v2, v1);
}

_WORD *OUTLINED_FUNCTION_164_0(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_165_0()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_166_0()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_2421D3DF4(v0, v1);
}

uint64_t OUTLINED_FUNCTION_167(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  return sub_2421BB36C(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_169_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 176);
}

uint64_t OUTLINED_FUNCTION_170_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 192);
}

uint64_t OUTLINED_FUNCTION_171_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_172()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_173_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 232) = v0;
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_174(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_2421ED71C(a1, v3, a3);
}

void OUTLINED_FUNCTION_176_0(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_2421D3DF4(a1, v1);
}

uint64_t OUTLINED_FUNCTION_177_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_178_0()
{
  uint64_t (*v0)(_QWORD);
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  *v1 = v3;
  sub_2421D3DF4(v2, v0);
}

void OUTLINED_FUNCTION_179_0(float a1)
{
  float *v1;

  *v1 = a1;
}

void OUTLINED_FUNCTION_180_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  sub_2421CE528(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_181_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 192);
}

uint64_t OUTLINED_FUNCTION_183_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 216);
}

uint64_t OUTLINED_FUNCTION_184(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 16);
}

void OUTLINED_FUNCTION_189()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_191()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t OUTLINED_FUNCTION_192(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void OUTLINED_FUNCTION_193()
{
  _QWORD *v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v3;

  *v0 = v3;
  sub_2421D3DF4(v2, v1);
}

void OUTLINED_FUNCTION_194(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  sub_2421CE528(v3, a2, v2);
}

void OUTLINED_FUNCTION_195()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  _QWORD *v2;
  uint64_t v3;

  *v2 = v0;
  sub_2421D3DF4(v3, v1);
}

void OUTLINED_FUNCTION_196(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  sub_2421CE528(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_198()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
  return 0;
}

uint64_t OUTLINED_FUNCTION_199()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
  return 0;
}

uint64_t OUTLINED_FUNCTION_200()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
  return 0;
}

uint64_t OUTLINED_FUNCTION_201()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_203()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_205(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;

  return sub_24220BBE4(a1, a2, a4, v4);
}

uint64_t OUTLINED_FUNCTION_210@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = a1;
  return *(_QWORD *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_211(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_212@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = a1;
  return *(_QWORD *)(v2 + 40);
}

uint64_t OUTLINED_FUNCTION_213(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_214()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 168);
}

uint64_t OUTLINED_FUNCTION_215()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 184);
}

void OUTLINED_FUNCTION_216()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_217()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_218()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_219()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_220(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  sub_2421ED71C(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_222()
{
  return sub_242229174();
}

uint64_t OUTLINED_FUNCTION_223()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_227()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

void OUTLINED_FUNCTION_228(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_2421D3DF4(v2, a2);
}

uint64_t OUTLINED_FUNCTION_229()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

void OUTLINED_FUNCTION_230(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_2421ED71C(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_234()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t OUTLINED_FUNCTION_235()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_236(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_2421ED71C(a1, v3, a3);
}

void OUTLINED_FUNCTION_237()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_238()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_239()
{
  uint64_t v0;

}

void OUTLINED_FUNCTION_240()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_241@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  *v1 = *v3;
  *(_QWORD *)(a1 + 48) = v2;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_242()
{
  return swift_release();
}

void OUTLINED_FUNCTION_245()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
}

void OUTLINED_FUNCTION_246()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
}

void OUTLINED_FUNCTION_247()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
}

uint64_t OUTLINED_FUNCTION_252()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 176);
}

uint64_t OUTLINED_FUNCTION_255()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_256()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_257()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

_WORD *OUTLINED_FUNCTION_259(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_260()
{
  return sub_2422726D4();
}

uint64_t OUTLINED_FUNCTION_261()
{
  return sub_242272644();
}

uint64_t OUTLINED_FUNCTION_264()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t OUTLINED_FUNCTION_267()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 184);
}

uint64_t OUTLINED_FUNCTION_268(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_270()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 248) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_271()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 32) = v0;
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_274()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_275@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_278()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_279()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_282()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 168);
}

uint64_t OUTLINED_FUNCTION_285()
{
  return swift_willThrowTypedImpl();
}

void OUTLINED_FUNCTION_286()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_2421CE528(v1, v0, v2);
}

void OUTLINED_FUNCTION_287(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_2421CE528(a1, v3, a3);
}

void OUTLINED_FUNCTION_288()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_289()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 208);
}

uint64_t OUTLINED_FUNCTION_292(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_293(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 232) = result;
  return result;
}

void OUTLINED_FUNCTION_294(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_2421ED71C(a1, v3, a3);
}

void OUTLINED_FUNCTION_295(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_2421ED71C(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_297()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_298()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 184);
}

uint64_t OUTLINED_FUNCTION_299()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 200);
}

void OUTLINED_FUNCTION_300(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_303(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

void OUTLINED_FUNCTION_304(uint64_t a1)
{
  uint64_t *v1;

  sub_242213420(a1, v1);
}

uint64_t OUTLINED_FUNCTION_307()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 24) = v0;
  return swift_task_dealloc();
}

_QWORD *OUTLINED_FUNCTION_308@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

void OUTLINED_FUNCTION_309()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_2421D3DF4(v0, v1);
}

void OUTLINED_FUNCTION_310(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_2421D11A4(a1, v1, v2);
}

void OUTLINED_FUNCTION_311(uint64_t a1)
{
  uint64_t *v1;

  sub_242213420(a1, v1);
}

void OUTLINED_FUNCTION_314(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_2421D3DF4(v2, a2);
}

uint64_t OUTLINED_FUNCTION_315()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 200);
}

void OUTLINED_FUNCTION_321()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_323()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t OUTLINED_FUNCTION_324(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_325(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_327(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_328(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_329(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 224) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_330(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_334()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 200);
}

uint64_t OUTLINED_FUNCTION_336(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;

  return sub_2421BB36C(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_338()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_340()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 200);
}

uint64_t OUTLINED_FUNCTION_342(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2421F13FC(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_343()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_344()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_348(uint64_t a1, uint64_t *a2)
{
  return __swift_instantiateConcreteTypeFromMangledName(a2);
}

uint64_t OUTLINED_FUNCTION_349()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_350()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 184);
}

BOOL OUTLINED_FUNCTION_352(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_354()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 184);
}

void OUTLINED_FUNCTION_359(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_242213618(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_360()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_362()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_365()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_367()
{
  return sub_24227292C();
}

uint64_t OUTLINED_FUNCTION_368()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_369()
{
  void *v0;

}

_QWORD *OUTLINED_FUNCTION_370()
{
  _QWORD *v0;
  _QWORD *result;
  uint64_t v2;

  result = (_QWORD *)v0[27];
  v2 = v0[12];
  *result = v0[11];
  result[1] = v2;
  return result;
}

void OUTLINED_FUNCTION_372(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t *v5;

  sub_24220BE80(v4, v5, a3, a4);
}

uint64_t OUTLINED_FUNCTION_373()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_374()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return *(_QWORD *)(v2 + 32);
}

void OUTLINED_FUNCTION_375(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t v5;

  sub_24220BE80(v5, v4, a3, a4);
}

ModelManagerServices::InferenceProviderXPCRequest::ConfigureBuiltInProviderRequest __swiftcall InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.init(provider:)(ModelManagerServices::BuiltInInferenceProvider provider)
{
  _BYTE *v1;
  ModelManagerServices::InferenceProviderXPCRequest::ConfigureBuiltInProviderRequest result;

  OUTLINED_FUNCTION_96_5(v1);
  return result;
}

void InferenceProviderXPCRequest.PrewarmBundle.init(information:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2421D11A4(a1, a2, type metadata accessor for InferenceProviderPrewarmInformation);
}

void InferenceProviderXPCRequest.TransitionAsset.init(inferenceAssetDescriptor:newState:oldState:requestIdentifier:)(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *a2;
  v7 = *a3;
  *(_QWORD *)a4 = *(_QWORD *)a1;
  *(_QWORD *)(a4 + 8) = v5;
  *(_OWORD *)(a4 + 16) = *(_OWORD *)(a1 + 16);
  *(_BYTE *)(a4 + 32) = v6;
  *(_BYTE *)(a4 + 33) = v7;
  v8 = type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0);
  OUTLINED_FUNCTION_138_2(v8, a4 + *(int *)(v8 + 28), &qword_2543A7848);
  OUTLINED_FUNCTION_34();
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2571E1900);
}

void InferenceProviderXPCRequest.InferenceRequest.init(asStream:clientData:configuration:requestIdentifier:)(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  int *v7;
  uint64_t v8;

  *a4 = a1;
  v7 = (int *)type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
  sub_2421D11A4(a2, (uint64_t)&a4[v7[5]], type metadata accessor for ClientData);
  sub_2421D11A4(a3, (uint64_t)&a4[v7[6]], type metadata accessor for InferenceProviderRequestConfiguration);
  OUTLINED_FUNCTION_138_2(v8, (uint64_t)&a4[v7[7]], &qword_2543A7848);
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2571E1920);
}

void InferenceProviderXPCRequest.WillCancelNotification.init(requestID:reason:)(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v4;

  v4 = *a2;
  sub_242213644(a1, a3, &qword_2543A7848);
  *(_BYTE *)(a3 + *(int *)(type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0) + 20)) = v4;
  OUTLINED_FUNCTION_34();
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2571E1950);
}

void InferenceProviderXPCRequest.AwaitEndStreamRequest.init(requestID:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_242213644(a1, a2, &qword_2543A7848);
}

void InferenceProviderRequestResult.directInferenceProviderEndpoint.getter()
{
  sub_242217DC0(type metadata accessor for InferenceProviderRequestResult);
}

uint64_t type metadata accessor for InferenceProviderRequestResult(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2571E18B0);
}

void InferenceProviderRequestResult.firstResponse.getter()
{
  sub_242217E00(type metadata accessor for InferenceProviderRequestResult);
}

void InferenceProviderRequestResult.init(requestID:directInferenceProviderEndpoint:firstResponse:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  sub_242213644(a1, a3, &qword_2543A7848);
  v5 = type metadata accessor for InferenceProviderRequestResult(0);
  sub_242213644(a2, a3 + *(int *)(v5 + 20), &qword_2571E15F0);
  OUTLINED_FUNCTION_138_2(v6, a3 + *(int *)(v5 + 24), &qword_2571E0560);
  OUTLINED_FUNCTION_14();
}

uint64_t sub_242214C44(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 0x4974736575716572 && a2 == 0xE900000000000044;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000242284430 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365527473726966 && a2 == 0xED000065736E6F70)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_242272C20();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_242214DA4(char a1)
{
  if (!a1)
    return 0x4974736575716572;
  if (a1 == 1)
    return 0xD00000000000001FLL;
  return 0x7365527473726966;
}

uint64_t sub_242214E14()
{
  char *v0;

  return sub_242214DA4(*v0);
}

uint64_t sub_242214E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242214C44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242214E40()
{
  sub_242215018();
  return sub_242272D70();
}

uint64_t sub_242214E68()
{
  sub_242215018();
  return sub_242272D7C();
}

void InferenceProviderRequestResult.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  OUTLINED_FUNCTION_99_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E15F8);
  OUTLINED_FUNCTION_45_3();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_22_4();
  sub_242215018();
  OUTLINED_FUNCTION_109();
  v5[15] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  sub_2422153A8((uint64_t)&unk_2543A7840);
  OUTLINED_FUNCTION_147();
  if (!v0)
  {
    type metadata accessor for InferenceProviderRequestResult(0);
    v5[14] = 1;
    sub_242272548();
    sub_242215054((uint64_t)&unk_2571E1608);
    OUTLINED_FUNCTION_144_2();
    v5[13] = 2;
    OUTLINED_FUNCTION_111_3();
    sub_242215054((uint64_t)&unk_2571E1610);
    OUTLINED_FUNCTION_144_2();
  }
  OUTLINED_FUNCTION_116((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_65_3();
}

unint64_t sub_242215018()
{
  unint64_t result;

  result = qword_2571E1600;
  if (!qword_2571E1600)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B740, &type metadata for InferenceProviderRequestResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1600);
  }
  return result;
}

void sub_242215054(uint64_t a1)
{
  void (*v1)(uint64_t);

  if (!OUTLINED_FUNCTION_55_3(a1))
  {
    v1(255);
    OUTLINED_FUNCTION_78();
  }
  OUTLINED_FUNCTION_34();
}

void InferenceProviderRequestResult.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  OUTLINED_FUNCTION_45_0();
  v28 = v0;
  v3 = v2;
  v22 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_78_6(v6, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E15F0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_19_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_77_5(v9, v21);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1618);
  v10 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for InferenceProviderRequestResult(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v3;
  OUTLINED_FUNCTION_50_4(v3);
  sub_242215018();
  v26 = v12;
  v17 = v28;
  sub_242272D40();
  if (v17)
  {
    OUTLINED_FUNCTION_63_5();
  }
  else
  {
    v18 = v10;
    sub_2422153A8((uint64_t)&unk_2571E0980);
    v19 = v24;
    sub_242272AAC();
    sub_242213644(v19, (uint64_t)v16, &qword_2543A7848);
    sub_242272548();
    sub_242215054((uint64_t)&unk_2571E1620);
    sub_242272A70();
    sub_242213644(v1, (uint64_t)&v16[*(int *)(v13 + 20)], &qword_2571E15F0);
    OUTLINED_FUNCTION_111_3();
    sub_242215054((uint64_t)&unk_2571E1628);
    v20 = v23;
    sub_242272A70();
    OUTLINED_FUNCTION_116((uint64_t)v26, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    sub_242213644(v20, (uint64_t)&v16[*(int *)(v13 + 24)], &qword_2571E0560);
    OUTLINED_FUNCTION_114_3((uint64_t)v16, v22);
    OUTLINED_FUNCTION_63_5();
    OUTLINED_FUNCTION_102_1((uint64_t)v16);
  }
  OUTLINED_FUNCTION_16_0();
}

void sub_2422153A8(uint64_t a1)
{
  if (!OUTLINED_FUNCTION_55_3(a1))
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543A7848);
    OUTLINED_FUNCTION_78();
  }
  OUTLINED_FUNCTION_34();
}

uint64_t sub_2422153DC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000016 && a2 == 0x8000000242284450 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000242284470)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_242272C20();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_2422154C4(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000012;
  else
    return 0xD000000000000016;
}

uint64_t sub_242215500(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    OUTLINED_FUNCTION_86_0();
    v4 = 0;
  }
  else
  {
    v3 = OUTLINED_FUNCTION_141_2();
    OUTLINED_FUNCTION_86_0();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_24221555C()
{
  InferenceProviderRequestResult.init(from:)();
}

void sub_242215570()
{
  InferenceProviderRequestResult.encode(to:)();
}

unint64_t sub_242215584()
{
  char *v0;

  return sub_2422154C4(*v0);
}

uint64_t sub_24221558C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2422153DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2422155B0()
{
  sub_242215980();
  return sub_242272D70();
}

uint64_t sub_2422155D8()
{
  sub_242215980();
  return sub_242272D7C();
}

uint64_t sub_242215604()
{
  sub_2422159BC();
  return sub_242272D70();
}

uint64_t sub_24221562C()
{
  sub_2422159BC();
  return sub_242272D7C();
}

uint64_t sub_242215654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242215500(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24221567C()
{
  sub_2422159F8();
  return sub_242272D70();
}

uint64_t sub_2422156A4()
{
  sub_2422159F8();
  return sub_242272D7C();
}

void InferenceProviderXPCRequest.Notification.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_45_0();
  v24 = v1;
  v6 = v5;
  v22 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571E1630) - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_78_6(v8, v19);
  type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_2_0();
  v21 = v10;
  v20 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571E1638) - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v11);
  v12 = OUTLINED_FUNCTION_79_6();
  type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(v12);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v13);
  v14 = OUTLINED_FUNCTION_40_3();
  type metadata accessor for InferenceProviderXPCRequest.Notification(v14);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_67();
  v23 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571E1640) - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_82_6();
  OUTLINED_FUNCTION_50_4(v6);
  sub_242215980();
  sub_242272D64();
  sub_2421CE528(v24, v2, type metadata accessor for InferenceProviderXPCRequest.Notification);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2421D11A4(v2, v21, type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification);
    OUTLINED_FUNCTION_140_1();
    OUTLINED_FUNCTION_109_4();
    sub_242215054((uint64_t)&unk_2571E1658);
    sub_242272B48();
    OUTLINED_FUNCTION_44_4(v22);
    v17 = v21;
    v18 = type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification;
  }
  else
  {
    sub_2421D11A4(v2, v4, type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification);
    sub_2422159F8();
    OUTLINED_FUNCTION_109_4();
    sub_242215054((uint64_t)&unk_2571E1668);
    sub_242272B48();
    OUTLINED_FUNCTION_54_5(v0, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    v17 = v4;
    v18 = type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification;
  }
  sub_2421D3DF4(v17, v18);
  OUTLINED_FUNCTION_14_0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
  OUTLINED_FUNCTION_16_0();
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2571E1960);
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.Notification(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2571E18E0);
}

unint64_t sub_242215980()
{
  unint64_t result;

  result = qword_2571E1648;
  if (!qword_2571E1648)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B6F0, &type metadata for InferenceProviderXPCRequest.Notification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1648);
  }
  return result;
}

unint64_t sub_2422159BC()
{
  unint64_t result;

  result = qword_2571E1650;
  if (!qword_2571E1650)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B6A0, &type metadata for InferenceProviderXPCRequest.Notification.TriggerEndOfStreamCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1650);
  }
  return result;
}

unint64_t sub_2422159F8()
{
  unint64_t result;

  result = qword_2571E1660;
  if (!qword_2571E1660)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B650, &type metadata for InferenceProviderXPCRequest.Notification.WillCancelNotificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1660);
  }
  return result;
}

void InferenceProviderXPCRequest.Notification.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;

  OUTLINED_FUNCTION_45_0();
  v52 = v0;
  v4 = v3;
  v44 = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1670);
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_0();
  v49 = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1678);
  v45 = *(_QWORD *)(v9 - 8);
  v46 = v9;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_77_5(v11, (uint64_t)v40);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1680);
  v50 = *(_QWORD *)(v12 - 8);
  v51 = v12;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v13);
  v14 = OUTLINED_FUNCTION_80_2();
  v15 = type metadata accessor for InferenceProviderXPCRequest.Notification(v14);
  OUTLINED_FUNCTION_27();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_118_4();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v40 - v21;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_242215980();
  OUTLINED_FUNCTION_75_4();
  if (v0)
    goto LABEL_8;
  v41 = v19;
  v42 = v2;
  v40 = v22;
  v43 = v15;
  v52 = v4;
  v23 = sub_242272AE8();
  v24 = *(_QWORD *)(v23 + 16);
  v25 = v1;
  if (!v24
    || (v26 = *(_BYTE *)(v23 + 32),
        sub_2421C4040(1, v24, v23, v23 + 32, 0, (2 * v24) | 1),
        v28 = v27,
        v30 = v29,
        swift_bridgeObjectRelease(),
        v28 != v30 >> 1))
  {
    v33 = v50;
    v34 = v43;
    v35 = sub_2422729BC();
    OUTLINED_FUNCTION_53_1();
    v37 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFE50);
    *v37 = v34;
    sub_242272A58();
    sub_2422729B0();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v37, *MEMORY[0x24BEE26D0], v35);
    swift_willThrow();
    OUTLINED_FUNCTION_67_1();
    OUTLINED_FUNCTION_116(v25, *(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
    v4 = v52;
LABEL_8:
    v38 = (uint64_t)v4;
    goto LABEL_9;
  }
  if ((v26 & 1) != 0)
  {
    OUTLINED_FUNCTION_140_1();
    OUTLINED_FUNCTION_72_5();
    type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification(0);
    sub_242215054((uint64_t)&unk_2571E1688);
    v31 = (uint64_t)v41;
    OUTLINED_FUNCTION_88_6();
    v32 = v50;
    OUTLINED_FUNCTION_44_4(v47);
  }
  else
  {
    sub_2422159F8();
    OUTLINED_FUNCTION_72_5();
    OUTLINED_FUNCTION_112_3();
    sub_242215054((uint64_t)&unk_2571E1690);
    v31 = v42;
    OUTLINED_FUNCTION_88_6();
    v32 = v50;
    OUTLINED_FUNCTION_44_4(v45);
  }
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_116(v25, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
  swift_storeEnumTagMultiPayload();
  v39 = (uint64_t)v40;
  sub_2421D11A4(v31, (uint64_t)v40, type metadata accessor for InferenceProviderXPCRequest.Notification);
  sub_2421D11A4(v39, v44, type metadata accessor for InferenceProviderXPCRequest.Notification);
  v38 = (uint64_t)v52;
LABEL_9:
  __swift_destroy_boxed_opaque_existential_1Tm(v38);
  OUTLINED_FUNCTION_16_0();
}

void sub_242215E34()
{
  InferenceProviderXPCRequest.Notification.init(from:)();
}

void sub_242215E48()
{
  InferenceProviderXPCRequest.Notification.encode(to:)();
}

uint64_t sub_242215E60()
{
  sub_24221A128();
  return sub_242272D70();
}

uint64_t sub_242215E88()
{
  sub_24221A128();
  return sub_242272D7C();
}

uint64_t InferenceProviderXPCRequest.EmptyResponse.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1698);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_50_4(a1);
  sub_24221A128();
  sub_242272D64();
  return OUTLINED_FUNCTION_54_5((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
}

uint64_t InferenceProviderXPCRequest.EmptyResponse.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t sub_242215F8C(uint64_t a1)
{
  return InferenceProviderXPCRequest.EmptyResponse.init(from:)(a1);
}

uint64_t sub_242215FA0(_QWORD *a1)
{
  return InferenceProviderXPCRequest.EmptyResponse.encode(to:)(a1);
}

ModelManagerServices::InferenceProviderXPCRequest::WireCode_optional __swiftcall InferenceProviderXPCRequest.WireCode.init(rawValue:)(Swift::UInt8 rawValue)
{
  _BYTE *v1;
  ModelManagerServices::InferenceProviderXPCRequest::WireCode_optional result;

  OUTLINED_FUNCTION_96_5(v1);
  return result;
}

uint64_t InferenceProviderXPCRequest.WireCode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void sub_242215FD0()
{
  sub_24225ECC0();
}

void sub_242215FD8()
{
  sub_2421C7ED8();
}

void sub_242215FE0()
{
  sub_24225EF48();
}

ModelManagerServices::InferenceProviderXPCRequest::WireCode_optional sub_242215FE8(Swift::UInt8 *a1)
{
  return InferenceProviderXPCRequest.WireCode.init(rawValue:)(*a1);
}

void sub_242215FF0(_BYTE *a1@<X8>)
{
  *a1 = InferenceProviderXPCRequest.WireCode.rawValue.getter();
  OUTLINED_FUNCTION_34();
}

uint64_t sub_242216010()
{
  sub_2422209CC();
  return sub_242272770();
}

uint64_t sub_24221606C()
{
  sub_2422209CC();
  return sub_242272758();
}

void InferenceProviderXPCRequest.init(from:)()
{
  char *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[9];
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD v37[5];

  OUTLINED_FUNCTION_45_0();
  v34 = v0;
  v3 = v2;
  v32[8] = v4;
  v32[7] = type metadata accessor for InferenceProviderXPCRequest(0);
  OUTLINED_FUNCTION_27();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32[6] = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v32[5] = (char *)v32 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v32 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v32 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v32 - v17;
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_118_4();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v32 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v32 - v23;
  v33 = v3;
  OUTLINED_FUNCTION_134_2();
  v25 = v34;
  sub_242272D28();
  if (v25)
  {
    v28 = v33;
  }
  else
  {
    v34 = v22;
    v32[0] = v1;
    v32[1] = v18;
    v32[2] = v15;
    v32[3] = v12;
    v32[4] = v24;
    __swift_project_boxed_opaque_existential_1(v37, v37[3]);
    v26 = sub_242272BC0();
    if ((v27 & 1) == 0 && v26 == 2)
    {
      OUTLINED_FUNCTION_9_6();
      sub_24221A178();
      OUTLINED_FUNCTION_117_2();
      sub_242272BD8();
      __asm { BR              X10 }
    }
    v29 = sub_2422729BC();
    OUTLINED_FUNCTION_53_1();
    v31 = v30;
    v28 = v33;
    __swift_project_boxed_opaque_existential_1(v33, v33[3]);
    sub_242272D1C();
    v35 = 0;
    v36 = 0xE000000000000000;
    sub_242272998();
    sub_2422726F8();
    OUTLINED_FUNCTION_50_4(v37);
    sub_242272BC0();
    sub_242272B84();
    sub_2422726F8();
    OUTLINED_FUNCTION_146();
    sub_2422729B0();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, *MEMORY[0x24BEE26D8], v29);
    swift_willThrow();
    OUTLINED_FUNCTION_62_5();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  OUTLINED_FUNCTION_16_0();
}

void sub_2422163BC()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_9_6();
  sub_24221A204();
  OUTLINED_FUNCTION_117_2();
  sub_242272BD8();
  if (!v0)
  {
    *v1 = *(_BYTE *)(v3 - 136);
    swift_storeEnumTagMultiPayload();
    v4 = *(_QWORD *)(v3 - 192);
    sub_2421D11A4((uint64_t)v1, v4, type metadata accessor for InferenceProviderXPCRequest);
    OUTLINED_FUNCTION_62_5();
    sub_2421D11A4(v4, v2, type metadata accessor for InferenceProviderXPCRequest);
    JUMPOUT(0x242216274);
  }
  JUMPOUT(0x242216268);
}

void InferenceProviderXPCRequest.encode(to:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_133_2();
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v2);
  v4 = OUTLINED_FUNCTION_61_4(v3, v13);
  type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest(v4);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_0();
  type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_0();
  type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_0();
  type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_21_1();
  type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_80_2();
  type metadata accessor for InferenceProviderXPCRequest(v10);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_19_5();
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  sub_242272D4C();
  sub_2421CE528((uint64_t)v0, v1, type metadata accessor for InferenceProviderXPCRequest);
  v12 = (char *)sub_2422167AC + 4 * byte_242279F67[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_2422167AC()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  char v3;

  v3 = *v1;
  *(_BYTE *)(v2 - 65) = 0;
  OUTLINED_FUNCTION_5_5();
  OUTLINED_FUNCTION_58_3();
  OUTLINED_FUNCTION_11_4();
  if (!v0)
  {
    *(_BYTE *)(v2 - 65) = v3;
    OUTLINED_FUNCTION_15_4();
    sub_24221A27C();
    OUTLINED_FUNCTION_16_8();
  }
  OUTLINED_FUNCTION_62_5();
  OUTLINED_FUNCTION_16_0();
}

void sub_242216B2C()
{
  InferenceProviderXPCRequest.init(from:)();
}

void sub_242216B40()
{
  InferenceProviderXPCRequest.encode(to:)();
}

void InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.provider.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_96_5(a1);
}

uint64_t InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.request.getter@<X0>(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
  type metadata accessor for InferenceProviderXPCRequest(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_242216B94(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x72656469766F7270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_242272C20();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_242216C18()
{
  return 0x72656469766F7270;
}

uint64_t sub_242216C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242216B94(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_242216C5C()
{
  sub_24221A2B8();
  return sub_242272D70();
}

uint64_t sub_242216C84()
{
  sub_24221A2B8();
  return sub_242272D7C();
}

void InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_45_0();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1728);
  OUTLINED_FUNCTION_45_3();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_68();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_24221A2B8();
  OUTLINED_FUNCTION_109();
  sub_24221A2F4();
  OUTLINED_FUNCTION_130_2();
  OUTLINED_FUNCTION_14_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_16_0();
}

void InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_45_0();
  v16 = v15;
  v18 = v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1740);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_68();
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_24221A2B8();
  sub_242272D40();
  if (!v13)
  {
    sub_24221A330();
    sub_242272AAC();
    OUTLINED_FUNCTION_14_0(v14, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    *v18 = a13;
  }
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_16_0();
}

void sub_242216E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_242216E5C()
{
  InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.encode(to:)();
}

void InferenceProviderXPCRequest.PrewarmBundle.information.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2421CE528(v1, a1, type metadata accessor for InferenceProviderPrewarmInformation);
}

uint64_t InferenceProviderXPCRequest.PrewarmBundle.request.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_90_3(type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle, (void (*)(_QWORD))type metadata accessor for InferenceProviderXPCRequest, a1);
}

uint64_t sub_242216EA8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x74616D726F666E69 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_242272C20();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_242216F3C()
{
  return 0x74616D726F666E69;
}

uint64_t sub_242216F60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242216EA8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_242216F88()
{
  sub_24221A36C();
  return sub_242272D70();
}

uint64_t sub_242216FB0()
{
  sub_24221A36C();
  return sub_242272D7C();
}

void InferenceProviderXPCRequest.PrewarmBundle.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1750);
  OUTLINED_FUNCTION_45_3();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_22_4();
  sub_24221A36C();
  OUTLINED_FUNCTION_109();
  type metadata accessor for InferenceProviderPrewarmInformation(0);
  sub_242215054((uint64_t)&unk_2571E1760);
  OUTLINED_FUNCTION_130_2();
  OUTLINED_FUNCTION_54_5(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_65_3();
}

void InferenceProviderXPCRequest.PrewarmBundle.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_45_0();
  v4 = v3;
  v12 = v5;
  type metadata accessor for InferenceProviderPrewarmInformation(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_0();
  v14 = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1768);
  v13 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_40_3();
  type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle(v10);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_19_5();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_24221A36C();
  sub_242272D40();
  if (!v0)
  {
    sub_242215054((uint64_t)&unk_2571E1770);
    sub_242272AAC();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v8);
    sub_2421D11A4(v14, v1, type metadata accessor for InferenceProviderPrewarmInformation);
    sub_2421D11A4(v1, v12, type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle);
  }
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_16_0();
}

void sub_242217204()
{
  InferenceProviderXPCRequest.PrewarmBundle.init(from:)();
}

void sub_242217218()
{
  InferenceProviderXPCRequest.PrewarmBundle.encode(to:)();
}

uint64_t InferenceProviderXPCRequest.TransitionAsset.inferenceAssetDescriptor.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  sub_242272644();
  return sub_242272644();
}

void InferenceProviderXPCRequest.TransitionAsset.newState.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_96_5(a1);
}

void InferenceProviderXPCRequest.TransitionAsset.oldState.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_96_5(a1);
}

void InferenceProviderXPCRequest.TransitionAsset.requestIdentifier.getter(uint64_t a1@<X8>)
{
  sub_242217E30(type metadata accessor for InferenceProviderXPCRequest.TransitionAsset, a1);
}

uint64_t InferenceProviderXPCRequest.TransitionAsset.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_242219DE4(type metadata accessor for InferenceProviderXPCRequest.TransitionAsset, (void (*)(_QWORD))type metadata accessor for InferenceProviderXPCRequest, a1);
}

uint64_t sub_242217290(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  char v7;

  if (a1 == 0xD000000000000018 && a2 == 0x8000000242284490 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x657461745377656ELL && a2 == 0xE800000000000000;
    if (v5 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v6 = a1 == 0x6574617453646C6FLL && a2 == 0xE800000000000000;
      if (v6 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x80000002422844B0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v7 = sub_242272C20();
        swift_bridgeObjectRelease();
        if ((v7 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_24221742C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_242217468 + 4 * byte_242279F6E[a1]))(0xD000000000000018, 0x8000000242284490);
}

uint64_t sub_242217468()
{
  return 0x657461745377656ELL;
}

unint64_t sub_242217490()
{
  return 0xD000000000000011;
}

uint64_t sub_2422174AC()
{
  unsigned __int8 *v0;

  return sub_24221742C(*v0);
}

uint64_t sub_2422174B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242217290(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2422174D8()
{
  sub_24221A3A8();
  return sub_242272D70();
}

uint64_t sub_242217500()
{
  sub_24221A3A8();
  return sub_242272D7C();
}

void InferenceProviderXPCRequest.TransitionAsset.encode(to:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  OUTLINED_FUNCTION_99_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1778);
  OUTLINED_FUNCTION_45_3();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_22_4();
  sub_24221A3A8();
  OUTLINED_FUNCTION_109();
  v6 = v1[1];
  v9 = *v1;
  v10 = v6;
  v11 = *((_OWORD *)v1 + 1);
  v8 = 0;
  sub_2421E379C();
  OUTLINED_FUNCTION_147();
  if (!v0)
  {
    LOBYTE(v9) = *((_BYTE *)v1 + 32);
    v8 = 1;
    sub_2421E3850();
    OUTLINED_FUNCTION_147();
    LOBYTE(v9) = *((_BYTE *)v1 + 33);
    v8 = 2;
    OUTLINED_FUNCTION_147();
    type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0);
    LOBYTE(v9) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
    sub_2422153A8((uint64_t)&unk_2543A7840);
    OUTLINED_FUNCTION_147();
  }
  OUTLINED_FUNCTION_116((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_65_3();
}

void InferenceProviderXPCRequest.TransitionAsset.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_45_0();
  v23 = v0;
  v4 = v3;
  v19 = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1788);
  MEMORY[0x24BDAC7A8](v21);
  v10 = OUTLINED_FUNCTION_81_6();
  v11 = type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(v10);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_82_6();
  v22 = v4;
  OUTLINED_FUNCTION_50_4(v4);
  sub_24221A3A8();
  v20 = v1;
  v13 = v23;
  sub_242272D40();
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
  }
  else
  {
    v18 = v11;
    v23 = v6;
    sub_2421E38C0();
    OUTLINED_FUNCTION_49_2();
    v14 = v25;
    v15 = v26;
    v16 = v27;
    *(_QWORD *)v2 = v24;
    *(_QWORD *)(v2 + 8) = v14;
    *(_QWORD *)(v2 + 16) = v15;
    *(_QWORD *)(v2 + 24) = v16;
    sub_2421E3974();
    OUTLINED_FUNCTION_136_1();
    OUTLINED_FUNCTION_49_2();
    v17[1] = v14;
    *(_BYTE *)(v2 + 32) = v24;
    OUTLINED_FUNCTION_136_1();
    OUTLINED_FUNCTION_49_2();
    *(_BYTE *)(v2 + 33) = v24;
    LOBYTE(v24) = 3;
    sub_2422153A8((uint64_t)&unk_2571E0980);
    OUTLINED_FUNCTION_49_2();
    OUTLINED_FUNCTION_57_4();
    sub_242213644((uint64_t)v9, v2 + *(int *)(v18 + 28), &qword_2543A7848);
    OUTLINED_FUNCTION_114_3(v2, v19);
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_102_1(v2);
  }
  OUTLINED_FUNCTION_16_0();
}

void sub_242217920()
{
  InferenceProviderXPCRequest.TransitionAsset.init(from:)();
}

void sub_242217934()
{
  InferenceProviderXPCRequest.TransitionAsset.encode(to:)();
}

void InferenceProviderXPCRequest.FetchNextStreamResultsRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[5];

  OUTLINED_FUNCTION_45_0();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_81_6();
  type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(v6);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_21_1();
  OUTLINED_FUNCTION_137_2();
  sub_242272D34();
  if (!v0)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_2422153A8((uint64_t)&unk_2571E0980);
    sub_242272C38();
    sub_242213644(v1, v2, &qword_2543A7848);
    OUTLINED_FUNCTION_62_5();
    sub_2421D11A4(v2, v4, type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
  }
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_16_0();
}

void InferenceProviderXPCRequest.FetchNextStreamResultsRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_121_2();
  v1 = sub_242272D58();
  OUTLINED_FUNCTION_56_4(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, v12, v13, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  sub_2422153A8((uint64_t)&unk_2543A7840);
  v9 = sub_242272C50();
  OUTLINED_FUNCTION_86_5(v9);
  OUTLINED_FUNCTION_85_4();
}

uint64_t InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response.elements.getter()
{
  return sub_242272644();
}

uint64_t InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response.isTerminal.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

ModelManagerServices::InferenceProviderXPCRequest::FetchNextStreamResultsRequest::Response __swiftcall InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response.init(elements:isTerminal:)(Swift::OpaquePointer elements, Swift::Bool isTerminal)
{
  uint64_t v2;
  ModelManagerServices::InferenceProviderXPCRequest::FetchNextStreamResultsRequest::Response result;

  *(Swift::OpaquePointer *)v2 = elements;
  *(_BYTE *)(v2 + 8) = isTerminal;
  result.elements = elements;
  result.isTerminal = isTerminal;
  return result;
}

uint64_t InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE v8[24];
  uint64_t v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242272D28();
  if (v2)
    return OUTLINED_FUNCTION_87();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1790);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
  sub_24221A3E4((uint64_t)&unk_2571E1798);
  sub_242272BD8();
  v4 = v10;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
  sub_242272644();
  v5 = sub_242272BCC();
  v6 = v5 & 1;
  OUTLINED_FUNCTION_86_5(v5);
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v6;
  OUTLINED_FUNCTION_87();
  return OUTLINED_FUNCTION_146();
}

void InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_121_2();
  v4 = sub_242272D4C();
  OUTLINED_FUNCTION_56_4(v4, v5, v6, v7, v8, v9, v10, v11, v3, v21, v23, v25, v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1790);
  sub_24221A3E4((uint64_t)&unk_2571E17A0);
  v12 = sub_242272BFC();
  if (!v2)
  {
    OUTLINED_FUNCTION_56_4(v12, v13, v14, v15, v16, v17, v18, v19, v20, v22, v24, v26, v28);
    v12 = sub_242272BF0();
  }
  OUTLINED_FUNCTION_86_5(v12);
  OUTLINED_FUNCTION_85_4();
}

uint64_t sub_242217D30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response.init(from:)(a1, a2);
}

void sub_242217D44(_QWORD *a1)
{
  InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response.encode(to:)(a1);
}

uint64_t InferenceProviderXPCRequest.FetchNextStreamResultsRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_242219DE4(type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest, (void (*)(_QWORD))type metadata accessor for InferenceProviderXPCRequest, a1);
}

void sub_242217D74()
{
  InferenceProviderXPCRequest.FetchNextStreamResultsRequest.init(from:)();
}

void sub_242217D88(_QWORD *a1)
{
  InferenceProviderXPCRequest.FetchNextStreamResultsRequest.encode(to:)(a1);
}

uint64_t InferenceProviderXPCRequest.InferenceRequest.isStream.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void InferenceProviderXPCRequest.InferenceRequest.clientData.getter()
{
  sub_242217DC0(type metadata accessor for InferenceProviderXPCRequest.InferenceRequest);
}

void sub_242217DC0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_64_5(a1);
  OUTLINED_FUNCTION_113_3(*(int *)(v1 + 20));
  OUTLINED_FUNCTION_14();
}

void InferenceProviderXPCRequest.InferenceRequest.configuration.getter()
{
  sub_242217E00(type metadata accessor for InferenceProviderXPCRequest.InferenceRequest);
}

void sub_242217E00(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_64_5(a1);
  OUTLINED_FUNCTION_113_3(*(int *)(v1 + 24));
  OUTLINED_FUNCTION_14();
}

void InferenceProviderXPCRequest.InferenceRequest.requestIdentifier.getter(uint64_t a1@<X8>)
{
  sub_242217E30(type metadata accessor for InferenceProviderXPCRequest.InferenceRequest, a1);
}

void sub_242217E30(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  sub_242213618(v2 + *(int *)(v4 + 28), a2, &qword_2543A7848);
  OUTLINED_FUNCTION_34();
}

uint64_t InferenceProviderXPCRequest.InferenceRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_242219DE4(type metadata accessor for InferenceProviderXPCRequest.InferenceRequest, (void (*)(_QWORD))type metadata accessor for InferenceProviderXPCRequest, a1);
}

uint64_t sub_242217E84(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  BOOL v7;
  char v8;

  v3 = a1 == 0x6D61657274537369 && a2 == 0xE800000000000000;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6144746E65696C63 && a2 == 0xEA00000000006174;
    if (v6 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461;
      if (v7 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x80000002422844B0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = sub_242272C20();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_242218038()
{
  return 4;
}

uint64_t sub_242218040(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_242218078 + 4 * byte_242279F72[a1]))(0xD000000000000011, 0x80000002422844B0);
}

uint64_t sub_242218078()
{
  return 0x6D61657274537369;
}

uint64_t sub_242218090()
{
  return 0x72756769666E6F63;
}

uint64_t sub_2422180B4()
{
  return 0x6144746E65696C63;
}

void sub_2422180D0()
{
  OUTLINED_FUNCTION_98_2();
  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_48();
}

uint64_t sub_2422180F8()
{
  unsigned __int8 *v0;

  return sub_242218040(*v0);
}

uint64_t sub_242218100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242217E84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242218124@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242218038();
  *a1 = result;
  return result;
}

uint64_t sub_242218148()
{
  sub_24221A464();
  return sub_242272D70();
}

uint64_t sub_242218170()
{
  sub_24221A464();
  return sub_242272D7C();
}

void InferenceProviderXPCRequest.InferenceRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E17A8);
  OUTLINED_FUNCTION_45_3();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_22_4();
  sub_24221A464();
  OUTLINED_FUNCTION_109();
  v5[15] = 0;
  sub_242272B24();
  if (!v0)
  {
    type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
    v5[14] = 1;
    OUTLINED_FUNCTION_111_3();
    sub_242215054((uint64_t)&unk_2571E1610);
    OUTLINED_FUNCTION_73_4();
    v5[13] = 2;
    type metadata accessor for InferenceProviderRequestConfiguration(0);
    sub_242215054((uint64_t)&unk_2571E17B8);
    OUTLINED_FUNCTION_73_4();
    v5[12] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
    sub_2422153A8((uint64_t)&unk_2543A7840);
    sub_242272B48();
  }
  OUTLINED_FUNCTION_116((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_65_3();
}

void InferenceProviderXPCRequest.InferenceRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  _BYTE *v17;

  OUTLINED_FUNCTION_45_0();
  v13 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v4);
  v6 = OUTLINED_FUNCTION_61_4(v5, v12);
  type metadata accessor for InferenceProviderRequestConfiguration(v6);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_111_3();
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_21_1();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E17C0);
  MEMORY[0x24BDAC7A8](v15);
  v9 = OUTLINED_FUNCTION_79_6();
  v16 = (int *)type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(v9);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_2_0();
  v17 = v11;
  OUTLINED_FUNCTION_134_2();
  sub_24221A464();
  OUTLINED_FUNCTION_75_4();
  if (v0)
  {
    OUTLINED_FUNCTION_63_5();
  }
  else
  {
    *v17 = sub_242272A88() & 1;
    sub_242215054((uint64_t)&unk_2571E1628);
    OUTLINED_FUNCTION_116_3();
    sub_2421D11A4(v2, (uint64_t)&v17[v16[5]], type metadata accessor for ClientData);
    sub_242215054((uint64_t)&unk_2571E17C8);
    OUTLINED_FUNCTION_116_3();
    sub_2421D11A4(v1, (uint64_t)&v17[v16[6]], type metadata accessor for InferenceProviderRequestConfiguration);
    sub_2422153A8((uint64_t)&unk_2571E0980);
    OUTLINED_FUNCTION_116_3();
    OUTLINED_FUNCTION_55_5();
    sub_242213644(v14, (uint64_t)&v17[v16[7]], &qword_2543A7848);
    OUTLINED_FUNCTION_114_3((uint64_t)v17, v13);
    OUTLINED_FUNCTION_63_5();
    sub_2421D3DF4((uint64_t)v17, type metadata accessor for InferenceProviderXPCRequest.InferenceRequest);
  }
  OUTLINED_FUNCTION_16_0();
}

void sub_242218650()
{
  InferenceProviderXPCRequest.InferenceRequest.init(from:)();
}

void sub_242218664()
{
  InferenceProviderXPCRequest.InferenceRequest.encode(to:)();
}

void InferenceProviderXPCRequest.DirectStreamHandshake.requestIdentifier.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_242213618(v1, a1, &qword_2543A7848);
}

uint64_t InferenceProviderXPCRequest.DirectStreamHandshake.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_242219DE4(type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake, (void (*)(_QWORD))type metadata accessor for InferenceProviderXPCRequest, a1);
}

uint64_t sub_2422186B4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x80000002422844B0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_242272C20();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_242218738()
{
  return 0xD000000000000011;
}

uint64_t sub_242218758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2422186B4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_242218780()
{
  sub_24221A4A0();
  return sub_242272D70();
}

uint64_t sub_2422187A8()
{
  sub_24221A4A0();
  return sub_242272D7C();
}

void InferenceProviderXPCRequest.DirectStreamHandshake.encode(to:)()
{
  sub_242218938();
}

void InferenceProviderXPCRequest.DirectStreamHandshake.init(from:)()
{
  sub_242219F84();
}

void sub_242218834()
{
  InferenceProviderXPCRequest.DirectStreamHandshake.init(from:)();
}

void sub_242218848()
{
  InferenceProviderXPCRequest.DirectStreamHandshake.encode(to:)();
}

uint64_t InferenceProviderXPCRequest.AwaitEndStreamRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_242219DE4(type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest, (void (*)(_QWORD))type metadata accessor for InferenceProviderXPCRequest, a1);
}

uint64_t sub_242218874()
{
  return 0x4974736575716572;
}

uint64_t sub_242218894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242219E34(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2422188BC()
{
  sub_24221A4DC();
  return sub_242272D70();
}

uint64_t sub_2422188E4()
{
  sub_24221A4DC();
  return sub_242272D7C();
}

void InferenceProviderXPCRequest.AwaitEndStreamRequest.encode(to:)()
{
  sub_242218938();
}

void sub_242218938()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_45_0();
  v2 = v1;
  v4 = v3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(v5);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_19_5();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  v2();
  sub_242272D64();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  sub_2422153A8((uint64_t)&unk_2543A7840);
  sub_242272B48();
  OUTLINED_FUNCTION_116(v0, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  OUTLINED_FUNCTION_16_0();
}

void InferenceProviderXPCRequest.AwaitEndStreamRequest.init(from:)()
{
  sub_242219F84();
}

void sub_242218A54()
{
  InferenceProviderXPCRequest.AwaitEndStreamRequest.init(from:)();
}

void sub_242218A68()
{
  InferenceProviderXPCRequest.AwaitEndStreamRequest.encode(to:)();
}

uint64_t sub_242218A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle(0);
  v3[5] = OUTLINED_FUNCTION_127_1();
  type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest(0);
  v3[6] = OUTLINED_FUNCTION_127_1();
  type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(0);
  v3[7] = OUTLINED_FUNCTION_127_1();
  type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake(0);
  v3[8] = OUTLINED_FUNCTION_127_1();
  type metadata accessor for InferenceProviderRequestResult(0);
  v3[9] = OUTLINED_FUNCTION_127_1();
  v3[10] = type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
  v3[11] = OUTLINED_FUNCTION_127_1();
  type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0);
  v3[12] = OUTLINED_FUNCTION_127_1();
  v3[13] = type metadata accessor for InferenceProviderXPCRequest(0);
  v3[14] = OUTLINED_FUNCTION_127_1();
  return OUTLINED_FUNCTION_42();
}

void sub_242218B3C()
{
  uint64_t v0;
  char *v1;

  sub_2421CE528(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 112), type metadata accessor for InferenceProviderXPCRequest);
  v1 = (char *)sub_242218B8C + 4 * byte_242279F76[OUTLINED_FUNCTION_79_5()];
  __asm { BR              X10 }
}

uint64_t sub_242218B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v0 + 256) = **(_BYTE **)(v0 + 112);
  *(_QWORD *)(v1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0C88);
  sub_242220A08((uint64_t)&unk_2571E1448);
  *(_QWORD *)(v1 + 32) = v2;
  sub_242220A08((uint64_t)&unk_2571E1AB8);
  OUTLINED_FUNCTION_119_4(v3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v4;
  *v4 = v0;
  v4[1] = sub_242218FD8;
  v5 = OUTLINED_FUNCTION_48_6();
  return sub_24225FB70(v5, v6);
}

uint64_t sub_242218C1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[2];
  sub_2421D11A4(v0[14], v0[5], type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle);
  *(_QWORD *)(v1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0C88);
  sub_242220A08((uint64_t)&qword_2571E1448);
  *(_QWORD *)(v1 + 32) = v2;
  sub_242220A08((uint64_t)&unk_2571E1AB8);
  OUTLINED_FUNCTION_47_5(v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[30] = v4;
  *v4 = v0;
  v4[1] = sub_242219428;
  v5 = OUTLINED_FUNCTION_48_6();
  return sub_24225FD30(v5, v6);
}

uint64_t sub_242218CB4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[2];
  sub_2421D11A4(v0[14], v0[12], type metadata accessor for InferenceProviderXPCRequest.TransitionAsset);
  *(_QWORD *)(v1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0C88);
  sub_242220A08((uint64_t)&qword_2571E1448);
  *(_QWORD *)(v1 + 32) = v2;
  sub_242220A08((uint64_t)&unk_2571E1AB8);
  OUTLINED_FUNCTION_47_5(v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[17] = v4;
  *v4 = v0;
  v4[1] = sub_242219070;
  v5 = OUTLINED_FUNCTION_48_6();
  return sub_24225FF28(v5, v6);
}

uint64_t sub_242218D4C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v2[10];
  v3 = (_BYTE *)v2[11];
  v5 = v2[2];
  OUTLINED_FUNCTION_128_1(v2[14], a2, type metadata accessor for InferenceProviderXPCRequest.InferenceRequest);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0CB0);
  v2[19] = v6;
  *(_QWORD *)(v5 + 24) = v6;
  sub_242220B5C((uint64_t)&qword_2571E1488);
  *(_QWORD *)(v5 + 32) = v7;
  sub_242220B5C((uint64_t)&unk_2571E1AC8);
  v2[20] = OUTLINED_FUNCTION_119_4(v8);
  LOBYTE(v5) = *v3;
  v9 = *(int *)(v4 + 24);
  v10 = (uint64_t)&v3[*(int *)(v4 + 20)];
  v11 = (uint64_t)&v3[v9];
  v12 = (_QWORD *)swift_task_alloc();
  v2[21] = v12;
  *v12 = v2;
  v12[1] = sub_242219114;
  return sub_2422643CC(v2[9], v5, v10, v11);
}

uint64_t sub_242218E08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[2];
  sub_2421D11A4(v0[14], v0[8], type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake);
  *(_QWORD *)(v1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0C88);
  sub_242220A08((uint64_t)&qword_2571E1448);
  *(_QWORD *)(v1 + 32) = v2;
  sub_242220A08((uint64_t)&unk_2571E1AB8);
  OUTLINED_FUNCTION_47_5(v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[23] = v4;
  *v4 = v0;
  v4[1] = sub_242219240;
  v5 = OUTLINED_FUNCTION_48_6();
  return sub_2422608B8(v5, v6);
}

uint64_t sub_242218EA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[2];
  sub_2421D11A4(v0[14], v0[7], type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
  *(_QWORD *)(v1 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0CB8);
  sub_242220ACC((uint64_t)&qword_2571E14C8);
  *(_QWORD *)(v1 + 32) = v2;
  sub_242220ACC((uint64_t)&unk_2571E1AC0);
  OUTLINED_FUNCTION_47_5(v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[25] = v4;
  *v4 = v0;
  v4[1] = sub_2422192E4;
  v5 = OUTLINED_FUNCTION_48_6();
  return sub_242260300(v5, v6);
}

uint64_t sub_242218F38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[2];
  sub_2421D11A4(v0[14], v0[6], type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0C88);
  v0[27] = v2;
  *(_QWORD *)(v1 + 24) = v2;
  sub_242220A08((uint64_t)&qword_2571E1448);
  *(_QWORD *)(v1 + 32) = v3;
  sub_242220A08((uint64_t)&unk_2571E1AB8);
  v0[28] = OUTLINED_FUNCTION_47_5(v4);
  v5 = (_QWORD *)swift_task_alloc();
  v0[29] = v5;
  *v5 = v0;
  v5[1] = sub_242219388;
  return sub_2422662B8(v0[6]);
}

uint64_t sub_242218FD8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 128) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_24221902C()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_49_3();
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_5_2(v0);
}

uint64_t sub_242219070()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 144) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2422190C0()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_49_3();
  sub_2421D3DF4(*(_QWORD *)(v0 + 96), type metadata accessor for InferenceProviderXPCRequest.TransitionAsset);
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_5_2(v1);
}

uint64_t sub_242219114()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 176) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_242219164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_49_3();
  v1 = *(_QWORD *)(v0 + 88);
  OUTLINED_FUNCTION_128_1(*(_QWORD *)(v0 + 72), v2, type metadata accessor for InferenceProviderRequestResult);
  swift_storeEnumTagMultiPayload();
  sub_2421D3DF4(v1, type metadata accessor for InferenceProviderXPCRequest.InferenceRequest);
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_5_2(v3);
}

uint64_t sub_2422191E0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_51_4();
  sub_2421D3DF4(*(_QWORD *)(v0 + 88), type metadata accessor for InferenceProviderXPCRequest.InferenceRequest);
  OUTLINED_FUNCTION_89_4();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  return OUTLINED_FUNCTION_3_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_242219240()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 192) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_242219290()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_49_3();
  sub_2421D3DF4(*(_QWORD *)(v0 + 64), type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake);
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_5_2(v1);
}

uint64_t sub_2422192E4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 208) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_242219334()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_49_3();
  sub_2421D3DF4(*(_QWORD *)(v0 + 56), type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_5_2(v1);
}

uint64_t sub_242219388()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2422193C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_49_3();
  v1 = *(_QWORD *)(v0 + 48);
  swift_storeEnumTagMultiPayload();
  sub_2421D3DF4(v1, type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest);
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_5_2(v2);
}

uint64_t sub_242219428()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 248) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_242219478()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_49_3();
  sub_2421D3DF4(*(_QWORD *)(v0 + 40), type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle);
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_5_2(v1);
}

uint64_t sub_2422194CC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_51_4();
  __swift_deallocate_boxed_opaque_existential_2(*(_QWORD *)(v0 + 16));
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  return OUTLINED_FUNCTION_3_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24221951C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_51_4();
  sub_2421D3DF4(*(_QWORD *)(v0 + 96), type metadata accessor for InferenceProviderXPCRequest.TransitionAsset);
  OUTLINED_FUNCTION_89_4();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  return OUTLINED_FUNCTION_3_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24221957C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_51_4();
  sub_2421D3DF4(*(_QWORD *)(v0 + 64), type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake);
  OUTLINED_FUNCTION_89_4();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  return OUTLINED_FUNCTION_3_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2422195DC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_51_4();
  sub_2421D3DF4(*(_QWORD *)(v0 + 56), type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
  OUTLINED_FUNCTION_89_4();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  return OUTLINED_FUNCTION_3_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24221963C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_51_4();
  sub_2421D3DF4(*(_QWORD *)(v0 + 40), type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle);
  OUTLINED_FUNCTION_89_4();
  OUTLINED_FUNCTION_10_6();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  return OUTLINED_FUNCTION_3_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24221969C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification(0);
  v2[4] = OUTLINED_FUNCTION_127_1();
  v2[5] = type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0);
  v2[6] = OUTLINED_FUNCTION_127_1();
  v2[7] = type metadata accessor for InferenceProviderXPCRequest.Notification(0);
  v2[8] = OUTLINED_FUNCTION_127_1();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_242219708()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_2421CE528(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 64), type metadata accessor for InferenceProviderXPCRequest.Notification);
  if (OUTLINED_FUNCTION_79_5() == 1)
  {
    sub_2421D11A4(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 32), type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v2;
    *v2 = v0;
    v2[1] = sub_24221986C;
    return sub_242267250(*(_QWORD *)(v0 + 32));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 48);
    OUTLINED_FUNCTION_128_1(*(_QWORD *)(v0 + 64), v1, type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification);
    *(_BYTE *)(v0 + 88) = *(_BYTE *)(v5 + *(int *)(v4 + 20));
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v6;
    *v6 = v0;
    v6[1] = sub_2422197F4;
    return sub_242266E58(*(_QWORD *)(v0 + 48), (_BYTE *)(v0 + 88));
  }
}

uint64_t sub_2422197F4()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_242219830()
{
  uint64_t v0;

  sub_2421D3DF4(*(_QWORD *)(v0 + 48), type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification);
  OUTLINED_FUNCTION_101_4();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  return OUTLINED_FUNCTION_9_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24221986C()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2422198A8()
{
  uint64_t v0;

  sub_2421D3DF4(*(_QWORD *)(v0 + 32), type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification);
  OUTLINED_FUNCTION_101_4();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  return OUTLINED_FUNCTION_9_3(*(uint64_t (**)(void))(v0 + 8));
}

void InferenceProviderXPCRequest.WillCancelNotification.reason.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0) + 20));
  OUTLINED_FUNCTION_34();
}

uint64_t InferenceProviderXPCRequest.WillCancelNotification.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_242219DE4(type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification, (void (*)(_QWORD))type metadata accessor for InferenceProviderXPCRequest.Notification, a1);
}

uint64_t sub_242219928(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 0x4974736575716572 && a2 == 0xE900000000000044;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_242272C20();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_242219A0C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F73616572;
  else
    return 0x4974736575716572;
}

uint64_t sub_242219A44()
{
  char *v0;

  return sub_242219A0C(*v0);
}

uint64_t sub_242219A4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242219928(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242219A70()
{
  sub_24221A518();
  return sub_242272D70();
}

uint64_t sub_242219A98()
{
  sub_24221A518();
  return sub_242272D7C();
}

void InferenceProviderXPCRequest.WillCancelNotification.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE v6[16];

  OUTLINED_FUNCTION_99_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1800);
  OUTLINED_FUNCTION_45_3();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v6[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_22_4();
  sub_24221A518();
  OUTLINED_FUNCTION_109();
  v6[15] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  sub_2422153A8((uint64_t)&unk_2543A7840);
  OUTLINED_FUNCTION_147();
  if (!v0)
  {
    v6[14] = *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_112_3() + 20));
    v6[13] = 1;
    sub_24221A554();
    OUTLINED_FUNCTION_147();
  }
  OUTLINED_FUNCTION_116((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_65_3();
}

void InferenceProviderXPCRequest.WillCancelNotification.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_45_0();
  v19 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_2_0();
  v20 = v16;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1818);
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_19_5();
  v17 = OUTLINED_FUNCTION_112_3();
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_68();
  OUTLINED_FUNCTION_137_2();
  sub_24221A518();
  sub_242272D40();
  if (v12)
  {
    OUTLINED_FUNCTION_87();
  }
  else
  {
    sub_2422153A8((uint64_t)&unk_2571E0980);
    OUTLINED_FUNCTION_49_2();
    sub_242213644(v20, v13, &qword_2543A7848);
    sub_24221A590();
    OUTLINED_FUNCTION_49_2();
    OUTLINED_FUNCTION_77_3();
    *(_BYTE *)(v13 + *(int *)(v17 + 20)) = a12;
    OUTLINED_FUNCTION_114_3(v13, v19);
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_102_1(v13);
  }
  OUTLINED_FUNCTION_16_0();
}

void sub_242219DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  InferenceProviderXPCRequest.WillCancelNotification.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_242219DBC()
{
  InferenceProviderXPCRequest.WillCancelNotification.encode(to:)();
}

uint64_t InferenceProviderXPCRequest.EndOfStreamNotification.request.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_90_3(type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification, (void (*)(_QWORD))type metadata accessor for InferenceProviderXPCRequest.Notification, a1);
}

uint64_t sub_242219DE4@<X0>(uint64_t (*a1)(_QWORD)@<X0>, void (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_2421CE528(v3, a3, a1);
  a2(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_242219E34(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x4974736575716572 && a2 == 0xE900000000000044)
  {
    OUTLINED_FUNCTION_86_0();
    v4 = 0;
  }
  else
  {
    v3 = OUTLINED_FUNCTION_141_2();
    OUTLINED_FUNCTION_86_0();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_242219EB0()
{
  OUTLINED_FUNCTION_98_2();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_48();
}

uint64_t sub_242219ED4()
{
  sub_24221A5CC();
  return sub_242272D70();
}

uint64_t sub_242219EFC()
{
  sub_24221A5CC();
  return sub_242272D7C();
}

void InferenceProviderXPCRequest.EndOfStreamNotification.encode(to:)()
{
  sub_242218938();
}

void InferenceProviderXPCRequest.EndOfStreamNotification.init(from:)()
{
  sub_242219F84();
}

void sub_242219F84()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD *);
  void (*v3)(_QWORD *);
  uint64_t (*v4)(_QWORD);
  uint64_t (*v5)(_QWORD);
  uint64_t *v6;
  uint64_t *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_45_0();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v22 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_2_0();
  v25 = v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(v7);
  v24 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v14);
  v15 = OUTLINED_FUNCTION_40_3();
  v23 = v5;
  v16 = v5(v15);
  MEMORY[0x24BDAC7A8](v16);
  v21 = (uint64_t)&v20 - v17;
  v18 = OUTLINED_FUNCTION_50_4(v9);
  v3(v18);
  sub_242272D40();
  if (!v0)
  {
    sub_2422153A8((uint64_t)&unk_2571E0980);
    OUTLINED_FUNCTION_49_2();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v1, v13);
    v19 = v21;
    sub_242213644(v25, v21, &qword_2543A7848);
    sub_2421D11A4(v19, v22, v23);
  }
  OUTLINED_FUNCTION_87();
  OUTLINED_FUNCTION_16_0();
}

void sub_24221A100()
{
  InferenceProviderXPCRequest.EndOfStreamNotification.init(from:)();
}

void sub_24221A114()
{
  InferenceProviderXPCRequest.EndOfStreamNotification.encode(to:)();
}

unint64_t sub_24221A128()
{
  unint64_t result;

  result = qword_2571E16A0;
  if (!qword_2571E16A0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B600, &type metadata for InferenceProviderXPCRequest.EmptyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E16A0);
  }
  return result;
}

uint64_t type metadata accessor for InferenceProviderXPCRequest(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2571E18D0);
}

unint64_t sub_24221A178()
{
  unint64_t result;

  result = qword_2571E16A8;
  if (!qword_2571E16A8)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderXPCRequest.WireCode, &type metadata for InferenceProviderXPCRequest.WireCode);
    atomic_store(result, (unint64_t *)&qword_2571E16A8);
  }
  return result;
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2571E18F0);
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2571E1940);
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2571E1910);
}

uint64_t type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2571E1930);
}

unint64_t sub_24221A204()
{
  unint64_t result;

  result = qword_2571E16E0;
  if (!qword_2571E16E0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest, &type metadata for InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest);
    atomic_store(result, (unint64_t *)&qword_2571E16E0);
  }
  return result;
}

unint64_t sub_24221A240()
{
  unint64_t result;

  result = qword_2571E16E8;
  if (!qword_2571E16E8)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderXPCRequest.WireCode, &type metadata for InferenceProviderXPCRequest.WireCode);
    atomic_store(result, (unint64_t *)&qword_2571E16E8);
  }
  return result;
}

unint64_t sub_24221A27C()
{
  unint64_t result;

  result = qword_2571E1720;
  if (!qword_2571E1720)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest, &type metadata for InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest);
    atomic_store(result, (unint64_t *)&qword_2571E1720);
  }
  return result;
}

unint64_t sub_24221A2B8()
{
  unint64_t result;

  result = qword_2571E1730;
  if (!qword_2571E1730)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B5B0, &type metadata for InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1730);
  }
  return result;
}

unint64_t sub_24221A2F4()
{
  unint64_t result;

  result = qword_2571E1738;
  if (!qword_2571E1738)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for BuiltInInferenceProvider, &type metadata for BuiltInInferenceProvider);
    atomic_store(result, (unint64_t *)&qword_2571E1738);
  }
  return result;
}

unint64_t sub_24221A330()
{
  unint64_t result;

  result = qword_2571E1748;
  if (!qword_2571E1748)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for BuiltInInferenceProvider, &type metadata for BuiltInInferenceProvider);
    atomic_store(result, (unint64_t *)&qword_2571E1748);
  }
  return result;
}

unint64_t sub_24221A36C()
{
  unint64_t result;

  result = qword_2571E1758;
  if (!qword_2571E1758)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B560, &type metadata for InferenceProviderXPCRequest.PrewarmBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1758);
  }
  return result;
}

unint64_t sub_24221A3A8()
{
  unint64_t result;

  result = qword_2571E1780;
  if (!qword_2571E1780)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B510, &type metadata for InferenceProviderXPCRequest.TransitionAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1780);
  }
  return result;
}

unint64_t sub_24221A3E4(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = OUTLINED_FUNCTION_55_3(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571E1790);
    sub_242215054(v6);
    v9 = v8;
    result = MEMORY[0x2426A62C4](v5, v7, &v9);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_24221A464()
{
  unint64_t result;

  result = qword_2571E17B0;
  if (!qword_2571E17B0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B4C0, &type metadata for InferenceProviderXPCRequest.InferenceRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E17B0);
  }
  return result;
}

unint64_t sub_24221A4A0()
{
  unint64_t result;

  result = qword_2571E17D8;
  if (!qword_2571E17D8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B470, &type metadata for InferenceProviderXPCRequest.DirectStreamHandshake.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E17D8);
  }
  return result;
}

unint64_t sub_24221A4DC()
{
  unint64_t result;

  result = qword_2571E17F0;
  if (!qword_2571E17F0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B420, &type metadata for InferenceProviderXPCRequest.AwaitEndStreamRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E17F0);
  }
  return result;
}

unint64_t sub_24221A518()
{
  unint64_t result;

  result = qword_2571E1808;
  if (!qword_2571E1808)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B3D0, &type metadata for InferenceProviderXPCRequest.WillCancelNotification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1808);
  }
  return result;
}

unint64_t sub_24221A554()
{
  unint64_t result;

  result = qword_2571E1810;
  if (!qword_2571E1810)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for RequestCancellationReason, &type metadata for RequestCancellationReason);
    atomic_store(result, (unint64_t *)&qword_2571E1810);
  }
  return result;
}

unint64_t sub_24221A590()
{
  unint64_t result;

  result = qword_2571E1820;
  if (!qword_2571E1820)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for RequestCancellationReason, &type metadata for RequestCancellationReason);
    atomic_store(result, (unint64_t *)&qword_2571E1820);
  }
  return result;
}

unint64_t sub_24221A5CC()
{
  unint64_t result;

  result = qword_2571E1830;
  if (!qword_2571E1830)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B380, &type metadata for InferenceProviderXPCRequest.EndOfStreamNotification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1830);
  }
  return result;
}

void sub_24221A608()
{
  sub_242215054((uint64_t)&unk_2571E1840);
}

void sub_24221A634()
{
  sub_242215054((uint64_t)&unk_2571E1848);
}

void sub_24221A660(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_242215054((uint64_t)&unk_2571E1850);
  *(_QWORD *)(a1 + 8) = v2;
  sub_242215054((uint64_t)&unk_2571E1858);
  *(_QWORD *)(a1 + 16) = v3;
}

unint64_t sub_24221A6C0()
{
  unint64_t result;

  result = qword_2571E1860;
  if (!qword_2571E1860)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderXPCRequest.WireCode, &type metadata for InferenceProviderXPCRequest.WireCode);
    atomic_store(result, (unint64_t *)&qword_2571E1860);
  }
  return result;
}

unint64_t sub_24221A6FC(uint64_t a1)
{
  unint64_t result;

  result = sub_24221A720();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24221A720()
{
  unint64_t result;

  result = qword_2571E1868;
  if (!qword_2571E1868)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest, &type metadata for InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest);
    atomic_store(result, (unint64_t *)&qword_2571E1868);
  }
  return result;
}

void sub_24221A75C()
{
  sub_242215054((uint64_t)&unk_2571E1850);
}

void sub_24221A788()
{
  sub_242215054((uint64_t)&unk_2571E1858);
}

unint64_t sub_24221A7BC(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_24221A204();
  result = sub_24221A27C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

void sub_24221A7E8(uint64_t a1)
{
  uint64_t v2;

  sub_242215054((uint64_t)&unk_2571E1870);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_24221A824(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_242215054((uint64_t)&unk_2571E16B0);
  *(_QWORD *)(a1 + 8) = v2;
  sub_242215054((uint64_t)&unk_2571E16F0);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_24221A880(uint64_t a1)
{
  uint64_t v2;

  sub_242215054((uint64_t)&unk_2571E1878);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_24221A8BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_242215054((uint64_t)&unk_2571E16D8);
  *(_QWORD *)(a1 + 8) = v2;
  sub_242215054((uint64_t)&unk_2571E1718);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_24221A918(uint64_t a1)
{
  uint64_t v2;

  sub_242215054((uint64_t)&unk_2571E1880);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_24221A95C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_242215054((uint64_t)&unk_2571E16C0);
  *(_QWORD *)(a1 + 8) = v2;
  sub_242215054((uint64_t)&unk_2571E1700);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_24221A9B8(uint64_t a1)
{
  uint64_t v2;

  sub_242215054((uint64_t)&unk_2571E1888);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_24221A9F4()
{
  sub_242215054((uint64_t)&qword_2571E1490);
}

void sub_24221AA20()
{
  sub_242215054((uint64_t)&qword_2571E1498);
}

void sub_24221AA4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_242215054((uint64_t)&unk_2571E16D0);
  *(_QWORD *)(a1 + 8) = v2;
  sub_242215054((uint64_t)&unk_2571E1710);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_24221AAA8(uint64_t a1)
{
  uint64_t v2;

  sub_242215054((uint64_t)&unk_2571E1890);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_24221AAE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_242215054((uint64_t)&unk_2571E16C8);
  *(_QWORD *)(a1 + 8) = v2;
  sub_242215054((uint64_t)&unk_2571E1708);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_24221AB40(uint64_t a1)
{
  uint64_t v2;

  sub_242215054((uint64_t)&unk_2571E1898);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_24221AB7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_242215054((uint64_t)&unk_2571E16B8);
  *(_QWORD *)(a1 + 8) = v2;
  sub_242215054((uint64_t)&unk_2571E16F8);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_24221ABD8(uint64_t a1)
{
  uint64_t v2;

  sub_242215054((uint64_t)&unk_2571E18A0);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t sub_24221AC14()
{
  return MEMORY[0x24BEE40A0];
}

uint64_t sub_24221AC20()
{
  return MEMORY[0x24BEE4080];
}

void sub_24221AC2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_242215054((uint64_t)&unk_2571E1690);
  *(_QWORD *)(a1 + 8) = v2;
  sub_242215054((uint64_t)&unk_2571E1668);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_24221AC88(uint64_t a1)
{
  uint64_t v2;

  sub_242215054((uint64_t)&unk_2571E18A8);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_24221ACC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_242215054((uint64_t)&unk_2571E1688);
  *(_QWORD *)(a1 + 8) = v2;
  sub_242215054((uint64_t)&unk_2571E1658);
  *(_QWORD *)(a1 + 16) = v3;
}

uint64_t *initializeBufferWithCopyOfBuffer for InferenceProviderRequestResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_24227238C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_242272548();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E15F0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v14 = *(int *)(a3 + 24);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for ClientData(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = sub_2422725CC();
      if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v19))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v15, v16, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v19);
      }
      v21 = *(int *)(v17 + 20);
      v22 = &v15[v21];
      v23 = &v16[v21];
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v19))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v22, v23, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v19);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
    }
  }
  return a1;
}

uint64_t destroy for InferenceProviderRequestResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_242272548();
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = type metadata accessor for ClientData(0);
  result = __swift_getEnumTagSinglePayload(v7, 1, v8);
  if (!(_DWORD)result)
  {
    v10 = sub_2422725CC();
    if (!__swift_getEnumTagSinglePayload(v7, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v7, v10);
    v11 = v7 + *(int *)(v8 + 20);
    result = __swift_getEnumTagSinglePayload(v11, 1, v10);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v11, v10);
  }
  return result;
}

uint64_t initializeWithCopy for InferenceProviderRequestResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_242272548();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E15F0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for ClientData(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = sub_2422725CC();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v17))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v13, v14, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v17);
    }
    v19 = *(int *)(v15 + 20);
    v20 = &v13[v19];
    v21 = &v14[v19];
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v17))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v20, v21, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v17);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

uint64_t assignWithCopy for InferenceProviderRequestResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;

  v6 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_242272548();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E15F0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = type metadata accessor for ClientData(0);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      v21 = sub_2422725CC();
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v16, v17, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v21);
      }
      v29 = *(int *)(v18 + 20);
      v30 = &v16[v29];
      v31 = &v17[v29];
      if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v21))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v30, v31, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v21);
      }
      v33 = (uint64_t)v16;
      v34 = v18;
      goto LABEL_24;
    }
    goto LABEL_13;
  }
  if (v20)
  {
    sub_2421D3DF4((uint64_t)v16, type metadata accessor for ClientData);
LABEL_13:
    v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560) - 8) + 64);
    v24 = v16;
    v25 = v17;
    goto LABEL_14;
  }
  v26 = sub_2422725CC();
  v27 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v26);
  v28 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v26);
  if (!v27)
  {
    v36 = *(_QWORD *)(v26 - 8);
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 24))(v16, v17, v26);
      goto LABEL_29;
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v26);
    goto LABEL_28;
  }
  if (v28)
  {
LABEL_28:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v16, v17, v26);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v26);
LABEL_29:
  v38 = *(int *)(v18 + 20);
  v39 = (uint64_t)&v16[v38];
  v40 = (uint64_t)&v17[v38];
  v41 = __swift_getEnumTagSinglePayload(v39, 1, v26);
  v42 = __swift_getEnumTagSinglePayload(v40, 1, v26);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v39, v40, v26);
      v33 = v39;
      v34 = v26;
LABEL_24:
      __swift_storeEnumTagSinglePayload(v33, 0, 1, v34);
      return a1;
    }
  }
  else
  {
    v43 = *(_QWORD *)(v26 - 8);
    if (!v42)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 24))(v39, v40, v26);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v39, v26);
  }
  v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0) - 8) + 64);
  v24 = (void *)v39;
  v25 = (const void *)v40;
LABEL_14:
  memcpy(v24, v25, v23);
  return a1;
}

uint64_t initializeWithTake for InferenceProviderRequestResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_242272548();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E15F0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for ClientData(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = sub_2422725CC();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v17))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v13, v14, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v17);
    }
    v19 = *(int *)(v15 + 20);
    v20 = &v13[v19];
    v21 = &v14[v19];
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v17))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v20, v21, v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v17);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

uint64_t assignWithTake for InferenceProviderRequestResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  size_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;

  v6 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_242272548();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E15F0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = type metadata accessor for ClientData(0);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      v21 = sub_2422725CC();
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v16, v17, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v21);
      }
      v29 = *(int *)(v18 + 20);
      v30 = &v16[v29];
      v31 = &v17[v29];
      if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v21))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v30, v31, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v21);
      }
      v33 = (uint64_t)v16;
      v34 = v18;
      goto LABEL_24;
    }
    goto LABEL_13;
  }
  if (v20)
  {
    sub_2421D3DF4((uint64_t)v16, type metadata accessor for ClientData);
LABEL_13:
    v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560) - 8) + 64);
    v24 = v16;
    v25 = v17;
    goto LABEL_14;
  }
  v26 = sub_2422725CC();
  v27 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v26);
  v28 = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v26);
  if (!v27)
  {
    v36 = *(_QWORD *)(v26 - 8);
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v16, v17, v26);
      goto LABEL_29;
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v26);
    goto LABEL_28;
  }
  if (v28)
  {
LABEL_28:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v16, v17, v26);
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v26);
LABEL_29:
  v38 = *(int *)(v18 + 20);
  v39 = (uint64_t)&v16[v38];
  v40 = (uint64_t)&v17[v38];
  v41 = __swift_getEnumTagSinglePayload(v39, 1, v26);
  v42 = __swift_getEnumTagSinglePayload(v40, 1, v26);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v39, v40, v26);
      v33 = v39;
      v34 = v26;
LABEL_24:
      __swift_storeEnumTagSinglePayload(v33, 0, 1, v34);
      return a1;
    }
  }
  else
  {
    v43 = *(_QWORD *)(v26 - 8);
    if (!v42)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 40))(v39, v40, v26);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v39, v26);
  }
  v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0) - 8) + 64);
  v24 = (void *)v39;
  v25 = (const void *)v40;
LABEL_14:
  memcpy(v24, v25, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderRequestResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24221BCB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_65_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_69_6();
  if (v9)
  {
    v7 = v6;
    v8 = v4;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571E15F0);
    OUTLINED_FUNCTION_69_6();
    if (v9)
    {
      v7 = v10;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
      v11 = *(int *)(a3 + 24);
    }
    v8 = v4 + v11;
  }
  return OUTLINED_FUNCTION_62_0(v8, v3, v7);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderRequestResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24221BD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_65_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_44_2();
  if (v10)
  {
    v8 = v7;
    v9 = v5;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571E15F0);
    OUTLINED_FUNCTION_44_2();
    if (v10)
    {
      v8 = v11;
      v12 = *(int *)(a4 + 20);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
      v12 = *(int *)(a4 + 24);
    }
    v9 = v5 + v12;
  }
  return OUTLINED_FUNCTION_63_1(v9, v4, v4, v8);
}

void sub_24221BDC4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_24227238C();
  if (v0 <= 0x3F)
  {
    sub_24221BE84(319, &qword_2571E18C0, (void (*)(uint64_t))MEMORY[0x24BEE65B8]);
    if (v1 <= 0x3F)
    {
      sub_24221BE84(319, (unint64_t *)&qword_2571E18C8, (void (*)(uint64_t))type metadata accessor for ClientData);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_24221BE84(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_242272938();
    if (!v5)
      atomic_store(v4, a2);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for InferenceProviderXPCRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        v8 = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_OWORD *)a1 + 2) = v8;
        v9 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
        v10 = v9[6];
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_24227238C();
        v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
        sub_242272644();
        v14(v11, v12, v13);
        v15 = v9[7];
        v16 = (_QWORD *)((char *)a1 + v15);
        v17 = (_QWORD *)((char *)a2 + v15);
        v18 = v17[1];
        *v16 = *v17;
        v16[1] = v18;
        *(_DWORD *)((char *)a1 + v9[8]) = *(_DWORD *)((char *)a2 + v9[8]);
        sub_242272644();
        goto LABEL_15;
      case 2u:
        v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        v21 = a2[3];
        a1[2] = a2[2];
        a1[3] = v21;
        *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
        v22 = *(int *)(type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0) + 28);
        v23 = (char *)a1 + v22;
        v24 = (char *)a2 + v22;
        v25 = sub_24227238C();
        v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
        sub_242272644();
        sub_242272644();
        v26(v23, v24, v25);
        goto LABEL_15;
      case 3u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v27 = type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
        v28 = *(int *)(v27 + 20);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        v31 = sub_2422725CC();
        if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
        {
          v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
          __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
        }
        v34 = *(int *)(type metadata accessor for ClientData(0) + 20);
        v35 = &v29[v34];
        v36 = &v30[v34];
        if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, v31))
        {
          v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v35, v36, v31);
          __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v31);
        }
        v38 = *(int *)(v27 + 24);
        v39 = (char *)a1 + v38;
        v40 = (char *)a2 + v38;
        v41 = *(_QWORD *)((char *)a2 + v38 + 8);
        *(_QWORD *)v39 = *(_QWORD *)((char *)a2 + v38);
        *((_QWORD *)v39 + 1) = v41;
        v42 = *(_QWORD *)((char *)a2 + v38 + 24);
        *((_QWORD *)v39 + 2) = *(_QWORD *)((char *)a2 + v38 + 16);
        *((_QWORD *)v39 + 3) = v42;
        *((_QWORD *)v39 + 4) = *(_QWORD *)((char *)a2 + v38 + 32);
        v43 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
        v44 = v43[7];
        v65 = &v39[v44];
        v66 = v27;
        v64 = &v40[v44];
        v63 = sub_24227238C();
        v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
        sub_242272644();
        sub_242272644();
        sub_242272644();
        v45(v65, v64, v63);
        v45(&v39[v43[8]], &v40[v43[8]], v63);
        v46 = v45;
        *(_QWORD *)&v39[v43[9]] = *(_QWORD *)&v40[v43[9]];
        *(_QWORD *)&v39[v43[10]] = *(_QWORD *)&v40[v43[10]];
        v47 = v43[11];
        v48 = &v39[v47];
        v49 = &v40[v47];
        v50 = *((_OWORD *)v49 + 1);
        *(_OWORD *)v48 = *(_OWORD *)v49;
        *((_OWORD *)v48 + 1) = v50;
        v48[32] = v49[32];
        *(_DWORD *)&v39[v43[12]] = *(_DWORD *)&v40[v43[12]];
        v51 = v43[13];
        v52 = &v39[v51];
        v53 = &v40[v51];
        v54 = *((_QWORD *)v53 + 1);
        *(_QWORD *)v52 = *(_QWORD *)v53;
        *((_QWORD *)v52 + 1) = v54;
        v55 = v43[14];
        v56 = &v39[v55];
        v57 = &v40[v55];
        v58 = *((_QWORD *)v57 + 1);
        *(_QWORD *)v56 = *(_QWORD *)v57;
        *((_QWORD *)v56 + 1) = v58;
        v39[v43[15]] = v40[v43[15]];
        v59 = *(int *)(v66 + 28);
        v60 = (char *)a1 + v59;
        v61 = (char *)a2 + v59;
        sub_242272644();
        sub_242272644();
        v46(v60, v61, v63);
        goto LABEL_15;
      case 4u:
      case 5u:
      case 6u:
        v33 = sub_24227238C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(a1, a2, v33);
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for InferenceProviderXPCRequest(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      swift_bridgeObjectRelease();
      v3 = a1 + *(int *)(type metadata accessor for InferenceProviderPrewarmInformation(0) + 24);
      v4 = sub_24227238C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
      return swift_bridgeObjectRelease();
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0) + 28);
      goto LABEL_4;
    case 3:
      v8 = (int *)type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
      v9 = a1 + v8[5];
      v10 = sub_2422725CC();
      if (!__swift_getEnumTagSinglePayload(v9, 1, v10))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      v11 = v9 + *(int *)(type metadata accessor for ClientData(0) + 20);
      if (!__swift_getEnumTagSinglePayload(v11, 1, v10))
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v11, v10);
      v12 = a1 + v8[6];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = type metadata accessor for InferenceProviderRequestConfiguration(0);
      v14 = v12 + *(int *)(v13 + 28);
      v15 = sub_24227238C();
      v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
      v16(v14, v15);
      v16(v12 + *(int *)(v13 + 32), v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = a1 + v8[7];
      v5 = v15;
      v6 = (uint64_t (*)(uint64_t, uint64_t))v16;
      goto LABEL_5;
    case 4:
    case 5:
    case 6:
LABEL_4:
      v5 = sub_24227238C();
      v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
      v7 = a1;
LABEL_5:
      result = v6(v7, v5);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for InferenceProviderXPCRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_OWORD *)a1 + 2) = v7;
      v8 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
      v9 = v8[6];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_24227238C();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      sub_242272644();
      v13(v10, v11, v12);
      v14 = v8[7];
      v15 = (_QWORD *)((char *)a1 + v14);
      v16 = (_QWORD *)((char *)a2 + v14);
      v17 = v16[1];
      *v15 = *v16;
      v15[1] = v17;
      *(_DWORD *)((char *)a1 + v8[8]) = *(_DWORD *)((char *)a2 + v8[8]);
      sub_242272644();
      goto LABEL_13;
    case 2u:
      v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      v19 = a2[3];
      a1[2] = a2[2];
      a1[3] = v19;
      *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
      v20 = *(int *)(type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0) + 28);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = sub_24227238C();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
      sub_242272644();
      sub_242272644();
      v24(v21, v22, v23);
      goto LABEL_13;
    case 3u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v25 = type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
      v26 = *(int *)(v25 + 20);
      v27 = (char *)a1 + v26;
      v28 = (char *)a2 + v26;
      v29 = sub_2422725CC();
      if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
        __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
      }
      v32 = *(int *)(type metadata accessor for ClientData(0) + 20);
      v33 = &v27[v32];
      v34 = &v28[v32];
      if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v29))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v33, v34, v29);
        __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v29);
      }
      v36 = *(int *)(v25 + 24);
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      v39 = *(_QWORD *)((char *)a2 + v36 + 8);
      *(_QWORD *)v37 = *(_QWORD *)((char *)a2 + v36);
      *((_QWORD *)v37 + 1) = v39;
      v40 = *(_QWORD *)((char *)a2 + v36 + 24);
      *((_QWORD *)v37 + 2) = *(_QWORD *)((char *)a2 + v36 + 16);
      *((_QWORD *)v37 + 3) = v40;
      *((_QWORD *)v37 + 4) = *(_QWORD *)((char *)a2 + v36 + 32);
      v41 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
      v42 = v41[7];
      v63 = &v37[v42];
      v64 = v25;
      v62 = &v38[v42];
      v61 = sub_24227238C();
      v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
      sub_242272644();
      sub_242272644();
      sub_242272644();
      v43(v63, v62, v61);
      v43(&v37[v41[8]], &v38[v41[8]], v61);
      v44 = v43;
      *(_QWORD *)&v37[v41[9]] = *(_QWORD *)&v38[v41[9]];
      *(_QWORD *)&v37[v41[10]] = *(_QWORD *)&v38[v41[10]];
      v45 = v41[11];
      v46 = &v37[v45];
      v47 = &v38[v45];
      v48 = *((_OWORD *)v47 + 1);
      *(_OWORD *)v46 = *(_OWORD *)v47;
      *((_OWORD *)v46 + 1) = v48;
      v46[32] = v47[32];
      *(_DWORD *)&v37[v41[12]] = *(_DWORD *)&v38[v41[12]];
      v49 = v41[13];
      v50 = &v37[v49];
      v51 = &v38[v49];
      v52 = *((_QWORD *)v51 + 1);
      *(_QWORD *)v50 = *(_QWORD *)v51;
      *((_QWORD *)v50 + 1) = v52;
      v53 = v41[14];
      v54 = &v37[v53];
      v55 = &v38[v53];
      v56 = *((_QWORD *)v55 + 1);
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *((_QWORD *)v54 + 1) = v56;
      v37[v41[15]] = v38[v41[15]];
      v57 = *(int *)(v64 + 28);
      v58 = (char *)a1 + v57;
      v59 = (char *)a2 + v57;
      sub_242272644();
      sub_242272644();
      v44(v58, v59, v61);
      goto LABEL_13;
    case 4u:
    case 5u:
    case 6u:
      v31 = sub_24227238C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(a1, a2, v31);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for InferenceProviderXPCRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;

  if (a1 != a2)
  {
    sub_2421D3DF4((uint64_t)a1, type metadata accessor for InferenceProviderXPCRequest);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        v6 = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_OWORD *)a1 + 2) = v6;
        v7 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
        v8 = v7[6];
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_24227238C();
        v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
        sub_242272644();
        v12(v9, v10, v11);
        v13 = v7[7];
        v14 = (_QWORD *)((char *)a1 + v13);
        v15 = (_QWORD *)((char *)a2 + v13);
        *v14 = *v15;
        v14[1] = v15[1];
        *(_DWORD *)((char *)a1 + v7[8]) = *(_DWORD *)((char *)a2 + v7[8]);
        sub_242272644();
        goto LABEL_14;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        *((_BYTE *)a1 + 33) = *((_BYTE *)a2 + 33);
        v16 = *(int *)(type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0) + 28);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_24227238C();
        v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        sub_242272644();
        sub_242272644();
        v20(v17, v18, v19);
        goto LABEL_14;
      case 3u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v21 = type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
        v22 = *(int *)(v21 + 20);
        v23 = (char *)a1 + v22;
        v24 = (char *)a2 + v22;
        v25 = sub_2422725CC();
        if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
        {
          v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
          __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
        }
        v28 = *(int *)(type metadata accessor for ClientData(0) + 20);
        v29 = &v23[v28];
        v30 = &v24[v28];
        if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v25))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v29, v30, v25);
          __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v25);
        }
        v32 = *(int *)(v21 + 24);
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        *(_QWORD *)v33 = *(_QWORD *)((char *)a2 + v32);
        *((_QWORD *)v33 + 1) = *(_QWORD *)((char *)a2 + v32 + 8);
        *((_QWORD *)v33 + 2) = *(_QWORD *)((char *)a2 + v32 + 16);
        *((_QWORD *)v33 + 3) = *(_QWORD *)((char *)a2 + v32 + 24);
        *((_QWORD *)v33 + 4) = *(_QWORD *)((char *)a2 + v32 + 32);
        v35 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
        v36 = v35[7];
        v55 = &v33[v36];
        v56 = v21;
        v54 = &v34[v36];
        v53 = sub_24227238C();
        v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
        sub_242272644();
        sub_242272644();
        sub_242272644();
        v37(v55, v54, v53);
        v37(&v33[v35[8]], &v34[v35[8]], v53);
        *(_QWORD *)&v33[v35[9]] = *(_QWORD *)&v34[v35[9]];
        *(_QWORD *)&v33[v35[10]] = *(_QWORD *)&v34[v35[10]];
        v38 = v35[11];
        v39 = &v33[v38];
        v40 = &v34[v38];
        v41 = v40[32];
        v42 = *((_OWORD *)v40 + 1);
        *(_OWORD *)v39 = *(_OWORD *)v40;
        *((_OWORD *)v39 + 1) = v42;
        v39[32] = v41;
        *(_DWORD *)&v33[v35[12]] = *(_DWORD *)&v34[v35[12]];
        v43 = v35[13];
        v44 = &v33[v43];
        v45 = &v34[v43];
        *(_QWORD *)v44 = *(_QWORD *)v45;
        *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
        v46 = v35[14];
        v47 = &v33[v46];
        v48 = &v34[v46];
        *(_QWORD *)v47 = *(_QWORD *)v48;
        *((_QWORD *)v47 + 1) = *((_QWORD *)v48 + 1);
        v33[v35[15]] = v34[v35[15]];
        v49 = *(int *)(v56 + 28);
        v50 = (char *)a1 + v49;
        v51 = (char *)a2 + v49;
        sub_242272644();
        sub_242272644();
        v37(v50, v51, v53);
        goto LABEL_14;
      case 4u:
      case 5u:
      case 6u:
        v27 = sub_24227238C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for InferenceProviderXPCRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  uint64_t v43;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      v7 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
      v8 = v7[6];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_24227238C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
      *(_DWORD *)((char *)a1 + v7[8]) = *(_DWORD *)((char *)a2 + v7[8]);
      goto LABEL_13;
    case 2u:
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
      v13 = *(int *)(type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0) + 28);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_24227238C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      goto LABEL_13;
    case 3u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v17 = type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
      v18 = *(int *)(v17 + 20);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_2422725CC();
      if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
      }
      v24 = *(int *)(type metadata accessor for ClientData(0) + 20);
      v25 = &v19[v24];
      v26 = &v20[v24];
      if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v21))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v25, v26, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v21);
      }
      v28 = *(int *)(v17 + 24);
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = *(_OWORD *)((char *)a2 + v28 + 16);
      *(_OWORD *)v29 = *(_OWORD *)((char *)a2 + v28);
      *((_OWORD *)v29 + 1) = v31;
      *((_QWORD *)v29 + 4) = *(_QWORD *)((char *)a2 + v28 + 32);
      v32 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
      v33 = v32[7];
      v34 = &v29[v33];
      v35 = &v30[v33];
      v36 = sub_24227238C();
      v43 = v17;
      v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32);
      v37(v34, v35, v36);
      v37(&v29[v32[8]], &v30[v32[8]], v36);
      *(_QWORD *)&v29[v32[9]] = *(_QWORD *)&v30[v32[9]];
      *(_QWORD *)&v29[v32[10]] = *(_QWORD *)&v30[v32[10]];
      v38 = v32[11];
      v39 = &v29[v38];
      v40 = &v30[v38];
      v41 = *((_OWORD *)v40 + 1);
      *(_OWORD *)v39 = *(_OWORD *)v40;
      *((_OWORD *)v39 + 1) = v41;
      v39[32] = v40[32];
      *(_DWORD *)&v29[v32[12]] = *(_DWORD *)&v30[v32[12]];
      *(_OWORD *)&v29[v32[13]] = *(_OWORD *)&v30[v32[13]];
      *(_OWORD *)&v29[v32[14]] = *(_OWORD *)&v30[v32[14]];
      v29[v32[15]] = v30[v32[15]];
      v37((char *)a1 + *(int *)(v43 + 28), (char *)a2 + *(int *)(v43 + 28), v36);
      goto LABEL_13;
    case 4u:
    case 5u:
    case 6u:
      v23 = sub_24227238C();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for InferenceProviderXPCRequest(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  uint64_t v43;

  if (a1 != a2)
  {
    sub_2421D3DF4((uint64_t)a1, type metadata accessor for InferenceProviderXPCRequest);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        a1[2] = a2[2];
        v7 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
        v8 = v7[6];
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_24227238C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
        *(_DWORD *)((char *)a1 + v7[8]) = *(_DWORD *)((char *)a2 + v7[8]);
        goto LABEL_14;
      case 2u:
        v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
        v13 = *(int *)(type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(0) + 28);
        v14 = (char *)a1 + v13;
        v15 = (char *)a2 + v13;
        v16 = sub_24227238C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
        goto LABEL_14;
      case 3u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v17 = type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(0);
        v18 = *(int *)(v17 + 20);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = sub_2422725CC();
        if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
          __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
        }
        v24 = *(int *)(type metadata accessor for ClientData(0) + 20);
        v25 = &v19[v24];
        v26 = &v20[v24];
        if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v21))
        {
          v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v25, v26, v21);
          __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v21);
        }
        v28 = *(int *)(v17 + 24);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        v31 = *(_OWORD *)((char *)a2 + v28 + 16);
        *(_OWORD *)v29 = *(_OWORD *)((char *)a2 + v28);
        *((_OWORD *)v29 + 1) = v31;
        *((_QWORD *)v29 + 4) = *(_QWORD *)((char *)a2 + v28 + 32);
        v32 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
        v33 = v32[7];
        v34 = &v29[v33];
        v35 = &v30[v33];
        v36 = sub_24227238C();
        v43 = v17;
        v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32);
        v37(v34, v35, v36);
        v37(&v29[v32[8]], &v30[v32[8]], v36);
        *(_QWORD *)&v29[v32[9]] = *(_QWORD *)&v30[v32[9]];
        *(_QWORD *)&v29[v32[10]] = *(_QWORD *)&v30[v32[10]];
        v38 = v32[11];
        v39 = &v29[v38];
        v40 = &v30[v38];
        v41 = *((_OWORD *)v40 + 1);
        *(_OWORD *)v39 = *(_OWORD *)v40;
        *((_OWORD *)v39 + 1) = v41;
        v39[32] = v40[32];
        *(_DWORD *)&v29[v32[12]] = *(_DWORD *)&v30[v32[12]];
        *(_OWORD *)&v29[v32[13]] = *(_OWORD *)&v30[v32[13]];
        *(_OWORD *)&v29[v32[14]] = *(_OWORD *)&v30[v32[14]];
        v29[v32[15]] = v30[v32[15]];
        v37((char *)a1 + *(int *)(v43 + 28), (char *)a2 + *(int *)(v43 + 28), v36);
        goto LABEL_14;
      case 4u:
      case 5u:
      case 6u:
        v23 = sub_24227238C();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_24221D6CC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = type metadata accessor for InferenceProviderPrewarmInformation(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for InferenceProviderXPCRequest.TransitionAsset(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for InferenceProviderXPCRequest.InferenceRequest(319);
      if (v3 <= 0x3F)
      {
        result = sub_24227238C();
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for InferenceProviderXPCRequest.Notification(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = sub_24227238C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload != 1)
    {
      v9 = type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0);
      *((_BYTE *)a1 + *(int *)(v9 + 20)) = *((_BYTE *)a2 + *(int *)(v9 + 20));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithCopy for InferenceProviderXPCRequest.Notification(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload != 1)
  {
    v6 = type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0);
    *(_BYTE *)(a1 + *(int *)(v6 + 20)) = *(_BYTE *)(a2 + *(int *)(v6 + 20));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for InferenceProviderXPCRequest.Notification(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_2421D3DF4(a1, type metadata accessor for InferenceProviderXPCRequest.Notification);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_24227238C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload != 1)
    {
      v6 = type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0);
      *(_BYTE *)(a1 + *(int *)(v6 + 20)) = *(_BYTE *)(a2 + *(int *)(v6 + 20));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for InferenceProviderXPCRequest.Notification(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload != 1)
  {
    v6 = type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0);
    *(_BYTE *)(a1 + *(int *)(v6 + 20)) = *(_BYTE *)(a2 + *(int *)(v6 + 20));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for InferenceProviderXPCRequest.Notification(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    sub_2421D3DF4(a1, type metadata accessor for InferenceProviderXPCRequest.Notification);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_24227238C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload != 1)
    {
      v6 = type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0);
      *(_BYTE *)(a1 + *(int *)(v6 + 20)) = *(_BYTE *)(a2 + *(int *)(v6 + 20));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24221DAE0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(319);
  if (v1 <= 0x3F)
  {
    result = sub_24227238C();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void type metadata accessor for InferenceProviderXPCRequest.EmptyResponse()
{
  OUTLINED_FUNCTION_65_1();
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.WireCode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.WireCode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_24221DC40 + 4 * byte_242279FA6[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_24221DC74 + 4 * byte_242279FA1[v4]))();
}

uint64_t sub_24221DC74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24221DC7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24221DC84);
  return result;
}

uint64_t sub_24221DC90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24221DC98);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_24221DC9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24221DCA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for InferenceProviderXPCRequest.WireCode()
{
  OUTLINED_FUNCTION_65_1();
}

void type metadata accessor for InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest()
{
  OUTLINED_FUNCTION_65_1();
}

uint64_t initializeBufferWithCopyOfBuffer for InferenceProviderXPCRequest.PrewarmBundle(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for InferenceProviderPrewarmInformation(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v8;
    v9 = *(int *)(v4 + 24);
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    v12 = sub_24227238C();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    sub_242272644();
    v13(v10, v11, v12);
    v14 = *(int *)(v6 + 28);
    v15 = (_QWORD *)(a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *(_DWORD *)(a1 + *(int *)(v6 + 32)) = *(_DWORD *)((char *)a2 + *(int *)(v6 + 32));
    sub_242272644();
  }
  return a1;
}

uint64_t destroy for InferenceProviderXPCRequest.PrewarmBundle(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for InferenceProviderPrewarmInformation(0) + 24);
  v3 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InferenceProviderXPCRequest.PrewarmBundle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  v6 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
  v7 = v6[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24227238C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_242272644();
  v11(v8, v9, v10);
  v12 = v6[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  *(_DWORD *)(a1 + v6[8]) = *(_DWORD *)(a2 + v6[8]);
  sub_242272644();
  return a1;
}

uint64_t assignWithCopy for InferenceProviderXPCRequest.PrewarmBundle(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  v4 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
  v5 = v4[6];
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  v9 = v4[7];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + v4[8]) = *(_DWORD *)(a2 + v4[8]);
  return a1;
}

_OWORD *initializeWithTake for InferenceProviderXPCRequest.PrewarmBundle(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
  v6 = v5[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_24227238C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + v5[7]) = *(_OWORD *)((char *)a2 + v5[7]);
  *(_DWORD *)((char *)a1 + v5[8]) = *(_DWORD *)((char *)a2 + v5[8]);
  return a1;
}

uint64_t assignWithTake for InferenceProviderXPCRequest.PrewarmBundle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  v6 = (int *)type metadata accessor for InferenceProviderPrewarmInformation(0);
  v7 = v6[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = v6[7];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + v6[8]) = *(_DWORD *)(a2 + v6[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.PrewarmBundle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24221E11C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_102_4();
  return OUTLINED_FUNCTION_92_4(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.PrewarmBundle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24221E14C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_102_4();
  v0 = OUTLINED_FUNCTION_71_4();
  return OUTLINED_FUNCTION_93_4(v0, v1, v2, v3);
}

uint64_t sub_24221E168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24221FAE4(a1, a2, a3, type metadata accessor for InferenceProviderPrewarmInformation);
}

_QWORD *initializeBufferWithCopyOfBuffer for InferenceProviderXPCRequest.TransitionAsset(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = *(int *)(a3 + 28);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    v10 = sub_24227238C();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    sub_242272644();
    sub_242272644();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t initializeWithCopy for InferenceProviderXPCRequest.TransitionAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_24227238C();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  sub_242272644();
  sub_242272644();
  v10(v7, v8, v9);
  return a1;
}

uint64_t assignWithCopy for InferenceProviderXPCRequest.TransitionAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for InferenceProviderXPCRequest.TransitionAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for InferenceProviderXPCRequest.TransitionAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v8 = *(int *)(a3 + 28);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.TransitionAsset()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_24221E460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_14();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
    OUTLINED_FUNCTION_62_0(a1 + *(int *)(a3 + 28), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.TransitionAsset()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_24221E4D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_65_6();
  if (v3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_14();
  }
  else
  {
    v4 = v2;
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
    OUTLINED_FUNCTION_63_1(v1 + *(int *)(v4 + 28), v0, v0, v5);
  }
}

uint64_t sub_24221E530()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24227238C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.FetchNextStreamResultsRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.FetchNextStreamResultsRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24221E5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24221FAE4(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
}

uint64_t initializeBufferWithCopyOfBuffer for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  sub_242272644();
  return a1;
}

uint64_t destroy for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 9))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest.Response()
{
  OUTLINED_FUNCTION_65_1();
}

_QWORD *initializeBufferWithCopyOfBuffer for InferenceProviderXPCRequest.InferenceRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v13 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2422725CC();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    v14 = *(int *)(type metadata accessor for ClientData(0) + 20);
    v15 = &v8[v14];
    v16 = &v9[v14];
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v10))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v15, v16, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v10);
    }
    v18 = *(int *)(a3 + 24);
    v46 = a2;
    v47 = a3;
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = *((_QWORD *)v20 + 3);
    v45 = a1;
    *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
    *((_QWORD *)v19 + 3) = v22;
    *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
    v23 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
    v24 = v23[7];
    v25 = &v19[v24];
    v26 = &v20[v24];
    v27 = sub_24227238C();
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
    sub_242272644();
    v13 = v45;
    sub_242272644();
    sub_242272644();
    v28(v25, v26, v27);
    v28(&v19[v23[8]], &v20[v23[8]], v27);
    *(_QWORD *)&v19[v23[9]] = *(_QWORD *)&v20[v23[9]];
    *(_QWORD *)&v19[v23[10]] = *(_QWORD *)&v20[v23[10]];
    v29 = v23[11];
    v30 = &v19[v29];
    v31 = &v20[v29];
    v32 = *((_OWORD *)v31 + 1);
    *(_OWORD *)v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v32;
    v30[32] = v31[32];
    *(_DWORD *)&v19[v23[12]] = *(_DWORD *)&v20[v23[12]];
    v33 = v23[13];
    v34 = &v19[v33];
    v35 = &v20[v33];
    v36 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v36;
    v37 = v23[14];
    v38 = &v19[v37];
    v39 = &v20[v37];
    v40 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v40;
    v19[v23[15]] = v20[v23[15]];
    v41 = *(int *)(v47 + 28);
    v42 = (char *)v45 + v41;
    v43 = (char *)v46 + v41;
    sub_242272644();
    sub_242272644();
    v28(v42, v43, v27);
  }
  return v13;
}

uint64_t destroy for InferenceProviderXPCRequest.InferenceRequest(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(uint64_t, uint64_t);

  v4 = a1 + a2[5];
  v5 = sub_2422725CC();
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v4 + *(int *)(type metadata accessor for ClientData(0) + 20);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v6, v5);
  v7 = a1 + a2[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = type metadata accessor for InferenceProviderRequestConfiguration(0);
  v9 = v7 + *(int *)(v8 + 28);
  v10 = sub_24227238C();
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v12(v9, v10);
  v12(v7 + *(int *)(v8 + 32), v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, uint64_t))v12)(a1 + a2[7], v10);
}

_BYTE *initializeWithCopy for InferenceProviderXPCRequest.InferenceRequest(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2422725CC();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = *(int *)(type metadata accessor for ClientData(0) + 20);
  v12 = &v7[v11];
  v13 = &v8[v11];
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v9))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v12, v13, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v9);
  }
  v15 = *(int *)(a3 + 24);
  v43 = a2;
  v44 = a3;
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *((_QWORD *)v17 + 1);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = v18;
  v19 = *((_QWORD *)v17 + 3);
  *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
  *((_QWORD *)v16 + 3) = v19;
  *((_QWORD *)v16 + 4) = *((_QWORD *)v17 + 4);
  v20 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
  v21 = v20[7];
  v22 = &v16[v21];
  v23 = &v17[v21];
  v24 = sub_24227238C();
  v42 = a1;
  v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  sub_242272644();
  sub_242272644();
  sub_242272644();
  v25(v22, v23, v24);
  v25(&v16[v20[8]], &v17[v20[8]], v24);
  *(_QWORD *)&v16[v20[9]] = *(_QWORD *)&v17[v20[9]];
  *(_QWORD *)&v16[v20[10]] = *(_QWORD *)&v17[v20[10]];
  v26 = v20[11];
  v27 = &v16[v26];
  v28 = &v17[v26];
  v29 = *((_OWORD *)v28 + 1);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v29;
  v27[32] = v28[32];
  *(_DWORD *)&v16[v20[12]] = *(_DWORD *)&v17[v20[12]];
  v30 = v20[13];
  v31 = &v16[v30];
  v32 = &v17[v30];
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = v33;
  v34 = v20[14];
  v35 = &v16[v34];
  v36 = &v17[v34];
  v37 = *((_QWORD *)v36 + 1);
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = v37;
  v16[v20[15]] = v17[v20[15]];
  v38 = *(int *)(v44 + 28);
  v39 = &v42[v38];
  v40 = &v43[v38];
  sub_242272644();
  sub_242272644();
  v25(v39, v40, v24);
  return v42;
}

_BYTE *assignWithCopy for InferenceProviderXPCRequest.InferenceRequest(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2422725CC();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  v14 = *(int *)(type metadata accessor for ClientData(0) + 20);
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v9);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v9);
  if (!v17)
  {
    v19 = *(_QWORD *)(v9 - 8);
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v15, v16, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v9);
    goto LABEL_12;
  }
  if (v18)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v15, v16, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v9);
LABEL_13:
  v21 = a3[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)&a2[v21];
  *((_QWORD *)v22 + 1) = *(_QWORD *)&a2[v21 + 8];
  sub_242272644();
  swift_bridgeObjectRelease();
  *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
  *((_QWORD *)v22 + 3) = *((_QWORD *)v23 + 3);
  sub_242272644();
  swift_bridgeObjectRelease();
  *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
  sub_242272644();
  swift_bridgeObjectRelease();
  v24 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
  v25 = v24[7];
  v26 = &v22[v25];
  v27 = &v23[v25];
  v28 = sub_24227238C();
  v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 24);
  v29(v26, v27, v28);
  v29(&v22[v24[8]], &v23[v24[8]], v28);
  *(_QWORD *)&v22[v24[9]] = *(_QWORD *)&v23[v24[9]];
  *(_QWORD *)&v22[v24[10]] = *(_QWORD *)&v23[v24[10]];
  v30 = v24[11];
  v31 = &v22[v30];
  v32 = &v23[v30];
  v33 = v32[32];
  v34 = *((_OWORD *)v32 + 1);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = v34;
  v31[32] = v33;
  *(_DWORD *)&v22[v24[12]] = *(_DWORD *)&v23[v24[12]];
  v35 = v24[13];
  v36 = &v22[v35];
  v37 = &v23[v35];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
  sub_242272644();
  swift_bridgeObjectRelease();
  v38 = v24[14];
  v39 = &v22[v38];
  v40 = &v23[v38];
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
  sub_242272644();
  swift_bridgeObjectRelease();
  v22[v24[15]] = v23[v24[15]];
  v29(&a1[a3[7]], &a2[a3[7]], v28);
  return a1;
}

_BYTE *initializeWithTake for InferenceProviderXPCRequest.InferenceRequest(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  __int128 v18;
  int *v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  void (*v24)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  __int128 v28;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2422725CC();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v11 = *(int *)(type metadata accessor for ClientData(0) + 20);
  v12 = &v7[v11];
  v13 = &v8[v11];
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v9))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v12, v13, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v9);
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_OWORD *)&a2[v15 + 16];
  *(_OWORD *)v16 = *(_OWORD *)&a2[v15];
  *((_OWORD *)v16 + 1) = v18;
  *((_QWORD *)v16 + 4) = *(_QWORD *)&a2[v15 + 32];
  v19 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
  v20 = v19[7];
  v21 = &v16[v20];
  v22 = &v17[v20];
  v23 = sub_24227238C();
  v24 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
  v24(v21, v22, v23);
  v24(&v16[v19[8]], &v17[v19[8]], v23);
  *(_QWORD *)&v16[v19[9]] = *(_QWORD *)&v17[v19[9]];
  *(_QWORD *)&v16[v19[10]] = *(_QWORD *)&v17[v19[10]];
  v25 = v19[11];
  v26 = &v16[v25];
  v27 = &v17[v25];
  v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  v26[32] = v27[32];
  *(_DWORD *)&v16[v19[12]] = *(_DWORD *)&v17[v19[12]];
  *(_OWORD *)&v16[v19[13]] = *(_OWORD *)&v17[v19[13]];
  *(_OWORD *)&v16[v19[14]] = *(_OWORD *)&v17[v19[14]];
  v16[v19[15]] = v17[v19[15]];
  v24(&a1[a3[7]], &a2[a3[7]], v23);
  return a1;
}

_BYTE *assignWithTake for InferenceProviderXPCRequest.InferenceRequest(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_2422725CC();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  v14 = *(int *)(type metadata accessor for ClientData(0) + 20);
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v9);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v9);
  if (!v17)
  {
    v19 = *(_QWORD *)(v9 - 8);
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v15, v16, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v9);
    goto LABEL_12;
  }
  if (v18)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v15, v16, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v9);
LABEL_13:
  v21 = a3[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *(_QWORD *)&a2[v21 + 8];
  *(_QWORD *)v22 = *(_QWORD *)&a2[v21];
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v25 = *((_QWORD *)v23 + 3);
  *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
  *((_QWORD *)v22 + 3) = v25;
  swift_bridgeObjectRelease();
  *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
  swift_bridgeObjectRelease();
  v26 = (int *)type metadata accessor for InferenceProviderRequestConfiguration(0);
  v27 = v26[7];
  v28 = &v22[v27];
  v29 = &v23[v27];
  v30 = sub_24227238C();
  v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40);
  v31(v28, v29, v30);
  v31(&v22[v26[8]], &v23[v26[8]], v30);
  *(_QWORD *)&v22[v26[9]] = *(_QWORD *)&v23[v26[9]];
  *(_QWORD *)&v22[v26[10]] = *(_QWORD *)&v23[v26[10]];
  v32 = v26[11];
  v33 = &v22[v32];
  v34 = &v23[v32];
  v35 = *((_OWORD *)v34 + 1);
  *(_OWORD *)v33 = *(_OWORD *)v34;
  *((_OWORD *)v33 + 1) = v35;
  v33[32] = v34[32];
  *(_DWORD *)&v22[v26[12]] = *(_DWORD *)&v23[v26[12]];
  v36 = v26[13];
  v37 = &v22[v36];
  v38 = (uint64_t *)&v23[v36];
  v40 = *v38;
  v39 = v38[1];
  *(_QWORD *)v37 = v40;
  *((_QWORD *)v37 + 1) = v39;
  swift_bridgeObjectRelease();
  v41 = v26[14];
  v42 = &v22[v41];
  v43 = (uint64_t *)&v23[v41];
  v45 = *v43;
  v44 = v43[1];
  *(_QWORD *)v42 = v45;
  *((_QWORD *)v42 + 1) = v44;
  swift_bridgeObjectRelease();
  v22[v26[15]] = v23[v26[15]];
  v31(&a1[a3[7]], &a2[a3[7]], v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.InferenceRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_24221F638(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    OUTLINED_FUNCTION_14();
  }
  else
  {
    type metadata accessor for ClientData(0);
    OUTLINED_FUNCTION_69_6();
    if (v9)
    {
      v7 = v6;
      v8 = a3[5];
    }
    else
    {
      type metadata accessor for InferenceProviderRequestConfiguration(0);
      OUTLINED_FUNCTION_69_6();
      if (v9)
      {
        v7 = v10;
        v8 = a3[6];
      }
      else
      {
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
        v8 = a3[7];
      }
    }
    OUTLINED_FUNCTION_62_0(a1 + v8, a2, v7);
  }
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.InferenceRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_24221F6E4()
{
  uint64_t v0;
  _BYTE *v1;
  int *v2;
  int v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_65_6();
  if (v3 == 254)
  {
    *v1 = v0 + 1;
    OUTLINED_FUNCTION_14();
  }
  else
  {
    v4 = v2;
    type metadata accessor for ClientData(0);
    OUTLINED_FUNCTION_44_2();
    if (v8)
    {
      v6 = v5;
      v7 = v4[5];
    }
    else
    {
      type metadata accessor for InferenceProviderRequestConfiguration(0);
      OUTLINED_FUNCTION_44_2();
      if (v8)
      {
        v6 = v9;
        v7 = v4[6];
      }
      else
      {
        v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
        v7 = v4[7];
      }
    }
    OUTLINED_FUNCTION_63_1((uint64_t)&v1[v7], v0, v0, v6);
  }
}

uint64_t sub_24221F778()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for ClientData(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for InferenceProviderRequestConfiguration(319);
    if (v2 <= 0x3F)
    {
      result = sub_24227238C();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.DirectStreamHandshake()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24221F830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_65_6();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  return OUTLINED_FUNCTION_92_4(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.DirectStreamHandshake()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24221F86C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_65_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  v0 = OUTLINED_FUNCTION_71_4();
  return OUTLINED_FUNCTION_93_4(v0, v1, v2, v3);
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.AwaitEndStreamRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.AwaitEndStreamRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.WillCancelNotification()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_24221F8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    OUTLINED_FUNCTION_62_0(a1, a2, v4);
  else
    OUTLINED_FUNCTION_14();
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.WillCancelNotification()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_24221F92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_65_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_44_2();
  if (v7)
  {
    v8 = OUTLINED_FUNCTION_71_4();
    OUTLINED_FUNCTION_63_1(v8, v9, v10, v11);
  }
  else
  {
    *(_BYTE *)(v5 + *(int *)(a4 + 20)) = v4 + 2;
    OUTLINED_FUNCTION_14();
  }
}

uint64_t sub_24221F97C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24227238C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s20ModelManagerServices27InferenceProviderXPCRequestO21DirectStreamHandshakeVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_27_6();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v2 - 8))(v1, v0, v2);
}

void _s20ModelManagerServices27InferenceProviderXPCRequestO21DirectStreamHandshakeVwcp_0()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_59_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16));
  OUTLINED_FUNCTION_34();
}

void _s20ModelManagerServices27InferenceProviderXPCRequestO21DirectStreamHandshakeVwca_0()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_59_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 24));
  OUTLINED_FUNCTION_34();
}

void _s20ModelManagerServices27InferenceProviderXPCRequestO21DirectStreamHandshakeVwtk_0()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_59_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32));
  OUTLINED_FUNCTION_34();
}

void _s20ModelManagerServices27InferenceProviderXPCRequestO21DirectStreamHandshakeVwta_0()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_27_6();
  OUTLINED_FUNCTION_59_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 40));
  OUTLINED_FUNCTION_34();
}

uint64_t getEnumTagSinglePayload for InferenceProviderXPCRequest.EndOfStreamNotification()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for InferenceProviderXPCRequest.EndOfStreamNotification()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24221FAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.EndOfStreamNotification.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.EndOfStreamNotification.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.WillCancelNotification.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.AwaitEndStreamRequest.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.AwaitEndStreamRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.DirectStreamHandshake.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.DirectStreamHandshake.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.InferenceRequest.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.InferenceRequest.CodingKeys;
}

uint64_t _s20ModelManagerServices27InferenceProviderXPCRequestO16InferenceRequestV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_132_2(-1);
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_132_2((*a1 | (v4 << 8)) - 4);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_132_2((*a1 | (v4 << 8)) - 4);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_132_2((*a1 | (v4 << 8)) - 4);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_132_2(v8);
}

uint64_t _s20ModelManagerServices27InferenceProviderXPCRequestO16InferenceRequestV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24221FC80 + 4 * byte_242279FB0[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_127_2 + 4 * byte_242279FAB[v4]))();
}

uint64_t sub_24221FCB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24221FCC0);
  return result;
}

uint64_t sub_24221FCC8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x24221FCD0);
  return OUTLINED_FUNCTION_125_3();
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.TransitionAsset.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.TransitionAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.PrewarmBundle.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.EmptyResponse.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.EmptyResponse.CodingKeys;
}

uint64_t _s20ModelManagerServices27InferenceProviderXPCRequestO22WillCancelNotificationV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_132_2(-1);
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_132_2((*a1 | (v4 << 8)) - 2);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_132_2((*a1 | (v4 << 8)) - 2);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_132_2((*a1 | (v4 << 8)) - 2);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_132_2(v8);
}

uint64_t _s20ModelManagerServices27InferenceProviderXPCRequestO22WillCancelNotificationV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24221FDF0 + 4 * byte_242279FBA[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_127_2_0 + 4 * byte_242279FB5[v4]))();
}

uint64_t sub_24221FE28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24221FE30);
  return result;
}

uint64_t sub_24221FE38(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x24221FE40);
  return OUTLINED_FUNCTION_125_3();
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.Notification.CodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.Notification.CodingKeys;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.Notification.WillCancelNotificationCodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.Notification.WillCancelNotificationCodingKeys;
}

uint64_t _s20ModelManagerServices27InferenceProviderXPCRequestO23EndOfStreamNotificationV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24221FEB0 + 4 * byte_242279FBF[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24221FED0 + 4 * byte_242279FC4[v4]))();
}

_BYTE *sub_24221FEB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24221FED0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24221FED8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24221FEE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24221FEE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24221FEF0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for InferenceProviderXPCRequest.Notification.TriggerEndOfStreamCodingKeys()
{
  return &type metadata for InferenceProviderXPCRequest.Notification.TriggerEndOfStreamCodingKeys;
}

uint64_t _s20ModelManagerServices27InferenceProviderXPCRequestO31ConfigureBuiltInProviderRequestVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_132_2(-1);
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_132_2((*a1 | (v4 << 8)) - 3);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_132_2((*a1 | (v4 << 8)) - 3);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_132_2((*a1 | (v4 << 8)) - 3);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_132_2(v8);
}

uint64_t _s20ModelManagerServices27InferenceProviderXPCRequestO31ConfigureBuiltInProviderRequestVwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24221FFDC + 4 * byte_242279FCE[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_127_2_1 + 4 * byte_242279FC9[v4]))();
}

uint64_t sub_242220014(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24222001CLL);
  return result;
}

uint64_t sub_242220024(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x24222002CLL);
  return OUTLINED_FUNCTION_125_3();
}

ValueMetadata *type metadata accessor for InferenceProviderRequestResult.CodingKeys()
{
  return &type metadata for InferenceProviderRequestResult.CodingKeys;
}

unint64_t sub_242220050()
{
  unint64_t result;

  result = qword_2571E1970;
  if (!qword_2571E1970)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AB20, &type metadata for InferenceProviderRequestResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1970);
  }
  return result;
}

unint64_t sub_242220090()
{
  unint64_t result;

  result = qword_2571E1978;
  if (!qword_2571E1978)
  {
    result = MEMORY[0x2426A62C4](&unk_24227ABD8, &type metadata for InferenceProviderXPCRequest.Notification.TriggerEndOfStreamCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1978);
  }
  return result;
}

unint64_t sub_2422200D0()
{
  unint64_t result;

  result = qword_2571E1980;
  if (!qword_2571E1980)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AC90, &type metadata for InferenceProviderXPCRequest.Notification.WillCancelNotificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1980);
  }
  return result;
}

unint64_t sub_242220110()
{
  unint64_t result;

  result = qword_2571E1988;
  if (!qword_2571E1988)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AD48, &type metadata for InferenceProviderXPCRequest.Notification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1988);
  }
  return result;
}

unint64_t sub_242220150()
{
  unint64_t result;

  result = qword_2571E1990;
  if (!qword_2571E1990)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AE50, &type metadata for InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1990);
  }
  return result;
}

unint64_t sub_242220190()
{
  unint64_t result;

  result = qword_2571E1998;
  if (!qword_2571E1998)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AF08, &type metadata for InferenceProviderXPCRequest.PrewarmBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1998);
  }
  return result;
}

unint64_t sub_2422201D0()
{
  unint64_t result;

  result = qword_2571E19A0;
  if (!qword_2571E19A0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AFC0, &type metadata for InferenceProviderXPCRequest.TransitionAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E19A0);
  }
  return result;
}

unint64_t sub_242220210()
{
  unint64_t result;

  result = qword_2571E19A8;
  if (!qword_2571E19A8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B078, &type metadata for InferenceProviderXPCRequest.InferenceRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E19A8);
  }
  return result;
}

unint64_t sub_242220250()
{
  unint64_t result;

  result = qword_2571E19B0;
  if (!qword_2571E19B0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B130, &type metadata for InferenceProviderXPCRequest.DirectStreamHandshake.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E19B0);
  }
  return result;
}

unint64_t sub_242220290()
{
  unint64_t result;

  result = qword_2571E19B8;
  if (!qword_2571E19B8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B1E8, &type metadata for InferenceProviderXPCRequest.AwaitEndStreamRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E19B8);
  }
  return result;
}

unint64_t sub_2422202D0()
{
  unint64_t result;

  result = qword_2571E19C0;
  if (!qword_2571E19C0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B2A0, &type metadata for InferenceProviderXPCRequest.WillCancelNotification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E19C0);
  }
  return result;
}

unint64_t sub_242220310()
{
  unint64_t result;

  result = qword_2571E19C8;
  if (!qword_2571E19C8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B358, &type metadata for InferenceProviderXPCRequest.EndOfStreamNotification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E19C8);
  }
  return result;
}

unint64_t sub_242220350()
{
  unint64_t result;

  result = qword_2571E19D0;
  if (!qword_2571E19D0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B2C8, &type metadata for InferenceProviderXPCRequest.EndOfStreamNotification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E19D0);
  }
  return result;
}

unint64_t sub_242220390()
{
  unint64_t result;

  result = qword_2571E19D8;
  if (!qword_2571E19D8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B2F0, &type metadata for InferenceProviderXPCRequest.EndOfStreamNotification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E19D8);
  }
  return result;
}

unint64_t sub_2422203D0()
{
  unint64_t result;

  result = qword_2571E19E0;
  if (!qword_2571E19E0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B210, &type metadata for InferenceProviderXPCRequest.WillCancelNotification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E19E0);
  }
  return result;
}

unint64_t sub_242220410()
{
  unint64_t result;

  result = qword_2571E19E8;
  if (!qword_2571E19E8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B238, &type metadata for InferenceProviderXPCRequest.WillCancelNotification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E19E8);
  }
  return result;
}

unint64_t sub_242220450()
{
  unint64_t result;

  result = qword_2571E19F0;
  if (!qword_2571E19F0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B158, &type metadata for InferenceProviderXPCRequest.AwaitEndStreamRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E19F0);
  }
  return result;
}

unint64_t sub_242220490()
{
  unint64_t result;

  result = qword_2571E19F8;
  if (!qword_2571E19F8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B180, &type metadata for InferenceProviderXPCRequest.AwaitEndStreamRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E19F8);
  }
  return result;
}

unint64_t sub_2422204D0()
{
  unint64_t result;

  result = qword_2571E1A00;
  if (!qword_2571E1A00)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B0A0, &type metadata for InferenceProviderXPCRequest.DirectStreamHandshake.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A00);
  }
  return result;
}

unint64_t sub_242220510()
{
  unint64_t result;

  result = qword_2571E1A08;
  if (!qword_2571E1A08)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B0C8, &type metadata for InferenceProviderXPCRequest.DirectStreamHandshake.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A08);
  }
  return result;
}

unint64_t sub_242220550()
{
  unint64_t result;

  result = qword_2571E1A10;
  if (!qword_2571E1A10)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AFE8, &type metadata for InferenceProviderXPCRequest.InferenceRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A10);
  }
  return result;
}

unint64_t sub_242220590()
{
  unint64_t result;

  result = qword_2571E1A18;
  if (!qword_2571E1A18)
  {
    result = MEMORY[0x2426A62C4](&unk_24227B010, &type metadata for InferenceProviderXPCRequest.InferenceRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A18);
  }
  return result;
}

unint64_t sub_2422205D0()
{
  unint64_t result;

  result = qword_2571E1A20;
  if (!qword_2571E1A20)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AF30, &type metadata for InferenceProviderXPCRequest.TransitionAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A20);
  }
  return result;
}

unint64_t sub_242220610()
{
  unint64_t result;

  result = qword_2571E1A28;
  if (!qword_2571E1A28)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AF58, &type metadata for InferenceProviderXPCRequest.TransitionAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A28);
  }
  return result;
}

unint64_t sub_242220650()
{
  unint64_t result;

  result = qword_2571E1A30;
  if (!qword_2571E1A30)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AE78, &type metadata for InferenceProviderXPCRequest.PrewarmBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A30);
  }
  return result;
}

unint64_t sub_242220690()
{
  unint64_t result;

  result = qword_2571E1A38;
  if (!qword_2571E1A38)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AEA0, &type metadata for InferenceProviderXPCRequest.PrewarmBundle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A38);
  }
  return result;
}

unint64_t sub_2422206D0()
{
  unint64_t result;

  result = qword_2571E1A40;
  if (!qword_2571E1A40)
  {
    result = MEMORY[0x2426A62C4](&unk_24227ADC0, &type metadata for InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A40);
  }
  return result;
}

unint64_t sub_242220710()
{
  unint64_t result;

  result = qword_2571E1A48;
  if (!qword_2571E1A48)
  {
    result = MEMORY[0x2426A62C4](&unk_24227ADE8, &type metadata for InferenceProviderXPCRequest.ConfigureBuiltInProviderRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A48);
  }
  return result;
}

unint64_t sub_242220750()
{
  unint64_t result;

  result = qword_2571E1A50;
  if (!qword_2571E1A50)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AD70, &type metadata for InferenceProviderXPCRequest.EmptyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A50);
  }
  return result;
}

unint64_t sub_242220790()
{
  unint64_t result;

  result = qword_2571E1A58;
  if (!qword_2571E1A58)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AD98, &type metadata for InferenceProviderXPCRequest.EmptyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A58);
  }
  return result;
}

unint64_t sub_2422207D0()
{
  unint64_t result;

  result = qword_2571E1A60;
  if (!qword_2571E1A60)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AC00, &type metadata for InferenceProviderXPCRequest.Notification.WillCancelNotificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A60);
  }
  return result;
}

unint64_t sub_242220810()
{
  unint64_t result;

  result = qword_2571E1A68;
  if (!qword_2571E1A68)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AC28, &type metadata for InferenceProviderXPCRequest.Notification.WillCancelNotificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A68);
  }
  return result;
}

unint64_t sub_242220850()
{
  unint64_t result;

  result = qword_2571E1A70;
  if (!qword_2571E1A70)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AB48, &type metadata for InferenceProviderXPCRequest.Notification.TriggerEndOfStreamCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A70);
  }
  return result;
}

unint64_t sub_242220890()
{
  unint64_t result;

  result = qword_2571E1A78;
  if (!qword_2571E1A78)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AB70, &type metadata for InferenceProviderXPCRequest.Notification.TriggerEndOfStreamCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A78);
  }
  return result;
}

unint64_t sub_2422208D0()
{
  unint64_t result;

  result = qword_2571E1A80;
  if (!qword_2571E1A80)
  {
    result = MEMORY[0x2426A62C4](&unk_24227ACB8, &type metadata for InferenceProviderXPCRequest.Notification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A80);
  }
  return result;
}

unint64_t sub_242220910()
{
  unint64_t result;

  result = qword_2571E1A88;
  if (!qword_2571E1A88)
  {
    result = MEMORY[0x2426A62C4](&unk_24227ACE0, &type metadata for InferenceProviderXPCRequest.Notification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A88);
  }
  return result;
}

unint64_t sub_242220950()
{
  unint64_t result;

  result = qword_2571E1A90;
  if (!qword_2571E1A90)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AA90, &type metadata for InferenceProviderRequestResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A90);
  }
  return result;
}

unint64_t sub_242220990()
{
  unint64_t result;

  result = qword_2571E1A98;
  if (!qword_2571E1A98)
  {
    result = MEMORY[0x2426A62C4](&unk_24227AAB8, &type metadata for InferenceProviderRequestResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1A98);
  }
  return result;
}

unint64_t sub_2422209CC()
{
  unint64_t result;

  result = qword_2571E1AA0;
  if (!qword_2571E1AA0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for InferenceProviderXPCRequest.WireCode, &type metadata for InferenceProviderXPCRequest.WireCode);
    atomic_store(result, &qword_2571E1AA0);
  }
  return result;
}

void sub_242220A08(uint64_t a1)
{
  if (!OUTLINED_FUNCTION_55_3(a1))
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571E0C88);
    sub_242212E68();
    sub_242212EA4();
    OUTLINED_FUNCTION_66_5((uint64_t)&qword_2543AA450);
    OUTLINED_FUNCTION_66_5((uint64_t)&qword_2543AA448);
    OUTLINED_FUNCTION_45_5();
  }
  OUTLINED_FUNCTION_35();
}

uint64_t __swift_deallocate_boxed_opaque_existential_2(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x2426A6378);
  return result;
}

void sub_242220ACC(uint64_t a1)
{
  if (!OUTLINED_FUNCTION_55_3(a1))
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571E0CB8);
    sub_242213180();
    sub_2422131BC();
    OUTLINED_FUNCTION_66_5((uint64_t)&qword_2543AA450);
    OUTLINED_FUNCTION_66_5((uint64_t)&qword_2543AA448);
    OUTLINED_FUNCTION_45_5();
  }
  OUTLINED_FUNCTION_35();
}

void sub_242220B5C(uint64_t a1)
{
  if (!OUTLINED_FUNCTION_55_3(a1))
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2571E0CB0);
    sub_242215054((uint64_t)&qword_2571E1490);
    sub_242215054((uint64_t)&qword_2571E1498);
    OUTLINED_FUNCTION_66_5((uint64_t)&qword_2543AA450);
    OUTLINED_FUNCTION_66_5((uint64_t)&qword_2543AA448);
    OUTLINED_FUNCTION_45_5();
  }
  OUTLINED_FUNCTION_35();
}

uint64_t OUTLINED_FUNCTION_3_5(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_5_5()
{
  uint64_t v0;

  return __swift_mutable_project_boxed_opaque_existential_1(v0 - 120, *(_QWORD *)(v0 - 96));
}

uint64_t OUTLINED_FUNCTION_8_5()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_9_6()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_mutable_project_boxed_opaque_existential_1(v1 - 120, v0);
}

uint64_t OUTLINED_FUNCTION_10_6()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_11_4()
{
  return sub_242272BFC();
}

uint64_t OUTLINED_FUNCTION_12_7()
{
  return sub_242272BD8();
}

uint64_t OUTLINED_FUNCTION_15_4()
{
  uint64_t v0;

  return __swift_mutable_project_boxed_opaque_existential_1(v0 - 120, *(_QWORD *)(v0 - 96));
}

uint64_t OUTLINED_FUNCTION_16_8()
{
  return sub_242272BFC();
}

uint64_t OUTLINED_FUNCTION_27_6()
{
  return sub_24227238C();
}

uint64_t OUTLINED_FUNCTION_40_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_44_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

void OUTLINED_FUNCTION_45_5()
{
  JUMPOUT(0x2426A62C4);
}

uint64_t *OUTLINED_FUNCTION_47_5(uint64_t a1)
{
  uint64_t *v1;

  v1[5] = a1;
  return __swift_allocate_boxed_opaque_existential_1(v1);
}

uint64_t OUTLINED_FUNCTION_48_6()
{
  uint64_t v0;

  return v0;
}

_QWORD *OUTLINED_FUNCTION_50_4(_QWORD *a1)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_54_5@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_55_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 120), v1);
}

uint64_t OUTLINED_FUNCTION_56_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&a10, a13);
}

uint64_t OUTLINED_FUNCTION_57_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

unint64_t OUTLINED_FUNCTION_58_3()
{
  return sub_24221A240();
}

uint64_t OUTLINED_FUNCTION_59_6@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_61_4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t OUTLINED_FUNCTION_62_5()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1Tm(v0 - 120);
}

uint64_t OUTLINED_FUNCTION_63_5()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1Tm(*(_QWORD *)(v0 - 96));
}

uint64_t OUTLINED_FUNCTION_64_5(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

void OUTLINED_FUNCTION_66_5(uint64_t a1)
{
  sub_242215054(a1);
}

uint64_t OUTLINED_FUNCTION_71_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_72_5()
{
  return sub_242272A4C();
}

uint64_t OUTLINED_FUNCTION_73_4()
{
  return sub_242272B48();
}

uint64_t OUTLINED_FUNCTION_75_4()
{
  return sub_242272D40();
}

void OUTLINED_FUNCTION_77_5(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_78_6(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_79_6()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_80_2()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_81_6()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_86_5(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_88_6()
{
  return sub_242272AAC();
}

uint64_t OUTLINED_FUNCTION_89_4()
{
  uint64_t v0;

  return __swift_deallocate_boxed_opaque_existential_2(v0);
}

uint64_t OUTLINED_FUNCTION_90_3@<X0>(uint64_t (*a1)(_QWORD)@<X0>, void (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  return sub_242219DE4(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_92_4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_93_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

void OUTLINED_FUNCTION_96_5(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_101_4()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_102_4()
{
  return type metadata accessor for InferenceProviderPrewarmInformation(0);
}

void OUTLINED_FUNCTION_103_3(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_2421D11A4(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_104_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_106_4()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_109_4()
{
  return sub_242272AF4();
}

uint64_t OUTLINED_FUNCTION_111_3()
{
  return type metadata accessor for ClientData(0);
}

uint64_t OUTLINED_FUNCTION_112_3()
{
  return type metadata accessor for InferenceProviderXPCRequest.WillCancelNotification(0);
}

uint64_t OUTLINED_FUNCTION_113_3@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return v1(v2 + a1, v4, v3);
}

void OUTLINED_FUNCTION_114_3(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_2421CE528(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_116_3()
{
  return sub_242272AAC();
}

uint64_t *OUTLINED_FUNCTION_119_4(uint64_t a1)
{
  uint64_t *v1;

  v1[5] = a1;
  return __swift_allocate_boxed_opaque_existential_1(v1);
}

uint64_t OUTLINED_FUNCTION_121_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_123_3(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_124_2(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

_BYTE *OUTLINED_FUNCTION_125_3@<X0>(_BYTE *result@<X0>, char a2@<W8>)
{
  *result = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_127_2(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

void OUTLINED_FUNCTION_128_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_2421D11A4(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_130_2()
{
  return sub_242272B48();
}

uint64_t OUTLINED_FUNCTION_131_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_132_2@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t OUTLINED_FUNCTION_133_2()
{
  return type metadata accessor for InferenceProviderXPCRequest.PrewarmBundle(0);
}

_QWORD *OUTLINED_FUNCTION_134_2()
{
  _QWORD *v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(v0, v1);
}

_QWORD *OUTLINED_FUNCTION_137_2()
{
  _QWORD *v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(v0, v1);
}

void OUTLINED_FUNCTION_138_2(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_242213644(v3, a2, a3);
}

unint64_t OUTLINED_FUNCTION_140_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_2422159BC();
}

uint64_t OUTLINED_FUNCTION_141_2()
{
  return sub_242272C20();
}

uint64_t OUTLINED_FUNCTION_144_2()
{
  return sub_242272B0C();
}

uint64_t _OSActivity.__allocating_init(_:)(const char *a1, uint64_t a2, char a3)
{
  uint64_t v6;

  OUTLINED_FUNCTION_1_4();
  v6 = swift_allocObject();
  _OSActivity.init(_:)(a1, a2, a3);
  return v6;
}

uint64_t _OSActivity.init(_:)(const char *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  NSObject *v4;

  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 16) = sub_242221228(a1, a2, a3, &dword_2421B5000);
  OUTLINED_FUNCTION_4();
  v4 = swift_unknownObjectRetain();
  os_activity_scope_enter(v4, (os_activity_scope_state_t)(v3 + 24));
  swift_endAccess();
  swift_unknownObjectRelease();
  return v3;
}

os_activity_t sub_242221228(const char *a1, uint64_t a2, char a3, void *a4)
{
  void *v6;
  os_unfair_lock_s *v7;
  NSObject *v8;
  unsigned int v9;
  os_activity_t result;
  NSObject *v11;
  os_activity_t v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  os_activity_t v18;
  uint64_t v19;

  if ((a3 & 1) != 0)
  {
    if ((unint64_t)a1 >> 32)
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    if (a1 >> 11 == 27)
      goto LABEL_28;
    if (a1 >> 16 > 0x10)
    {
      __break(1u);
    }
    else if ((a1 & 0xFFFFFF80) == 0)
    {
      if (a1 <= 0xFF)
      {
        v9 = ((_BYTE)a1 + 1);
LABEL_13:
        v19 = (v9 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * ((4 - (__clz(v9) >> 3)) & 7)));
        sub_2422217BC((const char *)&v19, a4, &v18);
        return v18;
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v13 = (a1 & 0x3F) << 8;
    v14 = (v13 | (a1 >> 6)) + 33217;
    v15 = (v13 | (a1 >> 6) & 0x3F) << 8;
    v16 = (((v15 | (a1 >> 12) & 0x3F) << 8) | (a1 >> 18)) - 2122219023;
    v17 = (v15 | (a1 >> 12)) + 8487393;
    if (a1 >> 16)
      v9 = v16;
    else
      v9 = v17;
    if (a1 < 0x800)
      v9 = v14;
    goto LABEL_13;
  }
  if (!a1)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (a4)
  {
    if (qword_2543AA038 == -1)
    {
LABEL_5:
      v6 = off_2543AA1E0;
      v7 = (os_unfair_lock_s *)((char *)off_2543AA1E0 + 24);
      os_unfair_lock_lock((os_unfair_lock_t)off_2543AA1E0 + 6);
      if (*((_QWORD *)v6 + 2))
      {
        v8 = *((_QWORD *)v6 + 2);
LABEL_16:
        swift_unknownObjectRetain();
        os_unfair_lock_unlock(v7);
        v12 = _os_activity_create(a4, a1, v8, OS_ACTIVITY_FLAG_DEFAULT);
        swift_unknownObjectRelease();
        return v12;
      }
      v11 = dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");
      *((_QWORD *)v6 + 2) = v11;
      if (v11)
      {
        v8 = v11;
        swift_unknownObjectRetain_n();
        goto LABEL_16;
      }
      goto LABEL_29;
    }
LABEL_19:
    swift_once();
    goto LABEL_5;
  }
LABEL_30:
  result = (os_activity_t)sub_242272A10();
  __break(1u);
  return result;
}

uint64_t _OSActivity.__allocating_init(_:closure:)(const char *a1, uint64_t a2, char a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_1_4();
  v9 = swift_allocObject();
  _OSActivity.init(_:)(a1, a2, a3);
  v10 = swift_retain();
  a4(v10);
  swift_beginAccess();
  os_activity_scope_leave((os_activity_scope_state_t)(v9 + 24));
  swift_endAccess();
  if (v4)
    swift_release();
  swift_release();
  return v9;
}

uint64_t _OSActivity.__allocating_init(_:closure:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 88) = a5;
  *(_QWORD *)(v6 + 96) = v5;
  *(_QWORD *)(v6 + 72) = a2;
  *(_QWORD *)(v6 + 80) = a4;
  *(_BYTE *)(v6 + 128) = a3;
  *(_QWORD *)(v6 + 64) = a1;
  return swift_task_switch();
}

uint64_t sub_242221568()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  const char *v3;
  char v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(int **)(v0 + 80);
  v3 = *(const char **)(v0 + 64);
  v4 = *(_BYTE *)(v0 + 128);
  *(_QWORD *)(v0 + 104) = swift_allocObject();
  _OSActivity.init(_:)(v3, v1, v4);
  v7 = (uint64_t (*)(void))((char *)v2 + *v2);
  swift_retain();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v5;
  *v5 = v0;
  v5[1] = sub_242221610;
  return v7();
}

uint64_t sub_242221610()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_242221674()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  OUTLINED_FUNCTION_4();
  os_activity_scope_leave((os_activity_scope_state_t)(v1 + 24));
  swift_endAccess();
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 104));
}

uint64_t sub_2422216DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  OUTLINED_FUNCTION_4();
  os_activity_scope_leave((os_activity_scope_state_t)(v1 + 24));
  swift_endAccess();
  swift_release_n();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall _OSActivity.close()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  os_activity_scope_leave((os_activity_scope_state_t)(v0 + 24));
  swift_endAccess();
}

uint64_t sub_242221784()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA228);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = 0;
  off_2543AA1E0 = (_UNKNOWN *)result;
  return result;
}

uint64_t sub_2422217BC@<X0>(const char *a1@<X0>, void *a2@<X2>, os_activity_t *a3@<X8>)
{
  void *v6;
  os_unfair_lock_s *v7;
  NSObject *v8;
  NSObject *v9;
  os_activity_t v10;
  uint64_t result;

  if (a2 && a1)
  {
    if (qword_2543AA038 != -1)
      swift_once();
    v6 = off_2543AA1E0;
    v7 = (os_unfair_lock_s *)((char *)off_2543AA1E0 + 24);
    os_unfair_lock_lock((os_unfair_lock_t)off_2543AA1E0 + 6);
    if (*((_QWORD *)v6 + 2))
    {
      v8 = *((_QWORD *)v6 + 2);
LABEL_9:
      swift_unknownObjectRetain();
      os_unfair_lock_unlock(v7);
      v10 = _os_activity_create(a2, a1, v8, OS_ACTIVITY_FLAG_DEFAULT);
      result = swift_unknownObjectRelease();
      *a3 = v10;
      return result;
    }
    v9 = dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");
    *((_QWORD *)v6 + 2) = v9;
    if (v9)
    {
      v8 = v9;
      swift_unknownObjectRetain_n();
      goto LABEL_9;
    }
    __break(1u);
  }
  result = sub_242272A10();
  __break(1u);
  return result;
}

uint64_t _OSActivity.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t _OSActivity.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_1_4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _OSActivity()
{
  return objc_opt_self();
}

uint64_t method lookup function for _OSActivity()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _OSActivity.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t OUTLINED_FUNCTION_1_4()
{
  uint64_t v0;

  return v0;
}

uint64_t UUIDIdentifier.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v8 = OUTLINED_FUNCTION_21();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a4, v11, v8);
}

uint64_t UUIDIdentifier.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_21();
  return OUTLINED_FUNCTION_55(a2, a1, v4, *(uint64_t (**)(void))(*(_QWORD *)(v4 - 8) + 32));
}

uint64_t UUIDIdentifier.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_21();
  return OUTLINED_FUNCTION_55(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t UUIDIdentifier.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[4];
  char *v25;

  v22 = a4;
  v23 = sub_24227238C();
  v8 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUIDIdentifier(0, a2, a3, v10);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v19 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242272D34();
  if (!v4)
  {
    v19 = v14;
    v20 = v12;
    v21 = v11;
    __swift_project_boxed_opaque_existential_1(v24, v24[3]);
    sub_242221D4C(&qword_2543A6E40, MEMORY[0x24BDCEAA8]);
    v15 = v25;
    v16 = v23;
    sub_242272C38();
    v17 = v19;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v19, v15, v16);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v22, v17, v21);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t type metadata accessor for UUIDIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UUIDIdentifier);
}

uint64_t UUIDIdentifier.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242272D58();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_24227238C();
  sub_242221D4C((unint64_t *)&unk_2543A9CE8, MEMORY[0x24BDCEA70]);
  sub_242272C50();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t UUIDIdentifier.hash(into:)()
{
  OUTLINED_FUNCTION_21();
  sub_242221D4C(&qword_2543AA0D8, MEMORY[0x24BDCEA88]);
  return sub_242272680();
}

uint64_t sub_242221D4C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_24227238C();
    result = MEMORY[0x2426A62C4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t UUIDIdentifier.hashValue.getter()
{
  sub_242272CBC();
  UUIDIdentifier.hash(into:)();
  return sub_242272D04();
}

uint64_t sub_242221DC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return UUIDIdentifier.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_242221DE4(_QWORD *a1)
{
  return UUIDIdentifier.encode(to:)(a1);
}

uint64_t sub_242221E00()
{
  sub_242272CBC();
  UUIDIdentifier.hash(into:)();
  return sub_242272D04();
}

void sub_242221E38()
{
  JUMPOUT(0x2426A62C4);
}

uint64_t dispatch thunk of UUIDIdentifiable.uuid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_242221E58()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_242221E60()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24227238C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_242221EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24227238C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_242221F04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_242221F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_242221F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_242221FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_242222014()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_242222020(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_21();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_242222050()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24222205C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_21();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t ResponseSequence.init(throwing:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = result;
  a2[3] = nullsub_1;
  a2[4] = 0;
  return result;
}

__n128 ResponseStream.init(wrappedSequence:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;

  v2 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_QWORD *)(a2 + 16) = v2;
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a2 + 24) = result;
  return result;
}

const void *ClientData.data.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t EnumTagSinglePayload;
  const void *bytes_ptr;
  void *v7;
  size_t length;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_87_4();
  v3 = OUTLINED_FUNCTION_17_6();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_86_6();
  OUTLINED_FUNCTION_104_5(v0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v3);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_102_5(EnumTagSinglePayload, &qword_2571E02C0);
    return 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v0, v1, v3);
    v7 = (void *)sub_2422725B4();
    bytes_ptr = xpc_data_get_bytes_ptr(v7);
    if (bytes_ptr)
    {
      length = xpc_data_get_length(v7);
      bytes_ptr = (const void *)MEMORY[0x2426A5430](bytes_ptr, length);
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_80_3();
    }
    else
    {
      OUTLINED_FUNCTION_80_3();
      swift_unknownObjectRelease();
    }
  }
  return bytes_ptr;
}

uint64_t sub_2422221E0(const void *a1, uint64_t a2)
{
  size_t v2;

  if (a1)
    v2 = a2 - (_QWORD)a1;
  else
    v2 = 0;
  xpc_data_create(a1, v2);
  return sub_2422725C0();
}

void ClientData.init(data:xpcData:)(unint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (a1 >> 60 != 15)
    __asm { BR              X10 }
  v5 = OUTLINED_FUNCTION_17_6();
  __swift_storeEnumTagSinglePayload(a3, 1, 1, v5);
  v6 = type metadata accessor for ClientData(0);
  sub_242228670(a2, a3 + *(int *)(v6 + 20), &qword_2571E02C0);
}

void _s20ModelManagerServices10ClientDataVyAC10Foundation0E0VSgcfC_0(unint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OUTLINED_FUNCTION_17_6();
  OUTLINED_FUNCTION_129((uint64_t)v6, v8, v9, v7);
  ClientData.init(data:xpcData:)(a1, (uint64_t)v6, a2);
  OUTLINED_FUNCTION_14();
}

uint64_t ClientData.xpcData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ClientData(0) + 20);
  return sub_242223A20(v3, a1);
}

BOOL static ClientData.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v42;
  uint64_t v43;
  char v44;
  _BYTE v45[4];
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;

  OUTLINED_FUNCTION_106();
  v54 = v0;
  v55 = v1;
  v3 = v2;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_17_6();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_0();
  v48 = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1AE0);
  OUTLINED_FUNCTION_27();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = &v45[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v15 = &v45[-v14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_38_2();
  v49 = v17;
  OUTLINED_FUNCTION_99_4();
  MEMORY[0x24BDAC7A8](v18);
  v52 = &v45[-v19];
  OUTLINED_FUNCTION_99_4();
  MEMORY[0x24BDAC7A8](v20);
  v53 = &v45[-v21];
  OUTLINED_FUNCTION_99_4();
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = &v45[-v24];
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = &v45[-v27];
  MEMORY[0x24BDAC7A8](v26);
  v30 = &v45[-v29];
  v50 = v5;
  sub_242223A20(v5, (uint64_t)&v45[-v29]);
  v51 = v3;
  sub_242223A20(v3, (uint64_t)v28);
  v31 = (uint64_t)&v15[*(int *)(v9 + 48)];
  sub_242223A20((uint64_t)v30, (uint64_t)v15);
  OUTLINED_FUNCTION_104_5((uint64_t)v28);
  OUTLINED_FUNCTION_12_8((uint64_t)v15);
  if (v32)
  {
    OUTLINED_FUNCTION_42_5((uint64_t)v28);
    OUTLINED_FUNCTION_42_5((uint64_t)v30);
    OUTLINED_FUNCTION_12_8(v31);
    if (v32)
    {
      v47 = v7;
      sub_2421D3B00((uint64_t)v15, &qword_2571E02C0);
      goto LABEL_11;
    }
LABEL_9:
    v33 = (uint64_t)v15;
LABEL_20:
    sub_2421D3B00(v33, &qword_2571E1AE0);
    return 0;
  }
  sub_242223A20((uint64_t)v15, (uint64_t)v25);
  OUTLINED_FUNCTION_12_8(v31);
  if (v32)
  {
    sub_2421D3B00((uint64_t)v28, &qword_2571E02C0);
    sub_2421D3B00((uint64_t)v30, &qword_2571E02C0);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v25, v6);
    goto LABEL_9;
  }
  v34 = v48;
  OUTLINED_FUNCTION_103_4(v48, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
  sub_2421ED71C(&qword_2571E1AE8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6700], MEMORY[0x24BEE6718]);
  v46 = sub_24227268C();
  v47 = v7;
  OUTLINED_FUNCTION_77_6(v34);
  OUTLINED_FUNCTION_70_3((uint64_t)v28);
  OUTLINED_FUNCTION_70_3((uint64_t)v30);
  OUTLINED_FUNCTION_77_6((uint64_t)v25);
  OUTLINED_FUNCTION_70_3((uint64_t)v15);
  if ((v46 & 1) == 0)
    return 0;
LABEL_11:
  v35 = type metadata accessor for ClientData(0);
  v36 = v53;
  sub_242223A20(v50 + *(int *)(v35 + 20), (uint64_t)v53);
  v37 = v52;
  sub_242223A20(v51 + *(int *)(v35 + 20), (uint64_t)v52);
  v38 = (uint64_t)&v13[*(int *)(v9 + 48)];
  sub_242223A20((uint64_t)v36, (uint64_t)v13);
  OUTLINED_FUNCTION_104_5((uint64_t)v37);
  OUTLINED_FUNCTION_12_8((uint64_t)v13);
  if (!v32)
  {
    sub_242223A20((uint64_t)v13, v49);
    OUTLINED_FUNCTION_12_8(v38);
    if (!v40)
    {
      v42 = v48;
      OUTLINED_FUNCTION_103_4(v48, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 32));
      sub_2421ED71C(&qword_2571E1AE8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6700], MEMORY[0x24BEE6718]);
      v43 = v49;
      v44 = sub_24227268C();
      OUTLINED_FUNCTION_77_6(v42);
      OUTLINED_FUNCTION_42_5((uint64_t)v37);
      OUTLINED_FUNCTION_42_5((uint64_t)v36);
      OUTLINED_FUNCTION_77_6(v43);
      OUTLINED_FUNCTION_42_5((uint64_t)v13);
      return (v44 & 1) != 0;
    }
    OUTLINED_FUNCTION_70_3((uint64_t)v37);
    OUTLINED_FUNCTION_70_3((uint64_t)v36);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v49, v6);
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_42_5((uint64_t)v37);
  OUTLINED_FUNCTION_42_5((uint64_t)v36);
  v39 = OUTLINED_FUNCTION_12_8(v38);
  if (!v32)
  {
LABEL_19:
    v33 = (uint64_t)v13;
    goto LABEL_20;
  }
  OUTLINED_FUNCTION_73_5(v39, &qword_2571E02C0);
  return 1;
}

uint64_t sub_2422228A4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 0x6C616E7265746E69 && a2 == 0xEC00000061746144;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E7265746E69 && a2 == 0xEF61746144435058)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_242272C20();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2422229A8()
{
  return 0x6C616E7265746E69;
}

uint64_t sub_2422229E0()
{
  return sub_2422229A8();
}

uint64_t sub_2422229E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2422228A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242222A0C()
{
  sub_242226358();
  return sub_242272D70();
}

uint64_t sub_242222A34()
{
  sub_242226358();
  return sub_242272D7C();
}

uint64_t ClientData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1AF0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_67();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242226358();
  sub_242272D64();
  sub_2422725CC();
  sub_2421ED71C(&qword_2571E1B00, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6700], MEMORY[0x24BEE6710]);
  OUTLINED_FUNCTION_51_5();
  if (!v1)
  {
    type metadata accessor for ClientData(0);
    OUTLINED_FUNCTION_51_5();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

void ClientData.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  char v21;

  v16 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_38_2();
  v17 = v6;
  OUTLINED_FUNCTION_99_4();
  MEMORY[0x24BDAC7A8](v7);
  v18 = (char *)&v14 - v8;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1B08);
  MEMORY[0x24BDAC7A8](v19);
  v9 = type metadata accessor for ClientData(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_19_5();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242226358();
  sub_242272D40();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    v14 = v3;
    v15 = a1;
    sub_2422725CC();
    v21 = 0;
    sub_2421ED71C(&qword_2571E1B10, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6700], MEMORY[0x24BEE6720]);
    v11 = (uint64_t)v18;
    OUTLINED_FUNCTION_115_4();
    OUTLINED_FUNCTION_97_3();
    v12 = v14;
    sub_242228670(v11, v14, &qword_2571E02C0);
    v20 = 1;
    v13 = v17;
    OUTLINED_FUNCTION_115_4();
    OUTLINED_FUNCTION_97_3();
    OUTLINED_FUNCTION_79_7();
    sub_242228670(v13, v12 + *(int *)(v9 + 20), &qword_2571E02C0);
    sub_24222663C(v12, v16, type metadata accessor for ClientData);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    sub_242226394(v12);
  }
  OUTLINED_FUNCTION_16_0();
}

void sub_242222DA4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ClientData.init(from:)(a1, a2);
}

uint64_t sub_242222DB8(_QWORD *a1)
{
  return ClientData.encode(to:)(a1);
}

uint64_t ResponseAsyncIterator.next()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
  v3[7] = OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_242222E14()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_mutable_project_boxed_opaque_existential_1(*(_QWORD *)(v0 + 48), *(_QWORD *)(*(_QWORD *)(v0 + 48) + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_242222E88;
  return sub_242272800();
}

uint64_t sub_242222E88()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_153();
  *(_QWORD *)(v1 + 72) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_242222ED4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  const void *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t (*v10)(void);

  v1 = v0[7];
  v2 = type metadata accessor for ClientData(0);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    sub_2421D3B00(v1, &qword_2571E0560);
    v3 = 0;
    v4 = 0xF000000000000000;
  }
  else
  {
    v3 = ClientData.data.getter();
    v4 = v5;
    sub_242226394(v1);
  }
  v6 = v0[4];
  v7 = v0[5];
  v0[2] = v3;
  v0[3] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1B20);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = swift_dynamicCast();
  __swift_storeEnumTagSinglePayload(v6, v9 ^ 1u, 1, v8);
  OUTLINED_FUNCTION_16();
  v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_7_2(v10);
}

uint64_t sub_242222FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2421BD05C;
  return ResponseAsyncIterator.next()(a1, a2);
}

uint64_t sub_242223010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + 24) = a4;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_2422230A8;
  return sub_242272818();
}

uint64_t sub_2422230A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_77(v3);
  if (v1)
    **(_QWORD **)(v0 + 24) = *(_QWORD *)(v0 + 16);
  return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t ResponseStream.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;
  ValueMetadata *v10;
  unint64_t v11;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v10 = &type metadata for ResponseIterator;
  v11 = sub_2422263D0();
  result = swift_allocObject();
  *(_QWORD *)&v9 = result;
  if (v5)
  {
    *(_QWORD *)(result + 16) = v5;
    *(_BYTE *)(result + 56) = 2;
    *(_QWORD *)(result + 64) = nullsub_1;
    *(_QWORD *)(result + 72) = 0;
LABEL_5:
    sub_2421BCE50(&v9, a1);
    return MEMORY[0x2426A61F8](v5);
  }
  if (v3)
  {
    *(_QWORD *)(result + 16) = v3;
    *(_QWORD *)(result + 24) = v4;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)(result + 64) = v6;
    *(_QWORD *)(result + 72) = v7;
    sub_2421C7064(v3);
    swift_retain();
    v5 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void ResponseSequence.makeAsyncIterator()(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1[2];
  if (v2)
  {
    *(_QWORD *)a1 = v2;
    *(_BYTE *)(a1 + 40) = 2;
    *(_QWORD *)(a1 + 48) = nullsub_1;
    *(_QWORD *)(a1 + 56) = 0;
  }
  else
  {
    v3 = *v1;
    if (*v1)
    {
      v4 = v1[1];
      v5 = v1[3];
      v6 = v1[4];
      *(_QWORD *)a1 = v3;
      *(_QWORD *)(a1 + 8) = v4;
      *(_BYTE *)(a1 + 40) = 0;
      *(_QWORD *)(a1 + 48) = v5;
      *(_QWORD *)(a1 + 56) = v6;
      sub_2421C7064(v3);
      swift_retain();
    }
    else
    {
      __break(1u);
    }
  }
  JUMPOUT(0x2426A61F8);
}

uint64_t sub_242223230@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  void *v2;

  ResponseStream.makeAsyncIterator()(a1);
  v2 = (void *)v1[2];
  sub_2421C6244(*v1);

  return swift_release();
}

uint64_t ResponseIterator.next()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  OUTLINED_FUNCTION_29();
  return swift_task_switch();
}

uint64_t sub_242223284()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[3];
  v3 = *(_QWORD *)(v1 + 48);
  v2 = *(_QWORD *)(v1 + 56);
  v0[4] = v2;
  v4 = swift_task_alloc();
  v0[5] = v4;
  *(_QWORD *)(v4 + 16) = v1;
  v5 = swift_task_alloc();
  v0[6] = v5;
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v2;
  swift_retain();
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
  *v6 = v0;
  v6[1] = sub_24222334C;
  return sub_242272C2C();
}

uint64_t sub_24222334C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_70_1();
  *v3 = *v2;
  *(_QWORD *)(v0 + 64) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
  }
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_19_1();
}

uint64_t sub_2422233AC()
{
  uint64_t (*v0)(void);

  swift_release();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_8(v0);
}

uint64_t sub_2422233D4()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_16();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_242223414(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[24] = a1;
  v2[25] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
  v2[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_242223470()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);

  sub_2422285FC(*(uint64_t **)(v0 + 200), v0 + 16);
  if (*(_BYTE *)(v0 + 56))
  {
    if (*(_BYTE *)(v0 + 56) == 1)
    {
      sub_2421BCE50((__int128 *)(v0 + 16), v0 + 112);
      __swift_mutable_project_boxed_opaque_existential_1(v0 + 112, *(_QWORD *)(v0 + 136));
      v1 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 256) = v1;
      *v1 = v0;
      v1[1] = sub_242223774;
      return sub_242272800();
    }
    else
    {
      swift_willThrow();
      OUTLINED_FUNCTION_72_6();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    *(_QWORD *)(v0 + 216) = *(_QWORD *)(v0 + 24);
    v3 = (_QWORD *)OUTLINED_FUNCTION_49();
    *(_QWORD *)(v0 + 224) = v3;
    v4 = OUTLINED_FUNCTION_9_1(v3);
    return v5(v4);
  }
}

uint64_t sub_242223588()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_153();
  *(_QWORD *)(v1 + 232) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2422235D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 152), v2);
  v4 = *(_QWORD *)(v2 - 8);
  v5 = OUTLINED_FUNCTION_35_1();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v4 + 16))(v5, v3, v2);
  *(_QWORD *)(v0 + 88) = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v0 + 96) = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 64));
  sub_2422728A8();
  swift_task_dealloc();
  *(_BYTE *)(v0 + 104) = 1;
  sub_24222869C(v0 + 64, v1);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 152);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v6;
  *v6 = v0;
  v6[1] = sub_2422236FC;
  return OUTLINED_FUNCTION_23_7(*(_QWORD *)(v0 + 192));
}

uint64_t sub_2422236FC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_153();
  *(_QWORD *)(v1 + 248) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_242223748()
{
  uint64_t (*v0)(void);

  swift_release();
  OUTLINED_FUNCTION_72_6();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_8(v0);
}

uint64_t sub_242223774()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_153();
  *(_QWORD *)(v1 + 264) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2422237C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v2 = v0[25];
  v1 = v0[26];
  v3 = v0[24];
  sub_242227330(v2);
  sub_242228630((uint64_t)(v0 + 14), v2);
  *(_BYTE *)(v2 + 40) = 1;
  sub_242228670(v1, v3, &qword_2571E0560);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 14));
  OUTLINED_FUNCTION_72_6();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_7_2(v4);
}

uint64_t sub_242223834()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[29];
  v2 = v0[25];
  sub_242227330(v2);
  *(_QWORD *)v2 = v1;
  *(_BYTE *)(v2 + 40) = 2;
  v3 = (_QWORD *)swift_task_alloc();
  v0[30] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_2422236FC;
  return OUTLINED_FUNCTION_23_7(v0[24]);
}

uint64_t sub_242223898()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_72_6();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2422238C8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 112);
  OUTLINED_FUNCTION_72_6();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2422238F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_9_1(v1);
  return OUTLINED_FUNCTION_23_7(v2);
}

uint64_t sub_242223938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a4;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_2571E0578 + dword_2571E0578);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_2422239BC;
  return v10(a1, a2, a3);
}

uint64_t sub_2422239BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_77(v3);
  if (v1)
    **(_QWORD **)(v0 + 16) = v1;
  return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v2 + 8));
}

void default argument 1 of ResponseSequence.init(setup:onCancel:)()
{
  OUTLINED_FUNCTION_65_1();
}

uint64_t ResponseSequence.init(setup:onCancel:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = 0;
  a5[3] = a3;
  a5[4] = a4;
  return result;
}

uint64_t sub_242223A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ClientData(uint64_t a1)
{
  return sub_2421BBF24(a1, qword_2543AA758);
}

void sub_242223A7C(uint64_t a1@<X8>)
{
  ResponseSequence.makeAsyncIterator()(a1);
}

uint64_t sub_242223A8C()
{
  uint64_t *v0;
  void *v1;

  v1 = (void *)v0[2];
  sub_2421C6244(*v0);

  return swift_release();
}

#error "242223B0C: call analysis failed (funcsize=49)"

void OneShotRequest.__allocating_init(session:loggingIdentifier:clientData:requiredAssetIDs:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_357();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for ClientData(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_17_6();
  OUTLINED_FUNCTION_61_5(v3);
  OUTLINED_FUNCTION_74_3();
  OUTLINED_FUNCTION_76_4();
  if (qword_2543A9CF8 != -1)
    swift_once();
  OUTLINED_FUNCTION_96_6();
  OUTLINED_FUNCTION_95_5();
  type metadata accessor for OneShotRequest(0);
  OUTLINED_FUNCTION_27_3();
  OUTLINED_FUNCTION_40_4();
  OUTLINED_FUNCTION_21_5(v4, &OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_internalClientData, v5, v6, &OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_requiredAssetIDs);
  OUTLINED_FUNCTION_73_1();
}

#error "242223D18: call analysis failed (funcsize=48)"

#error "242223EA0: call analysis failed (funcsize=67)"

uint64_t sub_242223EC8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  v2[4] = OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_242223F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 40) = v2;
  v3 = *(_QWORD *)(v2 + 56);
  if (*(_QWORD *)(v3 + 16) == 1)
  {
    v4 = *(_QWORD *)(v0 + 32);
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_serviceClient + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_serviceClient), *(_QWORD *)(v1 + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_serviceClient + 24));
    *(_QWORD *)(v0 + 48) = *(_QWORD *)(v3 + 40);
    v6 = v1 + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_internalUUID;
    v7 = OUTLINED_FUNCTION_21();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, v6, v7);
    *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + 32);
    v10 = **(int **)(v5 + 48) + *(_QWORD *)(v5 + 48);
    sub_242272644();
    swift_retain();
    sub_242272644();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v8;
    *v8 = v0;
    v8[1] = sub_2422240BC;
    __asm { BR              X8 }
  }
  type metadata accessor for ModelManagerError();
  sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
  OUTLINED_FUNCTION_66_6();
  OUTLINED_FUNCTION_81_7();
  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2422240BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 32);
  v3 = *v1;
  *(_QWORD *)(v3 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_2421D3B00(v2, &qword_2543A7848);
  if (v0)
  {
    OUTLINED_FUNCTION_29();
    return OUTLINED_FUNCTION_19_1();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v3 + 8));
  }
}

uint64_t sub_24222416C()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_242224198()
{
  return sub_2422249C8();
}

uint64_t sub_2422241A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_21();
  v0 = OUTLINED_FUNCTION_15_5();
  return OUTLINED_FUNCTION_55(v0, v1, v2, v3);
}

uint64_t OneShotRequest.internalSession.getter()
{
  return swift_retain();
}

uint64_t OneShotRequest.internalUUID.getter()
{
  return sub_2422249C8();
}

uint64_t OneShotRequest.requiredAssetIDs.getter()
{
  return OUTLINED_FUNCTION_65_7();
}

void _s20ModelManagerServices14OneShotRequestC25internalLoggingIdentifierSSvg_0()
{
  sub_242272644();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

void _s20ModelManagerServices14OneShotRequestC18internalClientDataAA0hI0Vvg_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_24222663C(v1 + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_internalClientData, a1, type metadata accessor for ClientData);
}

uint64_t sub_242224240()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  *(_QWORD *)(v1 + 24) = OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_242224280()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_serviceClient), *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_serviceClient + 24));
  v1 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_56_5(v1);
  OUTLINED_FUNCTION_24_7();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  v3 = OUTLINED_FUNCTION_28_8(v2, (uint64_t)sub_2422242F8);
  return OUTLINED_FUNCTION_30_3(v3, v4, v5, v6, v7);
}

uint64_t sub_2422242F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_22_5();
  OUTLINED_FUNCTION_102_5(v2, &qword_2543A7848);
  OUTLINED_FUNCTION_28();
  if (v0)
  {
    OUTLINED_FUNCTION_29();
    return OUTLINED_FUNCTION_19_1();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_242224360()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t OneShotRequest.deinit()
{
  return sub_242224B6C(&OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_internalClientData, &OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_internalUUID, (uint64_t)&OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_requiredAssetIDs, &OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_serviceClient);
}

uint64_t OneShotRequest.__deallocating_deinit()
{
  return sub_242224C08((void (*)(void))OneShotRequest.deinit);
}

uint64_t sub_2422243BC()
{
  return OneShotRequest.internalUUID.getter();
}

#error "242224434: call analysis failed (funcsize=49)"

void StreamingRequest.__allocating_init(session:loggingIdentifier:clientData:requiredAssetIDs:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_357();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for ClientData(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_17_6();
  OUTLINED_FUNCTION_61_5(v3);
  OUTLINED_FUNCTION_74_3();
  OUTLINED_FUNCTION_76_4();
  if (qword_2543A9CF8 != -1)
    swift_once();
  OUTLINED_FUNCTION_96_6();
  OUTLINED_FUNCTION_95_5();
  type metadata accessor for StreamingRequest(0);
  OUTLINED_FUNCTION_27_3();
  OUTLINED_FUNCTION_40_4();
  OUTLINED_FUNCTION_21_5(v4, &OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_internalClientData, v5, v6, &OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_requiredAssetIDs);
  OUTLINED_FUNCTION_73_1();
}

#error "242224640: call analysis failed (funcsize=48)"

#error "2422247C8: call analysis failed (funcsize=67)"

void sub_2422247F0()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(uint64_t, char *);
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v24;

  OUTLINED_FUNCTION_106();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (char *)v0 + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_internalUUID;
  OUTLINED_FUNCTION_21();
  v7 = OUTLINED_FUNCTION_116_4();
  v8(v7, v6);
  v9 = v0[2];
  v10 = *(_QWORD **)(v9 + 56);
  if (v10[2] == 1)
  {
    v11 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_serviceClient + 24);
    v12 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_serviceClient + 32);
    v13 = __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v0 + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_serviceClient), v11);
    v22 = (char *)v0 + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_internalClientData;
    v14 = v10[4];
    v15 = v10[5];
    v16 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_requiredAssetIDs);
    v17 = v0[4];
    v21 = v0[3];
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 64);
    v24 = v13;
    swift_retain();
    sub_242272644();
    sub_242272644();
    v23(v22, v14, v15, v16, v5, v9, v21, v17, v11, v12);
    swift_release();
    swift_bridgeObjectRelease();
    v18 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_73_5(v18, &qword_2543A7848);
  }
  else
  {
    type metadata accessor for ModelManagerError();
    sub_2421ED71C(&qword_2543A99A0, (uint64_t (*)(uint64_t))type metadata accessor for ModelManagerError, (uint64_t)&protocol conformance descriptor for ModelManagerError);
    v19 = OUTLINED_FUNCTION_66_6();
    v20 = OUTLINED_FUNCTION_81_7();
    OUTLINED_FUNCTION_73_5(v20, &qword_2543A7848);
    *v2 = 0;
    v2[1] = 0;
    v2[2] = v19;
    v2[3] = nullsub_1;
    v2[4] = 0;
  }
  OUTLINED_FUNCTION_73_1();
}

uint64_t sub_242224984()
{
  return sub_2422249C8();
}

uint64_t sub_242224990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_21();
  v0 = OUTLINED_FUNCTION_15_5();
  return OUTLINED_FUNCTION_55(v0, v1, v2, v3);
}

uint64_t StreamingRequest.internalUUID.getter()
{
  return sub_2422249C8();
}

uint64_t sub_2422249C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_21();
  v0 = OUTLINED_FUNCTION_15_5();
  return OUTLINED_FUNCTION_55(v0, v1, v2, v3);
}

uint64_t StreamingRequest.requiredAssetIDs.getter()
{
  return OUTLINED_FUNCTION_65_7();
}

void _s20ModelManagerServices16StreamingRequestC18internalClientDataAA0gH0Vvg_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_24222663C(v1 + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_internalClientData, a1, type metadata accessor for ClientData);
}

uint64_t sub_242224A28()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  *(_QWORD *)(v1 + 24) = OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_242224A68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_serviceClient), *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_serviceClient + 24));
  v1 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_56_5(v1);
  OUTLINED_FUNCTION_24_7();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  v3 = OUTLINED_FUNCTION_28_8(v2, (uint64_t)sub_242224AE0);
  return OUTLINED_FUNCTION_30_3(v3, v4, v5, v6, v7);
}

uint64_t sub_242224AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_22_5();
  OUTLINED_FUNCTION_102_5(v2, &qword_2543A7848);
  OUTLINED_FUNCTION_28();
  if (v0)
  {
    OUTLINED_FUNCTION_29();
    return OUTLINED_FUNCTION_19_1();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t StreamingRequest.deinit()
{
  return sub_242224B6C(&OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_internalClientData, &OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_internalUUID, (uint64_t)&OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_requiredAssetIDs, &OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_serviceClient);
}

uint64_t sub_242224B6C(_QWORD *a1, _QWORD *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  swift_bridgeObjectRelease();
  sub_242226394(v4 + *a1);
  v8 = v4 + *a2;
  v9 = OUTLINED_FUNCTION_21();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v4 + *a4);
  return v4;
}

uint64_t StreamingRequest.__deallocating_deinit()
{
  return sub_242224C08((void (*)(void))StreamingRequest.deinit);
}

uint64_t sub_242224C08(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t sub_242224C2C()
{
  return StreamingRequest.internalUUID.getter();
}

uint64_t Request.init(session:loggingIdentifier:clientData:requiredAssetIDs:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;

  OUTLINED_FUNCTION_64_6();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  OUTLINED_FUNCTION_53_3();
  _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
  if (qword_2543A9CF8 != -1)
    swift_once();
  v14 = qword_2543A9CE0;
  v13[3] = OUTLINED_FUNCTION_107_3();
  v13[4] = (uint64_t)&protocol witness table for ModelServiceClient;
  *v13 = v14;
  v13[5] = v11;
  v13[6] = v9;
  v13[7] = v7;
  v13[8] = v5;
  v13[9] = v3;
  v13[10] = v1;
  return OUTLINED_FUNCTION_31_3();
}

uint64_t Request.init(session:loggingIdentifier:clientData:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_64_6();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  OUTLINED_FUNCTION_53_3();
  _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
  if (qword_2543A9CF8 != -1)
    swift_once();
  v12 = qword_2543A9CE0;
  v11[3] = OUTLINED_FUNCTION_107_3();
  v11[4] = (uint64_t)&protocol witness table for ModelServiceClient;
  *v11 = v12;
  v11[5] = v9;
  v11[6] = v7;
  v11[7] = v5;
  v11[8] = v3;
  v11[9] = v1;
  v11[10] = 0;
  return OUTLINED_FUNCTION_31_3();
}

uint64_t Request.init(session:loggingIdentifier:clientData:requiredAssetTypes:)()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_82_7();
  return Request.init(session:loggingIdentifier:clientData:)();
}

uint64_t Request.session.getter()
{
  return swift_retain();
}

void Request.loggingIdentifier.getter()
{
  sub_242272644();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

void Request.clientData.getter()
{
  uint64_t v0;
  unint64_t v1;

  v0 = OUTLINED_FUNCTION_56();
  sub_24222622C(v0, v1);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

uint64_t Request.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_53_3();
  OUTLINED_FUNCTION_21();
  v0 = OUTLINED_FUNCTION_15_5();
  return OUTLINED_FUNCTION_55(v0, v1, v2, v3);
}

__n128 Request.executeStream()()
{
  char *v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  _OWORD *v25;
  __n128 result;
  uint64_t v27;
  _OWORD *v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  _BYTE v32[24];
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_106();
  v28 = v2;
  v3 = OUTLINED_FUNCTION_21();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_86_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ClientData(0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_87_4();
  sub_242228630((uint64_t)v0, (uint64_t)v32);
  v9 = *((_QWORD *)v0 + 5);
  v27 = *((_QWORD *)v0 + 6);
  v10 = *((_QWORD *)v0 + 7);
  v11 = *((_QWORD *)v0 + 8);
  v12 = *((_QWORD *)v0 + 9);
  v13 = OUTLINED_FUNCTION_17_6();
  OUTLINED_FUNCTION_129((uint64_t)v7, v14, v15, v13);
  swift_retain();
  sub_242272644();
  sub_24222622C(v11, v12);
  ClientData.init(data:xpcData:)(v12, (uint64_t)v7, v1);
  v16 = *((_QWORD *)v0 + 10);
  OUTLINED_FUNCTION_53_3();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v0, &v0[v17], v3);
  type metadata accessor for StreamingRequest(0);
  v18 = OUTLINED_FUNCTION_27_3();
  v20 = v33;
  v19 = v34;
  v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_19_5();
  (*(void (**)(uint64_t))(v22 + 16))(v3);
  sub_2422265A0(v3, v9, v27, v10, v1, v16, (uint64_t)v0, v18, v20, v19, &OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_serviceClient, &OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_internalClientData, &OBJC_IVAR____TtC20ModelManagerServices16StreamingRequest_requiredAssetIDs);
  sub_242272644();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
  sub_2422247F0();
  swift_release();
  v23 = v30;
  v24 = v31;
  v25 = v28;
  *v28 = v29;
  *((_QWORD *)v25 + 2) = v23;
  *(_OWORD *)((char *)v25 + 24) = v24;
  OUTLINED_FUNCTION_73_1();
  return result;
}

uint64_t Request.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[7] = v0;
  v2 = OUTLINED_FUNCTION_21();
  v1[8] = v2;
  v1[9] = *(_QWORD *)(v2 - 8);
  v1[10] = OUTLINED_FUNCTION_35_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
  v1[11] = OUTLINED_FUNCTION_127_1();
  type metadata accessor for ClientData(0);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2422250D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0[13];
  v2 = v0[10];
  v3 = v0[11];
  v21 = v0[9];
  v4 = (char *)v0[7];
  v22 = v0[8];
  v23 = v1;
  sub_242228630((uint64_t)v4, (uint64_t)(v0 + 2));
  v25 = *((_QWORD *)v4 + 5);
  v26 = *((_QWORD *)v4 + 6);
  v5 = *((_QWORD *)v4 + 8);
  v24 = *((_QWORD *)v4 + 7);
  v6 = *((_QWORD *)v4 + 9);
  v7 = OUTLINED_FUNCTION_17_6();
  OUTLINED_FUNCTION_129(v3, v8, v9, v7);
  OUTLINED_FUNCTION_96_6();
  sub_242272644();
  sub_24222622C(v5, v6);
  ClientData.init(data:xpcData:)(v6, v3, v1);
  v10 = *((_QWORD *)v4 + 10);
  OUTLINED_FUNCTION_53_3();
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v2, &v4[v11], v22);
  type metadata accessor for OneShotRequest(0);
  v12 = OUTLINED_FUNCTION_27_3();
  v14 = v0[5];
  v13 = v0[6];
  v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 2), v14);
  v16 = *(_QWORD *)(v14 - 8);
  v17 = OUTLINED_FUNCTION_35_1();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v15, v14);
  sub_2422265A0(v17, v25, v26, v24, v23, v10, v2, v12, v14, v13, &OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_serviceClient, &OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_internalClientData, &OBJC_IVAR____TtC20ModelManagerServices14OneShotRequest_requiredAssetIDs);
  v0[14] = v18;
  sub_242272644();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  swift_task_dealloc();
  v19 = (_QWORD *)swift_task_alloc();
  v0[15] = v19;
  *v19 = v0;
  v19[1] = sub_24222528C;
  return sub_242223EC8(v0[12]);
}

uint64_t sub_24222528C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_153();
  *(_QWORD *)(v1 + 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2422252D8()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  unint64_t v3;
  unint64_t v4;
  const void *v5;
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = ClientData.data.getter();
  v4 = v3;
  sub_242226394(v1);
  OUTLINED_FUNCTION_28();
  if (v4 >> 60 == 15)
    v5 = 0;
  else
    v5 = v2;
  if (v4 >> 60 == 15)
    v6 = 0xC000000000000000;
  else
    v6 = v4;
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(const void *, unint64_t))(v0 + 8))(v5, v6);
}

uint64_t sub_242225378()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_16();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall Request.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = OUTLINED_FUNCTION_106_5();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_242272848();
  OUTLINED_FUNCTION_129((uint64_t)v6, v8, v9, v7);
  sub_24222663C(v0, (uint64_t)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Request);
  v10 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  sub_2422285DC((uint64_t)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, type metadata accessor for Request);
  sub_2421E7DE0((uint64_t)v6, (uint64_t)&unk_2571E1B78, v11);
  swift_release();
}

uint64_t sub_2422254E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  *(_QWORD *)(v4 + 24) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24222553C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_2543A9CF8 != -1)
    swift_once();
  type metadata accessor for Request(0);
  v1 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_57_5(v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  v3 = OUTLINED_FUNCTION_75_5(v2, (uint64_t)sub_2422255CC);
  return OUTLINED_FUNCTION_37_3(v3, v4);
}

uint64_t sub_2422255CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_73_5(v2, &qword_2543A7848);
  if (v0)
  {
    OUTLINED_FUNCTION_29();
    return OUTLINED_FUNCTION_4_5();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_1_1(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t Request.cancel_async()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  *(_QWORD *)(v1 + 24) = OUTLINED_FUNCTION_127_1();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_242225660()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_2543A9CF8 != -1)
    swift_once();
  type metadata accessor for Request(0);
  v1 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_57_5(v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  v3 = OUTLINED_FUNCTION_75_5(v2, (uint64_t)sub_2422256F0);
  return OUTLINED_FUNCTION_37_3(v3, v4);
}

uint64_t sub_2422256F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_29_6();
  OUTLINED_FUNCTION_73_5(v2, &qword_2543A7848);
  if (v0)
  {
    OUTLINED_FUNCTION_29();
    return OUTLINED_FUNCTION_4_5();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_1_1(*(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_242225744()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t RequestCancellationReason.description.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0x43207963696C6F50;
}

BOOL static RequestCancellationReason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t RequestCancellationReason.hash(into:)()
{
  return sub_242272CD4();
}

uint64_t sub_24222581C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  char v7;

  v3 = a1 == 0x68437963696C6F70 && a2 == 0xEC00000065676E61;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6944746E65696C63 && a2 == 0xEF6C61776F766173;
    if (v6 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x8000000242284690)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_242272C20();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_242225980(char a1)
{
  if (!a1)
    return 0x68437963696C6F70;
  if (a1 == 1)
    return 0x6944746E65696C63;
  return 0xD000000000000011;
}

uint64_t sub_2422259F0()
{
  sub_2422267EC();
  return sub_242272D70();
}

uint64_t sub_242225A18()
{
  sub_2422267EC();
  return sub_242272D7C();
}

uint64_t sub_242225A40()
{
  sub_2422267B0();
  return sub_242272D70();
}

uint64_t sub_242225A68()
{
  sub_2422267B0();
  return sub_242272D7C();
}

uint64_t sub_242225A94()
{
  char *v0;

  return sub_242225980(*v0);
}

uint64_t sub_242225A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24222581C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242225AC0()
{
  sub_242226774();
  return sub_242272D70();
}

uint64_t sub_242225AE8()
{
  sub_242226774();
  return sub_242272D7C();
}

uint64_t sub_242225B10()
{
  sub_242226828();
  return sub_242272D70();
}

uint64_t sub_242225B38()
{
  sub_242226828();
  return sub_242272D7C();
}

void RequestCancellationReason.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1B88);
  v22 = *(_QWORD *)(v5 - 8);
  v23 = v5;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_0();
  v21 = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1B90);
  v19 = *(_QWORD *)(v8 - 8);
  v20 = v8;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_105();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1B98);
  v10 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571E1BA0) - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_357();
  v14 = *v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242226774();
  sub_242272D64();
  if (v14)
  {
    if (v14 == 1)
    {
      OUTLINED_FUNCTION_108_3();
      OUTLINED_FUNCTION_48_7();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v2, v20);
    }
    else
    {
      OUTLINED_FUNCTION_98_3();
      v15 = v21;
      OUTLINED_FUNCTION_48_7();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v15, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_242226828();
    OUTLINED_FUNCTION_48_7();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  }
  v16 = OUTLINED_FUNCTION_82_7();
  v17(v16);
  OUTLINED_FUNCTION_16_0();
}

void RequestCancellationReason.hashValue.getter()
{
  sub_242272CBC();
  OUTLINED_FUNCTION_156();
  sub_242272D04();
  OUTLINED_FUNCTION_48();
}

void RequestCancellationReason.init(from:)(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1BC8);
  v26 = *(_QWORD *)(v29 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_0();
  v32 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1BD0);
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_0();
  v31 = v9;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1BD8);
  v10 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_105();
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_2571E1BE0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_67();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242226774();
  sub_242272D40();
  if (v33)
    goto LABEL_10;
  v34 = (uint64_t)a1;
  v13 = v2;
  v14 = sub_242272AE8();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15
    || (v16 = *(unsigned __int8 *)(v14 + 32),
        sub_2421C4040(1, v15, v14, v14 + 32, 0, (2 * v15) | 1),
        v18 = v17,
        v20 = v19,
        swift_bridgeObjectRelease(),
        v18 != v20 >> 1))
  {
    v22 = sub_2422729BC();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFE50);
    *v24 = &type metadata for RequestCancellationReason;
    sub_242272A58();
    sub_2422729B0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    swift_willThrow();
    OUTLINED_FUNCTION_30_0();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v11);
    a1 = (_QWORD *)v34;
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    goto LABEL_11;
  }
  if (v16)
  {
    v35 = v16;
    if (v16 == 1)
    {
      OUTLINED_FUNCTION_108_3();
      OUTLINED_FUNCTION_41_1();
      v21 = a2;
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v31, v28);
    }
    else
    {
      OUTLINED_FUNCTION_98_3();
      OUTLINED_FUNCTION_41_1();
      v21 = a2;
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v32, v29);
    }
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_69_7(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  }
  else
  {
    sub_242226828();
    OUTLINED_FUNCTION_41_1();
    v35 = 0;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v3, v25);
    OUTLINED_FUNCTION_30_0();
    OUTLINED_FUNCTION_69_7(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
    v21 = a2;
  }
  *v21 = v35;
  __swift_destroy_boxed_opaque_existential_1Tm(v34);
LABEL_11:
  OUTLINED_FUNCTION_16_0();
}

void sub_24222612C()
{
  sub_242272CBC();
  OUTLINED_FUNCTION_156();
  sub_242272D04();
  OUTLINED_FUNCTION_48();
}

void sub_24222615C(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  RequestCancellationReason.init(from:)(a1, a2);
}

void sub_242226170(_QWORD *a1)
{
  RequestCancellationReason.encode(to:)(a1);
}

uint64_t sub_242226188(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char *v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  result = sub_242272254();
  v5 = (char *)result;
  if (result)
  {
    result = sub_24227226C();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - result;
  }
  v6 = __OFSUB__(a2, a1);
  v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  v8 = sub_242272260();
  if (v8 >= v7)
    v9 = v7;
  else
    v9 = v8;
  v10 = &v5[v9];
  if (v5)
    v11 = (uint64_t)v10;
  else
    v11 = 0;
  return sub_2422221E0(v5, v11);
}

uint64_t sub_242226218(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_24222622C(a1, a2);
  return a1;
}

uint64_t sub_24222622C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_242226270(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_2421CE434(a1, a2);
  return a1;
}

uint64_t sub_242226284(uint64_t a1, uint64_t a2, size_t length)
{
  uint64_t bytes;
  __int16 v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  bytes = a1;
  v5 = a2;
  v6 = BYTE2(a2);
  v7 = BYTE3(a2);
  v8 = BYTE4(a2);
  v9 = BYTE5(a2);
  xpc_data_create(&bytes, length);
  return sub_2422725C0();
}

unint64_t sub_242226358()
{
  unint64_t result;

  result = qword_2571E1AF8;
  if (!qword_2571E1AF8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227C22C, &type metadata for ClientData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1AF8);
  }
  return result;
}

uint64_t sub_242226394(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ClientData(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2422263D0()
{
  unint64_t result;

  result = qword_2571E1B28;
  if (!qword_2571E1B28)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ResponseIterator, &type metadata for ResponseIterator);
    atomic_store(result, (unint64_t *)&qword_2571E1B28);
  }
  return result;
}

uint64_t sub_24222640C()
{
  uint64_t v0;
  id *v1;
  int v2;

  v1 = (id *)(v0 + 16);
  v2 = *(unsigned __int8 *)(v0 + 56);
  if (v2 == 2)
  {

  }
  else if (v2 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v1);
  }
  else if (!*(_BYTE *)(v0 + 56))
  {
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242226468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)OUTLINED_FUNCTION_92(v2);
  v4 = OUTLINED_FUNCTION_9_1(v3);
  return sub_242223414(v4, v1);
}

uint64_t sub_2422264B4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t type metadata accessor for OneShotRequest(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2543A7830);
}

uint64_t type metadata accessor for StreamingRequest(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2571E1D20);
}

void sub_2422264FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9, _QWORD *a10, _QWORD *a11)
{
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_50_5();
  v18 = (_QWORD *)(v17 + *a9);
  v18[3] = OUTLINED_FUNCTION_107_3();
  v18[4] = &protocol witness table for ModelServiceClient;
  *v18 = v16;
  v11[2] = v15;
  v11[3] = v14;
  v11[4] = v13;
  sub_2422285DC(v12, (uint64_t)v11 + *a10, type metadata accessor for ClientData);
  *(_QWORD *)((char *)v11 + *a11) = v27;
  v19 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_54_6(v19, v20, v21, v22, v23, v24, v25, v26, v27, v28);
  OUTLINED_FUNCTION_47_6();
}

uint64_t type metadata accessor for Request(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2543A6EB8);
}

void sub_2422265A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11, _QWORD *a12, _QWORD *a13)
{
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_50_5();
  v20 = (uint64_t *)(v19 + *a11);
  v20[3] = a9;
  v20[4] = a10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a9 - 8) + 32))(boxed_opaque_existential_1, v18, a9);
  v13[2] = v17;
  v13[3] = v16;
  v13[4] = v15;
  sub_2422285DC(v14, (uint64_t)v13 + *a12, type metadata accessor for ClientData);
  *(_QWORD *)((char *)v13 + *a13) = v30;
  v22 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_54_6(v22, v23, v24, v25, v26, v27, v28, v29, v30, v31);
  OUTLINED_FUNCTION_47_6();
}

void sub_24222663C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_115(a1, a2, a3);
  v4 = OUTLINED_FUNCTION_116_4();
  v5(v4, v3);
  OUTLINED_FUNCTION_34();
}

uint64_t sub_242226664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_106_5() - 8) + 80);
  v2 = (v1 + 32) & ~v1;
  swift_unknownObjectRelease();
  v3 = v0 + v2;
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_2421CE434(*(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72));
  swift_bridgeObjectRelease();
  v4 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_3_3(v4);
  return swift_deallocObject();
}

uint64_t sub_242226700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_106_5() - 8) + 80);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = v0 + ((v1 + 32) & ~v1);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)OUTLINED_FUNCTION_92(v5);
  v7 = OUTLINED_FUNCTION_9_1(v6);
  return sub_2422254E0(v7, v2, v3, v4);
}

unint64_t sub_242226774()
{
  unint64_t result;

  result = qword_2571E1BA8;
  if (!qword_2571E1BA8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227C1DC, &type metadata for RequestCancellationReason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1BA8);
  }
  return result;
}

unint64_t sub_2422267B0()
{
  unint64_t result;

  result = qword_2571E1BB0;
  if (!qword_2571E1BB0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227C18C, &type metadata for RequestCancellationReason.ClientTerminationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1BB0);
  }
  return result;
}

unint64_t sub_2422267EC()
{
  unint64_t result;

  result = qword_2571E1BB8;
  if (!qword_2571E1BB8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227C13C, &type metadata for RequestCancellationReason.ClientDisavowalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1BB8);
  }
  return result;
}

unint64_t sub_242226828()
{
  unint64_t result;

  result = qword_2571E1BC0;
  if (!qword_2571E1BC0)
  {
    result = MEMORY[0x2426A62C4](&unk_24227C0EC, &type metadata for RequestCancellationReason.PolicyChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1BC0);
  }
  return result;
}

void sub_242226864()
{
  JUMPOUT(0x2426A62C4);
}

unint64_t sub_24222687C()
{
  unint64_t result;

  result = qword_2571E1C08[0];
  if (!qword_2571E1C08[0])
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for RequestCancellationReason, &type metadata for RequestCancellationReason);
    atomic_store(result, qword_2571E1C08);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2422725CC();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v11, v12, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for ClientData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = sub_2422725CC();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  result = __swift_getEnumTagSinglePayload(v5, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v5, v4);
  return result;
}

char *initializeWithCopy for ClientData(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = sub_2422725CC();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for ClientData(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_2422725CC();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    v16 = *(_QWORD *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
  return a1;
}

char *initializeWithTake for ClientData(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = sub_2422725CC();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v9, v10, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for ClientData(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_2422725CC();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v11], 1, v6);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v6);
  if (!v14)
  {
    v16 = *(_QWORD *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v12, v13, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_242227008(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ClientData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24222704C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

void sub_242227088()
{
  unint64_t v0;

  sub_2422270F0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2422270F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2543AA810[0])
  {
    sub_2422725CC();
    v0 = sub_242272938();
    if (!v1)
      atomic_store(v0, qword_2543AA810);
  }
}

uint64_t type metadata accessor for ResponseAsyncIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ResponseAsyncIterator);
}

uint64_t type metadata accessor for ResponseStream(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ResponseStream);
}

uint64_t destroy for ResponseIterator(uint64_t a1)
{
  int v1;

  v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 == 2)
  {

  }
  else if (v1 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  else if (!*(_BYTE *)(a1 + 40))
  {
    swift_release();
  }
  return swift_release();
}

uint64_t initializeWithCopy for ResponseIterator(uint64_t a1, uint64_t *a2)
{
  int v4;
  __int128 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *((unsigned __int8 *)a2 + 40);
  if (v4 == 2)
  {
    v7 = *a2;
    MEMORY[0x2426A61F8](*a2);
    *(_QWORD *)a1 = v7;
    v6 = 2;
  }
  else
  {
    if (v4 != 1)
    {
      v8 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v8;
      *(_BYTE *)(a1 + 40) = 0;
      swift_retain();
      goto LABEL_7;
    }
    v5 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t *))(v5 - 8))(a1, a2);
    v6 = 1;
  }
  *(_BYTE *)(a1 + 40) = v6;
LABEL_7:
  v9 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v9;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ResponseIterator(uint64_t a1, uint64_t *a2)
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((uint64_t *)a1 != a2)
  {
    sub_242227330(a1);
    v4 = *((unsigned __int8 *)a2 + 40);
    if (v4 == 2)
    {
      v7 = *a2;
      MEMORY[0x2426A61F8](*a2);
      *(_QWORD *)a1 = v7;
      v6 = 2;
    }
    else
    {
      if (v4 != 1)
      {
        v8 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v8;
        *(_BYTE *)(a1 + 40) = 0;
        swift_retain();
        goto LABEL_8;
      }
      v5 = a2[3];
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = a2[4];
      (**(void (***)(uint64_t, uint64_t *))(v5 - 8))(a1, a2);
      v6 = 1;
    }
    *(_BYTE *)(a1 + 40) = v6;
  }
LABEL_8:
  v9 = a2[7];
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_242227330(uint64_t a1)
{
  sub_242227DA4(a1);
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_OWORD *assignWithTake for ResponseIterator(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  if (a1 != a2)
  {
    sub_242227330((uint64_t)a1);
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  }
  a1[3] = a2[3];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseIterator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseIterator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ResponseIterator()
{
  OUTLINED_FUNCTION_65_1();
}

uint64_t _s20ModelManagerServices16ResponseSequenceVwxx_0(uint64_t a1)
{
  if (*(_QWORD *)a1)
    OUTLINED_FUNCTION_101_5();

  return swift_release();
}

void _s20ModelManagerServices16ResponseSequenceVwcp_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*a2)
    OUTLINED_FUNCTION_100_4(a2[1], *a2);
  else
    *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = a2[2];
  MEMORY[0x2426A61F8](v4);
  v6 = a2[3];
  v5 = a2[4];
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v5;
  swift_retain();
  OUTLINED_FUNCTION_14();
}

void _s20ModelManagerServices16ResponseSequenceVwca_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_117_3();
  if (!v3)
  {
    if (v2)
    {
      OUTLINED_FUNCTION_100_4(*(_QWORD *)(v1 + 8), v2);
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v0 = *(_OWORD *)v1;
    goto LABEL_8;
  }
  if (!v2)
  {
    OUTLINED_FUNCTION_101_5();
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_100_4(*(_QWORD *)(v1 + 8), v2);
  swift_release();
LABEL_8:
  v4 = *(void **)(v0 + 16);
  v5 = *(_QWORD *)(v1 + 16);
  MEMORY[0x2426A61F8](v5);
  *(_QWORD *)(v0 + 16) = v5;

  v6 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 32) = v6;
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_14();
}

void _s20ModelManagerServices16ResponseSequenceVwta_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_117_3();
  if (!v3)
  {
    if (v2)
    {
      v5 = *(_QWORD *)(v1 + 8);
      *(_QWORD *)v0 = v2;
      *(_QWORD *)(v0 + 8) = v5;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)v0 = *(_OWORD *)v1;
    goto LABEL_8;
  }
  if (!v2)
  {
    OUTLINED_FUNCTION_101_5();
    goto LABEL_7;
  }
  v4 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = v2;
  *(_QWORD *)(v0 + 8) = v4;
  swift_release();
LABEL_8:

  v6 = *(_QWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 32) = v6;
  swift_release();
  OUTLINED_FUNCTION_34();
}

void type metadata accessor for ResponseSequence()
{
  OUTLINED_FUNCTION_65_1();
}

uint64_t sub_242227600()
{
  return type metadata accessor for OneShotRequest(0);
}

uint64_t method lookup function for OneShotRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OneShotRequest.execute()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v0 + 128) + *(_QWORD *)(*(_QWORD *)v0 + 128));
  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_92(v1);
  v3 = OUTLINED_FUNCTION_9_1(v2);
  return v5(v3);
}

uint64_t dispatch thunk of OneShotRequest.uuid.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of OneShotRequest.id.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of OneShotRequest.session.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of OneShotRequest.loggingIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of OneShotRequest.clientData.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of OneShotRequest.cancel_async()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421B90A0;
  return OUTLINED_FUNCTION_8(v3);
}

uint64_t sub_2422276F0()
{
  return type metadata accessor for StreamingRequest(0);
}

uint64_t sub_2422276F8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ClientData(319);
  if (v1 <= 0x3F)
  {
    result = sub_24227238C();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for StreamingRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StreamingRequest.execute()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of StreamingRequest.cancel_async()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421BD05C;
  return OUTLINED_FUNCTION_8(v3);
}

_QWORD *initializeBufferWithCopyOfBuffer for Request(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = a2[6];
    v4[5] = a2[5];
    v4[6] = v8;
    v9 = a2[8];
    v4[7] = a2[7];
    v10 = a2[9];
    swift_retain();
    sub_242272644();
    sub_24222622C(v9, v10);
    v4[8] = v9;
    v4[9] = v10;
    v4[10] = a2[10];
    v11 = *(int *)(a3 + 36);
    v12 = (char *)v4 + v11;
    v13 = (uint64_t)a2 + v11;
    v14 = sub_24227238C();
    v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    sub_242272644();
    v15(v12, v13, v14);
  }
  return v4;
}

uint64_t destroy for Request(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  swift_release();
  swift_bridgeObjectRelease();
  sub_2421CE434(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_24227238C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 72);
  swift_retain();
  sub_242272644();
  sub_24222622C(v8, v9);
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v10 = *(int *)(a3 + 36);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_24227238C();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  sub_242272644();
  v14(v11, v12, v13);
  return a1;
}

uint64_t *assignWithCopy for Request(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_242272644();
  swift_bridgeObjectRelease();
  v6 = a2[8];
  v7 = a2[9];
  sub_24222622C(v6, v7);
  v8 = a1[8];
  v9 = a1[9];
  a1[8] = v6;
  a1[9] = v7;
  sub_2421CE434(v8, v9);
  a1[10] = a2[10];
  sub_242272644();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 36);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_24227238C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  v7 = *(int *)(a3 + 36);
  v8 = a2 + v7;
  v9 = a1 + v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v10 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, v8, v10);
  return a1;
}

uint64_t assignWithTake for Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_release();
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a1 + 64);
  v10 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  sub_2421CE434(v9, v10);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 36);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for Request()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_242227C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_21();
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for Request()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_242227C94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
    OUTLINED_FUNCTION_14();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_21();
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 36), a2, a2, v7);
  }
}

uint64_t sub_242227CF4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24227238C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for RequestCancellationReason()
{
  OUTLINED_FUNCTION_65_1();
}

void sub_242227DA4(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 3)
    v1 = *(_DWORD *)a1 + 3;
  if (v1 == 2)
  {

  }
  else if (v1 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_242227DDC(uint64_t a1, uint64_t *a2)
{
  unsigned int v3;
  __int128 v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *((unsigned __int8 *)a2 + 40);
  if (v3 >= 3)
    v3 = *(_DWORD *)a2 + 3;
  if (v3 == 2)
  {
    v6 = *a2;
    MEMORY[0x2426A61F8](*a2);
    *(_QWORD *)a1 = v6;
    v5 = 2;
  }
  else
  {
    if (v3 != 1)
    {
      v7 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v7;
      *(_BYTE *)(a1 + 40) = 0;
      swift_retain();
      return a1;
    }
    v4 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    v5 = 1;
  }
  *(_BYTE *)(a1 + 40) = v5;
  return a1;
}

uint64_t sub_242227E70(uint64_t a1, uint64_t *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  if ((uint64_t *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2)
    {

    }
    else if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
    }
    else
    {
      swift_release();
    }
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      v8 = *a2;
      MEMORY[0x2426A61F8](v8);
      *(_QWORD *)a1 = v8;
      v7 = 2;
    }
    else
    {
      if (v5 != 1)
      {
        v9 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v9;
        *(_BYTE *)(a1 + 40) = 0;
        swift_retain();
        return a1;
      }
      v6 = a2[3];
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = a2[4];
      (**(void (***)(uint64_t, uint64_t *))(v6 - 8))(a1, a2);
      v7 = 1;
    }
    *(_BYTE *)(a1 + 40) = v7;
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_242227F70(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  char v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2)
    {

    }
    else if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
    }
    else
    {
      swift_release();
    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v7 = 2;
    }
    else if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v7 = 1;
    }
    else
    {
      v7 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    *(_BYTE *)(a1 + 40) = v7;
  }
  return a1;
}

uint64_t sub_24222803C(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_242228078(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_2422280C4(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_2422280E0(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

void type metadata accessor for ResponseIterator.SetupState()
{
  OUTLINED_FUNCTION_65_1();
}

uint64_t _s20ModelManagerServices25RequestCancellationReasonOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242228160 + 4 * byte_24227B8F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_242228194 + 4 * byte_24227B8F0[v4]))();
}

uint64_t sub_242228194(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24222819C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2422281A4);
  return result;
}

uint64_t sub_2422281B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2422281B8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2422281BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2422281C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RequestCancellationReason.CodingKeys()
{
  return &type metadata for RequestCancellationReason.CodingKeys;
}

ValueMetadata *type metadata accessor for RequestCancellationReason.PolicyChangeCodingKeys()
{
  return &type metadata for RequestCancellationReason.PolicyChangeCodingKeys;
}

ValueMetadata *type metadata accessor for RequestCancellationReason.ClientDisavowalCodingKeys()
{
  return &type metadata for RequestCancellationReason.ClientDisavowalCodingKeys;
}

ValueMetadata *type metadata accessor for RequestCancellationReason.ClientTerminationCodingKeys()
{
  return &type metadata for RequestCancellationReason.ClientTerminationCodingKeys;
}

uint64_t storeEnumTagSinglePayload for ClientData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24222825C + 4 * byte_24227B8FF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242228290 + 4 * byte_24227B8FA[v4]))();
}

uint64_t sub_242228290(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242228298(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2422282A0);
  return result;
}

uint64_t sub_2422282AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2422282B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2422282B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2422282C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClientData.CodingKeys()
{
  return &type metadata for ClientData.CodingKeys;
}

unint64_t sub_2422282E0()
{
  unint64_t result;

  result = qword_2571E1D38;
  if (!qword_2571E1D38)
  {
    result = MEMORY[0x2426A62C4](&unk_24227BF1C, &type metadata for ClientData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1D38);
  }
  return result;
}

unint64_t sub_242228320()
{
  unint64_t result;

  result = qword_2571E1D40;
  if (!qword_2571E1D40)
  {
    result = MEMORY[0x2426A62C4](&unk_24227C0C4, &type metadata for RequestCancellationReason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1D40);
  }
  return result;
}

unint64_t sub_242228360()
{
  unint64_t result;

  result = qword_2571E1D48;
  if (!qword_2571E1D48)
  {
    result = MEMORY[0x2426A62C4](&unk_24227BFE4, &type metadata for RequestCancellationReason.PolicyChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1D48);
  }
  return result;
}

unint64_t sub_2422283A0()
{
  unint64_t result;

  result = qword_2571E1D50;
  if (!qword_2571E1D50)
  {
    result = MEMORY[0x2426A62C4](&unk_24227C00C, &type metadata for RequestCancellationReason.PolicyChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1D50);
  }
  return result;
}

unint64_t sub_2422283E0()
{
  unint64_t result;

  result = qword_2571E1D58;
  if (!qword_2571E1D58)
  {
    result = MEMORY[0x2426A62C4](&unk_24227BF94, &type metadata for RequestCancellationReason.ClientDisavowalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1D58);
  }
  return result;
}

unint64_t sub_242228420()
{
  unint64_t result;

  result = qword_2571E1D60;
  if (!qword_2571E1D60)
  {
    result = MEMORY[0x2426A62C4](&unk_24227BFBC, &type metadata for RequestCancellationReason.ClientDisavowalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1D60);
  }
  return result;
}

unint64_t sub_242228460()
{
  unint64_t result;

  result = qword_2571E1D68;
  if (!qword_2571E1D68)
  {
    result = MEMORY[0x2426A62C4](&unk_24227BF44, &type metadata for RequestCancellationReason.ClientTerminationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1D68);
  }
  return result;
}

unint64_t sub_2422284A0()
{
  unint64_t result;

  result = qword_2571E1D70;
  if (!qword_2571E1D70)
  {
    result = MEMORY[0x2426A62C4](&unk_24227BF6C, &type metadata for RequestCancellationReason.ClientTerminationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1D70);
  }
  return result;
}

unint64_t sub_2422284E0()
{
  unint64_t result;

  result = qword_2571E1D78;
  if (!qword_2571E1D78)
  {
    result = MEMORY[0x2426A62C4](&unk_24227C034, &type metadata for RequestCancellationReason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1D78);
  }
  return result;
}

unint64_t sub_242228520()
{
  unint64_t result;

  result = qword_2571E1D80;
  if (!qword_2571E1D80)
  {
    result = MEMORY[0x2426A62C4](&unk_24227C05C, &type metadata for RequestCancellationReason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1D80);
  }
  return result;
}

unint64_t sub_242228560()
{
  unint64_t result;

  result = qword_2571E1D88;
  if (!qword_2571E1D88)
  {
    result = MEMORY[0x2426A62C4](&unk_24227BE8C, &type metadata for ClientData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1D88);
  }
  return result;
}

unint64_t sub_2422285A0()
{
  unint64_t result;

  result = qword_2571E1D90;
  if (!qword_2571E1D90)
  {
    result = MEMORY[0x2426A62C4](&unk_24227BEB4, &type metadata for ClientData.CodingKeys);
    atomic_store(result, &qword_2571E1D90);
  }
  return result;
}

void sub_2422285DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_115(a1, a2, a3);
  OUTLINED_FUNCTION_55_6(v3);
  OUTLINED_FUNCTION_34();
}

uint64_t sub_2422285FC(uint64_t *a1, uint64_t a2)
{
  sub_242227DDC(a2, a1);
  return a2;
}

void sub_242228630(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  OUTLINED_FUNCTION_34();
}

void sub_242228670(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_55_6(v3);
  OUTLINED_FUNCTION_34();
}

uint64_t sub_24222869C(uint64_t a1, uint64_t a2)
{
  sub_242227F70(a2, a1);
  return a2;
}

uint64_t OUTLINED_FUNCTION_12_8(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_15_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_17_6()
{
  return sub_2422725CC();
}

void OUTLINED_FUNCTION_18_4(uint64_t a1@<X7>, _QWORD *a2@<X8>, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_2422264FC(v11, v8, v7, v6, v10, 0, v9, a1, v5, a2, a5);
}

void OUTLINED_FUNCTION_19_6(uint64_t a1@<X7>, _QWORD *a2@<X8>, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_2422264FC(v12, v9, v8, v7, v11, v6, v10, a1, v5, a2, a5);
}

void OUTLINED_FUNCTION_20_8(uint64_t a1@<X7>, _QWORD *a2@<X8>, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_2422264FC(v11, v8, v7, v6, v10, 0, v9, a1, v5, a2, a5);
}

void OUTLINED_FUNCTION_21_5(uint64_t a1@<X7>, _QWORD *a2@<X8>, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_2422264FC(v12, v9, v8, v7, v11, v6, v10, a1, v5, a2, a5);
}

uint64_t OUTLINED_FUNCTION_22_5()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_23_7(uint64_t a1)
{
  return ResponseIterator.next()(a1);
}

uint64_t OUTLINED_FUNCTION_24_7()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 16);
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_28_8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 24);
}

uint64_t OUTLINED_FUNCTION_29_6()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 40) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_30_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t OUTLINED_FUNCTION_31_3()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_32_2(uint64_t (*a1)(_QWORD)@<X2>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;

  sub_24222663C(v3, (uint64_t)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
}

void OUTLINED_FUNCTION_33_5(uint64_t (*a1)(_QWORD)@<X2>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;

  sub_24222663C(v3, (uint64_t)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
}

uint64_t OUTLINED_FUNCTION_37_3(uint64_t a1, uint64_t a2)
{
  return ModelServiceClient.cancelRequest(id:session:)(a1, a2);
}

uint64_t OUTLINED_FUNCTION_41_1()
{
  return sub_242272A4C();
}

void OUTLINED_FUNCTION_42_5(uint64_t a1)
{
  uint64_t *v1;

  sub_2421D3B00(a1, v1);
}

uint64_t OUTLINED_FUNCTION_45_6()
{
  return type metadata accessor for ClientData(0);
}

uint64_t OUTLINED_FUNCTION_46_5()
{
  return type metadata accessor for ClientData(0);
}

uint64_t OUTLINED_FUNCTION_48_7()
{
  return sub_242272AF4();
}

uint64_t OUTLINED_FUNCTION_51_5()
{
  return sub_242272B0C();
}

uint64_t OUTLINED_FUNCTION_53_3()
{
  return type metadata accessor for Request(0);
}

uint64_t OUTLINED_FUNCTION_54_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v10, a10, a1);
}

uint64_t OUTLINED_FUNCTION_55_6(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_56_5(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_57_5(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_60_5(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_storeEnumTagSinglePayload(v3, 1, 1, a1);
  return sub_24222622C(v2, v1);
}

uint64_t OUTLINED_FUNCTION_61_5(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_storeEnumTagSinglePayload(v3, 1, 1, a1);
  return sub_24222622C(v2, v1);
}

uint64_t OUTLINED_FUNCTION_65_7()
{
  return sub_242272644();
}

uint64_t OUTLINED_FUNCTION_66_6()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_69_7@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void OUTLINED_FUNCTION_70_3(uint64_t a1)
{
  uint64_t *v1;

  sub_2421D3B00(a1, v1);
}

void OUTLINED_FUNCTION_71_5()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  ClientData.init(data:xpcData:)(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_72_6()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_73_5(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_2421D3B00(v2, a2);
}

void OUTLINED_FUNCTION_74_3()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  ClientData.init(data:xpcData:)(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_75_5@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 24);
}

uint64_t OUTLINED_FUNCTION_76_4()
{
  return _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
}

uint64_t OUTLINED_FUNCTION_77_6(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_78_7()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_79_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_80_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_81_7()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_82_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_83_5()
{
  unint64_t v0;
  uint64_t v1;

  sub_242226270(v1, v0);
  return sub_242226270(v1, v0);
}

uint64_t OUTLINED_FUNCTION_90_4()
{
  return _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
}

uint64_t OUTLINED_FUNCTION_93_5()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2421CE434(v1, v0);
}

uint64_t OUTLINED_FUNCTION_94_4()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_95_5()
{
  unint64_t v0;
  uint64_t v1;

  return sub_2421CE434(v1, v0);
}

uint64_t OUTLINED_FUNCTION_96_6()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_97_3()
{
  return sub_242272A70();
}

unint64_t OUTLINED_FUNCTION_98_3()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_2422267B0();
}

uint64_t OUTLINED_FUNCTION_100_4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;

  *v2 = a2;
  v2[1] = a1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_101_5()
{
  return swift_release();
}

void OUTLINED_FUNCTION_102_5(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_2421D3B00(v2, a2);
}

uint64_t OUTLINED_FUNCTION_103_4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_104_5(uint64_t a1)
{
  uint64_t v1;

  return sub_242223A20(a1, v1);
}

uint64_t OUTLINED_FUNCTION_106_5()
{
  return type metadata accessor for Request(0);
}

uint64_t OUTLINED_FUNCTION_107_3()
{
  return type metadata accessor for ModelServiceClient();
}

unint64_t OUTLINED_FUNCTION_108_3()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_2422267EC();
}

uint64_t OUTLINED_FUNCTION_115_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_116_4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_242228C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_defaultActor_initialize();
  v1 = OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_logHandle;
  if (qword_2543AA570 != -1)
    swift_once();
  v2 = sub_2422724AC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2543AA558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0 + v1, v3, v2);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_cancellationHandlers) = MEMORY[0x24BEE4AF8];
  v4 = v0 + OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_cachedSessionResult;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA2E8);
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v5);
  *(_QWORD *)(v0 + 112) = 0xD000000000000016;
  *(_QWORD *)(v0 + 120) = 0x8000000242283880;
  return v0;
}

uint64_t sub_242228D74()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ModelXPCCachedSession();
  v0 = swift_allocObject();
  result = sub_242228C88();
  qword_2543AAE00 = v0;
  return result;
}

uint64_t sub_242228DB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  BOOL v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(BOOL *);
  BOOL v12[24];
  uint64_t v13;

  v2 = v1;
  v13 = *MEMORY[0x24BDAC8D0];
  type metadata accessor for _OSActivity();
  swift_initStackObject();
  v4 = _OSActivity.init(_:)("modelmanagerd connection cancellation", 37, 2);
  sub_242228FF8(a1, 0);
  v5 = sub_242228EF8();
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_cancellationHandlers);
  OUTLINED_FUNCTION_9();
  v7 = *v6;
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    sub_242272644();
    v9 = v7 + 40;
    do
    {
      v10 = *(void (**)(BOOL *))(v9 - 8);
      v12[0] = v5;
      swift_retain();
      v10(v12);
      swift_release();
      v9 += 16;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_9();
  os_activity_scope_leave((os_activity_scope_state_t)(v4 + 24));
  swift_endAccess();
  return swift_release();
}

BOOL sub_242228EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA2F0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_84_1();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - v4;
  v6 = v0 + OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_cachedSessionResult;
  OUTLINED_FUNCTION_9();
  sub_242229C3C(v6, (uint64_t)v5);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA2E8);
  v8 = 1;
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v7) != 1)
  {
    sub_242229C3C((uint64_t)v5, v1);
    v8 = swift_getEnumCaseMultiPayload() != 1;
    sub_242229C84(v1, &qword_2543AA2E8);
  }
  sub_242229C84((uint64_t)v5, &qword_2543AA2F0);
  return v8;
}

uint64_t sub_242228FF8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  _BYTE v18[24];

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA2F0);
  OUTLINED_FUNCTION_27();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v18[-v10];
  v12 = v2 + OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_cachedSessionResult;
  OUTLINED_FUNCTION_9();
  sub_242229C3C(v12, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA2E8);
  v13 = OUTLINED_FUNCTION_8_6();
  if (__swift_getEnumTagSinglePayload(v13, v14, v15) == 1)
  {
    v16 = &qword_2543AA2F0;
    return sub_242229C84((uint64_t)v11, v16);
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = &qword_2543AA2E8;
    return sub_242229C84((uint64_t)v11, v16);
  }
  if (*v11 != a1)
    return swift_release();
  if ((a2 & 1) != 0)
    sub_242272518();
  swift_release();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v3);
  OUTLINED_FUNCTION_9();
  sub_242229B10((uint64_t)v9, v12);
  return swift_endAccess();
}

uint64_t sub_242229174()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = &qword_2543AA2F0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA2F0);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_cachedSessionResult;
  OUTLINED_FUNCTION_9();
  sub_242229C3C(v5, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA2E8);
  v6 = OUTLINED_FUNCTION_8_6();
  if (__swift_getEnumTagSinglePayload(v6, v7, v8) == 1)
    goto LABEL_4;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v1 = &qword_2543AA2E8;
LABEL_4:
    sub_242229C84((uint64_t)v4, v1);
    return sub_24222925C();
  }
  return *(_QWORD *)v4;
}

uint64_t sub_24222925C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[5];
  uint64_t v24;
  char *v25;

  v2 = sub_2422725A8();
  v23[3] = *(_QWORD *)(v2 - 8);
  v23[4] = v2;
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_84_1();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v23 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA2F0);
  OUTLINED_FUNCTION_27();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (_QWORD *)((char *)v23 - v10);
  sub_2422724E8();
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v12);
  sub_24227253C();
  v24 = v0;
  sub_242272644();
  sub_2422724DC();
  v13 = (uint64_t)v25;
  v14 = sub_2422724B8();
  if (!v13)
  {
    v23[1] = v1;
    v23[2] = v5;
    v15 = (uint64_t)v11;
    v25 = v9;
    v16 = swift_allocObject();
    v17 = v24;
    swift_weakInit();
    OUTLINED_FUNCTION_7_5();
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v16;
    *(_QWORD *)(v18 + 24) = v14;
    swift_retain();
    sub_2422724F4();
    swift_release();
    swift_release();
    sub_242272524();
    *v11 = v14;
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA2E8);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload(v15, 0, 1, v19);
    v20 = (uint64_t)v25;
    sub_242229AC8(v15, (uint64_t)v25);
    v21 = v17 + OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_cachedSessionResult;
    OUTLINED_FUNCTION_9();
    swift_retain();
    sub_242229B10(v20, v21);
    swift_endAccess();
  }
  return v14;
}

uint64_t sub_2422295FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_242272848();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v7);
  v8 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v8;
  v9[5] = a3;
  sub_2421B7B90();
  return swift_release();
}

uint64_t sub_242229710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch();
}

uint64_t sub_24222972C()
{
  uint64_t v0;
  uint64_t Strong;

  OUTLINED_FUNCTION_9();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
    return OUTLINED_FUNCTION_7();
  **(_BYTE **)(v0 + 40) = 1;
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_242229798()
{
  uint64_t v0;

  sub_242228DB0(*(_QWORD *)(v0 + 56));
  swift_release();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2422297D4()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 64) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2422297F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_7_5();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_cancellationHandlers);
  OUTLINED_FUNCTION_9();
  swift_retain();
  sub_24226AB30();
  v7 = *(_QWORD *)(*v6 + 16);
  sub_24226ABC8();
  v8 = *v6;
  *(_QWORD *)(v8 + 16) = v7 + 1;
  v9 = v8 + 16 * v7;
  *(_QWORD *)(v9 + 32) = sub_242229CD0;
  *(_QWORD *)(v9 + 40) = v5;
  return swift_endAccess();
}

uint64_t sub_242229894()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  v1 = sub_2422724AC();
  OUTLINED_FUNCTION_3_3(v1);
  swift_bridgeObjectRelease();
  sub_242229C84(v0 + OBJC_IVAR____TtC20ModelManagerServices21ModelXPCCachedSession_cachedSessionResult, &qword_2543AA2F0);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_242229900()
{
  sub_242229894();
  return swift_defaultActor_deallocate();
}

uint64_t sub_242229918()
{
  return type metadata accessor for ModelXPCCachedSession();
}

uint64_t type metadata accessor for ModelXPCCachedSession()
{
  uint64_t result;

  result = qword_2543AA2B0;
  if (!qword_2543AA2B0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_242229958()
{
  unint64_t v0;
  unint64_t v1;

  sub_2422724AC();
  if (v0 <= 0x3F)
  {
    sub_242229A00();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_242229A00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2543AA2F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2543AA2E8);
    v0 = sub_242272938();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2543AA2F8);
  }
}

uint64_t sub_242229A58()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_242229A64()
{
  return sub_242229A58();
}

uint64_t sub_242229A7C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_242229AA0()
{
  swift_release();
  OUTLINED_FUNCTION_7_5();
  return swift_deallocObject();
}

uint64_t sub_242229AC0(uint64_t a1)
{
  uint64_t v1;

  return sub_2422295FC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_242229AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_242229B10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_242229B58()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242229B84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_242229BFC;
  return sub_242229710(a1, v4, v5, v7, v6);
}

uint64_t sub_242229BFC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_242229C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_242229C84(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_3_3(v3);
  return a1;
}

uint64_t sub_242229CB0()
{
  swift_release();
  OUTLINED_FUNCTION_7_5();
  return swift_deallocObject();
}

uint64_t sub_242229CD0(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t OUTLINED_FUNCTION_8_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_9_7(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

uint64_t sub_242229D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2422724AC();
  __swift_allocate_value_buffer(v0, qword_2571E1DA8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2571E1DA8);
  if (qword_2543AA570 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2543AA558);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void ModelInstance.assetBundleIdentifier.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

void ModelInstance.inferenceProviderID.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

uint64_t ModelInstance.inferenceProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  v5 = *(_BYTE *)(v1 + 64);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v5;
  sub_242272644();
  return sub_242272644();
}

uint64_t ModelInstance.init(assetBundleIdentifier:inferenceProvider:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  v5 = *a3;
  v4 = a3[1];
  v6 = *((_BYTE *)a3 + 32);
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = v5;
  *(_QWORD *)(a4 + 24) = v4;
  *(_QWORD *)(a4 + 32) = v5;
  *(_QWORD *)(a4 + 40) = v4;
  *(_OWORD *)(a4 + 48) = *((_OWORD *)a3 + 1);
  *(_BYTE *)(a4 + 64) = v6;
  return sub_242272644();
}

uint64_t ModelInstance.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  sub_242272644();
  sub_2422726EC();
  swift_bridgeObjectRelease();
  sub_242272644();
  sub_2422726EC();
  swift_bridgeObjectRelease();
  sub_242272644();
  swift_bridgeObjectRetain_n();
  sub_2422726EC();
  swift_bridgeObjectRelease();
  sub_242272CD4();
  if (v1)
  {
    sub_242272644();
    sub_2422726EC();
    swift_bridgeObjectRelease();
  }
  sub_242272CE0();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t static ModelInstance.== infix(_:_:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  char v11;
  BOOL v12;
  char v13;
  __int128 v15;
  _QWORD v16[2];
  __int128 v17;
  char v18;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 64);
  v7 = a2[2];
  v8 = a2[3];
  v15 = *(_OWORD *)(a1 + 48);
  v9 = *(_QWORD *)a1 == *a2 && *(_QWORD *)(a1 + 8) == a2[1];
  if (v9 || (v10 = sub_242272C20(), v11 = 0, (v10 & 1) != 0))
  {
    v12 = v2 == v7 && v3 == v8;
    if (v12 || (OUTLINED_FUNCTION_56(), v13 = sub_242272C20(), v11 = 0, (v13 & 1) != 0))
    {
      v16[0] = v4;
      v16[1] = v5;
      v17 = v15;
      v18 = v6;
      v11 = static InferenceProviderDescriptor.== infix(_:_:)((uint64_t)v16);
    }
  }
  return v11 & 1;
}

uint64_t sub_24222A064(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x8000000242283790 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000242284830 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002422840B0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_242272C20();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_24222A1A4(char a1)
{
  if (!a1)
    return 0xD000000000000015;
  if (a1 == 1)
    return 0xD000000000000013;
  return 0xD000000000000011;
}

unint64_t sub_24222A200()
{
  char *v0;

  return sub_24222A1A4(*v0);
}

uint64_t sub_24222A208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24222A064(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24222A22C()
{
  sub_24222A3F8();
  return sub_242272D70();
}

uint64_t sub_24222A254()
{
  sub_24222A3F8();
  return sub_242272D7C();
}

void ModelInstance.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1DC0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_67();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24222A3F8();
  sub_242272D64();
  sub_242272B18();
  if (!v5)
  {
    sub_242272B18();
    sub_2421E3814();
    sub_242272B48();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  OUTLINED_FUNCTION_16_0();
}

unint64_t sub_24222A3F8()
{
  unint64_t result;

  result = qword_2571E1DC8;
  if (!qword_2571E1DC8)
  {
    result = MEMORY[0x2426A62C4](&unk_24227C6D8, &type metadata for ModelInstance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1DC8);
  }
  return result;
}

uint64_t ModelInstance.hashValue.getter()
{
  sub_242272CBC();
  ModelInstance.hash(into:)();
  return sub_242272D04();
}

void ModelInstance.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E1DD0);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_66();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24222A3F8();
  sub_242272D40();
  if (v2)
  {
    OUTLINED_FUNCTION_87();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_20_9();
    v8 = v7;
    v13 = v6;
    LOBYTE(v14) = 1;
    sub_242272644();
    v9 = OUTLINED_FUNCTION_20_9();
    v11 = v10;
    v12 = v9;
    sub_2421E3938();
    OUTLINED_FUNCTION_74();
    sub_242272AAC();
    OUTLINED_FUNCTION_9_8();
    sub_242272644();
    *(_QWORD *)a2 = v13;
    *(_QWORD *)(a2 + 8) = v8;
    *(_QWORD *)(a2 + 16) = v12;
    *(_QWORD *)(a2 + 24) = v11;
    *(_QWORD *)(a2 + 32) = v14;
    *(_QWORD *)(a2 + 40) = v15;
    *(_QWORD *)(a2 + 48) = v16;
    *(_QWORD *)(a2 + 56) = v17;
    *(_BYTE *)(a2 + 64) = v18;
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_87();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_16_0();
}

void sub_24222A670(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ModelInstance.init(from:)(a1, a2);
}

void sub_24222A684(_QWORD *a1)
{
  ModelInstance.encode(to:)(a1);
}

uint64_t sub_24222A6A0()
{
  sub_242272CBC();
  ModelInstance.hash(into:)();
  return sub_242272D04();
}

uint64_t Session.__allocating_init(supportedAssetBundleIdentifiers:useCaseID:onBehalfOfPID:parentOfOnBehalfOfPid:loggingIdentifier:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_24222A754(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24222B958);
}

uint64_t Session.init(supportedAssetBundleIdentifiers:useCaseID:onBehalfOfPID:parentOfOnBehalfOfPid:loggingIdentifier:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_24222A754(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24222BC08);
}

uint64_t sub_24222A754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v16 = *(_QWORD *)(a8 + 24);
  v15 = *(_QWORD *)(a8 + 32);
  v17 = __swift_mutable_project_boxed_opaque_existential_1(a8, v16);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_66();
  v20 = v19 - v18;
  (*(void (**)(uint64_t))(v21 + 16))(v19 - v18);
  v22 = a9(a1, a2, a3, a4, a5, a6, a7, v20, v9, v16, v15);
  __swift_destroy_boxed_opaque_existential_1Tm(a8);
  return v22;
}

uint64_t sub_24222A83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 24) = a4;
  *(_QWORD *)(v5 + 32) = a5;
  return swift_task_switch();
}

uint64_t sub_24222A854()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 24), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 24));
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_24222A8A8;
  v2 = OUTLINED_FUNCTION_2_4(*(_QWORD *)(v0 + 32));
  return OUTLINED_FUNCTION_0_2(v2, v3, v4, v5);
}

uint64_t sub_24222A8A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_24222A90C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  BOOL v5;
  uint64_t v6;
  uint8_t *v7;
  _QWORD *v8;
  uint64_t v9;

  if (qword_2571DF9F8 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 48);
  v2 = sub_2422724AC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2571E1DA8);
  MEMORY[0x2426A61F8](v1);
  MEMORY[0x2426A61F8](v1);
  v3 = sub_242272494();
  v4 = sub_242272914();
  v5 = os_log_type_enabled(v3, v4);
  v6 = *(_QWORD *)(v0 + 48);
  if (v5)
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    MEMORY[0x2426A61F8](v6);
    v9 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v9;
    sub_242272950();
    *v8 = v9;
    OUTLINED_FUNCTION_46();
    OUTLINED_FUNCTION_46();
    _os_log_impl(&dword_2421B5000, v3, v4, "establishment of session failed with %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543A6E28);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_2();
  }
  OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_46();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *Session.__allocating_init(supportedAssetBundleIdentifiers:useCaseID:onBehalfOfPID:parentOfOnBehalfOfPid:loggingIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  _QWORD *v15;

  if (qword_2543A9CF8 != -1)
    swift_once();
  v14 = qword_2543A9CE0;
  v15 = (_QWORD *)swift_allocObject();
  swift_retain();
  return sub_24222BA54(a1, a2, a3, a4, a5, a6, a7, v14, v15);
}

void Session.__allocating_init(supportedAssetBundleIdentifiers:useCaseID:onBehalfOfPID:loggingIdentifier:)()
{
  OUTLINED_FUNCTION_32_3();
  if (qword_2543A9CF8 != -1)
    swift_once();
  OUTLINED_FUNCTION_23_8();
  OUTLINED_FUNCTION_33_6();
  OUTLINED_FUNCTION_8_7();
  OUTLINED_FUNCTION_14_7();
}

void Session.__allocating_init(supportedAssetBundleIdentifiers:useCaseID:onBehalfOfPID:containsSensitiveData:loggingIdentifier:)()
{
  OUTLINED_FUNCTION_32_3();
  if (qword_2543A9CF8 != -1)
    swift_once();
  OUTLINED_FUNCTION_23_8();
  OUTLINED_FUNCTION_33_6();
  OUTLINED_FUNCTION_8_7();
  OUTLINED_FUNCTION_14_7();
}

void sub_24222AC64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18[2];

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_66();
  v4 = v3 - v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - v10;
  v12 = v0 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
  v13 = OUTLINED_FUNCTION_21();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = sub_242272848();
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v14);
  sub_2421CE584(v0 + 16, (uint64_t)v18);
  sub_24222C548((uint64_t)v11, (uint64_t)v9);
  v15 = (*(unsigned __int8 *)(v6 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  sub_2421BCE50(v18, v16 + 32);
  sub_24222C60C((uint64_t)v9, v16 + v15);
  sub_2421B7ACC();
  swift_release();
  OUTLINED_FUNCTION_30_4((uint64_t)v11);
}

uint64_t Session.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_21();
  v0 = OUTLINED_FUNCTION_56();
  return OUTLINED_FUNCTION_55(v0, v1, v2, v3);
}

uint64_t sub_24222AE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a4;
  *(_QWORD *)(v5 + 24) = a5;
  return swift_task_switch();
}

uint64_t sub_24222AE2C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24));
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_24222AE80;
  v2 = OUTLINED_FUNCTION_2_4(*(_QWORD *)(v0 + 24));
  return OUTLINED_FUNCTION_0_2(v2, v3, v4, v5);
}

uint64_t sub_24222AE80()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

void Session.deinit()
{
  uint64_t v0;
  uint64_t v1;

  sub_24222AC64();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_3_3(v1);
  OUTLINED_FUNCTION_34();
}

uint64_t Session.__deallocating_deinit()
{
  Session.deinit();
  return swift_deallocClassInstance();
}

uint64_t Session.supportedAssetBundleIdentifiers.getter()
{
  return sub_242272644();
}

void Session.useCaseID.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

uint64_t Session.onBehalfOfPID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t Session.parentOfOnBehalfOfPID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

void Session.loggingIdentifier.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

uint64_t Session.uuid.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_21();
  v0 = OUTLINED_FUNCTION_56();
  return OUTLINED_FUNCTION_55(v0, v1, v2, v3);
}

void Session.fetchModelInfo()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = 0;
}

uint64_t Session.fetchModelInstance()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_24222AFE4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[3];
  v2 = v1[5];
  v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  v4 = (_QWORD *)OUTLINED_FUNCTION_49();
  v0[4] = v4;
  *v4 = v0;
  v4[1] = sub_24222AE80;
  return v6(v0[2], v0[3], v2, v3);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Session.requestPrewarm()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int EnumTagSinglePayload;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_19_7();
  v2 = sub_242272848();
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v2);
  v3 = (_QWORD *)swift_allocObject();
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v0;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v0, 1, v2);
  swift_retain();
  if (EnumTagSinglePayload == 1)
  {
    sub_2421D3B00(v0, &qword_2543A9D48);
  }
  else
  {
    sub_24227283C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v0, v2);
    if (v3[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_2422727D0();
      swift_unknownObjectRelease();
    }
  }
  swift_task_create();
  swift_release();
}

uint64_t sub_24222B1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_24222B200()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 16) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 40));
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_24222C74C;
  v2 = OUTLINED_FUNCTION_2_4(*(_QWORD *)(v0 + 16));
  return OUTLINED_FUNCTION_0_2(v2, v3, v4, v5);
}

Swift::Void __swiftcall Session.cancel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int EnumTagSinglePayload;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_19_7();
  v2 = sub_242272848();
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v2);
  v3 = (_QWORD *)swift_allocObject();
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = v0;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v0, 1, v2);
  swift_retain();
  if (EnumTagSinglePayload == 1)
  {
    sub_2421D3B00(v0, &qword_2543A9D48);
  }
  else
  {
    sub_24227283C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v0, v2);
    if (v3[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_2422727D0();
      swift_unknownObjectRelease();
    }
  }
  swift_task_create();
  swift_release();
  OUTLINED_FUNCTION_15_2();
}

uint64_t sub_24222B3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_24222B3EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 16) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 40));
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_24222C74C;
  v2 = OUTLINED_FUNCTION_2_4(*(_QWORD *)(v0 + 16));
  return OUTLINED_FUNCTION_0_2(v2, v3, v4, v5);
}

uint64_t static Session.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  OUTLINED_FUNCTION_27();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v14 - v8;
  v10 = a1 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
  v11 = OUTLINED_FUNCTION_21();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  v12(v7, a2 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid, v11);
  LOBYTE(a2) = _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
  OUTLINED_FUNCTION_30_4((uint64_t)v7);
  OUTLINED_FUNCTION_30_4((uint64_t)v9);
  return a2 & 1;
}

void Session.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  OUTLINED_FUNCTION_27();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_67();
  v3 = v0 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
  v4 = OUTLINED_FUNCTION_21();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v1, v3, v4);
  sub_2421ED71C(&qword_2543AA0D8, v5, MEMORY[0x24BDCEA88]);
  sub_242272680();
  sub_2421D3B00(v1, &qword_2543A7850);
  OUTLINED_FUNCTION_15_2();
}

uint64_t Session.requestPrewarm_async()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_5();
}

uint64_t Session.cancel_async()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_24222B608()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)(v0 + 16) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 40));
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_24222B660;
  v2 = OUTLINED_FUNCTION_2_4(*(_QWORD *)(v0 + 16));
  return OUTLINED_FUNCTION_0_2(v2, v3, v4, v5);
}

uint64_t sub_24222B660()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t Session.hashValue.getter()
{
  sub_242272CBC();
  Session.hash(into:)();
  return sub_242272D04();
}

uint64_t sub_24222B6D0(uint64_t *a1, uint64_t *a2)
{
  return static Session.== infix(_:_:)(*a1, *a2) & 1;
}

uint64_t sub_24222B6F0()
{
  return Session.hashValue.getter();
}

void sub_24222B710()
{
  Session.hash(into:)();
}

uint64_t sub_24222B730()
{
  sub_242272CBC();
  Session.hash(into:)();
  return sub_242272D04();
}

uint64_t sub_24222B76C()
{
  return Session.uuid.getter();
}

ModelManagerServices::DaemonSessionState_optional __swiftcall DaemonSessionState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ModelManagerServices::DaemonSessionState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_242272A34();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t DaemonSessionState.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_24222B818 + 4 * byte_24227C300[*v0]))(0xD000000000000016, 0x8000000242282E60);
}

uint64_t sub_24222B818()
{
  return 1701736302;
}

uint64_t sub_24222B828()
{
  return 0x656C6C65636E6163;
}

uint64_t sub_24222B844()
{
  return 0x6E776F6E6B6E75;
}

void sub_24222B85C(char *a1)
{
  sub_2421C7A28(*a1);
}

ModelManagerServices::DaemonSessionState_optional sub_24222B868(Swift::String *a1)
{
  return DaemonSessionState.init(rawValue:)(*a1);
}

uint64_t sub_24222B874@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = DaemonSessionState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_24222B898()
{
  sub_24225ECE8();
}

void sub_24222B8A0(uint64_t a1)
{
  char *v1;

  sub_2421C7D7C(a1, *v1);
}

void sub_24222B8A8()
{
  sub_24225EE5C();
}

uint64_t sub_24222B8B0()
{
  sub_24222C50C();
  return sub_242272764();
}

uint64_t sub_24222B90C()
{
  sub_24222C50C();
  return sub_24227274C();
}

_QWORD *sub_24222B958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a6;
  v25 = a7;
  v23 = a5;
  v16 = *(_QWORD *)(a10 - 8);
  MEMORY[0x24BDAC7A8](a9);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (_QWORD *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a8, a10);
  v20 = sub_24222BC08(a1, a2, a3, a4, v23, v24, v25, (uint64_t)v18, v19, a10, a11);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a8, a10);
  return v20;
}

_QWORD *sub_24222BA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29[2];
  _QWORD v30[5];

  v27 = a6;
  v28 = a7;
  v26 = a5;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_24227238C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[3] = type metadata accessor for ModelServiceClient();
  v30[4] = &protocol witness table for ModelServiceClient;
  v30[0] = a8;
  a9[7] = a1;
  a9[8] = a2;
  a9[9] = a3;
  a9[10] = a4;
  v21 = v27;
  a9[11] = v26;
  a9[12] = v21;
  a9[13] = v28;
  _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))((uint64_t)a9 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid, v20, v17);
  sub_2421CE584((uint64_t)v30, (uint64_t)(a9 + 2));
  v22 = sub_242272848();
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v22);
  sub_2421CE584((uint64_t)v30, (uint64_t)v29);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = 0;
  v23[3] = 0;
  sub_2421BCE50(v29, (uint64_t)(v23 + 4));
  v23[9] = a9;
  swift_retain();
  sub_2421B7ACC();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  return a9;
}

_QWORD *sub_24222BC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33[2];
  uint64_t v34[5];

  v31 = a6;
  v32 = a7;
  v29 = a4;
  v30 = a5;
  v28 = a3;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_24227238C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[3] = a10;
  v34[4] = a11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v34);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a10 - 8) + 32))(boxed_opaque_existential_1, a8, a10);
  a9[7] = a1;
  a9[8] = a2;
  v22 = v29;
  a9[9] = v28;
  a9[10] = v22;
  v23 = v31;
  a9[11] = v30;
  a9[12] = v23;
  a9[13] = v32;
  _s20ModelManagerServices14UUIDIdentifierVACyxGycfC_0();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))((uint64_t)a9 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid, v20, v17);
  sub_2421CE584((uint64_t)v34, (uint64_t)(a9 + 2));
  v24 = sub_242272848();
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v24);
  sub_2421CE584((uint64_t)v34, (uint64_t)v33);
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = 0;
  v25[3] = 0;
  sub_2421BCE50(v33, (uint64_t)(v25 + 4));
  v25[9] = a9;
  swift_retain();
  sub_2421B7ACC();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
  return a9;
}

uint64_t sub_24222BDD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24222B1E8(v2, v3, v4, v5);
}

uint64_t objectdestroyTm_0()
{
  OUTLINED_FUNCTION_163();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24222BE50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_24222B3D4(v2, v3, v4, v5);
}

unint64_t sub_24222BEA8()
{
  unint64_t result;

  result = qword_2571E1E10;
  if (!qword_2571E1E10)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelInstance, &type metadata for ModelInstance);
    atomic_store(result, (unint64_t *)&qword_2571E1E10);
  }
  return result;
}

void sub_24222BEE4()
{
  sub_2421ED71C(&qword_2571E1E18, (uint64_t (*)(uint64_t))type metadata accessor for Session, (uint64_t)&protocol conformance descriptor for Session);
}

uint64_t type metadata accessor for Session()
{
  uint64_t result;

  result = qword_2543A6EC8;
  if (!qword_2543A6EC8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_24222BF4C()
{
  unint64_t result;

  result = qword_2571E1E20;
  if (!qword_2571E1E20)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for DaemonSessionState, &type metadata for DaemonSessionState);
    atomic_store(result, (unint64_t *)&qword_2571E1E20);
  }
  return result;
}

uint64_t destroy for ModelInstance()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModelInstance(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  sub_242272644();
  sub_242272644();
  sub_242272644();
  sub_242272644();
  return a1;
}

uint64_t assignWithCopy for ModelInstance(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_242272644();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

void *__swift_memcpy65_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x41uLL);
}

uint64_t assignWithTake for ModelInstance(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelInstance(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 65))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelInstance(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelInstance()
{
  return &type metadata for ModelInstance;
}

uint64_t sub_24222C1F8()
{
  return type metadata accessor for Session();
}

uint64_t sub_24222C200()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24227238C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for Session()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Session.__allocating_init(supportedAssetBundleIdentifiers:useCaseID:onBehalfOfPID:parentOfOnBehalfOfPid:loggingIdentifier:client:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t storeEnumTagSinglePayload for DaemonSessionState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24222C300 + 4 * byte_24227C309[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24222C334 + 4 * byte_24227C304[v4]))();
}

uint64_t sub_24222C334(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24222C33C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24222C344);
  return result;
}

uint64_t sub_24222C350(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24222C358);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_24222C35C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24222C364(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DaemonSessionState()
{
  return &type metadata for DaemonSessionState;
}

uint64_t storeEnumTagSinglePayload for ModelInstance.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24222C3CC + 4 * byte_24227C313[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24222C400 + 4 * byte_24227C30E[v4]))();
}

uint64_t sub_24222C400(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24222C408(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24222C410);
  return result;
}

uint64_t sub_24222C41C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24222C424);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24222C428(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24222C430(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ModelInstance.CodingKeys()
{
  return &type metadata for ModelInstance.CodingKeys;
}

unint64_t sub_24222C450()
{
  unint64_t result;

  result = qword_2571E1E28;
  if (!qword_2571E1E28)
  {
    result = MEMORY[0x2426A62C4](&unk_24227C6B0, &type metadata for ModelInstance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1E28);
  }
  return result;
}

unint64_t sub_24222C490()
{
  unint64_t result;

  result = qword_2571E1E30;
  if (!qword_2571E1E30)
  {
    result = MEMORY[0x2426A62C4](&unk_24227C620, &type metadata for ModelInstance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1E30);
  }
  return result;
}

unint64_t sub_24222C4D0()
{
  unint64_t result;

  result = qword_2571E1E38;
  if (!qword_2571E1E38)
  {
    result = MEMORY[0x2426A62C4](&unk_24227C648, &type metadata for ModelInstance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E1E38);
  }
  return result;
}

unint64_t sub_24222C50C()
{
  unint64_t result;

  result = qword_2571E1E40;
  if (!qword_2571E1E40)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for DaemonSessionState, &type metadata for DaemonSessionState);
    atomic_store(result, &qword_2571E1E40);
  }
  return result;
}

uint64_t sub_24222C548(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24222C590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850) - 8) + 80);
  v2 = (v1 + 72) & ~v1;
  OUTLINED_FUNCTION_163();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  v3 = OUTLINED_FUNCTION_21();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_24222C60C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24222C654()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_4_2(v1);
  return sub_24222AE14(v2, v3, v4, v5, v6);
}

uint64_t sub_24222C6D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_35_5();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_4_2(v1);
  return OUTLINED_FUNCTION_11_5(v2, v3, v4, v5, v6);
}

uint64_t objectdestroy_22Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_163();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  swift_release();
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_0_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_2_4@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

_QWORD *OUTLINED_FUNCTION_8_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  return sub_24222BA54(v5, v4, v3, v2, 0, v1, v0, v7, v6);
}

uint64_t OUTLINED_FUNCTION_9_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_11_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24222A83C(a1, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_19_7()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_20_9()
{
  return sub_242272A7C();
}

uint64_t OUTLINED_FUNCTION_23_8()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_30_4(uint64_t a1)
{
  uint64_t *v1;

  sub_2421D3B00(a1, v1);
}

uint64_t OUTLINED_FUNCTION_33_6()
{
  return swift_retain();
}

uint64_t static RunningBoardSelfAssertionType.== infix(_:_:)()
{
  return 1;
}

uint64_t RunningBoardSelfAssertionType.hash(into:)()
{
  return sub_242272CD4();
}

void RunningBoardSelfAssertionType.hashValue.getter()
{
  sub_242272CBC();
  OUTLINED_FUNCTION_80_0();
  sub_242272D04();
  OUTLINED_FUNCTION_48();
}

void sub_24222C8B4()
{
  RunningBoardSelfAssertionType.hashValue.getter();
}

uint64_t sub_24222C8C8()
{
  return RunningBoardSelfAssertionType.hash(into:)();
}

void sub_24222C8DC()
{
  sub_242272CBC();
  OUTLINED_FUNCTION_80_0();
  sub_242272D04();
  OUTLINED_FUNCTION_48();
}

uint64_t sub_24222C908()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_24222C920()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)(_QWORD, uint64_t, uint64_t);

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 56);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  v2 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(v1 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 20));
  if ((v2 & 1) != 0)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v4 = *(_QWORD **)(v0 + 16);
  v5 = v4[5];
  v6 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v5);
  v8 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v6 + 16) + *(_QWORD *)(v6 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v7;
  *v7 = v0;
  v7[1] = sub_24222C9EC;
  return v8(*(_QWORD *)(v0 + 16), v5, v6);
}

uint64_t sub_24222C9EC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t RunningBoardSelfAssertionToken.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_release();
  return v0;
}

uint64_t RunningBoardSelfAssertionToken.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_24222CA80()
{
  unint64_t result;

  result = qword_2543AA000;
  if (!qword_2543AA000)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for RunningBoardSelfAssertionType, &type metadata for RunningBoardSelfAssertionType);
    atomic_store(result, (unint64_t *)&qword_2543AA000);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RunningBoardSelfAssertionType(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24222CAFC + 4 * byte_24227C730[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24222CB1C + 4 * byte_24227C735[v4]))();
}

_BYTE *sub_24222CAFC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24222CB1C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24222CB24(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24222CB2C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24222CB34(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24222CB3C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RunningBoardSelfAssertionType()
{
  return &type metadata for RunningBoardSelfAssertionType;
}

uint64_t type metadata accessor for RunningBoardSelfAssertionToken()
{
  return objc_opt_self();
}

uint64_t method lookup function for RunningBoardSelfAssertionToken()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RunningBoardSelfAsserting.acquire(type:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_19(v1, (uint64_t)sub_24222CBCC);
  return OUTLINED_FUNCTION_49_1(v2, v3, v4, v5);
}

uint64_t sub_24222CBCC(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_1();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t dispatch thunk of RunningBoardSelfAsserting.relinquish(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_19(v1, (uint64_t)sub_2421B90A0);
  return OUTLINED_FUNCTION_49_1(v2, v3, v4, v5);
}

id sub_24222CC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  objc_super v9;

  v5 = OBJC_IVAR___MMAssertion_assertion;
  *(_QWORD *)&v4[OBJC_IVAR___MMAssertion_assertion] = 0;
  v6 = &v4[OBJC_IVAR___MMAssertion_policy];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v7 = &v4[OBJC_IVAR___MMAssertion_desc];
  *(_QWORD *)v7 = a3;
  *((_QWORD *)v7 + 1) = a4;
  *(_QWORD *)&v4[v5] = 0;
  swift_release();
  v9.receiver = v4;
  v9.super_class = (Class)MMAssertion;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_24222CD58()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_24222CD68()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(char **)(v0 + 16);
  type metadata accessor for Assertion(0);
  v2 = *(_QWORD *)&v1[OBJC_IVAR___MMAssertion_policy];
  v3 = *(_QWORD *)&v1[OBJC_IVAR___MMAssertion_policy + 8];
  sub_242272644();
  v4 = objc_msgSend(v1, sel_description);
  v5 = sub_2422726A4();
  v7 = v6;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v8;
  *v8 = v0;
  v8[1] = sub_24222CE28;
  return Assertion.__allocating_init(policy:description:)(v2, v3, v5, v7);
}

uint64_t sub_24222CE28(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v4 = *v2;
  v6 = *v2;
  OUTLINED_FUNCTION_77(&v6);
  if (v1)
    return ((uint64_t (*)(void))v2[1])();
  *(_QWORD *)(v4 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_24222CE9C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR___MMAssertion_assertion) = *(_QWORD *)(v0 + 32);
  swift_release();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24222CEF0(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_24222CF50;
  return sub_24222CD58();
}

uint64_t sub_24222CF50()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;

  v2 = *v1;
  v7 = v2;
  v3 = *(void **)(v2 + 16);
  OUTLINED_FUNCTION_77(&v7);

  v4 = *(_QWORD *)(v2 + 24);
  if (v0)
  {
    v5 = (void *)sub_24227229C();

    (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 16))(*(_QWORD *)(v2 + 24), 0);
  }
  _Block_release(*(const void **)(v2 + 24));
  return OUTLINED_FUNCTION_7_2((uint64_t (*)(void))v1[1]);
}

uint64_t sub_24222CFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_242272848();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v7);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a1;
  v8[5] = a2;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = &unk_2571E1EC0;
  v9[5] = v8;
  sub_24222D544((uint64_t)v6, (uint64_t)&unk_2571E1ED0, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_24222D0C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_24222D0D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR___MMAssertion_assertion);
  *(_QWORD *)(v0 + 24) = v1;
  if (!v1)
    return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v0 + 8));
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_24222D14C;
  return Assertion.invalidate()();
}

uint64_t sub_24222D14C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_10_7();
  OUTLINED_FUNCTION_3();
  swift_release();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24222D190(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5)
{
  void *v7;
  uint64_t v8;
  id v9;

  v7 = _Block_copy(aBlock);
  OUTLINED_FUNCTION_8_8();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = a1;
  v9 = a1;
  return sub_24222CFE4(a5, v8);
}

uint64_t sub_24222D1E4(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_24222D244;
  return sub_24222D0C0();
}

uint64_t sub_24222D244()
{
  void (**v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_10_7();
  v3 = *(void **)(v2 + 16);
  OUTLINED_FUNCTION_3();

  v0[2](v0);
  _Block_release(v0);
  return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v1 + 8));
}

void __swiftcall MMAssertion.init()(MMAssertion *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void MMAssertion.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

unint64_t type metadata accessor for MMAssertion()
{
  unint64_t result;

  result = qword_2571E1EA0;
  if (!qword_2571E1EA0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2571E1EA0);
  }
  return result;
}

uint64_t sub_24222D328()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_7_6(v1, (uint64_t)sub_2421BD05C);
  return OUTLINED_FUNCTION_57_2(v2, v3, v4);
}

uint64_t sub_24222D36C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_2421BD05C;
  return v6();
}

uint64_t sub_24222D3C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_2421BD05C;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2571E1EB8 + dword_2571E1EB8))(v2, v3, v4);
}

uint64_t sub_24222D43C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_2421BD05C;
  return v7();
}

uint64_t objectdestroy_3Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24222D4C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_2421B90A0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_2571E1EC8 + dword_2571E1EC8))(a1, v4, v5, v6);
}

uint64_t sub_24222D544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_242272848();
  if (__swift_getEnumTagSinglePayload(a1, 1, v6) == 1)
  {
    sub_24222D680(a1);
  }
  else
  {
    sub_24227283C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2422727D0();
    swift_unknownObjectRelease();
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_24222D680(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24222D6C0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2421B9110;
  return v6(a1);
}

uint64_t sub_24222D724()
{
  swift_release();
  OUTLINED_FUNCTION_8_8();
  return swift_deallocObject();
}

uint64_t sub_24222D740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2421B90A0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2571E1ED8 + dword_2571E1ED8))(a1, v4);
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  OUTLINED_FUNCTION_8_8();
  return swift_deallocObject();
}

uint64_t sub_24222D7D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_7_6(v1, (uint64_t)sub_2421BD05C);
  return OUTLINED_FUNCTION_57_2(v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_7_6@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_8_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_10_7()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return *(_QWORD *)(v2 + 32);
}

uint64_t OSEligibilityDomain.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t OSEligibilityDomain.init(rawValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_24222D86C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = OSEligibilityDomain.init(rawValue:)(*a1, (_QWORD *)a2);
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_24222D894@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = OSEligibilityDomain.rawValue.getter();
  *a1 = result;
  return result;
}

void sub_24222D8B8()
{
  sub_24225ED20();
}

void sub_24222D8C0()
{
  sub_2421C7F68();
}

void sub_24222D8C8()
{
  sub_24225EE94();
}

BOOL sub_24222D8D0(uint64_t *a1, uint64_t *a2)
{
  return sub_2421C7D70(*a1, *a2);
}

unint64_t sub_24222D8E4()
{
  unint64_t result;

  result = qword_2543AA160;
  if (!qword_2543AA160)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for OSEligibilityDomain, &type metadata for OSEligibilityDomain);
    atomic_store(result, (unint64_t *)&qword_2543AA160);
  }
  return result;
}

ValueMetadata *type metadata accessor for OSEligibilityDomain()
{
  return &type metadata for OSEligibilityDomain;
}

uint64_t dispatch thunk of OSEligibilityChecking.isEligible(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_24222D9A8;
  return v9(a1, a2, a3);
}

uint64_t sub_24222D9A8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of OSEligibilityChecking.prewarm(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_24222DA00()
{
  return 0;
}

uint64_t sub_24222DA0C(uint64_t a1)
{
  unint64_t v1;

  if (!a1)
    return 0x6C616E696D6F4ELL;
  v1 = 0xD000000000000011;
  if (a1 == 1)
    return 0xD000000000000017;
  if (a1 != 2)
    OUTLINED_FUNCTION_58();
  return v1;
}

uint64_t sub_24222DB0C()
{
  uint64_t *v0;

  return sub_24222DA0C(*v0);
}

void sub_24222DB14(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1);
  v2 = (char *)&v4 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v4 - v1);
  sub_24222DBD0((uint64_t)v2);
}

void sub_24222DB88()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  OUTLINED_FUNCTION_61_6(*(_QWORD *)(*(_QWORD *)v0 + 120));
  OUTLINED_FUNCTION_9();
  v1 = OUTLINED_FUNCTION_56();
  v2(v1);
  OUTLINED_FUNCTION_35_6();
}

void sub_24222DBD0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  OUTLINED_FUNCTION_61_6(*(_QWORD *)(*v1 + 120));
  OUTLINED_FUNCTION_9();
  (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 88) - 8) + 40))(v1, a1);
  swift_endAccess();
  OUTLINED_FUNCTION_35_6();
}

void sub_24222DC24()
{
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_34();
}

unint64_t sub_24222DC60()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
  sub_242232200(v1);
  return v1;
}

void sub_24222DC90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  v3 = *(void **)(v1 + v2);
  *(_QWORD *)(v1 + v2) = a1;
  OUTLINED_FUNCTION_23_9(v3);
}

void sub_24222DCA4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 168);
  *(_QWORD *)(v1 + 168) = a1;
  OUTLINED_FUNCTION_23_9(v2);
}

uint64_t sub_24222DCB0()
{
  OUTLINED_FUNCTION_9();
  return swift_retain();
}

uint64_t sub_24222DCF4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
}

uint64_t sub_24222DD04()
{
  return swift_retain();
}

uint64_t sub_24222DD14(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 160)) = a1;
  return swift_release();
}

uint64_t sub_24222DD2C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  result = sub_24222DEBC();
  if (result)
  {
    v4 = result;
    v5 = v3;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v4;
    *(_QWORD *)(result + 24) = v5;
    v6 = &unk_2571E2190;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = result;
  return result;
}

uint64_t sub_24222DD90(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = sub_2421C71E8;
  return v5();
}

void sub_24222DDE4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = &unk_2571E2180;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_2421C7064(v1);
  sub_24222DF10((uint64_t)v4, v3);
}

uint64_t sub_24222DE64(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_2421C71E8;
  return v4();
}

uint64_t sub_24222DEBC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168));
  OUTLINED_FUNCTION_9();
  v2 = *v1;
  sub_2421C7064(*v1);
  return v2;
}

void sub_24222DF10(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;

  OUTLINED_FUNCTION_61_6(*(_QWORD *)(*v2 + 168));
  OUTLINED_FUNCTION_9();
  v5 = *v2;
  *v2 = a1;
  v2[1] = a2;
  sub_2421C6244(v5);
  OUTLINED_FUNCTION_35_6();
}

void sub_24222DF54()
{
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_34();
}

void GreedyBufferingAsyncSequence.invalidator.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_56();
  sub_2421C7064(v0);
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

uint64_t GreedyBufferingAsyncSequence.__allocating_init(backing:fillBuffer:onTermination:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  GreedyBufferingAsyncSequence.init(backing:fillBuffer:onTermination:)(a1, a2, a3, a4, a5);
  return v10;
}

char *GreedyBufferingAsyncSequence.init(backing:fillBuffer:onTermination:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v27;

  v6 = v5;
  v12 = *(_QWORD *)v6;
  swift_defaultActor_initialize();
  *(_QWORD *)&v6[*(_QWORD *)(*(_QWORD *)v6 + 128)] = 0;
  v13 = *(_QWORD *)(*(_QWORD *)v6 + 136);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA478);
  v14 = OUTLINED_FUNCTION_22_2();
  *(_DWORD *)(v14 + 20) = 0;
  *(_BYTE *)(v14 + 16) = 0;
  *(_QWORD *)&v6[v13] = v14;
  v15 = *(_QWORD *)(*(_QWORD *)v6 + 144);
  v27 = v12;
  sub_2422727AC();
  v16 = sub_2422727B8();
  MEMORY[0x2426A62C4](MEMORY[0x24BEE12E0], v16);
  *(_QWORD *)&v6[v15] = sub_242272404();
  *(_QWORD *)&v6[*(_QWORD *)(*(_QWORD *)v6 + 152)] = 0;
  *(_QWORD *)&v6[*(_QWORD *)(*(_QWORD *)v6 + 160)] = 0;
  v17 = (uint64_t *)&v6[*(_QWORD *)(*(_QWORD *)v6 + 168)];
  *v17 = 0;
  v17[1] = 0;
  v18 = *(_QWORD *)(v12 + 88);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(&v6[*(_QWORD *)(*(_QWORD *)v6 + 120)], a1, v18);
  *((_QWORD *)v6 + 14) = a2;
  *((_QWORD *)v6 + 15) = a3;
  OUTLINED_FUNCTION_9();
  v20 = *v17;
  *v17 = a4;
  v17[1] = a5;
  swift_retain();
  sub_2421C7064(a4);
  sub_2421C6244(v20);
  v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v27 + 96) + 8))(v18);
  v23 = v22;
  sub_2421C6244(a4);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a1, v18);
  v24 = (uint64_t *)&v6[*(_QWORD *)(*(_QWORD *)v6 + 176)];
  *v24 = v21;
  v24[1] = v23;
  return v6;
}

uint64_t *GreedyBufferingAsyncSequence.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;

  v1 = *v0;
  v2 = (uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 176));
  if (*v2)
    ((void (*)(void))*v2)();
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 120));
  sub_242230954(*(id *)((char *)v0 + *(_QWORD *)(*v0 + 128)));
  OUTLINED_FUNCTION_90_5();
  OUTLINED_FUNCTION_90_5();
  OUTLINED_FUNCTION_90_5();
  sub_2421C6244(*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 168)));
  sub_2421C6244(*v2);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t GreedyBufferingAsyncSequence.__deallocating_deinit()
{
  GreedyBufferingAsyncSequence.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t sub_24222E2D4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *v1;
  return OUTLINED_FUNCTION_130_0();
}

uint64_t sub_24222E2F0()
{
  uint64_t v0;
  void (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  if (*(_QWORD *)(v0 + 40))
  {
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_58();
  }
  sub_24222DC90(2);
  v1 = *(void (**)(void))(*(_QWORD *)(v0 + 48) + *(_QWORD *)(**(_QWORD **)(v0 + 48) + 176));
  if (v1)
    v1();
  v2 = sub_24222DEBC();
  *(_QWORD *)(v0 + 64) = v2;
  if (!v2)
    return OUTLINED_FUNCTION_27_7(*(uint64_t (**)(void))(v0 + 8));
  v4 = (int *)v2;
  *(_QWORD *)(v0 + 72) = v3;
  sub_24222DF10(0, 0);
  v7 = (uint64_t (*)(void))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  OUTLINED_FUNCTION_102_2(v5, (uint64_t)sub_24222E414);
  return OUTLINED_FUNCTION_72_1(v7);
}

uint64_t sub_24222E414()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_24222E44C()
{
  uint64_t v0;

  sub_2421C6244(*(_QWORD *)(v0 + 64));
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24222E474(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[5] = a1;
  v2[6] = v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v2[7] = v3;
  v4 = sub_242272938();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = OUTLINED_FUNCTION_17();
  v2[11] = *(_QWORD *)(v3 - 8);
  v2[12] = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_42();
}

void sub_24222E4DC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 48);
  v2 = (void *)sub_24222DC60();
  OUTLINED_FUNCTION_67_4(v2);
  if (v8)
  {
    if (qword_2543AA570 != -1)
      swift_once();
    v3 = OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_22_6(v3, (uint64_t)qword_2543AA558);
    v4 = OUTLINED_FUNCTION_17_5();
    if (OUTLINED_FUNCTION_137_0(v4))
    {
      v5 = (_WORD *)OUTLINED_FUNCTION_11_6();
      OUTLINED_FUNCTION_164_0(v5);
      OUTLINED_FUNCTION_116_2(&dword_2421B5000, v6, v7, "Appending element to a GreedyBufferingAsyncSequence after it's been terminated");
      OUTLINED_FUNCTION_2();
    }

LABEL_12:
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_27_7(*(uint64_t (**)(void))(v0 + 8));
    return;
  }
  OUTLINED_FUNCTION_38_5();
  if (!v8)
  {
    v12 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 80);
    v14 = *(_QWORD *)(v0 + 64);
    v15 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v9 + v10) = v11;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v13, v15, v14);
    OUTLINED_FUNCTION_40_5();
    if (v16)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 104) = v17;
      *v17 = v0;
      v17[1] = sub_24222E680;
      sub_24222E2D4(0);
      return;
    }
    v19 = *(_QWORD *)(v0 + 88);
    v18 = *(_QWORD *)(v0 + 96);
    v20 = *(_QWORD *)(v0 + 56);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 32))(v18, *(_QWORD *)(v0 + 80), v20);
    OUTLINED_FUNCTION_9();
    sub_2422723F8();
    sub_2422723D4();
    OUTLINED_FUNCTION_65_8();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_24222E680()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  OUTLINED_FUNCTION_77(&v2);
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  return OUTLINED_FUNCTION_8((uint64_t (*)(void))v0[1]);
}

uint64_t sub_24222E6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v4[9] = *v3;
  return OUTLINED_FUNCTION_130_0();
}

void sub_24222E6E4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = (void *)sub_24222DC60();
  v3 = *(void **)(v1 + 80);
  sub_242230954(v2);
  if ((unint64_t)v2 >= 2)
  {
    if (qword_2543AA570 != -1)
      swift_once();
    v4 = OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_22_6(v4, (uint64_t)qword_2543AA558);
    v5 = OUTLINED_FUNCTION_17_5();
    if (OUTLINED_FUNCTION_137_0(v5))
    {
      v6 = (_WORD *)OUTLINED_FUNCTION_11_6();
      OUTLINED_FUNCTION_164_0(v6);
      OUTLINED_FUNCTION_116_2(&dword_2421B5000, v7, v8, "Appending elements to a GreedyBufferingAsyncSequence after it's been terminated");
      OUTLINED_FUNCTION_2();
    }

    goto LABEL_9;
  }
  OUTLINED_FUNCTION_38_5();
  if (!v12)
  {
    *(_QWORD *)(v9 + v10) = v11;
    OUTLINED_FUNCTION_9();
    sub_2422723F8();
    sub_2422723C8();
    OUTLINED_FUNCTION_65_8();
LABEL_9:
    OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v0 + 8));
    return;
  }
  __break(1u);
}

uint64_t sub_24222E808(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_130_0();
}

void sub_24222E81C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = *(void **)(v0 + 24);
  v2 = (void *)sub_24222DC60();
  OUTLINED_FUNCTION_67_4(v2);
  if (v8)
  {
    if (qword_2543AA570 != -1)
      swift_once();
    v3 = OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_22_6(v3, (uint64_t)qword_2543AA558);
    v4 = OUTLINED_FUNCTION_17_5();
    if (OUTLINED_FUNCTION_137_0(v4))
    {
      v5 = (_WORD *)OUTLINED_FUNCTION_11_6();
      OUTLINED_FUNCTION_164_0(v5);
      OUTLINED_FUNCTION_116_2(&dword_2421B5000, v6, v7, "Failing a GreedyBufferingAsyncSequence after it's been terminated");
      OUTLINED_FUNCTION_2();
    }

    OUTLINED_FUNCTION_1_1(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_38_5();
    if (v8)
    {
      __break(1u);
    }
    else
    {
      v12 = *(_QWORD *)(v0 + 16);
      *(_QWORD *)(v9 + v10) = v11;
      v13 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 32) = v13;
      *v13 = v0;
      v13[1] = sub_24222AE80;
      sub_24222E2D4(v12);
    }
  }
}

uint64_t sub_24222E910()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_130_0();
}

uint64_t sub_24222E924()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v1 = (uint64_t *)v0[2];
  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  v0[3] = v3;
  v0[4] = *(uint64_t *)((char *)v1 + v3);
  v4 = *(uint64_t *)((char *)v1 + *(_QWORD *)(v2 + 136));
  OUTLINED_FUNCTION_54_7();
  OUTLINED_FUNCTION_53_4();
  if ((_DWORD)v4 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A6E10);
    OUTLINED_FUNCTION_33_7();
  }
  v5 = (_QWORD *)OUTLINED_FUNCTION_14_8();
  v0[5] = v5;
  v6 = OUTLINED_FUNCTION_28_9(v5, (uint64_t)sub_24222E9A8);
  return OUTLINED_FUNCTION_15_6(v6, v7);
}

uint64_t sub_24222E9A8()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_24222E9E0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(v1 + 32) == *(_QWORD *)(*(_QWORD *)(v1 + 16) + *(_QWORD *)(v1 + 24)))
  {
    if (qword_2543AA570 != -1)
      swift_once();
    v2 = OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_22_6(v2, (uint64_t)qword_2543AA558);
    v3 = OUTLINED_FUNCTION_17_5();
    if (OUTLINED_FUNCTION_137_0(v3))
    {
      v4 = (_WORD *)OUTLINED_FUNCTION_11_6();
      OUTLINED_FUNCTION_164_0(v4);
      OUTLINED_FUNCTION_116_2(&dword_2421B5000, v5, v6, "GreedyBufferingAsyncSequence fillBuffer block didn't append any items");
      OUTLINED_FUNCTION_2();
    }

  }
  return OUTLINED_FUNCTION_1_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_24222EA84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_130_0();
}

uint64_t sub_24222EA98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = v0[2];
  v0[3] = *(_QWORD *)(v1 + 192);
  v2 = *(_QWORD *)(v1 + 176);
  OUTLINED_FUNCTION_54_7();
  OUTLINED_FUNCTION_53_4();
  if ((_DWORD)v2 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A6E10);
    OUTLINED_FUNCTION_33_7();
  }
  v3 = (_QWORD *)OUTLINED_FUNCTION_14_8();
  v0[4] = v3;
  v4 = OUTLINED_FUNCTION_28_9(v3, (uint64_t)sub_24222EB0C);
  return OUTLINED_FUNCTION_15_6(v4, v5);
}

uint64_t sub_24222EB0C()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_24222EB4C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(v1 + 24) == *(_QWORD *)(*(_QWORD *)(v1 + 16) + 192))
  {
    if (qword_2543AA570 != -1)
      swift_once();
    v2 = OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_22_6(v2, (uint64_t)qword_2543AA558);
    v3 = OUTLINED_FUNCTION_17_5();
    if (OUTLINED_FUNCTION_137_0(v3))
    {
      v4 = (_WORD *)OUTLINED_FUNCTION_11_6();
      OUTLINED_FUNCTION_164_0(v4);
      OUTLINED_FUNCTION_116_2(&dword_2421B5000, v5, v6, "GreedyBufferingAsyncSequence fillBuffer block didn't append any items");
      OUTLINED_FUNCTION_2();
    }

  }
  return OUTLINED_FUNCTION_1_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_24222EBEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_130_0();
}

uint64_t sub_24222EC00()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  v1 = (uint64_t *)v0[2];
  v2 = *v1;
  v0[3] = *(uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 152));
  v3 = *(uint64_t *)((char *)v1 + *(_QWORD *)(v2 + 136));
  OUTLINED_FUNCTION_54_7();
  OUTLINED_FUNCTION_53_4();
  if ((_DWORD)v3 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A6E10);
    OUTLINED_FUNCTION_33_7();
  }
  v4 = (_QWORD *)OUTLINED_FUNCTION_14_8();
  v0[4] = v4;
  v5 = OUTLINED_FUNCTION_28_9(v4, (uint64_t)sub_24222EC80);
  return OUTLINED_FUNCTION_15_6(v5, v6);
}

uint64_t sub_24222EC80()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_24222ECC0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  _WORD *v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(v1 + 24) == *(_QWORD *)(*(_QWORD *)(v1 + 16) + *(_QWORD *)(**(_QWORD **)(v1 + 16) + 152)))
  {
    if (qword_2543AA570 != -1)
      swift_once();
    v2 = OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_22_6(v2, (uint64_t)qword_2543AA558);
    v3 = OUTLINED_FUNCTION_17_5();
    if (OUTLINED_FUNCTION_137_0(v3))
    {
      v4 = (_WORD *)OUTLINED_FUNCTION_11_6();
      OUTLINED_FUNCTION_164_0(v4);
      OUTLINED_FUNCTION_116_2(&dword_2421B5000, v5, v6, "GreedyBufferingAsyncSequence fillBuffer block didn't append any items");
      OUTLINED_FUNCTION_2();
    }

  }
  return OUTLINED_FUNCTION_1_1(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_24222ED68@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int EnumTagSinglePayload;
  uint64_t result;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E2170);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2422322AC(a1, (uint64_t)v6);
  v7 = sub_2422728CC();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7);
  if (EnumTagSinglePayload == 1)
  {
    result = sub_2422322F4((uint64_t)v6);
  }
  else
  {
    sub_2422728C0();
    result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  *a2 = EnumTagSinglePayload == 1;
  return result;
}

void sub_24222EE40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v1 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)sub_24222DC60();
  v12 = *(_OWORD *)(v1 + 80);
  v6 = *(_QWORD *)(v1 + 96);
  sub_242230954(v5);
  if ((unint64_t)v5 <= 1)
  {
    v7 = sub_24222DD04();
    swift_release();
    if (!v7)
    {
      sub_24222DC90(0);
      v8 = sub_242272848();
      __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v8);
      v9 = OUTLINED_FUNCTION_22_2();
      swift_weakInit();
      v10 = OUTLINED_FUNCTION_22_2();
      *(_QWORD *)(v10 + 16) = 0;
      *(_QWORD *)(v10 + 24) = 0;
      *(_OWORD *)(v10 + 32) = v12;
      *(_QWORD *)(v10 + 48) = v6;
      *(_QWORD *)(v10 + 56) = v9;
      sub_2421B7ACC();
      sub_24222DD14(v11);
    }
  }
}

uint64_t sub_24222EF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 64) = a4;
  return swift_task_switch();
}

uint64_t sub_24222EF68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t Strong;

  OUTLINED_FUNCTION_9();
  v1 = OUTLINED_FUNCTION_84_5();
  *(_QWORD *)(v0 + 72) = v1;
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v2;
    OUTLINED_FUNCTION_102_2(v2, (uint64_t)sub_24222F010);
    return OUTLINED_FUNCTION_42_6();
  }
  else
  {
    OUTLINED_FUNCTION_9();
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 96) = Strong;
    if (Strong)
      return OUTLINED_FUNCTION_7();
    else
      return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_24222F010()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_24222F044()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = OUTLINED_FUNCTION_68_4();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_24222F078()
{
  uint64_t v0;
  void *v1;
  uint64_t Strong;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(void **)(v0 + 88);
  swift_release();
  sub_242230954(v1);
  if (v1 || (v4 = OUTLINED_FUNCTION_84_5(), (*(_QWORD *)(v0 + 72) = v4) == 0))
  {
    OUTLINED_FUNCTION_9();
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 96) = Strong;
    if (Strong)
      return OUTLINED_FUNCTION_7();
    else
      return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v5;
    OUTLINED_FUNCTION_102_2(v5, (uint64_t)sub_24222F010);
    return OUTLINED_FUNCTION_42_6();
  }
}

uint64_t sub_24222F124()
{
  uint64_t v0;

  sub_24222F150();
  OUTLINED_FUNCTION_121_0();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24222F150()
{
  return sub_24222DD14(0);
}

uint64_t sub_24222F158()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  *(_QWORD *)(v1 + 40) = *v0;
  return OUTLINED_FUNCTION_130_0();
}

uint64_t sub_24222F174()
{
  uint8_t *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  char v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  if (qword_2543AA570 != -1)
    swift_once();
  v2 = OUTLINED_FUNCTION_54();
  *(_QWORD *)(v1 + 48) = __swift_project_value_buffer(v2, (uint64_t)qword_2543AA558);
  v3 = sub_242272494();
  v4 = sub_24227292C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (_WORD *)OUTLINED_FUNCTION_11_6();
    OUTLINED_FUNCTION_164_0(v5);
    _os_log_impl(&dword_2421B5000, v3, v4, "Cancelling sequence buffering and waiting for upstream sequence termination", v0, 2u);
    OUTLINED_FUNCTION_2();
  }
  v6 = *(_QWORD *)(v1 + 32);

  v7 = *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 136));
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 20));
  *(_BYTE *)(v7 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 20));
  if (sub_24222DD04())
  {
    sub_242272878();
    OUTLINED_FUNCTION_121_0();
  }
  v8 = *(_QWORD *)(v1 + 40);
  v9 = (void *)sub_24222DC60();
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(v8 + 80);
  *(_QWORD *)(v1 + 72) = *(_QWORD *)(v8 + 96);
  sub_242230954(v9);
  if ((unint64_t)v9 > 1)
  {
LABEL_11:
    OUTLINED_FUNCTION_55_7();
    v13 = sub_242272494();
    v14 = sub_24227292C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = *(_QWORD *)(v1 + 64);
      v23 = *(_QWORD *)(v1 + 72);
      v16 = *(_QWORD *)(v1 + 56);
      v17 = (_DWORD *)OUTLINED_FUNCTION_10();
      v24 = OUTLINED_FUNCTION_10();
      *v17 = 136315138;
      *(_QWORD *)(v1 + 16) = sub_24222DC60();
      v18 = type metadata accessor for GreedyBufferingAsyncSequence.State(0, v16, v15, v23);
      MEMORY[0x2426A62C4](&unk_24227CB58, v18);
      v19 = sub_2422726E0();
      *(_QWORD *)(v1 + 24) = sub_2421BB36C(v19, v20, &v24);
      sub_242272950();
      OUTLINED_FUNCTION_34_3();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_73_6(&dword_2421B5000, v13, v14, "Sequence buffering terminated post-cancellation in state: %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_2();
    }

    OUTLINED_FUNCTION_34_3();
    return OUTLINED_FUNCTION_20(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    while (1)
    {
      sub_24222EE40();
      v10 = sub_24222DD04();
      *(_QWORD *)(v1 + 80) = v10;
      if (v10)
        break;
      v11 = (void *)sub_24222DC60();
      OUTLINED_FUNCTION_67_4(v11);
      if (v12)
        goto LABEL_11;
    }
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 88) = v22;
    *v22 = v1;
    v22[1] = sub_24222F468;
    return OUTLINED_FUNCTION_21_6();
  }
}

uint64_t sub_24222F468()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_121_0();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_24222F4A8()
{
  uint64_t v0;
  void *v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  while (1)
  {
    v1 = (void *)sub_24222DC60();
    OUTLINED_FUNCTION_67_4(v1);
    if (v2)
      break;
    sub_24222EE40();
    v3 = sub_24222DD04();
    *(_QWORD *)(v0 + 80) = v3;
    if (v3)
    {
      v4 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 88) = v4;
      *v4 = v0;
      v4[1] = sub_24222F468;
      return OUTLINED_FUNCTION_21_6();
    }
  }
  OUTLINED_FUNCTION_55_7();
  v6 = sub_242272494();
  v7 = sub_24227292C();
  if (os_log_type_enabled(v6, v7))
  {
    v13 = *(_QWORD *)(v0 + 64);
    v14 = *(_QWORD *)(v0 + 72);
    v8 = *(_QWORD *)(v0 + 56);
    v9 = (_DWORD *)OUTLINED_FUNCTION_10();
    v15 = OUTLINED_FUNCTION_10();
    *v9 = 136315138;
    *(_QWORD *)(v0 + 16) = sub_24222DC60();
    v10 = type metadata accessor for GreedyBufferingAsyncSequence.State(0, v8, v13, v14);
    MEMORY[0x2426A62C4](&unk_24227CB58, v10);
    v11 = sub_2422726E0();
    *(_QWORD *)(v0 + 24) = sub_2421BB36C(v11, v12, &v15);
    sub_242272950();
    OUTLINED_FUNCTION_34_3();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_73_6(&dword_2421B5000, v6, v7, "Sequence buffering terminated post-cancellation in state: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_2();
  }

  OUTLINED_FUNCTION_34_3();
  return OUTLINED_FUNCTION_20(*(uint64_t (**)(void))(v0 + 8));
}

_BYTE *sub_24222F684(_BYTE *result)
{
  *result = 1;
  return result;
}

uint64_t sub_24222F690@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *v1;
  v4 = sub_24222DC60();
  if (v4 >= 2)
  {
    if (v4 != 2)
      return swift_willThrow();
    sub_24222DCB0();
    v9 = OUTLINED_FUNCTION_39_5();
    MEMORY[0x2426A62C4](MEMORY[0x24BE18D68], v9);
    OUTLINED_FUNCTION_59_7();
    OUTLINED_FUNCTION_87_5();
    if ((v1 & 1) != 0)
    {
      v10 = a1;
      v11 = 1;
LABEL_9:
      __swift_storeEnumTagSinglePayload(v10, v11, 1, v3);
      v6 = OUTLINED_FUNCTION_91_5();
      v7 = a1;
      v8 = 0;
      return __swift_storeEnumTagSinglePayload(v7, v8, 1, v6);
    }
LABEL_8:
    swift_beginAccess();
    sub_2422723BC();
    swift_endAccess();
    v10 = a1;
    v11 = 0;
    goto LABEL_9;
  }
  sub_24222DCB0();
  v5 = OUTLINED_FUNCTION_39_5();
  MEMORY[0x2426A62C4](MEMORY[0x24BE18D68], v5);
  OUTLINED_FUNCTION_59_7();
  OUTLINED_FUNCTION_87_5();
  if ((v1 & 1) == 0)
    goto LABEL_8;
  v6 = OUTLINED_FUNCTION_91_5();
  v7 = a1;
  v8 = 1;
  return __swift_storeEnumTagSinglePayload(v7, v8, 1, v6);
}

uint64_t sub_24222F7D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_130_0();
}

uint64_t sub_24222F7EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v7;
  uint64_t (*v8)(void);

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 + 200);
  v0[3] = v2;
  if (v2)
  {
    v3 = OUTLINED_FUNCTION_60_6();
    v0[4] = v3;
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = OUTLINED_FUNCTION_60_6();
    v0[5] = v4;
    *(_QWORD *)(v4 + 16) = v1;
    *(_QWORD *)(v4 + 24) = v2;
    sub_24223226C(&qword_2571E2160, &qword_2571E2168, (uint64_t)&protocol conformance descriptor for GreedyBufferingAsyncSequence<A, B>);
    swift_retain();
    v5 = (_QWORD *)swift_task_alloc();
    v0[6] = v5;
    *v5 = v0;
    v5[1] = sub_24222F900;
    OUTLINED_FUNCTION_79_8();
    return sub_242272C2C();
  }
  else
  {
    v7 = (_QWORD *)OUTLINED_FUNCTION_23();
    v0[7] = v7;
    *v7 = v0;
    v7[1] = sub_24222F97C;
    return OUTLINED_FUNCTION_18_5(v8);
  }
}

uint64_t sub_24222F900()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  return OUTLINED_FUNCTION_4_5();
}

uint64_t sub_24222F94C()
{
  uint64_t v0;

  sub_2422617FC();
  OUTLINED_FUNCTION_28();
  return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24222F97C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24222F9A8()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  *(_QWORD *)(v1 + 24) = *v0;
  return OUTLINED_FUNCTION_130_0();
}

uint64_t sub_24222F9C4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v10;

  v1 = sub_24222DD04();
  v0[4] = v1;
  if (v1)
  {
    v2 = v1;
    v3 = v0[2];
    v4 = (uint64_t *)v0[3];
    v5 = OUTLINED_FUNCTION_60_6();
    v0[5] = v5;
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v2;
    v6 = OUTLINED_FUNCTION_60_6();
    v0[6] = v6;
    *(_QWORD *)(v6 + 16) = v3;
    *(_QWORD *)(v6 + 24) = v2;
    v7 = type metadata accessor for GreedyBufferingAsyncSequence(255, v4[10], v4[11], v4[12]);
    MEMORY[0x2426A62C4](&protocol conformance descriptor for GreedyBufferingAsyncSequence<A, B>, v7);
    v8 = (_QWORD *)swift_task_alloc();
    v0[7] = v8;
    *v8 = v0;
    v8[1] = sub_24222FAD4;
    OUTLINED_FUNCTION_79_8();
    return sub_242272C2C();
  }
  else
  {
    v10 = (_QWORD *)swift_task_alloc();
    v0[8] = v10;
    *v10 = v0;
    v10[1] = sub_24222FB54;
    return sub_24222EBEC();
  }
}

uint64_t sub_24222FAD4()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  return OUTLINED_FUNCTION_4_5();
}

uint64_t sub_24222FB20()
{
  uint64_t v0;

  sub_24222EE40();
  OUTLINED_FUNCTION_28();
  return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24222FB54()
{
  uint64_t v0;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24222FB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  return swift_task_switch();
}

uint64_t sub_24222FB94()
{
  uint64_t v0;
  _QWORD *v1;

  sub_24222DCA4(1);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_24222FBF0;
  return OUTLINED_FUNCTION_43_4();
}

uint64_t sub_24222FBF0()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_24222FC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  return swift_task_switch();
}

uint64_t sub_24222FC44()
{
  uint64_t v0;
  _QWORD *v1;

  sub_24222DC90(1);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_24222FCA0;
  return OUTLINED_FUNCTION_43_4();
}

uint64_t sub_24222FCA0()
{
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_24222FCE0(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;

  if (qword_2543AA570 != -1)
    swift_once();
  v2 = sub_2422724AC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543AA558);
  v3 = sub_242272494();
  v4 = sub_24227292C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_2421B5000, v3, v4, "Cancelling buffering task", v5, 2u);
    MEMORY[0x2426A6378](v5, -1, -1);
  }

  v6 = *(_QWORD *)(a1 + 176);
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 20));
  *(_BYTE *)(v6 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 20));
  return sub_242272878();
}

uint64_t sub_24222FDFC(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;

  if (qword_2543AA570 != -1)
    swift_once();
  v2 = sub_2422724AC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543AA558);
  v3 = sub_242272494();
  v4 = sub_24227292C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_2421B5000, v3, v4, "Cancelling buffering task", v5, 2u);
    MEMORY[0x2426A6378](v5, -1, -1);
  }

  v6 = *(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 136));
  os_unfair_lock_lock((os_unfair_lock_t)(v6 + 20));
  *(_BYTE *)(v6 + 16) = 1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 20));
  return sub_242272878();
}

uint64_t sub_24222FF20(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v2[4] = v4;
  v5 = type metadata accessor for GreedyBufferingAsyncSequence.AvailableResult(0, v4, *(_QWORD *)(v3 + 88), *(_QWORD *)(v3 + 96));
  v2[5] = v5;
  v2[6] = *(_QWORD *)(v5 - 8);
  v2[7] = OUTLINED_FUNCTION_11();
  v2[8] = OUTLINED_FUNCTION_22();
  v2[9] = OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_24222FF88()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  char v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  _QWORD *v7;
  uint64_t v9;
  void (*v10)(uint64_t);

  OUTLINED_FUNCTION_83_6(v1[9]);
  v1[10] = v0;
  v2 = v1[9];
  if (v0)
  {
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_57();
    OUTLINED_FUNCTION_43();
    v3 = (uint64_t (*)(void))v1[1];
  }
  else
  {
    v1[11] = sub_242272938();
    OUTLINED_FUNCTION_40_5();
    if (v4)
    {
      v5 = v1[5];
      v6 = *(void (**)(uint64_t, uint64_t))(v1[6] + 8);
      v1[12] = v6;
      v6(v2, v5);
      v7 = (_QWORD *)swift_task_alloc();
      v1[13] = v7;
      *v7 = v1;
      v7[1] = sub_24223006C;
      return sub_24222F9A8();
    }
    v9 = OUTLINED_FUNCTION_57_6();
    v10(v9);
    OUTLINED_FUNCTION_360();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_57();
    v3 = (uint64_t (*)(void))v1[1];
  }
  return OUTLINED_FUNCTION_72_1(v3);
}

uint64_t sub_24223006C()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_2422300A4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  os_log_type_t v12;
  _WORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 80);
  sub_24222F690(*(_QWORD *)(v0 + 64));
  if (!v1)
  {
    OUTLINED_FUNCTION_40_5();
    if (v2)
    {
      OUTLINED_FUNCTION_69_8();
      if (qword_2543AA570 != -1)
        swift_once();
      v3 = OUTLINED_FUNCTION_54();
      v4 = __swift_project_value_buffer(v3, (uint64_t)qword_2543AA558);
      v5 = sub_242272494();
      v6 = sub_24227292C();
      v7 = v6;
      if (os_log_type_enabled(v5, v6))
      {
        v8 = (uint8_t *)OUTLINED_FUNCTION_11_6();
        *(_WORD *)v8 = 0;
        _os_log_impl(&dword_2421B5000, v5, (os_log_type_t)v7, "Greedy buffer was not filled as it should have been. Retrying up to 10 times.", v8, 2u);
        OUTLINED_FUNCTION_2();
      }

      v9 = 10;
      while (1)
      {
        OUTLINED_FUNCTION_83_6(*(_QWORD *)(v0 + 56));
        if (v7)
          break;
        v7 = *(_QWORD *)(v0 + 88);
        v10 = *(_QWORD *)(v0 + 56);
        if (__swift_getEnumTagSinglePayload(v10, 1, v7) != 1)
        {
          v18 = *(_QWORD *)(v0 + 16);
          v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
          v19 = v10;
          v20 = v7;
          goto LABEL_17;
        }
        OUTLINED_FUNCTION_69_8();
        if (!--v9)
        {
          v11 = (void *)v4;
          sub_242272494();
          v12 = OUTLINED_FUNCTION_17_5();
          if (OUTLINED_FUNCTION_137_0(v12))
          {
            v13 = (_WORD *)OUTLINED_FUNCTION_11_6();
            OUTLINED_FUNCTION_164_0(v13);
            OUTLINED_FUNCTION_116_2(&dword_2421B5000, v14, v15, "Greedy buffer filling failed after 10 retries. Terminating sequence early.");
            OUTLINED_FUNCTION_2();
          }
          v16 = *(_QWORD *)(v0 + 32);
          v17 = *(_QWORD *)(v0 + 16);

          __swift_storeEnumTagSinglePayload(v17, 1, 1, v16);
          break;
        }
      }
    }
    else
    {
      v18 = OUTLINED_FUNCTION_57_6();
LABEL_17:
      v21(v18, v19, v20);
    }
  }
  OUTLINED_FUNCTION_360();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  return OUTLINED_FUNCTION_72_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_242230278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[23] = a3;
  v4[24] = a4;
  v4[21] = a1;
  v4[22] = a2;
  return OUTLINED_FUNCTION_130_0();
}

uint64_t sub_24223028C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  void (*v5)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)(void);
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v1 + 168);
  if (v2 > 1)
  {
    if (v2 == 2)
    {
      v5 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v0 + 184);
      OUTLINED_FUNCTION_9();
      v6 = *(_QWORD *)(v1 + 184);
      *(_QWORD *)(v0 + 40) = OUTLINED_FUNCTION_82_8();
      *(_QWORD *)(v0 + 48) = OUTLINED_FUNCTION_88_7(&qword_2571E2138, v7, MEMORY[0x24BE18D60]);
      *(_QWORD *)(v0 + 16) = v6;
      OUTLINED_FUNCTION_55_7();
      v5(&v10, v0 + 16, 1);
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
      OUTLINED_FUNCTION_28();
      OUTLINED_FUNCTION_9();
      swift_release();
      v8 = (_QWORD *)sub_2422723B0();
      OUTLINED_FUNCTION_62_6(v8);
      OUTLINED_FUNCTION_44_5();
      return OUTLINED_FUNCTION_25_5(v9);
    }
    else
    {
      MEMORY[0x2426A61F8](*(_QWORD *)(v1 + 168));
      swift_willThrow();
      return OUTLINED_FUNCTION_25_5(*(uint64_t (**)(void))(v0 + 8));
    }
  }
  else
  {
    sub_242232200(*(_QWORD *)(v1 + 168));
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v3;
    *v3 = v0;
    v3[1] = sub_2422303D4;
    return sub_24222F7D8();
  }
}

uint64_t sub_2422303D4()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_24223040C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void (*v3)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(void);
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v1 + 168);
  if (v2 >= 2)
  {
    if (v2 != 2)
    {
      MEMORY[0x2426A61F8](*(_QWORD *)(v1 + 168));
      swift_willThrow();
      return OUTLINED_FUNCTION_25_5(*(uint64_t (**)(void))(v0 + 8));
    }
    v3 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v0 + 184);
    OUTLINED_FUNCTION_9();
    v10 = *(_QWORD *)(v1 + 184);
    *(_QWORD *)(v0 + 40) = OUTLINED_FUNCTION_82_8();
    v12 = OUTLINED_FUNCTION_88_7(&qword_2571E2138, v11, MEMORY[0x24BE18D60]);
    *(_QWORD *)(v0 + 16) = v10;
    v7 = v0 + 16;
    *(_QWORD *)(v0 + 48) = v12;
    OUTLINED_FUNCTION_55_7();
    v8 = v0 + 16;
    v9 = 1;
  }
  else
  {
    v3 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v0 + 184);
    OUTLINED_FUNCTION_9();
    v4 = *(_QWORD *)(v1 + 184);
    *(_QWORD *)(v0 + 80) = OUTLINED_FUNCTION_82_8();
    v6 = OUTLINED_FUNCTION_88_7(&qword_2571E2138, v5, MEMORY[0x24BE18D60]);
    *(_QWORD *)(v0 + 56) = v4;
    v7 = v0 + 56;
    *(_QWORD *)(v0 + 88) = v6;
    OUTLINED_FUNCTION_55_7();
    v8 = v0 + 56;
    v9 = 0;
  }
  v3(&v16, v8, v9);
  __swift_destroy_boxed_opaque_existential_1Tm(v7);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_9();
  swift_release();
  v13 = (_QWORD *)sub_2422723B0();
  OUTLINED_FUNCTION_62_6(v13);
  OUTLINED_FUNCTION_44_5();
  return OUTLINED_FUNCTION_25_5(v15);
}

uint64_t sub_242230568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  v5[10] = *v4;
  v5[11] = *(_QWORD *)(a4 - 8);
  v5[12] = OUTLINED_FUNCTION_11();
  v5[13] = OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2422305BC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  unint64_t v5;
  uint64_t (*v6)(void);

  v2 = (void *)OUTLINED_FUNCTION_68_4();
  if ((unint64_t)v2 <= 1)
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 112) = v3;
    *v3 = v1;
    v3[1] = sub_2422306D8;
    return sub_24222F9A8();
  }
  sub_242230954(v2);
  v5 = OUTLINED_FUNCTION_68_4();
  if (v5 >= 2)
  {
    if (v5 != 2)
    {
      OUTLINED_FUNCTION_89_5();
LABEL_10:
      swift_task_dealloc();
      OUTLINED_FUNCTION_57();
      v6 = *(uint64_t (**)(void))(v1 + 8);
      return OUTLINED_FUNCTION_18_5(v6);
    }
    OUTLINED_FUNCTION_51_6();
  }
  else
  {
    OUTLINED_FUNCTION_50_6();
  }
  OUTLINED_FUNCTION_72_7();
  OUTLINED_FUNCTION_71_6();
  if (v0)
    goto LABEL_10;
  OUTLINED_FUNCTION_30_5();
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_74_4();
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_65_8();
  swift_task_dealloc();
  OUTLINED_FUNCTION_43();
  v6 = *(uint64_t (**)(void))(v1 + 8);
  return OUTLINED_FUNCTION_18_5(v6);
}

uint64_t sub_2422306D8()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_242230710()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t (*v3)(void);

  v2 = OUTLINED_FUNCTION_68_4();
  if (v2 >= 2)
  {
    if (v2 != 2)
    {
      OUTLINED_FUNCTION_89_5();
LABEL_8:
      swift_task_dealloc();
      OUTLINED_FUNCTION_57();
      v3 = *(uint64_t (**)(void))(v1 + 8);
      return OUTLINED_FUNCTION_18_5(v3);
    }
    OUTLINED_FUNCTION_51_6();
  }
  else
  {
    OUTLINED_FUNCTION_50_6();
  }
  OUTLINED_FUNCTION_72_7();
  OUTLINED_FUNCTION_71_6();
  if (v0)
    goto LABEL_8;
  OUTLINED_FUNCTION_30_5();
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_74_4();
  OUTLINED_FUNCTION_49_5();
  OUTLINED_FUNCTION_65_8();
  swift_task_dealloc();
  OUTLINED_FUNCTION_43();
  v3 = *(uint64_t (**)(void))(v1 + 8);
  return OUTLINED_FUNCTION_18_5(v3);
}

uint64_t GreedyBufferingAsyncSequence.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2422307E8()
{
  return GreedyBufferingAsyncSequence.unownedExecutor.getter();
}

uint64_t sub_242230800(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421C60C4;
  return sub_24222FF20(a1);
}

uint64_t sub_242230854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  _QWORD *v7;

  *(_QWORD *)(v5 + 24) = a4;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 32) = v7;
  type metadata accessor for GreedyBufferingAsyncSequence(0, a5[10], a5[11], a5[12]);
  *v7 = v5;
  v7[1] = sub_2422308FC;
  return sub_242272818();
}

uint64_t sub_2422308FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_77(&v4);
  if (v0)
    **(_QWORD **)(v2 + 24) = *(_QWORD *)(v2 + 16);
  return ((uint64_t (*)(void))v1[1])();
}

void sub_242230954(id a1)
{
  if ((unint64_t)a1 >= 3)

}

uint64_t sub_242230964()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_242230988()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2422309B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 56);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421C60C4;
  v3[8] = v2;
  return OUTLINED_FUNCTION_7();
}

uint64_t type metadata accessor for GreedyBufferingAsyncSequence.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GreedyBufferingAsyncSequence.State);
}

uint64_t type metadata accessor for GreedyBufferingAsyncSequence.AvailableResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GreedyBufferingAsyncSequence.AvailableResult);
}

void sub_242230A24()
{
  JUMPOUT(0x2426A62C4);
}

uint64_t sub_242230A34(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2426A62C4](&protocol conformance descriptor for GreedyBufferingAsyncSequence<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242230A60(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2426A62C4](&protocol conformance descriptor for GreedyBufferingAsyncSequence<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_242230A8C()
{
  JUMPOUT(0x2426A62C4);
}

void sub_242230A9C()
{
  sub_24222DB88();
}

uint64_t dispatch thunk of GreedyBufferBacking.invalidator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_242230AE0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for GreedyBufferingAsyncSequence(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GreedyBufferingAsyncSequence);
}

uint64_t method lookup function for GreedyBufferingAsyncSequence()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.backing.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.backing.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.backing.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.onTermination.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.onTermination.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.onTermination.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.__allocating_init(backing:fillBuffer:onTermination:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 328))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.makeAsyncIterator()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.append(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_70_2(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_17_4(v2, v3);
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.append<A>(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v7 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v3 + 16) = v7;
  OUTLINED_FUNCTION_102_2(v7, (uint64_t)sub_2421C71E8);
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.fail(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_70_2(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_17_4(v2, v3);
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.startBuffering()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.clearBufferingTask()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.cancelBufferingAndWait()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 16) = v1;
  OUTLINED_FUNCTION_102_2(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_8(v3);
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.next()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v3 = OUTLINED_FUNCTION_23();
  v4 = (_QWORD *)OUTLINED_FUNCTION_92(v3);
  *v4 = v1;
  v4[1] = sub_2421C71E8;
  return v6(a1);
}

uint64_t dispatch thunk of GreedyBufferingAsyncSequence.fetchingAndConsumingBufferedResults<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = OUTLINED_FUNCTION_49();
  v10 = (_QWORD *)OUTLINED_FUNCTION_92(v9);
  *v10 = v4;
  v10[1] = sub_2421C71E8;
  return v12(a1, a2, a3, a4);
}

uint64_t sub_242230E20()
{
  uint64_t result;
  unint64_t v1;

  result = sub_242272938();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_242230E78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v13;
  int v14;
  int v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (v7 >= 2)
    v9 = v8;
  else
    v9 = v8 + 1;
  v10 = *(_DWORD *)(v6 + 80);
  if (v10 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v9 > 0x18)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    if (v7 > 1)
    {
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)) >= 2)
      {
LABEL_32:
        memcpy(a1, a2, v9);
        return a1;
      }
    }
    else if (*((_BYTE *)a2 + v8))
    {
      v14 = (*((unsigned __int8 *)a2 + v8) - 1) << (8 * v8);
      if (v8 > 3)
        v14 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v15 = v8;
        else
          v15 = 4;
        __asm { BR              X11 }
      }
      if (v14 != -1)
        goto LABEL_32;
    }
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
    }
    if (v7 <= 1)
      *((_BYTE *)a1 + v8) = 0;
  }
  return a1;
}

uint64_t sub_242231018(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned int *)(v4 + 84);
  if ((_DWORD)v5)
    v6 = *(_QWORD *)(v4 + 64);
  else
    v6 = *(_QWORD *)(v4 + 64) + 1;
  if (v5 > 1)
  {
    result = __swift_getEnumTagSinglePayload(result, v5, v3);
    if (result >= 2)
      return result;
    goto LABEL_15;
  }
  if (!*(_BYTE *)(result + v6))
    goto LABEL_15;
  v7 = (*(unsigned __int8 *)(result + v6) - 1) << (8 * v6);
  if (v6 > 3)
    v7 = 0;
  if ((_DWORD)v6)
  {
    if (v6 > 3)
      LODWORD(v6) = 4;
    __asm { BR              X11 }
  }
  if (v7 == -1)
  {
LABEL_15:
    result = __swift_getEnumTagSinglePayload(v2, 1, v3);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  return result;
}

void *sub_24223111C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  int v9;
  int v10;
  size_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (v7 > 1)
  {
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)) >= 2)
    {
LABEL_20:
      if (v7 >= 2)
        v11 = v8;
      else
        v11 = v8 + 1;
      memcpy(a1, a2, v11);
      return a1;
    }
  }
  else if (a2[v8])
  {
    v9 = (a2[v8] - 1) << (8 * v8);
    if (v8 > 3)
      v9 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X11 }
    }
    if (v9 != -1)
      goto LABEL_20;
  }
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  if (v7 <= 1)
    *((_BYTE *)a1 + v8) = 0;
  return a1;
}

unsigned __int8 *sub_24223127C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  int v15;
  int EnumTagSinglePayload;
  int v17;
  unsigned __int8 *v18;
  unsigned __int8 *v19;
  size_t v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (v7 <= 1)
  {
    v9 = 8 * v8;
    if (a1[v8])
    {
      v10 = (a1[v8] - 1) << v9;
      if (v8 > 3)
        v10 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v11 = v8;
        else
          v11 = 4;
        __asm { BR              X12 }
      }
      if (v10 != -1)
      {
        if (a2[v8] && (a2[v8] - 1) << v9 != -1)
        {
LABEL_40:
          if (v7 >= 2)
            v20 = v8;
          else
            v20 = v8 + 1;
          v18 = a1;
          v19 = a2;
          goto LABEL_44;
        }
        goto LABEL_46;
      }
    }
    if (a2[v8])
    {
      v14 = (a2[v8] - 1) << v9;
      if (v8 > 3)
        v14 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v15 = v8;
        else
          v15 = 4;
        __asm { BR              X11 }
      }
      if (v14 != -1)
      {
LABEL_30:
        if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5))
          (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
        goto LABEL_40;
      }
    }
LABEL_32:
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
    v17 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
    if (EnumTagSinglePayload)
    {
      if (!v17)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
        return a1;
      }
    }
    else
    {
      if (!v17)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 24))(a1, a2, v5);
        return a1;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    v18 = a1;
    v19 = a2;
    v20 = v8;
LABEL_44:
    memcpy(v18, v19, v20);
    return a1;
  }
  v12 = __swift_getEnumTagSinglePayload((uint64_t)a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16));
  v13 = __swift_getEnumTagSinglePayload((uint64_t)a2, v7, v5);
  if (v12 < 2)
  {
    if (v13 >= 2)
      goto LABEL_30;
    goto LABEL_32;
  }
  if (v13 >= 2)
    goto LABEL_40;
LABEL_46:
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  if (v7 <= 1)
    a1[v8] = 0;
  return a1;
}

void *sub_2422315C4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  int v9;
  int v10;
  size_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (v7 > 1)
  {
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)) >= 2)
    {
LABEL_20:
      if (v7 >= 2)
        v11 = v8;
      else
        v11 = v8 + 1;
      memcpy(a1, a2, v11);
      return a1;
    }
  }
  else if (a2[v8])
  {
    v9 = (a2[v8] - 1) << (8 * v8);
    if (v8 > 3)
      v9 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X11 }
    }
    if (v9 != -1)
      goto LABEL_20;
  }
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  if (v7 <= 1)
    *((_BYTE *)a1 + v8) = 0;
  return a1;
}

unsigned __int8 *sub_242231724(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  int v15;
  int EnumTagSinglePayload;
  int v17;
  unsigned __int8 *v18;
  unsigned __int8 *v19;
  size_t v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (v7 <= 1)
  {
    v9 = 8 * v8;
    if (a1[v8])
    {
      v10 = (a1[v8] - 1) << v9;
      if (v8 > 3)
        v10 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v11 = v8;
        else
          v11 = 4;
        __asm { BR              X12 }
      }
      if (v10 != -1)
      {
        if (a2[v8] && (a2[v8] - 1) << v9 != -1)
        {
LABEL_40:
          if (v7 >= 2)
            v20 = v8;
          else
            v20 = v8 + 1;
          v18 = a1;
          v19 = a2;
          goto LABEL_44;
        }
        goto LABEL_46;
      }
    }
    if (a2[v8])
    {
      v14 = (a2[v8] - 1) << v9;
      if (v8 > 3)
        v14 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v15 = v8;
        else
          v15 = 4;
        __asm { BR              X11 }
      }
      if (v14 != -1)
      {
LABEL_30:
        if (!__swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5))
          (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
        goto LABEL_40;
      }
    }
LABEL_32:
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v5);
    v17 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5);
    if (EnumTagSinglePayload)
    {
      if (!v17)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
        return a1;
      }
    }
    else
    {
      if (!v17)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 40))(a1, a2, v5);
        return a1;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    v18 = a1;
    v19 = a2;
    v20 = v8;
LABEL_44:
    memcpy(v18, v19, v20);
    return a1;
  }
  v12 = __swift_getEnumTagSinglePayload((uint64_t)a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16));
  v13 = __swift_getEnumTagSinglePayload((uint64_t)a2, v7, v5);
  if (v12 < 2)
  {
    if (v13 >= 2)
      goto LABEL_30;
    goto LABEL_32;
  }
  if (v13 >= 2)
    goto LABEL_40;
LABEL_46:
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v5))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v5);
  }
  if (v7 <= 1)
    a1[v8] = 0;
  return a1;
}

uint64_t sub_242231A6C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  char v14;
  int v15;
  unsigned int v16;
  int v17;
  unsigned int EnumTagSinglePayload;
  BOOL v19;
  uint64_t result;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = v6 - 1;
  if (!(_DWORD)v6)
    v7 = 0;
  v8 = v7 - 1;
  v9 = *(_QWORD *)(v5 + 64);
  if ((_DWORD)v6)
    v10 = v9;
  else
    v10 = v9 + 1;
  if (v6 >= 2)
    v11 = v8;
  else
    v11 = 0;
  if (v6 >= 2)
    v12 = v10;
  else
    v12 = v10 + 1;
  if (!a2)
    return 0;
  v13 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_29;
  v14 = 8 * v12;
  if (v12 > 3)
    goto LABEL_15;
  v16 = ((v13 + ~(-1 << v14)) >> v14) + 1;
  if (HIWORD(v16))
  {
    v15 = *(_DWORD *)(a1 + v12);
    if (v15)
      goto LABEL_22;
  }
  else
  {
    if (v16 <= 0xFF)
    {
      if (v16 < 2)
        goto LABEL_29;
LABEL_15:
      v15 = *(unsigned __int8 *)(a1 + v12);
      if (!*(_BYTE *)(a1 + v12))
        goto LABEL_29;
LABEL_22:
      v17 = (v15 - 1) << v14;
      if (v12 > 3)
        v17 = 0;
      if ((_DWORD)v12)
      {
        if (v12 > 3)
          LODWORD(v12) = 4;
        __asm { BR              X12 }
      }
      return v11 + v17 + 1;
    }
    v15 = *(unsigned __int16 *)(a1 + v12);
    if (*(_WORD *)(a1 + v12))
      goto LABEL_22;
  }
LABEL_29:
  if (!v11)
    return 0;
  if (v6 < 2)
    return 0;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, v6, v4);
  v19 = EnumTagSinglePayload >= 2;
  result = EnumTagSinglePayload - 2;
  if ((_DWORD)result == 0 || !v19)
    return 0;
  return result;
}

void sub_242231BA4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  size_t v10;
  unsigned int v11;
  size_t v12;
  char v13;
  BOOL v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  v10 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v10;
  if (v8 >= 2)
    v11 = v9 - 1;
  else
    v11 = 0;
  if (v8 >= 2)
    v12 = v10;
  else
    v12 = v10 + 1;
  v13 = 8 * v12;
  v14 = a3 >= v11;
  v15 = a3 - v11;
  if (v15 != 0 && v14)
  {
    if (v12 <= 3)
    {
      v16 = ((v15 + ~(-1 << v13)) >> v13) + 1;
      if (HIWORD(v16))
      {
        v6 = 4u;
      }
      else if (v16 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v16 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v11 < a2)
  {
    v17 = ~v11 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v18 = v17 & ~(-1 << v13);
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *a1 = v18;
          *((_BYTE *)a1 + 2) = BYTE2(v18);
        }
        else if ((_DWORD)v12 == 2)
        {
          *a1 = v18;
        }
        else
        {
          *(_BYTE *)a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v17;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

void sub_242231DB4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_242231DBC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_242231DDC()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_242231DEC()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_242231DF4()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_242231E00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int EnumTagSinglePayload;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned int *)(v3 + 84);
  v5 = *(_QWORD *)(v3 + 64);
  if ((_DWORD)v4)
    v6 = v5;
  else
    v6 = v5 + 1;
  if (v4 > 1)
  {
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, v4, v2);
    if (EnumTagSinglePayload >= 2)
      return EnumTagSinglePayload - 1;
    else
      return 0;
  }
  else if (*(_BYTE *)(a1 + v6))
  {
    v7 = (*(unsigned __int8 *)(a1 + v6) - 1) << (8 * v6);
    if (v6 > 3)
      v7 = 0;
    if ((_DWORD)v6)
    {
      if (v6 > 3)
        LODWORD(v6) = 4;
      __asm { BR              X11 }
    }
    return (v7 + 1);
  }
  else
  {
    return 0;
  }
}

void sub_242231EC0(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  size_t v9;
  unsigned int v10;
  int v11;
  int v12;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = v6 - 1;
  if (!(_DWORD)v6)
    v7 = 0;
  v8 = *(_QWORD *)(v5 + 64);
  if ((_DWORD)v6)
    v9 = v8;
  else
    v9 = v8 + 1;
  if (v7 >= a2)
  {
    if (v6 > 1)
    {
      if (a2)
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2 + 1, v6, v4);
    }
    else
    {
      a1[v9] = 0;
    }
  }
  else
  {
    v10 = ~v7 + a2;
    if (v9 < 4)
    {
      v11 = (v10 >> (8 * v9)) + 1;
      if ((_DWORD)v9)
      {
        v12 = v10 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if ((_DWORD)v9 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v10;
      LOBYTE(v11) = 1;
    }
    if (v6 <= 1)
      a1[v9] = v11;
  }
}

_QWORD *sub_242231FD0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = *a2;
  if (*a2 >= 0xFFFFFFFFuLL)
    MEMORY[0x2426A61F8](*a2);
  *a1 = v3;
  return a1;
}

void sub_24223200C(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **sub_242232024(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;
  void *v5;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
      MEMORY[0x2426A61F8](*a2);
    *a1 = (void *)v4;
  }
  else if (v4 < 0xFFFFFFFF)
  {

    *a1 = (void *)*a2;
  }
  else
  {
    MEMORY[0x2426A61F8](*a2);
    v5 = *a1;
    *a1 = (void *)v4;

  }
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **sub_2422320BC(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t sub_24223211C(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t sub_242232178(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

uint64_t sub_2422321C8(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_2422321E0(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

unint64_t sub_242232200(unint64_t result)
{
  if (result >= 3)
    JUMPOUT(0x2426A61F8);
  return result;
}

uint64_t sub_242232210()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_92(v1);
  *v2 = v0;
  v2[1] = sub_2421C60C4;
  v3 = OUTLINED_FUNCTION_45_7();
  return sub_24222FB80(v3, v4, v5);
}

uint64_t sub_242232264()
{
  uint64_t v0;

  return sub_24222FCE0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_24223226C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2426A62C4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2422322AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E2170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2422322F4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E2170);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_242232334()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242232358()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421C71E8;
  v2 = OUTLINED_FUNCTION_56();
  return v3(v2);
}

uint64_t sub_2422323B8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_92(v1);
  *v2 = v0;
  v2[1] = sub_2421C71E8;
  v3 = OUTLINED_FUNCTION_45_7();
  return v4(v3);
}

uint64_t sub_242232418()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_92(v1);
  *v2 = v0;
  v2[1] = sub_2421C71E8;
  v3 = OUTLINED_FUNCTION_45_7();
  return sub_24222FC30(v3, v4, v5);
}

uint64_t sub_24223246C()
{
  uint64_t v0;

  return sub_24222FDFC(*(_QWORD *)(v0 + 16));
}

uint64_t OUTLINED_FUNCTION_11_6()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_14_8()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_15_6(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_18_5(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_21_6()
{
  return sub_242272884();
}

uint64_t OUTLINED_FUNCTION_22_6(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return sub_242272494();
}

void OUTLINED_FUNCTION_23_9(void *a1@<X8>)
{
  sub_242230954(a1);
}

uint64_t OUTLINED_FUNCTION_25_5(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_27_7(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_28_9@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_30_5()
{
  _QWORD *v0;
  _QWORD *v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[11] + 32))(v0[5], *v1, v0[8]);
}

uint64_t OUTLINED_FUNCTION_33_7()
{
  return sub_242272A40();
}

uint64_t OUTLINED_FUNCTION_34_3()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_39_5()
{
  return sub_2422723F8();
}

uint64_t OUTLINED_FUNCTION_40_5()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_42_6()
{
  return sub_24222EBEC();
}

uint64_t OUTLINED_FUNCTION_43_4()
{
  return sub_242272884();
}

uint64_t OUTLINED_FUNCTION_44_5()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_QWORD *)v2 = v0;
  *(_BYTE *)(v2 + 8) = v1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_45_7()
{
  uint64_t v0;

  return v0;
}

__n128 OUTLINED_FUNCTION_47_7(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_49_5()
{
  return sub_2422723EC();
}

uint64_t OUTLINED_FUNCTION_50_6()
{
  return sub_24222DCB0();
}

uint64_t OUTLINED_FUNCTION_51_6()
{
  return sub_24222DCB0();
}

void OUTLINED_FUNCTION_53_4()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

void OUTLINED_FUNCTION_54_7()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_lock(v0 + 5);
}

uint64_t OUTLINED_FUNCTION_55_7()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_57_6()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_59_7()
{
  return sub_2422728F0();
}

uint64_t OUTLINED_FUNCTION_60_6()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_61_6@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t OUTLINED_FUNCTION_62_6(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 184) = *a1;
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_65_8()
{
  return swift_endAccess();
}

void OUTLINED_FUNCTION_67_4(void *a1)
{
  sub_242230954(a1);
}

unint64_t OUTLINED_FUNCTION_68_4()
{
  return sub_24222DC60();
}

uint64_t OUTLINED_FUNCTION_69_8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 96))(v0, *(_QWORD *)(v1 + 40));
}

uint64_t OUTLINED_FUNCTION_70_4()
{
  return 24;
}

uint64_t OUTLINED_FUNCTION_71_6()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_72_7()
{
  uint64_t (*v0)(void);

  return v0();
}

void OUTLINED_FUNCTION_73_6(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_74_4()
{
  return sub_2422723F8();
}

uint64_t OUTLINED_FUNCTION_82_8()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_83_6@<X0>(uint64_t a1@<X8>)
{
  return sub_24222F690(a1);
}

uint64_t OUTLINED_FUNCTION_84_5()
{
  return swift_weakLoadStrong();
}

uint64_t OUTLINED_FUNCTION_87_5()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_88_7(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_24223226C(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_89_5()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_90_5()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_91_5()
{
  return sub_242272938();
}

uint64_t ModelServiceClient.acquireAssertion(assertion:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = OUTLINED_FUNCTION_68_1();
  v2[6] = OUTLINED_FUNCTION_4_6();
  v2[7] = OUTLINED_FUNCTION_22();
  v2[8] = OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2422327FC()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_14_9(v0[4]);
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  v0[9] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_242232844;
  v2 = OUTLINED_FUNCTION_2_4(v0[3]);
  return OUTLINED_FUNCTION_0_2(v2, v3, v4, v5);
}

uint64_t sub_242232844()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 80) = v1;
  swift_task_dealloc();
  if (v1)
    return OUTLINED_FUNCTION_42();
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_7_2(v4);
}

uint64_t sub_2422328AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  void *v6;
  void *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_178();
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 80);
  MEMORY[0x2426A61F8]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA5C8);
  if (swift_dynamicCast())
  {
    v1 = *(_QWORD *)(v0 + 56);
    v2 = *(_QWORD *)(v0 + 48);

    OUTLINED_FUNCTION_118_5();
    sub_2421D11A4(v3, v4, v5);
    swift_storeEnumTagMultiPayload();
    static ModelManagerError.== infix(_:_:)(v1, v2);
    v7 = v6;
    sub_2421D3DF4(v2, (uint64_t (*)(_QWORD))type metadata accessor for ModelManagerError);
    if ((v7 & 1) != 0)
    {
      if (qword_2543A9D40 != -1)
        swift_once();
      v8 = OUTLINED_FUNCTION_54();
      OUTLINED_FUNCTION_22_6(v8, (uint64_t)qword_2543A9D28);
      v9 = OUTLINED_FUNCTION_17_5();
      if (OUTLINED_FUNCTION_137_0(v9))
      {
        *(_WORD *)OUTLINED_FUNCTION_10() = 0;
        OUTLINED_FUNCTION_116_2(&dword_2421B5000, v10, v11, "Assertion denied, process not eligible to hold assertion");
        OUTLINED_FUNCTION_2();
      }

    }
    v12 = *(_QWORD *)(v0 + 56);
    sub_24223C734(&qword_2543A99A0, 255, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    OUTLINED_FUNCTION_53_1();
    sub_2421CE528(v12, v13, (uint64_t (*)(_QWORD))type metadata accessor for ModelManagerError);
    OUTLINED_FUNCTION_107_2();
    sub_2421D3DF4(v12, (uint64_t (*)(_QWORD))type metadata accessor for ModelManagerError);

  }
  else
  {

    swift_willThrow();
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  return OUTLINED_FUNCTION_72_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ModelServiceClient.releaseAssertion(id:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_130_0();
}

uint64_t sub_242232A80()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_14_9(v0[3]);
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  v0[4] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_24222AE80;
  v2 = OUTLINED_FUNCTION_2_4(v0[2]);
  return OUTLINED_FUNCTION_0_2(v2, v3, v4, v5);
}

uint64_t ModelServiceClient.fetchAllAssertions()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_130_0();
}

uint64_t sub_242232ADC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_14_9(*(_QWORD *)(v0 + 16));
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 24) = v1;
  v2 = OUTLINED_FUNCTION_184_0(v1, (uint64_t)sub_242232B1C);
  return OUTLINED_FUNCTION_57_2(v2, v3, v4);
}

uint64_t sub_242232B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_3();
  if (!v1)
    v4 = a1;
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v4);
}

uint64_t ModelServiceClient.restoreAssertions(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_130_0();
}

uint64_t sub_242232B78()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_14_9(v0[3]);
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  v0[4] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_24223DC9C;
  v2 = OUTLINED_FUNCTION_2_4(v0[2]);
  return OUTLINED_FUNCTION_0_2(v2, v3, v4, v5);
}

uint64_t ModelServiceClient.dumpState()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_130_0();
}

uint64_t sub_242232BD4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, uint64_t, uint64_t);

  OUTLINED_FUNCTION_14_9(v2[3]);
  v3 = (_QWORD *)OUTLINED_FUNCTION_49();
  v2[4] = v3;
  *v3 = v2;
  v3[1] = sub_24222AE80;
  return v5(v2[2], v0, v1);
}

uint64_t sub_242232C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest(0);
  v5[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_242232C98()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t *, uint64_t);

  sub_242213618(v0[5], v0[9], &qword_2543A7848);
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  v0[10] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_242232D08;
  return v3(v0 + 2, v0[9]);
}

uint64_t sub_242232D08()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 88) = v1;
  swift_task_dealloc();
  sub_2421D3DF4(*(_QWORD *)(v0 + 72), type metadata accessor for InferenceProviderXPCRequest.FetchNextStreamResultsRequest);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_242232D64()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD);

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 16);
  v1 = *(unsigned __int8 *)(v0 + 24);
  *(_BYTE *)(v0 + 25) = v1;
  if (v1 == 1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v2;
    *v2 = v0;
    v2[1] = sub_242232F08;
    v3 = OUTLINED_FUNCTION_51(*(_QWORD *)(v0 + 40));
    return OUTLINED_FUNCTION_100_2(v3);
  }
  else
  {
    OUTLINED_FUNCTION_118_2();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v5;
    *v5 = v0;
    v5[1] = sub_242232F80;
    return v6(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 96), *(unsigned __int8 *)(v0 + 25));
  }
}

uint64_t sub_242232E0C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_242232E50;
  v2 = OUTLINED_FUNCTION_51(*(_QWORD *)(v0 + 40));
  return OUTLINED_FUNCTION_100_2(v2);
}

uint64_t sub_242232E50()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

void sub_242232E88()
{
  uint64_t v0;

  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_68_1();
  OUTLINED_FUNCTION_132_3(&qword_2543A99A0, v0, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  OUTLINED_FUNCTION_70_5();
  OUTLINED_FUNCTION_90_0();
}

uint64_t sub_242232EE0()
{
  uint64_t v0;

  swift_willThrow();
  OUTLINED_FUNCTION_91_0();
  OUTLINED_FUNCTION_57();
  return OUTLINED_FUNCTION_72_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_242232F08()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD);

  OUTLINED_FUNCTION_222_0();
  v2 = *v1;
  *v3 = *v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_118_2();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v4;
  *v4 = v2;
  v4[1] = sub_242232F80;
  return v6(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 96), *(unsigned __int8 *)(v0 + 25));
}

uint64_t sub_242232F80()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  swift_bridgeObjectRelease_n();
  OUTLINED_FUNCTION_57();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_7_2(v0);
}

uint64_t ModelServiceClient.cancelRequest(id:session:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  v3[16] = OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_24223303C()
{
  uint64_t *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  OUTLINED_FUNCTION_178();
  v1 = (_QWORD *)v0[15];
  type metadata accessor for _OSActivity();
  v0[17] = OUTLINED_FUNCTION_14_1();
  v0[18] = OUTLINED_FUNCTION_93("Client cancelling request", 25);
  v2 = v1 + 14;
  v3 = v1[17];
  v4 = v1[18];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  v5 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_51_7(v5);
  v6 = (_QWORD *)OUTLINED_FUNCTION_45_8();
  v0[19] = (uint64_t)v6;
  *v6 = v0;
  v6[1] = sub_242233118;
  v7 = OUTLINED_FUNCTION_51(v0[13]);
  return OUTLINED_FUNCTION_303(v7, v8, v3, v4, v9);
}

uint64_t sub_242233118()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_135_0();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v1 + 160) = v0;
  v3 = swift_task_dealloc();
  OUTLINED_FUNCTION_73_5(v3, &qword_2543A7850);
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_2422331C4()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_210_0();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_37();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_215_0();
  return OUTLINED_FUNCTION_72_1(v0);
}

uint64_t sub_242233248()
{
  uint64_t v0;

  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_210_0();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_37();
  return OUTLINED_FUNCTION_72_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2422332D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_2422332E8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v1 + 48);
  if (*(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128)) <= 1uLL)
  {
    v3 = *(_QWORD *)(*(_QWORD *)v2 + 152);
    v4 = *(_QWORD *)(v2 + v3);
    v5 = __CFADD__(v4, 1);
    v6 = v4 + 1;
    if (!v5)
    {
      v7 = *(_QWORD *)(v1 + 40);
      *(_QWORD *)(v2 + v3) = v6;
      OUTLINED_FUNCTION_4();
      sub_2422333F0(v7);
      OUTLINED_FUNCTION_65_8();
      return (*(uint64_t (**)(void))(v1 + 8))();
    }
    __break(1u);
    goto LABEL_10;
  }
  if (qword_2543AA570 != -1)
LABEL_10:
    swift_once();
  v8 = OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_22_6(v8, (uint64_t)qword_2543AA558);
  v9 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_137_0(v9))
  {
    *(_WORD *)OUTLINED_FUNCTION_10() = 0;
    OUTLINED_FUNCTION_116_2(&dword_2421B5000, v10, v11, "Appending elements to a GreedyBufferingAsyncSequence after it's been terminated");
    OUTLINED_FUNCTION_2();
  }

  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_2422333F0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;

  v3 = type metadata accessor for ClientData(0);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(*v1 + 24);
  v6 = v5 + v4;
  if (__OFADD__(v5, v4))
  {
    __break(1u);
  }
  else
  {
    v7 = *(_QWORD *)(v3 - 8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v1;
    if (*(_QWORD *)(*v1 + 16) < v6 || (isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_24226EB0C(v6);
      v9 = *v1;
    }
    sub_242239F28((uint64_t *)(v9 + 16), v9 + ((*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v4);
  }
}

uint64_t sub_2422334A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2422724AC();
  __swift_allocate_value_buffer(v0, qword_2543A9D28);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2543A9D28);
  if (qword_2543AA570 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2543AA558);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_242233530()
{
  uint64_t result;

  type metadata accessor for ModelServiceClient();
  result = sub_24223355C();
  qword_2543A9CE0 = result;
  return result;
}

uint64_t sub_24223355C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  if (qword_2543AA2D0 != -1)
    swift_once();
  v0 = qword_2543AAE10;
  type metadata accessor for RunningBoardSelfAssertions();
  v1 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA010);
  sub_2421BBE74();
  *(_QWORD *)(v1 + 112) = sub_242272638();
  v2 = swift_allocObject();
  v3 = sub_24223BB10(v0, v1, v2);
  if (qword_2543A9D40 != -1)
    swift_once();
  v4 = sub_2422724AC();
  __swift_project_value_buffer(v4, (uint64_t)qword_2543A9D28);
  v5 = sub_242272494();
  v6 = sub_24227292C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = sub_242233B44();
    sub_2421BB36C(v9, v10, &v12);
    sub_242272950();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2421B5000, v5, v6, "Creating %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2426A6378](v8, -1, -1);
    MEMORY[0x2426A6378](v7, -1, -1);
  }

  return v3;
}

uint64_t static ModelServiceClient.client.getter()
{
  if (qword_2543A9CF8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t ModelServiceClient.SessionCache.lockedInferenceProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(v1 + 40);
  return sub_242211358(v2, v3);
}

__n128 ModelServiceClient.SessionCache.lockedInferenceProvider.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  sub_242239AB0(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
  result = v6;
  *(__n128 *)(v1 + 8) = v6;
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  *(_BYTE *)(v1 + 40) = v4;
  return result;
}

uint64_t (*ModelServiceClient.SessionCache.lockedInferenceProvider.modify())()
{
  return nullsub_1;
}

uint64_t ModelServiceClient.extantSessionCaches.getter()
{
  OUTLINED_FUNCTION_9();
  return sub_242272644();
}

uint64_t ModelServiceClient.extantSessionCaches.setter(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_9();
  *(_QWORD *)(v1 + 200) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*ModelServiceClient.extantSessionCaches.modify())()
{
  OUTLINED_FUNCTION_4();
  return j__swift_endAccess;
}

void ModelServiceClient.__allocating_init(sender:runningBoardAssertions:)()
{
  sub_242233900();
}

void ModelServiceClient.init(sender:runningBoardAssertions:)()
{
  sub_242233900();
}

void sub_242233900()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_172_0();
  v2 = v1;
  v3 = v0;
  v5 = v4;
  v7 = v6;
  v8 = *(_QWORD *)(v6 + 24);
  v9 = *(_QWORD *)(v6 + 32);
  v10 = __swift_mutable_project_boxed_opaque_existential_1(v6, v8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_66();
  v13 = v12 - v11;
  (*(void (**)(uint64_t))(v14 + 16))(v12 - v11);
  v15 = *(_QWORD *)(v5 + 24);
  v16 = *(_QWORD *)(v5 + 32);
  v17 = __swift_mutable_project_boxed_opaque_existential_1(v5, v15);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_66();
  v20 = v19 - v18;
  (*(void (**)(uint64_t))(v21 + 16))(v19 - v18);
  v2(v13, v20, v3, v8, v15, v9, v16);
  __swift_destroy_boxed_opaque_existential_1Tm(v5);
  __swift_destroy_boxed_opaque_existential_1Tm(v7);
  OUTLINED_FUNCTION_73_1();
}

void ModelServiceClient.deinit()
{
  uint64_t v0;
  os_log_type_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11[9];
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_172_0();
  v12 = v2;
  v13 = v3;
  v4 = v0;
  if (qword_2543A9D40 != -1)
    swift_once();
  v5 = OUTLINED_FUNCTION_54();
  v6 = OUTLINED_FUNCTION_22_6(v5, (uint64_t)qword_2543A9D28);
  v7 = sub_24227292C();
  if (OUTLINED_FUNCTION_34_2(v7))
  {
    v8 = (uint8_t *)OUTLINED_FUNCTION_10();
    v11[0] = OUTLINED_FUNCTION_10();
    *(_DWORD *)v8 = 136315138;
    v9 = sub_242233B44();
    sub_2421BB36C(v9, v10, v11);
    OUTLINED_FUNCTION_111_4();
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_53(&dword_2421B5000, v6, v1, "Destroying %s", v8);
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_2();
  }

  __swift_destroy_boxed_opaque_existential_1Tm(v4 + 112);
  __swift_destroy_boxed_opaque_existential_1Tm(v4 + 152);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  OUTLINED_FUNCTION_14_7();
}

uint64_t sub_242233B44()
{
  swift_getMetatypeMetadata();
  return sub_2422726D4();
}

uint64_t ModelServiceClient.__deallocating_deinit()
{
  ModelServiceClient.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t sub_242233B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v10[44] = a9;
  v10[45] = v9;
  v10[42] = a7;
  v10[43] = a8;
  v10[40] = a5;
  v10[41] = a6;
  v10[38] = a3;
  v10[39] = a4;
  v10[36] = a1;
  v10[37] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
  v10[46] = OUTLINED_FUNCTION_17();
  v10[47] = type metadata accessor for ModelServiceClient.StreamBacking();
  v10[48] = OUTLINED_FUNCTION_4_6();
  v10[49] = OUTLINED_FUNCTION_22();
  sub_2422724E8();
  v10[50] = OUTLINED_FUNCTION_17();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E15F0);
  v10[51] = OUTLINED_FUNCTION_17();
  v11 = sub_242272548();
  v10[52] = v11;
  v10[53] = *(_QWORD *)(v11 - 8);
  v10[54] = OUTLINED_FUNCTION_8_9();
  v10[55] = OUTLINED_FUNCTION_22();
  v12 = sub_242272848();
  v10[56] = v12;
  v10[57] = *(_QWORD *)(v12 - 8);
  v10[58] = OUTLINED_FUNCTION_17();
  v10[59] = type metadata accessor for InferenceProviderRequestResult(0);
  v10[60] = OUTLINED_FUNCTION_4_6();
  v10[61] = OUTLINED_FUNCTION_22();
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850) - 8);
  v10[62] = v13;
  v10[63] = *(_QWORD *)(v13 + 64);
  v10[64] = OUTLINED_FUNCTION_8_9();
  v10[65] = OUTLINED_FUNCTION_22();
  v10[66] = OUTLINED_FUNCTION_22();
  v14 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848) - 8);
  v10[67] = v14;
  v10[68] = *(_QWORD *)(v14 + 64);
  v10[69] = OUTLINED_FUNCTION_8_9();
  v10[70] = OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_106_6();
}

void sub_242233D18()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  _BOOL8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  int v32;
  os_log_type_t type;
  uint64_t v34[2];

  v34[1] = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_79();
  v0[71] = OUTLINED_FUNCTION_14_1();
  v0[72] = OUTLINED_FUNCTION_93("Client requesting stream", 24);
  if (qword_2543A9D40 != -1)
    swift_once();
  v1 = v0[70];
  v2 = v0[66];
  v4 = v0[41];
  v3 = v0[42];
  v5 = OUTLINED_FUNCTION_54();
  v0[73] = __swift_project_value_buffer(v5, (uint64_t)qword_2543A9D28);
  OUTLINED_FUNCTION_359(v4, v6, &qword_2543A7848);
  sub_242213618(v3, v2, &qword_2543A7850);
  v7 = (void *)OUTLINED_FUNCTION_146_0();
  v8 = sub_24227292C();
  v9 = OUTLINED_FUNCTION_101_6(v8);
  v10 = v0[70];
  if (v9)
  {
    type = v1;
    v11 = v0[69];
    v30 = v0[66];
    v12 = v0[65];
    v13 = OUTLINED_FUNCTION_10();
    v31 = OUTLINED_FUNCTION_10();
    v34[0] = v31;
    *(_DWORD *)v13 = 136315394;
    OUTLINED_FUNCTION_169_1();
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    OUTLINED_FUNCTION_182_1(v11);
    v0[34] = OUTLINED_FUNCTION_181_1(v14, v15, v16, v17, v18);
    sub_242272950();
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_182_1(v10);
    *(_WORD *)(v13 + 12) = 2080;
    sub_242213618(v30, v12, &qword_2543A7850);
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    sub_2421D3B00(v12, &qword_2543A7850);
    v0[35] = OUTLINED_FUNCTION_220_0(v19, v20, v34);
    sub_242272950();
    swift_bridgeObjectRelease();
    sub_2421D3B00(v30, &qword_2543A7850);
    OUTLINED_FUNCTION_142_2(&dword_2421B5000, v21, v22, "Sending execute streaming request for %s:%s", v23, v24, v25, v26, (uint64_t)(v0 + 35), (uint64_t)(v0 + 34), v30, v31, v32, type);
    OUTLINED_FUNCTION_128_2();
    OUTLINED_FUNCTION_2();
  }
  OUTLINED_FUNCTION_168_1(v9, &qword_2543A7848);
  OUTLINED_FUNCTION_85_5(v27, &qword_2543A7850);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0[45] + 152), *(_QWORD *)(v0[45] + 176));
  v28 = (_QWORD *)OUTLINED_FUNCTION_45_8();
  v0[74] = v28;
  *v28 = v0;
  v28[1] = sub_242233FC4;
  OUTLINED_FUNCTION_118_5();
  OUTLINED_FUNCTION_92_5();
  __asm { BR              X3 }
}

uint64_t sub_242233FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_70_1();
  *(_QWORD *)(v0 + 600) = v2;
  *(_QWORD *)(v0 + 608) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_3();
}

void sub_242234070()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[57];
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0[45] + 112), *(_QWORD *)(v0[45] + 136));
  sub_24227289C();
  sub_24227283C();
  OUTLINED_FUNCTION_134_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v2 = (_QWORD *)OUTLINED_FUNCTION_45_8();
  v0[77] = v2;
  *v2 = v0;
  v2[1] = sub_24223415C;
  OUTLINED_FUNCTION_204();
  __asm { BR              X12 }
}

uint64_t sub_24223415C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 624) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_2422341F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_activity_scope_state_s *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void);
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_123_2();
  v1 = *(_QWORD *)(v0 + 488);
  v2 = *(_QWORD *)(v0 + 472);
  v4 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 416);
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(_BYTE *)(v0 + 88);
  OUTLINED_FUNCTION_128_1(*(_QWORD *)(v0 + 480), v10, type metadata accessor for InferenceProviderRequestResult);
  sub_242213618(v1 + *(int *)(v2 + 20), v4, &qword_2571E15F0);
  if (__swift_getEnumTagSinglePayload(v4, 1, v3) == 1)
  {
    v11 = *(_QWORD *)(v0 + 408);
    OUTLINED_FUNCTION_40_0();
    OUTLINED_FUNCTION_79_1();
    sub_2421D3B00(v11, &qword_2571E15F0);
    v12 = sub_242272494();
    v13 = sub_242272914();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)OUTLINED_FUNCTION_10();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_2421B5000, v12, v13, "No endpoint returned for a successful stream request", v14, 2u);
      OUTLINED_FUNCTION_2();
    }
    v15 = *(_QWORD *)(v0 + 576);
    v16 = *(_QWORD *)(v0 + 488);

    OUTLINED_FUNCTION_68_1();
    OUTLINED_FUNCTION_132_3(&qword_2543A99A0, v17, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    OUTLINED_FUNCTION_70_5();
    OUTLINED_FUNCTION_141_3();
    OUTLINED_FUNCTION_107_2();
    OUTLINED_FUNCTION_150();
    sub_2421D3DF4(v16, type metadata accessor for InferenceProviderRequestResult);
    v18 = (os_activity_scope_state_s *)(v15 + 24);
    goto LABEL_9;
  }
  v39 = v7;
  v19 = *(_QWORD *)(v0 + 336);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 424) + 32))(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 416));
  OUTLINED_FUNCTION_359(v19, v20, &qword_2543A7850);
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_158();
  OUTLINED_FUNCTION_186_1();
  if (!v22)
  {
    *(_QWORD *)(v21 + 8) = v6;
    *(_QWORD *)(v21 + 16) = v5;
    *(_QWORD *)(v21 + 24) = v39;
    *(_QWORD *)(v21 + 32) = v8;
    *(_BYTE *)(v21 + 40) = v9;
    sub_242272644();
    sub_242272644();
    v23 = OUTLINED_FUNCTION_29_1();
    OUTLINED_FUNCTION_155_1(v23, v24);
  }
  OUTLINED_FUNCTION_127_3();
  v25 = *(_QWORD *)(v0 + 624);
  v27 = *(_QWORD *)(v0 + 432);
  v26 = *(_QWORD *)(v0 + 440);
  v29 = *(_QWORD *)(v0 + 416);
  v28 = *(_QWORD *)(v0 + 424);
  swift_endAccess();
  OUTLINED_FUNCTION_40_0();
  v30 = OUTLINED_FUNCTION_79_1();
  OUTLINED_FUNCTION_85_5(v30, &qword_2543A7850);
  sub_24227253C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v27, v26, v29);
  sub_2422724D0();
  *(_QWORD *)(v0 + 632) = sub_242272530();
  if (v25)
  {
    v31 = *(_QWORD *)(v0 + 576);
    v32 = *(_QWORD *)(v0 + 488);
    v33 = *(_QWORD *)(v0 + 424);
    swift_release();
    OUTLINED_FUNCTION_134_3(*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
    sub_2421D3DF4(v32, type metadata accessor for InferenceProviderRequestResult);
    v18 = (os_activity_scope_state_s *)(v31 + 24);
LABEL_9:
    OUTLINED_FUNCTION_4();
    os_activity_scope_leave(v18);
    OUTLINED_FUNCTION_65_8();
    swift_release();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_38();
    OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_27_5();
    OUTLINED_FUNCTION_91_3();
    OUTLINED_FUNCTION_182();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_57();
    OUTLINED_FUNCTION_37();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_189_0();
    OUTLINED_FUNCTION_218();
    OUTLINED_FUNCTION_145_1();
    OUTLINED_FUNCTION_217();
    OUTLINED_FUNCTION_144_1();
    v34 = (uint64_t (*)(void))OUTLINED_FUNCTION_177_1();
    return OUTLINED_FUNCTION_16_7(v34);
  }
  type metadata accessor for InferenceProviderXPCSender();
  swift_allocObject();
  v36 = OUTLINED_FUNCTION_145_2();
  *(_QWORD *)(v0 + 640) = InferenceProviderXPCSender.init(session:)(v36);
  v37 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 648) = v37;
  *v37 = v0;
  v37[1] = sub_2422345F0;
  v38 = OUTLINED_FUNCTION_51(*(_QWORD *)(v0 + 328));
  return sub_2421E9D98(v38);
}

uint64_t sub_2422345F0()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_33_8(v1);
  if (v0)
    OUTLINED_FUNCTION_91_0();
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_24223468C()
{
  sub_242261744();
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_2422346F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v8 = *(_QWORD *)(v0 + 664);
  v9 = *(_QWORD *)(v0 + 488);
  v1 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 416);
  v2 = *(_QWORD *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD **)(v0 + 288);
  v5[3] = *(_QWORD *)(v0 + 656);
  sub_24223CA30(&qword_2571E2340, &qword_2571E2338);
  v5[4] = v6;
  swift_release();
  OUTLINED_FUNCTION_150();
  OUTLINED_FUNCTION_198_0();
  *v5 = v8;
  sub_2421D3DF4(v4, (uint64_t (*)(_QWORD))type metadata accessor for ModelServiceClient.StreamBacking);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_2421D3DF4(v9, type metadata accessor for InferenceProviderRequestResult);
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_210_0();
  OUTLINED_FUNCTION_201_0();
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  OUTLINED_FUNCTION_214_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_38();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_37();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_182();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2422348D0()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_123_2();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_122_3();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_189_0();
  OUTLINED_FUNCTION_218();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  OUTLINED_FUNCTION_214_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_177_1();
  return OUTLINED_FUNCTION_16_7(v0);
}

uint64_t sub_242234984()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_123_2();
  swift_release();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_122_3();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_189_0();
  OUTLINED_FUNCTION_218();
  OUTLINED_FUNCTION_145_1();
  OUTLINED_FUNCTION_217();
  OUTLINED_FUNCTION_144_1();
  OUTLINED_FUNCTION_214_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_177_1();
  return OUTLINED_FUNCTION_16_7(v0);
}

uint64_t sub_242234A40()
{
  _QWORD *v0;
  uint64_t (*v1)();
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (**v9)();
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_123_2();
  v1 = (uint64_t (*)())v0[80];
  v2 = v0[69];
  v19 = v0[68];
  v20 = v0[75];
  v16 = v0[65];
  v17 = v0[67];
  v3 = v0[61];
  v18 = v0[62];
  v4 = v0[59];
  v5 = v0[49];
  v7 = v0[46];
  v6 = (int *)v0[47];
  v8 = v0[41];
  v14 = v0[48];
  v15 = v0[42];
  OUTLINED_FUNCTION_223_0(v8, v2);
  sub_242213618(v3 + *(int *)(v4 + 24), v7, &qword_2571E0560);
  sub_242213644(v2, v5, &qword_2543A7848);
  sub_242213644(v7, v5 + v6[5], &qword_2571E0560);
  *(_QWORD *)(v5 + v6[6]) = v1;
  *(_BYTE *)(v5 + v6[7]) = 0;
  v9 = (uint64_t (**)())(v5 + v6[8]);
  *v9 = sub_24223C88C;
  v9[1] = v1;
  sub_2421CE528(v5, v14, (uint64_t (*)(_QWORD))type metadata accessor for ModelServiceClient.StreamBacking);
  sub_242213618(v8, v2, &qword_2543A7848);
  sub_242213618(v15, v16, &qword_2543A7850);
  v10 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v11 = (v19 + *(unsigned __int8 *)(v18 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v12 = swift_allocObject();
  sub_242213644(v2, v12 + v10, &qword_2543A7848);
  sub_242213644(v16, v12 + v11, &qword_2543A7850);
  v0[82] = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E2338);
  swift_allocObject();
  OUTLINED_FUNCTION_55_7();
  OUTLINED_FUNCTION_145_2();
  v0[83] = sub_242260C44(v14, (uint64_t)&unk_2571E2320, v12, (uint64_t)&unk_2571E2330, v20);
  return swift_task_switch();
}

void (*sub_242234C74(_QWORD *a1, uint64_t a2))(_QWORD *a1)
{
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = malloc(0x30uLL);
  *a1 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v4[4] = v6;
  sub_242213618(a2, (uint64_t)v6, &qword_2543A7848);
  v4[5] = sub_24223A374(v4, (uint64_t)v6);
  return sub_242234D00;
}

void sub_242234D00(_QWORD *a1)
{
  sub_242234DA4(a1);
}

void (*sub_242234D0C(_QWORD *a1, uint64_t a2))(_QWORD *a1)
{
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = malloc(0x30uLL);
  *a1 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v4[4] = v6;
  sub_242213618(a2, (uint64_t)v6, &qword_2543A7850);
  v4[5] = sub_24223A438(v4, (uint64_t)v6);
  return sub_242234D98;
}

void sub_242234D98(_QWORD *a1)
{
  sub_242234DA4(a1);
}

void sub_242234DA4(_QWORD *a1)
{
  void *v1;
  void *v2;

  v1 = (void *)*a1;
  v2 = *(void **)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  OUTLINED_FUNCTION_212_0();
  free(v2);
  OUTLINED_FUNCTION_109_5(v1);
}

uint64_t sub_242234DE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2543A9D40 != -1)
    swift_once();
  v5 = sub_2422724AC();
  __swift_project_value_buffer(v5, (uint64_t)qword_2543A9D28);
  v6 = sub_242272494();
  v7 = sub_24227292C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_2421B5000, v6, v7, "Invalidating direct InferenceProvider connection.", v8, 2u);
    MEMORY[0x2426A6378](v8, -1, -1);
  }

  v9 = sub_242272848();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a1;
  swift_retain();
  sub_2421B7ACC();
  return swift_release();
}

uint64_t sub_242234F54()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421C71E8;
  return sub_2421E8E2C();
}

uint64_t sub_242234F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
  v3[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_242235000()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = v0[5];
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v0[9] = v2;
  v3 = v1 + v2;
  OUTLINED_FUNCTION_9();
  v4 = (int *)type metadata accessor for ModelServiceClient.StreamBacking();
  v0[10] = v4;
  if ((*(_BYTE *)(v3 + v4[7]) & 1) != 0)
  {
    v5 = v0[5];
    v0[12] = *(_QWORD *)(v3 + v4[6]);
    v6 = swift_task_alloc();
    v0[13] = v6;
    *(_OWORD *)(v6 + 16) = *((_OWORD *)v0 + 3);
    *(_QWORD *)(v6 + 32) = v5;
    v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2571E2358 + dword_2571E2358);
    OUTLINED_FUNCTION_57_1();
    v7 = (_QWORD *)OUTLINED_FUNCTION_175();
    v0[14] = v7;
    *v7 = v0;
    v7[1] = sub_2422351AC;
    return v12((uint64_t)v12, v0[6], (uint64_t)&unk_2571E2350, v6);
  }
  else
  {
    sub_242213618(v3 + v4[5], v0[8], &qword_2571E0560);
    v9 = (_QWORD *)OUTLINED_FUNCTION_49();
    v0[11] = v9;
    *v9 = v0;
    v9[1] = sub_242235128;
    v10 = OUTLINED_FUNCTION_51(v0[8]);
    return OUTLINED_FUNCTION_97_4(v10, v11);
  }
}

uint64_t sub_242235128()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_242235160()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  *(_BYTE *)(*(_QWORD *)(v0 + 40) + *(_QWORD *)(v0 + 72) + *(int *)(*(_QWORD *)(v0 + 80) + 28)) = 1;
  sub_2421D3B00(v1, &qword_2571E0560);
  OUTLINED_FUNCTION_192_0();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2422351AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_222_0();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 120) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    OUTLINED_FUNCTION_16();
  }
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_24223520C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_192_0();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

void sub_242235230()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_68_1();
  OUTLINED_FUNCTION_132_3(&qword_2543A99A0, v1, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
  *(_QWORD *)(v0 + 128) = OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_90_0();
}

uint64_t sub_24223529C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v11 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v10 + 136) = v11;
  *v11 = v10;
  v11[1] = sub_2422352D0;
  return OUTLINED_FUNCTION_97_4(v9, a9);
}

uint64_t sub_2422352D0()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_91_0();
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_24223530C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_192_0();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_242235338(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 56) = a5;
  *(_QWORD *)(v6 + 64) = a6;
  *(_BYTE *)(v6 + 128) = a3;
  *(_QWORD *)(v6 + 40) = a2;
  *(_QWORD *)(v6 + 48) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
  *(_QWORD *)(v6 + 72) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  *(_QWORD *)(v6 + 96) = swift_task_alloc();
  *(_QWORD *)(v6 + 104) = swift_task_alloc();
  return swift_task_switch();
}

void sub_242235404()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (qword_2543A9D40 != -1)
    swift_once();
  v1 = v0[13];
  v2 = v0[11];
  v4 = v0[6];
  v3 = v0[7];
  v5 = OUTLINED_FUNCTION_54();
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_2543A9D28);
  sub_242213618(v4, v1, &qword_2543A7848);
  sub_242213618(v3, v2, &qword_2543A7850);
  sub_242272644();
  v7 = sub_242272494();
  v8 = sub_24227292C();
  v9 = OUTLINED_FUNCTION_101_6(v8);
  v10 = v0[13];
  if (v9)
  {
    v11 = v0[12];
    v22 = v0[10];
    v23 = v0[11];
    v12 = v0[5];
    v13 = OUTLINED_FUNCTION_10();
    v24 = OUTLINED_FUNCTION_10();
    *(_DWORD *)v13 = 134218498;
    v0[2] = *(_QWORD *)(v12 + 16);
    sub_242272950();
    OUTLINED_FUNCTION_40_0();
    *(_WORD *)(v13 + 12) = 2080;
    OUTLINED_FUNCTION_169_1();
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    OUTLINED_FUNCTION_182_1(v11);
    v0[3] = OUTLINED_FUNCTION_138_3(v14, v15, &v24);
    sub_242272950();
    OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_182_1(v10);
    *(_WORD *)(v13 + 22) = 2080;
    sub_242213618(v23, v22, &qword_2543A7850);
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    OUTLINED_FUNCTION_208_0(v22);
    v0[4] = OUTLINED_FUNCTION_220_0(v16, v17, &v24);
    sub_242272950();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_208_0(v23);
    _os_log_impl(&dword_2421B5000, v7, v6, "Received buffer of %ld elements from inference provider for %s:%s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_2();
  }
  v18 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_168_1(v18, &qword_2543A7848);
  OUTLINED_FUNCTION_85_5(v19, &qword_2543A7850);

  v20 = (_QWORD *)swift_task_alloc();
  v0[14] = v20;
  *v20 = v0;
  v20[1] = sub_2422356D0;
  OUTLINED_FUNCTION_51(v0[5]);
  OUTLINED_FUNCTION_92_5();
  __asm { BR              X1 }
}

uint64_t sub_2422356D0()
{
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_242235704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v8)(uint64_t);

  OUTLINED_FUNCTION_326();
  if (*(_BYTE *)(v0 + 128) == 1)
  {
    v1 = *(_QWORD *)(v0 + 72);
    v2 = OUTLINED_FUNCTION_111_3();
    OUTLINED_FUNCTION_129(v1, v3, v4, v2);
    v5 = (_QWORD *)OUTLINED_FUNCTION_23();
    *(_QWORD *)(v0 + 120) = v5;
    *v5 = v0;
    v5[1] = sub_2422357B4;
    v6 = OUTLINED_FUNCTION_51(*(_QWORD *)(v0 + 72));
    return v8(v6);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_57();
    OUTLINED_FUNCTION_37();
    OUTLINED_FUNCTION_43();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2422357B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v0;
  v1 = *v0;
  v2 = OUTLINED_FUNCTION_33_8(&v4);
  OUTLINED_FUNCTION_85_5(v2, &qword_2571E0560);
  swift_task_dealloc();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_24223582C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_242235874;
  return sub_24222C908();
}

uint64_t sub_242235874()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_271();
  if (!v0)
    return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

void sub_2422358B0()
{
  uint64_t v0;

  if (qword_2543A9D40 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_54();
  __swift_project_value_buffer(v0, (uint64_t)qword_2543A9D28);
  OUTLINED_FUNCTION_90_0();
}

uint64_t ModelServiceClient.fetchModelInstance(session:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;

  v3[19] = a2;
  v3[20] = v2;
  v3[18] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  v3[21] = OUTLINED_FUNCTION_175();
  v3[22] = OUTLINED_FUNCTION_175();
  v5 = (_QWORD *)swift_task_alloc();
  v3[23] = v5;
  *v5 = v3;
  v5[1] = sub_242235A64;
  return ModelServiceClient.establishment(of:)(a2);
}

uint64_t sub_242235A64()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = *v1;
  OUTLINED_FUNCTION_33_8(&v4);
  if (!v0)
    return OUTLINED_FUNCTION_42();
  swift_task_dealloc();
  OUTLINED_FUNCTION_57();
  return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_242235AC8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  _QWORD *v9;
  uint64_t (*v11)(_QWORD *, _QWORD, uint64_t, uint64_t);

  v3 = v1[22];
  v4 = v1[19];
  OUTLINED_FUNCTION_187_1(v1[20]);
  v5 = OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
  v1[24] = OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
  v6 = v4 + v5;
  v7 = OUTLINED_FUNCTION_21();
  v1[25] = v7;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  v1[26] = v8;
  v8(v3, v6, v7);
  v9 = (_QWORD *)OUTLINED_FUNCTION_23();
  v1[27] = v9;
  *v9 = v1;
  v9[1] = sub_242235B84;
  return v11(v1 + 2, v1[22], v0, v2);
}

uint64_t sub_242235B84()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_135_0();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v1 + 224) = v0;
  v3 = swift_task_dealloc();
  OUTLINED_FUNCTION_73_5(v3, &qword_2543A7850);
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_242235BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_123_2();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v16 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 72);
  v18 = *(_QWORD *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 48);
  v17 = *(_BYTE *)(v0 + 80);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 208))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152) + *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200));
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_158();
  OUTLINED_FUNCTION_186_1();
  if (!v7)
  {
    v14 = *(_QWORD *)(v6 + 8);
    v15 = v1;
    v8 = *(_QWORD *)(v6 + 16);
    *(_QWORD *)(v6 + 8) = v19;
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v18;
    *(_QWORD *)(v6 + 32) = v5;
    *(_BYTE *)(v6 + 40) = v17;
    sub_242272644();
    sub_242272644();
    v9 = v8;
    v1 = v15;
    sub_242239AB0(v14, v9);
  }
  OUTLINED_FUNCTION_127_3();
  v10 = *(_QWORD *)(v0 + 168);
  v11 = *(_QWORD *)(v0 + 144);
  OUTLINED_FUNCTION_113_4();
  sub_2421D3B00(v10, &qword_2543A7850);
  *(_QWORD *)v11 = v1;
  *(_QWORD *)(v11 + 8) = v2;
  *(_QWORD *)(v11 + 16) = v3;
  *(_QWORD *)(v11 + 24) = v16;
  *(_QWORD *)(v11 + 32) = v19;
  *(_QWORD *)(v11 + 40) = v4;
  *(_QWORD *)(v11 + 48) = v18;
  *(_QWORD *)(v11 + 56) = v5;
  *(_BYTE *)(v11 + 64) = v17;
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_38();
  v12 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_16_7(v12);
}

uint64_t sub_242235D18()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_57();
  return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ModelServiceClient.establishment(of:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[23] = a1;
  v2[24] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  v2[25] = OUTLINED_FUNCTION_17();
  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850) - 8);
  v2[26] = v3;
  v2[27] = *(_QWORD *)(v3 + 64);
  v2[28] = OUTLINED_FUNCTION_8_9();
  v2[29] = OUTLINED_FUNCTION_22();
  v2[30] = OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_242235DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  _BOOL4 v65;
  uint64_t v66;
  uint64_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  NSObject *v124;
  uint64_t v125;

  v4 = *(_QWORD *)(v0 + 192);
  if ((*(_BYTE *)(v4 + 192) & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
    OUTLINED_FUNCTION_21();
    v6 = OUTLINED_FUNCTION_213_0();
    v7(v6, v5);
    v8 = v4 + 200;
    OUTLINED_FUNCTION_9();
    if (*(_QWORD *)(*(_QWORD *)(v4 + 200) + 16)
      && (sub_242239B90(), (v10 & 1) != 0)
      && (OUTLINED_FUNCTION_159_1(v9),
          v12 = *(_QWORD *)(v11 + 8),
          v5 = *(_QWORD *)(v11 + 16),
          OUTLINED_FUNCTION_156_2(),
          OUTLINED_FUNCTION_183_1(v12, v5),
          v4 != 1))
    {
      OUTLINED_FUNCTION_65_8();
      v59 = swift_retain();
      OUTLINED_FUNCTION_160_0(v59, v12, v5);
      if (v4)
      {
        if (qword_2543A9D40 != -1)
          swift_once();
        v60 = OUTLINED_FUNCTION_54();
        v61 = __swift_project_value_buffer(v60, (uint64_t)qword_2543A9D28);
        OUTLINED_FUNCTION_94_5(v61, v62, &qword_2543A7850);
        v63 = OUTLINED_FUNCTION_146_0();
        v64 = sub_2422728FC();
        v65 = OUTLINED_FUNCTION_180_1(v63);
        v66 = *(_QWORD *)(v0 + 232);
        if (v65)
        {
          v124 = v63;
          v67 = *(_QWORD *)(v0 + 224);
          v68 = (uint8_t *)OUTLINED_FUNCTION_10();
          v125 = OUTLINED_FUNCTION_10();
          OUTLINED_FUNCTION_221_0(4.8149e-34);
          OUTLINED_FUNCTION_359(v66, v69, &qword_2543A7850);
          _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
          OUTLINED_FUNCTION_64_7(v67);
          *(_QWORD *)(v0 + 176) = OUTLINED_FUNCTION_138_3(v70, v71, &v125);
          OUTLINED_FUNCTION_111_4();
          OUTLINED_FUNCTION_86_0();
          OUTLINED_FUNCTION_64_7(v66);
          OUTLINED_FUNCTION_53(&dword_2421B5000, v124, v64, "Reusing existing session for %s", v68);
          OUTLINED_FUNCTION_30();
          OUTLINED_FUNCTION_2();
        }
        sub_2421D3B00(*(_QWORD *)(v0 + 232), &qword_2543A7850);

        v80 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 272) = v80;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA5C8);
        *v80 = v0;
        v80[1] = sub_2422366A4;
        return OUTLINED_FUNCTION_62_7();
      }
    }
    else
    {
      OUTLINED_FUNCTION_65_8();
    }
    OUTLINED_FUNCTION_9();
    v13 = *(_QWORD *)v8;
    v118 = v4 + 200;
    if (*(_QWORD *)(*(_QWORD *)v8 + 16)
      && (sub_242239B90(), (v14 & 1) != 0)
      && (OUTLINED_FUNCTION_66_7(), OUTLINED_FUNCTION_55_8(), v13 != 1))
    {
      v72 = OUTLINED_FUNCTION_65_8();
      OUTLINED_FUNCTION_61_7(v72, v73, v74, v75, v76, v77, v78, v79, v81, v86, v91, v96, v101, v106, v110, v113, v116, v118, v120,
        v122);
      OUTLINED_FUNCTION_95_6();
      v15 = v2;
    }
    else
    {
      OUTLINED_FUNCTION_65_8();
      OUTLINED_FUNCTION_196_0();
    }
    v16 = OUTLINED_FUNCTION_26_7(v15, v81, v86, v91, v96, v101, v106, v110, v113, v116, v118, v120, v122);
    OUTLINED_FUNCTION_129(v4, v17, v18, v16);
    OUTLINED_FUNCTION_359(v1, v19, &qword_2543A7850);
    sub_24223C734(&qword_2571E21F8, v20, (void (*)(uint64_t))type metadata accessor for ModelServiceClient);
    OUTLINED_FUNCTION_38_6();
    v21 = swift_allocObject();
    v22 = OUTLINED_FUNCTION_197(v21);
    sub_242213644(v22, v23, &qword_2543A7850);
    OUTLINED_FUNCTION_228_0(v24, v25, v26, v27, v28, v29, v30, v31, v82, v87, v92, v97, v102);
    sub_242213644(v3, v32, &qword_2571E2200);
    OUTLINED_FUNCTION_55_7();
    v33 = OUTLINED_FUNCTION_57_1();
    v41 = OUTLINED_FUNCTION_77_7(v33, v34, v35, v36, v37, v38, v39, v40, v83, v88, v93, v98, v103, v107, v111, v114, v117, v119, v121,
            v123);
    v48 = OUTLINED_FUNCTION_229_0(v41, (uint64_t)&unk_2571E2208, v42, v43, v44, v45, v46, v47, v84, v89, v94, v99, v104, v108);
    *(_QWORD *)(v0 + 16) = v48;
    *(_QWORD *)(v0 + 288) = v48;
    *(_QWORD *)(v0 + 24) = v5;
    *(_QWORD *)(v0 + 32) = v1;
    *(_QWORD *)(v0 + 40) = v3;
    *(_QWORD *)(v0 + 48) = v2;
    *(_BYTE *)(v0 + 56) = v4;
    OUTLINED_FUNCTION_4();
    v49 = OUTLINED_FUNCTION_145_2();
    OUTLINED_FUNCTION_178_1(v49, v50, v51, v52, v53, v54, v55, v56, v85, v90, v95, v100, v105, v109, v112, v115);
    OUTLINED_FUNCTION_113_4();
    v57 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v57;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA5C8);
    *v57 = v0;
    v57[1] = sub_242236750;
    return OUTLINED_FUNCTION_62_7();
  }
  *(_BYTE *)(v4 + 192) = 1;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 112), *(_QWORD *)(v4 + 136));
  *(_QWORD *)(v0 + 248) = sub_2421F0730();
  *(_QWORD *)(v0 + 256) = swift_allocObject();
  swift_weakInit();
  OUTLINED_FUNCTION_145_2();
  OUTLINED_FUNCTION_94();
  return swift_task_switch();
}

uint64_t sub_242236250()
{
  uint64_t v0;

  sub_2422297F0((uint64_t)sub_24223BC88, *(_QWORD *)(v0 + 256));
  OUTLINED_FUNCTION_88_8();
  swift_release();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_2422362AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  _BOOL4 v66;
  uint64_t v67;
  uint64_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  NSObject *v125;
  uint64_t v126;

  v4 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD *)(v0 + 184) + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
  OUTLINED_FUNCTION_21();
  v6 = OUTLINED_FUNCTION_213_0();
  v7(v6, v5);
  v8 = v4 + 200;
  OUTLINED_FUNCTION_9();
  if (!*(_QWORD *)(*(_QWORD *)(v4 + 200) + 16)
    || (sub_242239B90(), (v10 & 1) == 0)
    || (OUTLINED_FUNCTION_159_1(v9),
        v13 = *(_QWORD *)(v11 + 8),
        v12 = *(_QWORD *)(v11 + 16),
        OUTLINED_FUNCTION_156_2(),
        OUTLINED_FUNCTION_183_1(v13, v12),
        v4 == 1))
  {
    OUTLINED_FUNCTION_157_2();
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_157_2();
  v60 = swift_retain();
  OUTLINED_FUNCTION_160_0(v60, v13, v12);
  if (!v4)
  {
LABEL_5:
    OUTLINED_FUNCTION_9();
    v14 = *(_QWORD *)v8;
    v119 = v4 + 200;
    if (*(_QWORD *)(*(_QWORD *)v8 + 16)
      && (sub_242239B90(), (v15 & 1) != 0)
      && (OUTLINED_FUNCTION_66_7(), OUTLINED_FUNCTION_55_8(), v14 != 1))
    {
      v73 = OUTLINED_FUNCTION_65_8();
      OUTLINED_FUNCTION_61_7(v73, v74, v75, v76, v77, v78, v79, v80, v82, v87, v92, v97, v102, v107, v111, v114, v117, v119, v121,
        v123);
      OUTLINED_FUNCTION_95_6();
      v16 = v2;
    }
    else
    {
      OUTLINED_FUNCTION_65_8();
      OUTLINED_FUNCTION_196_0();
    }
    v17 = OUTLINED_FUNCTION_26_7(v16, v82, v87, v92, v97, v102, v107, v111, v114, v117, v119, v121, v123);
    OUTLINED_FUNCTION_129(v4, v18, v19, v17);
    OUTLINED_FUNCTION_359(v1, v20, &qword_2543A7850);
    sub_24223C734(&qword_2571E21F8, v21, (void (*)(uint64_t))type metadata accessor for ModelServiceClient);
    OUTLINED_FUNCTION_38_6();
    v22 = swift_allocObject();
    v23 = OUTLINED_FUNCTION_197(v22);
    sub_242213644(v23, v24, &qword_2543A7850);
    OUTLINED_FUNCTION_228_0(v25, v26, v27, v28, v29, v30, v31, v32, v83, v88, v93, v98, v103);
    sub_242213644(v3, v33, &qword_2571E2200);
    OUTLINED_FUNCTION_55_7();
    v34 = OUTLINED_FUNCTION_57_1();
    v42 = OUTLINED_FUNCTION_77_7(v34, v35, v36, v37, v38, v39, v40, v41, v84, v89, v94, v99, v104, v108, v112, v115, v118, v120, v122,
            v124);
    v49 = OUTLINED_FUNCTION_229_0(v42, (uint64_t)&unk_2571E2208, v43, v44, v45, v46, v47, v48, v85, v90, v95, v100, v105, v109);
    *(_QWORD *)(v0 + 16) = v49;
    *(_QWORD *)(v0 + 288) = v49;
    *(_QWORD *)(v0 + 24) = v0 + 104;
    *(_QWORD *)(v0 + 32) = v1;
    *(_QWORD *)(v0 + 40) = v3;
    *(_QWORD *)(v0 + 48) = v2;
    *(_BYTE *)(v0 + 56) = v4;
    OUTLINED_FUNCTION_4();
    v50 = OUTLINED_FUNCTION_145_2();
    OUTLINED_FUNCTION_178_1(v50, v51, v52, v53, v54, v55, v56, v57, v86, v91, v96, v101, v106, v110, v113, v116);
    OUTLINED_FUNCTION_113_4();
    v58 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v58;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA5C8);
    *v58 = v0;
    v58[1] = sub_242236750;
    return OUTLINED_FUNCTION_62_7();
  }
  if (qword_2543A9D40 != -1)
    swift_once();
  v61 = OUTLINED_FUNCTION_54();
  v62 = __swift_project_value_buffer(v61, (uint64_t)qword_2543A9D28);
  OUTLINED_FUNCTION_94_5(v62, v63, &qword_2543A7850);
  v64 = OUTLINED_FUNCTION_146_0();
  v65 = sub_2422728FC();
  v66 = OUTLINED_FUNCTION_180_1(v64);
  v67 = *(_QWORD *)(v0 + 232);
  if (v66)
  {
    v125 = v64;
    v68 = *(_QWORD *)(v0 + 224);
    v69 = (uint8_t *)OUTLINED_FUNCTION_10();
    v126 = OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_221_0(4.8149e-34);
    OUTLINED_FUNCTION_359(v67, v70, &qword_2543A7850);
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    OUTLINED_FUNCTION_64_7(v68);
    *(_QWORD *)(v0 + 176) = OUTLINED_FUNCTION_138_3(v71, v72, &v126);
    OUTLINED_FUNCTION_111_4();
    OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_64_7(v67);
    OUTLINED_FUNCTION_53(&dword_2421B5000, v125, v65, "Reusing existing session for %s", v69);
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_2();
  }
  sub_2421D3B00(*(_QWORD *)(v0 + 232), &qword_2543A7850);

  v81 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v81;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA5C8);
  *v81 = v0;
  v81[1] = sub_2422366A4;
  return OUTLINED_FUNCTION_62_7();
}

uint64_t sub_2422366A4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 280) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2422366F4()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v0 = swift_release();
  OUTLINED_FUNCTION_85_5(v0, &qword_2543A7850);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_7_2(v1);
}

uint64_t sub_242236750()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 304) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2422367A0()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  v0 = swift_release();
  OUTLINED_FUNCTION_85_5(v0, &qword_2543A7850);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_7_2(v1);
}

uint64_t sub_2422367FC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_178();
  v1 = swift_release();
  OUTLINED_FUNCTION_73_5(v1, &qword_2543A7850);
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  return OUTLINED_FUNCTION_72_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24223685C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_178();
  v1 = swift_release();
  OUTLINED_FUNCTION_73_5(v1, &qword_2543A7850);
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  return OUTLINED_FUNCTION_72_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ModelServiceClient.executeRequest(clientData:modelBundleID:requiredAssetIDs:id:session:loggingIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v10[41] = a9;
  v10[42] = v9;
  v10[39] = a7;
  v10[40] = a8;
  v10[37] = a5;
  v10[38] = a6;
  v10[35] = a3;
  v10[36] = a4;
  v10[33] = a1;
  v10[34] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
  v10[43] = OUTLINED_FUNCTION_17();
  v10[44] = OUTLINED_FUNCTION_111_3();
  v10[45] = OUTLINED_FUNCTION_17();
  v11 = sub_242272848();
  v10[46] = v11;
  v10[47] = *(_QWORD *)(v11 - 8);
  v10[48] = OUTLINED_FUNCTION_17();
  v10[49] = type metadata accessor for InferenceProviderRequestResult(0);
  v10[50] = OUTLINED_FUNCTION_4_6();
  v10[51] = OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  v10[52] = OUTLINED_FUNCTION_4_6();
  v10[53] = OUTLINED_FUNCTION_22();
  v10[54] = OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  v10[55] = OUTLINED_FUNCTION_4_6();
  v10[56] = OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_106_6();
}

uint64_t sub_2422369D0()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_79();
  v0[57] = OUTLINED_FUNCTION_14_1();
  v0[58] = OUTLINED_FUNCTION_93("Client executing request", 24);
  v1 = (_QWORD *)swift_task_alloc();
  v0[59] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_242236A64;
  v2 = OUTLINED_FUNCTION_51(v0[39]);
  return OUTLINED_FUNCTION_120_2(v2);
}

uint64_t sub_242236A64()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 480) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_3();
}

void sub_242236B00()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  _BOOL8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  _QWORD *v39;
  uint64_t v41;
  uint64_t v42;
  int v43;
  os_log_type_t type;
  uint64_t v45[19];

  v45[1] = *MEMORY[0x24BDAC8D0];
  if (qword_2543A9D40 != -1)
    swift_once();
  v1 = v0[56];
  v3 = v0[38];
  v2 = (void *)v0[39];
  v4 = OUTLINED_FUNCTION_54();
  v0[61] = __swift_project_value_buffer(v4, (uint64_t)qword_2543A9D28);
  OUTLINED_FUNCTION_359(v3, v5, &qword_2543A7848);
  OUTLINED_FUNCTION_55_7();
  OUTLINED_FUNCTION_194_0();
  v6 = OUTLINED_FUNCTION_130_3();
  v7 = OUTLINED_FUNCTION_101_6(v6);
  v8 = v0[56];
  if (v7)
  {
    type = v1;
    v10 = v0[54];
    v9 = v0[55];
    v41 = v0[39];
    v11 = OUTLINED_FUNCTION_10();
    v42 = OUTLINED_FUNCTION_10();
    v45[0] = v42;
    *(_DWORD *)v11 = 136315394;
    OUTLINED_FUNCTION_359(v8, v12, &qword_2543A7848);
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    OUTLINED_FUNCTION_64_7(v9);
    v0[31] = OUTLINED_FUNCTION_181_1(v13, v14, v15, v16, v17);
    sub_242272950();
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_64_7(v8);
    *(_WORD *)(v11 + 12) = 2080;
    v18 = v41 + OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
    v19 = OUTLINED_FUNCTION_21();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v10, v18, v19);
    v20 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    v22 = v21;
    sub_2421D3B00(v10, &qword_2543A7850);
    v0[32] = sub_2421BB36C(v20, v22, v45);
    sub_242272950();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_88_8();
    OUTLINED_FUNCTION_142_2(&dword_2421B5000, v23, v24, "Sending execute request for %s:%s", v25, v26, v27, v28, (uint64_t)(v0 + 32), (uint64_t)(v0 + 31), v41, v42, v43, type);
    OUTLINED_FUNCTION_128_2();
    OUTLINED_FUNCTION_2();
  }
  OUTLINED_FUNCTION_168_1(v7, &qword_2543A7848);
  OUTLINED_FUNCTION_88_8();

  v29 = v0[53];
  v30 = v0[47];
  v31 = (_QWORD *)v0[42];
  v32 = v0[39];
  v33 = v31[17];
  v34 = v31[18];
  __swift_project_boxed_opaque_existential_1(v31 + 14, v33);
  v35 = OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
  v0[62] = OBJC_IVAR____TtC20ModelManagerServices7Session_uuid;
  v36 = v32 + v35;
  v37 = OUTLINED_FUNCTION_21();
  v0[63] = v37;
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v0[64] = v38;
  v38(v29, v36, v37);
  sub_24227289C();
  sub_24227283C();
  OUTLINED_FUNCTION_134_3(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
  v39 = (_QWORD *)OUTLINED_FUNCTION_45_8();
  v0[65] = v39;
  *v39 = v0;
  v39[1] = sub_242236E30;
  v45[17] = v33;
  v45[18] = v34;
  OUTLINED_FUNCTION_204();
  OUTLINED_FUNCTION_92_5();
  __asm { BR              X12 }
}

uint64_t sub_242236E30()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 528) = v1;
  swift_task_dealloc();
  sub_2421D3B00(*(_QWORD *)(v0 + 424), &qword_2543A7850);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_242236EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[16];

  OUTLINED_FUNCTION_123_2();
  v1 = *(_QWORD *)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 352);
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 80);
  v9 = *(_BYTE *)(v0 + 88);
  OUTLINED_FUNCTION_128_1(*(_QWORD *)(v0 + 400), v10, type metadata accessor for InferenceProviderRequestResult);
  sub_242213618(v1 + *(int *)(v2 + 24), v4, &qword_2571E0560);
  if (__swift_getEnumTagSinglePayload(v4, 1, v3) == 1)
  {
    v11 = *(void **)(v0 + 488);
    v12 = *(_QWORD *)(v0 + 344);
    OUTLINED_FUNCTION_108();
    OUTLINED_FUNCTION_86_0();
    sub_2421D3B00(v12, &qword_2571E0560);
    sub_242272494();
    v13 = OUTLINED_FUNCTION_17_5();
    if (OUTLINED_FUNCTION_137_0(v13))
    {
      *(_WORD *)OUTLINED_FUNCTION_10() = 0;
      OUTLINED_FUNCTION_116_2(&dword_2421B5000, v14, v15, "ModelXPCSender executeRequest called with invalid data");
      OUTLINED_FUNCTION_2();
    }
    v16 = *(_QWORD *)(v0 + 464);
    v17 = *(_QWORD *)(v0 + 408);

    OUTLINED_FUNCTION_68_1();
    OUTLINED_FUNCTION_132_3(&qword_2543A99A0, v18, (void (*)(uint64_t))type metadata accessor for ModelManagerError);
    OUTLINED_FUNCTION_70_5();
    OUTLINED_FUNCTION_141_3();
    OUTLINED_FUNCTION_107_2();
    sub_2421D3DF4(v17, type metadata accessor for InferenceProviderRequestResult);
    OUTLINED_FUNCTION_4();
    os_activity_scope_leave((os_activity_scope_state_t)(v16 + 24));
    OUTLINED_FUNCTION_65_8();
    swift_release();
    OUTLINED_FUNCTION_57();
    OUTLINED_FUNCTION_37();
    OUTLINED_FUNCTION_43();
    OUTLINED_FUNCTION_38();
    OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_27_5();
    OUTLINED_FUNCTION_91_3();
    OUTLINED_FUNCTION_182();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_144_1();
    v19 = (uint64_t (*)(void))OUTLINED_FUNCTION_177_1();
  }
  else
  {
    v33 = v6;
    v34[0] = v9;
    v20 = *(_QWORD *)(v0 + 504);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
    v22 = *(_QWORD *)(v0 + 416);
    v23 = *(_QWORD *)(v0 + 312) + *(_QWORD *)(v0 + 496);
    sub_2421D11A4(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 360), type metadata accessor for ClientData);
    v21(v22, v23, v20);
    OUTLINED_FUNCTION_4();
    sub_242234D0C((_QWORD *)(v0 + 96), v22);
    OUTLINED_FUNCTION_186_1();
    if (!v25)
    {
      v26 = *(_QWORD *)(v24 + 16);
      v32 = *(_QWORD *)(v24 + 8);
      *(_QWORD *)(v24 + 8) = v33;
      *(_QWORD *)(v24 + 16) = v5;
      *(_QWORD *)(v24 + 24) = v8;
      *(_QWORD *)(v24 + 32) = v7;
      *(_BYTE *)(v24 + 40) = v34[0];
      sub_242272644();
      sub_242272644();
      OUTLINED_FUNCTION_155_1(v32, v26);
    }
    OUTLINED_FUNCTION_127_3();
    v27 = *(_QWORD *)(v0 + 408);
    v28 = *(_QWORD *)(v0 + 360);
    OUTLINED_FUNCTION_113_4();
    OUTLINED_FUNCTION_108();
    v29 = OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_168_1(v29, &qword_2543A7850);
    sub_2421D3DF4(v27, type metadata accessor for InferenceProviderRequestResult);
    OUTLINED_FUNCTION_128_1(v28, v30, type metadata accessor for ClientData);
    OUTLINED_FUNCTION_4();
    OUTLINED_FUNCTION_140_2();
    swift_endAccess();
    swift_release();
    swift_task_dealloc();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_189_0();
    OUTLINED_FUNCTION_218();
    OUTLINED_FUNCTION_182();
    OUTLINED_FUNCTION_91_3();
    OUTLINED_FUNCTION_145_1();
    OUTLINED_FUNCTION_217();
    OUTLINED_FUNCTION_38();
    OUTLINED_FUNCTION_144_1();
    v19 = (uint64_t (*)(void))OUTLINED_FUNCTION_177_1();
  }
  return OUTLINED_FUNCTION_16_7(v19);
}

uint64_t sub_242237234()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_122_3();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_57_7();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_190();
  return OUTLINED_FUNCTION_54_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2422372E4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_122_3();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_57_7();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  OUTLINED_FUNCTION_91_3();
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_190();
  return OUTLINED_FUNCTION_54_8(*(uint64_t (**)(void))(v0 + 8));
}

void ModelServiceClient.executeStreamingRequest(clientData:modelBundleID:requiredAssetIDs:id:session:loggingIdentifier:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(_QWORD);
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  OUTLINED_FUNCTION_172_0();
  v51 = v1;
  v52 = v2;
  v49 = v0;
  v50 = v3;
  v46 = v4;
  v47 = v5;
  v7 = v6;
  v41 = v6;
  v44 = v8;
  v45 = v9;
  v43 = v10;
  v12 = v11;
  v48 = v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v42 = (uint64_t)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v40 - v18;
  v20 = OUTLINED_FUNCTION_111_3();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2421CE528(v12, (uint64_t)v23, v24);
  sub_242213618(v7, (uint64_t)v19, &qword_2543A7848);
  v25 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v26 = (v22 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  v28 = *(unsigned __int8 *)(v15 + 80);
  v29 = (v28 + v27 + 8) & ~v28;
  v40[1] = v28 | 7;
  v16 += 7;
  v30 = swift_allocObject();
  v31 = v50;
  *(_QWORD *)(v30 + 16) = v49;
  *(_QWORD *)(v30 + 24) = v31;
  sub_2421D11A4((uint64_t)v23, v30 + v25, type metadata accessor for ClientData);
  v32 = (_QWORD *)(v30 + v26);
  v33 = v44;
  *v32 = v43;
  v32[1] = v33;
  *(_QWORD *)(v30 + v27) = v45;
  sub_242213644((uint64_t)v19, v30 + v29, &qword_2543A7848);
  v34 = (_QWORD *)(v30 + ((v16 + v29) & 0xFFFFFFFFFFFFFFF8));
  v35 = v47;
  *v34 = v46;
  v34[1] = v35;
  v36 = v42;
  OUTLINED_FUNCTION_223_0(v41, v42);
  v37 = (v28 + 24) & ~v28;
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v49;
  sub_242213644(v36, v38 + v37, &qword_2543A7848);
  *(_QWORD *)(v38 + ((v16 + v37) & 0xFFFFFFFFFFFFFFF8)) = v50;
  v39 = v48;
  *v48 = &unk_2571E2220;
  v39[1] = v30;
  v39[2] = 0;
  v39[3] = sub_24223C0D8;
  v39[4] = v38;
  sub_242272644();
  sub_242272644();
  OUTLINED_FUNCTION_55_7();
  OUTLINED_FUNCTION_55_7();
  sub_242272644();
  OUTLINED_FUNCTION_73_1();
}

uint64_t sub_2422375EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;

  v8[15] = v12;
  v8[16] = v13;
  v8[13] = a7;
  v8[14] = a8;
  v8[11] = a5;
  v8[12] = a6;
  v8[9] = a3;
  v8[10] = a4;
  v8[7] = a1;
  v8[8] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  v8[17] = swift_task_alloc();
  v10 = (_QWORD *)swift_task_alloc();
  v8[18] = v10;
  *v10 = v8;
  v10[1] = sub_242237680;
  return ModelServiceClient.establishment(of:)(a3);
}

uint64_t sub_242237680()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_70_1();
  v2 = *v1;
  OUTLINED_FUNCTION_33_8(v3);
  if (v0)
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_7_2(*(uint64_t (**)(void))(v2 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_29();
    return OUTLINED_FUNCTION_42();
  }
}

uint64_t sub_2422376D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  _QWORD *v12;

  OUTLINED_FUNCTION_21();
  v10 = OUTLINED_FUNCTION_29_1();
  v11(v10);
  v12 = (_QWORD *)swift_task_alloc();
  v9[19] = (uint64_t)v12;
  *v12 = v9;
  v12[1] = sub_242237774;
  return sub_242233B88((uint64_t)(v9 + 2), v9[10], v9[11], v9[12], v9[13], v9[14], v9[17], v9[15], a9);
}

uint64_t sub_242237774()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_73();
  *v2 = *v1;
  *(_QWORD *)(v3 + 160) = v0;
  v4 = swift_task_dealloc();
  OUTLINED_FUNCTION_73_5(v4, &qword_2543A7850);
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_42();
}

uint64_t sub_2422377D4()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *boxed_opaque_existential_1;
  uint64_t (*v6)(void);

  v2 = v0[6];
  v1 = (uint64_t *)v0[7];
  v3 = v0[5];
  v4 = __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  v1[3] = v3;
  v1[4] = *(_QWORD *)(v2 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v1);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v4, v3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  OUTLINED_FUNCTION_57();
  v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_151();
  return OUTLINED_FUNCTION_7_2(v6);
}

uint64_t sub_24223785C()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_242237888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_242272848();
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, v12);
  sub_242213618(a2, (uint64_t)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2543A7848);
  v13 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = a1;
  sub_242213644((uint64_t)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v14 + v13, &qword_2543A7848);
  *(_QWORD *)((char *)v14 + ((v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  swift_retain();
  swift_retain();
  sub_2421B7ACC();
  return swift_release();
}

uint64_t sub_2422379DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v9;
  *v9 = v6;
  v9[1] = sub_242237A40;
  return ModelServiceClient.cancelRequest(id:session:)(a5, a6);
}

uint64_t sub_242237A40()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_271();
  if (!v0)
    return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

void sub_242237A7C()
{
  uint64_t v0;

  if (qword_2543A9D40 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_54();
  __swift_project_value_buffer(v0, (uint64_t)qword_2543A9D28);
  OUTLINED_FUNCTION_90_0();
}

uint64_t sub_242237BA8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _BYTE v12[40];
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9D48);
  MEMORY[0x24BDAC7A8](v0);
  v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for _OSActivity();
  swift_initStackObject();
  v3 = _OSActivity.init(_:)("ModelServiceClient reacting to modelmanagerd exit", 49, 2);
  if (qword_2543A9D40 != -1)
    swift_once();
  v4 = sub_2422724AC();
  __swift_project_value_buffer(v4, (uint64_t)qword_2543A9D28);
  v5 = sub_242272494();
  v6 = sub_24227292C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_2421B5000, v5, v6, "modelmanagerd exited", v7, 2u);
    MEMORY[0x2426A6378](v7, -1, -1);
  }

  v8 = sub_242272848();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v8);
  v9 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v9;
  sub_2421B7B90();
  swift_release();
  swift_beginAccess();
  os_activity_scope_leave((os_activity_scope_state_t)(v3 + 24));
  swift_endAccess();
  return swift_release();
}

uint64_t sub_242237DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_242237E04()
{
  uint64_t v0;
  uint64_t Strong;

  OUTLINED_FUNCTION_9();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
    return OUTLINED_FUNCTION_7();
  **(_BYTE **)(v0 + 40) = 1;
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_242237E70()
{
  sub_242237EC4();
  swift_release();
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_242237EA8()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 56) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_242237EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0;
  if (qword_2543A9D40 != -1)
    swift_once();
  v2 = sub_2422724AC();
  __swift_project_value_buffer(v2, (uint64_t)qword_2543A9D28);
  v3 = sub_242272494();
  v4 = sub_2422728FC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_2421B5000, v3, v4, "Resetting session cache", v5, 2u);
    MEMORY[0x2426A6378](v5, -1, -1);
  }

  swift_beginAccess();
  v6 = sub_242272644();
  sub_24223B6F4(v6);
  v8 = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 200) = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_242237FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[21] = a6;
  v7[22] = a7;
  v7[19] = a4;
  v7[20] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  v7[23] = swift_task_alloc();
  v7[24] = swift_task_alloc();
  v7[25] = swift_task_alloc();
  return swift_task_switch();
}

void sub_242238090()
{
  _QWORD *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19[19];

  v19[1] = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_79();
  v0[26] = OUTLINED_FUNCTION_14_1();
  v0[27] = OUTLINED_FUNCTION_93("Client creating session", 23);
  if (qword_2543A9D40 != -1)
    swift_once();
  v1 = v0[25];
  v2 = OUTLINED_FUNCTION_54();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2543A9D28);
  OUTLINED_FUNCTION_94_5(v3, v4, &qword_2543A7850);
  OUTLINED_FUNCTION_194_0();
  v5 = OUTLINED_FUNCTION_130_3();
  v6 = OUTLINED_FUNCTION_352(v5);
  v7 = v0[25];
  if (v6)
  {
    v8 = v0[24];
    v9 = (uint8_t *)OUTLINED_FUNCTION_10();
    v19[0] = OUTLINED_FUNCTION_10();
    *(_DWORD *)v9 = 136315138;
    OUTLINED_FUNCTION_359(v7, v10, &qword_2543A7850);
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    OUTLINED_FUNCTION_64_7(v8);
    v0[18] = OUTLINED_FUNCTION_217_0(v11, v12, v19);
    OUTLINED_FUNCTION_133_3();
    OUTLINED_FUNCTION_79_1();
    OUTLINED_FUNCTION_64_7(v7);
    OUTLINED_FUNCTION_53(&dword_2421B5000, v1, (os_log_type_t)v3, "Sending create session request message for %s", v9);
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_2();
  }
  sub_2421D3B00(v0[25], &qword_2543A7850);

  v14 = v0[21];
  v13 = v0[22];
  OUTLINED_FUNCTION_187_1(v0[20]);
  v15 = *(_QWORD *)(v14 + 104);
  sub_242213644(v13, (uint64_t)(v0 + 7), &qword_2571E2200);
  v16 = (_QWORD *)swift_task_alloc();
  v0[28] = v16;
  *v16 = v0;
  v16[1] = sub_242238300;
  v17 = v0[19];
  v19[16] = (uint64_t)(v0 + 19);
  v19[17] = v3;
  v19[14] = v17;
  v19[15] = (uint64_t)(v0 + 7);
  v19[13] = v15;
  OUTLINED_FUNCTION_92_5();
  __asm { BR              X10 }
}

uint64_t sub_242238300()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 232) = v1;
  swift_task_dealloc();
  if (!v1)
    sub_2421D3B00(*(_QWORD *)(v0 + 184), &qword_2543A7850);
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_2422383B4()
{
  uint64_t v0;
  os_activity_scope_state_s *v1;
  uint64_t (*v2)(void);

  v1 = (os_activity_scope_state_s *)(*(_QWORD *)(v0 + 216) + 24);
  OUTLINED_FUNCTION_4();
  os_activity_scope_leave(v1);
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_215_0();
  return OUTLINED_FUNCTION_24(v2);
}

uint64_t sub_242238448()
{
  uint64_t v0;
  os_activity_scope_state_s *v1;

  v1 = (os_activity_scope_state_s *)(*(_QWORD *)(v0 + 216) + 24);
  OUTLINED_FUNCTION_4();
  os_activity_scope_leave(v1);
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_38();
  return OUTLINED_FUNCTION_24(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ModelServiceClient.deleteSessionRequest(id:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[15] = a1;
  v2[16] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  v2[17] = OUTLINED_FUNCTION_4_6();
  v2[18] = OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_24223855C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_QWORD *a22,uint64_t a23,uint64_t a24)
{
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint64_t v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void);

  OUTLINED_FUNCTION_25_3();
  a23 = v25;
  a24 = v26;
  a22 = v24;
  a13 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_79();
  v24[19] = OUTLINED_FUNCTION_14_1();
  v24[20] = OUTLINED_FUNCTION_93("Client deleting session", 23);
  if (qword_2543A9D40 != -1)
    swift_once();
  v27 = v24[18];
  v28 = OUTLINED_FUNCTION_54();
  v29 = __swift_project_value_buffer(v28, (uint64_t)qword_2543A9D28);
  v30 = v29;
  v24[21] = v29;
  OUTLINED_FUNCTION_94_5(v29, v31, &qword_2543A7850);
  OUTLINED_FUNCTION_194_0();
  v32 = OUTLINED_FUNCTION_130_3();
  v33 = OUTLINED_FUNCTION_352(v32);
  v34 = v24[18];
  if (v33)
  {
    v35 = v24[17];
    v36 = (uint8_t *)OUTLINED_FUNCTION_10();
    a12 = OUTLINED_FUNCTION_10();
    *(_DWORD *)v36 = 136315138;
    OUTLINED_FUNCTION_359(v34, v37, &qword_2543A7850);
    _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    OUTLINED_FUNCTION_64_7(v35);
    v24[14] = OUTLINED_FUNCTION_217_0(v38, v39, &a12);
    OUTLINED_FUNCTION_133_3();
    OUTLINED_FUNCTION_79_1();
    OUTLINED_FUNCTION_64_7(v34);
    OUTLINED_FUNCTION_53(&dword_2421B5000, v27, v30, "Sending deletion session request message for %s", v36);
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_2();
  }
  sub_2421D3B00(v24[18], &qword_2543A7850);

  OUTLINED_FUNCTION_14_9(v24[16]);
  v40 = (_QWORD *)OUTLINED_FUNCTION_45_8();
  v24[22] = v40;
  *v40 = v24;
  v40[1] = sub_24223874C;
  v41 = OUTLINED_FUNCTION_26(v24[15]);
  return OUTLINED_FUNCTION_56_6(v41, v42, v43, v44);
}

uint64_t sub_24223874C()
{
  OUTLINED_FUNCTION_73_7();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_2422387D4()
{
  uint64_t v0;
  uint64_t v2[7];

  v2[6] = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_161_1();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_218_0((uint64_t)v2);
  sub_24223BC90(v2[0], v2[1], v2[2]);
  OUTLINED_FUNCTION_157_2();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_140_2();
  OUTLINED_FUNCTION_201_0();
  OUTLINED_FUNCTION_150();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_57();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_242238898()
{
  OUTLINED_FUNCTION_58();
}

uint64_t sub_2422388DC()
{
  void *v0;
  uint64_t v1;
  os_log_type_t v2;
  _DWORD *v3;
  uint64_t v5[17];

  sub_242272494();
  v2 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_34_2(v2))
  {
    v3 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v3 = 138412290;
    OUTLINED_FUNCTION_58();
  }
  OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_46();

  OUTLINED_FUNCTION_161_1();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_218_0((uint64_t)v5);
  sub_24223BC90(v5[0], v5[1], v5[2]);
  OUTLINED_FUNCTION_201_0();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_140_2();
  OUTLINED_FUNCTION_157_2();
  OUTLINED_FUNCTION_150();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_57();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t ModelServiceClient.cancelSessionRequest(session:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[15] = a1;
  v2[16] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  v2[17] = OUTLINED_FUNCTION_4_6();
  v2[18] = OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_242238AA0()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  OUTLINED_FUNCTION_25_3();
  OUTLINED_FUNCTION_79();
  v0[19] = OUTLINED_FUNCTION_14_1();
  v0[20] = OUTLINED_FUNCTION_93("Client cancelling session", 25);
  if (qword_2543A9D40 != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_54();
  v2 = __swift_project_value_buffer(v1, (uint64_t)qword_2543A9D28);
  v0[21] = v2;
  OUTLINED_FUNCTION_55_7();
  OUTLINED_FUNCTION_171_1();
  v3 = OUTLINED_FUNCTION_130_3();
  if (OUTLINED_FUNCTION_180_1(v2))
  {
    v4 = (uint8_t *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *(_DWORD *)v4 = 136315138;
    v5 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_114_4(v5);
    v6 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    OUTLINED_FUNCTION_85_5(v6, &qword_2543A7850);
    v0[14] = OUTLINED_FUNCTION_166_1(v7, v8, v9);
    sub_242272950();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_88_8();
    OUTLINED_FUNCTION_53(&dword_2421B5000, v2, v3, "Sending cancel session request message for %s", v4);
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_2();
  }
  OUTLINED_FUNCTION_88_8();

  v10 = (_QWORD *)swift_task_alloc();
  v0[22] = v10;
  *v10 = v0;
  v10[1] = sub_242238CAC;
  v11 = OUTLINED_FUNCTION_51(v0[15]);
  return ModelServiceClient.establishment(of:)(v11);
}

uint64_t sub_242238CAC()
{
  OUTLINED_FUNCTION_73_7();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_242238D34()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_178();
  OUTLINED_FUNCTION_14_9(v0[16]);
  v1 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_51_7(v1);
  v2 = (_QWORD *)OUTLINED_FUNCTION_45_8();
  v0[24] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_242238DCC;
  v3 = OUTLINED_FUNCTION_26(v0[17]);
  return OUTLINED_FUNCTION_6(v3, v4, v5, v6);
}

uint64_t sub_242238DCC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_70_1();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v0 + 200) = v1;
  swift_task_dealloc();
  sub_2421D3B00(*(_QWORD *)(v0 + 136), &qword_2543A7850);
  OUTLINED_FUNCTION_50_2();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_242238E74()
{
  uint64_t v0;
  os_activity_scope_state_s *v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_178();
  v1 = (os_activity_scope_state_s *)(*(_QWORD *)(v0 + 160) + 24);
  OUTLINED_FUNCTION_4();
  os_activity_scope_leave(v1);
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_216_0();
  return OUTLINED_FUNCTION_72_1(v2);
}

void sub_242238F00()
{
  OUTLINED_FUNCTION_58();
}

uint64_t sub_242238F44()
{
  os_log_type_t v0;
  _DWORD *v1;
  uint64_t (*v2)(void);

  sub_242272494();
  v0 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_34_2(v0))
  {
    v1 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v1 = 138412290;
    OUTLINED_FUNCTION_58();
  }
  OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_191_0();
  swift_willThrow();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_140_2();
  OUTLINED_FUNCTION_113_4();
  OUTLINED_FUNCTION_198_0();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_215_0();
  return OUTLINED_FUNCTION_60_7(v2);
}

void sub_242239034()
{
  OUTLINED_FUNCTION_58();
}

uint64_t sub_242239078()
{
  os_log_type_t v0;
  _DWORD *v1;
  uint64_t (*v2)(void);

  sub_242272494();
  v0 = OUTLINED_FUNCTION_17_5();
  if (OUTLINED_FUNCTION_34_2(v0))
  {
    v1 = (_DWORD *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *v1 = 138412290;
    OUTLINED_FUNCTION_58();
  }
  OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_46();
  OUTLINED_FUNCTION_191_0();
  swift_willThrow();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_140_2();
  OUTLINED_FUNCTION_113_4();
  OUTLINED_FUNCTION_198_0();
  OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_27_5();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_215_0();
  return OUTLINED_FUNCTION_60_7(v2);
}

uint64_t ModelServiceClient.prewarmSession(session:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[17] = a1;
  v2[18] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  v2[19] = OUTLINED_FUNCTION_4_6();
  v2[20] = OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_94();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_2422391E4()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_79();
  v0[21] = OUTLINED_FUNCTION_14_1();
  v0[22] = OUTLINED_FUNCTION_93("Client prewarming session", 25);
  v1 = (_QWORD *)swift_task_alloc();
  v0[23] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_242239274;
  v2 = OUTLINED_FUNCTION_51(v0[17]);
  return OUTLINED_FUNCTION_120_2(v2);
}

uint64_t sub_242239274()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_76(&v4);
  *(_QWORD *)(v2 + 192) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_242239318()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);

  OUTLINED_FUNCTION_25_3();
  if (qword_2543A9D40 != -1)
    swift_once();
  v1 = OUTLINED_FUNCTION_54();
  v2 = __swift_project_value_buffer(v1, (uint64_t)qword_2543A9D28);
  OUTLINED_FUNCTION_55_7();
  OUTLINED_FUNCTION_171_1();
  v3 = OUTLINED_FUNCTION_130_3();
  if (OUTLINED_FUNCTION_180_1(v2))
  {
    v4 = (uint8_t *)OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_10();
    *(_DWORD *)v4 = 136315138;
    v5 = OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_114_4(v5);
    v6 = _s20ModelManagerServices14UUIDIdentifierV10uuidStringSSvg_0();
    OUTLINED_FUNCTION_85_5(v6, &qword_2543A7850);
    v0[16] = OUTLINED_FUNCTION_166_1(v7, v8, v9);
    OUTLINED_FUNCTION_133_3();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_88_8();
    OUTLINED_FUNCTION_53(&dword_2421B5000, v2, v3, "Sending session prewarm request message for %s", v4);
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_2();
  }
  OUTLINED_FUNCTION_88_8();

  OUTLINED_FUNCTION_14_9(v0[18]);
  v10 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_51_7(v10);
  v11 = (_QWORD *)OUTLINED_FUNCTION_45_8();
  v0[25] = v11;
  *v11 = v0;
  v11[1] = sub_2422394F8;
  v12 = OUTLINED_FUNCTION_26(v0[19]);
  return OUTLINED_FUNCTION_56_6(v12, v13, v14, v15);
}

uint64_t sub_2422394F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_135_0();
  OUTLINED_FUNCTION_76(v2);
  *(_QWORD *)(v1 + 208) = v0;
  v3 = swift_task_dealloc();
  OUTLINED_FUNCTION_73_5(v3, &qword_2543A7850);
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_2422395A4()
{
  uint64_t v0;
  os_activity_scope_state_s *v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_178();
  v1 = (os_activity_scope_state_s *)(*(_QWORD *)(v0 + 176) + 24);
  OUTLINED_FUNCTION_4();
  os_activity_scope_leave(v1);
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_43();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_216_0();
  return OUTLINED_FUNCTION_72_1(v2);
}

uint64_t sub_242239630()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_122_3();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_225();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_216_0();
  return OUTLINED_FUNCTION_1_1(v0);
}

uint64_t sub_2422396AC()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_122_3();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_225();
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_37();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_216_0();
  return OUTLINED_FUNCTION_1_1(v0);
}

uint64_t ModelServiceClient.setAssetsHaveUpdated()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_130_0();
}

uint64_t sub_24223973C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_14_9(*(_QWORD *)(v0 + 16));
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 24) = v1;
  v2 = OUTLINED_FUNCTION_184_0(v1, (uint64_t)sub_24222B660);
  return OUTLINED_FUNCTION_57_2(v2, v3, v4);
}

uint64_t ModelServiceClient.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_242239788()
{
  return ModelServiceClient.unownedExecutor.getter();
}

uint64_t sub_2422397A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421C71E8;
  return ModelServiceClient.establishment(of:)(a1);
}

uint64_t sub_2422397F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421C71E8;
  return ModelServiceClient.deleteSessionRequest(id:)(a1);
}

uint64_t sub_242239840(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421C71E8;
  return ModelServiceClient.cancelSessionRequest(session:)(a1);
}

uint64_t sub_242239890(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421C71E8;
  return ModelServiceClient.prewarmSession(session:)(a1);
}

uint64_t sub_2422398E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2421C60C4;
  return ModelServiceClient.fetchModelInstance(session:)(a1, a2);
}

uint64_t sub_242239944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v16;
  uint64_t v19;

  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v16;
  *v16 = v8;
  v16[1] = sub_2421C71E8;
  return ModelServiceClient.executeRequest(clientData:modelBundleID:requiredAssetIDs:id:session:loggingIdentifier:)(a1, a2, a3, a4, a5, a6, a7, a8, v19);
}

uint64_t sub_2422399F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2421C71E8;
  return ModelServiceClient.cancelRequest(id:session:)(a1, a2);
}

void sub_242239A58()
{
  ModelServiceClient.executeStreamingRequest(clientData:modelBundleID:requiredAssetIDs:id:session:loggingIdentifier:)();
}

uint64_t sub_242239A78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 32));
  sub_2421C7064(v2);
  return v2;
}

uint64_t sub_242239AB0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_242239AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  OUTLINED_FUNCTION_100_5();
  sub_2422726EC();
  v4 = OUTLINED_FUNCTION_84();
  return sub_242239C8C(a1, a2, v4);
}

unint64_t sub_242239B38(uint64_t a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_100_5();
  sub_242272CF8();
  v2 = OUTLINED_FUNCTION_84();
  return sub_242239D6C(a1, v2);
}

void sub_242239B84()
{
  sub_242239B90();
}

void sub_242239B90()
{
  uint64_t v0;

  OUTLINED_FUNCTION_100_5();
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_132_3(&qword_2543AA0D8, v0, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  sub_242272680();
  OUTLINED_FUNCTION_84();
  sub_242239E08();
}

uint64_t sub_242239C24()
{
  uint64_t v0;

  OUTLINED_FUNCTION_100_5();
  sub_242272CD4();
  v0 = OUTLINED_FUNCTION_84();
  return sub_242239EFC(v0);
}

unint64_t sub_242239C5C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_242272CB0();
  return sub_242239D6C(a1, v2);
}

unint64_t sub_242239C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_242272C20() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_242272C20() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_242239D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

void sub_242239E08()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  OUTLINED_FUNCTION_172_0();
  v2 = v1;
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(v1);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_66();
  v9 = v8 - v7;
  v10 = -1 << *(_BYTE *)(v0 + 32);
  v11 = v4 & ~v10;
  if (((*(_QWORD *)(v0 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    do
    {
      OUTLINED_FUNCTION_223_0(*(_QWORD *)(v0 + 48) + v13 * v11, v9);
      v14 = _s20ModelManagerServices14UUIDIdentifierV2eeoiySbACyxG_AEtFZ_0();
      sub_2421D3B00(v9, v2);
      if ((v14 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v0 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  OUTLINED_FUNCTION_73_1();
}

uint64_t sub_242239EFC(uint64_t a1)
{
  uint64_t v1;

  return a1 & ~(-1 << *(_BYTE *)(v1 + 32));
}

void sub_242239F28(uint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  _BYTE v17[8];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  if (a4 < 1)
    return;
  v8 = a1[1];
  v9 = v8 + a4;
  if (__OFADD__(v8, a4))
  {
    __break(1u);
    goto LABEL_9;
  }
  a1[1] = v9;
  if (v9 < v8)
  {
LABEL_9:
    __break(1u);
    return;
  }
  sub_24223A00C(v8, v9, a1, a2, (uint64_t)&v12);
  v16 = v12;
  sub_242213644((uint64_t)&v16, (uint64_t)v17, &qword_2571E2378);
  sub_242213644((uint64_t)v17, (uint64_t)&v23, &qword_2571E2378);
  v10 = v13;
  v11 = v14;
  if (v15 & 1 | (v14 == 0))
  {
    v10 = 0;
    v11 = 0;
  }
  v18 = v23;
  v19 = *((_QWORD *)&v16 + 1);
  v20 = v10;
  v21 = v11;
  v22 = v15 & 1 | (v14 == 0);
  sub_24223A0C8(a3, a4);
}

uint64_t sub_24223A00C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int v17;
  uint64_t v18;

  v6 = a3[2];
  v7 = v6 + result;
  v8 = *a3;
  if (v6 + result >= *a3)
    v9 = *a3;
  else
    v9 = 0;
  v10 = v6 + a2;
  if (v10 >= v8)
    v11 = *a3;
  else
    v11 = 0;
  v12 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    v14 = v7 - v9;
    v15 = v10 - v11;
    if (v12)
      v16 = v14 < v15;
    else
      v16 = 1;
    v17 = v16;
    result = type metadata accessor for ClientData(0);
    if (v17 == 1)
    {
      v18 = 0;
      v15 = 0;
LABEL_18:
      *(_QWORD *)a5 = a4 + *(_QWORD *)(*(_QWORD *)(result - 8) + 72) * v14;
      *(_QWORD *)(a5 + 8) = v12;
      *(_QWORD *)(a5 + 16) = v18;
      *(_QWORD *)(a5 + 24) = v15;
      *(_BYTE *)(a5 + 32) = v17;
      return result;
    }
    v12 = v8 - v14;
    if (!__OFSUB__(v8, v14))
    {
      v18 = a4;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

void sub_24223A0C8(unint64_t a1, uint64_t a2)
{
  __int128 *v2;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __int128 v24;
  _BYTE v25[8];
  _BYTE v26[24];
  __int128 v27;
  char v28;
  __int128 v29;
  unint64_t v30;
  _BYTE v31[8];
  unint64_t v32;

  sub_242213644((uint64_t)(v2 + 1), (uint64_t)v26, &qword_2571E2368);
  sub_242213644((uint64_t)v26, (uint64_t)&v27, &qword_2571E2368);
  if ((v28 & 1) == 0)
  {
    v29 = v27;
    v24 = *v2;
    v10 = *((_QWORD *)&v24 + 1);
    if ((*((_QWORD *)&v24 + 1) & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      if (a1)
      {
        if (*((_QWORD *)&v24 + 1))
        {
          sub_242213644((uint64_t)&v24, (uint64_t)v25, &qword_2571E2370);
          sub_242213644((uint64_t)v25, (uint64_t)&v30, &qword_2571E2370);
          v11 = v30;
          if (v30)
          {
            v12 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClientData(0) - 8) + 72) * v10;
            v13 = v11 + v12;
            v14 = a1 + v12;
            if (v13 > a1 && v14 > v11)
              goto LABEL_38;
            swift_arrayInitWithCopy();
          }
        }
      }
      if (!__OFADD__(v10, a2 - v10))
      {
        if (a2 >= v10)
        {
          if (a1)
          {
            v16 = a2 - v10;
            if (a2 != v10)
            {
              if (*((uint64_t *)&v29 + 1) >= v16)
              {
                sub_242213644((uint64_t)&v29, (uint64_t)v31, &qword_2571E2370);
                sub_242213644((uint64_t)v31, (uint64_t)&v32, &qword_2571E2370);
                v17 = v32;
                if (!v32)
                  return;
                v18 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClientData(0) - 8) + 72);
                v19 = a1 + v18 * v10;
                v20 = v18 * v16;
                v21 = v17 + v20;
                v22 = v19 + v20;
                if (v19 >= v21 || v22 <= v17)
                  goto LABEL_31;
                goto LABEL_38;
              }
LABEL_37:
              __break(1u);
              goto LABEL_38;
            }
          }
          return;
        }
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    __break(1u);
    goto LABEL_35;
  }
  if (a1 && a2)
  {
    v29 = *v2;
    if (*((uint64_t *)&v29 + 1) >= a2)
    {
      sub_242213644((uint64_t)&v29, (uint64_t)&v32, &qword_2571E2370);
      sub_242213644((uint64_t)&v32, (uint64_t)&v24, &qword_2571E2370);
      v5 = v24;
      if (!(_QWORD)v24)
        return;
      if ((a2 & 0x8000000000000000) == 0)
      {
        v6 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ClientData(0) - 8) + 72) * a2;
        v7 = v5 + v6;
        v8 = a1 + v6;
        if (v7 <= a1 || v8 <= v5)
        {
LABEL_31:
          swift_arrayInitWithCopy();
          return;
        }
      }
LABEL_38:
      sub_242272A28();
      __break(1u);
      return;
    }
    goto LABEL_36;
  }
}

void (*sub_24223A374(_QWORD *a1, uint64_t a2))(uint64_t a1)
{
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = malloc(0x58uLL);
  *a1 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v4[8] = v6;
  swift_isUniquelyReferenced_nonNull_native();
  sub_242213618(a2, (uint64_t)v6, &qword_2543A7848);
  v4[9] = sub_24223A828(v4);
  v4[10] = sub_24223A54C(v4 + 4, (uint64_t)v6);
  return sub_24223A42C;
}

void sub_24223A42C(uint64_t a1)
{
  sub_24223A4FC(a1);
}

void (*sub_24223A438(_QWORD *a1, uint64_t a2))(uint64_t a1)
{
  _QWORD *v4;
  uint64_t v5;
  void *v6;

  v4 = malloc(0x58uLL);
  *a1 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v4[8] = v6;
  swift_isUniquelyReferenced_nonNull_native();
  sub_242213618(a2, (uint64_t)v6, &qword_2543A7850);
  v4[9] = sub_24223A854(v4);
  v4[10] = sub_24223A6A0(v4 + 4, (uint64_t)v6);
  return sub_24223A4F0;
}

void sub_24223A4F0(uint64_t a1)
{
  sub_24223A4FC(a1);
}

void sub_24223A4FC(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  void *v3;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  v3 = *(void **)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  OUTLINED_FUNCTION_212_0();
  v2(v1, 0);
  free(v3);
  OUTLINED_FUNCTION_109_5(v1);
}

void (*sub_24223A54C(_QWORD *a1, uint64_t a2))(void **a1)
{
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void (*result)(void **);

  v3 = v2;
  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[1] = a2;
  v6[2] = v3;
  v7 = *v3;
  sub_242239B90();
  *((_BYTE *)v6 + 32) = v9 & 1;
  if (__OFADD__(*(_QWORD *)(v7 + 16), (v9 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v10 = v8;
  v11 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E22E0);
  if ((sub_2422729E0() & 1) != 0)
  {
    sub_242239B90();
    if ((v11 & 1) == (v13 & 1))
    {
      v10 = v12;
      goto LABEL_5;
    }
LABEL_10:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
    result = (void (*)(void **))sub_242272C74();
    __break(1u);
    return result;
  }
LABEL_5:
  v6[3] = v10;
  if ((v11 & 1) != 0)
    v14 = *(_QWORD *)(*(_QWORD *)(*v3 + 56) + 8 * v10);
  else
    v14 = 0;
  *v6 = v14;
  return sub_24223A668;
}

void sub_24223A668(void **a1)
{
  void *v1;

  v1 = *a1;
  sub_24226F2D4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_136_2(v1);
}

void (*sub_24223A6A0(_QWORD *a1, uint64_t a2))(uint64_t **a1)
{
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  void (*result)(uint64_t **);

  v3 = v2;
  v6 = malloc(0x48uLL);
  *a1 = v6;
  v6[6] = a2;
  v6[7] = v3;
  v7 = *v3;
  sub_242239B90();
  *((_BYTE *)v6 + 41) = v9 & 1;
  if (__OFADD__(*(_QWORD *)(v7 + 16), (v9 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v10 = v8;
  v11 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E22F0);
  if ((sub_2422729E0() & 1) != 0)
  {
    sub_242239B90();
    if ((v11 & 1) == (v13 & 1))
    {
      v10 = v12;
      goto LABEL_5;
    }
LABEL_10:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
    result = (void (*)(uint64_t **))sub_242272C74();
    __break(1u);
    return result;
  }
LABEL_5:
  v6[8] = v10;
  if ((v11 & 1) != 0)
  {
    v14 = *(_QWORD *)(*v3 + 56) + 48 * v10;
    v15 = *(_OWORD *)v14;
    v16 = *(_OWORD *)(v14 + 16);
    v17 = *(_QWORD *)(v14 + 32);
    v18 = *(_BYTE *)(v14 + 40);
  }
  else
  {
    v17 = 0;
    v18 = 0;
    v15 = xmmword_24227CB90;
    v16 = 0uLL;
  }
  *(_OWORD *)v6 = v15;
  *((_OWORD *)v6 + 1) = v16;
  v6[4] = v17;
  *((_BYTE *)v6 + 40) = v18;
  return sub_24223A7E4;
}

void sub_24223A7E4(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_24226F400();
  sub_24223BC90(*v1, v1[1], v1[2]);
  OUTLINED_FUNCTION_136_2(v1);
}

uint64_t (*sub_24223A828(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_24223A848;
}

uint64_t sub_24223A848(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t (*sub_24223A854(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_24223DCA0;
}

unint64_t sub_24223A874(unint64_t result, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a4[6] + 8 * result) = a2;
  *(_BYTE *)(a4[7] + result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

void sub_24223A8BC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  sub_242213644(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, &qword_2543A7848);
  v10 = a4[7];
  v11 = type metadata accessor for InferenceProviderRequestStream();
  sub_2421D11A4(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for InferenceProviderRequestStream);
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
}

void sub_24223A978(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  OUTLINED_FUNCTION_50_7(a1, a2, a3, a4);
  v7 = OUTLINED_FUNCTION_174_0();
  OUTLINED_FUNCTION_123_4(v7);
  *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6) = v5;
  v8 = *(_QWORD *)(v4 + 16);
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v10;
    OUTLINED_FUNCTION_15_2();
  }
}

void sub_24223A9C4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  __int128 v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  OUTLINED_FUNCTION_50_7(a1, a2, a3, a4);
  v7 = OUTLINED_FUNCTION_174_0();
  OUTLINED_FUNCTION_123_4(v7);
  v8 = (_OWORD *)(*(_QWORD *)(v4 + 56) + 48 * v6);
  *(_OWORD *)((char *)v8 + 25) = *(_OWORD *)((char *)v5 + 25);
  v9 = v5[1];
  *v8 = *v5;
  v8[1] = v9;
  v10 = *(_QWORD *)(v4 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v12;
    OUTLINED_FUNCTION_15_2();
  }
}

unint64_t sub_24223AA24(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  *(_QWORD *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  v4 = (_QWORD *)(*(_QWORD *)(a4 + 56) + 16 * result);
  *v4 = a2;
  v4[1] = a3;
  v5 = *(_QWORD *)(a4 + 16);
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    *(_QWORD *)(a4 + 16) = v7;
  return result;
}

uint64_t sub_24223AA64(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_2421BCE50(a3, a4[7] + 40 * a1);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_24223AACC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  OUTLINED_FUNCTION_172_0();
  v1 = v0;
  v3 = v2;
  sub_242272644();
  sub_242239B90();
  v5 = v4;
  v7 = v6;
  OUTLINED_FUNCTION_40_0();
  if ((v7 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v16 = *v1;
    *v1 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571E22D8);
    sub_2422729E0();
    v8 = *(_QWORD *)(v16 + 48);
    v9 = OUTLINED_FUNCTION_174_0();
    OUTLINED_FUNCTION_208_0(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v5);
    v10 = *(_QWORD *)(v16 + 56);
    v11 = type metadata accessor for InferenceProviderRequestStream();
    sub_2421D11A4(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v5, v3, (uint64_t (*)(_QWORD))type metadata accessor for InferenceProviderRequestStream);
    sub_24223CA30(&qword_2571E22D0, &qword_2543A7848);
    sub_2422729F8();
    *v1 = v16;
    swift_bridgeObjectRelease();
    v12 = v3;
    v13 = 0;
    v14 = v11;
  }
  else
  {
    v14 = type metadata accessor for InferenceProviderRequestStream();
    v12 = v3;
    v13 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v12, v13, 1, v14);
}

void sub_24223AC38()
{
  sub_24223AEAC();
}

double sub_24223AC4C@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  double result;
  uint64_t v15;

  v2 = v1;
  sub_242272644();
  sub_242239B90();
  v5 = v4;
  v7 = v6;
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v15 = *v2;
    *v2 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571E22F0);
    sub_2422729E0();
    v8 = *(_QWORD *)(v15 + 48);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
    sub_2421D3B00(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v5, &qword_2543A7850);
    v10 = *(_QWORD *)(v15 + 56) + 48 * v5;
    v11 = *(_QWORD *)(v10 + 32);
    v12 = *(_BYTE *)(v10 + 40);
    v13 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v10;
    *(_OWORD *)(a1 + 16) = v13;
    *(_QWORD *)(a1 + 32) = v11;
    *(_BYTE *)(a1 + 40) = v12;
    sub_24223CA30(&qword_2571E22F8, &qword_2543A7850);
    sub_2422729F8();
    *v2 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)a1 = 1;
    result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_BYTE *)(a1 + 40) = 0;
  }
  return result;
}

uint64_t sub_24223ADC8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v0 = sub_242239C24();
  if ((v1 & 1) == 0)
    return 0;
  v2 = v0;
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_199_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E22B8);
  sub_2422729E0();
  v3 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 16 * v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA010);
  sub_2421BBE74();
  sub_2422729F8();
  OUTLINED_FUNCTION_206();
  return v3;
}

void sub_24223AE98()
{
  sub_24223AEAC();
}

void sub_24223AEAC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_172_0();
  v1 = v0;
  sub_242272644();
  sub_242239B90();
  v3 = v2;
  v5 = v4;
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_199_0();
    OUTLINED_FUNCTION_174_0();
    sub_2422729E0();
    v6 = *(_QWORD *)(v8 + 48);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
    sub_2421D3B00(v6 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v3, &qword_2543A7848);
    __swift_instantiateConcreteTypeFromMangledName(v1);
    sub_24223CA30(&qword_2571E22D0, &qword_2543A7848);
    sub_2422729F8();
    OUTLINED_FUNCTION_206();
  }
  OUTLINED_FUNCTION_14_7();
}

uint64_t sub_24223AFC0(char a1, uint64_t a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  swift_isUniquelyReferenced_nonNull_native();
  v15 = *v2;
  *v2 = 0x8000000000000000;
  v5 = sub_24223B108(a1, a2);
  OUTLINED_FUNCTION_116_5(v5, v6, v7, v8, v9, v10, v11, v12, v14, v15);
  return OUTLINED_FUNCTION_27_8();
}

uint64_t sub_24223B018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_67_5();
  v0 = OUTLINED_FUNCTION_35_7();
  sub_24223B200(v0, v1);
  OUTLINED_FUNCTION_116_5(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return OUTLINED_FUNCTION_27_8();
}

uint64_t sub_24223B044(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  swift_isUniquelyReferenced_nonNull_native();
  v6 = *v2;
  *v2 = 0x8000000000000000;
  sub_24223B380(a1, a2);
  *v2 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24223B0B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_67_5();
  v0 = OUTLINED_FUNCTION_35_7();
  sub_24223B4F4(v0, v1);
  OUTLINED_FUNCTION_116_5(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return OUTLINED_FUNCTION_27_8();
}

uint64_t sub_24223B0DC()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_67_5();
  v0 = (__int128 *)OUTLINED_FUNCTION_35_7();
  v2 = sub_24223B5EC(v0, v1);
  OUTLINED_FUNCTION_116_5(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return OUTLINED_FUNCTION_27_8();
}

unint64_t sub_24223B108(char a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t result;
  char v12;
  _QWORD *v13;

  v3 = (_QWORD **)v2;
  v6 = (_QWORD *)*v2;
  v7 = sub_242239B38(a2);
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA230);
  result = sub_2422729E0();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_242239B38(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    result = sub_242272C74();
    __break(1u);
    return result;
  }
  v9 = result;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) == 0)
    return sub_24223A874(v9, a2, a1 & 1, v13);
  *(_BYTE *)(v13[7] + v9) = a1 & 1;
  return result;
}

void sub_24223B200(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = (_QWORD **)v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)*v2;
  sub_242239B90();
  if (__OFADD__(v9[2], (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = v10;
  v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E22D8);
  if ((sub_2422729E0() & 1) == 0)
    goto LABEL_5;
  sub_242239B90();
  if ((v13 & 1) != (v15 & 1))
  {
LABEL_9:
    sub_242272C74();
    __break(1u);
    return;
  }
  v12 = v14;
LABEL_5:
  v16 = *v3;
  if ((v13 & 1) != 0)
  {
    v17 = v16[7];
    v18 = type metadata accessor for InferenceProviderRequestStream();
    sub_24223C6F0(a1, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v12);
  }
  else
  {
    sub_242213618(a2, (uint64_t)v8, &qword_2543A7848);
    sub_24223A8BC(v12, (uint64_t)v8, a1, v16);
  }
}

void sub_24223B380(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_242239B90();
  if (__OFADD__(*(_QWORD *)(v9 + 16), (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = v10;
  v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E22F0);
  if ((sub_2422729E0() & 1) == 0)
    goto LABEL_5;
  sub_242239B90();
  if ((v13 & 1) != (v15 & 1))
  {
LABEL_9:
    sub_242272C74();
    __break(1u);
    return;
  }
  v12 = v14;
LABEL_5:
  v16 = *v3;
  if ((v13 & 1) != 0)
  {
    sub_24223CB3C(a1, *(_QWORD *)(v16 + 56) + 48 * v12);
  }
  else
  {
    sub_242213618(a2, (uint64_t)v8, &qword_2543A7850);
    sub_24223A9C4(v12, (uint64_t)v8, a1, v16);
  }
}

void sub_24223B4F4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_242239C24();
  if (__OFADD__(*(_QWORD *)(v6 + 16), (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E22B8);
  if ((sub_2422729E0() & 1) == 0)
    goto LABEL_5;
  v11 = sub_242239C24();
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    sub_242272C74();
    __break(1u);
    return;
  }
  v9 = v11;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) != 0)
  {
    v14 = *(_QWORD *)(v13 + 56) + 16 * v9;

    *(_QWORD *)v14 = a1;
    *(_QWORD *)(v14 + 8) = a2;
  }
  else
  {
    sub_24223AA24(v9, a1, a2, v13);
  }
}

uint64_t sub_24223B5EC(__int128 *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t result;

  v3 = (_QWORD **)v2;
  v6 = (_QWORD *)*v2;
  v7 = sub_242239C5C(a2);
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7988);
  if ((sub_2422729E0() & 1) == 0)
    goto LABEL_5;
  v11 = sub_242239C5C(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    result = sub_242272C74();
    __break(1u);
    return result;
  }
  v9 = v11;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) == 0)
    return sub_24223AA64(v9, a2, a1, v13);
  v14 = v13[7] + 40 * v9;
  __swift_destroy_boxed_opaque_existential_1Tm(v14);
  return sub_2421BCE50(a1, v14);
}

void sub_24223B6F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  v38 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v37 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E23A0);
  v4 = sub_242272A1C();
  v5 = 0;
  v39 = a1;
  v8 = *(_QWORD *)(a1 + 64);
  v7 = a1 + 64;
  v6 = v8;
  v9 = 1 << *(_BYTE *)(v7 - 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v6;
  v33 = v7;
  v34 = (unint64_t)(v9 + 63) >> 6;
  v35 = v4 + 64;
  v36 = v4;
  v12 = (uint64_t)v37;
  if (!v11)
    goto LABEL_5;
LABEL_4:
  v40 = (v11 - 1) & v11;
  v41 = v5;
  for (i = __clz(__rbit64(v11)) | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v16 << 6))
  {
    v18 = v39;
    v19 = *(_QWORD *)(v39 + 48);
    v42 = *(_QWORD *)(v38 + 72) * i;
    sub_242213618(v19 + v42, v12, &qword_2543A7850);
    v20 = 3 * i;
    v21 = *(_QWORD *)(v18 + 56) + 48 * i;
    v22 = *(_QWORD *)(v21 + 8);
    v23 = *(_QWORD *)(v21 + 16);
    v24 = *(_QWORD *)(v21 + 24);
    v25 = *(_QWORD *)(v21 + 32);
    v26 = *(_BYTE *)(v21 + 40);
    swift_retain();
    sub_242211358(v22, v23);
    swift_release();
    *(_QWORD *)(v35 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v27 = v36;
    sub_242213644(v12, *(_QWORD *)(v36 + 48) + v42, &qword_2543A7850);
    v28 = *(_QWORD *)(v27 + 56) + 16 * v20;
    *(_QWORD *)v28 = 0;
    *(_QWORD *)(v28 + 8) = v22;
    *(_QWORD *)(v28 + 16) = v23;
    *(_QWORD *)(v28 + 24) = v24;
    *(_QWORD *)(v28 + 32) = v25;
    *(_BYTE *)(v28 + 40) = v26;
    v29 = *(_QWORD *)(v27 + 16);
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *(_QWORD *)(v27 + 16) = v31;
    v11 = v40;
    v5 = v41;
    if (v40)
      goto LABEL_4;
LABEL_5:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_24;
    if (v14 >= v34)
      return;
    v15 = *(_QWORD *)(v33 + 8 * v14);
    v16 = v5 + 1;
    if (!v15)
    {
      v16 = v5 + 2;
      if (v5 + 2 >= v34)
        return;
      v15 = *(_QWORD *)(v33 + 8 * v16);
      if (!v15)
      {
        v16 = v5 + 3;
        if (v5 + 3 >= v34)
          return;
        v15 = *(_QWORD *)(v33 + 8 * v16);
        if (!v15)
          break;
      }
    }
LABEL_18:
    v40 = (v15 - 1) & v15;
    v41 = v16;
  }
  v17 = v5 + 4;
  if (v5 + 4 >= v34)
    return;
  v15 = *(_QWORD *)(v33 + 8 * v17);
  if (v15)
  {
    v16 = v5 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v34)
      return;
    v15 = *(_QWORD *)(v33 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_24223B9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v26 = a7;
  v11 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v12);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v25 - v20;
  (*(void (**)(char *))(v16 + 32))((char *)&v25 - v20);
  v22 = swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, a5);
  v23 = sub_24223BBA8((uint64_t)v19, (uint64_t)v14, v22, a4, a5, a6, v26);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, a5);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, a4);
  return v23;
}

uint64_t sub_24223BB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v7;
  uint64_t v8;
  _UNKNOWN **v9;
  __int128 v10;
  uint64_t v11;
  _UNKNOWN **v12;

  v11 = type metadata accessor for ModelXPCSender();
  v12 = &protocol witness table for ModelXPCSender;
  *(_QWORD *)&v10 = a1;
  v8 = type metadata accessor for RunningBoardSelfAssertions();
  v9 = &off_2513346D0;
  *(_QWORD *)&v7 = a2;
  swift_defaultActor_initialize();
  *(_BYTE *)(a3 + 192) = 0;
  *(_QWORD *)(a3 + 200) = MEMORY[0x24BEE4B00];
  sub_2421BCE50(&v10, a3 + 112);
  sub_2421BCE50(&v7, a3 + 152);
  return a3;
}

uint64_t sub_24223BBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a4;
  v21 = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  v17 = a5;
  v18 = a7;
  v14 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v14, a2, a5);
  swift_defaultActor_initialize();
  *(_BYTE *)(a3 + 192) = 0;
  *(_QWORD *)(a3 + 200) = MEMORY[0x24BEE4B00];
  sub_2421BCE50(&v19, a3 + 112);
  sub_2421BCE50(&v16, a3 + 152);
  return a3;
}

uint64_t sub_24223BC64()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24223BC88()
{
  return sub_242237BA8();
}

uint64_t sub_24223BC90(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != 1)
  {
    swift_release();
    return sub_242239AB0(a2, a3);
  }
  return result;
}

uint64_t type metadata accessor for ModelServiceClient()
{
  return objc_opt_self();
}

uint64_t sub_24223BD10()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  v2 = (((((*(_QWORD *)(*(_QWORD *)(v1 - 8) + 64)
          + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80))
          + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  v3 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_3_3(v3);
  OUTLINED_FUNCTION_193_0();
  swift_release();
  if (*(_QWORD *)(v0 + v2 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return OUTLINED_FUNCTION_39_6();
}

uint64_t sub_24223BDAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  OUTLINED_FUNCTION_153_1();
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = *(_QWORD *)(v1 + v4);
  v10 = v1 + v9;
  v11 = *(_QWORD *)(v1 + v5);
  v12 = v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  v13 = swift_task_alloc();
  v14 = (_QWORD *)OUTLINED_FUNCTION_92(v13);
  *v14 = v2;
  v14[1] = sub_2421C60C4;
  return sub_242237FDC(a1, v6, v7, v10, v8, v11, v12);
}

uint64_t sub_24223BE68()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_172_0();
  v1 = OUTLINED_FUNCTION_111_3();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  swift_release();
  swift_release();
  v3 = sub_2422725CC();
  if (!OUTLINED_FUNCTION_200_0(v0 + v2))
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  if (!OUTLINED_FUNCTION_200_0(v0 + v2 + *(int *)(v1 + 20)))
  {
    v4 = OUTLINED_FUNCTION_29_1();
    v5(v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_68_5(v6);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_118_5();
  OUTLINED_FUNCTION_73_1();
  return swift_deallocObject();
}

uint64_t sub_24223BF98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = OUTLINED_FUNCTION_111_3();
  v3 = (*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64)
      + ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_153_1();
  v4 = *(_QWORD *)(v0 + v3 + 8);
  v5 = *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));
  v7 = v0 + v6;
  v8 = swift_task_alloc();
  v9 = (_QWORD *)OUTLINED_FUNCTION_92(v8);
  *v9 = v1;
  v9[1] = sub_2421C71E8;
  OUTLINED_FUNCTION_164_1();
  return sub_2422375EC(v10, v11, v12, v13, v14, v4, v5, v7);
}

uint64_t sub_24223C080()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_96_7();
  swift_release();
  v0 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_68_5(v0);
  OUTLINED_FUNCTION_193_0();
  return OUTLINED_FUNCTION_39_6();
}

uint64_t sub_24223C0D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_152_1();
  return sub_242237888(*(_QWORD *)(v0 + 16), v0 + v1, *(_QWORD *)(v0 + v2));
}

uint64_t dispatch thunk of ModelServiceClientProtocol.establishment(of:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_60();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_19(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_6(v2, v3, v4, v5);
}

uint64_t dispatch thunk of ModelServiceClientProtocol.deleteSessionRequest(id:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_60();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_19(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_6(v2, v3, v4, v5);
}

uint64_t dispatch thunk of ModelServiceClientProtocol.cancelSessionRequest(session:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_60();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_19(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_6(v2, v3, v4, v5);
}

uint64_t dispatch thunk of ModelServiceClientProtocol.prewarmSession(session:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_60();
  v1 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_19(v1, (uint64_t)sub_2421C71E8);
  return OUTLINED_FUNCTION_6(v2, v3, v4, v5);
}

uint64_t dispatch thunk of ModelServiceClientProtocol.fetchModelInstance(session:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_178();
  OUTLINED_FUNCTION_139();
  v1 = OUTLINED_FUNCTION_49();
  v2 = (_QWORD *)OUTLINED_FUNCTION_92(v1);
  *v2 = v0;
  v2[1] = sub_2421C71E8;
  OUTLINED_FUNCTION_322();
  return v3();
}

uint64_t dispatch thunk of ModelServiceClientProtocol.executeRequest(clientData:modelBundleID:requiredAssetIDs:id:session:loggingIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_25_3();
  v31 = v12;
  v30 = v13;
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a11 + 48) + *(_QWORD *)(a11 + 48));
  v26 = swift_task_alloc();
  v27 = (_QWORD *)OUTLINED_FUNCTION_92(v26);
  *v27 = v11;
  v27[1] = sub_2421C71E8;
  return v29(v25, v23, v21, v19, v17, v15, v30, v31, a9, a10, a11);
}

uint64_t dispatch thunk of ModelServiceClientProtocol.cancelRequest(id:session:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_178();
  OUTLINED_FUNCTION_139();
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421C71E8;
  OUTLINED_FUNCTION_322();
  return OUTLINED_FUNCTION_303(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of ModelServiceClientProtocol.executeStreamingRequest(clientData:modelBundleID:requiredAssetIDs:id:session:loggingIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 64))();
}

uint64_t method lookup function for ModelServiceClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ModelServiceClient.__allocating_init(sender:runningBoardAssertions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t destroy for ModelServiceClient.SessionCache(uint64_t a1)
{
  uint64_t result;

  swift_release();
  result = *(_QWORD *)(a1 + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ModelServiceClient.SessionCache(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  swift_retain();
  if (v5)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v5;
    v6 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v6;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    sub_242272644();
    sub_242272644();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 24);
    *v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  }
  return a1;
}

uint64_t assignWithCopy for ModelServiceClient.SessionCache(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      sub_242272644();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      sub_242272644();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    }
    else
    {
      sub_24223C564(a1 + 8);
      v7 = *(_BYTE *)(a2 + 40);
      v8 = *(_OWORD *)(a2 + 24);
      *v4 = *v5;
      *(_OWORD *)(a1 + 24) = v8;
      *(_BYTE *)(a1 + 40) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    sub_242272644();
    sub_242272644();
  }
  else
  {
    v9 = *v5;
    v10 = *(_OWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *v4 = v9;
    *(_OWORD *)(a1 + 24) = v10;
  }
  return a1;
}

uint64_t sub_24223C564(uint64_t a1)
{
  destroy for InferenceProviderAssetDescriptor();
  return a1;
}

uint64_t assignWithTake for ModelServiceClient.SessionCache(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
  {
    sub_24223C564(a1 + 8);
LABEL_5:
    v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    return a1;
  }
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelServiceClient.SessionCache(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 41))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelServiceClient.SessionCache(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelServiceClient.SessionCache()
{
  return &type metadata for ModelServiceClient.SessionCache;
}

uint64_t sub_24223C6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InferenceProviderRequestStream();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_24223C734(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t))
{
  if (!*a1)
  {
    a3(a2);
    OUTLINED_FUNCTION_78();
  }
  OUTLINED_FUNCTION_34();
}

uint64_t sub_24223C768()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_96_7();
  swift_unknownObjectRelease();
  swift_release();
  v0 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_68_5(v0);
  OUTLINED_FUNCTION_193_0();
  return OUTLINED_FUNCTION_39_6();
}

uint64_t sub_24223C7C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_152_1();
  v3 = *(_QWORD *)(v0 + v2);
  v4 = swift_task_alloc();
  v5 = (_QWORD *)OUTLINED_FUNCTION_92(v4);
  *v5 = v1;
  v5[1] = sub_2421C71E8;
  OUTLINED_FUNCTION_164_1();
  return sub_2422379DC(v6, v7, v8, v9, v10, v3);
}

uint64_t type metadata accessor for ModelServiceClient.StreamBacking()
{
  uint64_t result;

  result = qword_2571E23A8;
  if (!qword_2571E23A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24223C88C()
{
  uint64_t v0;

  return sub_242234DE4(v0);
}

uint64_t sub_24223C894()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, uint64_t);

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850) - 8) + 80);
  v5 = (v2 + v3 + v4) & ~v4;
  v6 = OUTLINED_FUNCTION_21();
  v7 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v0 + v2, v6);
  v7(v0 + v5, v6);
  OUTLINED_FUNCTION_118_5();
  return swift_deallocObject();
}

uint64_t sub_24223C948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850) - 8) + 80);
  v6 = v0 + ((v3 + v4 + v5) & ~v5);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_2421C71E8;
  v8 = OUTLINED_FUNCTION_29_1();
  return sub_242234F9C(v8, v9, v6);
}

uint64_t sub_24223C9E8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421C71E8;
  return sub_24223582C();
}

void sub_24223CA30(_QWORD *a1, uint64_t *a2)
{
  if (!*a1)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    OUTLINED_FUNCTION_78();
  }
  OUTLINED_FUNCTION_34();
}

uint64_t sub_24223CA64(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v8 = v3[2];
  v9 = v3[3];
  v10 = v3[4];
  v11 = swift_task_alloc();
  v12 = (_QWORD *)OUTLINED_FUNCTION_92(v11);
  *v12 = v4;
  v12[1] = sub_2421C71E8;
  return sub_242235338(a1, a2, a3, v8, v9, v10);
}

uint64_t sub_24223CAE8()
{
  uint64_t v0;
  _QWORD *v1;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  OUTLINED_FUNCTION_115_2(v1);
  return sub_242234F54();
}

uint64_t sub_24223CB3C(uint64_t a1, uint64_t a2)
{
  assignWithTake for ModelServiceClient.SessionCache(a2, a1);
  return a2;
}

uint64_t objectdestroy_92Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24223CBA0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_92(v0);
  v2 = OUTLINED_FUNCTION_115_2(v1);
  return sub_242237DEC(v2, v3, v4, v5);
}

_QWORD *sub_24223CBF4(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_24227238C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for ClientData(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = sub_2422725CC();
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v14))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v9, v10, v14);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v14);
      }
      v16 = *(int *)(v11 + 20);
      v17 = &v9[v16];
      v18 = &v10[v16];
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v14))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v17, v18, v14);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v14);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v20 = a3[7];
    *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
    v21 = a3[8];
    v22 = (char *)a1 + v21;
    v23 = (_QWORD *)((char *)a2 + v21);
    v24 = *v23;
    swift_retain();
    if (!v24)
    {
      *(_OWORD *)v22 = *(_OWORD *)v23;
      return a1;
    }
    v25 = v23[1];
    *(_QWORD *)v22 = v24;
    *((_QWORD *)v22 + 1) = v25;
  }
  swift_retain();
  return a1;
}

uint64_t sub_24223CE04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for ClientData(0);
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
  {
    v7 = sub_2422725CC();
    if (!__swift_getEnumTagSinglePayload(v5, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
    v8 = v5 + *(int *)(v6 + 20);
    if (!__swift_getEnumTagSinglePayload(v8, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v8, v7);
  }
  result = swift_release();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 32)))
    return swift_release();
  return result;
}

uint64_t sub_24223CF10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for ClientData(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_2422725CC();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v9, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v12);
    }
    v14 = *(int *)(v10 + 20);
    v15 = &v8[v14];
    v16 = &v9[v14];
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v12))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v15, v16, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v12);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v18 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v22 = *v21;
  swift_retain();
  if (v22)
  {
    v23 = v21[1];
    *v20 = v22;
    v20[1] = v23;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
  }
  return a1;
}

uint64_t sub_24223D0F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;

  v6 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for ClientData(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      v13 = sub_2422725CC();
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v13))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v9, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v13);
      }
      v21 = *(int *)(v10 + 20);
      v22 = &v8[v21];
      v23 = &v9[v21];
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v13))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v22, v23, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v13);
      }
      v25 = (uint64_t)v8;
      v26 = v10;
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  if (v12)
  {
    sub_2421D3DF4((uint64_t)v8, type metadata accessor for ClientData);
LABEL_7:
    v15 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560) - 8) + 64);
    v16 = v8;
    v17 = v9;
LABEL_8:
    memcpy(v16, v17, v15);
    goto LABEL_18;
  }
  v18 = sub_2422725CC();
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v8, v9, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v18);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  v35 = *(_QWORD *)(v18 - 8);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v18);
LABEL_28:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 24))(v8, v9, v18);
LABEL_29:
  v37 = *(int *)(v10 + 20);
  v38 = (uint64_t)&v8[v37];
  v39 = (uint64_t)&v9[v37];
  v40 = __swift_getEnumTagSinglePayload(v38, 1, v18);
  v41 = __swift_getEnumTagSinglePayload(v39, 1, v18);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v38, v39, v18);
      v25 = v38;
      v26 = v18;
LABEL_17:
      __swift_storeEnumTagSinglePayload(v25, 0, 1, v26);
      goto LABEL_18;
    }
    goto LABEL_34;
  }
  v42 = *(_QWORD *)(v18 - 8);
  if (v41)
  {
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v38, v18);
LABEL_34:
    v15 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0) - 8) + 64);
    v16 = (void *)v38;
    v17 = (const void *)v39;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 24))(v38, v39, v18);
LABEL_18:
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v27 = a3[8];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v30 = *(_QWORD *)(a1 + v27);
  v31 = *v29;
  if (!v30)
  {
    if (v31)
    {
      v33 = v29[1];
      *v28 = v31;
      v28[1] = v33;
      swift_retain();
      return a1;
    }
LABEL_24:
    *(_OWORD *)v28 = *(_OWORD *)v29;
    return a1;
  }
  if (!v31)
  {
    swift_release();
    goto LABEL_24;
  }
  v32 = v29[1];
  *v28 = v31;
  v28[1] = v32;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24223D4B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for ClientData(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_2422725CC();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v12);
    }
    v14 = *(int *)(v10 + 20);
    v15 = &v8[v14];
    v16 = &v9[v14];
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v12))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v15, v16, v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v12);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v18 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v22 = *v21;
  if (*v21)
  {
    v23 = v21[1];
    *v20 = v22;
    v20[1] = v23;
  }
  else
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
  }
  return a1;
}

uint64_t sub_24223D698(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;

  v6 = sub_24227238C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for ClientData(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      v13 = sub_2422725CC();
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v13))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v13);
      }
      v21 = *(int *)(v10 + 20);
      v22 = &v8[v21];
      v23 = &v9[v21];
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v13))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v22, v23, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v13);
      }
      v25 = (uint64_t)v8;
      v26 = v10;
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  if (v12)
  {
    sub_2421D3DF4((uint64_t)v8, type metadata accessor for ClientData);
LABEL_7:
    v15 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560) - 8) + 64);
    v16 = v8;
    v17 = v9;
LABEL_8:
    memcpy(v16, v17, v15);
    goto LABEL_18;
  }
  v18 = sub_2422725CC();
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v18);
  v20 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v8, v9, v18);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v18);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  v34 = *(_QWORD *)(v18 - 8);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v18);
LABEL_28:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v8, v9, v18);
LABEL_29:
  v36 = *(int *)(v10 + 20);
  v37 = (uint64_t)&v8[v36];
  v38 = (uint64_t)&v9[v36];
  v39 = __swift_getEnumTagSinglePayload(v37, 1, v18);
  v40 = __swift_getEnumTagSinglePayload(v38, 1, v18);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v37, v38, v18);
      v25 = v37;
      v26 = v18;
LABEL_17:
      __swift_storeEnumTagSinglePayload(v25, 0, 1, v26);
      goto LABEL_18;
    }
    goto LABEL_34;
  }
  v41 = *(_QWORD *)(v18 - 8);
  if (v40)
  {
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v37, v18);
LABEL_34:
    v15 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571E02C0) - 8) + 64);
    v16 = (void *)v37;
    v17 = (const void *)v38;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 40))(v37, v38, v18);
LABEL_18:
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_release();
  v27 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v30 = *v29;
  if (!*(_QWORD *)(a1 + v27))
  {
    if (v30)
    {
      v32 = v29[1];
      *v28 = v30;
      v28[1] = v32;
      return a1;
    }
LABEL_24:
    *(_OWORD *)v28 = *(_OWORD *)v29;
    return a1;
  }
  if (!v30)
  {
    swift_release();
    goto LABEL_24;
  }
  v31 = v29[1];
  *v28 = v30;
  v28[1] = v31;
  swift_release();
  return a1;
}

uint64_t sub_24223DA40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24223DA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_24223DAF4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24223DB00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
    return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E0560);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a1 + *(int *)(a4 + 20);
    return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_24223DBA4()
{
  unint64_t v0;
  unint64_t v1;

  sub_24227238C();
  if (v0 <= 0x3F)
  {
    sub_24223DC48();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_24223DC48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2571E18C8)
  {
    type metadata accessor for ClientData(255);
    v0 = sub_242272938();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2571E18C8);
  }
}

uint64_t sub_24223DCA4()
{
  return sub_242234A40();
}

uint64_t OUTLINED_FUNCTION_0_3()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_4_6()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_8_9()
{
  return swift_task_alloc();
}

_QWORD *OUTLINED_FUNCTION_14_9@<X0>(uint64_t a1@<X8>)
{
  return __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 136));
}

uint64_t OUTLINED_FUNCTION_25_6()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_26_7@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v14 + 64) = a12;
  *(_QWORD *)(v14 + 72) = a13;
  *(_QWORD *)(v14 + 80) = v13;
  *(_QWORD *)(v14 + 88) = v15;
  *(_BYTE *)(v14 + 96) = a1;
  return sub_242272848();
}

uint64_t OUTLINED_FUNCTION_27_8()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_29_7(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_33_8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_35_7()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0x8000000000000000;
  return v1;
}

uint64_t OUTLINED_FUNCTION_39_6()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_40_6()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_44_6(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = a1;
  return sub_242272950();
}

uint64_t OUTLINED_FUNCTION_45_8()
{
  return swift_task_alloc();
}

unint64_t OUTLINED_FUNCTION_50_7(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_QWORD *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  return result;
}

uint64_t OUTLINED_FUNCTION_51_7(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_54_8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_55_8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242211358(v0, v1);
}

uint64_t OUTLINED_FUNCTION_56_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_57_7()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_59_8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_60_7(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_61_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return sub_242211358(a19, a20);
}

uint64_t OUTLINED_FUNCTION_62_7()
{
  return sub_24227286C();
}

void OUTLINED_FUNCTION_64_7(uint64_t a1)
{
  uint64_t *v1;

  sub_2421D3B00(a1, v1);
}

uint64_t OUTLINED_FUNCTION_66_7()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_67_5()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_68_5(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_70_5()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_73_7()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 184) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_77_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return sub_242211358(a19, a20);
}

void OUTLINED_FUNCTION_85_5(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_2421D3B00(v2, a2);
}

uint64_t OUTLINED_FUNCTION_88_8()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_91_6(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return sub_242272950();
}

void OUTLINED_FUNCTION_94_5(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_242213618(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_95_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_24223BC90(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_96_7()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_97_4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_100_5()
{
  return sub_242272CBC();
}

BOOL OUTLINED_FUNCTION_101_6(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_106_6()
{
  return swift_task_switch();
}

void OUTLINED_FUNCTION_109_5(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_111_4()
{
  return sub_242272950();
}

uint64_t OUTLINED_FUNCTION_113_4()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_114_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_116_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t result;

  result = *v10;
  *v10 = a10;
  return result;
}

uint64_t OUTLINED_FUNCTION_120_2(uint64_t a1)
{
  return ModelServiceClient.establishment(of:)(a1);
}

void OUTLINED_FUNCTION_122_3()
{
  os_activity_scope_state_s *v0;

  os_activity_scope_leave(v0);
}

void OUTLINED_FUNCTION_123_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  sub_242213644(v1, v4 + *(_QWORD *)(*(_QWORD *)(a1 - 8) + 72) * v2, v3);
}

uint64_t OUTLINED_FUNCTION_127_3()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1, 0);
}

uint64_t OUTLINED_FUNCTION_128_2()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_130_3()
{
  return sub_2422728FC();
}

void OUTLINED_FUNCTION_132_3(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t))
{
  sub_24223C734(a1, 255, a3);
}

uint64_t OUTLINED_FUNCTION_133_3()
{
  return sub_242272950();
}

uint64_t OUTLINED_FUNCTION_134_3@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void OUTLINED_FUNCTION_136_2(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_138_3(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;
  uint64_t v4;

  return sub_2421BB36C(v4, v3, a3);
}

void OUTLINED_FUNCTION_140_2()
{
  os_activity_scope_state_s *v0;

  os_activity_scope_leave(v0);
}

uint64_t OUTLINED_FUNCTION_141_3()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_142_2(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, os_log_type_t type)
{
  NSObject *v14;
  uint8_t *v15;

  _os_log_impl(a1, v14, type, a4, v15, 0x16u);
}

uint64_t OUTLINED_FUNCTION_145_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_155_1(uint64_t a1, uint64_t a2)
{
  return sub_242239AB0(a1, a2);
}

uint64_t OUTLINED_FUNCTION_156_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_157_2()
{
  return swift_endAccess();
}

void (*OUTLINED_FUNCTION_158())(_QWORD *a1)
{
  uint64_t v0;
  _QWORD *v1;

  return sub_242234D0C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_159_1(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 264) = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 48 * result);
  return result;
}

uint64_t OUTLINED_FUNCTION_160_0(uint64_t result, uint64_t a2, uint64_t a3)
{
  return sub_24223BC90(result, a2, a3);
}

uint64_t OUTLINED_FUNCTION_161_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 128) + 200;
}

uint64_t OUTLINED_FUNCTION_166_1(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  unint64_t v4;
  va_list va;

  va_start(va, a3);
  return sub_2421BB36C(v3, v4, (uint64_t *)va);
}

void OUTLINED_FUNCTION_168_1(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_2421D3B00(v2, a2);
}

void OUTLINED_FUNCTION_169_1()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  sub_242213618(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_171_1()
{
  return sub_242272494();
}

uint64_t OUTLINED_FUNCTION_174_0()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_177_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_178_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;

  return sub_24223B044(v16, a16);
}

BOOL OUTLINED_FUNCTION_180_1(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t OUTLINED_FUNCTION_181_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  unint64_t v5;
  uint64_t v6;
  va_list va;

  va_start(va, a5);
  return sub_2421BB36C(v6, v5, (uint64_t *)va);
}

void OUTLINED_FUNCTION_182_1(uint64_t a1)
{
  uint64_t *v1;

  sub_2421D3B00(a1, v1);
}

uint64_t OUTLINED_FUNCTION_183_1(uint64_t a1, uint64_t a2)
{
  return sub_242211358(a1, a2);
}

uint64_t OUTLINED_FUNCTION_184_0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

_QWORD *OUTLINED_FUNCTION_187_1@<X0>(uint64_t a1@<X8>)
{
  return __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 136));
}

uint64_t OUTLINED_FUNCTION_189_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_190()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_191_0()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_192_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_193_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_194_0()
{
  return sub_242272494();
}

void OUTLINED_FUNCTION_195_0()
{
  ModelManagerError.init(wrapping:)();
}

uint64_t OUTLINED_FUNCTION_197(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v2;
  return v1;
}

uint64_t OUTLINED_FUNCTION_198_0()
{
  return swift_release();
}

void OUTLINED_FUNCTION_199_0()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_200_0(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_201_0()
{
  return swift_endAccess();
}

void OUTLINED_FUNCTION_204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 32) = v2;
  *(_QWORD *)(v4 + 40) = v1;
  *(_BYTE *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 16) = v0;
}

uint64_t OUTLINED_FUNCTION_206()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_208_0(uint64_t a1)
{
  uint64_t *v1;

  sub_2421D3B00(a1, v1);
}

void OUTLINED_FUNCTION_210_0()
{
  os_activity_scope_state_s *v0;

  os_activity_scope_leave(v0);
}

void OUTLINED_FUNCTION_212_0()
{
  uint64_t *v0;
  uint64_t v1;

  sub_2421D3B00(v1, v0);
}

uint64_t OUTLINED_FUNCTION_213_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_214_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_215_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_216_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_217_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;
  uint64_t v4;

  return sub_2421BB36C(v4, v3, a3);
}

double OUTLINED_FUNCTION_218_0@<D0>(uint64_t a1@<X8>)
{
  return sub_24223AC4C(a1);
}

uint64_t OUTLINED_FUNCTION_220_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;

  return sub_2421BB36C(v3, v4, a3);
}

void OUTLINED_FUNCTION_221_0(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_222_0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return *(_QWORD *)(v2 + 112);
}

void OUTLINED_FUNCTION_223_0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_242213618(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_225()
{
  return swift_release();
}

void OUTLINED_FUNCTION_228_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v13 + v14) = v15;
  *(_QWORD *)(v13 + v16) = a13;
}

uint64_t OUTLINED_FUNCTION_229_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;

  return sub_2421E7DE0(a14, a2, v14);
}

uint64_t Query.daemonInterface.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2421CE584(v1, a1);
}

uint64_t Query.init(daemonInterface:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2421BCE50(a1, a2);
}

void Query.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 24) = &type metadata for Query.LiveDaemonInterface;
  *(_QWORD *)(a1 + 32) = &protocol witness table for Query.LiveDaemonInterface;
}

uint64_t Query.loadedAssets.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_24223E5EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24));
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 24) = v1;
  v2 = OUTLINED_FUNCTION_184_0(v1, (uint64_t)sub_24223E638);
  return OUTLINED_FUNCTION_57_2(v2, v3, v4);
}

uint64_t sub_24223E638(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_3();
  if (!v1)
    v4 = a1;
  return OUTLINED_FUNCTION_324(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t Query.dynamicAssets.getter()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_24223E688()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24));
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 24) = v1;
  v2 = OUTLINED_FUNCTION_184_0(v1, (uint64_t)sub_24223F01C);
  return OUTLINED_FUNCTION_57_2(v2, v3, v4);
}

uint64_t Query.totalLoadedAssetMemoryCost.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_17_7();
  *(_QWORD *)(v0 + 32) = OUTLINED_FUNCTION_11_7(v1);
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_24223E708()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24));
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 40) = v1;
  v2 = OUTLINED_FUNCTION_184_0(v1, (uint64_t)sub_24223E754);
  return OUTLINED_FUNCTION_57_2(v2, v3, v4);
}

uint64_t sub_24223E754(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_7_7(a1);
  if (v1)
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_9_3(*(uint64_t (**)(void))(v2 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_29();
    return OUTLINED_FUNCTION_42();
  }
}

uint64_t sub_24223E798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  BOOL v10;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 24);
    v4 = *(_QWORD *)(v0 + 32);
    v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v6 = *(_QWORD *)(v3 + 72);
    sub_242272644();
    v7 = 0;
    while (1)
    {
      result = sub_24223E854(v5, *(_QWORD *)(v0 + 32));
      v9 = *(_QWORD *)(v4 + 32);
      v10 = __CFADD__(v7, v9);
      v7 += v9;
      if (v10)
        break;
      sub_24223E898(*(_QWORD *)(v0 + 32));
      v5 += v6;
      if (!--v2)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = 0;
LABEL_7:
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
  }
  return result;
}

uint64_t sub_24223E854(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AssetInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24223E898(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AssetInfo();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Query.totalDynamicAssetMemoryCost.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_17_7();
  *(_QWORD *)(v0 + 32) = OUTLINED_FUNCTION_11_7(v1);
  OUTLINED_FUNCTION_29();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_24223E908()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24));
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 40) = v1;
  v2 = OUTLINED_FUNCTION_184_0(v1, (uint64_t)sub_24223E954);
  return OUTLINED_FUNCTION_57_2(v2, v3, v4);
}

uint64_t sub_24223E954(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_7_7(a1);
  if (v1)
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_9_3(*(uint64_t (**)(void))(v2 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_29();
    return OUTLINED_FUNCTION_42();
  }
}

uint64_t Query.effectivePolicy.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_24223E9A8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 24);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_24223EA14;
  v5 = OUTLINED_FUNCTION_16_9();
  return v7(v5, v2, v3);
}

uint64_t sub_24223EA14()
{
  uint64_t v0;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t Query.policy(named:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_24223EA54()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 40), *(_QWORD *)(*(_QWORD *)(v0 + 40) + 24));
  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_24223EAC4;
  v2 = OUTLINED_FUNCTION_16_9();
  return v4(v2);
}

uint64_t sub_24223EAC4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t Query.LiveDaemonInterface.fetchAllAssetInfo()()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_24223EAFC()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_2543AA2D0 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2421F2D50;
  return ModelXPCSender.fetchAllAssetInfo()();
}

uint64_t Query.LiveDaemonInterface.fetchDynamicAssetInfo()()
{
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_24223EB80()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_2543AA2D0 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_242213698;
  return ModelXPCSender.fetchDynamicAssetInfo()();
}

uint64_t Query.LiveDaemonInterface.fetchEffectivePolicy()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_24223EC08()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  if (qword_2543AA2D0 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_24222B660;
  v2 = OUTLINED_FUNCTION_16_9();
  return ModelXPCSender.fetchEffectivePolicy()(v2);
}

uint64_t Query.LiveDaemonInterface.fetchPolicy(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return OUTLINED_FUNCTION_5();
}

uint64_t sub_24223EC98()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_2543AA2D0 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_24223ED18;
  v2 = OUTLINED_FUNCTION_16_9();
  return ModelXPCSender.fetchPolicy(_:)(v2, v3, v4);
}

uint64_t sub_24223ED18()
{
  uint64_t v0;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24223ED48()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_242213698;
  return Query.LiveDaemonInterface.fetchAllAssetInfo()();
}

uint64_t sub_24223ED8C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_242213698;
  return Query.LiveDaemonInterface.fetchDynamicAssetInfo()();
}

uint64_t sub_24223EDD0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2421C71E8;
  return Query.LiveDaemonInterface.fetchEffectivePolicy()(a1);
}

uint64_t sub_24223EE20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2421C60C4;
  return Query.LiveDaemonInterface.fetchPolicy(_:)(a1, a2, a3);
}

ValueMetadata *type metadata accessor for Query()
{
  return &type metadata for Query;
}

uint64_t dispatch thunk of QueryDaemonInterface.fetchAllAssetInfo()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_275(v1, (uint64_t)sub_242211720);
  return OUTLINED_FUNCTION_57_2(v2, v3, v4);
}

uint64_t dispatch thunk of QueryDaemonInterface.fetchDynamicAssetInfo()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_49();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_275(v1, (uint64_t)sub_2422136B4);
  return OUTLINED_FUNCTION_57_2(v2, v3, v4);
}

uint64_t dispatch thunk of QueryDaemonInterface.fetchEffectivePolicy()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v7 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2421C71E8;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of QueryDaemonInterface.fetchPolicy(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (_QWORD *)OUTLINED_FUNCTION_23();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_2421C60C4;
  return v13(a1, a2, a3, a4, a5);
}

ValueMetadata *type metadata accessor for Query.LiveDaemonInterface()
{
  return &type metadata for Query.LiveDaemonInterface;
}

uint64_t OUTLINED_FUNCTION_7_7(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v2 - 8) = *v1;
  *(_QWORD *)(v3 + 48) = a1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_11_7(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = *(_QWORD *)(a1 - 8);
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_16_9()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_17_7()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return type metadata accessor for AssetInfo();
}

void _s20ModelManagerServices0A9XPCResultO3getxyq_YKF(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_68();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_19_5();
  (*(void (**)(uint64_t))(v11 + 16))(v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v3, v4, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a2, v3, v8);
    swift_willThrowTypedImpl();
    OUTLINED_FUNCTION_116(v3, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 32))(a3, v4);
  }
  OUTLINED_FUNCTION_65_3();
}

ModelManagerServices::ModelXPCRequest::LoadAssetBundle __swiftcall ModelXPCRequest.LoadAssetBundle.init(assetBundleIdentifier:dynamicMode:)(Swift::String assetBundleIdentifier, Swift::Bool dynamicMode)
{
  uint64_t v2;
  ModelManagerServices::ModelXPCRequest::LoadAssetBundle result;

  *(Swift::String *)v2 = assetBundleIdentifier;
  *(_BYTE *)(v2 + 16) = dynamicMode;
  result.assetBundleIdentifier = assetBundleIdentifier;
  result.dynamicMode = dynamicMode;
  return result;
}

ModelManagerServices::ModelXPCRequest::HoldAssetBundle __swiftcall ModelXPCRequest.HoldAssetBundle.init(assetBundleIdentifier:)(ModelManagerServices::ModelXPCRequest::HoldAssetBundle assetBundleIdentifier)
{
  ModelManagerServices::ModelXPCRequest::HoldAssetBundle *v1;

  *v1 = assetBundleIdentifier;
  return assetBundleIdentifier;
}

unint64_t static ModelXPCRequest.serviceName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_24223F1AC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  char v17;

  v3 = a1 == 0x5265747563657865 && a2 == 0xEE00747365757165;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65526C65636E6163 && a2 == 0xED00007473657571;
    if (v6 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6553657461657263 && a2 == 0xED00006E6F697373;
      if (v7 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x65536574656C6564 && a2 == 0xED00006E6F697373;
        if (v8 || (sub_242272C20() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x536D726177657270 && a2 == 0xEE006E6F69737365;
          if (v9 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x65536C65636E6163 && a2 == 0xED00006E6F697373;
            if (v10 || (sub_242272C20() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000010 && a2 == 0x8000000242284BE0 || (sub_242272C20() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0xD000000000000010 && a2 == 0x8000000242284C00 || (sub_242272C20() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              v11 = a1 == 0x7373416863746566 && a2 == 0xEF736E6F69747265;
              if (v11 || (sub_242272C20() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else if (a1 == 0xD000000000000011 && a2 == 0x8000000242284C20 || (sub_242272C20() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else
              {
                v12 = a1 == 0x7373416863746566 && a2 == 0xEB00000000737465;
                if (v12 || (sub_242272C20() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 10;
                }
                else if (a1 == 0xD000000000000012 && a2 == 0x8000000242284C40 || (sub_242272C20() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 11;
                }
                else
                {
                  v13 = a1 == 0x6C6F506863746566 && a2 == 0xEB00000000796369;
                  if (v13 || (sub_242272C20() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 12;
                  }
                  else
                  {
                    v14 = a1 == 0x6573734164616F6CLL && a2 == 0xEF656C646E754274;
                    if (v14 || (sub_242272C20() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 13;
                    }
                    else
                    {
                      v15 = a1 == 0x65737341646C6F68 && a2 == 0xEF656C646E754274;
                      if (v15 || (sub_242272C20() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 14;
                      }
                      else if (a1 == 0xD000000000000017 && a2 == 0x8000000242284C60 || (sub_242272C20() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 15;
                      }
                      else
                      {
                        v16 = a1 == 0x74617453706D7564 && a2 == 0xE900000000000065;
                        if (v16 || (sub_242272C20() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 16;
                        }
                        else if (a1 == 0xD000000000000012 && a2 == 0x8000000242284C80 || (sub_242272C20() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 17;
                        }
                        else if (a1 == 0xD000000000000014 && a2 == 0x8000000242284CA0)
                        {
                          swift_bridgeObjectRelease();
                          return 18;
                        }
                        else
                        {
                          v17 = sub_242272C20();
                          swift_bridgeObjectRelease();
                          if ((v17 & 1) != 0)
                            return 18;
                          else
                            return 19;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_24223F92C()
{
  return 19;
}

uint64_t sub_24223F934(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_24223F96C + 4 * byte_24227CD30[a1]))(0xD000000000000010, 0x8000000242284BE0);
}

uint64_t sub_24223F96C()
{
  return 0x5265747563657865;
}

uint64_t sub_24223F990()
{
  return 0x65526C65636E6163;
}

uint64_t sub_24223F9B4()
{
  return 0x6553657461657263;
}

void sub_24223FB1C(uint64_t a1, uint64_t a2)
{
  if (a1 != 12383 || a2 != 0xE200000000000000)
    OUTLINED_FUNCTION_141_2();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_34();
}

uint64_t sub_24223FB74()
{
  sub_242241770();
  return sub_242272D70();
}

uint64_t sub_24223FB9C()
{
  sub_242241770();
  return sub_242272D7C();
}

uint64_t sub_24223FBC4()
{
  sub_24224189C();
  return sub_242272D70();
}

uint64_t sub_24223FBEC()
{
  sub_24224189C();
  return sub_242272D7C();
}

uint64_t sub_24223FC14()
{
  sub_2422417AC();
  return sub_242272D70();
}

uint64_t sub_24223FC3C()
{
  sub_2422417AC();
  return sub_242272D7C();
}

uint64_t sub_24223FC64()
{
  unsigned __int8 *v0;

  return sub_24223F934(*v0);
}

uint64_t sub_24223FC6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24223F1AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24223FC90@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24223F92C();
  *a1 = result;
  return result;
}

uint64_t sub_24223FCB4()
{
  sub_24224120C();
  return sub_242272D70();
}

uint64_t sub_24223FCDC()
{
  sub_24224120C();
  return sub_242272D7C();
}

uint64_t sub_24223FD04()
{
  sub_242241860();
  return sub_242272D70();
}

uint64_t sub_24223FD2C()
{
  sub_242241860();
  return sub_242272D7C();
}

uint64_t sub_24223FD54()
{
  sub_242241824();
  return sub_242272D70();
}

uint64_t sub_24223FD7C()
{
  sub_242241824();
  return sub_242272D7C();
}

uint64_t sub_24223FDA4()
{
  sub_2422412FC();
  return sub_242272D70();
}

uint64_t sub_24223FDCC()
{
  sub_2422412FC();
  return sub_242272D7C();
}

uint64_t sub_24223FDF4()
{
  sub_2422418D8();
  return sub_242272D70();
}

uint64_t sub_24223FE1C()
{
  sub_2422418D8();
  return sub_242272D7C();
}

uint64_t sub_24223FE44()
{
  sub_2422416BC();
  return sub_242272D70();
}

uint64_t sub_24223FE6C()
{
  sub_2422416BC();
  return sub_242272D7C();
}

uint64_t sub_24223FE94()
{
  sub_2422415CC();
  return sub_242272D70();
}

uint64_t sub_24223FEBC()
{
  sub_2422415CC();
  return sub_242272D7C();
}

uint64_t sub_24223FEE4()
{
  sub_242241554();
  return sub_242272D70();
}

uint64_t sub_24223FF0C()
{
  sub_242241554();
  return sub_242272D7C();
}

void sub_24223FF34(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_24223FB1C(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_24223FF5C()
{
  sub_2422412C0();
  return sub_242272D70();
}

uint64_t sub_24223FF84()
{
  sub_2422412C0();
  return sub_242272D7C();
}

uint64_t sub_24223FFAC()
{
  sub_2422414DC();
  return sub_242272D70();
}

uint64_t sub_24223FFD4()
{
  sub_2422414DC();
  return sub_242272D7C();
}

uint64_t sub_24223FFFC()
{
  sub_242241374();
  return sub_242272D70();
}

uint64_t sub_242240024()
{
  sub_242241374();
  return sub_242272D7C();
}

uint64_t sub_24224004C()
{
  sub_2422413EC();
  return sub_242272D70();
}

uint64_t sub_242240074()
{
  sub_2422413EC();
  return sub_242272D7C();
}

uint64_t sub_24224009C()
{
  sub_242241464();
  return sub_242272D70();
}

uint64_t sub_2422400C4()
{
  sub_242241464();
  return sub_242272D7C();
}

uint64_t sub_2422400EC()
{
  sub_2422417E8();
  return sub_242272D70();
}

uint64_t sub_242240114()
{
  sub_2422417E8();
  return sub_242272D7C();
}

uint64_t sub_24224013C()
{
  sub_242241734();
  return sub_242272D70();
}

uint64_t sub_242240164()
{
  sub_242241734();
  return sub_242272D7C();
}

uint64_t sub_24224018C()
{
  sub_242241644();
  return sub_242272D70();
}

uint64_t sub_2422401B4()
{
  sub_242241644();
  return sub_242272D7C();
}

uint64_t sub_2422401DC()
{
  sub_242241248();
  return sub_242272D70();
}

uint64_t sub_242240204()
{
  sub_242241248();
  return sub_242272D7C();
}

void ModelXPCRequest.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114[17];
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD v123[4];
  uint64_t v124;
  _QWORD v125[4];
  uint64_t v126;
  _QWORD v127[4];
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD v131[10];
  _QWORD v132[5];
  uint64_t v133;
  uint64_t v134;
  _QWORD v135[4];
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  OUTLINED_FUNCTION_45_0();
  a19 = v22;
  a20 = v23;
  v138 = v20;
  v25 = v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA510);
  v134 = *(_QWORD *)(v26 - 8);
  v135[0] = v26;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_2_0();
  v132[4] = v28;
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA488);
  v132[3] = *(_QWORD *)(v133 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_116_6(v30, v114[0]);
  v132[0] = type metadata accessor for ModelXPCRequest.FetchModelInstance(0);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_115_5(v32, v114[0]);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA498);
  v131[8] = *(_QWORD *)(v33 - 8);
  v131[9] = v33;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_113_5(v35, v114[0]);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA518);
  v131[5] = *(_QWORD *)(v36 - 8);
  v131[6] = v36;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_52_2(v38, v114[0]);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA4E0);
  OUTLINED_FUNCTION_15_0(v39, (uint64_t)&a18);
  v131[2] = v40;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_13_0((uint64_t)v114 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA4E8);
  OUTLINED_FUNCTION_15_0(v43, (uint64_t)&a15);
  v130 = v44;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_13_0((uint64_t)v114 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA4A8);
  OUTLINED_FUNCTION_15_0(v47, (uint64_t)&a12);
  v129 = v48;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v50);
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA508);
  v127[3] = *(_QWORD *)(v128 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v52);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA4A0);
  OUTLINED_FUNCTION_15_0(v53, (uint64_t)&v137);
  v127[0] = v54;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v55);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v56);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA500);
  v125[3] = *(_QWORD *)(v126 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v57);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v58);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA4D8);
  OUTLINED_FUNCTION_15_0(v59, (uint64_t)v135);
  v125[0] = v60;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v61);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v62);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA4F8);
  v123[2] = *(_QWORD *)(v124 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v63);
  OUTLINED_FUNCTION_2_0();
  v65 = OUTLINED_FUNCTION_53_5(v64);
  v122 = type metadata accessor for ModelXPCRequest.ReleaseRequest(v65);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v66);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v67);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA4F0);
  OUTLINED_FUNCTION_15_0(v68, (uint64_t)v132);
  v121 = v69;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v70);
  OUTLINED_FUNCTION_2_0();
  v72 = OUTLINED_FUNCTION_53_5(v71);
  v119 = type metadata accessor for ModelXPCRequest.AcquireRequest(v72);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v73);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v74);
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA4B8);
  v118 = *(_QWORD *)(v120 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v75);
  OUTLINED_FUNCTION_2_0();
  v77 = OUTLINED_FUNCTION_53_5(v76);
  v117 = type metadata accessor for ModelXPCRequest.CancelSessionRequest(v77);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v78);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v79);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA4D0);
  OUTLINED_FUNCTION_15_0(v80, (uint64_t)v131);
  v116 = v81;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v82);
  OUTLINED_FUNCTION_2_0();
  v84 = OUTLINED_FUNCTION_53_5(v83);
  v114[16] = type metadata accessor for ModelXPCRequest.PrewarmSession(v84);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v85);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v86);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA4C8);
  v114[15] = *(_QWORD *)(v115 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v87);
  OUTLINED_FUNCTION_2_0();
  v89 = OUTLINED_FUNCTION_53_5(v88);
  v114[11] = type metadata accessor for ModelXPCRequest.DeleteSessionRequest(v89);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v90);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v91);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA4C0);
  OUTLINED_FUNCTION_15_0(v92, (uint64_t)v127);
  v114[10] = v93;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v94);
  OUTLINED_FUNCTION_2_0();
  v96 = OUTLINED_FUNCTION_53_5(v95);
  v114[7] = type metadata accessor for ModelXPCRequest.CreateSessionRequest(v96);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v97);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v98);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA4B0);
  OUTLINED_FUNCTION_15_0(v99, (uint64_t)v125);
  v114[5] = v100;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v101);
  OUTLINED_FUNCTION_2_0();
  v103 = OUTLINED_FUNCTION_53_5(v102);
  v114[2] = type metadata accessor for ModelXPCRequest.CancelRequest(v103);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v104);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v105);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA400);
  OUTLINED_FUNCTION_15_0(v106, (uint64_t)v123);
  v114[0] = v107;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v108);
  type metadata accessor for ModelXPCRequest.ExecuteRequest(0);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v109);
  v110 = OUTLINED_FUNCTION_112_4();
  type metadata accessor for ModelXPCRequest(v110);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v111);
  OUTLINED_FUNCTION_68();
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA490);
  v135[1] = *(_QWORD *)(v136 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v112);
  OUTLINED_FUNCTION_19_5();
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  sub_24224120C();
  OUTLINED_FUNCTION_147_2();
  sub_2421CE528(v138, v21, type metadata accessor for ModelXPCRequest);
  v113 = (char *)sub_2422408B4 + 4 * word_24227CD44[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_2422408B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);

  sub_2421D11A4(v2, v1, type metadata accessor for ModelXPCRequest.ExecuteRequest);
  *(_BYTE *)(v3 - 112) = 0;
  sub_2422418D8();
  sub_242272AF4();
  sub_2421BBEDC(&qword_2571E2530, (void (*)(uint64_t))type metadata accessor for ModelXPCRequest.ExecuteRequest);
  v4 = *(_QWORD *)(v3 - 712);
  OUTLINED_FUNCTION_36_5();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 720) + 8))(v0, v4);
  sub_2421D3DF4(v1, type metadata accessor for ModelXPCRequest.ExecuteRequest);
  OUTLINED_FUNCTION_189_1();
  v5 = OUTLINED_FUNCTION_74_5();
  v6(v5);
  OUTLINED_FUNCTION_16_0();
}

uint64_t type metadata accessor for ModelXPCRequest.FetchModelInstance(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2543AA408);
}

uint64_t type metadata accessor for ModelXPCRequest.ReleaseRequest(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2543AA8A8);
}

uint64_t type metadata accessor for ModelXPCRequest.AcquireRequest(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2543AA898);
}

uint64_t type metadata accessor for ModelXPCRequest.CancelSessionRequest(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2543AA428);
}

uint64_t type metadata accessor for ModelXPCRequest.PrewarmSession(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2543AA418);
}

uint64_t type metadata accessor for ModelXPCRequest.DeleteSessionRequest(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2543AA438);
}

uint64_t type metadata accessor for ModelXPCRequest.CreateSessionRequest(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2543AA628);
}

uint64_t type metadata accessor for ModelXPCRequest.CancelRequest(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2543AA5F8);
}

uint64_t type metadata accessor for ModelXPCRequest.ExecuteRequest(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2543AA608);
}

uint64_t type metadata accessor for ModelXPCRequest(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2543AA738);
}

unint64_t sub_24224120C()
{
  unint64_t result;

  result = qword_2543AA5E0;
  if (!qword_2543AA5E0)
  {
    result = MEMORY[0x2426A62C4](&unk_2422818E8, &type metadata for ModelXPCRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543AA5E0);
  }
  return result;
}

unint64_t sub_242241248()
{
  unint64_t result;

  result = qword_2571E2448;
  if (!qword_2571E2448)
  {
    result = MEMORY[0x2426A62C4](&unk_242281898, &type metadata for ModelXPCRequest.SetAssetsHaveUpdatedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E2448);
  }
  return result;
}

unint64_t sub_242241284()
{
  unint64_t result;

  result = qword_2571E2450;
  if (!qword_2571E2450)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.SetAssetsHaveUpdated, &type metadata for ModelXPCRequest.SetAssetsHaveUpdated);
    atomic_store(result, (unint64_t *)&qword_2571E2450);
  }
  return result;
}

unint64_t sub_2422412C0()
{
  unint64_t result;

  result = qword_2571E2458;
  if (!qword_2571E2458)
  {
    result = MEMORY[0x2426A62C4](&unk_242281848, &type metadata for ModelXPCRequest.FetchModelInstanceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E2458);
  }
  return result;
}

unint64_t sub_2422412FC()
{
  unint64_t result;

  result = qword_2543A77C0;
  if (!qword_2543A77C0)
  {
    result = MEMORY[0x2426A62C4](&unk_2422817F8, &type metadata for ModelXPCRequest.DumpStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A77C0);
  }
  return result;
}

unint64_t sub_242241338()
{
  unint64_t result;

  result = qword_2543A77F0;
  if (!qword_2543A77F0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.DumpState, &type metadata for ModelXPCRequest.DumpState);
    atomic_store(result, (unint64_t *)&qword_2543A77F0);
  }
  return result;
}

unint64_t sub_242241374()
{
  unint64_t result;

  result = qword_2571E2468;
  if (!qword_2571E2468)
  {
    result = MEMORY[0x2426A62C4](&unk_2422817A8, &type metadata for ModelXPCRequest.ForceAssetVersionSwitchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E2468);
  }
  return result;
}

unint64_t sub_2422413B0()
{
  unint64_t result;

  result = qword_2571E2470;
  if (!qword_2571E2470)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.ForceAssetVersionSwitch, &type metadata for ModelXPCRequest.ForceAssetVersionSwitch);
    atomic_store(result, (unint64_t *)&qword_2571E2470);
  }
  return result;
}

unint64_t sub_2422413EC()
{
  unint64_t result;

  result = qword_2571E2478;
  if (!qword_2571E2478)
  {
    result = MEMORY[0x2426A62C4](&unk_242281758, &type metadata for ModelXPCRequest.HoldAssetBundleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E2478);
  }
  return result;
}

unint64_t sub_242241428()
{
  unint64_t result;

  result = qword_2571E2480;
  if (!qword_2571E2480)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.HoldAssetBundle, &type metadata for ModelXPCRequest.HoldAssetBundle);
    atomic_store(result, (unint64_t *)&qword_2571E2480);
  }
  return result;
}

unint64_t sub_242241464()
{
  unint64_t result;

  result = qword_2571E2488;
  if (!qword_2571E2488)
  {
    result = MEMORY[0x2426A62C4](&unk_242281708, &type metadata for ModelXPCRequest.LoadAssetBundleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E2488);
  }
  return result;
}

unint64_t sub_2422414A0()
{
  unint64_t result;

  result = qword_2571E2490;
  if (!qword_2571E2490)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.LoadAssetBundle, &type metadata for ModelXPCRequest.LoadAssetBundle);
    atomic_store(result, (unint64_t *)&qword_2571E2490);
  }
  return result;
}

unint64_t sub_2422414DC()
{
  unint64_t result;

  result = qword_2571E2498;
  if (!qword_2571E2498)
  {
    result = MEMORY[0x2426A62C4](&unk_2422816B8, &type metadata for ModelXPCRequest.FetchPolicyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E2498);
  }
  return result;
}

unint64_t sub_242241518()
{
  unint64_t result;

  result = qword_2571E24A0;
  if (!qword_2571E24A0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchPolicyRequest, &type metadata for ModelXPCRequest.FetchPolicyRequest);
    atomic_store(result, (unint64_t *)&qword_2571E24A0);
  }
  return result;
}

unint64_t sub_242241554()
{
  unint64_t result;

  result = qword_2571E24A8;
  if (!qword_2571E24A8)
  {
    result = MEMORY[0x2426A62C4](&unk_242281668, &type metadata for ModelXPCRequest.FetchDynamicAssetsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E24A8);
  }
  return result;
}

unint64_t sub_242241590()
{
  unint64_t result;

  result = qword_2571E24B0;
  if (!qword_2571E24B0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchDynamicAssetsRequest, &type metadata for ModelXPCRequest.FetchDynamicAssetsRequest);
    atomic_store(result, (unint64_t *)&qword_2571E24B0);
  }
  return result;
}

unint64_t sub_2422415CC()
{
  unint64_t result;

  result = qword_2543AA158;
  if (!qword_2543AA158)
  {
    result = MEMORY[0x2426A62C4](&unk_242281618, &type metadata for ModelXPCRequest.FetchAssetsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543AA158);
  }
  return result;
}

unint64_t sub_242241608()
{
  unint64_t result;

  result = qword_2543AA150;
  if (!qword_2543AA150)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchAssetsRequest, &type metadata for ModelXPCRequest.FetchAssetsRequest);
    atomic_store(result, (unint64_t *)&qword_2543AA150);
  }
  return result;
}

unint64_t sub_242241644()
{
  unint64_t result;

  result = qword_2571E24B8;
  if (!qword_2571E24B8)
  {
    result = MEMORY[0x2426A62C4](&unk_2422815C8, &type metadata for ModelXPCRequest.RestoreAssertionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E24B8);
  }
  return result;
}

unint64_t sub_242241680()
{
  unint64_t result;

  result = qword_2571E24C0;
  if (!qword_2571E24C0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.RestoreAssertionsRequest, &type metadata for ModelXPCRequest.RestoreAssertionsRequest);
    atomic_store(result, (unint64_t *)&qword_2571E24C0);
  }
  return result;
}

unint64_t sub_2422416BC()
{
  unint64_t result;

  result = qword_2571E24C8;
  if (!qword_2571E24C8)
  {
    result = MEMORY[0x2426A62C4](&unk_242281578, &type metadata for ModelXPCRequest.FetchAssertionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E24C8);
  }
  return result;
}

unint64_t sub_2422416F8()
{
  unint64_t result;

  result = qword_2571E24D0;
  if (!qword_2571E24D0)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchAssertionsRequest, &type metadata for ModelXPCRequest.FetchAssertionsRequest);
    atomic_store(result, (unint64_t *)&qword_2571E24D0);
  }
  return result;
}

unint64_t sub_242241734()
{
  unint64_t result;

  result = qword_2543A9FE0;
  if (!qword_2543A9FE0)
  {
    result = MEMORY[0x2426A62C4](&unk_242281528, &type metadata for ModelXPCRequest.ReleaseAssertionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543A9FE0);
  }
  return result;
}

unint64_t sub_242241770()
{
  unint64_t result;

  result = qword_2543AA1D0;
  if (!qword_2543AA1D0)
  {
    result = MEMORY[0x2426A62C4](&unk_2422814D8, &type metadata for ModelXPCRequest.AcquireAssertionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543AA1D0);
  }
  return result;
}

unint64_t sub_2422417AC()
{
  unint64_t result;

  result = qword_2571E24D8;
  if (!qword_2571E24D8)
  {
    result = MEMORY[0x2426A62C4](&unk_242281488, &type metadata for ModelXPCRequest.CancelSessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E24D8);
  }
  return result;
}

unint64_t sub_2422417E8()
{
  unint64_t result;

  result = qword_2571E24E8;
  if (!qword_2571E24E8)
  {
    result = MEMORY[0x2426A62C4](&unk_242281438, &type metadata for ModelXPCRequest.PrewarmSessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E24E8);
  }
  return result;
}

unint64_t sub_242241824()
{
  unint64_t result;

  result = qword_2571E24F8;
  if (!qword_2571E24F8)
  {
    result = MEMORY[0x2426A62C4](&unk_2422813E8, &type metadata for ModelXPCRequest.DeleteSessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E24F8);
  }
  return result;
}

unint64_t sub_242241860()
{
  unint64_t result;

  result = qword_2571E2508;
  if (!qword_2571E2508)
  {
    result = MEMORY[0x2426A62C4](&unk_242281398, &type metadata for ModelXPCRequest.CreateSessionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E2508);
  }
  return result;
}

unint64_t sub_24224189C()
{
  unint64_t result;

  result = qword_2571E2518;
  if (!qword_2571E2518)
  {
    result = MEMORY[0x2426A62C4](&unk_242281348, &type metadata for ModelXPCRequest.CancelRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E2518);
  }
  return result;
}

unint64_t sub_2422418D8()
{
  unint64_t result;

  result = qword_2571E2528;
  if (!qword_2571E2528)
  {
    result = MEMORY[0x2426A62C4](&unk_2422812F8, &type metadata for ModelXPCRequest.ExecuteRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E2528);
  }
  return result;
}

void ModelXPCRequest.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t *v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t);
  uint64_t v140[24];
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD v160[2];
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD v165[6];
  uint64_t v166;
  _QWORD v167[2];
  uint64_t v168;
  _QWORD v169[4];
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;

  OUTLINED_FUNCTION_45_0();
  a19 = v22;
  a20 = v23;
  v175 = v21;
  v25 = v24;
  v169[3] = v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7128);
  OUTLINED_FUNCTION_15_0(v27, (uint64_t)&a10);
  v169[2] = v28;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_2_0();
  v169[1] = v30;
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7098);
  v160[1] = *(_QWORD *)(v161 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_116_6(v32, v140[0]);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A70A8);
  OUTLINED_FUNCTION_15_0(v33, (uint64_t)&v177);
  v159 = v34;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_115_5(v36, v140[0]);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A79A0);
  OUTLINED_FUNCTION_15_0(v37, (uint64_t)&v176);
  v158 = v38;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_2_0();
  v168 = v40;
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A70F8);
  v156 = *(_QWORD *)(v157 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_2_0();
  v167[1] = v42;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7100);
  OUTLINED_FUNCTION_15_0(v43, (uint64_t)&v172);
  v155 = v44;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_2_0();
  v167[0] = v46;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A70B8);
  OUTLINED_FUNCTION_15_0(v47, (uint64_t)&v170);
  v154 = v48;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_113_5(v50, v140[0]);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7120);
  v152 = *(_QWORD *)(v153 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_2_0();
  v165[5] = v52;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A70B0);
  OUTLINED_FUNCTION_15_0(v53, (uint64_t)v169);
  v151 = v54;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v55);
  OUTLINED_FUNCTION_2_0();
  v165[4] = v56;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7118);
  OUTLINED_FUNCTION_15_0(v57, (uint64_t)&v168);
  v150 = v58;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v59);
  OUTLINED_FUNCTION_52_2(v60, v140[0]);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A70F0);
  OUTLINED_FUNCTION_15_0(v61, (uint64_t)v167);
  v149 = v62;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v63);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v64);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7110);
  OUTLINED_FUNCTION_15_0(v65, (uint64_t)&v166);
  v148 = v66;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v67);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v68);
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7108);
  v146 = *(_QWORD *)(v147 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v69);
  OUTLINED_FUNCTION_13_0((uint64_t)v140 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A70C8);
  OUTLINED_FUNCTION_15_0(v71, (uint64_t)v165);
  v145 = v72;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v73);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v74);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A70E8);
  OUTLINED_FUNCTION_15_0(v75, (uint64_t)&v164);
  v144 = v76;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v77);
  OUTLINED_FUNCTION_46_6(v78, v140[0]);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A70D8);
  OUTLINED_FUNCTION_15_0(v79, (uint64_t)&v163);
  v143 = v80;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v81);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v82);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A70D0);
  OUTLINED_FUNCTION_15_0(v83, (uint64_t)&v162);
  v142 = v84;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v85);
  OUTLINED_FUNCTION_13_0((uint64_t)v140 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0));
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A70C0);
  v140[23] = *(_QWORD *)(v141 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v87);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v88);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A70E0);
  OUTLINED_FUNCTION_15_0(v89, (uint64_t)v160);
  v140[21] = v90;
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v91);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_13_0(v92);
  v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A70A0);
  v170 = *(_QWORD *)(v173 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v93);
  OUTLINED_FUNCTION_64_8(v94, v140[0]);
  v171 = type metadata accessor for ModelXPCRequest(0);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v95);
  OUTLINED_FUNCTION_138_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v96);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v97);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v98);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v99);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v100);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v101);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v102);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v103);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v104);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v105);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v106);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v107);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  MEMORY[0x24BDAC7A8](v108);
  OUTLINED_FUNCTION_20_4();
  OUTLINED_FUNCTION_7_3();
  v110 = MEMORY[0x24BDAC7A8](v109);
  v112 = (char *)v140 - v111;
  v113 = MEMORY[0x24BDAC7A8](v110);
  v115 = (char *)v140 - v114;
  v116 = MEMORY[0x24BDAC7A8](v113);
  v118 = (char *)v140 - v117;
  MEMORY[0x24BDAC7A8](v116);
  OUTLINED_FUNCTION_182_2();
  v120 = MEMORY[0x24BDAC7A8](v119);
  v122 = (char *)v140 - v121;
  MEMORY[0x24BDAC7A8](v120);
  v124 = (char *)v140 - v123;
  v125 = v25[3];
  v174 = v25;
  __swift_project_boxed_opaque_existential_1(v25, v125);
  sub_24224120C();
  v126 = v175;
  sub_242272D40();
  if (!v126)
  {
    v140[2] = (uint64_t)v122;
    v140[3] = v20;
    v140[4] = (uint64_t)v118;
    v140[5] = (uint64_t)v115;
    v140[6] = (uint64_t)v112;
    v127 = v173;
    v175 = v124;
    v128 = sub_242272AE8();
    v129 = *(_QWORD *)(v128 + 16);
    if (v129)
    {
      v140[1] = 0;
      v130 = *(unsigned __int8 *)(v128 + 32);
      sub_2421C4040(1, v129, v128, v128 + 32, 0, (2 * v129) | 1);
      v132 = v131;
      v134 = v133;
      swift_bridgeObjectRelease();
      if (v132 == v134 >> 1)
        __asm { BR              X9 }
      v127 = v173;
    }
    v135 = sub_2422729BC();
    swift_allocError();
    v137 = v136;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2571DFE50);
    *v137 = v171;
    sub_242272A58();
    sub_2422729B0();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v135 - 8) + 104))(v137, *MEMORY[0x24BEE26D0], v135);
    swift_willThrow();
    OUTLINED_FUNCTION_21_0();
    v138 = OUTLINED_FUNCTION_124_3();
    v139(v138, v127);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v174);
  OUTLINED_FUNCTION_16_0();
}

#error "242242BFC: call analysis failed (funcsize=5)"

#error "242242C10: call analysis failed (funcsize=5)"

uint64_t static ModelXPCResult<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t TupleTypeMetadata2;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v40 = a5;
  v41 = a6;
  v45 = a1;
  v46 = a2;
  v44 = *(_QWORD *)(a4 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_46_6(v9, v37);
  v43 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_2_0();
  v38 = v12;
  v16 = type metadata accessor for ModelXPCResult(0, v13, v14, v15);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_138_4();
  v20 = v18 - v19;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v37 - v22;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v42 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v25 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v27 = (char *)&v37 - v26;
  v28 = (char *)&v37 + *(int *)(v25 + 48) - v26;
  OUTLINED_FUNCTION_134_4((uint64_t)&v37 - v26, v45);
  OUTLINED_FUNCTION_134_4((uint64_t)v28, v46);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    OUTLINED_FUNCTION_134_4((uint64_t)v23, (uint64_t)v27);
    if (OUTLINED_FUNCTION_173_1() != 1)
    {
      v33 = v43;
      v34 = v38;
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v38, v28, a3);
      v31 = sub_24227268C();
      v35 = *(void (**)(char *, uint64_t))(v33 + 8);
      v35(v34, a3);
      v35(v23, a3);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v23, a3);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_134_4(v20, (uint64_t)v27);
  if (OUTLINED_FUNCTION_173_1() != 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v20, a4);
LABEL_7:
    v31 = 0;
    v17 = v42;
    v16 = TupleTypeMetadata2;
    goto LABEL_9;
  }
  v29 = v44;
  v30 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v39, v28, a4);
  v31 = sub_24227268C();
  v32 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v32(v30, a4);
  v32(v20, a4);
LABEL_9:
  (*(void (**)(char *, uint64_t))(v17 + 8))(v27, v16);
  return v31 & 1;
}

uint64_t sub_242242EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static ModelXPCResult<>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a4 - 8), *(_QWORD *)(a4 - 16));
}

void ModelXPCResult<>.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_45_0();
  v31 = v4;
  v32 = v5;
  v7 = v6;
  v29 = v9;
  v30 = v8;
  v33 = v10;
  type metadata accessor for ModelXPCResult(0, v8, v10, v11);
  OUTLINED_FUNCTION_30_6();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_138_4();
  v15 = v13 - v14;
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_182_2();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v25 - v18;
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  sub_242272D28();
  if (v1)
  {
    v20 = (uint64_t)v7;
  }
  else
  {
    v27 = v0;
    v28 = v15;
    v25 = v3;
    v26 = v19;
    OUTLINED_FUNCTION_120_3();
    v21 = sub_242272BCC();
    OUTLINED_FUNCTION_120_3();
    OUTLINED_FUNCTION_106_7();
    if ((v21 & 1) != 0)
      v22 = v27;
    else
      v22 = v28;
    swift_storeEnumTagMultiPayload();
    v23 = v26;
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 32);
    v24(v26, v22, v2);
    OUTLINED_FUNCTION_62_5();
    v24(v29, (uint64_t)v23, v2);
    v20 = (uint64_t)v7;
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v20);
  OUTLINED_FUNCTION_146_2();
  OUTLINED_FUNCTION_16_0();
}

void ModelXPCResult<>.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_45_0();
  v5 = v4;
  v19 = *(_QWORD *)(v4 + 24);
  v18 = *(_QWORD *)(v19 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_46_6(v7, v15);
  v9 = *(_QWORD *)(v8 + 16);
  v16 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_105();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_19_5();
  __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  sub_242272D4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v2, v0, v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v17, v2, v19);
    OUTLINED_FUNCTION_9_6();
    OUTLINED_FUNCTION_121_3();
    if (!v1)
    {
      OUTLINED_FUNCTION_9_6();
      sub_242272BFC();
    }
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v3, v2, v9);
    OUTLINED_FUNCTION_9_6();
    OUTLINED_FUNCTION_121_3();
    if (!v1)
    {
      OUTLINED_FUNCTION_9_6();
      sub_242272BFC();
    }
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v3, v9);
  }
  OUTLINED_FUNCTION_62_5();
  OUTLINED_FUNCTION_16_0();
}

void sub_242243224()
{
  ModelXPCResult<>.init(from:)();
}

void sub_24224324C()
{
  ModelXPCResult<>.encode(to:)();
}

void ModelXPCRequest.CreateSessionRequest.useCaseIdentifier.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

uint64_t ModelXPCRequest.CreateSessionRequest.onBehalfOfPID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t ModelXPCRequest.CreateSessionRequest.parentOfOnBehalfOfPID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t ModelXPCRequest.CreateSessionRequest.containsSensitiveData.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

void ModelXPCRequest.CreateSessionRequest.loggingIdentifier.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

void ModelXPCRequest.CreateSessionRequest.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_178_2();
  OUTLINED_FUNCTION_133_4(v0 + *(int *)(v1 + 40), v2, &qword_2543A7850);
  OUTLINED_FUNCTION_34();
}

uint64_t ModelXPCRequest.CreateSessionRequest.alreadyLockedInferenceProvider.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1 + *(int *)(OUTLINED_FUNCTION_178_2() + 44);
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)v0 = *(_QWORD *)v2;
  *(_QWORD *)(v0 + 8) = v4;
  *(_QWORD *)(v0 + 16) = v5;
  *(_QWORD *)(v0 + 24) = v6;
  *(_BYTE *)(v0 + 32) = *(_BYTE *)(v2 + 32);
  return sub_242211358(v3, v4);
}

void ModelXPCRequest.CreateSessionRequest.Response.init(sessionID:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_242213644(a1, a2, &qword_2543A7850);
}

uint64_t sub_24224334C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_242272C20();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2422433D8()
{
  return 0x496E6F6973736573;
}

uint64_t sub_2422433F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24224334C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_242243420()
{
  sub_2422491FC();
  return sub_242272D70();
}

uint64_t sub_242243448()
{
  sub_2422491FC();
  return sub_242272D7C();
}

void ModelXPCRequest.CreateSessionRequest.Response.encode(to:)()
{
  sub_242244054();
}

void ModelXPCRequest.CreateSessionRequest.Response.init(from:)()
{
  sub_242248BDC();
}

void sub_2422434D0()
{
  ModelXPCRequest.CreateSessionRequest.Response.init(from:)();
}

void sub_2422434E4()
{
  ModelXPCRequest.CreateSessionRequest.Response.encode(to:)();
}

uint64_t ModelXPCRequest.CreateSessionRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_242248A24(type metadata accessor for ModelXPCRequest.CreateSessionRequest, a1);
}

uint64_t sub_242243508(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  char v7;

  if (a1 == 0xD00000000000001FLL && a2 == 0x80000002422847D0 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000242283770 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = a1 == 0x666C616865426E6FLL && a2 == 0xED0000444950664FLL;
    if (v5 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x8000000242283730 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x8000000242284150 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x8000000242284810 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else
    {
      v6 = a1 == 25705 && a2 == 0xE200000000000000;
      if (v6 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000242284CC0)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else
      {
        v7 = sub_242272C20();
        swift_bridgeObjectRelease();
        if ((v7 & 1) != 0)
          return 7;
        else
          return 8;
      }
    }
  }
}

uint64_t sub_2422437EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_242243828 + 4 * byte_24227CD90[a1]))(0xD00000000000001FLL, 0x80000002422847D0);
}

unint64_t sub_242243828()
{
  return 0xD000000000000011;
}

uint64_t sub_242243894()
{
  return 25705;
}

void sub_2422438A0()
{
  JUMPOUT(0x2422438ACLL);
}

uint64_t sub_2422438B8()
{
  unsigned __int8 *v0;

  return sub_2422437EC(*v0);
}

uint64_t sub_2422438C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242243508(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2422438E4()
{
  sub_24224924C();
  return sub_242272D70();
}

uint64_t sub_24224390C()
{
  sub_24224924C();
  return sub_242272D7C();
}

void ModelXPCRequest.CreateSessionRequest.encode(to:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t SessionRequest;
  char *v8;
  char v9;
  __int128 v10;
  _OWORD v11[2];
  char v12;

  OUTLINED_FUNCTION_45_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E25C8);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_22_4();
  sub_24224924C();
  OUTLINED_FUNCTION_109();
  *(_QWORD *)&v11[0] = *v0;
  OUTLINED_FUNCTION_114_0();
  OUTLINED_FUNCTION_188(&qword_2571E25E0, v6, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
  OUTLINED_FUNCTION_2_3();
  if (!v1)
  {
    LOBYTE(v11[0]) = 1;
    OUTLINED_FUNCTION_84_3();
    OUTLINED_FUNCTION_96_8(2);
    OUTLINED_FUNCTION_96_8(3);
    LOBYTE(v11[0]) = 4;
    OUTLINED_FUNCTION_135_2();
    LOBYTE(v11[0]) = 5;
    OUTLINED_FUNCTION_84_3();
    SessionRequest = type metadata accessor for ModelXPCRequest.CreateSessionRequest(0);
    LOBYTE(v11[0]) = 6;
    OUTLINED_FUNCTION_137_3();
    OUTLINED_FUNCTION_177_2(&qword_2571E0930);
    OUTLINED_FUNCTION_57_8();
    v8 = (char *)v0 + *(int *)(SessionRequest + 44);
    v9 = v8[32];
    v10 = *((_OWORD *)v8 + 1);
    v11[0] = *(_OWORD *)v8;
    v11[1] = v10;
    v12 = v9;
    sub_2421E3814();
    OUTLINED_FUNCTION_169_2();
  }
  OUTLINED_FUNCTION_116((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_16_0();
}

void ModelXPCRequest.CreateSessionRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t SessionRequest;
  __int128 v17;
  __int128 v18;
  char v19;

  OUTLINED_FUNCTION_45_0();
  v3 = v2;
  v14 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_21_1();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E25E8);
  MEMORY[0x24BDAC7A8](v15);
  v6 = OUTLINED_FUNCTION_117_4();
  SessionRequest = type metadata accessor for ModelXPCRequest.CreateSessionRequest(v6);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_0();
  v9 = v8;
  OUTLINED_FUNCTION_119_5(v3);
  sub_24224924C();
  OUTLINED_FUNCTION_149_2();
  sub_242272D40();
  if (v0)
  {
    OUTLINED_FUNCTION_145();
  }
  else
  {
    OUTLINED_FUNCTION_114_0();
    OUTLINED_FUNCTION_188(&qword_2571E25F0, v10, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    OUTLINED_FUNCTION_49_2();
    *(_QWORD *)v9 = v17;
    *(_QWORD *)(v9 + 8) = sub_242272A7C();
    *(_QWORD *)(v9 + 16) = v11;
    *(_QWORD *)(v9 + 24) = OUTLINED_FUNCTION_97_5(2);
    *(_QWORD *)(v9 + 32) = OUTLINED_FUNCTION_97_5(3);
    OUTLINED_FUNCTION_130_4(4);
    *(_BYTE *)(v9 + 40) = sub_242272A88() & 1;
    OUTLINED_FUNCTION_130_4(5);
    *(_QWORD *)(v9 + 48) = sub_242272A7C();
    *(_QWORD *)(v9 + 56) = v12;
    LOBYTE(v17) = 6;
    sub_24223CA30(&qword_2571E0970, &qword_2543A7850);
    OUTLINED_FUNCTION_49_2();
    sub_242213644(v1, v9 + *(int *)(SessionRequest + 40), &qword_2543A7850);
    sub_2421E3938();
    sub_242272A70();
    OUTLINED_FUNCTION_41_2();
    v13 = v9 + *(int *)(SessionRequest + 44);
    *(_OWORD *)v13 = v17;
    *(_OWORD *)(v13 + 16) = v18;
    *(_BYTE *)(v13 + 32) = v19;
    OUTLINED_FUNCTION_114_3(v9, v14);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
    OUTLINED_FUNCTION_167_0();
  }
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_16_0();
}

void sub_242243EDC()
{
  ModelXPCRequest.CreateSessionRequest.init(from:)();
}

void sub_242243EF0()
{
  ModelXPCRequest.CreateSessionRequest.encode(to:)();
}

uint64_t sub_242243F08()
{
  sub_242249288();
  return sub_242272D70();
}

uint64_t sub_242243F30()
{
  sub_242249288();
  return sub_242272D7C();
}

void ModelXPCRequest.DeleteSessionRequest.Response.encode(to:)()
{
  sub_242248ECC();
}

void ModelXPCRequest.DeleteSessionRequest.Response.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_16_10(a1);
  OUTLINED_FUNCTION_37_4();
}

void sub_242243F9C(uint64_t a1)
{
  ModelXPCRequest.CancelRequest.Response.init(from:)(a1);
}

void sub_242243FB0()
{
  ModelXPCRequest.DeleteSessionRequest.Response.encode(to:)();
}

uint64_t ModelXPCRequest.DeleteSessionRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_242248A24(type metadata accessor for ModelXPCRequest.DeleteSessionRequest, a1);
}

uint64_t sub_242243FD8()
{
  sub_2422492C4();
  return sub_242272D70();
}

uint64_t sub_242244000()
{
  sub_2422492C4();
  return sub_242272D7C();
}

void ModelXPCRequest.DeleteSessionRequest.encode(to:)()
{
  sub_242244054();
}

void sub_242244054()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_45_0();
  v2 = v1;
  v4 = (_QWORD *)v3;
  v6 = OUTLINED_FUNCTION_348(v3, v5);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_19_5();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  v2();
  sub_242272D64();
  OUTLINED_FUNCTION_114_0();
  OUTLINED_FUNCTION_187_2(&qword_2571E0930);
  OUTLINED_FUNCTION_78_8();
  OUTLINED_FUNCTION_152_2();
  OUTLINED_FUNCTION_116(v0, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  OUTLINED_FUNCTION_16_0();
}

void ModelXPCRequest.DeleteSessionRequest.init(from:)()
{
  sub_242248BDC();
}

void sub_242244164()
{
  ModelXPCRequest.DeleteSessionRequest.init(from:)();
}

void sub_242244178()
{
  ModelXPCRequest.DeleteSessionRequest.encode(to:)();
}

uint64_t sub_242244190()
{
  sub_242249300();
  return sub_242272D70();
}

uint64_t sub_2422441B8()
{
  sub_242249300();
  return sub_242272D7C();
}

void ModelXPCRequest.PrewarmSession.Response.encode(to:)()
{
  sub_242248ECC();
}

void ModelXPCRequest.PrewarmSession.Response.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_16_10(a1);
  OUTLINED_FUNCTION_37_4();
}

void sub_242244224()
{
  ModelXPCRequest.PrewarmSession.Response.encode(to:)();
}

uint64_t ModelXPCRequest.PrewarmSession.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_242248A24(type metadata accessor for ModelXPCRequest.PrewarmSession, a1);
}

uint64_t sub_242244248()
{
  return 25705;
}

void sub_242244254(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_242246300(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_24224427C()
{
  sub_24224933C();
  return sub_242272D70();
}

uint64_t sub_2422442A4()
{
  sub_24224933C();
  return sub_242272D7C();
}

void ModelXPCRequest.PrewarmSession.encode(to:)()
{
  sub_242244054();
}

void ModelXPCRequest.PrewarmSession.init(from:)()
{
  sub_242248BDC();
}

void sub_242244330()
{
  ModelXPCRequest.PrewarmSession.init(from:)();
}

void sub_242244344()
{
  ModelXPCRequest.PrewarmSession.encode(to:)();
}

uint64_t sub_24224435C()
{
  sub_242249378();
  return sub_242272D70();
}

uint64_t sub_242244384()
{
  sub_242249378();
  return sub_242272D7C();
}

void ModelXPCRequest.CancelSessionRequest.Response.encode(to:)()
{
  sub_242248ECC();
}

void ModelXPCRequest.CancelSessionRequest.Response.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_16_10(a1);
  OUTLINED_FUNCTION_37_4();
}

void sub_2422443F0()
{
  ModelXPCRequest.CancelSessionRequest.Response.encode(to:)();
}

uint64_t ModelXPCRequest.CancelSessionRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_242248A24(type metadata accessor for ModelXPCRequest.CancelSessionRequest, a1);
}

uint64_t sub_242244414()
{
  sub_2422493B4();
  return sub_242272D70();
}

uint64_t sub_24224443C()
{
  sub_2422493B4();
  return sub_242272D7C();
}

void ModelXPCRequest.CancelSessionRequest.encode(to:)()
{
  sub_242244054();
}

void ModelXPCRequest.CancelSessionRequest.init(from:)()
{
  sub_242248BDC();
}

void sub_2422444C8()
{
  ModelXPCRequest.CancelSessionRequest.init(from:)();
}

void sub_2422444DC()
{
  ModelXPCRequest.CancelSessionRequest.encode(to:)();
}

void ModelXPCRequest.ExecuteRequest.clientData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_105_3();
  sub_2421CE528(v0, v1, type metadata accessor for ClientData);
}

void ModelXPCRequest.ExecuteRequest.modelBundleID.getter()
{
  OUTLINED_FUNCTION_83_7();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

uint64_t ModelXPCRequest.ExecuteRequest.requiredAssetIDs.getter()
{
  OUTLINED_FUNCTION_83_7();
  return sub_242272644();
}

void ModelXPCRequest.ExecuteRequest.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_83_7();
  OUTLINED_FUNCTION_133_4(v0 + *(int *)(v1 + 28), v2, &qword_2543A7848);
  OUTLINED_FUNCTION_34();
}

void ModelXPCRequest.ExecuteRequest.sessionID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_83_7();
  OUTLINED_FUNCTION_133_4(v0 + *(int *)(v1 + 32), v2, &qword_2543A7850);
  OUTLINED_FUNCTION_34();
}

uint64_t ModelXPCRequest.ExecuteRequest.taskPriority.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_83_7() + 36));
}

void ModelXPCRequest.ExecuteRequest.loggingIdentifier.getter()
{
  OUTLINED_FUNCTION_83_7();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

uint64_t ModelXPCRequest.ExecuteRequest.isStream.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_83_7() + 44));
}

void ModelXPCRequest.ExecuteRequest.Response.result.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_105_3();
  sub_2421CE528(v0, v1, type metadata accessor for InferenceProviderRequestResult);
}

uint64_t ModelXPCRequest.ExecuteRequest.Response.lockedInferenceProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ModelXPCRequest.ExecuteRequest.Response(0) + 20));
  v4 = *v3;
  v5 = v3[1];
  v7 = v3[2];
  v6 = v3[3];
  LOBYTE(v3) = *((_BYTE *)v3 + 32);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = (_BYTE)v3;
  sub_242272644();
  return OUTLINED_FUNCTION_28_5();
}

__n128 ModelXPCRequest.ExecuteRequest.Response.init(result:lockedInferenceProvider:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  __n128 *v7;
  __n128 result;
  __n128 v9;

  v9 = *a2;
  v4 = a2[1].n128_u64[0];
  v5 = a2[1].n128_u64[1];
  v6 = a2[2].n128_u8[0];
  sub_2421D11A4(a1, a3, type metadata accessor for InferenceProviderRequestResult);
  v7 = (__n128 *)(a3 + *(int *)(type metadata accessor for ModelXPCRequest.ExecuteRequest.Response(0) + 20));
  result = v9;
  *v7 = v9;
  v7[1].n128_u64[0] = v4;
  v7[1].n128_u64[1] = v5;
  v7[2].n128_u8[0] = v6;
  return result;
}

uint64_t sub_2422446F0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x746C75736572 && a2 == 0xE600000000000000;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000242284CE0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_242272C20();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2422447CC(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000017;
  else
    return 0x746C75736572;
}

uint64_t sub_242244804()
{
  char *v0;

  return sub_2422447CC(*v0);
}

uint64_t sub_24224480C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2422446F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242244830()
{
  sub_242249404();
  return sub_242272D70();
}

uint64_t sub_242244858()
{
  sub_242249404();
  return sub_242272D7C();
}

void ModelXPCRequest.ExecuteRequest.Response.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  _BYTE v9[8];
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  char v13;

  OUTLINED_FUNCTION_151_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E2670);
  OUTLINED_FUNCTION_45_3();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_22_4();
  sub_242249404();
  OUTLINED_FUNCTION_109();
  LOBYTE(v10) = 0;
  type metadata accessor for InferenceProviderRequestResult(0);
  sub_2421BBEDC(&qword_2571E1498, (void (*)(uint64_t))type metadata accessor for InferenceProviderRequestResult);
  OUTLINED_FUNCTION_147();
  if (!v0)
  {
    v6 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ModelXPCRequest.ExecuteRequest.Response(0) + 20));
    v7 = v6[1];
    v8 = *((_BYTE *)v6 + 32);
    v10 = *v6;
    v11 = v7;
    v12 = *((_OWORD *)v6 + 1);
    v13 = v8;
    v9[7] = 1;
    sub_2421E3814();
    OUTLINED_FUNCTION_147();
  }
  OUTLINED_FUNCTION_116((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_65_3();
}

void ModelXPCRequest.ExecuteRequest.Response.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  char v19;

  OUTLINED_FUNCTION_45_0();
  v5 = v4;
  v14 = v6;
  type metadata accessor for InferenceProviderRequestResult(0);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_0();
  v15 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E2680);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_117_4();
  v11 = type metadata accessor for ModelXPCRequest.ExecuteRequest.Response(v10);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_21_1();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_242249404();
  OUTLINED_FUNCTION_149_2();
  sub_242272D40();
  if (v0)
  {
    OUTLINED_FUNCTION_87();
  }
  else
  {
    LOBYTE(v16) = 0;
    sub_2421BBEDC(&qword_2571E1490, (void (*)(uint64_t))type metadata accessor for InferenceProviderRequestResult);
    OUTLINED_FUNCTION_49_2();
    sub_2421D11A4(v15, v1, type metadata accessor for InferenceProviderRequestResult);
    sub_2421E3938();
    OUTLINED_FUNCTION_49_2();
    OUTLINED_FUNCTION_25_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    v13 = v1 + *(int *)(v11 + 20);
    *(_QWORD *)v13 = v16;
    *(_QWORD *)(v13 + 8) = v17;
    *(_OWORD *)(v13 + 16) = v18;
    *(_BYTE *)(v13 + 32) = v19;
    OUTLINED_FUNCTION_114_3(v1, v14);
    OUTLINED_FUNCTION_87();
    sub_2421D3DF4(v1, type metadata accessor for ModelXPCRequest.ExecuteRequest.Response);
  }
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_16_0();
}

void sub_242244BAC()
{
  ModelXPCRequest.ExecuteRequest.Response.init(from:)();
}

void sub_242244BC0()
{
  ModelXPCRequest.ExecuteRequest.Response.encode(to:)();
}

uint64_t ModelXPCRequest.ExecuteRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_242248A24(type metadata accessor for ModelXPCRequest.ExecuteRequest, a1);
}

uint64_t sub_242244BE4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v3 = a1 == 0x6144746E65696C63 && a2 == 0xEA00000000006174;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6E75426C65646F6DLL && a2 == 0xED00004449656C64;
    if (v6 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x8000000242284030 || (sub_242272C20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 25705 && a2 == 0xE200000000000000;
      if (v7 || (sub_242272C20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000044;
        if (v8 || (sub_242272C20() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x6F6972506B736174 && a2 == 0xEC00000079746972;
          if (v9 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD000000000000011 && a2 == 0x8000000242284810 || (sub_242272C20() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0x6D61657274537369 && a2 == 0xE800000000000000)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            v11 = sub_242272C20();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 7;
            else
              return 8;
          }
        }
      }
    }
  }
}

uint64_t sub_242244F04(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_242244F3C + 4 * byte_24227CD98[a1]))(0xD000000000000010, 0x8000000242284030);
}

uint64_t sub_242244F3C()
{
  return 0x6144746E65696C63;
}

uint64_t sub_242244F58()
{
  return 0x6E75426C65646F6DLL;
}

uint64_t sub_242244F7C()
{
  return 25705;
}

uint64_t sub_242244F88()
{
  return 0x496E6F6973736573;
}

uint64_t sub_242244FA4()
{
  return 0x6F6972506B736174;
}

uint64_t sub_242244FC4(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_242244FDC()
{
  return 0x6D61657274537369;
}

uint64_t sub_242244FF4()
{
  unsigned __int8 *v0;

  return sub_242244F04(*v0);
}

uint64_t sub_242244FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242244BE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242245020()
{
  sub_242249440();
  return sub_242272D70();
}

uint64_t sub_242245048()
{
  sub_242249440();
  return sub_242272D7C();
}

void ModelXPCRequest.ExecuteRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE v6[16];

  OUTLINED_FUNCTION_45_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E2688);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_22_4();
  sub_242249440();
  OUTLINED_FUNCTION_109();
  type metadata accessor for ClientData(0);
  sub_2421BBEDC(&qword_2571E1610, (void (*)(uint64_t))type metadata accessor for ClientData);
  OUTLINED_FUNCTION_143_2();
  OUTLINED_FUNCTION_2_3();
  if (!v0)
  {
    type metadata accessor for ModelXPCRequest.ExecuteRequest(0);
    OUTLINED_FUNCTION_84_3();
    v6[15] = 2;
    OUTLINED_FUNCTION_114_0();
    OUTLINED_FUNCTION_188(&qword_2543A7978, v5, MEMORY[0x24BEE0D08], MEMORY[0x24BEE1700]);
    OUTLINED_FUNCTION_169_2();
    OUTLINED_FUNCTION_137_3();
    OUTLINED_FUNCTION_177_2(&qword_2543A7840);
    OUTLINED_FUNCTION_57_8();
    OUTLINED_FUNCTION_137_3();
    OUTLINED_FUNCTION_177_2(&qword_2571E0930);
    OUTLINED_FUNCTION_57_8();
    sub_242272B60();
    OUTLINED_FUNCTION_84_3();
    OUTLINED_FUNCTION_135_2();
  }
  OUTLINED_FUNCTION_116((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_16_0();
}

void ModelXPCRequest.ExecuteRequest.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;

  OUTLINED_FUNCTION_45_0();
  v13 = v12;
  v32 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_46_6(v16, v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v17);
  v18 = OUTLINED_FUNCTION_112_4();
  type metadata accessor for ClientData(v18);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_2_0();
  v34 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E2698);
  OUTLINED_FUNCTION_45_3();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_68();
  v36 = (int *)type metadata accessor for ModelXPCRequest.ExecuteRequest(0);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_2_0();
  v35 = v23;
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  sub_242249440();
  OUTLINED_FUNCTION_149_2();
  sub_242272D40();
  if (v10)
  {
    OUTLINED_FUNCTION_145();
  }
  else
  {
    sub_2421BBEDC(&qword_2571E1628, (void (*)(uint64_t))type metadata accessor for ClientData);
    OUTLINED_FUNCTION_143_2();
    OUTLINED_FUNCTION_49_2();
    sub_2421D11A4(v34, v35, type metadata accessor for ClientData);
    LOBYTE(a10) = 1;
    v24 = sub_242272A7C();
    v25 = (uint64_t *)(v35 + v36[5]);
    *v25 = v24;
    v25[1] = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7970);
    sub_24224947C(&qword_2571E0278, &qword_2543A7970, MEMORY[0x24BEE0D38], MEMORY[0x24BEE1720]);
    sub_242272A70();
    *(_QWORD *)(v35 + v36[6]) = a10;
    sub_24223CA30(&qword_2571E0980, &qword_2543A7848);
    OUTLINED_FUNCTION_143_2();
    OUTLINED_FUNCTION_49_2();
    sub_242213644(v11, v35 + v36[7], &qword_2543A7848);
    sub_24223CA30(&qword_2571E0970, &qword_2543A7850);
    OUTLINED_FUNCTION_143_2();
    OUTLINED_FUNCTION_49_2();
    sub_242213644(v33, v35 + v36[8], &qword_2543A7850);
    OUTLINED_FUNCTION_99_5(5);
    *(_BYTE *)(v35 + v36[9]) = sub_242272AC4();
    OUTLINED_FUNCTION_99_5(6);
    v27 = sub_242272A7C();
    v28 = (uint64_t *)(v35 + v36[10]);
    *v28 = v27;
    v28[1] = v29;
    OUTLINED_FUNCTION_99_5(7);
    v30 = sub_242272A88();
    OUTLINED_FUNCTION_42_7();
    *(_BYTE *)(v35 + v36[11]) = v30 & 1;
    OUTLINED_FUNCTION_114_3(v35, v32);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    OUTLINED_FUNCTION_167_0();
  }
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_16_0();
}

void sub_242245788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ModelXPCRequest.ExecuteRequest.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_24224579C()
{
  ModelXPCRequest.ExecuteRequest.encode(to:)();
}

void ModelXPCRequest.CancelRequest.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_105_3();
  sub_242213618(v0, v1, &qword_2543A7848);
}

void ModelXPCRequest.CancelRequest.sessionID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for ModelXPCRequest.CancelRequest(0);
  OUTLINED_FUNCTION_133_4(v0 + *(int *)(v1 + 20), v2, &qword_2543A7850);
  OUTLINED_FUNCTION_34();
}

uint64_t sub_242245808()
{
  sub_2422494D8();
  return sub_242272D70();
}

uint64_t sub_242245830()
{
  sub_2422494D8();
  return sub_242272D7C();
}

void ModelXPCRequest.CancelRequest.Response.encode(to:)()
{
  sub_242248ECC();
}

void ModelXPCRequest.CancelRequest.Response.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_16_10(a1);
  OUTLINED_FUNCTION_37_4();
}

void sub_24224589C()
{
  ModelXPCRequest.CancelRequest.Response.encode(to:)();
}

uint64_t ModelXPCRequest.CancelRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_242248A24(type metadata accessor for ModelXPCRequest.CancelRequest, a1);
}

uint64_t sub_2422458C0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_242272C20();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_242245994(char a1)
{
  if ((a1 & 1) != 0)
    return 0x496E6F6973736573;
  else
    return 25705;
}

uint64_t sub_2422459C4()
{
  char *v0;

  return sub_242245994(*v0);
}

uint64_t sub_2422459CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2422458C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2422459F0()
{
  sub_242249514();
  return sub_242272D70();
}

uint64_t sub_242245A18()
{
  sub_242249514();
  return sub_242272D7C();
}

void ModelXPCRequest.CancelRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  OUTLINED_FUNCTION_151_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E26B0);
  OUTLINED_FUNCTION_45_3();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_22_4();
  sub_242249514();
  OUTLINED_FUNCTION_109();
  v5[15] = 0;
  OUTLINED_FUNCTION_114_0();
  OUTLINED_FUNCTION_187_2(&qword_2543A7840);
  OUTLINED_FUNCTION_147();
  if (!v0)
  {
    OUTLINED_FUNCTION_126_2();
    OUTLINED_FUNCTION_185_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
    sub_24223CA30(&qword_2571E0930, &qword_2543A7850);
    OUTLINED_FUNCTION_147();
  }
  OUTLINED_FUNCTION_116((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_65_3();
}

void ModelXPCRequest.CancelRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_45_0();
  v3 = v2;
  v19 = v4;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_0();
  v21 = v6;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7848);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_0();
  v23 = v8;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2571E26C0);
  v9 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OUTLINED_FUNCTION_126_2();
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_357();
  OUTLINED_FUNCTION_119_5(v3);
  sub_242249514();
  sub_242272D40();
  if (v0)
  {
    OUTLINED_FUNCTION_145();
  }
  else
  {
    v18 = v3;
    v14 = v9;
    v15 = v21;
    sub_24223CA30(&qword_2571E0980, &qword_2543A7848);
    v16 = v23;
    OUTLINED_FUNCTION_142_3();
    sub_242213644(v16, v1, &qword_2543A7848);
    OUTLINED_FUNCTION_185_0();
    sub_24223CA30(&qword_2571E0970, &qword_2543A7850);
    OUTLINED_FUNCTION_142_3();
    OUTLINED_FUNCTION_54_5((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    sub_242213644(v15, v1 + *(int *)(v12 + 20), &qword_2543A7850);
    OUTLINED_FUNCTION_114_3(v1, v19);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
    sub_2421D3DF4(v1, type metadata accessor for ModelXPCRequest.CancelRequest);
  }
  OUTLINED_FUNCTION_93_6();
  OUTLINED_FUNCTION_16_0();
}

void sub_242245DD0()
{
  ModelXPCRequest.CancelRequest.init(from:)();
}

void sub_242245DE4()
{
  ModelXPCRequest.CancelRequest.encode(to:)();
}

void ModelXPCRequest.AcquireRequest.assertion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_105_3();
  sub_2421CE528(v0, v1, type metadata accessor for Assertion.DaemonRep);
}

uint64_t sub_242245E1C()
{
  sub_242249550();
  return sub_242272D70();
}

uint64_t sub_242245E44()
{
  sub_242249550();
  return sub_242272D7C();
}

void ModelXPCRequest.AcquireRequest.Response.encode(to:)()
{
  sub_242248ECC();
}

void ModelXPCRequest.AcquireRequest.Response.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_16_10(a1);
  OUTLINED_FUNCTION_37_4();
}

void sub_242245EB0()
{
  ModelXPCRequest.AcquireRequest.Response.encode(to:)();
}

uint64_t ModelXPCRequest.AcquireRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_242248A24(type metadata accessor for ModelXPCRequest.AcquireRequest, a1);
}

uint64_t sub_242245ED4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6F69747265737361 && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_242272C20();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_242245F60()
{
  return 0x6F69747265737361;
}

uint64_t sub_242245F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242245ED4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_242245FA8()
{
  sub_24224958C();
  return sub_242272D70();
}

uint64_t sub_242245FD0()
{
  sub_24224958C();
  return sub_242272D7C();
}

void ModelXPCRequest.AcquireRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_151_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543AA018);
  OUTLINED_FUNCTION_30_6();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_22_4();
  sub_24224958C();
  OUTLINED_FUNCTION_109();
  type metadata accessor for Assertion.DaemonRep(0);
  sub_2421BBEDC(qword_2543AA118, (void (*)(uint64_t))type metadata accessor for Assertion.DaemonRep);
  OUTLINED_FUNCTION_130_2();
  OUTLINED_FUNCTION_54_5((uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_65_3();
}

void ModelXPCRequest.AcquireRequest.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_45_0();
  v13 = v12;
  v24 = v14;
  type metadata accessor for Assertion.DaemonRep(0);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_64_8(v16, v24);
  v25 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543A7990) - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v17);
  v18 = OUTLINED_FUNCTION_40_3();
  type metadata accessor for ModelXPCRequest.AcquireRequest(v18);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_119_5(v13);
  sub_24224958C();
  OUTLINED_FUNCTION_91_7();
  if (!v10)
  {
    sub_2421BBEDC(&qword_2543A6ED8, (void (*)(uint64_t))type metadata accessor for Assertion.DaemonRep);
    OUTLINED_FUNCTION_71_7();
    OUTLINED_FUNCTION_25_0(v11, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
    sub_2421D11A4(a10, (uint64_t)v21, type metadata accessor for Assertion.DaemonRep);
    OUTLINED_FUNCTION_180_2(v22, v23, type metadata accessor for ModelXPCRequest.AcquireRequest);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  OUTLINED_FUNCTION_16_0();
}

void sub_2422461FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ModelXPCRequest.AcquireRequest.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_242246210()
{
  ModelXPCRequest.AcquireRequest.encode(to:)();
}

void ModelXPCRequest.ReleaseRequest.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_105_3();
  sub_242213618(v0, v1, (uint64_t *)&unk_2543AA0E0);
}

uint64_t sub_242246248()
{
  sub_2422495C8();
  return sub_242272D70();
}

uint64_t sub_242246270()
{
  sub_2422495C8();
  return sub_242272D7C();
}

void ModelXPCRequest.ReleaseRequest.Response.encode(to:)()
{
  sub_242248ECC();
}

void ModelXPCRequest.ReleaseRequest.Response.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_16_10(a1);
  OUTLINED_FUNCTION_37_4();
}

void sub_2422462DC()
{
  ModelXPCRequest.ReleaseRequest.Response.encode(to:)();
}

uint64_t ModelXPCRequest.ReleaseRequest.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_242248A24(type metadata accessor for ModelXPCRequest.ReleaseRequest, a1);
}

void sub_242246300(uint64_t a1, uint64_t a2)
{
  if (a1 != 25705 || a2 != 0xE200000000000000)
    OUTLINED_FUNCTION_141_2();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_34();
}

uint64_t sub_242246358()
{
  sub_242249604();
  return sub_242272D70();
}

uint64_t sub_242246380()
{
  sub_242249604();
  return sub_242272D7C();
}

void ModelXPCRequest.ReleaseRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_151_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9BE8);
  OUTLINED_FUNCTION_30_6();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_22_4();
  sub_242249604();
  OUTLINED_FUNCTION_109();
  OUTLINED_FUNCTION_114_0();
  OUTLINED_FUNCTION_187_2(&qword_2543A9D00);
  OUTLINED_FUNCTION_130_2();
  OUTLINED_FUNCTION_54_5((uint64_t)v3, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_65_3();
}

void ModelXPCRequest.ReleaseRequest.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_45_0();
  v13 = v12;
  v24 = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2543AA0E0);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_64_8(v16, v24);
  v25 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543A7998) - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v17);
  v18 = OUTLINED_FUNCTION_40_3();
  type metadata accessor for ModelXPCRequest.ReleaseRequest(v18);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_119_5(v13);
  sub_242249604();
  OUTLINED_FUNCTION_91_7();
  if (!v10)
  {
    sub_24223CA30(&qword_2543A6E60, (uint64_t *)&unk_2543AA0E0);
    OUTLINED_FUNCTION_71_7();
    OUTLINED_FUNCTION_25_0(v11, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
    sub_242213644(a10, (uint64_t)v21, (uint64_t *)&unk_2543AA0E0);
    OUTLINED_FUNCTION_180_2(v22, v23, type metadata accessor for ModelXPCRequest.ReleaseRequest);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  OUTLINED_FUNCTION_16_0();
}

void sub_2422465AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ModelXPCRequest.ReleaseRequest.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_2422465C0()
{
  ModelXPCRequest.ReleaseRequest.encode(to:)();
}

uint64_t sub_2422465D4()
{
  return 0x6F69747265737361;
}

void sub_2422465F4(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_24224699C(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_24224661C()
{
  sub_242249640();
  return sub_242272D70();
}

uint64_t sub_242246644()
{
  sub_242249640();
  return sub_242272D7C();
}

void ModelXPCRequest.FetchAssertionsRequest.Response.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  OUTLINED_FUNCTION_45_0();
  a19 = v23;
  a20 = v24;
  OUTLINED_FUNCTION_123_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E26C8);
  OUTLINED_FUNCTION_30_6();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *v20;
  OUTLINED_FUNCTION_29_8(v21);
  sub_242249640();
  OUTLINED_FUNCTION_109();
  a10 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7908);
  sub_2421E3E64();
  OUTLINED_FUNCTION_34_4();
  OUTLINED_FUNCTION_54_5((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  OUTLINED_FUNCTION_82_9();
  OUTLINED_FUNCTION_16_0();
}

void ModelXPCRequest.FetchAssertionsRequest.Response.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_61_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E26D8);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_12_9();
  sub_242249640();
  OUTLINED_FUNCTION_20_10();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7908);
    sub_2421E4124();
    OUTLINED_FUNCTION_26_8();
    OUTLINED_FUNCTION_27_9();
    OUTLINED_FUNCTION_144_3();
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_93_6();
  OUTLINED_FUNCTION_16_0();
}

void sub_2422467BC()
{
  ModelXPCRequest.FetchAssertionsRequest.Response.init(from:)();
}

#error "2422467D8: call analysis failed (funcsize=5)"

uint64_t ModelXPCRequest.FetchAssertionsRequest.request.getter()
{
  OUTLINED_FUNCTION_21_7();
  return OUTLINED_FUNCTION_22_7();
}

uint64_t sub_242246804()
{
  sub_24224967C();
  return sub_242272D70();
}

uint64_t sub_24224682C()
{
  sub_24224967C();
  return sub_242272D7C();
}

void ModelXPCRequest.FetchAssertionsRequest.encode(to:)()
{
  sub_242248ECC();
}

void ModelXPCRequest.FetchAssertionsRequest.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_16_10(a1);
  OUTLINED_FUNCTION_37_4();
}

uint64_t sub_242246898()
{
  return ModelXPCRequest.FetchAssertionsRequest.request.getter();
}

void sub_2422468AC()
{
  ModelXPCRequest.FetchAssertionsRequest.encode(to:)();
}

uint64_t sub_2422468C4()
{
  sub_2422496B8();
  return sub_242272D70();
}

uint64_t sub_2422468EC()
{
  sub_2422496B8();
  return sub_242272D7C();
}

void ModelXPCRequest.RestoreAssertionsRequest.Response.encode(to:)()
{
  sub_242248ECC();
}

void ModelXPCRequest.RestoreAssertionsRequest.Response.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_16_10(a1);
  OUTLINED_FUNCTION_37_4();
}

void sub_242246958()
{
  ModelXPCRequest.RestoreAssertionsRequest.Response.encode(to:)();
}

uint64_t ModelXPCRequest.RestoreAssertionsRequest.request.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  OUTLINED_FUNCTION_21_7();
  swift_storeEnumTagMultiPayload();
  return OUTLINED_FUNCTION_28_5();
}

void sub_24224699C(uint64_t a1, uint64_t a2)
{
  if (a1 != 0x6F69747265737361 || a2 != 0xEA0000000000736ELL)
    OUTLINED_FUNCTION_141_2();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_34();
}

uint64_t sub_242246A14()
{
  sub_2422496F4();
  return sub_242272D70();
}

uint64_t sub_242246A3C()
{
  sub_2422496F4();
  return sub_242272D7C();
}

void ModelXPCRequest.RestoreAssertionsRequest.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  OUTLINED_FUNCTION_45_0();
  a19 = v23;
  a20 = v24;
  OUTLINED_FUNCTION_123_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E2700);
  OUTLINED_FUNCTION_30_6();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *v20;
  OUTLINED_FUNCTION_29_8(v21);
  sub_2422496F4();
  OUTLINED_FUNCTION_109();
  a10 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7AF8);
  sub_242249730();
  OUTLINED_FUNCTION_34_4();
  OUTLINED_FUNCTION_54_5((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  OUTLINED_FUNCTION_82_9();
  OUTLINED_FUNCTION_16_0();
}

void ModelXPCRequest.RestoreAssertionsRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_61_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E2710);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_12_9();
  sub_2422496F4();
  OUTLINED_FUNCTION_20_10();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7AF8);
    sub_2422497AC();
    OUTLINED_FUNCTION_26_8();
    OUTLINED_FUNCTION_27_9();
    OUTLINED_FUNCTION_144_3();
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_93_6();
  OUTLINED_FUNCTION_16_0();
}

void sub_242246BB8()
{
  ModelXPCRequest.RestoreAssertionsRequest.init(from:)();
}

#error "242246BD4: call analysis failed (funcsize=5)"

ModelManagerServices::ModelXPCRequest::FetchAssetsRequest::Response __swiftcall ModelXPCRequest.FetchAssetsRequest.Response.init(assetInfo:)(ModelManagerServices::ModelXPCRequest::FetchAssetsRequest::Response assetInfo)
{
  ModelManagerServices::ModelXPCRequest::FetchAssetsRequest::Response *v1;

  v1->assetInfo._rawValue = assetInfo.assetInfo._rawValue;
  return assetInfo;
}

uint64_t sub_242246BEC()
{
  return 0x666E497465737361;
}

void sub_242246C0C(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_242246ED8(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_242246C34()
{
  sub_242249828();
  return sub_242272D70();
}

uint64_t sub_242246C5C()
{
  sub_242249828();
  return sub_242272D7C();
}

void ModelXPCRequest.FetchAssetsRequest.Response.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  OUTLINED_FUNCTION_45_0();
  a19 = v23;
  a20 = v24;
  OUTLINED_FUNCTION_123_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7130);
  OUTLINED_FUNCTION_30_6();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *v20;
  OUTLINED_FUNCTION_29_8(v21);
  sub_242249828();
  OUTLINED_FUNCTION_109();
  a10 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9F68);
  sub_242249864();
  OUTLINED_FUNCTION_34_4();
  OUTLINED_FUNCTION_54_5((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  OUTLINED_FUNCTION_82_9();
  OUTLINED_FUNCTION_16_0();
}

void ModelXPCRequest.FetchAssetsRequest.Response.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_61_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9C08);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_12_9();
  sub_242249828();
  OUTLINED_FUNCTION_20_10();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9F68);
    sub_2422498E0();
    OUTLINED_FUNCTION_26_8();
    OUTLINED_FUNCTION_27_9();
    OUTLINED_FUNCTION_144_3();
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_93_6();
  OUTLINED_FUNCTION_16_0();
}

void sub_242246DD4()
{
  ModelXPCRequest.FetchAssetsRequest.Response.init(from:)();
}

#error "242246DF0: call analysis failed (funcsize=5)"

uint64_t ModelXPCRequest.FetchAssetsRequest.request.getter()
{
  OUTLINED_FUNCTION_21_7();
  return OUTLINED_FUNCTION_22_7();
}

uint64_t sub_242246E1C()
{
  sub_24224995C();
  return sub_242272D70();
}

uint64_t sub_242246E44()
{
  sub_24224995C();
  return sub_242272D7C();
}

void ModelXPCRequest.FetchAssetsRequest.encode(to:)()
{
  sub_242248ECC();
}

void ModelXPCRequest.FetchAssetsRequest.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_16_10(a1);
  OUTLINED_FUNCTION_37_4();
}

uint64_t sub_242246EB0()
{
  return ModelXPCRequest.FetchAssetsRequest.request.getter();
}

void sub_242246EC4()
{
  ModelXPCRequest.FetchAssetsRequest.encode(to:)();
}

void sub_242246ED8(uint64_t a1, uint64_t a2)
{
  if (a1 != 0x666E497465737361 || a2 != 0xE90000000000006FLL)
    OUTLINED_FUNCTION_141_2();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_34();
}

uint64_t sub_242246F50()
{
  sub_242249998();
  return sub_242272D70();
}

uint64_t sub_242246F78()
{
  sub_242249998();
  return sub_242272D7C();
}

void ModelXPCRequest.FetchDynamicAssetsRequest.Response.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  OUTLINED_FUNCTION_45_0();
  a19 = v23;
  a20 = v24;
  OUTLINED_FUNCTION_123_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E2718);
  OUTLINED_FUNCTION_30_6();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *v20;
  OUTLINED_FUNCTION_29_8(v21);
  sub_242249998();
  OUTLINED_FUNCTION_109();
  a10 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9F68);
  sub_242249864();
  OUTLINED_FUNCTION_34_4();
  OUTLINED_FUNCTION_54_5((uint64_t)v27, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  OUTLINED_FUNCTION_82_9();
  OUTLINED_FUNCTION_16_0();
}

void ModelXPCRequest.FetchDynamicAssetsRequest.Response.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_61_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E2728);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_12_9();
  sub_242249998();
  OUTLINED_FUNCTION_20_10();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543A9F68);
    sub_2422498E0();
    OUTLINED_FUNCTION_26_8();
    OUTLINED_FUNCTION_27_9();
    OUTLINED_FUNCTION_144_3();
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_93_6();
  OUTLINED_FUNCTION_16_0();
}

void sub_2422470F0()
{
  ModelXPCRequest.FetchDynamicAssetsRequest.Response.init(from:)();
}

#error "24224710C: call analysis failed (funcsize=5)"

uint64_t ModelXPCRequest.FetchDynamicAssetsRequest.request.getter()
{
  OUTLINED_FUNCTION_21_7();
  return OUTLINED_FUNCTION_22_7();
}

uint64_t sub_242247138()
{
  sub_2422499D4();
  return sub_242272D70();
}

uint64_t sub_242247160()
{
  sub_2422499D4();
  return sub_242272D7C();
}

void ModelXPCRequest.FetchDynamicAssetsRequest.encode(to:)()
{
  sub_242248ECC();
}

void ModelXPCRequest.FetchDynamicAssetsRequest.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_16_10(a1);
  OUTLINED_FUNCTION_37_4();
}

uint64_t sub_2422471CC()
{
  return ModelXPCRequest.FetchDynamicAssetsRequest.request.getter();
}

void sub_2422471E0()
{
  ModelXPCRequest.FetchDynamicAssetsRequest.encode(to:)();
}

void ModelXPCRequest.FetchPolicyRequest.policyName.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

void ModelXPCRequest.FetchPolicyRequest.Response.policy.getter(__n128 *a1@<X8>)
{
  __n128 *v1;

  OUTLINED_FUNCTION_154_1(a1, *v1, v1[1]);
}

void __swiftcall ModelXPCRequest.FetchPolicyRequest.Response.init(policy:)(ModelManagerServices::ModelXPCRequest::FetchPolicyRequest::Response *__return_ptr retstr, ModelManagerServices::Policy_optional *policy)
{
  OUTLINED_FUNCTION_154_1((__n128 *)retstr, *(__n128 *)&policy->value.assetPolicy, *(__n128 *)&policy->value.cancelPriority);
}

uint64_t sub_24224722C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7963696C6F70 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_242272C20();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2422472A8()
{
  return 0x7963696C6F70;
}

uint64_t sub_2422472C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24224722C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2422472E8()
{
  sub_242249A10();
  return sub_242272D70();
}

uint64_t sub_242247310()
{
  sub_242249A10();
  return sub_242272D7C();
}

void ModelXPCRequest.FetchPolicyRequest.Response.encode(to:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_123_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E2740);
  OUTLINED_FUNCTION_30_6();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_100_6();
  OUTLINED_FUNCTION_29_8(v0);
  sub_242249A10();
  OUTLINED_FUNCTION_109();
  sub_2421E3EE0();
  sub_242272B0C();
  OUTLINED_FUNCTION_54_5(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_82_9();
  OUTLINED_FUNCTION_16_0();
}

void ModelXPCRequest.FetchPolicyRequest.Response.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  _OWORD v11[2];
  uint64_t v12;

  OUTLINED_FUNCTION_45_0();
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E2750);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_12_9();
  sub_242249A10();
  OUTLINED_FUNCTION_35_8();
  if (!v0)
  {
    sub_2421E41A0();
    OUTLINED_FUNCTION_145_3();
    sub_242272A70();
    OUTLINED_FUNCTION_14_0((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v9 = v12;
    v10 = v11[1];
    *(_OWORD *)v5 = v11[0];
    *(_OWORD *)(v5 + 16) = v10;
    *(_QWORD *)(v5 + 32) = v9;
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  OUTLINED_FUNCTION_146_2();
  OUTLINED_FUNCTION_16_0();
}

void sub_2422474CC()
{
  ModelXPCRequest.FetchPolicyRequest.Response.init(from:)();
}

void sub_2422474E0()
{
  ModelXPCRequest.FetchPolicyRequest.Response.encode(to:)();
}

uint64_t ModelXPCRequest.FetchPolicyRequest.request.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = v1[1];
  *a1 = v3;
  a1[1] = v4;
  OUTLINED_FUNCTION_21_7();
  swift_storeEnumTagMultiPayload();
  return OUTLINED_FUNCTION_28_5();
}

uint64_t sub_242247524(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x614E7963696C6F70 && a2 == 0xEA0000000000656DLL)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_242272C20();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2422475B0()
{
  return 0x614E7963696C6F70;
}

uint64_t sub_2422475D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242247524(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2422475F8()
{
  sub_242249A4C();
  return sub_242272D70();
}

uint64_t sub_242247620()
{
  sub_242249A4C();
  return sub_242272D7C();
}

void ModelXPCRequest.FetchPolicyRequest.encode(to:)()
{
  sub_242247EB4();
}

void ModelXPCRequest.FetchPolicyRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_61_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E2768);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_12_9();
  sub_242249A4C();
  OUTLINED_FUNCTION_20_10();
  if (!v1)
  {
    v4 = sub_242272A64();
    v6 = v5;
    OUTLINED_FUNCTION_27_9();
    *v2 = v4;
    v2[1] = v6;
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_93_6();
  OUTLINED_FUNCTION_16_0();
}

void sub_242247730()
{
  ModelXPCRequest.FetchPolicyRequest.init(from:)();
}

void sub_242247744()
{
  ModelXPCRequest.FetchPolicyRequest.encode(to:)();
}

void ModelXPCRequest.LoadAssetBundle.assetBundleIdentifier.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

uint64_t ModelXPCRequest.LoadAssetBundle.dynamicMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_242247784()
{
  sub_242249A88();
  return sub_242272D70();
}

uint64_t sub_2422477AC()
{
  sub_242249A88();
  return sub_242272D7C();
}

void ModelXPCRequest.LoadAssetBundle.Response.encode(to:)()
{
  sub_242248ECC();
}

void ModelXPCRequest.LoadAssetBundle.Response.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_16_10(a1);
  OUTLINED_FUNCTION_37_4();
}

void sub_242247818()
{
  ModelXPCRequest.LoadAssetBundle.Response.encode(to:)();
}

uint64_t ModelXPCRequest.LoadAssetBundle.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  OUTLINED_FUNCTION_21_7();
  swift_storeEnumTagMultiPayload();
  return OUTLINED_FUNCTION_88_9();
}

uint64_t sub_242247868(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000015 && a2 == 0x8000000242283790 || (sub_242272C20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4D63696D616E7964 && a2 == 0xEB0000000065646FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_242272C20();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_242247960(char a1)
{
  if ((a1 & 1) != 0)
    return 0x4D63696D616E7964;
  else
    return 0xD000000000000015;
}

uint64_t sub_2422479A4()
{
  char *v0;

  return sub_242247960(*v0);
}

uint64_t sub_2422479AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242247868(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2422479D0()
{
  sub_242249AC4();
  return sub_242272D70();
}

uint64_t sub_2422479F8()
{
  sub_242249AC4();
  return sub_242272D7C();
}

void ModelXPCRequest.LoadAssetBundle.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_45_0();
  v2 = v1;
  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571E2780) - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_242249AC4();
  OUTLINED_FUNCTION_147_2();
  sub_242272B18();
  if (!v0)
  {
    OUTLINED_FUNCTION_185_0();
    sub_242272B24();
  }
  OUTLINED_FUNCTION_116((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  OUTLINED_FUNCTION_146_2();
  OUTLINED_FUNCTION_16_0();
}

void ModelXPCRequest.LoadAssetBundle.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_45_0();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E2790);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_12_9();
  sub_242249AC4();
  OUTLINED_FUNCTION_35_8();
  if (v0)
  {
    OUTLINED_FUNCTION_87();
  }
  else
  {
    v4 = sub_242272A7C();
    v6 = v5;
    OUTLINED_FUNCTION_185_0();
    sub_242272644();
    v7 = sub_242272A88();
    OUTLINED_FUNCTION_49_6();
    *(_QWORD *)v2 = v4;
    *(_QWORD *)(v2 + 8) = v6;
    *(_BYTE *)(v2 + 16) = v7 & 1;
    OUTLINED_FUNCTION_87();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_16_0();
}

void sub_242247C40()
{
  ModelXPCRequest.LoadAssetBundle.init(from:)();
}

void sub_242247C54()
{
  ModelXPCRequest.LoadAssetBundle.encode(to:)();
}

void ModelXPCRequest.HoldAssetBundle.assetBundleIdentifier.getter()
{
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_34();
}

uint64_t sub_242247C8C()
{
  sub_242249B00();
  return sub_242272D70();
}

uint64_t sub_242247CB4()
{
  sub_242249B00();
  return sub_242272D7C();
}

void ModelXPCRequest.HoldAssetBundle.Response.encode(to:)()
{
  sub_242248ECC();
}

void ModelXPCRequest.HoldAssetBundle.Response.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_16_10(a1);
  OUTLINED_FUNCTION_37_4();
}

void sub_242247D20()
{
  ModelXPCRequest.HoldAssetBundle.Response.encode(to:)();
}

uint64_t ModelXPCRequest.HoldAssetBundle.request.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = v1[1];
  *a1 = v3;
  a1[1] = v4;
  OUTLINED_FUNCTION_21_7();
  swift_storeEnumTagMultiPayload();
  return OUTLINED_FUNCTION_28_5();
}

uint64_t sub_242247D64(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000015 && a2 == 0x8000000242283790)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_242272C20();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_242247DE8()
{
  return 0xD000000000000015;
}

uint64_t sub_242247E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242247D64(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_242247E30()
{
  sub_242249B3C();
  return sub_242272D70();
}

uint64_t sub_242247E58()
{
  sub_242249B3C();
  return sub_242272D7C();
}

void ModelXPCRequest.HoldAssetBundle.encode(to:)()
{
  sub_242247EB4();
}

void sub_242247EB4()
{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  void (*v3)(void);
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  void (*v11)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_45_0();
  v11 = v2;
  v10 = v3;
  v5 = (_QWORD *)v4;
  OUTLINED_FUNCTION_348(v4, v6);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_105();
  v8 = v0[1];
  v9 = *v0;
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  v10();
  OUTLINED_FUNCTION_147_2();
  v11(v9, v8);
  OUTLINED_FUNCTION_157_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_82_9();
  OUTLINED_FUNCTION_16_0();
}

void ModelXPCRequest.HoldAssetBundle.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_61_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E27B8);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_12_9();
  sub_242249B3C();
  OUTLINED_FUNCTION_20_10();
  if (!v1)
  {
    v4 = sub_242272A7C();
    v6 = v5;
    OUTLINED_FUNCTION_27_9();
    *v2 = v4;
    v2[1] = v6;
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v0);
  OUTLINED_FUNCTION_93_6();
  OUTLINED_FUNCTION_16_0();
}

void sub_24224801C()
{
  ModelXPCRequest.HoldAssetBundle.init(from:)();
}

void sub_242248030()
{
  ModelXPCRequest.HoldAssetBundle.encode(to:)();
}

uint64_t sub_242248048()
{
  sub_242249B78();
  return sub_242272D70();
}

uint64_t sub_242248070()
{
  sub_242249B78();
  return sub_242272D7C();
}

void ModelXPCRequest.ForceAssetVersionSwitch.Response.encode(to:)()
{
  sub_242248ECC();
}

void ModelXPCRequest.ForceAssetVersionSwitch.Response.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_16_10(a1);
  OUTLINED_FUNCTION_37_4();
}

void sub_2422480DC()
{
  ModelXPCRequest.ForceAssetVersionSwitch.Response.encode(to:)();
}

uint64_t ModelXPCRequest.ForceAssetVersionSwitch.request.getter()
{
  OUTLINED_FUNCTION_21_7();
  return OUTLINED_FUNCTION_22_7();
}

uint64_t sub_242248110()
{
  sub_242249BB4();
  return sub_242272D70();
}

uint64_t sub_242248138()
{
  sub_242249BB4();
  return sub_242272D7C();
}

void ModelXPCRequest.ForceAssetVersionSwitch.encode(to:)()
{
  sub_242248ECC();
}

void ModelXPCRequest.ForceAssetVersionSwitch.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_16_10(a1);
  OUTLINED_FUNCTION_37_4();
}

uint64_t sub_2422481A4()
{
  return ModelXPCRequest.ForceAssetVersionSwitch.request.getter();
}

void sub_2422481B8()
{
  ModelXPCRequest.ForceAssetVersionSwitch.encode(to:)();
}

__n128 ModelXPCRequest.DumpState.Response.init(stateDump:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __n128 result;
  __int128 v9;

  v2 = *(_BYTE *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_BYTE *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  v7 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v7;
  result = *(__n128 *)(a1 + 64);
  v9 = *(_OWORD *)(a1 + 80);
  *(__n128 *)(a2 + 64) = result;
  *(_OWORD *)(a2 + 80) = v9;
  *(_QWORD *)(a2 + 96) = v5;
  *(_QWORD *)(a2 + 104) = v6;
  return result;
}

uint64_t sub_242248208(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6D75446574617473 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_242272C20();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_242248294()
{
  return 0x6D75446574617473;
}

uint64_t sub_2422482B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242248208(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2422482DC()
{
  sub_242249BF0();
  return sub_242272D70();
}

uint64_t sub_242248304()
{
  sub_242249BF0();
  return sub_242272D7C();
}

void ModelXPCRequest.DumpState.Response.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_45_0();
  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543A79B8) - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_357();
  OUTLINED_FUNCTION_22_4();
  sub_242249BF0();
  OUTLINED_FUNCTION_109();
  sub_2421E3DEC();
  OUTLINED_FUNCTION_152_2();
  OUTLINED_FUNCTION_54_5(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_82_9();
  OUTLINED_FUNCTION_16_0();
}

void ModelXPCRequest.DumpState.Response.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_45_0();
  v2 = v1;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E27E0);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_12_9();
  sub_242249BF0();
  OUTLINED_FUNCTION_149_2();
  OUTLINED_FUNCTION_35_8();
  if (!v0)
  {
    sub_242249C2C();
    OUTLINED_FUNCTION_49_2();
    OUTLINED_FUNCTION_49_6();
    *(_QWORD *)v4 = v6;
    *(_BYTE *)(v4 + 8) = v7;
    *(_QWORD *)(v4 + 16) = v8;
    *(_BYTE *)(v4 + 24) = v9;
    *(_OWORD *)(v4 + 32) = v10;
    *(_OWORD *)(v4 + 48) = v11;
    *(_OWORD *)(v4 + 64) = v12;
    *(_OWORD *)(v4 + 80) = v13;
    *(_QWORD *)(v4 + 96) = v14;
    *(_QWORD *)(v4 + 104) = v15;
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v2);
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_16_0();
}

void sub_242248540()
{
  ModelXPCRequest.DumpState.Response.init(from:)();
}

void sub_242248554()
{
  ModelXPCRequest.DumpState.Response.encode(to:)();
}

uint64_t ModelXPCRequest.DumpState.request.getter()
{
  OUTLINED_FUNCTION_21_7();
  return OUTLINED_FUNCTION_22_7();
}

uint64_t sub_242248588()
{
  sub_242249C68();
  return sub_242272D70();
}

uint64_t sub_2422485B0()
{
  sub_242249C68();
  return sub_242272D7C();
}

void ModelXPCRequest.DumpState.encode(to:)()
{
  sub_242248ECC();
}

void ModelXPCRequest.DumpState.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_16_10(a1);
  OUTLINED_FUNCTION_37_4();
}

uint64_t sub_24224861C()
{
  return ModelXPCRequest.DumpState.request.getter();
}

void sub_242248630()
{
  ModelXPCRequest.DumpState.encode(to:)();
}

void ModelXPCRequest.FetchModelInstance.session.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_105_3();
  sub_242213618(v0, v1, &qword_2543A7850);
}

uint64_t ModelXPCRequest.FetchModelInstance.Response.modelInstance.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  v9 = *(_BYTE *)(v1 + 64);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 64) = v9;
  sub_242272644();
  sub_242272644();
  sub_242272644();
  return OUTLINED_FUNCTION_88_9();
}

__n128 ModelXPCRequest.FetchModelInstance.Response.init(modelInstance:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_BYTE *)(a1 + 64);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  *(_QWORD *)(a2 + 32) = v3;
  *(_QWORD *)(a2 + 40) = v4;
  result = *(__n128 *)(a1 + 48);
  *(__n128 *)(a2 + 48) = result;
  *(_BYTE *)(a2 + 64) = v5;
  return result;
}

uint64_t sub_2422486E0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x736E496C65646F6DLL && a2 == 0xED000065636E6174)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_242272C20();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24224877C()
{
  return 0x736E496C65646F6DLL;
}

uint64_t sub_2422487A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2422486E0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2422487CC()
{
  sub_242249CA4();
  return sub_242272D70();
}

uint64_t sub_2422487F4()
{
  sub_242249CA4();
  return sub_242272D7C();
}

void ModelXPCRequest.FetchModelInstance.Response.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_45_0();
  v2 = v1;
  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2571E2800) - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_100_6();
  OUTLINED_FUNCTION_29_8(v2);
  sub_242249CA4();
  OUTLINED_FUNCTION_109();
  sub_242249CE0();
  OUTLINED_FUNCTION_152_2();
  OUTLINED_FUNCTION_54_5(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_82_9();
  OUTLINED_FUNCTION_16_0();
}

void ModelXPCRequest.FetchModelInstance.Response.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  _BYTE v14[24];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  char v19;

  OUTLINED_FUNCTION_45_0();
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2571E2818);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_12_9();
  sub_242249CA4();
  OUTLINED_FUNCTION_35_8();
  if (!v0)
  {
    sub_242249D1C();
    OUTLINED_FUNCTION_145_3();
    sub_242272AAC();
    OUTLINED_FUNCTION_14_0((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    v9 = v15;
    v10 = v16;
    v11 = v17;
    v12 = v19;
    v13 = v18;
    *(_OWORD *)v5 = *(_OWORD *)&v14[8];
    *(_OWORD *)(v5 + 16) = v9;
    *(_QWORD *)(v5 + 32) = v10;
    *(_QWORD *)(v5 + 40) = v11;
    *(_OWORD *)(v5 + 48) = v13;
    *(_BYTE *)(v5 + 64) = v12;
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  OUTLINED_FUNCTION_146_2();
  OUTLINED_FUNCTION_16_0();
}

void sub_2422489EC()
{
  ModelXPCRequest.FetchModelInstance.Response.init(from:)();
}

void sub_242248A00()
{
  ModelXPCRequest.FetchModelInstance.Response.encode(to:)();
}

uint64_t ModelXPCRequest.FetchModelInstance.request.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_242248A24(type metadata accessor for ModelXPCRequest.FetchModelInstance, a1);
}

uint64_t sub_242248A24@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_2421CE528(v2, a2, a1);
  type metadata accessor for ModelXPCRequest(0);
  return OUTLINED_FUNCTION_22_7();
}

uint64_t sub_242248A64(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E6F6973736573 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_242272C20();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_242248AE8()
{
  return 0x6E6F6973736573;
}

uint64_t sub_242248B04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242248A64(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_242248B2C()
{
  sub_242249D58();
  return sub_242272D70();
}

uint64_t sub_242248B54()
{
  sub_242249D58();
  return sub_242272D7C();
}

void ModelXPCRequest.FetchModelInstance.encode(to:)()
{
  sub_242244054();
}

void ModelXPCRequest.FetchModelInstance.init(from:)()
{
  sub_242248BDC();
}

void sub_242248BDC()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  uint64_t (*v3)(_QWORD);
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_45_0();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v19 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543A7850);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_0();
  v22 = v9;
  v21 = *(_QWORD *)(OUTLINED_FUNCTION_137_3() - 8);
  OUTLINED_FUNCTION_20_2();
  MEMORY[0x24BDAC7A8](v10);
  v11 = OUTLINED_FUNCTION_40_3();
  v20 = v4;
  v12 = v4(v11);
  MEMORY[0x24BDAC7A8](v12);
  v18 = (uint64_t)&v17 - v13;
  v14 = (_QWORD *)OUTLINED_FUNCTION_62_8();
  __swift_project_boxed_opaque_existential_1(v14, v15);
  v2();
  sub_242272D40();
  if (!v0)
  {
    sub_24223CA30(&qword_2571E0970, &qword_2543A7850);
    OUTLINED_FUNCTION_49_2();
    OUTLINED_FUNCTION_157_3(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
    v16 = v18;
    sub_242213644(v22, v18, &qword_2543A7850);
    sub_2421D11A4(v16, v19, v20);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v6);
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_16_0();
}

void sub_242248D5C()
{
  ModelXPCRequest.FetchModelInstance.init(from:)();
}

void sub_242248D70()
{
  ModelXPCRequest.FetchModelInstance.encode(to:)();
}

uint64_t sub_242248D88()
{
  sub_242249D94();
  return sub_242272D70();
}

uint64_t sub_242248DB0()
{
  sub_242249D94();
  return sub_242272D7C();
}

void ModelXPCRequest.SetAssetsHaveUpdated.Response.encode(to:)()
{
  sub_242248ECC();
}

void ModelXPCRequest.SetAssetsHaveUpdated.Response.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_16_10(a1);
  OUTLINED_FUNCTION_37_4();
}

void sub_242248E1C()
{
  ModelXPCRequest.SetAssetsHaveUpdated.Response.encode(to:)();
}

uint64_t ModelXPCRequest.SetAssetsHaveUpdated.request.getter()
{
  OUTLINED_FUNCTION_21_7();
  return OUTLINED_FUNCTION_22_7();
}

uint64_t sub_242248E50()
{
  sub_242249DD0();
  return sub_242272D70();
}

uint64_t sub_242248E78()
{
  sub_242249DD0();
  return sub_242272D7C();
}

void ModelXPCRequest.SetAssetsHaveUpdated.encode(to:)()
{
  sub_242248ECC();
}

void sub_242248ECC()
{
  void (*v0)(void);
  void (*v1)(void);
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_45_0();
  v1 = v0;
  v3 = (_QWORD *)v2;
  OUTLINED_FUNCTION_348(v2, v4);
  OUTLINED_FUNCTION_69_1();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_21_1();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  v1();
  sub_242272D64();
  OUTLINED_FUNCTION_49_6();
  OUTLINED_FUNCTION_16_0();
}

void ModelXPCRequest.SetAssetsHaveUpdated.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_16_10(a1);
  OUTLINED_FUNCTION_37_4();
}

uint64_t sub_242248F70()
{
  return ModelXPCRequest.SetAssetsHaveUpdated.request.getter();
}

void sub_242248F84()
{
  ModelXPCRequest.SetAssetsHaveUpdated.encode(to:)();
}

unint64_t sub_242248F98()
{
  unint64_t result;

  result = qword_2571E2538;
  if (!qword_2571E2538)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.SetAssetsHaveUpdated, &type metadata for ModelXPCRequest.SetAssetsHaveUpdated);
    atomic_store(result, (unint64_t *)&qword_2571E2538);
  }
  return result;
}

unint64_t sub_242248FD4()
{
  unint64_t result;

  result = qword_2543A77F8;
  if (!qword_2543A77F8)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.DumpState, &type metadata for ModelXPCRequest.DumpState);
    atomic_store(result, (unint64_t *)&qword_2543A77F8);
  }
  return result;
}

unint64_t sub_242249010()
{
  unint64_t result;

  result = qword_2571E2548;
  if (!qword_2571E2548)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.ForceAssetVersionSwitch, &type metadata for ModelXPCRequest.ForceAssetVersionSwitch);
    atomic_store(result, (unint64_t *)&qword_2571E2548);
  }
  return result;
}

unint64_t sub_24224904C()
{
  unint64_t result;

  result = qword_2571E2550;
  if (!qword_2571E2550)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.HoldAssetBundle, &type metadata for ModelXPCRequest.HoldAssetBundle);
    atomic_store(result, (unint64_t *)&qword_2571E2550);
  }
  return result;
}

unint64_t sub_242249088()
{
  unint64_t result;

  result = qword_2571E2558;
  if (!qword_2571E2558)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.LoadAssetBundle, &type metadata for ModelXPCRequest.LoadAssetBundle);
    atomic_store(result, (unint64_t *)&qword_2571E2558);
  }
  return result;
}

unint64_t sub_2422490C4()
{
  unint64_t result;

  result = qword_2571E2560;
  if (!qword_2571E2560)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchPolicyRequest, &type metadata for ModelXPCRequest.FetchPolicyRequest);
    atomic_store(result, (unint64_t *)&qword_2571E2560);
  }
  return result;
}

unint64_t sub_242249100()
{
  unint64_t result;

  result = qword_2571E2568;
  if (!qword_2571E2568)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchDynamicAssetsRequest, &type metadata for ModelXPCRequest.FetchDynamicAssetsRequest);
    atomic_store(result, (unint64_t *)&qword_2571E2568);
  }
  return result;
}

unint64_t sub_24224913C()
{
  unint64_t result;

  result = qword_2543A6F00[0];
  if (!qword_2543A6F00[0])
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchAssetsRequest, &type metadata for ModelXPCRequest.FetchAssetsRequest);
    atomic_store(result, qword_2543A6F00);
  }
  return result;
}

unint64_t sub_242249178()
{
  unint64_t result;

  result = qword_2571E2570;
  if (!qword_2571E2570)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.RestoreAssertionsRequest, &type metadata for ModelXPCRequest.RestoreAssertionsRequest);
    atomic_store(result, (unint64_t *)&qword_2571E2570);
  }
  return result;
}

unint64_t sub_2422491B4()
{
  unint64_t result;

  result = qword_2571E2578;
  if (!qword_2571E2578)
  {
    result = MEMORY[0x2426A62C4](&protocol conformance descriptor for ModelXPCRequest.FetchAssertionsRequest, &type metadata for ModelXPCRequest.FetchAssertionsRequest);
    atomic_store(result, (unint64_t *)&qword_2571E2578);
  }
  return result;
}

uint64_t type metadata accessor for ModelXPCResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ModelXPCResult);
}

unint64_t sub_2422491FC()
{
  unint64_t result;

  result = qword_2571E25B8;
  if (!qword_2571E25B8)
  {
    result = MEMORY[0x2426A62C4](&unk_2422812A8, &type metadata for ModelXPCRequest.CreateSessionRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E25B8);
  }
  return result;
}

uint64_t type metadata accessor for ModelXPCRequest.CreateSessionRequest.Response(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2571E2870);
}

unint64_t sub_24224924C()
{
  unint64_t result;

  result = qword_2571E25D0;
  if (!qword_2571E25D0)
  {
    result = MEMORY[0x2426A62C4](&unk_242281258, &type metadata for ModelXPCRequest.CreateSessionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E25D0);
  }
  return result;
}

unint64_t sub_242249288()
{
  unint64_t result;

  result = qword_2571E2600;
  if (!qword_2571E2600)
  {
    result = MEMORY[0x2426A62C4](&unk_242281208, &type metadata for ModelXPCRequest.DeleteSessionRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E2600);
  }
  return result;
}

unint64_t sub_2422492C4()
{
  unint64_t result;

  result = qword_2571E2610;
  if (!qword_2571E2610)
  {
    result = MEMORY[0x2426A62C4](&unk_2422811B8, &type metadata for ModelXPCRequest.DeleteSessionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E2610);
  }
  return result;
}

unint64_t sub_242249300()
{
  unint64_t result;

  result = qword_2571E2628;
  if (!qword_2571E2628)
  {
    result = MEMORY[0x2426A62C4](&unk_242281168, &type metadata for ModelXPCRequest.PrewarmSession.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E2628);
  }
  return result;
}

unint64_t sub_24224933C()
{
  unint64_t result;

  result = qword_2571E2638;
  if (!qword_2571E2638)
  {
    result = MEMORY[0x2426A62C4](&unk_242281118, &type metadata for ModelXPCRequest.PrewarmSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E2638);
  }
  return result;
}

unint64_t sub_242249378()
{
  unint64_t result;

  result = qword_2571E2650;
  if (!qword_2571E2650)
  {
    result = MEMORY[0x2426A62C4](&unk_2422810C8, &type metadata for ModelXPCRequest.CancelSessionRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E2650);
  }
  return result;
}

unint64_t sub_2422493B4()
{
  unint64_t result;

  result = qword_2571E2660;
  if (!qword_2571E2660)
  {
    result = MEMORY[0x2426A62C4](&unk_242281078, &type metadata for ModelXPCRequest.CancelSessionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E2660);
  }
  return result;
}

uint64_t type metadata accessor for ModelXPCRequest.ExecuteRequest.Response(uint64_t a1)
{
  return sub_2421BBF24(a1, (uint64_t *)&unk_2571E2880);
}

unint64_t sub_242249404()
{
  unint64_t result;

  result = qword_2571E2678;
  if (!qword_2571E2678)
  {
    result = MEMORY[0x2426A62C4](&unk_242281028, &type metadata for ModelXPCRequest.ExecuteRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E2678);
  }
  return result;
}

unint64_t sub_242249440()
{
  unint64_t result;

  result = qword_2571E2690;
  if (!qword_2571E2690)
  {
    result = MEMORY[0x2426A62C4](&unk_242280FD8, &type metadata for ModelXPCRequest.ExecuteRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E2690);
  }
  return result;
}

uint64_t sub_24224947C(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x2426A62C4](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2422494D8()
{
  unint64_t result;

  result = qword_2571E26A8;
  if (!qword_2571E26A8)
  {
    result = MEMORY[0x2426A62C4](&unk_242280F88, &type metadata for ModelXPCRequest.CancelRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E26A8);
  }
  return result;
}

unint64_t sub_242249514()
{
  unint64_t result;

  result = qword_2571E26B8;
  if (!qword_2571E26B8)
  {
    result = MEMORY[0x2426A62C4](&unk_242280F38, &type metadata for ModelXPCRequest.CancelRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2571E26B8);
  }
  return result;
}

